// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const WINDOW_EXPR = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const IN = 57492
const SHIFT_LEFT = 57493
const SHIFT_RIGHT = 57494
const DIV = 57495
const MOD = 57496
const UNARY = 57497
const COLLATE = 57498
const BINARY = 57499
const UNDERSCORE_ARMSCII8 = 57500
const UNDERSCORE_ASCII = 57501
const UNDERSCORE_BIG5 = 57502
const UNDERSCORE_BINARY = 57503
const UNDERSCORE_CP1250 = 57504
const UNDERSCORE_CP1251 = 57505
const UNDERSCORE_CP1256 = 57506
const UNDERSCORE_CP1257 = 57507
const UNDERSCORE_CP850 = 57508
const UNDERSCORE_CP852 = 57509
const UNDERSCORE_CP866 = 57510
const UNDERSCORE_CP932 = 57511
const UNDERSCORE_DEC8 = 57512
const UNDERSCORE_EUCJPMS = 57513
const UNDERSCORE_EUCKR = 57514
const UNDERSCORE_GB18030 = 57515
const UNDERSCORE_GB2312 = 57516
const UNDERSCORE_GBK = 57517
const UNDERSCORE_GEOSTD8 = 57518
const UNDERSCORE_GREEK = 57519
const UNDERSCORE_HEBREW = 57520
const UNDERSCORE_HP8 = 57521
const UNDERSCORE_KEYBCS2 = 57522
const UNDERSCORE_KOI8R = 57523
const UNDERSCORE_KOI8U = 57524
const UNDERSCORE_LATIN1 = 57525
const UNDERSCORE_LATIN2 = 57526
const UNDERSCORE_LATIN5 = 57527
const UNDERSCORE_LATIN7 = 57528
const UNDERSCORE_MACCE = 57529
const UNDERSCORE_MACROMAN = 57530
const UNDERSCORE_SJIS = 57531
const UNDERSCORE_SWE7 = 57532
const UNDERSCORE_TIS620 = 57533
const UNDERSCORE_UCS2 = 57534
const UNDERSCORE_UJIS = 57535
const UNDERSCORE_UTF16 = 57536
const UNDERSCORE_UTF16LE = 57537
const UNDERSCORE_UTF32 = 57538
const UNDERSCORE_UTF8 = 57539
const UNDERSCORE_UTF8MB4 = 57540
const UNDERSCORE_UTF8MB3 = 57541
const INTERVAL = 57542
const JSON_EXTRACT_OP = 57543
const JSON_UNQUOTE_EXTRACT_OP = 57544
const CREATE = 57545
const ALTER = 57546
const DROP = 57547
const RENAME = 57548
const ANALYZE = 57549
const ADD = 57550
const FLUSH = 57551
const CHANGE = 57552
const MODIFY = 57553
const DEALLOCATE = 57554
const REVERT = 57555
const SCHEMA = 57556
const TABLE = 57557
const INDEX = 57558
const VIEW = 57559
const TO = 57560
const IGNORE = 57561
const IF = 57562
const PRIMARY = 57563
const COLUMN = 57564
const SPATIAL = 57565
const FULLTEXT = 57566
const KEY_BLOCK_SIZE = 57567
const CHECK = 57568
const INDEXES = 57569
const ACTION = 57570
const CASCADE = 57571
const CONSTRAINT = 57572
const FOREIGN = 57573
const NO = 57574
const REFERENCES = 57575
const RESTRICT = 57576
const SHOW = 57577
const DESCRIBE = 57578
const EXPLAIN = 57579
const DATE = 57580
const ESCAPE = 57581
const REPAIR = 57582
const OPTIMIZE = 57583
const TRUNCATE = 57584
const COALESCE = 57585
const EXCHANGE = 57586
const REBUILD = 57587
const PARTITIONING = 57588
const REMOVE = 57589
const PREPARE = 57590
const EXECUTE = 57591
const MAXVALUE = 57592
const PARTITION = 57593
const REORGANIZE = 57594
const LESS = 57595
const THAN = 57596
const PROCEDURE = 57597
const TRIGGER = 57598
const VINDEX = 57599
const VINDEXES = 57600
const DIRECTORY = 57601
const NAME = 57602
const UPGRADE = 57603
const STATUS = 57604
const VARIABLES = 57605
const WARNINGS = 57606
const CASCADED = 57607
const DEFINER = 57608
const OPTION = 57609
const SQL = 57610
const UNDEFINED = 57611
const SEQUENCE = 57612
const MERGE = 57613
const TEMPORARY = 57614
const TEMPTABLE = 57615
const INVOKER = 57616
const SECURITY = 57617
const FIRST = 57618
const AFTER = 57619
const LAST = 57620
const VITESS_MIGRATION = 57621
const CANCEL = 57622
const RETRY = 57623
const COMPLETE = 57624
const CLEANUP = 57625
const THROTTLE = 57626
const UNTHROTTLE = 57627
const EXPIRE = 57628
const RATIO = 57629
const BEGIN = 57630
const START = 57631
const TRANSACTION = 57632
const COMMIT = 57633
const ROLLBACK = 57634
const SAVEPOINT = 57635
const RELEASE = 57636
const WORK = 57637
const BIT = 57638
const TINYINT = 57639
const SMALLINT = 57640
const MEDIUMINT = 57641
const INT = 57642
const INTEGER = 57643
const BIGINT = 57644
const INTNUM = 57645
const REAL = 57646
const DOUBLE = 57647
const FLOAT_TYPE = 57648
const DECIMAL_TYPE = 57649
const NUMERIC = 57650
const TIME = 57651
const TIMESTAMP = 57652
const DATETIME = 57653
const YEAR = 57654
const CHAR = 57655
const VARCHAR = 57656
const BOOL = 57657
const CHARACTER = 57658
const VARBINARY = 57659
const NCHAR = 57660
const TEXT = 57661
const TINYTEXT = 57662
const MEDIUMTEXT = 57663
const LONGTEXT = 57664
const BLOB = 57665
const TINYBLOB = 57666
const MEDIUMBLOB = 57667
const LONGBLOB = 57668
const JSON = 57669
const JSON_SCHEMA_VALID = 57670
const JSON_SCHEMA_VALIDATION_REPORT = 57671
const ENUM = 57672
const GEOMETRY = 57673
const POINT = 57674
const LINESTRING = 57675
const POLYGON = 57676
const GEOMETRYCOLLECTION = 57677
const MULTIPOINT = 57678
const MULTILINESTRING = 57679
const MULTIPOLYGON = 57680
const ASCII = 57681
const UNICODE = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const CODE = 57689
const COLLATION = 57690
const COLUMNS = 57691
const DATABASES = 57692
const ENGINES = 57693
const EVENT = 57694
const EXTENDED = 57695
const FIELDS = 57696
const FULL = 57697
const FUNCTION = 57698
const GTID_EXECUTED = 57699
const KEYSPACES = 57700
const OPEN = 57701
const PLUGINS = 57702
const PRIVILEGES = 57703
const PROCESSLIST = 57704
const SCHEMAS = 57705
const TABLES = 57706
const TRIGGERS = 57707
const USER = 57708
const VGTID_EXECUTED = 57709
const VITESS_KEYSPACES = 57710
const VITESS_METADATA = 57711
const VITESS_MIGRATIONS = 57712
const VITESS_REPLICATION_STATUS = 57713
const VITESS_SHARDS = 57714
const VITESS_TABLETS = 57715
const VITESS_TARGET = 57716
const VSCHEMA = 57717
const VITESS_THROTTLED_APPS = 57718
const NAMES = 57719
const GLOBAL = 57720
const SESSION = 57721
const ISOLATION = 57722
const LEVEL = 57723
const READ = 57724
const WRITE = 57725
const ONLY = 57726
const REPEATABLE = 57727
const COMMITTED = 57728
const UNCOMMITTED = 57729
const SERIALIZABLE = 57730
const CURRENT_TIMESTAMP = 57731
const DATABASE = 57732
const CURRENT_DATE = 57733
const NOW = 57734
const CURRENT_TIME = 57735
const LOCALTIME = 57736
const LOCALTIMESTAMP = 57737
const CURRENT_USER = 57738
const UTC_DATE = 57739
const UTC_TIME = 57740
const UTC_TIMESTAMP = 57741
const DAY = 57742
const DAY_HOUR = 57743
const DAY_MICROSECOND = 57744
const DAY_MINUTE = 57745
const DAY_SECOND = 57746
const HOUR = 57747
const HOUR_MICROSECOND = 57748
const HOUR_MINUTE = 57749
const HOUR_SECOND = 57750
const MICROSECOND = 57751
const MINUTE = 57752
const MINUTE_MICROSECOND = 57753
const MINUTE_SECOND = 57754
const MONTH = 57755
const QUARTER = 57756
const SECOND = 57757
const SECOND_MICROSECOND = 57758
const YEAR_MONTH = 57759
const WEEK = 57760
const REPLACE = 57761
const CONVERT = 57762
const CAST = 57763
const SUBSTR = 57764
const SUBSTRING = 57765
const GROUP_CONCAT = 57766
const SEPARATOR = 57767
const TIMESTAMPADD = 57768
const TIMESTAMPDIFF = 57769
const WEIGHT_STRING = 57770
const LTRIM = 57771
const RTRIM = 57772
const TRIM = 57773
const JSON_ARRAY = 57774
const JSON_OBJECT = 57775
const JSON_QUOTE = 57776
const JSON_DEPTH = 57777
const JSON_TYPE = 57778
const JSON_LENGTH = 57779
const JSON_VALID = 57780
const JSON_ARRAY_APPEND = 57781
const JSON_ARRAY_INSERT = 57782
const JSON_INSERT = 57783
const JSON_MERGE = 57784
const JSON_MERGE_PATCH = 57785
const JSON_MERGE_PRESERVE = 57786
const JSON_REMOVE = 57787
const JSON_REPLACE = 57788
const JSON_SET = 57789
const JSON_UNQUOTE = 57790
const MATCH = 57791
const AGAINST = 57792
const BOOLEAN = 57793
const LANGUAGE = 57794
const WITH = 57795
const QUERY = 57796
const EXPANSION = 57797
const WITHOUT = 57798
const VALIDATION = 57799
const UNUSED = 57800
const ARRAY = 57801
const CUME_DIST = 57802
const DESCRIPTION = 57803
const DENSE_RANK = 57804
const EMPTY = 57805
const EXCEPT = 57806
const FIRST_VALUE = 57807
const GROUPING = 57808
const GROUPS = 57809
const JSON_TABLE = 57810
const LAG = 57811
const LAST_VALUE = 57812
const LATERAL = 57813
const LEAD = 57814
const NTH_VALUE = 57815
const NTILE = 57816
const OF = 57817
const OVER = 57818
const PERCENT_RANK = 57819
const RANK = 57820
const RECURSIVE = 57821
const ROW_NUMBER = 57822
const SYSTEM = 57823
const WINDOW = 57824
const ACTIVE = 57825
const ADMIN = 57826
const AUTOEXTEND_SIZE = 57827
const BUCKETS = 57828
const CLONE = 57829
const COLUMN_FORMAT = 57830
const COMPONENT = 57831
const DEFINITION = 57832
const ENFORCED = 57833
const ENGINE_ATTRIBUTE = 57834
const EXCLUDE = 57835
const FOLLOWING = 57836
const GEOMCOLLECTION = 57837
const GET_MASTER_PUBLIC_KEY = 57838
const HISTOGRAM = 57839
const HISTORY = 57840
const INACTIVE = 57841
const INVISIBLE = 57842
const LOCKED = 57843
const MASTER_COMPRESSION_ALGORITHMS = 57844
const MASTER_PUBLIC_KEY_PATH = 57845
const MASTER_TLS_CIPHERSUITES = 57846
const MASTER_ZSTD_COMPRESSION_LEVEL = 57847
const NESTED = 57848
const NETWORK_NAMESPACE = 57849
const NOWAIT = 57850
const NULLS = 57851
const OJ = 57852
const OLD = 57853
const OPTIONAL = 57854
const ORDINALITY = 57855
const ORGANIZATION = 57856
const OTHERS = 57857
const PARTIAL = 57858
const PATH = 57859
const PERSIST = 57860
const PERSIST_ONLY = 57861
const PRECEDING = 57862
const PRIVILEGE_CHECKS_USER = 57863
const PROCESS = 57864
const RANDOM = 57865
const REFERENCE = 57866
const REQUIRE_ROW_FORMAT = 57867
const RESOURCE = 57868
const RESPECT = 57869
const RESTART = 57870
const RETAIN = 57871
const REUSE = 57872
const ROLE = 57873
const SECONDARY = 57874
const SECONDARY_ENGINE = 57875
const SECONDARY_ENGINE_ATTRIBUTE = 57876
const SECONDARY_LOAD = 57877
const SECONDARY_UNLOAD = 57878
const SIMPLE = 57879
const SKIP = 57880
const SRID = 57881
const THREAD_PRIORITY = 57882
const TIES = 57883
const UNBOUNDED = 57884
const VCPU = 57885
const VISIBLE = 57886
const RETURNING = 57887
const FORMAT = 57888
const TREE = 57889
const VITESS = 57890
const TRADITIONAL = 57891
const LOCAL = 57892
const LOW_PRIORITY = 57893
const NO_WRITE_TO_BINLOG = 57894
const LOGS = 57895
const ERROR = 57896
const GENERAL = 57897
const HOSTS = 57898
const OPTIMIZER_COSTS = 57899
const USER_RESOURCES = 57900
const SLOW = 57901
const CHANNEL = 57902
const RELAY = 57903
const EXPORT = 57904
const CURRENT = 57905
const ROW = 57906
const ROWS = 57907
const AVG_ROW_LENGTH = 57908
const CONNECTION = 57909
const CHECKSUM = 57910
const DELAY_KEY_WRITE = 57911
const ENCRYPTION = 57912
const ENGINE = 57913
const INSERT_METHOD = 57914
const MAX_ROWS = 57915
const MIN_ROWS = 57916
const PACK_KEYS = 57917
const PASSWORD = 57918
const FIXED = 57919
const DYNAMIC = 57920
const COMPRESSED = 57921
const REDUNDANT = 57922
const COMPACT = 57923
const ROW_FORMAT = 57924
const STATS_AUTO_RECALC = 57925
const STATS_PERSISTENT = 57926
const STATS_SAMPLE_PAGES = 57927
const STORAGE = 57928
const MEMORY = 57929
const DISK = 57930
const PARTITIONS = 57931
const LINEAR = 57932
const RANGE = 57933
const LIST = 57934
const SUBPARTITION = 57935
const SUBPARTITIONS = 57936
const HASH = 57937

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"WINDOW_EXPR",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	613, 145,
	-2, 153,
	-1, 48,
	131, 153,
	172, 153,
	333, 153,
	-2, 492,
	-1, 55,
	35, 728,
	233, 728,
	244, 728,
	279, 742,
	280, 742,
	-2, 730,
	-1, 60,
	235, 755,
	-2, 753,
	-1, 114,
	232, 1342,
	-2, 119,
	-1, 116,
	1, 146,
	613, 146,
	-2, 153,
	-1, 127,
	132, 378,
	238, 378,
	-2, 481,
	-1, 146,
	131, 153,
	172, 153,
	333, 153,
	-2, 501,
	-1, 709,
	217, 1363,
	-2, 1359,
	-1, 710,
	217, 1364,
	-2, 1360,
	-1, 786,
	59, 823,
	-2, 838,
	-1, 823,
	148, 1772,
	-2, 112,
	-1, 824,
	148, 1614,
	-2, 113,
	-1, 830,
	148, 1697,
	-2, 1336,
	-1, 980,
	148, 1541,
	-2, 1333,
	-1, 1021,
	243, 41,
	248, 41,
	-2, 389,
	-1, 1104,
	1, 543,
	613, 543,
	-2, 153,
	-1, 1347,
	59, 824,
	-2, 843,
	-1, 1348,
	59, 825,
	-2, 844,
	-1, 1401,
	131, 153,
	172, 153,
	333, 153,
	-2, 428,
	-1, 1480,
	132, 378,
	238, 378,
	-2, 481,
	-1, 1489,
	243, 42,
	248, 42,
	-2, 390,
	-1, 1802,
	217, 1368,
	-2, 1362,
	-1, 1887,
	131, 153,
	172, 153,
	333, 153,
	-2, 429,
	-1, 1894,
	25, 174,
	-2, 176,
	-1, 2151,
	86, 39,
	-2, 880,
	-1, 2203,
	77, 94,
	86, 94,
	-2, 900,
	-1, 2270,
	588, 655,
	-2, 629,
	-1, 2424,
	49, 1303,
	-2, 1297,
	-1, 2659,
	86, 39,
	-2, 881,
	-1, 2697,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 872,
	-1, 3009,
	588, 655,
	-2, 643,
	-1, 3096,
	22, 1699,
	32, 1699,
	173, 1699,
	255, 1699,
	313, 1699,
	314, 1699,
	315, 1699,
	316, 1699,
	317, 1699,
	318, 1699,
	319, 1699,
	321, 1699,
	322, 1699,
	323, 1699,
	324, 1699,
	325, 1699,
	326, 1699,
	327, 1699,
	328, 1699,
	329, 1699,
	330, 1699,
	331, 1699,
	332, 1699,
	334, 1699,
	336, 1699,
	337, 1699,
	338, 1699,
	339, 1699,
	340, 1699,
	341, 1699,
	342, 1699,
	343, 1699,
	344, 1699,
	347, 1699,
	348, 1699,
	349, 1699,
	350, 1699,
	351, 1699,
	352, 1699,
	353, 1699,
	354, 1699,
	355, 1699,
	468, 1699,
	-2, 587,
}

const yyPrivate = 57344

const yyLast = 44378

var yyAct = [...]int{
	709, 3155, 3164, 718, 2798, 2990, 2799, 2800, 3129, 711,
	3094, 1884, 3130, 2366, 2773, 712, 1404, 3046, 3069, 2571,
	2477, 2638, 629, 2484, 2974, 3025, 1167, 2095, 1818, 2924,
	3, 2525, 2435, 2534, 2539, 2536, 2535, 2972, 1838, 692,
	37, 2533, 2948, 2538, 2760, 2962, 2537, 693, 779, 2438,
	1820, 186, 2827, 2554, 186, 801, 577, 186, 2139, 2492,
	1954, 612, 592, 2439, 186, 1362, 2436, 2553, 2668, 2809,
	2832, 2640, 186, 616, 2328, 2365, 2662, 690, 638, 2364,
	2425, 691, 2556, 2688, 2174, 1857, 2433, 186, 2197, 1842,
	609, 2166, 2649, 1917, 1053, 2654, 608, 2235, 2576, 1458,
	2311, 2385, 2115, 1922, 610, 1325, 2267, 1942, 2236, 592,
	2237, 2186, 592, 186, 592, 1985, 983, 783, 828, 787,
	1873, 36, 38, 1349, 802, 2158, 2141, 1796, 1116, 1764,
	1862, 155, 781, 1861, 1696, 825, 1706, 804, 1765, 1963,
	2303, 141, 1941, 1487, 1849, 1999, 1924, 1654, 2229, 1505,
	1011, 1393, 1371, 1864, 1251, 1029, 1329, 2205, 1717, 1145,
	1188, 1673, 95, 1599, 990, 987, 1494, 1022, 1016, 1019,
	96, 1583, 991, 604, 621, 1603, 1939, 1913, 1017, 1392,
	1018, 793, 1761, 1390, 1165, 1376, 1843, 1159, 91, 159,
	1453, 119, 117, 1608, 118, 1479, 124, 1100, 125, 815,
	791, 788, 789, 76, 85, 97, 1254, 2999, 2260, 1810,
	89, 3156, 1799, 1956, 1957, 1958, 1956, 2761, 2522, 599,
	2258, 2951, 2287, 2286, 1997, 1258, 98, 2717, 790, 77,
	2753, 8, 7, 87, 87, 6, 2544, 120, 1055, 809,
	3084, 814, 548, 1189, 126, 581, 90, 2952, 1676, 87,
	2319, 1070, 1071, 1072, 2320, 1075, 1076, 1077, 1078, 3023,
	1661, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1058, 795,
	984, 782, 780, 102, 1033, 600, 1009, 1660, 1568, 3022,
	1659, 2544, 822, 2542, 1658, 829, 1815, 1816, 1032, 2803,
	2803, 796, 803, 1657, 2541, 182, 120, 1008, 1007, 1006,
	1067, 1005, 188, 189, 190, 2548, 1656, 1059, 1061, 1062,
	724, 725, 726, 1639, 104, 105, 602, 108, 603, 121,
	114, 143, 87, 183, 3115, 2137, 543, 2421, 2627, 3086,
	3083, 1648, 164, 2168, 3173, 3133, 1073, 2389, 2542, 1199,
	724, 725, 726, 3128, 3146, 1356, 775, 776, 777, 778,
	1000, 995, 786, 3104, 2644, 3085, 3082, 2643, 3026, 1987,
	2548, 2281, 2975, 153, 120, 2116, 1666, 3102, 142, 2920,
	3023, 1221, 2919, 2802, 2802, 2766, 3108, 3109, 2767, 3172,
	817, 818, 1057, 1056, 2494, 2495, 3079, 2041, 3159, 161,
	3018, 162, 3103, 2929, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1230, 1229, 1231, 1232, 3004, 78, 130, 131, 152,
	151, 181, 3142, 2774, 3070, 2545, 1982, 3078, 2327, 3099,
	78, 3017, 2609, 78, 1468, 1394, 1152, 1395, 1154, 2138,
	78, 2295, 694, 80, 2473, 2294, 2318, 582, 1195, 2038,
	1004, 1187, 1109, 1110, 188, 189, 190, 2177, 1878, 1189,
	2214, 2039, 1162, 2213, 1135, 1817, 2215, 2474, 2475, 1103,
	1123, 773, 694, 1879, 1880, 1124, 1151, 1153, 772, 2845,
	2545, 1123, 2178, 1122, 1112, 1121, 1124, 1933, 2261, 1140,
	1141, 2991, 999, 87, 2226, 1001, 581, 581, 1897, 1896,
	2493, 2665, 2354, 581, 1136, 2573, 3134, 87, 1002, 2600,
	87, 1927, 2496, 2598, 1129, 590, 1647, 87, 594, 147,
	128, 154, 135, 127, 581, 148, 149, 3135, 588, 1333,
	2304, 165, 2577, 2955, 1964, 2956, 2268, 1074, 2566, 578,
	171, 136, 2290, 186, 1099, 186, 2567, 3158, 186, 2011,
	2008, 2010, 2009, 2012, 2013, 139, 137, 132, 133, 134,
	138, 1649, 1650, 1651, 1558, 1199, 2000, 129, 1161, 2005,
	2017, 1584, 2018, 1149, 2019, 1156, 140, 1150, 592, 1169,
	592, 592, 1138, 1139, 1142, 1144, 564, 1155, 1105, 1137,
	2574, 1004, 1589, 996, 1143, 592, 592, 2306, 562, 1130,
	998, 997, 2755, 2754, 2020, 2904, 1080, 1079, 1559, 2004,
	1560, 1148, 2575, 2002, 1967, 2751, 2641, 1858, 1042, 3116,
	1004, 1098, 1013, 1051, 2006, 1040, 1003, 1181, 1012, 1050,
	1049, 1048, 1013, 1336, 1233, 1047, 37, 1046, 559, 1045,
	1194, 1191, 1192, 1193, 1198, 1200, 1197, 573, 1196, 1002,
	1044, 2003, 1926, 1039, 1472, 2388, 1233, 156, 1190, 2355,
	1052, 2496, 569, 988, 1195, 1024, 988, 1133, 1025, 3174,
	986, 3140, 1024, 988, 1493, 1600, 1060, 1940, 1119, 816,
	1125, 1126, 1127, 1128, 2307, 1102, 2998, 2259, 1991, 1596,
	1175, 1063, 2515, 2289, 1466, 2987, 1465, 1464, 582, 582,
	2278, 1010, 1597, 1163, 1164, 582, 1462, 2142, 2144, 1031,
	2039, 547, 2310, 542, 2704, 2930, 2302, 3168, 2323, 2301,
	2684, 2210, 1236, 1237, 1238, 1239, 582, 2750, 1157, 721,
	721, 549, 1244, 551, 565, 150, 584, 1986, 583, 555,
	2053, 553, 557, 566, 558, 721, 552, 2173, 563, 1844,
	1845, 554, 567, 568, 571, 574, 575, 576, 572, 570,
	1323, 561, 585, 1043, 1171, 1172, 2292, 1003, 144, 2262,
	1041, 145, 1984, 186, 1234, 1235, 2128, 592, 592, 3107,
	1492, 1101, 2546, 2547, 1809, 3030, 2666, 1380, 1303, 2329,
	2715, 2716, 1318, 186, 1170, 2550, 1003, 1590, 1240, 1309,
	157, 1591, 1592, 1031, 1588, 1114, 3029, 169, 1885, 1030,
	116, 1233, 592, 1232, 2472, 3030, 186, 798, 1118, 1146,
	1339, 592, 111, 3106, 1343, 77, 3016, 592, 1184, 1182,
	783, 1340, 1183, 1160, 3012, 1337, 3029, 2546, 2547, 2801,
	2801, 1054, 1324, 2746, 1256, 2040, 1257, 825, 1609, 177,
	2550, 1570, 1569, 1571, 1572, 1573, 1194, 1191, 1192, 1193,
	1198, 1200, 1197, 2678, 1196, 1132, 1069, 1260, 81, 2143,
	2313, 2331, 2313, 2001, 1190, 2312, 1134, 2312, 86, 1593,
	1930, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 86, 112, 1120, 86, 1396, 176, 178, 179,
	180, 1185, 86, 1030, 1111, 1108, 1324, 2347, 1341, 1024,
	1027, 1028, 95, 988, 1718, 2251, 1342, 1021, 1025, 1931,
	96, 1310, 1311, 1312, 1313, 1314, 1330, 1929, 188, 189,
	190, 3166, 1698, 586, 3167, 2841, 3165, 2341, 2340, 2339,
	2333, 2722, 2337, 1718, 2332, 2067, 2330, 3120, 1585, 1204,
	1586, 2335, 1678, 1587, 579, 1203, 1204, 2480, 2721, 1117,
	2334, 1932, 1983, 1147, 1971, 1031, 1679, 1680, 1677, 580,
	1502, 1928, 1501, 1976, 1031, 1491, 98, 2336, 2338, 1976,
	1981, 1031, 1979, 186, 1042, 1338, 1040, 1454, 780, 3048,
	2980, 1327, 1610, 1361, 782, 1104, 3170, 1463, 1358, 1668,
	1670, 1671, 2481, 2045, 2046, 2047, 3175, 829, 1391, 3136,
	1980, 2705, 1356, 1699, 1031, 1381, 1978, 1386, 1387, 1722,
	592, 2912, 1489, 1723, 1669, 2911, 2780, 2483, 2781, 1578,
	1498, 3049, 2981, 2902, 1500, 2791, 2790, 1503, 1504, 592,
	592, 2478, 592, 2729, 592, 592, 2728, 592, 592, 592,
	592, 592, 592, 724, 725, 726, 2718, 2523, 2494, 2495,
	1576, 1534, 1565, 592, 2511, 1030, 2479, 186, 1539, 1344,
	2233, 1024, 1027, 1028, 1030, 988, 1068, 2232, 1936, 1021,
	1025, 1030, 1579, 1563, 186, 1562, 1034, 1024, 1365, 1561,
	3176, 1036, 1577, 1551, 1545, 1037, 1035, 592, 2485, 186,
	1020, 1542, 1541, 1469, 1470, 1471, 1499, 1540, 1514, 1205,
	1598, 3137, 3007, 592, 1030, 186, 1038, 820, 3006, 1034,
	1024, 1205, 2984, 1575, 1036, 1564, 1747, 2983, 1037, 1035,
	2076, 186, 2982, 1533, 1553, 1535, 1485, 1366, 186, 1225,
	1226, 1227, 1228, 1230, 1229, 1231, 1232, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 592, 1478, 1227, 1228,
	1230, 1229, 1231, 1232, 2493, 2907, 2892, 2891, 1543, 1544,
	592, 592, 2840, 1497, 1549, 1550, 2496, 2838, 2787, 1536,
	2726, 2711, 2578, 1495, 1495, 188, 189, 190, 186, 1507,
	2514, 1508, 1461, 1510, 1512, 1496, 2513, 1516, 1518, 1520,
	1522, 1524, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1207,
	1475, 1476, 1488, 1474, 1739, 1728, 1729, 1730, 1731, 1741,
	1732, 1733, 1734, 1746, 1742, 1735, 1736, 1743, 1744, 1745,
	1737, 1738, 1740, 1605, 1697, 1205, 2242, 2230, 1703, 1703,
	1202, 1320, 1203, 1204, 1701, 1701, 1995, 1709, 1700, 1704,
	1537, 1994, 1202, 1841, 1203, 1204, 1823, 1640, 1613, 1606,
	1574, 1566, 592, 592, 1674, 1617, 1205, 1619, 1620, 1621,
	1622, 1205, 1556, 1552, 1626, 1601, 1548, 1547, 1546, 1367,
	1205, 1611, 1612, 1158, 1467, 2482, 1638, 2570, 1369, 1174,
	1205, 2164, 3157, 2206, 120, 1616, 1007, 1006, 2606, 1005,
	1792, 1356, 1623, 1624, 1625, 1672, 3124, 1356, 1205, 1681,
	592, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1682, 1615, 2937, 1719, 2164, 3076,
	1800, 2936, 186, 188, 189, 190, 2896, 592, 2895, 2397,
	1636, 188, 189, 190, 1637, 2712, 101, 1205, 2940, 1356,
	2164, 3056, 2772, 1368, 1644, 1645, 2207, 100, 2269, 99,
	719, 186, 2247, 1356, 592, 2209, 1202, 94, 1203, 1204,
	2434, 101, 2604, 1356, 186, 92, 2349, 1893, 592, 1762,
	2677, 1793, 100, 186, 99, 186, 93, 186, 186, 592,
	2096, 1675, 592, 94, 2164, 3052, 1828, 1202, 1829, 1203,
	1204, 2677, 1202, 592, 1203, 1204, 87, 1800, 188, 189,
	190, 1202, 2217, 1203, 1204, 825, 1894, 1205, 825, 3039,
	1356, 1202, 1802, 1203, 1204, 1356, 1356, 2084, 100, 2123,
	1356, 2486, 1812, 1804, 1805, 2490, 2164, 3000, 1762, 1202,
	1356, 1203, 1204, 2489, 2679, 188, 189, 190, 95, 1952,
	2182, 1356, 1201, 1205, 1705, 2467, 96, 3044, 592, 1205,
	1710, 1711, 2764, 2997, 2039, 1943, 1944, 1945, 95, 1355,
	1947, 1949, 1951, 1834, 2056, 1860, 96, 2491, 1202, 1801,
	1203, 1204, 2487, 3011, 1205, 592, 2164, 2488, 2623, 1356,
	1205, 592, 1498, 2915, 1356, 1498, 2054, 1498, 710, 1802,
	1356, 2164, 2903, 1975, 2183, 1903, 1904, 1905, 1906, 1898,
	2183, 1899, 1900, 1901, 1902, 1822, 2650, 1803, 2623, 1889,
	1806, 1807, 188, 189, 190, 2502, 1950, 1909, 1910, 1911,
	1912, 2409, 2058, 1888, 1977, 1871, 592, 2175, 1697, 1877,
	1965, 2057, 1836, 2175, 1697, 1697, 1919, 795, 1202, 187,
	1203, 1204, 187, 2764, 1356, 187, 1855, 2164, 2762, 1833,
	593, 2054, 187, 1853, 1925, 2089, 2104, 1356, 2073, 1876,
	187, 1892, 1875, 3138, 2072, 829, 1976, 1356, 829, 2682,
	1356, 1891, 186, 1890, 1202, 187, 1203, 1204, 3112, 186,
	1202, 1976, 1203, 1204, 1976, 2149, 186, 186, 722, 723,
	186, 1962, 186, 1935, 1702, 1201, 1356, 593, 2183, 186,
	593, 187, 593, 1205, 2677, 1202, 186, 1203, 1204, 1920,
	1959, 1202, 1848, 1203, 1204, 2089, 1356, 1915, 1916, 1360,
	1934, 2504, 2503, 1938, 1813, 1970, 1850, 1851, 1973, 1033,
	1974, 1652, 186, 1595, 1946, 2500, 2501, 592, 1388, 1495,
	2500, 2499, 1988, 1032, 1920, 1969, 1968, 2183, 1356, 1015,
	1972, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1229,
	1231, 1232, 1990, 1205, 2054, 1356, 1989, 1205, 1992, 1993,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 188, 189, 190, 1674, 2039, 2288, 2393, 1998,
	1223, 1224, 1225, 1226, 1227, 1228, 1230, 1229, 1231, 1232,
	2030, 2031, 785, 1205, 1202, 2033, 1203, 1204, 1205, 719,
	1221, 1014, 2322, 2063, 2034, 3059, 2995, 2206, 1205, 2926,
	1356, 2023, 1457, 2272, 1363, 1205, 1221, 2265, 2266, 2049,
	1217, 2051, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1230, 1229, 1231, 1232, 2050, 2893, 1219, 1220, 1216, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1230, 1229, 1231, 1232,
	2164, 2163, 1205, 2852, 1202, 2745, 1203, 1204, 1202, 2742,
	1203, 1204, 1205, 2037, 186, 188, 189, 190, 1205, 87,
	2207, 1791, 186, 1205, 2572, 2062, 2724, 592, 1703, 2039,
	1221, 2900, 2052, 592, 1701, 2160, 2134, 2615, 2148, 2048,
	2614, 2747, 719, 1459, 592, 1205, 2238, 2699, 1918, 1205,
	94, 2568, 1675, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1230, 1229, 1231, 1232, 2528, 2152, 2524, 186, 1457, 1456,
	2273, 186, 2146, 1914, 1202, 2066, 1203, 1204, 1908, 1202,
	1907, 1203, 1204, 1205, 2625, 1581, 2216, 1221, 2179, 1202,
	1490, 1203, 1204, 2239, 2621, 1486, 1202, 37, 1203, 1204,
	2612, 1455, 1205, 1402, 1401, 2611, 2199, 2054, 113, 2082,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1229, 1231,
	1232, 188, 189, 190, 2526, 1948, 2064, 2121, 1802, 2239,
	92, 2165, 2234, 1202, 592, 1203, 1204, 94, 1205, 1103,
	186, 93, 2927, 1202, 1933, 1203, 1204, 186, 1826, 1202,
	3152, 1203, 1204, 1642, 1202, 2695, 1203, 1204, 2161, 2689,
	2690, 592, 3150, 3131, 3021, 2113, 2945, 1330, 592, 2692,
	2136, 2520, 1498, 1498, 3118, 2519, 1202, 592, 1203, 1204,
	1202, 2518, 1203, 1204, 2112, 1801, 2434, 2252, 2198, 2227,
	2228, 2734, 2285, 2024, 2694, 1356, 2453, 2730, 2452, 2264,
	1529, 2172, 2284, 186, 186, 186, 186, 186, 1205, 3077,
	2125, 2126, 2162, 1526, 1202, 1643, 1203, 1204, 2204, 2220,
	2111, 2241, 2157, 2456, 186, 186, 2244, 2245, 2457, 2211,
	2208, 1925, 1840, 1202, 1364, 1203, 1204, 2218, 2735, 2736,
	186, 187, 2458, 187, 2192, 2193, 187, 2731, 2732, 2733,
	1530, 1531, 1532, 1832, 2426, 2428, 2683, 2231, 2221, 1697,
	1527, 1528, 2454, 2429, 2979, 2414, 2413, 2455, 2831, 1202,
	2240, 1203, 1204, 2822, 2833, 2821, 593, 2670, 593, 593,
	2673, 799, 2248, 2423, 2249, 2669, 2253, 2254, 2255, 800,
	2110, 1594, 771, 593, 593, 2498, 2283, 2243, 1703, 2224,
	1703, 1478, 1065, 1703, 1701, 1714, 1701, 1064, 1703, 1701,
	1354, 1350, 2586, 2346, 1701, 2274, 2275, 592, 2238, 1715,
	92, 2316, 2394, 2820, 2398, 1351, 92, 94, 2282, 592,
	1205, 93, 2342, 1173, 2280, 94, 2279, 93, 121, 1202,
	2675, 1203, 1204, 1850, 1851, 3162, 592, 1205, 2516, 2324,
	1830, 1831, 1353, 2027, 1352, 2403, 2305, 3091, 2325, 2996,
	2922, 186, 2497, 2196, 1837, 592, 99, 2016, 2367, 2412,
	2367, 2308, 2015, 2367, 592, 2372, 2369, 2411, 2367, 2014,
	2373, 592, 592, 2655, 186, 186, 186, 186, 186, 2314,
	2043, 2326, 2315, 2343, 807, 808, 186, 2967, 2966, 2839,
	2403, 186, 2837, 2395, 186, 2399, 186, 1205, 2836, 186,
	186, 186, 2109, 2829, 101, 2446, 2379, 2380, 2381, 2382,
	787, 2390, 2391, 2392, 2396, 100, 2440, 99, 2360, 2108,
	2431, 2808, 2466, 2743, 2674, 2374, 2375, 2376, 2377, 2378,
	1343, 2199, 2672, 2416, 2512, 2529, 1960, 1473, 806, 2417,
	100, 2437, 2828, 186, 1205, 2402, 2437, 2663, 1357, 1359,
	2175, 1202, 1205, 1203, 1204, 2812, 592, 2404, 3154, 3153,
	3153, 187, 1205, 101, 592, 593, 593, 2160, 1202, 186,
	1203, 1204, 1205, 2415, 100, 2418, 2356, 1205, 2074, 2107,
	186, 187, 1205, 1824, 2468, 2408, 1382, 2469, 2405, 2406,
	2407, 1373, 788, 789, 106, 107, 2459, 3154, 186, 2985,
	593, 186, 2552, 2710, 187, 2448, 2449, 2447, 2451, 593,
	2450, 2587, 2463, 2464, 95, 593, 1205, 797, 103, 1605,
	2470, 2445, 96, 2509, 2510, 88, 2106, 1, 1202, 2714,
	1203, 1204, 2531, 3101, 2105, 560, 2508, 2507, 101, 1205,
	2506, 2476, 1814, 1328, 2099, 3132, 1205, 3097, 2560, 100,
	3098, 99, 2559, 1567, 2098, 1557, 2775, 1763, 2923, 2097,
	94, 2532, 1966, 1205, 2094, 2741, 2551, 1923, 1023, 146,
	1925, 1886, 2530, 1887, 592, 1202, 3072, 1203, 1204, 2563,
	2620, 110, 981, 1202, 1205, 1203, 1204, 109, 1026, 1131,
	1961, 2765, 2225, 1202, 2579, 1203, 1204, 2582, 2093, 2581,
	592, 186, 1895, 1202, 1408, 1203, 1204, 1406, 1202, 2589,
	1203, 1204, 1407, 1202, 1405, 1203, 1204, 2596, 2590, 2593,
	2594, 2092, 2595, 1410, 1409, 2597, 2075, 2599, 2090, 2601,
	2626, 1646, 589, 2584, 2585, 2188, 2191, 2192, 2193, 2189,
	2195, 2190, 2194, 184, 1397, 2086, 1374, 1202, 1066, 1203,
	1204, 550, 2505, 2188, 2191, 2192, 2193, 2189, 186, 2190,
	2194, 1996, 556, 2689, 2690, 1245, 2085, 1641, 2410, 2212,
	1202, 187, 1203, 1204, 826, 819, 2713, 1202, 2642, 1203,
	1204, 2651, 2652, 1825, 2150, 2442, 2667, 186, 2422, 2648,
	2661, 2424, 2656, 2657, 1202, 2671, 1203, 1204, 2167, 2427,
	2420, 2978, 2664, 2830, 3057, 2222, 186, 1370, 593, 186,
	186, 186, 2676, 2065, 1716, 1202, 2696, 1203, 1204, 592,
	592, 2686, 1865, 1667, 2693, 614, 613, 593, 593, 611,
	593, 2153, 593, 593, 2176, 593, 593, 593, 593, 593,
	593, 1208, 2700, 2702, 2703, 713, 2701, 2140, 2560, 2708,
	1383, 593, 2559, 2709, 2187, 187, 2185, 2748, 2749, 2184,
	2025, 1872, 2691, 592, 592, 592, 592, 2769, 2770, 1354,
	1350, 2687, 187, 3093, 1867, 2719, 2720, 1863, 2159, 2725,
	622, 2727, 615, 607, 1351, 593, 2707, 187, 2558, 3028,
	2291, 2569, 2293, 2223, 2565, 1186, 1346, 601, 994, 1713,
	2928, 593, 3002, 187, 2042, 2608, 1345, 1726, 1727, 1347,
	1348, 1353, 3009, 1352, 2540, 1703, 2759, 1703, 2521, 187,
	2771, 1701, 2270, 1701, 1953, 63, 187, 2752, 41, 2973,
	3045, 2756, 2757, 2758, 682, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 593, 679, 2810, 2811, 2386, 186,
	2387, 2949, 678, 3027, 2786, 2950, 1754, 596, 593, 593,
	3114, 1177, 813, 32, 31, 30, 29, 28, 23, 22,
	21, 20, 2782, 592, 2783, 592, 187, 2825, 19, 2807,
	25, 18, 17, 16, 2543, 2367, 3127, 2367, 3161, 2795,
	115, 2794, 2804, 1703, 50, 47, 45, 123, 122, 1701,
	48, 2806, 2846, 2854, 44, 1106, 2813, 2814, 42, 27,
	26, 37, 15, 14, 13, 1720, 12, 2440, 11, 1721,
	10, 2440, 9, 2848, 5, 2850, 2835, 2834, 2826, 4,
	35, 34, 33, 2844, 2842, 1180, 592, 24, 2, 2257,
	1955, 2437, 0, 0, 0, 0, 0, 0, 0, 186,
	593, 593, 592, 0, 0, 0, 0, 1789, 0, 0,
	0, 0, 2858, 0, 0, 592, 0, 0, 0, 0,
	0, 0, 0, 0, 2901, 2855, 2856, 0, 0, 0,
	0, 0, 0, 0, 1357, 1811, 0, 0, 0, 2905,
	0, 2925, 0, 2897, 2899, 2942, 2943, 1703, 593, 2913,
	2898, 0, 0, 1701, 0, 0, 0, 2946, 2918, 0,
	592, 0, 2917, 0, 592, 592, 0, 0, 1835, 0,
	187, 0, 0, 0, 0, 593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2908, 2909,
	2910, 0, 0, 592, 1331, 2947, 0, 0, 0, 187,
	0, 0, 593, 0, 0, 0, 0, 0, 0, 2968,
	2969, 0, 187, 0, 0, 0, 593, 0, 0, 2971,
	0, 187, 0, 187, 2970, 187, 187, 593, 0, 0,
	593, 2989, 0, 2440, 592, 2986, 0, 0, 0, 0,
	0, 593, 0, 0, 2992, 0, 2988, 0, 545, 186,
	0, 2954, 0, 0, 2953, 2957, 2958, 2959, 595, 2960,
	2961, 0, 0, 0, 0, 0, 774, 592, 186, 0,
	1937, 0, 2994, 0, 0, 2977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3001, 3010, 0, 0, 593, 0, 0, 3005,
	3008, 0, 37, 0, 0, 3013, 3031, 989, 0, 0,
	0, 0, 0, 3032, 0, 0, 592, 182, 0, 0,
	0, 0, 0, 593, 0, 0, 0, 0, 592, 593,
	3024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 0, 0, 0, 0, 0, 3043,
	0, 0, 592, 592, 164, 0, 0, 0, 3050, 0,
	0, 0, 0, 0, 0, 0, 0, 3058, 0, 0,
	0, 3060, 0, 0, 593, 0, 37, 0, 2925, 3073,
	592, 3071, 3031, 3063, 3068, 3065, 3064, 3080, 3055, 3032,
	0, 3062, 3081, 3067, 186, 592, 3066, 3033, 0, 2437,
	3034, 3035, 3036, 3037, 3038, 0, 0, 0, 0, 3089,
	0, 161, 0, 162, 0, 0, 0, 3110, 3100, 0,
	187, 3105, 3092, 0, 0, 0, 0, 187, 0, 0,
	0, 592, 0, 181, 187, 187, 3117, 0, 187, 0,
	187, 0, 0, 0, 0, 0, 0, 187, 3121, 0,
	0, 0, 3126, 592, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 592, 0, 592, 0, 0, 0, 0,
	0, 1703, 3141, 0, 0, 3145, 3031, 1701, 3147, 3151,
	187, 3148, 3149, 3032, 3144, 593, 3143, 0, 0, 0,
	0, 3139, 0, 0, 3163, 0, 0, 3169, 0, 3171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2055, 0, 1703, 0, 2059,
	2060, 2061, 3178, 1701, 3179, 3180, 2943, 3177, 0, 2069,
	0, 0, 2070, 2071, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 2077,
	2078, 2079, 2080, 2081, 0, 2083, 0, 0, 0, 0,
	0, 2087, 0, 2088, 0, 0, 0, 2091, 0, 0,
	0, 0, 0, 0, 0, 2100, 2101, 2102, 2103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2114, 0,
	2117, 2118, 2119, 2120, 0, 2122, 2124, 0, 0, 0,
	0, 0, 0, 2129, 2130, 2131, 2132, 2133, 0, 0,
	1835, 0, 2135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 593, 0, 0, 0, 156,
	0, 593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 1107, 0, 1113,
	0, 0, 1115, 0, 0, 0, 0, 2263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 164, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	0, 0, 0, 0, 153, 0, 593, 0, 0, 142,
	0, 0, 157, 0, 0, 593, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 187, 187, 187, 187, 0, 0, 1481, 1482,
	152, 151, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 187, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 2353, 0, 0, 0, 182,
	0, 0, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 2368, 0, 0, 0, 176,
	178, 179, 180, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 2400, 2401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 1483, 154, 0, 1480, 593, 148, 149, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 593, 2219, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 593, 162, 0, 0, 0, 0,
	2443, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 593, 0, 181, 0, 2461, 2462, 0,
	1385, 0, 593, 0, 0, 0, 0, 0, 0, 593,
	593, 0, 187, 187, 187, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 187,
	0, 0, 187, 0, 187, 0, 0, 187, 187, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 165, 0, 187, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 187, 0,
	0, 2588, 0, 0, 0, 0, 0, 0, 2592, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 187,
	0, 0, 2602, 2603, 2605, 2607, 0, 0, 0, 0,
	0, 0, 2613, 0, 0, 0, 150, 2617, 2618, 2619,
	0, 0, 0, 0, 2622, 0, 0, 1403, 0, 0,
	2624, 0, 0, 2628, 2629, 2630, 2631, 2632, 2633, 2634,
	2635, 2636, 2637, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 145, 2645, 2646, 2647, 0, 0, 0, 0,
	3125, 0, 2653, 0, 0, 0, 0, 0, 2658, 0,
	1425, 0, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 593, 187,
	0, 2680, 2681, 0, 0, 2685, 0, 0, 0, 0,
	0, 1538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2697, 2698, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 1614, 0, 0, 176, 178,
	179, 180, 1618, 0, 0, 187, 0, 0, 0, 0,
	720, 79, 0, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	0, 0, 0, 0, 187, 0, 0, 187, 187, 187,
	0, 1413, 0, 2763, 0, 0, 0, 593, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1655, 0, 157, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1425, 0, 0, 0, 0, 0, 0,
	0, 593, 593, 593, 593, 0, 0, 0, 784, 0,
	79, 0, 0, 0, 0, 0, 2792, 0, 0, 0,
	2793, 0, 0, 177, 0, 0, 2797, 0, 784, 0,
	0, 0, 0, 1426, 0, 0, 0, 0, 2805, 0,
	0, 0, 0, 0, 993, 0, 0, 0, 0, 2815,
	0, 2817, 2818, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 0, 0,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 683, 0,
	0, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 0, 1448,
	1449, 1450, 1451, 1452, 1427, 1428, 1429, 1430, 1411, 1412,
	1440, 593, 1414, 593, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 0, 0, 1424, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	591, 0, 0, 0, 0, 0, 0, 0, 1852, 2914,
	0, 0, 0, 0, 0, 0, 0, 1856, 2921, 1859,
	0, 0, 1655, 0, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2931, 2932, 2933, 187, 2934, 2935,
	593, 0, 0, 0, 2938, 0, 2939, 827, 2941, 2944,
	985, 0, 992, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 0, 2963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1441, 0, 593, 0,
	0, 0, 593, 593, 0, 0, 0, 2993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1439, 1442, 1443, 1444, 1445, 1446,
	1447, 593, 1448, 1449, 1450, 1451, 1452, 1427, 1428, 1429,
	1430, 1411, 1412, 1440, 0, 1414, 0, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 0, 0, 1424, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 0, 0, 0,
	0, 0, 593, 0, 0, 0, 0, 0, 3015, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 3020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 593, 187, 0, 0, 0,
	0, 0, 3040, 0, 0, 0, 1655, 0, 3041, 3042,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	2021, 2022, 0, 0, 2026, 0, 0, 0, 0, 0,
	3053, 0, 0, 2029, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 182,
	0, 0, 0, 0, 0, 0, 2035, 0, 0, 1441,
	1477, 0, 0, 0, 0, 0, 0, 684, 0, 0,
	593, 593, 0, 121, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 3113, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3119, 0, 187, 593, 0, 0, 0, 153, 185, 0,
	0, 546, 142, 3123, 587, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 0, 0, 0, 1166, 546,
	1166, 1166, 0, 161, 0, 162, 0, 0, 0, 593,
	0, 0, 0, 0, 794, 0, 0, 79, 0, 0,
	0, 1481, 1482, 152, 151, 181, 0, 0, 0, 0,
	812, 593, 812, 0, 3160, 0, 0, 0, 0, 0,
	546, 593, 0, 593, 784, 1241, 1242, 1243, 0, 1246,
	0, 1247, 1248, 1249, 1250, 0, 1253, 1255, 1255, 0,
	1255, 1259, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 0, 1304, 1305, 1306, 1307,
	1308, 0, 0, 0, 0, 0, 1259, 1259, 1259, 1259,
	1259, 0, 0, 147, 1483, 154, 0, 1480, 0, 148,
	149, 0, 0, 722, 723, 165, 0, 0, 0, 1702,
	0, 0, 1326, 0, 171, 2203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 827, 0, 827, 827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1176, 1178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 0, 0, 0, 0,
	0, 784, 0, 0, 0, 784, 0, 0, 0, 0,
	0, 784, 0, 0, 2250, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2296, 2297, 2298,
	2299, 2300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 1655, 2309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1378, 0, 0, 0, 0, 0, 0, 0, 0, 827,
	0, 0, 0, 0, 157, 1398, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 546, 0, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 0, 0,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 2860, 2862, 2861, 2871, 2872, 2873, 2874, 2875, 2876,
	2877, 644, 0, 0, 0, 0, 0, 2517, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 0, 0, 0,
	0, 0, 2580, 0, 0, 2583, 0, 0, 0, 0,
	1166, 1166, 0, 0, 0, 0, 0, 0, 985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1321, 0, 0, 0, 0, 0, 1506, 1506, 0,
	1506, 0, 1506, 1506, 0, 1515, 1506, 1506, 1506, 1506,
	1506, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	1321, 985, 0, 0, 0, 0, 1322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2660, 0, 0, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 0, 0, 78, 39, 40, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	794, 0, 0, 0, 84, 0, 0, 0, 43, 69,
	70, 0, 67, 71, 827, 0, 0, 0, 0, 0,
	0, 68, 0, 546, 0, 0, 0, 0, 827, 827,
	0, 0, 2866, 2867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	56, 2723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	2737, 0, 0, 2738, 2739, 2740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 695, 0, 639, 699, 641, 696, 697,
	0, 637, 640, 698, 0, 0, 0, 0, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	1724, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 643, 2859, 2863, 2864, 2865, 2868, 2869, 2870, 2878,
	2880, 667, 2879, 2881, 2882, 2883, 2886, 2887, 2888, 2889,
	2884, 2885, 2890, 0, 0, 0, 0, 0, 993, 0,
	0, 0, 827, 0, 700, 0, 701, 0, 1808, 705,
	0, 0, 0, 707, 706, 0, 708, 681, 680, 0,
	0, 702, 703, 0, 704, 0, 0, 0, 0, 0,
	546, 993, 0, 0, 0, 1827, 46, 49, 52, 51,
	54, 0, 66, 0, 0, 75, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 55, 83,
	82, 0, 0, 64, 65, 53, 1378, 0, 0, 827,
	1322, 73, 74, 0, 0, 0, 0, 827, 0, 0,
	827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 985, 0, 0, 0, 0, 0, 1322, 0, 1322,
	0, 0, 0, 0, 546, 0, 0, 0, 0, 0,
	0, 57, 58, 0, 59, 60, 61, 62, 0, 0,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 992, 0, 0, 0,
	0, 0, 1604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 0, 985, 0, 546, 0, 0, 0, 992,
	0, 0, 0, 0, 1627, 1628, 546, 546, 546, 546,
	546, 546, 546, 0, 0, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 985, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 812,
	0, 0, 0, 0, 0, 812, 812, 0, 0, 0,
	0, 1322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2127, 0, 0, 0, 2036, 0, 0, 0, 0,
	812, 1604, 812, 812, 812, 812, 812, 0, 0, 0,
	2145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 811, 0, 0, 0, 0, 0, 0, 784, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 812, 0, 0, 0, 2180, 2181,
	0, 0, 0, 0, 0, 0, 0, 2200, 794, 2201,
	2202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 0, 0, 0, 1604, 0,
	546, 0, 546, 0, 546, 1874, 0, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 714, 722, 723, 724, 725, 726, 715, 717, 0,
	0, 805, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 727, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2277, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 2154, 2561, 2562, 0, 0, 0, 0, 0, 0,
	0, 0, 2169, 0, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 2246, 0, 0, 0, 546, 0, 0, 0,
	0, 0, 0, 546, 546, 0, 0, 546, 0, 2028,
	0, 0, 0, 0, 0, 0, 546, 2383, 0, 1839,
	0, 0, 0, 546, 0, 0, 2271, 0, 0, 0,
	0, 0, 0, 0, 0, 2276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2441,
	0, 79, 0, 0, 1866, 1866, 1866, 1866, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2200, 784, 0, 0, 0, 1866, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 695, 0, 0, 699,
	0, 696, 697, 0, 0, 0, 698, 0, 0, 0,
	0, 0, 0, 1321, 0, 1321, 0, 0, 1321, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 2549, 0, 0, 0, 2384, 0, 0, 0, 0,
	0, 2557, 0, 0, 0, 0, 0, 827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 812, 812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1604, 0, 0,
	0, 546, 0, 2419, 0, 0, 0, 0, 2591, 1554,
	0, 0, 827, 0, 0, 0, 1321, 0, 0, 2444,
	1506, 1321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 985, 0, 0, 1321, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 1206, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 0, 0,
	0, 0, 0, 0, 2256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1252, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 546, 546, 546, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2639, 0, 0, 0, 0, 546, 0, 0,
	0, 0, 605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 812, 0, 0, 0, 0, 0, 2419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1322, 0, 1322, 0, 0, 1322, 0, 0,
	0, 0, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 812, 0, 0, 1372, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2819, 0, 2823, 2824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2441, 0, 79, 0, 2441, 1322, 0, 1839, 1839, 0,
	1322, 546, 546, 546, 546, 546, 0, 0, 0, 0,
	0, 0, 0, 2460, 0, 0, 0, 0, 546, 0,
	0, 1554, 0, 546, 0, 0, 546, 2471, 1604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2776, 2777, 2778, 2779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2906, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1322, 0, 0, 0,
	1321, 0, 1321, 0, 0, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 546, 0,
	0, 0, 0, 0, 0, 1460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 2847, 0, 2849, 0, 0, 2441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 3003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	2916, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 2964, 0,
	0, 0, 2964, 2964, 0, 0, 0, 0, 0, 0,
	0, 0, 3054, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 546, 546, 546, 0,
	0, 0, 0, 1662, 1663, 1664, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1707, 1708, 0, 0, 0, 0,
	0, 1712, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 3122, 0, 0, 0, 1748, 1749, 1750, 1751,
	1752, 1753, 1755, 1759, 1760, 605, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1322,
	1790, 1322, 1794, 1795, 3047, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1321, 0, 3051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 605, 0,
	0, 0, 0, 0, 605, 0, 1554, 0, 0, 0,
	827, 827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3087, 87,
	1846, 1847, 0, 0, 0, 714, 722, 723, 724, 725,
	726, 715, 717, 3095, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 719,
	727, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1554, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 2561, 2562, 0, 0,
	0, 2639, 0, 3095, 0, 0, 0, 1921, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2068, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2344, 2345, 0, 0, 0, 2348,
	0, 0, 0, 0, 2350, 2351, 2352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2357, 2358, 2359, 0,
	0, 1766, 2361, 0, 2362, 2363, 0, 0, 0, 2370,
	2371, 0, 0, 0, 0, 0, 0, 1766, 1766, 1766,
	1766, 1766, 605, 605, 605, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2527, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2610, 0, 0, 0, 0, 0, 0, 2616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2784, 0, 2785, 0,
	0, 0, 0, 2788, 2789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2851, 0, 0, 2853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2976, 605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	963, 948, 463, 0, 892, 966, 861, 880, 976, 883,
	886, 928, 840, 906, 379, 877, 832, 865, 835, 872,
	836, 863, 894, 251, 860, 950, 910, 965, 334, 248,
	842, 866, 393, 882, 197, 930, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	972, 338, 916, 0, 447, 364, 0, 0, 605, 896,
	954, 904, 942, 891, 929, 850, 915, 967, 878, 925,
	968, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 3074, 0, 3075, 0, 0,
	0, 0, 3019, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 874, 922, 962,
	875, 924, 246, 294, 253, 245, 467, 973, 953, 839,
	903, 961, 0, 0, 214, 964, 898, 0, 927, 0,
	979, 834, 0, 918, 0, 837, 841, 975, 957, 869,
	256, 0, 0, 0, 0, 0, 0, 0, 895, 905,
	939, 889, 0, 0, 0, 605, 0, 0, 0, 867,
	0, 914, 0, 0, 0, 846, 838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 893,
	0, 3111, 0, 849, 0, 868, 940, 0, 831, 277,
	843, 365, 238, 0, 946, 956, 890, 503, 960, 888,
	887, 934, 847, 952, 881, 333, 845, 302, 192, 210,
	0, 879, 375, 418, 424, 951, 864, 873, 236, 871,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	913, 932, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 1168, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	859, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 947, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 937, 978, 388, 423, 225, 488, 446, 854,
	858, 852, 919, 853, 908, 909, 855, 969, 970, 971,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 941,
	848, 0, 856, 857, 0, 949, 958, 959, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 912,
	191, 207, 336, 974, 411, 269, 519, 497, 493, 833,
	851, 243, 862, 870, 0, 876, 884, 885, 897, 899,
	900, 901, 902, 920, 921, 923, 931, 933, 936, 938,
	943, 955, 977, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 911, 917, 347, 262, 282, 293, 926, 496, 452,
	212, 419, 271, 234, 944, 945, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	907, 935, 343, 464, 465, 289, 361, 0, 0, 963,
	948, 463, 0, 892, 966, 861, 880, 976, 883, 886,
	928, 840, 906, 379, 877, 832, 865, 835, 872, 836,
	863, 894, 251, 860, 950, 910, 965, 334, 248, 842,
	866, 393, 882, 197, 930, 437, 235, 344, 341, 470,
	263, 254, 250, 233, 290, 351, 391, 457, 385, 972,
	338, 916, 0, 447, 364, 0, 0, 0, 896, 954,
	904, 942, 891, 929, 850, 915, 967, 878, 925, 968,
	296, 232, 196, 376, 448, 267, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 874, 922, 962, 875,
	924, 246, 294, 253, 245, 467, 973, 953, 839, 903,
	961, 0, 0, 214, 964, 898, 0, 927, 0, 979,
	834, 0, 918, 0, 837, 841, 975, 957, 869, 256,
	0, 0, 0, 0, 0, 0, 0, 895, 905, 939,
	889, 0, 0, 0, 0, 0, 2472, 0, 867, 0,
	914, 0, 0, 0, 846, 838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 893, 0,
	0, 0, 849, 0, 868, 940, 0, 831, 277, 843,
	365, 238, 0, 946, 956, 890, 503, 960, 888, 887,
	934, 847, 952, 881, 333, 845, 302, 192, 210, 0,
	879, 375, 418, 424, 951, 864, 873, 236, 871, 422,
	389, 486, 218, 265, 415, 395, 420, 402, 268, 913,
	932, 421, 339, 472, 409, 483, 504, 505, 244, 369,
	494, 461, 500, 518, 211, 241, 383, 454, 489, 444,
	362, 468, 469, 301, 443, 275, 195, 337, 510, 209,
	430, 227, 216, 474, 492, 270, 413, 202, 456, 481,
	224, 434, 0, 0, 520, 204, 479, 453, 358, 298,
	299, 203, 0, 414, 249, 273, 239, 378, 476, 477,
	237, 521, 213, 499, 206, 1168, 498, 371, 471, 480,
	359, 349, 205, 478, 357, 348, 304, 323, 324, 261,
	284, 407, 342, 408, 285, 367, 366, 368, 198, 490,
	0, 199, 0, 449, 491, 522, 219, 220, 222, 859,
	260, 264, 272, 274, 280, 281, 288, 335, 382, 406,
	404, 410, 947, 466, 484, 495, 502, 508, 509, 511,
	512, 513, 514, 515, 517, 516, 370, 287, 445, 303,
	340, 937, 978, 388, 423, 225, 488, 446, 854, 858,
	852, 919, 853, 908, 909, 855, 969, 970, 971, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 941, 848,
	0, 856, 857, 0, 949, 958, 959, 541, 350, 436,
	485, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 912, 191,
	207, 336, 974, 411, 269, 519, 497, 493, 833, 851,
	243, 862, 870, 0, 876, 884, 885, 897, 899, 900,
	901, 902, 920, 921, 923, 931, 933, 936, 938, 943,
	955, 977, 193, 194, 200, 208, 217, 221, 228, 242,
	257, 259, 266, 278, 283, 286, 291, 292, 295, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 425, 426, 427, 428, 429, 432,
	433, 438, 439, 440, 441, 442, 450, 451, 455, 473,
	475, 487, 501, 506, 431, 279, 482, 507, 0, 345,
	911, 917, 347, 262, 282, 293, 926, 496, 452, 212,
	419, 271, 234, 944, 945, 201, 231, 215, 240, 255,
	258, 297, 356, 363, 392, 397, 276, 252, 229, 416,
	226, 435, 458, 459, 460, 462, 360, 247, 396, 907,
	935, 343, 464, 465, 289, 361, 0, 0, 963, 948,
	463, 0, 892, 966, 861, 880, 976, 883, 886, 928,
	840, 906, 379, 877, 832, 865, 835, 872, 836, 863,
	894, 251, 860, 950, 910, 965, 334, 248, 842, 866,
	393, 882, 197, 930, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 972, 338,
	916, 0, 447, 364, 0, 0, 0, 896, 954, 904,
	942, 891, 929, 850, 915, 967, 878, 925, 968, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 874, 922, 962, 875, 924,
	246, 294, 253, 245, 467, 973, 953, 839, 903, 961,
	0, 0, 214, 964, 898, 0, 927, 0, 979, 834,
	0, 918, 0, 837, 841, 975, 957, 869, 256, 0,
	0, 0, 0, 0, 0, 0, 895, 905, 939, 889,
	0, 0, 0, 0, 0, 2430, 0, 867, 0, 914,
	0, 0, 0, 846, 838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 893, 0, 0,
	0, 849, 0, 868, 940, 0, 831, 277, 843, 365,
	238, 0, 946, 956, 890, 503, 960, 888, 887, 934,
	847, 952, 881, 333, 845, 302, 192, 210, 0, 879,
	375, 418, 424, 951, 864, 873, 236, 871, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 913, 932,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 1168, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 859, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 947, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	937, 978, 388, 423, 225, 488, 446, 854, 858, 852,
	919, 853, 908, 909, 855, 969, 970, 971, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 941, 848, 0,
	856, 857, 0, 949, 958, 959, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 912, 191, 207,
	336, 974, 411, 269, 519, 497, 493, 833, 851, 243,
	862, 870, 0, 876, 884, 885, 897, 899, 900, 901,
	902, 920, 921, 923, 931, 933, 936, 938, 943, 955,
	977, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 911,
	917, 347, 262, 282, 293, 926, 496, 452, 212, 419,
	271, 234, 944, 945, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 907, 935,
	343, 464, 465, 289, 361, 0, 0, 963, 948, 463,
	0, 892, 966, 861, 880, 976, 883, 886, 928, 840,
	906, 379, 877, 832, 865, 835, 872, 836, 863, 894,
	251, 860, 950, 910, 965, 334, 248, 842, 866, 393,
	882, 197, 930, 437, 235, 344, 341, 470, 263, 254,
	250, 233, 290, 351, 391, 457, 385, 972, 338, 916,
	0, 447, 364, 0, 0, 0, 896, 954, 904, 942,
	891, 929, 850, 915, 967, 878, 925, 968, 296, 232,
	196, 376, 448, 267, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 874, 922, 962, 875, 924, 246,
	294, 253, 245, 467, 973, 953, 839, 903, 961, 0,
	0, 214, 964, 898, 0, 927, 0, 979, 834, 0,
	918, 0, 837, 841, 975, 957, 869, 256, 0, 0,
	0, 0, 0, 0, 0, 895, 905, 939, 889, 0,
	0, 0, 0, 0, 1854, 0, 867, 0, 914, 0,
	0, 0, 846, 838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 893, 0, 0, 0,
	849, 0, 868, 940, 0, 831, 277, 843, 365, 238,
	0, 946, 956, 890, 503, 960, 888, 887, 934, 847,
	952, 881, 333, 845, 302, 192, 210, 0, 879, 375,
	418, 424, 951, 864, 873, 236, 871, 422, 389, 486,
	218, 265, 415, 395, 420, 402, 268, 913, 932, 421,
	339, 472, 409, 483, 504, 505, 244, 369, 494, 461,
	500, 518, 211, 241, 383, 454, 489, 444, 362, 468,
	469, 301, 443, 275, 195, 337, 510, 209, 430, 227,
	216, 474, 492, 270, 413, 202, 456, 481, 224, 434,
	0, 0, 520, 204, 479, 453, 358, 298, 299, 203,
	0, 414, 249, 273, 239, 378, 476, 477, 237, 521,
	213, 499, 206, 1168, 498, 371, 471, 480, 359, 349,
	205, 478, 357, 348, 304, 323, 324, 261, 284, 407,
	342, 408, 285, 367, 366, 368, 198, 490, 0, 199,
	0, 449, 491, 522, 219, 220, 222, 859, 260, 264,
	272, 274, 280, 281, 288, 335, 382, 406, 404, 410,
	947, 466, 484, 495, 502, 508, 509, 511, 512, 513,
	514, 515, 517, 516, 370, 287, 445, 303, 340, 937,
	978, 388, 423, 225, 488, 446, 854, 858, 852, 919,
	853, 908, 909, 855, 969, 970, 971, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 0, 941, 848, 0, 856,
	857, 0, 949, 958, 959, 541, 350, 436, 485, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 912, 191, 207, 336,
	974, 411, 269, 519, 497, 493, 833, 851, 243, 862,
	870, 0, 876, 884, 885, 897, 899, 900, 901, 902,
	920, 921, 923, 931, 933, 936, 938, 943, 955, 977,
	193, 194, 200, 208, 217, 221, 228, 242, 257, 259,
	266, 278, 283, 286, 291, 292, 295, 300, 346, 352,
	353, 354, 355, 372, 373, 374, 377, 380, 381, 384,
	386, 387, 390, 394, 398, 399, 400, 401, 403, 405,
	412, 417, 425, 426, 427, 428, 429, 432, 433, 438,
	439, 440, 441, 442, 450, 451, 455, 473, 475, 487,
	501, 506, 431, 279, 482, 507, 0, 345, 911, 917,
	347, 262, 282, 293, 926, 496, 452, 212, 419, 271,
	234, 944, 945, 201, 231, 215, 240, 255, 258, 297,
	356, 363, 392, 397, 276, 252, 229, 416, 226, 435,
	458, 459, 460, 462, 360, 247, 396, 907, 935, 343,
	464, 465, 289, 361, 0, 0, 963, 948, 463, 0,
	892, 966, 861, 880, 976, 883, 886, 928, 840, 906,
	379, 877, 832, 865, 835, 872, 836, 863, 894, 251,
	860, 950, 910, 965, 334, 248, 842, 866, 393, 882,
	197, 930, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 972, 338, 916, 0,
	447, 364, 0, 0, 0, 896, 954, 904, 942, 891,
	929, 850, 915, 967, 878, 925, 968, 296, 232, 196,
	376, 448, 267, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 874, 922, 962, 875, 924, 246, 294,
	253, 245, 467, 973, 953, 839, 903, 961, 0, 0,
	214, 964, 898, 0, 927, 0, 979, 834, 0, 918,
	0, 837, 841, 975, 957, 869, 256, 0, 0, 0,
	0, 0, 0, 0, 895, 905, 939, 889, 0, 0,
	0, 0, 0, 0, 0, 867, 0, 914, 0, 0,
	0, 846, 838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 893, 0, 0, 0, 849,
	0, 868, 940, 0, 831, 277, 843, 365, 238, 0,
	946, 956, 890, 503, 960, 888, 887, 934, 847, 952,
	881, 333, 845, 302, 192, 210, 0, 879, 375, 418,
	424, 951, 864, 873, 236, 871, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 913, 932, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 1168, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 859, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 947,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 937, 978,
	388, 423, 225, 488, 446, 854, 858, 852, 919, 853,
	908, 909, 855, 969, 970, 971, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 941, 848, 0, 856, 857,
	0, 949, 958, 959, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 912, 191, 207, 336, 974,
	411, 269, 519, 497, 493, 833, 851, 243, 862, 870,
	0, 876, 884, 885, 897, 899, 900, 901, 902, 920,
	921, 923, 931, 933, 936, 938, 943, 955, 977, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 911, 917, 347,
	262, 282, 293, 926, 496, 452, 212, 419, 271, 234,
	944, 945, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 907, 935, 343, 464,
	465, 289, 361, 0, 0, 963, 948, 463, 0, 892,
	966, 861, 880, 976, 883, 886, 928, 840, 906, 379,
	877, 832, 865, 835, 872, 836, 863, 894, 251, 860,
	950, 910, 965, 334, 248, 842, 866, 393, 882, 197,
	930, 437, 235, 344, 341, 470, 263, 254, 250, 233,
	290, 351, 391, 457, 385, 972, 338, 916, 0, 447,
	364, 0, 0, 0, 896, 954, 904, 942, 891, 929,
	850, 915, 967, 878, 925, 968, 296, 232, 196, 376,
	448, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 874, 922, 962, 875, 924, 246, 294, 253,
	245, 467, 973, 953, 839, 903, 961, 0, 0, 214,
	964, 898, 0, 927, 0, 979, 834, 0, 918, 0,
	837, 841, 975, 957, 869, 256, 0, 0, 0, 0,
	0, 0, 0, 895, 905, 939, 889, 0, 0, 0,
	0, 0, 0, 0, 867, 0, 914, 0, 0, 0,
	846, 838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 893, 0, 0, 0, 849, 0,
	868, 940, 0, 831, 277, 843, 365, 238, 0, 946,
	956, 890, 503, 960, 888, 887, 934, 847, 952, 881,
	333, 845, 302, 192, 210, 0, 879, 375, 418, 424,
	951, 864, 873, 236, 871, 422, 389, 486, 218, 265,
	415, 395, 420, 402, 268, 913, 932, 421, 339, 472,
	409, 483, 504, 505, 244, 369, 494, 461, 500, 518,
	211, 241, 383, 454, 489, 444, 362, 468, 469, 301,
	443, 275, 195, 337, 510, 209, 430, 227, 216, 474,
	492, 270, 413, 202, 456, 481, 224, 434, 0, 0,
	520, 204, 479, 453, 358, 298, 299, 203, 0, 414,
	249, 273, 239, 378, 476, 477, 237, 521, 213, 499,
	206, 1168, 498, 371, 471, 480, 359, 349, 205, 478,
	357, 348, 304, 323, 324, 261, 284, 407, 342, 408,
	285, 367, 366, 368, 198, 490, 0, 199, 0, 449,
	491, 522, 219, 220, 222, 859, 260, 264, 272, 274,
	280, 281, 288, 335, 382, 406, 404, 410, 947, 466,
	484, 495, 502, 508, 509, 511, 512, 513, 514, 515,
	517, 516, 370, 287, 445, 303, 340, 937, 978, 388,
	423, 225, 488, 446, 854, 858, 852, 919, 853, 908,
	909, 855, 969, 970, 971, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 0, 941, 848, 0, 856, 857, 0,
	949, 958, 959, 541, 350, 436, 485, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 912, 191, 207, 336, 974, 411,
	269, 519, 497, 493, 833, 851, 243, 862, 870, 0,
	876, 884, 885, 897, 899, 900, 901, 902, 920, 921,
	923, 931, 933, 936, 938, 943, 955, 977, 193, 194,
	200, 208, 217, 221, 228, 242, 257, 259, 266, 278,
	283, 286, 291, 292, 295, 300, 346, 352, 353, 354,
	355, 372, 373, 374, 377, 380, 381, 384, 386, 387,
	390, 394, 398, 399, 400, 401, 403, 405, 412, 417,
	425, 426, 427, 428, 429, 432, 433, 438, 439, 440,
	441, 442, 450, 451, 455, 473, 475, 487, 501, 506,
	431, 279, 482, 507, 0, 345, 911, 917, 347, 262,
	282, 293, 926, 496, 452, 212, 419, 271, 234, 944,
	945, 201, 231, 215, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 229, 416, 226, 435, 458, 459,
	460, 462, 360, 247, 396, 907, 935, 343, 464, 465,
	289, 361, 0, 0, 963, 948, 463, 0, 892, 966,
	861, 880, 976, 883, 886, 928, 840, 906, 379, 877,
	832, 865, 835, 872, 836, 863, 894, 251, 860, 950,
	910, 965, 334, 248, 842, 866, 393, 882, 197, 930,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 972, 338, 916, 0, 447, 364,
	0, 0, 0, 896, 954, 904, 942, 891, 929, 850,
	915, 967, 878, 925, 968, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 874, 922, 962, 875, 924, 246, 294, 253, 245,
	467, 973, 953, 839, 903, 961, 0, 0, 980, 964,
	898, 0, 927, 0, 979, 834, 0, 918, 0, 837,
	841, 975, 957, 869, 256, 0, 0, 0, 0, 0,
	0, 0, 895, 905, 939, 889, 0, 0, 0, 0,
	0, 0, 0, 867, 0, 914, 0, 0, 0, 846,
	838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 893, 0, 0, 0, 849, 0, 868,
	940, 0, 831, 277, 843, 365, 238, 0, 946, 956,
	890, 503, 960, 888, 887, 934, 847, 952, 881, 333,
	845, 302, 192, 210, 0, 879, 375, 418, 424, 951,
	864, 873, 236, 871, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 913, 932, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	844, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 859, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 947, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 830, 824, 823, 303, 340, 937, 978, 388, 423,
	225, 488, 446, 854, 858, 852, 919, 853, 908, 909,
	855, 969, 970, 971, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 941, 848, 0, 856, 857, 0, 949,
	958, 959, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 912, 191, 207, 336, 974, 411, 269,
	519, 497, 493, 833, 851, 243, 862, 870, 0, 876,
	884, 885, 897, 899, 900, 901, 902, 920, 921, 923,
	931, 933, 936, 938, 943, 955, 977, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 911, 917, 347, 262, 282,
	293, 926, 496, 452, 212, 419, 271, 234, 944, 945,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 907, 935, 343, 464, 465, 289,
	361, 0, 0, 963, 948, 463, 0, 892, 966, 861,
	880, 976, 883, 886, 928, 840, 906, 379, 877, 832,
	865, 835, 872, 836, 863, 894, 251, 860, 950, 910,
	965, 334, 248, 842, 866, 393, 882, 197, 930, 437,
	235, 344, 341, 470, 263, 254, 250, 233, 290, 351,
	391, 457, 385, 972, 338, 916, 0, 447, 364, 0,
	0, 0, 896, 954, 904, 942, 891, 929, 850, 915,
	967, 878, 925, 968, 296, 232, 196, 376, 448, 267,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	874, 922, 962, 875, 924, 246, 294, 253, 245, 467,
	973, 953, 839, 903, 961, 0, 0, 980, 964, 898,
	0, 927, 0, 979, 834, 0, 918, 0, 837, 841,
	975, 957, 869, 256, 0, 0, 0, 0, 0, 0,
	0, 895, 905, 939, 889, 0, 0, 0, 0, 0,
	0, 0, 867, 0, 914, 0, 0, 0, 846, 838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 893, 0, 0, 0, 849, 0, 868, 940,
	0, 831, 277, 843, 365, 238, 0, 946, 956, 890,
	503, 960, 888, 887, 934, 847, 952, 881, 333, 845,
	302, 192, 210, 0, 879, 375, 418, 424, 951, 864,
	873, 236, 871, 422, 389, 486, 218, 265, 415, 395,
	420, 402, 268, 913, 932, 421, 339, 472, 409, 483,
	504, 505, 244, 369, 494, 461, 500, 518, 211, 241,
	383, 454, 489, 444, 362, 468, 469, 301, 443, 275,
	195, 337, 510, 209, 430, 227, 216, 474, 492, 270,
	413, 202, 456, 1389, 224, 434, 0, 0, 520, 204,
	479, 453, 358, 298, 299, 203, 0, 414, 249, 273,
	239, 378, 476, 477, 237, 521, 213, 499, 206, 844,
	498, 371, 471, 480, 359, 349, 205, 478, 357, 348,
	304, 323, 324, 261, 284, 407, 342, 408, 285, 367,
	366, 368, 198, 490, 0, 199, 0, 449, 491, 522,
	219, 220, 222, 859, 260, 264, 272, 274, 280, 281,
	288, 335, 382, 406, 404, 410, 947, 466, 484, 495,
	502, 508, 509, 511, 512, 513, 514, 515, 517, 516,
	830, 824, 823, 303, 340, 937, 978, 388, 423, 225,
	488, 446, 854, 858, 852, 919, 853, 908, 909, 855,
	969, 970, 971, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 0, 941, 848, 0, 856, 857, 0, 949, 958,
	959, 541, 350, 436, 485, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 912, 191, 207, 336, 974, 411, 269, 519,
	497, 493, 833, 851, 243, 862, 870, 0, 876, 884,
	885, 897, 899, 900, 901, 902, 920, 921, 923, 931,
	933, 936, 938, 943, 955, 977, 193, 194, 200, 208,
	217, 221, 228, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 300, 346, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 438, 439, 440, 441, 442,
	450, 451, 455, 473, 475, 487, 501, 506, 431, 279,
	482, 507, 0, 345, 911, 917, 347, 262, 282, 293,
	926, 496, 452, 212, 419, 271, 234, 944, 945, 201,
	231, 215, 240, 255, 258, 297, 356, 363, 392, 397,
	276, 252, 229, 416, 226, 435, 458, 459, 460, 462,
	360, 247, 396, 907, 935, 343, 464, 465, 289, 361,
	0, 0, 963, 948, 463, 0, 892, 966, 861, 880,
	976, 883, 886, 928, 840, 906, 379, 877, 832, 865,
	835, 872, 836, 863, 894, 251, 860, 950, 910, 965,
	334, 248, 842, 866, 393, 882, 197, 930, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 972, 338, 916, 0, 447, 364, 0, 0,
	0, 896, 954, 904, 942, 891, 929, 850, 915, 967,
	878, 925, 968, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 874,
	922, 962, 875, 924, 246, 294, 253, 245, 467, 973,
	953, 839, 903, 961, 0, 0, 980, 964, 898, 0,
	927, 0, 979, 834, 0, 918, 0, 837, 841, 975,
	957, 869, 256, 0, 0, 0, 0, 0, 0, 0,
	895, 905, 939, 889, 0, 0, 0, 0, 0, 0,
	0, 867, 0, 914, 0, 0, 0, 846, 838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 893, 0, 0, 0, 849, 0, 868, 940, 0,
	831, 277, 843, 365, 238, 0, 946, 956, 890, 503,
	960, 888, 887, 934, 847, 952, 881, 333, 845, 302,
	192, 210, 0, 879, 375, 418, 424, 951, 864, 873,
	236, 871, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 913, 932, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 821, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 844, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 859, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 947, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 830,
	824, 823, 303, 340, 937, 978, 388, 423, 225, 488,
	446, 854, 858, 852, 919, 853, 908, 909, 855, 969,
	970, 971, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 941, 848, 0, 856, 857, 0, 949, 958, 959,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 912, 191, 207, 336, 974, 411, 269, 519, 497,
	493, 833, 851, 243, 862, 870, 0, 876, 884, 885,
	897, 899, 900, 901, 902, 920, 921, 923, 931, 933,
	936, 938, 943, 955, 977, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 911, 917, 347, 262, 282, 293, 926,
	496, 452, 212, 419, 271, 234, 944, 945, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 907, 935, 343, 464, 465, 289, 361, 0,
	0, 0, 0, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 1797, 0,
	623, 0, 0, 0, 251, 628, 0, 0, 0, 334,
	248, 0, 1798, 393, 0, 197, 0, 437, 235, 344,
	341, 470, 263, 254, 250, 233, 290, 351, 391, 457,
	385, 635, 338, 0, 0, 447, 364, 0, 0, 0,
	0, 0, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 232, 196, 376, 448, 267, 0, 87,
	0, 0, 188, 189, 190, 714, 722, 723, 724, 725,
	726, 715, 717, 0, 0, 223, 716, 230, 646, 648,
	647, 657, 658, 659, 660, 661, 662, 663, 644, 719,
	727, 728, 0, 246, 294, 253, 245, 467, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 620, 0, 634, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 617, 618, 810, 0,
	0, 0, 688, 0, 619, 0, 0, 627, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 687, 0, 0, 503, 0,
	0, 685, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 486, 218, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 339, 472, 409, 483, 504, 505,
	244, 369, 494, 461, 500, 518, 211, 241, 383, 454,
	489, 444, 362, 468, 469, 301, 443, 275, 195, 337,
	510, 209, 430, 227, 216, 474, 492, 270, 413, 202,
	456, 481, 224, 434, 0, 0, 520, 204, 479, 453,
	358, 298, 299, 203, 0, 414, 249, 273, 239, 378,
	476, 477, 237, 521, 213, 499, 206, 0, 498, 371,
	471, 480, 359, 349, 205, 478, 357, 348, 304, 652,
	653, 261, 284, 407, 342, 408, 285, 367, 366, 368,
	198, 490, 0, 199, 0, 449, 491, 522, 219, 220,
	222, 0, 260, 264, 272, 274, 280, 281, 288, 335,
	382, 406, 404, 410, 0, 466, 484, 495, 502, 508,
	509, 511, 512, 513, 514, 515, 517, 516, 370, 287,
	445, 303, 340, 0, 0, 388, 423, 225, 488, 446,
	695, 686, 639, 699, 641, 696, 697, 636, 637, 640,
	698, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 0,
	689, 626, 625, 0, 632, 633, 0, 642, 643, 645,
	649, 650, 651, 654, 655, 656, 664, 666, 667, 665,
	668, 669, 670, 673, 674, 675, 676, 671, 672, 677,
	624, 191, 207, 336, 0, 411, 269, 519, 497, 493,
	0, 700, 243, 701, 0, 0, 705, 0, 0, 0,
	707, 706, 0, 708, 681, 680, 0, 0, 702, 703,
	0, 704, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 242, 257, 259, 266, 278, 283, 286, 291, 292,
	295, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 425, 426, 427, 428,
	429, 432, 433, 438, 439, 440, 441, 442, 450, 451,
	455, 473, 475, 487, 501, 506, 431, 279, 482, 507,
	0, 345, 0, 0, 347, 262, 282, 293, 0, 496,
	452, 212, 419, 271, 234, 721, 0, 201, 231, 215,
	240, 255, 258, 297, 356, 363, 392, 397, 276, 252,
	229, 416, 226, 435, 458, 459, 460, 462, 360, 247,
	396, 0, 361, 343, 464, 465, 289, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 0, 0, 623, 0, 0, 0, 251, 628,
	0, 0, 0, 334, 248, 0, 0, 393, 0, 197,
	0, 437, 235, 344, 341, 470, 263, 254, 250, 233,
	290, 351, 391, 457, 385, 635, 338, 0, 0, 447,
	364, 0, 0, 0, 0, 0, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 232, 196, 376,
	448, 267, 0, 87, 0, 0, 188, 189, 190, 714,
	722, 723, 724, 725, 726, 715, 717, 0, 0, 223,
	716, 230, 646, 648, 647, 657, 658, 659, 660, 661,
	662, 663, 644, 719, 727, 728, 0, 246, 294, 253,
	245, 467, 0, 0, 1756, 1757, 1758, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 606, 620,
	0, 634, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	617, 618, 0, 0, 0, 0, 688, 0, 619, 0,
	0, 627, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 365, 238, 0, 687,
	0, 0, 503, 0, 0, 685, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 375, 418, 424,
	0, 0, 0, 236, 0, 422, 389, 486, 218, 265,
	415, 395, 420, 402, 268, 0, 0, 421, 339, 472,
	409, 483, 504, 505, 244, 369, 494, 461, 500, 518,
	211, 241, 383, 454, 489, 444, 362, 468, 469, 301,
	443, 275, 195, 337, 510, 209, 430, 227, 216, 474,
	492, 270, 413, 202, 456, 481, 224, 434, 0, 0,
	520, 204, 479, 453, 358, 298, 299, 203, 0, 414,
	249, 273, 239, 378, 476, 477, 237, 521, 213, 499,
	206, 0, 498, 371, 471, 480, 359, 349, 205, 478,
	357, 348, 304, 652, 653, 261, 284, 407, 342, 408,
	285, 367, 366, 368, 198, 490, 0, 199, 0, 449,
	491, 522, 219, 220, 222, 0, 260, 264, 272, 274,
	280, 281, 288, 335, 382, 406, 404, 410, 0, 466,
	484, 495, 502, 508, 509, 511, 512, 513, 514, 515,
	517, 516, 370, 287, 445, 303, 340, 0, 0, 388,
	423, 225, 488, 446, 695, 686, 639, 699, 641, 696,
	697, 636, 637, 640, 698, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 0, 689, 626, 625, 0, 632, 633,
	0, 642, 643, 645, 649, 650, 651, 654, 655, 656,
	664, 666, 667, 665, 668, 669, 670, 673, 674, 675,
	676, 671, 672, 677, 624, 191, 207, 336, 0, 411,
	269, 519, 497, 493, 0, 700, 243, 701, 0, 0,
	705, 0, 0, 0, 707, 706, 0, 708, 681, 680,
	0, 0, 702, 703, 0, 704, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 242, 257, 259, 266, 278,
	283, 286, 291, 292, 295, 300, 346, 352, 353, 354,
	355, 372, 373, 374, 377, 380, 381, 384, 386, 387,
	390, 394, 398, 399, 400, 401, 403, 405, 412, 417,
	425, 426, 427, 428, 429, 432, 433, 438, 439, 440,
	441, 442, 450, 451, 455, 473, 475, 487, 501, 506,
	431, 279, 482, 507, 0, 345, 0, 0, 347, 262,
	282, 293, 0, 496, 452, 212, 419, 271, 234, 721,
	0, 201, 231, 215, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 229, 416, 226, 435, 458, 459,
	460, 462, 360, 247, 396, 0, 361, 343, 464, 465,
	289, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 623, 0,
	0, 0, 251, 628, 0, 0, 0, 334, 248, 0,
	0, 393, 0, 197, 0, 437, 235, 344, 341, 470,
	263, 254, 250, 233, 290, 351, 391, 457, 385, 635,
	338, 0, 0, 447, 364, 0, 0, 0, 0, 0,
	630, 631, 0, 0, 0, 0, 0, 0, 1881, 0,
	296, 232, 196, 376, 448, 267, 0, 87, 0, 0,
	188, 189, 190, 714, 722, 723, 724, 725, 726, 715,
	717, 0, 0, 223, 716, 230, 646, 648, 647, 657,
	658, 659, 660, 661, 662, 663, 644, 719, 727, 728,
	1882, 246, 294, 253, 245, 467, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 606, 620, 0, 634, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 617, 618, 0, 0, 0, 0,
	688, 0, 619, 0, 0, 627, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	365, 238, 0, 687, 0, 0, 503, 0, 0, 685,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 375, 418, 424, 0, 0, 0, 236, 0, 422,
	389, 486, 218, 265, 415, 395, 420, 402, 268, 0,
	0, 421, 339, 472, 409, 483, 504, 505, 244, 369,
	494, 461, 500, 518, 211, 241, 383, 454, 489, 444,
	362, 468, 469, 301, 443, 275, 195, 337, 510, 209,
	430, 227, 216, 474, 492, 270, 413, 202, 456, 481,
	224, 434, 0, 0, 520, 204, 479, 453, 358, 298,
	299, 203, 0, 414, 249, 273, 239, 378, 476, 477,
	237, 521, 213, 499, 206, 0, 498, 371, 471, 480,
	359, 349, 205, 478, 357, 348, 304, 652, 653, 261,
	284, 407, 342, 408, 285, 367, 366, 368, 198, 490,
	0, 199, 0, 449, 491, 522, 219, 220, 222, 0,
	260, 264, 272, 274, 280, 281, 288, 335, 382, 406,
	404, 410, 0, 466, 484, 495, 502, 508, 509, 511,
	512, 513, 514, 515, 517, 516, 370, 287, 445, 303,
	340, 0, 0, 388, 423, 225, 488, 446, 695, 686,
	639, 699, 641, 696, 697, 636, 637, 640, 698, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 689, 626,
	625, 0, 632, 633, 0, 642, 643, 645, 649, 650,
	651, 654, 655, 656, 664, 666, 667, 665, 668, 669,
	670, 673, 674, 675, 676, 671, 672, 677, 624, 191,
	207, 336, 0, 411, 269, 519, 497, 493, 0, 700,
	243, 701, 0, 0, 705, 0, 0, 0, 707, 706,
	0, 708, 681, 680, 0, 0, 702, 703, 0, 704,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 242,
	257, 259, 266, 278, 283, 286, 291, 292, 295, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 425, 426, 427, 428, 429, 432,
	433, 438, 439, 440, 441, 442, 450, 451, 455, 473,
	475, 487, 501, 506, 431, 279, 482, 507, 0, 345,
	0, 0, 347, 262, 282, 293, 0, 496, 452, 212,
	419, 271, 234, 721, 0, 201, 231, 215, 240, 255,
	258, 297, 356, 363, 392, 397, 276, 252, 229, 416,
	226, 435, 458, 459, 460, 462, 360, 247, 396, 0,
	0, 343, 464, 465, 289, 361, 0, 0, 0, 78,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 623, 0, 0,
	0, 251, 628, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 635, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 87, 0, 0, 188,
	189, 190, 714, 722, 723, 724, 725, 726, 715, 717,
	0, 0, 223, 716, 230, 646, 648, 647, 657, 658,
	659, 660, 661, 662, 663, 644, 719, 727, 728, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 620, 0, 634, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 617, 618, 0, 0, 0, 0, 688,
	0, 619, 0, 0, 627, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 687, 0, 0, 503, 0, 0, 685, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 652, 653, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 695, 686, 639,
	699, 641, 696, 697, 636, 637, 640, 698, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 689, 626, 625,
	0, 632, 633, 0, 642, 643, 645, 649, 650, 651,
	654, 655, 656, 664, 666, 667, 665, 668, 669, 670,
	673, 674, 675, 676, 671, 672, 677, 624, 191, 207,
	336, 86, 411, 269, 519, 497, 493, 0, 700, 243,
	701, 0, 0, 705, 0, 0, 0, 707, 706, 0,
	708, 681, 680, 0, 0, 702, 703, 0, 704, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 721, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 623, 0, 0, 0, 251, 628, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 635, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	87, 0, 0, 188, 189, 190, 714, 722, 723, 724,
	725, 726, 715, 717, 0, 0, 223, 716, 230, 646,
	648, 647, 657, 658, 659, 660, 661, 662, 663, 644,
	719, 727, 728, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 620, 0, 634, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 617, 618, 0,
	0, 0, 0, 688, 0, 619, 0, 0, 627, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 687, 0, 0, 503,
	0, 0, 685, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 3061, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	652, 653, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 695, 686, 639, 699, 641, 696, 697, 636, 637,
	640, 698, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 689, 626, 625, 0, 632, 633, 0, 642, 643,
	645, 649, 650, 651, 654, 655, 656, 664, 666, 667,
	665, 668, 669, 670, 673, 674, 675, 676, 671, 672,
	677, 624, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 700, 243, 701, 0, 0, 705, 0, 0,
	0, 707, 706, 0, 708, 681, 680, 0, 0, 702,
	703, 0, 704, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 721, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 623, 0, 0, 0, 251,
	628, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 635, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 87, 0, 1356, 188, 189, 190,
	714, 722, 723, 724, 725, 726, 715, 717, 0, 0,
	223, 716, 230, 646, 648, 647, 657, 658, 659, 660,
	661, 662, 663, 644, 719, 727, 728, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	620, 0, 634, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 617, 618, 0, 0, 0, 0, 688, 0, 619,
	0, 0, 627, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	687, 0, 0, 503, 0, 0, 685, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 652, 653, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 695, 686, 639, 699, 641,
	696, 697, 636, 637, 640, 698, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 689, 626, 625, 0, 632,
	633, 0, 642, 643, 645, 649, 650, 651, 654, 655,
	656, 664, 666, 667, 665, 668, 669, 670, 673, 674,
	675, 676, 671, 672, 677, 624, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 700, 243, 701, 0,
	0, 705, 0, 0, 0, 707, 706, 0, 708, 681,
	680, 0, 0, 702, 703, 0, 704, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	721, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 623,
	0, 0, 0, 251, 628, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	635, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 87, 0,
	0, 188, 189, 190, 714, 722, 723, 724, 725, 726,
	715, 717, 0, 0, 223, 716, 230, 646, 648, 647,
	657, 658, 659, 660, 661, 662, 663, 644, 719, 727,
	728, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 620, 0, 634, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 617, 618, 810, 0, 0,
	0, 688, 0, 619, 0, 0, 627, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 687, 0, 0, 503, 0, 0,
	685, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 652, 653,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 695,
	686, 639, 699, 641, 696, 697, 636, 637, 640, 698,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 689,
	626, 625, 0, 632, 633, 0, 642, 643, 645, 649,
	650, 651, 654, 655, 656, 664, 666, 667, 665, 668,
	669, 670, 673, 674, 675, 676, 671, 672, 677, 624,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	700, 243, 701, 0, 0, 705, 0, 0, 0, 707,
	706, 0, 708, 681, 680, 0, 0, 702, 703, 0,
	704, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 721, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 623, 0, 0, 0, 251, 628, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 635, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 630, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 87, 0, 0, 188, 189, 190, 714, 722,
	723, 724, 725, 726, 715, 717, 0, 0, 223, 716,
	230, 646, 648, 647, 657, 658, 659, 660, 661, 662,
	663, 644, 719, 727, 728, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 620, 0,
	634, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 617,
	618, 0, 0, 0, 0, 688, 0, 619, 0, 0,
	627, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 687, 0,
	0, 503, 0, 0, 685, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 652, 653, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 695, 686, 639, 699, 641, 696, 697,
	636, 637, 640, 698, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 689, 626, 625, 0, 632, 633, 0,
	642, 643, 645, 649, 650, 651, 654, 655, 656, 664,
	666, 667, 665, 668, 669, 670, 673, 674, 675, 676,
	671, 672, 677, 624, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 700, 243, 701, 0, 0, 705,
	0, 0, 0, 707, 706, 0, 708, 681, 680, 0,
	0, 702, 703, 0, 704, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 721, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 623, 0, 0,
	0, 251, 628, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 635, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 87, 0, 0, 188,
	189, 190, 714, 722, 723, 724, 725, 726, 715, 717,
	0, 0, 223, 716, 230, 646, 648, 647, 657, 658,
	659, 660, 661, 662, 663, 644, 719, 727, 728, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 620, 0, 634, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 617, 618, 0, 0, 0, 0, 688,
	0, 619, 0, 0, 627, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 687, 0, 0, 503, 0, 0, 685, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 652, 653, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 695, 686, 639,
	699, 641, 696, 697, 636, 637, 640, 698, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 689, 626, 625,
	0, 632, 633, 0, 642, 643, 645, 649, 650, 651,
	654, 655, 656, 664, 666, 667, 665, 668, 669, 670,
	673, 674, 675, 676, 671, 672, 677, 624, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 700, 243,
	701, 0, 0, 705, 0, 0, 0, 707, 706, 0,
	708, 681, 680, 0, 0, 702, 703, 0, 704, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 721, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 722, 723, 0,
	0, 0, 0, 1702, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 1031, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 1030, 503, 0, 0, 0, 0, 0, 1027,
	1028, 333, 988, 302, 192, 210, 1021, 1025, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 0, 343, 464,
	465, 289, 361, 0, 0, 0, 78, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 334, 248, 0, 0, 393, 0, 197,
	0, 437, 235, 344, 341, 470, 263, 254, 250, 233,
	290, 351, 391, 457, 385, 0, 338, 0, 0, 447,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 232, 196, 376,
	448, 267, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 467, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 365, 238, 0, 0,
	0, 0, 503, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 375, 418, 424,
	0, 0, 0, 236, 0, 422, 389, 486, 218, 265,
	415, 395, 420, 402, 268, 0, 0, 421, 339, 472,
	409, 483, 504, 505, 244, 369, 494, 461, 500, 518,
	211, 241, 383, 454, 489, 444, 362, 468, 469, 301,
	443, 275, 195, 337, 510, 209, 430, 227, 216, 474,
	492, 270, 413, 202, 456, 481, 224, 434, 0, 0,
	520, 204, 479, 453, 358, 298, 299, 203, 0, 414,
	249, 273, 239, 378, 476, 477, 237, 521, 213, 499,
	206, 0, 498, 371, 471, 480, 359, 349, 205, 478,
	357, 348, 304, 323, 324, 261, 284, 407, 342, 408,
	285, 367, 366, 368, 198, 490, 0, 199, 0, 449,
	491, 522, 219, 220, 222, 0, 260, 264, 272, 274,
	280, 281, 288, 335, 382, 406, 404, 410, 0, 466,
	484, 495, 502, 508, 509, 511, 512, 513, 514, 515,
	517, 516, 370, 287, 445, 303, 340, 0, 0, 388,
	423, 225, 488, 446, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 541, 350, 436, 485, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 0, 191, 207, 336, 86, 411,
	269, 519, 497, 493, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 242, 257, 259, 266, 278,
	283, 286, 291, 292, 295, 300, 346, 352, 353, 354,
	355, 372, 373, 374, 377, 380, 381, 384, 386, 387,
	390, 394, 398, 399, 400, 401, 403, 405, 412, 417,
	425, 426, 427, 428, 429, 432, 433, 438, 439, 440,
	441, 442, 450, 451, 455, 473, 475, 487, 501, 506,
	431, 279, 482, 507, 0, 345, 0, 0, 347, 262,
	282, 293, 0, 496, 452, 212, 419, 271, 234, 0,
	0, 201, 231, 215, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 229, 416, 226, 435, 458, 459,
	460, 462, 360, 247, 396, 0, 1375, 343, 464, 465,
	289, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 1377, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 334, 248, 0,
	0, 393, 0, 197, 0, 437, 235, 344, 341, 470,
	263, 254, 250, 233, 290, 351, 391, 457, 385, 0,
	338, 0, 0, 447, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 232, 196, 376, 448, 267, 0, 0, 0, 0,
	188, 189, 190, 0, 1379, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 246, 294, 253, 245, 467, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 1202, 0, 1203,
	1204, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	365, 238, 0, 0, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 375, 418, 424, 0, 0, 0, 236, 0, 422,
	389, 486, 218, 265, 415, 395, 420, 402, 268, 0,
	0, 421, 339, 472, 409, 483, 504, 505, 244, 369,
	494, 461, 500, 518, 211, 241, 383, 454, 489, 444,
	362, 468, 469, 301, 443, 275, 195, 337, 510, 209,
	430, 227, 216, 474, 492, 270, 413, 202, 456, 481,
	224, 434, 0, 0, 520, 204, 479, 453, 358, 298,
	299, 203, 0, 414, 249, 273, 239, 378, 476, 477,
	237, 521, 213, 499, 206, 0, 498, 371, 471, 480,
	359, 349, 205, 478, 357, 348, 304, 323, 324, 261,
	284, 407, 342, 408, 285, 367, 366, 368, 198, 490,
	0, 199, 0, 449, 491, 522, 219, 220, 222, 0,
	260, 264, 272, 274, 280, 281, 288, 335, 382, 406,
	404, 410, 0, 466, 484, 495, 502, 508, 509, 511,
	512, 513, 514, 515, 517, 516, 370, 287, 445, 303,
	340, 0, 0, 388, 423, 225, 488, 446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 350, 436,
	485, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 0, 411, 269, 519, 497, 493, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 242,
	257, 259, 266, 278, 283, 286, 291, 292, 295, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 425, 426, 427, 428, 429, 432,
	433, 438, 439, 440, 441, 442, 450, 451, 455, 473,
	475, 487, 501, 506, 431, 279, 482, 507, 0, 345,
	0, 0, 347, 262, 282, 293, 0, 496, 452, 212,
	419, 271, 234, 0, 0, 201, 231, 215, 240, 255,
	258, 297, 356, 363, 392, 397, 276, 252, 229, 416,
	226, 435, 458, 459, 460, 462, 360, 247, 396, 0,
	361, 343, 464, 465, 289, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 334, 248, 0, 0, 393, 0, 197, 0, 437,
	235, 344, 341, 470, 263, 254, 250, 233, 290, 351,
	391, 457, 385, 0, 338, 0, 0, 447, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 232, 196, 376, 448, 267,
	0, 0, 0, 0, 188, 189, 190, 1317, 1320, 0,
	0, 0, 0, 1316, 1319, 0, 0, 223, 1315, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 246, 294, 253, 245, 467,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 365, 238, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 375, 418, 424, 0, 0,
	0, 236, 0, 422, 389, 486, 218, 265, 415, 395,
	420, 402, 268, 0, 0, 421, 339, 472, 409, 483,
	504, 505, 244, 369, 494, 461, 500, 518, 211, 241,
	383, 454, 489, 444, 362, 468, 469, 301, 443, 275,
	195, 337, 510, 209, 430, 227, 216, 474, 492, 270,
	413, 202, 456, 481, 224, 434, 0, 0, 520, 204,
	479, 453, 358, 298, 299, 203, 0, 414, 249, 273,
	239, 378, 476, 477, 237, 521, 213, 499, 206, 0,
	498, 371, 471, 480, 359, 349, 205, 478, 357, 348,
	304, 323, 324, 261, 284, 407, 342, 408, 285, 367,
	366, 368, 198, 490, 0, 199, 0, 449, 491, 522,
	219, 220, 222, 0, 260, 264, 272, 274, 280, 281,
	288, 335, 382, 406, 404, 410, 0, 466, 484, 495,
	502, 508, 509, 511, 512, 513, 514, 515, 517, 516,
	370, 287, 445, 303, 340, 0, 0, 388, 423, 225,
	488, 446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 350, 436, 485, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 411, 269, 519,
	497, 493, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 300, 346, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 438, 439, 440, 441, 442,
	450, 451, 455, 473, 475, 487, 501, 506, 431, 279,
	482, 507, 0, 345, 0, 0, 347, 262, 282, 293,
	0, 496, 452, 212, 419, 271, 234, 0, 0, 201,
	231, 215, 240, 255, 258, 297, 356, 363, 392, 397,
	276, 252, 229, 416, 226, 435, 458, 459, 460, 462,
	360, 247, 396, 0, 0, 343, 464, 465, 289, 361,
	0, 0, 0, 78, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	87, 0, 1356, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 86, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 1821, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 1555, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 1819, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 982, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	988, 302, 192, 210, 986, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 1821, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 1555, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 1356, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 2965, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 2170, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 2155, 0, 0,
	0, 2156, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 1400, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 1399,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 2641,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 3088, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 1555, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 2965, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 87, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 1379, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 1653, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	1525, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 1523, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 1521, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 1519, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 1517, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	1513, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 1511, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 1509, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 1484, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 1384, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 1179,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 792, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 597, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 544, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 3096, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	2659, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 2151, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 0, 343, 464, 465, 289,
}

var yyPact = [...]int{
	5276, -1000, -403, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2098, 2341, -1000, -1000,
	-1000, -1000, 2292, -1000, 737, 1823, -1000, 2107, 298, -1000,
	42557, 481, -1000, 41349, 479, 366, 42557, -1000, 221, -1000,
	203, 42557, 208, 40745, -1000, -1000, -241, 18387, 2048, 97,
	90, 42557, -1000, -1000, -1000, -1000, 2266, 1734, -1000, 408,
	-1000, -1000, -1000, -1000, -1000, -1000, 40141, -1000, -1000, -1000,
	2106, 2104, 2315, 659, 2039, -1000, 2146, 1734, -1000, 18387,
	2229, 2171, 17783, -1000, 17783, 443, -1000, -1000, 13545, -1000,
	-1000, 24437, 42557, 30477, 360, -1000, 2107, -1000, -1000, -1000,
	114, -1000, 364, 1665, -1000, 1573, -1000, 832, 848, 385,
	502, 495, 382, 371, 369, 367, 363, 362, 361, 355,
	397, -1000, 693, 693, -81, -82, 2970, 433, 426, 426,
	456, 2072, 2067, -1000, 841, -1000, 693, 693, 693, 365,
	693, 693, 693, 693, 331, 330, 693, 693, 693, 693,
	693, 693, 693, 693, 693, 693, 693, 693, 693, 693,
	693, 693, 693, 389, 2107, 310, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 42557, 219, 42557, -1000, 588, 42557, 803, 803,
	104, 803, 803, 803, 803, 235, 632, 83, -1000, 225,
	303, 210, 306, 805, 204, -1000, -1000, 295, 805, 1191,
	-1000, 677, 187, -1000, 803, 803, -1000, 11109, 224, 11109,
	11109, -1000, 2101, -1000, -1000, -1000, -1000, 1200, -1000, 455,
	-1000, -1000, -1000, -1000, 42557, 39537, 432, 753, -1000, -1000,
	-1000, 70, -1000, -1000, 1366, 1117, 18387, 1054, -1000, 1630,
	639, -1000, -1000, -1000, -1000, -1000, 556, 18991, 18991, 18991,
	18991, -1000, -1000, 1321, 1321, 1321, 1321, 18991, 1321, -1000,
	1321, 1321, 1321, 1321, 18387, 1321, 1321, 1321, -1000, 1321,
	1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
	1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
	1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
	1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
	1321, 1321, 1321, 1321, 571, 1321, 1321, 1321, 1321, 1321,
	-1000, -1000, -1000, -1000, 18991, 1321, 1321, 1321, 1321, 1321,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22016, -1000,
	15971, 1321, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 42557, -1000, 1321, 233, 42557, 42557, 368, 2146,
	1734, -1000, 2266, 2207, 408, -1000, 2556, 1364, 1908, 1214,
	1734, 1543, 42557, -1000, 1679, -1000, -1000, -1000, 1973, 1045,
	1187, -1000, -1000, -1000, -1000, 1267, 18387, -1000, -1000, 2287,
	-1000, 21412, 570, 915, 2282, 38933, -1000, 443, 443, 1562,
	12936, 38, -1000, -1000, -1000, 748, 27457, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2101, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1817, 42557, -1000, -1000, 4031, 1097, -1000, 1816, -1000,
	1782, -1000, 1758, 18387, 1859, 474, 1097, 464, 463, 461,
	-1000, -2, -1000, -1000, -1000, -1000, -1000, -1000, 693, 693,
	693, -1000, 391, 2228, 298, 4482, -1000, -1000, -1000, 38329,
	1810, 1097, -1000, 1805, -1000, 842, 542, 576, 576, 1097,
	-1000, -1000, 42557, 1097, 839, 837, 1097, 1097, 42557, 42557,
	-1000, 37725, -1000, 37121, 36517, 1014, 42557, 35913, 35309, 34705,
	34101, 33497, -1000, 1982, -1000, 1969, -1000, -1000, -1000, 42557,
	1097, 42557, 42557, 372, -1000, -1000, 42557, 1097, -1000, -1000,
	1013, 1008, 1007, 693, 693, 1000, 1186, 1185, 1184, 693,
	693, 999, 1181, 29269, 1180, 315, 995, 991, 989, 1031,
	1169, 257, 1168, 1029, 998, 988, 42557, 1800, 42557, -1000,
	288, 728, 500, 731, 2107, 2047, 1557, 454, 470, 1097,
	438, 438, 42557, -1000, 11718, -1000, -1000, 1167, 18387, -1000,
	834, 805, 805, -1000, -1000, -1000, -1000, -1000, -1000, 803,
	42557, 834, -1000, -1000, -1000, 805, 803, 42557, 803, 803,
	803, 803, 805, 805, 805, 803, 42557, 42557, 42557, 42557,
	42557, 42557, 42557, 42557, 42557, 11109, 677, 803, -247, -1000,
	1165, -1000, 1939, -1000, -1000, -1000, -1000, -1000, -1000, 11109,
	11109, -1000, -1000, -1000, -1000, 206, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -3, 1555, 32893, -1000, -254,
	-267, -276, -280, -1000, -1000, -1000, -283, -310, -1000, -1000,
	-1000, 18387, 18387, 18387, 18387, -116, -1000, 884, 18991, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 149, 810, 18991, 18991,
	18991, 18991, 18991, 18991, 18991, 18991, 18991, 18991, 18991, 18991,
	18991, 18991, 18991, 840, 4621, 4621, 639, 639, 639, 639,
	-1000, 17783, 18387, 18387, 639, -1000, 1097, 17783, 17783, 18387,
	2081, 770, 1117, 42557, -1000, 1214, -1000, -1000, -1000, 925,
	-1000, 42557, 42557, 797, 18387, 18387, 18387, 18387, 18387, 18387,
	14758, 18387, 18387, 18387, 18387, 18387, 18387, 18387, 18387, 18387,
	18387, 18387, 18387, 18387, 18387, 18387, 18387, 18387, 18387, 18387,
	18387, 18387, 18387, 18387, 18387, 18387, 18387, 1214, 18387, 1727,
	18387, 18387, 14154, 11718, 17783, 17783, 17783, 17783, 17783, 32289,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 567, 1339, 1353, 1519, 18387, -1000, 1548, -1000,
	-103, 23833, 18387, 1164, 2279, 1871, 42557, -1000, -1000, -1000,
	2146, -1000, 2146, 1339, 2087, 1994, 17783, -1000, -1000, 2087,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1338, -1000,
	42557, 1543, 2139, 42557, 1970, 1161, 393, -1000, 18387, 18387,
	1536, -1000, 1609, 42557, -1000, -116, -1000, 31685, -1000, -1000,
	10500, -1000, 42557, 349, 42557, -1000, 23229, 31081, 12327, 38,
	-1000, 12327, 1453, -1000, 60, 73, 15362, 636, -1000, -1000,
	-1000, 2970, 20199, 1290, 636, 137, -1000, -1000, -1000, 1758,
	-1000, 1758, 1758, 1758, 1758, 393, 393, 393, 393, -1000,
	-1000, -1000, -1000, -1000, 1795, 1793, -1000, 1758, 1758, 1758,
	1758, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1788, 1788,
	1788, 1763, 1763, 430, -1000, 18387, 410, 30477, 2116, 984,
	1673, 288, 440, 1867, 1097, 1097, 1097, 440, -1000, 1833,
	1434, 1357, -1000, -394, 1534, -1000, -1000, 2227, -1000, -1000,
	670, 863, 861, 881, 42557, 241, 346, -1000, 420, -1000,
	30477, 1097, 831, 576, 1097, -1000, 1097, -1000, -1000, -1000,
	-1000, -1000, 1097, -1000, -1000, 1508, -1000, 1505, 893, 859,
	887, 857, 1508, -1000, -1000, -44, 1508, -1000, 1508, -1000,
	1508, -1000, 1508, -1000, 1508, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 740, 229, 42557, 241, 840, -1000, 453,
	-1000, -1000, -1000, 840, 840, -1000, -1000, -1000, -1000, 1159,
	1154, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-379, 42557, -1000, 281, 725, 339, 377, 337, 42557, 252,
	2156, 2149, 2144, 284, 328, 42557, 42557, 438, 1917, 42557,
	2127, 42557, -1000, -1000, -1000, -1000, -1000, 1117, 42557, -1000,
	-1000, 803, 803, -1000, -1000, 42557, 803, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 803, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 42557, -1000, -1000, -1000, -1000, 42557, -1000, -1000, -1000,
	-1000, -1000, 286, 50, 375, -1000, -1000, -1000, -1000, -1000,
	2168, -1000, 1117, 818, 811, -1000, 1321, -1000, -1000, 888,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 149, 18991, 18991,
	18991, 1694, 484, 1751, 1502, 1570, 977, 977, 994, 994,
	644, 644, 644, 644, 644, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1149, -1000, 1588, -1000, 1449, 1455, 1214,
	1588, 1588, 1739, 17783, -1000, -1000, 799, -1000, 18387, 1214,
	-1000, -1000, 1214, 1214, 1488, 1482, 2274, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1105, 1673,
	1673, 1673, 1673, 1673, 18387, 1413, -1000, -1000, -1000, 2390,
	2369, 1214, 1366, 1214, 1479, -1000, 2352, 1673, 2345, 2322,
	2288, 1304, 2283, 2278, 2268, 1673, 1673, 1673, 1480, 2258,
	2250, 2203, 2143, 2126, 2004, 1934, 1898, 1879, 1673, -118,
	1673, 1214, 1214, 1214, 1841, 1343, 1214, 17783, 17783, 1475,
	1321, 559, -1000, 1588, 1214, 1214, 1588, 1588, -1000, 11718,
	1214, -1000, 1519, 42557, -1000, -232, -1000, 39, 633, 1321,
	-1000, 29269, 1214, -1000, 1506, -1000, 43765, -1000, -1000, -1000,
	-1000, -1000, 26853, 1821, 2087, -1000, -1000, 1321, 1714, -1000,
	-1000, 393, 115, 26249, -1000, -1000, 1117, 1117, 18387, -1000,
	-1000, -1000, -1000, -1000, -1000, 530, 2245, 425, 1321, -1000,
	1418, 2379, -1000, -1000, -1000, 2138, 20808, -1000, 1321, 1321,
	42557, 1743, 1279, -1000, 504, -1000, 1453, 38, 61, -1000,
	-1000, -1000, -1000, 1117, -1000, 1320, 354, 3542, -1000, 423,
	-1000, -1000, -1000, -1000, 2059, 131, -1000, -1000, -1000, 393,
	393, -1000, -1000, -1000, -1000, -1000, -1000, 1145, 1145, -1000,
	-1000, -1000, -1000, -1000, 983, -1000, -1000, -1000, 976, -1000,
	-1000, 1845, 1813, 410, -1000, -1000, 693, 1144, -1000, -1000,
	2058, 693, 693, 42557, -1000, -1000, 1275, 2116, 281, 42557,
	775, 1911, -1000, 1867, 1867, 1867, 42557, -1000, -1000, -1000,
	-1000, -1000, -1000, -386, 75, 403, -1000, -1000, -1000, 3389,
	42557, 1681, -1000, 242, -1000, 1271, -1000, 42557, -1000, 1676,
	1785, 1097, 1097, -1000, -1000, -1000, 42557, 1321, -1000, -1000,
	-1000, -1000, 468, 2105, 2103, -1000, -1000, -137, 241, 242,
	636, 1097, -1000, -1000, -1000, -1000, -1000, -382, 1640, 459,
	250, 353, 42557, 42557, 42557, 42557, 42557, 494, -1000, -1000,
	-1000, -1000, 227, -1000, -1000, 227, -1000, -1000, -1000, -1000,
	320, 449, -1000, 42557, 42557, 626, -1000, -1000, -1000, 805,
	-1000, -1000, 805, -1000, -1000, -1000, -1000, -1000, 2088, 42557,
	47, -329, -1000, -323, 18387, -1000, -1000, -1000, -1000, 1614,
	462, 1751, 18991, 18991, 17783, -39, 616, 616, 840, -1000,
	-1000, -1000, 18387, 18387, 1410, 760, -1000, 18387, 1231, -1000,
	-1000, -1000, 18387, 18387, 18387, 1214, 329, -1000, -1000, -1000,
	-1000, -1000, 2272, -1000, 18387, 18387, 18387, -1000, -1000, 18387,
	18387, -1000, 18387, 18387, 19595, 1214, 19595, 18387, 18387, 19595,
	-1000, -1000, -1000, -1000, 19595, 18387, 18387, 18387, 18387, 18387,
	18387, 18387, 18387, 18387, -1000, -1000, 30477, 111, -118, -118,
	-118, 1634, 111, 1245, -1000, 1588, 1588, 17783, 11718, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	633, -1000, 576, 576, 576, 42557, -1000, -1000, -1000, -1000,
	-1000, -1000, 1445, 2155, -1000, 2009, 2008, 2263, 2245, -1000,
	23229, 2087, -1000, -1000, 42557, -226, -1000, 2037, 2007, -1000,
	-1000, -1000, -1000, 9891, 2146, 18387, 1910, 42557, 164, -1000,
	22625, 42557, 42557, 23229, 23229, 23229, 23229, 23229, -1000, 1932,
	1930, -1000, 1996, 1957, 1976, 42557, -1000, 1571, 1214, 2207,
	20808, 408, 18387, 25041, 1378, 23229, -1000, -1000, 23229, 42557,
	9282, -1000, -1000, 45, 64, -1000, -1000, -1000, -1000, 2970,
	-1000, -1000, 926, 2137, 2054, -1000, -1000, -1000, -1000, 1564,
	-1000, 1559, 1439, 1545, 229, -1000, 1849, 2085, 693, 693,
	-1000, 970, -1000, 1097, 1104, 1098, -1000, -1000, -1000, 458,
	-1000, 2122, 42557, 1905, 1899, 1895, -1000, -392, 963, 1781,
	1844, 18387, 1779, 2226, 1400, 42557, -1000, -1000, 42557, -1000,
	247, -1000, 410, 42557, -1000, -1000, -1000, 346, 42557, -1000,
	7114, -1000, 242, -1000, -1000, -1000, -1000, -1000, -1000, 42557,
	255, -1000, 1766, 1198, -1000, -1000, 1747, -1000, -1000, -1000,
	-1000, 231, 338, 228, 1090, 228, -1000, 42557, 624, 1813,
	42557, -1000, -1000, -1000, 803, 803, -1000, -1000, 2079, -1000,
	1097, 1673, 18991, 18991, -1000, 639, -1000, 1321, 1214, 1758,
	1758, -1000, 1758, 1763, -1000, 1758, 195, 1758, 191, 1758,
	-1000, -1000, 1214, 1214, 1286, 1276, -10, -1000, 1117, 18387,
	1819, 1814, 1673, -1000, 1755, 1752, 18387, 1673, 1673, 1673,
	-1000, 1117, 1304, 1808, 1402, -1000, -1000, -1000, -1000, 1432,
	1673, 1798, -224, 1214, 1539, 1539, 1539, 1539, 1539, 1519,
	1519, 1519, 1519, 28061, -1000, -118, -1000, -1000, -159, -162,
	-1000, -1000, -1000, 1214, 1214, 1214, -118, 1430, 1430, 1430,
	-1000, -1000, 1214, -1000, -1000, 2161, 2161, 2161, 1490, 43161,
	42557, -1000, -1000, -1000, -1000, 2245, 2241, 1424, -1000, -1000,
	115, 450, -1000, 2030, 2007, -1000, 2223, 2031, 2215, -1000,
	-1000, -1000, 1117, -1000, 2110, 1294, -1000, 715, 1358, -1000,
	-1000, 17179, 1493, 1999, 503, 1490, 1528, 2379, 1883, 1893,
	2397, -1000, -1000, -1000, -1000, 1928, -1000, 1889, -1000, -1000,
	1679, -1000, -1000, 1353, 1214, 1761, 349, 23229, 1522, 1522,
	-1000, 497, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 896,
	5830, 2301, -1000, 1089, -1000, 1253, 196, 962, -1000, -1000,
	693, 693, -1000, 825, 808, -1000, 42557, 1741, -1000, 393,
	1088, 393, 952, -1000, 949, -1000, -1000, -1000, -1000, 1966,
	1960, -1000, -1000, -1000, -1000, 42557, -1000, -1000, 42557, 42557,
	42557, 1724, 2214, -1000, 18387, 1720, 695, 1754, 42557, 42557,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 457, 693, -358, 327, 326, 693, 693, 693, -393,
	-1000, -1000, 1471, 1467, -1000, -85, -1000, 18387, -1000, -1000,
	-1000, 959, 959, -1000, 1679, -1000, -1000, -1000, 1265, -1000,
	-1000, -47, 42557, 42557, 42557, 42557, -1000, 932, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	639, 18991, -1000, -1000, 393, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 18387, -1000, 18387, -1000, 2146, 1086,
	1117, 18387, 18387, -1000, 942, 941, 1673, -1000, -1000, -1000,
	1214, 19595, -1000, 19595, -1000, 18387, 268, 616, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1214, 348,
	2232, 2212, -1000, -1000, -1000, 2251, 2251, 2251, -1000, 1214,
	18387, 1214, 1214, -1000, 1321, 2057, 1321, 1321, 25041, -1000,
	-1000, 2241, 2235, 2194, 2015, 2022, 2022, 2030, -1000, 2189,
	2183, -1000, 1085, 2180, 1080, 802, -1000, 42557, 18387, 164,
	-1000, 422, 42557, 164, 42557, -1000, 2232, -1000, -1000, 18387,
	1718, -1000, 18387, -1000, -1000, -1000, -1000, -1000, -1000, 4621,
	2245, 1522, -1000, -1000, 650, -1000, 18387, -1000, -1000, -1000,
	4987, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1075,
	1074, -1000, -1000, 1700, 18387, -1000, -1000, -1000, 1251, 1249,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1679, -1000, -1000,
	-1000, -1000, 346, -391, 1744, 42557, 939, -1000, 1415, 1400,
	334, 164, 1073, 693, 693, 693, 931, 927, 29269, 1407,
	-1000, 42557, 411, -1000, 346, -1000, -92, -95, 1673, -1000,
	-1000, 2135, -1000, -1000, 11718, -1000, -1000, 1674, 1865, -1000,
	-1000, -1000, 245, -1000, 1673, 1673, 1214, -1000, 1673, 1673,
	1244, 1239, -1000, -1000, 1402, -1000, 1262, -1000, 268, 1214,
	1890, -1000, -1000, 4621, -1000, -1000, 2232, -361, 18387, 111,
	-1000, -1000, 240, 111, 111, 111, 1117, 111, 111, 25645,
	-1000, 2179, 2178, 29873, 29873, 633, 2235, -127, 18387, 18387,
	2010, 914, -1000, -1000, -1000, -1000, 1040, 1035, -1000, 1030,
	-1000, 2297, -1000, 1117, -1000, 164, -1000, 478, 1358, -1000,
	2146, 1117, 42557, 1117, 125, 2232, -1000, 1673, -1000, 1321,
	1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
	1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
	1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
	1321, -1000, -1000, 42557, 1669, -1000, -1000, 2134, 1376, 74,
	-1000, 1350, -1000, -1000, 148, -1000, 18387, -1000, 29269, 1026,
	1020, -1000, -1000, -1000, -1000, -393, -1000, -1000, -1000, -1000,
	-1000, -1000, 408, 1397, -1000, 686, 42557, 42557, 1214, 358,
	-71, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	18387, -1000, 1214, 1888, -1000, -191, -1000, -361, -1000, -1000,
	226, -1000, -1000, 1366, -118, -1000, -1000, -118, -118, -118,
	-118, -118, 1333, -1000, -1000, -1000, -1000, -1000, 1333, 1333,
	-1000, -127, -1000, 1371, -1000, 42557, 1117, 1366, -1000, 913,
	-1000, -1000, -1000, -1000, -1000, 42557, 1358, 42557, -1000, 1308,
	1214, 1321, 2146, -1000, 1264, -1000, 408, -1000, 1670, 1844,
	-1000, -1000, -1000, 16575, -1000, -1000, -1000, -1000, -1000, 192,
	-46, 11718, 8673, 1242, -1000, -1000, 1947, -42, -76, 1304,
	-1000, -312, -1000, -1000, -1000, -1000, 256, -1000, -171, -341,
	-172, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 28665,
	-1000, -1000, -1000, -1000, -127, -1000, -1000, 2132, -1000, -1000,
	1315, -1000, -1000, 25041, 41953, -1000, -37, 262, -46, 18387,
	1503, 1214, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	52, -1000, -1000, -1000, -1000, -1000, 1747, -1000, 1912, -1000,
	1214, 809, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	42557, 1321, -1000, 1220, -1000, 3848, -181, 1887, -1000, -27,
	-1000, -1000, -1000, 894, 1019, -1000, -1000, -1000, -1000, -1000,
	-1000, 1486, 42557, -1000, 428, -1000, -1000, -47, -48, -1000,
	256, -1000, 28061, -1000, 41953, -176, 636, 4621, -1000, 1886,
	1874, 2256, -1000, -1000, -1000, -1000, -1000, -1000, -400, 1205,
	263, -1000, -73, -1000, 1214, -1000, -1000, 2119, 125, -1000,
	2295, -1000, 2257, 685, 685, -1000, 902, -400, -1000, -83,
	-1000, -190, -1000, -1000, -1000, -1000, -1000, 424, 975, -1000,
	-1000, -1000, -1000, 4621, -1000, -1000, -1000, 269, 269, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 2750, 2749, 31, 1, 46, 43, 2748, 39, 121,
	203, 30, 204, 122, 2747, 2745, 2742, 2741, 2740, 2739,
	2734, 235, 232, 231, 2732, 2730, 2728, 2726, 2724, 2723,
	2722, 2720, 2719, 2718, 228, 181, 200, 2715, 2714, 2710,
	141, 195, 108, 110, 198, 2708, 2707, 97, 2706, 2705,
	2704, 194, 192, 191, 810, 2700, 189, 139, 60, 2698,
	2696, 2694, 2693, 2692, 2691, 2690, 2688, 2681, 2680, 2679,
	2678, 2677, 2676, 2675, 2674, 2673, 283, 2672, 2671, 18,
	2670, 100, 2667, 2666, 2665, 2663, 2662, 25, 2661, 42,
	21, 102, 2660, 2658, 101, 2657, 2656, 69, 2655, 2644,
	17, 2640, 24, 2639, 37, 2638, 2635, 150, 2634, 2632,
	2628, 44, 2626, 2624, 2622, 2618, 2617, 2616, 2615, 160,
	2614, 2612, 2610, 2609, 205, 2608, 2607, 212, 127, 136,
	2606, 2605, 123, 197, 2604, 145, 2603, 2602, 2601, 171,
	2600, 5831, 2599, 2598, 82, 81, 2596, 90, 22, 104,
	77, 15, 9, 13, 2593, 2592, 78, 96, 2590, 125,
	88, 2588, 133, 130, 2587, 2584, 10, 5, 2583, 6,
	4, 7, 83, 2581, 2572, 147, 2571, 2570, 2569, 111,
	2566, 2564, 2854, 2560, 120, 153, 126, 95, 2557, 58,
	84, 2555, 2551, 2544, 2541, 2539, 61, 2536, 2535, 2533,
	161, 105, 182, 71, 49, 47, 63, 174, 2532, 73,
	106, 2524, 158, 154, 2523, 92, 76, 52, 48, 2517,
	132, 152, 144, 55, 124, 188, 2515, 2514, 70, 91,
	2513, 2511, 2510, 2509, 2508, 2501, 80, 2498, 68, 2496,
	209, 2495, 38, 2494, 65, 45, 2493, 85, 149, 86,
	32, 2485, 186, 2484, 66, 183, 151, 179, 2479, 2478,
	2477, 2475, 199, 343, 2472, 2471, 128, 187, 163, 176,
	115, 2462, 361, 2461, 2458, 118, 1498, 4158, 26, 185,
	2456, 2454, 4507, 175, 50, 28, 2453, 159, 2450, 2442,
	2441, 219, 184, 134, 1008, 74, 2440, 2436, 16, 2434,
	2433, 2424, 2422, 2417, 2414, 99, 41, 36, 35, 225,
	89, 11, 177, 93, 2412, 2402, 2401, 148, 116, 2400,
	180, 178, 168, 155, 2399, 193, 166, 143, 2398, 94,
	34, 2397, 2392, 2391, 2386, 131, 2383, 2381, 2379, 2378,
	172, 164, 146, 107, 2377, 103, 142, 167, 165, 67,
	2375, 53, 2372, 2371, 33, 196, 29, 2368, 14, 75,
	79, 27, 138, 129, 2367, 0, 2366, 19, 190, 360,
	169, 2365, 2363, 2, 8, 12, 2360, 2357, 2355, 2353,
	156, 2352, 2345, 2343, 2339, 23, 59, 20, 3, 140,
	98, 2337, 2335, 4000, 1469, 157, 2328, 206,
}

//line sql.y:7401
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 391, 392, 392, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 365, 365,
	365, 368, 368, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 105, 105, 22, 23, 23, 23, 23,
	395, 395, 177, 177, 175, 175, 176, 176, 247, 247,
	24, 25, 25, 257, 257, 256, 256, 256, 258, 258,
	258, 258, 294, 294, 26, 26, 26, 26, 26, 125,
	125, 367, 367, 366, 358, 358, 357, 357, 356, 364,
	364, 363, 363, 362, 38, 39, 48, 48, 48, 48,
	49, 50, 369, 369, 331, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 333, 333, 319, 319, 332, 332, 332, 332, 332,
	332, 332, 318, 318, 136, 136, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 384, 384, 384, 383, 383, 227, 227,
	227, 227, 227, 227, 227, 227, 146, 146, 156, 156,
	156, 156, 156, 144, 144, 145, 143, 143, 143, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 155, 155, 151, 151, 151, 152, 152,
	152, 153, 153, 385, 385, 385, 385, 298, 298, 298,
	298, 301, 301, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 300, 300, 300, 300, 300, 302, 302, 302,
	302, 302, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 304, 304, 304,
	304, 304, 304, 304, 304, 317, 317, 305, 305, 312,
	312, 313, 313, 313, 314, 314, 314, 315, 315, 310,
	310, 310, 310, 310, 310, 311, 311, 311, 320, 345,
	345, 344, 344, 342, 342, 342, 342, 342, 342, 342,
	342, 329, 329, 339, 339, 339, 339, 339, 328, 328,
	324, 324, 324, 325, 325, 326, 326, 323, 323, 327,
	327, 341, 341, 340, 340, 321, 321, 322, 322, 347,
	386, 386, 386, 386, 386, 387, 387, 348, 376, 378,
	378, 378, 377, 377, 374, 375, 373, 373, 373, 373,
	373, 81, 81, 81, 270, 270, 271, 271, 337, 337,
	336, 336, 336, 338, 338, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 265, 265, 265, 372,
	372, 372, 372, 372, 372, 371, 371, 371, 334, 334,
	334, 370, 370, 57, 57, 210, 210, 389, 389, 390,
	390, 390, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 107, 107, 108, 108, 108, 108, 110, 110,
	110, 350, 350, 58, 58, 3, 3, 165, 167, 168,
	168, 166, 166, 166, 166, 166, 166, 60, 60, 59,
	59, 170, 169, 171, 171, 171, 1, 1, 2, 2,
	4, 4, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 316, 316, 316, 349, 349, 351,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	113, 112, 112, 111, 114, 114, 114, 114, 114, 114,
	114, 114, 353, 353, 353, 61, 61, 354, 306, 307,
	308, 5, 6, 330, 352, 121, 121, 28, 37, 37,
	29, 29, 29, 29, 30, 30, 62, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 264, 264,
	273, 273, 263, 263, 287, 287, 287, 266, 266, 266,
	267, 267, 382, 382, 382, 260, 260, 64, 64, 64,
	66, 66, 67, 68, 68, 289, 289, 290, 290, 69,
	70, 82, 82, 82, 82, 82, 82, 106, 106, 106,
	15, 15, 15, 15, 78, 78, 78, 14, 14, 65,
	65, 72, 379, 379, 380, 381, 381, 381, 381, 73,
	75, 31, 31, 31, 31, 31, 31, 131, 131, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 126, 126, 126, 120, 120, 396, 76, 77, 77,
	124, 124, 124, 117, 117, 117, 123, 123, 123, 16,
	16, 17, 246, 246, 18, 18, 128, 128, 130, 130,
	130, 130, 130, 132, 132, 132, 132, 132, 132, 132,
	127, 127, 129, 129, 129, 129, 280, 280, 280, 279,
	279, 159, 159, 161, 160, 160, 162, 162, 163, 163,
	163, 163, 208, 208, 185, 185, 244, 244, 242, 242,
	243, 243, 245, 245, 245, 245, 248, 248, 164, 164,
	164, 164, 172, 172, 173, 173, 174, 174, 288, 288,
	285, 285, 285, 284, 284, 178, 178, 178, 180, 179,
	179, 179, 179, 181, 181, 183, 183, 182, 182, 184,
	189, 189, 188, 188, 186, 186, 186, 186, 187, 187,
	187, 187, 190, 190, 141, 141, 141, 141, 141, 141,
	141, 154, 154, 154, 154, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 148, 83, 83, 83, 84, 84, 85, 85,
	85, 86, 86, 86, 86, 86, 87, 87, 87, 142,
	142, 89, 89, 88, 88, 203, 203, 90, 90, 91,
	91, 94, 94, 93, 92, 92, 98, 98, 95, 95,
	97, 97, 96, 99, 99, 100, 101, 101, 261, 261,
	191, 191, 199, 199, 199, 199, 192, 192, 192, 192,
	192, 192, 192, 200, 200, 200, 207, 201, 201, 197,
	197, 197, 197, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 215, 215, 296, 296, 361, 361, 360,
	360, 359, 359, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 397, 397, 309, 309, 309, 309,
	198, 198, 198, 198, 198, 122, 122, 122, 122, 122,
	293, 293, 293, 297, 297, 297, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 213, 213, 118, 118, 211, 211, 212, 214, 214,
	209, 209, 209, 194, 194, 194, 216, 216, 217, 217,
	102, 103, 103, 104, 104, 218, 218, 220, 219, 219,
	221, 222, 222, 222, 223, 223, 224, 224, 224, 47,
	47, 47, 47, 47, 42, 42, 42, 42, 43, 43,
	43, 133, 133, 133, 133, 135, 135, 134, 134, 79,
	79, 80, 80, 80, 139, 139, 140, 140, 140, 137,
	137, 138, 138, 240, 240, 225, 225, 225, 232, 232,
	232, 228, 228, 230, 230, 230, 231, 231, 231, 229,
	237, 237, 239, 239, 238, 238, 234, 234, 235, 235,
	236, 236, 236, 233, 233, 193, 193, 193, 193, 193,
	241, 241, 241, 241, 249, 249, 204, 204, 206, 206,
	205, 205, 158, 250, 250, 254, 251, 251, 255, 255,
	255, 255, 255, 252, 252, 253, 253, 281, 281, 281,
	259, 259, 272, 272, 268, 268, 269, 269, 262, 262,
	274, 274, 274, 74, 202, 202, 346, 346, 343, 277,
	277, 278, 278, 282, 282, 286, 286, 283, 283, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 393,
	394, 291, 292, 292, 292,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	2, 2, 2, 1, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 1, 1, 2, 1, 3,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 3, 4, 3, 7, 0, 3, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	6, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 9, 6, 6, 6, 2, 2, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 0, 1, 2, 5, 0, 3, 4, 3, 4,
	2, 0, 1, 1, 2, 2, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 5, 1, 3, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 5, 4, 4, 4, 4, 4, 7, 4, 6,
	6, 6, 4, 4, 4, 7, 8, 6, 5, 6,
	8, 11, 7, 8, 8, 9, 4, 4, 4, 4,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	4, 4, 6, 5, 5, 5, 9, 9, 9, 6,
	9, 9, 9, 0, 2, 0, 2, 0, 2, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -391, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -105, -33, 32, -38, -48, 220, -49, -39, 221,
	-50, 223, 222, 259, 224, 252, 74, 305, 306, 308,
	309, 310, 311, -106, 257, 258, 226, 36, 45, 33,
	34, 37, 230, 265, 266, 229, -10, -34, 8, -393,
	11, 436, 254, 253, 28, -12, 470, 85, -392, 613,
	-240, -225, 22, 33, 29, -224, -220, -124, -225, 20,
	18, 7, -76, -396, -76, -76, 12, 13, -76, -331,
	-333, 85, 156, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -355, -44, -41, 225, 222, 269,
	119, 120, 259, 260, 261, 224, 243, 258, 262, 257,
	278, -40, 80, 33, 470, 473, -338, 221, 227, 228,
	437, 122, 121, 75, 223, -335, 359, 502, 583, -56,
	585, 101, 103, 584, 44, 233, 586, 587, 588, 509,
	589, 242, 590, 591, 592, 593, 599, 551, 600, 601,
	602, 123, 7, -76, -286, -282, -365, -276, 88, 89,
	90, 467, 245, 500, 501, 294, 80, 41, 356, 359,
	502, 583, 305, 319, 313, 340, 332, 468, 503, 297,
	246, 282, 577, 330, 131, 585, 300, 504, 260, 364,
	365, 505, 366, 101, 308, 403, 598, 299, 506, 596,
	103, 584, 79, 51, 580, 44, 255, 328, 229, 324,
	586, 283, 507, 478, 276, 122, 119, 605, 36, 322,
	50, 30, 595, 121, 49, 587, 147, 508, 588, 509,
	368, 347, 571, 48, 369, 261, 510, 83, 266, 472,
	303, 579, 370, 323, 371, 293, 594, 226, 511, 563,
	372, 373, 572, 512, 348, 352, 513, 395, 374, 612,
	52, 514, 515, 573, 120, 516, 78, 589, 317, 318,
	517, 291, 244, 397, 344, 449, 456, 457, 107, 108,
	452, 109, 458, 110, 459, 460, 461, 450, 111, 104,
	451, 462, 463, 345, 346, 112, 464, 106, 105, 453,
	455, 113, 465, 242, 35, 375, 469, 295, 58, 270,
	398, 46, 350, 609, 45, 567, 518, 570, 343, 339,
	446, 53, 519, 520, 521, 522, 590, 342, 316, 338,
	604, 4, 288, 591, 62, 228, 354, 353, 355, 277,
	394, 335, 523, 524, 525, 249, 81, 526, 325, 21,
	527, 528, 376, 284, 529, 56, 530, 531, 401, 258,
	532, 54, 592, 39, 533, 263, 606, 593, 534, 535,
	536, 537, 265, 538, 378, 539, 377, 349, 351, 272,
	379, 471, 540, 304, 321, 262, 597, 541, 250, 578,
	264, 269, 257, 402, 251, 542, 543, 544, 545, 546,
	298, 562, 547, 548, 309, 599, 447, 43, 549, 550,
	551, 552, 553, 292, 287, 396, 405, 61, 82, 361,
	554, 555, 576, 315, 285, 556, 306, 55, 600, 601,
	602, 279, 603, 9, 610, 611, 381, 123, 289, 290,
	47, 336, 271, 557, 301, 558, 326, 327, 341, 314,
	337, 307, 564, 273, 382, 448, 259, 559, 404, 286,
	357, 362, 302, 475, 278, 383, 575, 474, 334, 331,
	280, 560, 384, 234, 274, 275, 561, 565, 385, 386,
	296, 387, 388, 389, 390, 391, 393, 392, 281, 473,
	312, 329, 363, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 445, 232, -76, 232, -182, -282, 232, -252, 365,
	-273, 367, 380, 375, 385, 373, -264, 376, 378, 272,
	-382, 395, 232, 382, 220, 368, 377, 386, 387, 296,
	393, 388, 392, 281, 389, 390, 391, -365, 173, 588,
	603, 131, 333, 372, 370, 396, 567, -282, 307, -289,
	312, -277, -365, -276, 310, -182, -82, 563, 224, -291,
	-291, -126, 567, 569, -201, -141, 140, -154, -157, -147,
	-149, -195, -196, -197, -198, -155, -209, 162, 163, 170,
	141, -207, -158, 26, 466, 438, 437, 173, 31, -148,
	68, 69, 440, 441, 143, 57, 413, 414, -156, 408,
	415, 410, 443, 444, 114, 445, 104, 106, 105, 446,
	447, 448, 345, 346, 449, 450, 451, 107, 108, 109,
	110, 111, 112, 113, 452, 455, 453, 454, 456, 457,
	458, 463, 464, 459, 460, 461, 462, 465, -86, -98,
	491, 490, -99, -277, -282, 237, 407, 231, 168, 436,
	-150, -145, -8, -205, 216, 406, 411, 412, 416, 409,
	477, 479, 494, 495, 497, 482, 487, 486, 489, -365,
	-276, -152, -151, -191, 91, 97, 102, 98, -388, 115,
	-393, 581, 92, 93, 94, 95, 96, 116, 117, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 44, 381, 381, -182, -76, -76, -76, -76, -218,
	-124, -220, -10, -8, -393, 8, -76, -8, -9, -13,
	-34, -36, 496, -35, -282, -225, -240, 12, 158, 42,
	50, -223, -224, -12, -8, -141, 19, 23, 24, -129,
	164, -141, -282, -77, -129, -262, 236, -76, -76, -251,
	-294, 307, -255, 396, 395, -278, -253, -277, -275, -252,
	394, 225, 23, 476, 138, 25, 27, 142, 173, 126,
	19, 143, 37, 227, 333, 243, 172, 239, 437, 220,
	72, 477, 408, 410, 406, 413, 439, 440, 407, 367,
	31, 13, 479, 28, 253, 24, 38, 166, 222, 146,
	480, 256, 26, 254, 114, 117, 482, 22, 75, 248,
	14, 241, 40, 16, 483, 484, 17, 237, 236, 158,
	233, 70, 11, 216, 29, 155, 66, 485, 133, 486,
	487, 488, 489, 127, 68, 156, 20, 607, 411, 412,
	33, 568, 466, 267, 168, 73, 59, 569, 140, 409,
	490, 491, 115, 492, 118, 76, 574, 135, 18, 71,
	42, 493, 268, 494, 238, 608, 495, 399, 496, 157,
	223, 436, 69, 497, 581, 582, 231, 380, 8, 442,
	32, 252, 240, 125, 67, 498, 232, 145, 443, 444,
	235, 128, 116, 7, 132, 34, 12, 74, 77, 414,
	415, 416, 57, 124, 470, 144, 15, 499, 400, 137,
	131, -332, 156, -318, -322, -277, 247, -348, 243, -182,
	-341, -340, -277, -393, -125, -272, 233, 241, 240, 132,
	-369, 135, 289, 407, 231, -51, -52, -53, -252, 172,
	587, -107, 264, 268, 86, 86, -322, -321, -320, -370,
	268, 247, -347, -339, 239, 248, -328, 240, 241, -323,
	233, 133, -370, -323, 238, 248, 243, 247, 268, 268,
	123, 268, 123, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 263, -329, 148, -329, 474, 474, -335, -370,
	243, -370, -370, 235, 35, 35, -274, -323, 235, 25,
	-329, -329, -329, -252, 172, -329, -329, -329, -329, 276,
	276, -329, -329, -329, -329, -329, -329, -329, -329, -329,
	-329, -329, -329, -329, -329, -329, -329, -329, 232, -369,
	-133, 392, 296, 80, -54, 278, -37, -182, -272, 233,
	234, -369, 265, -182, 217, -182, -266, 156, 15, -266,
	-263, 381, 379, 366, 371, -266, -266, -266, -266, 279,
	364, -324, 233, 35, 244, 381, 279, 364, 279, 280,
	279, 280, 374, 384, 279, -287, 14, 158, 407, 369,
	373, 272, 232, 273, 234, 383, 280, -287, 92, -267,
	156, 381, 275, -266, -266, -292, -393, -278, 333, -365,
	570, -292, -292, 32, 89, 235, -277, -78, -277, 92,
	-15, -11, -22, -21, -23, 148, -131, 381, -119, 173,
	588, 571, 572, 573, 570, 378, 578, 576, 574, 279,
	575, 86, 135, 137, 138, 4, -141, 155, -192, 148,
	149, 150, 151, 152, 153, 154, 158, 140, 142, 156,
	157, 136, 159, 160, 161, 162, 163, 164, 165, 167,
	166, 168, 169, 172, 218, 219, -149, -149, -149, -149,
	-207, -393, -393, -393, -149, -261, -393, -393, -393, -393,
	-393, -213, -141, -393, -397, -393, -397, -397, -309, -393,
	-309, -393, -393, -393, -393, -393, -393, -393, -393, -393,
	-393, -393, -393, -393, -393, -393, -393, -393, -393, -393,
	-393, -393, -393, -393, -393, -393, -393, -393, -393, -393,
	-393, -393, -393, -393, -393, -393, -393, -393, -393, -393,
	-393, -393, -393, 217, -393, -393, -393, -393, -393, -149,
	-309, -309, -309, -309, -309, 102, 97, 91, -209, 98,
	92, -277, -282, -8, -9, -201, -393, -291, -379, -380,
	-185, -182, -393, 296, -277, -277, 265, -223, -12, -8,
	-218, -224, -220, -8, -76, -117, -130, 63, 64, -132,
	24, 38, 67, 65, 23, -394, 87, -394, -240, -394,
	86, -36, -244, 85, 61, 43, 92, 92, 86, 21,
	-219, -221, -141, 14, -280, 4, -279, 25, -277, 92,
	217, 100, 14, -183, 29, -182, -262, -262, 86, 307,
	-255, -294, -257, -256, 397, 399, 148, -281, -277, 92,
	31, 87, 86, -182, -298, -301, -303, -302, -304, -299,
	-300, 330, 331, 173, 334, 336, 337, 338, 339, 340,
	341, 342, 343, 344, 347, 32, 255, 326, 327, 328,
	329, 348, 349, 350, 351, 352, 353, 354, 355, 313,
	332, 468, 314, 315, 316, 317, 318, 319, 321, 322,
	323, 324, 325, -368, -365, 85, 87, 86, -305, 85,
	-141, -133, 232, -365, 233, 233, 233, -76, 436, -329,
	-329, -329, 263, 19, -44, -41, -355, 18, -40, -41,
	225, 119, 120, 222, 85, -318, 85, -327, -368, -365,
	85, 133, 238, 132, -326, -323, -326, -327, -365, -209,
	-365, 133, 133, -365, -365, -248, -277, -248, -248, 23,
	-248, 23, -248, 23, 94, -277, -248, 23, -248, 23,
	-248, 23, -248, 23, -248, 23, 31, 78, 79, 31,
	81, 82, 83, -209, -365, -209, -318, -252, -182, -365,
	94, 94, 94, -329, -329, 94, 92, 92, 92, -329,
	-329, 94, 92, -284, -282, 92, 92, -371, 249, 293,
	295, 94, 94, 94, 94, 31, 92, -372, 31, 595,
	594, 596, 597, 598, 92, 94, 31, 94, 31, 94,
	-277, 85, -182, -139, 283, 220, 222, 225, 76, 92,
	297, 301, 302, 148, 44, 86, 235, 232, -365, -268,
	237, -268, -277, -283, -282, -275, 92, -141, -325, 14,
	158, -287, -287, -266, -182, -325, -287, -266, -182, -266,
	-266, -266, -266, -287, -287, -287, -266, -282, -282, -182,
	-182, -182, -182, -182, -182, -182, -292, -267, -266, 570,
	92, -260, 14, 76, -292, -292, -290, 310, 344, 564,
	565, 566, 86, 470, -175, -182, 570, 570, 570, 570,
	570, 570, -141, -141, -141, -141, 492, -199, 115, 140,
	116, 117, -157, -200, -205, -207, 99, 158, 142, 156,
	157, -147, -149, -147, -147, -147, -147, -147, -147, -147,
	-147, -147, -147, -147, -147, -147, -293, -365, 92, 173,
	-153, -152, 98, -388, -153, -127, -129, -141, -141, -365,
	-127, -127, -141, -123, 24, 38, -211, -212, 144, -209,
	-394, -394, 94, 98, -277, -277, -116, -115, 418, 419,
	420, 421, 423, 424, 425, 428, 429, 433, 434, 417,
	435, 422, 427, 430, 431, 432, 426, 329, -141, -141,
	-141, -141, -141, -141, -83, -141, 126, 127, 128, -141,
	-141, -202, -201, -364, -363, -362, -141, -141, -141, -141,
	-141, -141, -141, -141, -141, -141, -141, -141, -141, -141,
	-141, -141, -141, -141, -141, -141, -141, -141, -141, -394,
	-141, 94, -365, -145, -141, -141, -128, 24, 38, -127,
	-278, -283, -275, -127, -128, -128, -127, -127, -277, 217,
	-240, -394, -201, 86, -381, 399, 400, 568, -285, 268,
	-284, 25, -202, 92, 14, -246, 77, -277, -223, -223,
	63, 64, 59, -127, -132, -394, -35, 25, -242, -277,
	62, 92, -310, -252, 356, 357, -141, -141, 86, -222,
	27, 28, -182, -279, 164, -283, -182, -247, 268, -182,
	-160, -162, -163, -164, -185, -208, -393, -165, 488, 485,
	14, -175, -176, -184, -282, -255, -257, 86, 398, 400,
	401, 76, 118, -141, -311, 172, -337, -336, -335, -318,
	-320, -321, -322, 87, -311, -314, 362, 361, -305, -305,
	-305, -305, -305, -310, -310, -310, -310, 85, 85, -305,
	-305, -305, -305, -312, 85, -312, -312, -313, 85, -313,
	-348, -141, -345, -344, -342, -343, 242, 101, 561, 517,
	470, 509, 551, 77, -340, -222, 94, -394, -139, -269,
	237, -346, -343, -365, -365, -365, -269, -365, 92, -365,
	92, -365, 92, -108, -58, -1, 607, 608, 609, 86,
	19, -319, -318, -57, 293, -351, -352, 268, -347, -341,
	-327, 133, -326, -327, -327, -365, 86, 29, 123, 123,
	123, 123, 470, 222, 32, -270, 508, 140, -318, -57,
	-293, 235, -293, -293, 92, 92, -265, 603, -175, -135,
	285, 148, 274, 274, 232, 232, 287, -182, 298, 300,
	299, 297, 301, 302, 23, 23, 23, 286, 288, 290,
	276, -182, -182, -268, 76, -177, -182, 26, -282, -182,
	-266, -266, -182, -266, -266, -182, -277, -119, 399, 86,
	470, 22, -120, 22, -393, 115, 116, 117, -200, -147,
	-149, -147, 138, 256, 86, -394, 25, 86, 77, -394,
	-394, -394, 86, 14, -127, -214, -212, 146, -141, -394,
	-394, -394, 86, 86, 14, -297, 25, -394, -394, -394,
	-394, -394, -213, -394, 14, 86, 86, -394, -394, 86,
	86, -394, 86, 86, 86, -361, 86, 86, 86, 86,
	-394, -394, -394, -394, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, -394, -91, 493, -394, -394, -394,
	-394, 86, -394, 86, -394, -127, -127, -393, 217, -394,
	-394, -394, -394, -394, -278, -394, -380, 567, 400, -189,
	-188, -186, 74, 236, 75, -393, -284, -394, -153, 89,
	-243, 89, -242, -194, -277, 94, 98, -225, -159, -161,
	14, -132, -207, 87, 86, -310, -229, -234, -263, -277,
	92, 173, -221, 217, -190, 15, -193, 32, 57, -11,
	-393, -393, 32, 86, -178, -180, -179, -181, 66, 70,
	72, 67, 68, 69, 73, -288, 25, -160, -9, -8,
	-393, -393, -393, -182, -175, -395, 14, 77, -395, 86,
	217, -256, -258, 402, 399, 405, -365, 92, -107, 86,
	-335, -322, -226, -136, 40, -315, 363, -310, -310, -317,
	92, -317, 94, 94, 87, -47, -42, -43, 33, 80,
	-342, -329, 92, 39, -329, -329, -277, 87, -222, -135,
	-182, 140, 76, -346, -346, -346, -282, -2, 606, 612,
	133, 85, 366, 18, -242, 86, 87, -210, 294, 87,
	-109, -277, 87, 85, -327, -327, -277, -393, 232, 31,
	31, 508, -57, -210, -311, -365, 605, 604, 87, 234,
	292, -140, 413, -137, 92, 88, -182, -182, -182, -182,
	-182, 225, 222, -389, 303, -389, 277, 235, -175, -182,
	86, -81, 251, 246, -287, -287, 33, -182, 399, 579,
	577, -141, 138, 256, -157, -149, -129, 467, -295, 173,
	330, 255, 328, 324, 344, 335, 361, 326, 362, 323,
	322, 321, -295, -293, -141, -141, -218, 147, -141, 145,
	-141, -141, -141, -394, 173, 330, 14, -141, -141, -141,
	-362, -141, -141, -141, -360, -359, -153, -209, -394, -360,
	-141, -141, -359, -359, -363, -363, -363, -363, -363, -201,
	-201, -201, -201, -393, -277, -94, -93, -92, 544, 236,
	-91, -91, -91, 94, -365, -145, -94, 94, -365, -145,
	-394, -394, -128, -278, -186, -323, -323, -323, -248, 86,
	-259, 22, 14, 57, 57, -159, -190, -160, -132, -277,
	-232, 563, -237, 46, -235, -236, 47, -233, 48, 56,
	164, -223, -141, -249, 76, -250, -254, -209, -204, -206,
	-205, -393, -241, -394, -277, -248, -250, -162, -163, -163,
	-162, -163, 66, 66, 66, 71, 66, 71, 66, -179,
	-282, -394, -394, -9, -9, -141, -285, 77, -160, -160,
	-184, -282, 164, 399, 403, 404, -335, -387, 115, 140,
	31, 76, 359, 101, -385, 172, 505, 556, 561, 517,
	509, 551, -386, 238, 132, 133, 250, 25, 41, 87,
	86, 87, 86, 87, 86, -271, -270, -43, -42, -329,
	-329, 94, -365, 92, 92, 234, 26, -182, 76, 76,
	76, -110, 610, 94, 85, -3, 80, -141, 85, 19,
	-318, -209, -353, -306, -354, -307, -308, -5, -6, -330,
	-113, 57, 101, -61, 44, 233, 590, 591, 123, -393,
	603, -345, -242, -349, -351, -182, -144, -393, -143, -145,
	-150, 162, 163, -210, -182, -134, 283, 291, 85, -138,
	89, -367, 77, 274, 359, 274, -390, 304, 92, -390,
	-182, -81, -47, -182, -266, -266, 33, -365, -394, -157,
	-149, -393, -394, -305, -305, -305, -313, -305, 318, -305,
	318, -305, -394, -394, 86, -394, 22, -394, -118, 442,
	-141, 86, 86, -394, 85, 85, -141, -394, -394, -394,
	-361, 86, -394, 86, -394, 86, -296, 562, -394, -394,
	-394, -394, -394, -394, -394, -394, -394, -394, -90, -277,
	-203, 268, -91, 526, 526, -394, -394, -394, -91, -215,
	86, -215, -215, -394, -187, 22, -187, -187, -394, 89,
	-182, -190, -216, 16, -229, 51, 336, -239, -238, 55,
	47, -236, 19, 49, 19, 30, -249, 86, 148, 86,
	-394, -394, 86, 57, 217, -394, -190, -173, -172, 76,
	77, -174, 76, -172, 66, 66, -244, -394, -394, 86,
	-247, -160, -190, -190, 217, 115, -393, -146, -156, -144,
	12, 92, 92, -365, -384, 594, 595, 31, 94, -329,
	-329, 133, 133, -182, 85, -310, 92, -310, 94, 94,
	31, 81, 82, 83, 31, 78, 79, -182, -182, -182,
	-182, -350, 85, 19, -141, 85, 148, 87, -242, -242,
	270, 158, -329, 588, 276, 276, -329, -329, -329, -112,
	-111, 610, 87, -394, 86, -316, 470, 473, -141, -151,
	-151, -244, 87, -358, 470, -366, -277, -277, -277, -277,
	94, 96, -147, -310, -141, -141, -223, 92, -141, -141,
	94, 94, -394, -394, -360, -359, -141, -394, -170, -169,
	-171, 571, 115, 31, -295, -394, -203, -218, 19, -97,
	-96, -95, 14, -97, -97, -394, -141, -394, -394, -393,
	66, 18, 16, -393, -393, -285, -216, -217, 17, 19,
	-230, 53, -228, 52, -228, -238, 19, 19, 92, 19,
	92, 133, -254, -141, -206, 57, -11, -277, -204, -277,
	-218, -141, 85, -141, -153, -190, -190, -141, -196, 445,
	104, 106, 105, 446, 447, 448, 345, 346, 449, 450,
	451, 107, 108, 109, 110, 111, 112, 113, 452, 455,
	453, 456, 457, 458, 463, 464, 459, 460, 461, 462,
	465, 92, 92, 85, -141, 87, 87, -244, -349, -58,
	87, -242, 94, 87, 271, -205, -393, 92, -329, -329,
	-329, 94, 94, -284, -394, 86, -277, -386, -351, 474,
	474, -394, 25, -357, -356, -278, 85, 77, -122, 158,
	470, -394, -394, -394, -394, -394, 87, 87, -394, -394,
	86, -394, -169, -171, -394, 76, -153, -218, -89, -88,
	-84, 582, 608, -201, -94, 293, 295, -94, -94, -94,
	-94, -94, -245, -394, -277, 238, 19, 19, -245, -245,
	-189, -217, -104, -103, -102, 499, -141, -201, -231, 54,
	76, 118, 92, 92, 92, 12, -204, 217, -223, -242,
	-167, 366, -218, -394, -242, 87, 25, 87, 612, 133,
	87, -205, -121, -393, 267, -284, 92, 92, -111, -114,
	-11, 86, 148, -242, -182, -394, 468, 73, 471, -141,
	-394, 76, 480, 571, -89, -87, 142, -85, -142, 580,
	559, -151, -148, -91, -91, -91, -91, -91, -91, 86,
	-394, -394, -394, -104, 86, -101, -100, -277, 76, 118,
	-250, -277, 87, -394, -393, -223, 87, -227, -11, 85,
	-3, 267, -306, -354, -307, -308, -5, -6, -330, -79,
	470, -356, -334, -278, 92, 94, 87, 62, 469, 472,
	-361, -87, 537, 511, 581, 537, 511, -277, 238, -102,
	86, 25, -285, -168, -166, -277, 523, -377, -376, 466,
	-387, -383, 115, 140, 101, -385, 561, 517, 124, 125,
	-79, -141, 85, -394, -80, 282, 567, -367, 62, -394,
	138, -100, -393, -394, 86, 22, -298, -60, 534, -374,
	-375, 76, -378, 372, 533, 554, 115, 92, 87, -242,
	243, -358, 470, -87, -90, -166, 530, -311, -153, -375,
	76, -374, 76, 13, 12, -4, 611, 87, 284, 471,
	-394, -59, 26, -167, -373, 251, 246, 249, 32, -373,
	94, -4, 472, 534, 245, 31, 115, -153, -170, -169,
	-169,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 816,
	816, 816, 0, 816, 0, 0, 816, -2, -2, 816,
	1365, 0, 816, 0, 0, -2, 748, 750, 0, 752,
	-2, 0, 0, 761, 1871, 1871, 811, 0, 0, 0,
	0, 0, 816, 816, 816, 816, 1225, 48, 816, 0,
	83, 84, 767, 768, 769, 63, 0, 1869, 1, 3,
	69, 73, 0, 0, 0, 56, 1234, 0, 76, 0,
	0, 820, 0, 818, 0, 1348, 816, 816, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 562, 495, 541, 493, 527, -2, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 371, 371, 0, 0, -2, 481, 481, 481,
	0, 0, 0, 524, 1350, 433, 371, 371, 371, 0,
	371, 371, 371, 371, 0, 0, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 1251, 153, 1366, 1363, 1364, 38, 39,
	40, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 0, 1342, 0, 675, 917, 0, 737, 737,
	0, 737, 737, 737, 737, 0, 0, 0, 687, 0,
	0, 0, 0, 734, 0, 703, 704, 0, 734, 0,
	710, 740, 0, 715, 737, 737, 718, 1872, 0, 1872,
	1872, 1333, 0, 731, 729, 743, 744, 747, 751, 0,
	756, 759, 1359, 1360, 0, 774, 47, 1606, 766, 779,
	780, 0, 812, 813, 43, 1057, 0, 939, 944, 955,
	968, 969, 970, 971, 972, 974, 975, 0, 0, 0,
	0, 980, 981, 0, 0, 0, 0, 0, 1038, 989,
	0, 0, 0, 0, 1201, 0, 1164, 1164, 1074, 1164,
	1166, 1166, 0, 0, 0, 1868, 1646, 1654, 1655, 1677,
	1763, 1812, 1650, 1651, 1632, 1644, 1647, 1635, 1636, 1638,
	1640, 1645, 1652, 1658, 1637, 1657, 1656, 0, 1633, 1634,
	1639, 1649, 1653, 1641, 1642, 1643, 1648, 1659, 0, 0,
	0, 0, 0, 1210, 0, 0, 0, 0, 0, 0,
	273, 274, 1056, 1322, 0, 1166, 1166, 1166, 1166, 1166,
	1001, 1002, 1003, 1004, 1005, 1026, 1027, 1033, 1034, -2,
	-2, 219, 220, 221, 222, 223, 224, 225, 0, 215,
	0, 0, 278, 279, 275, 276, 277, 1040, 1041, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	272, 1871, 0, 789, 0, 0, 0, 0, 0, 1234,
	0, 1226, 1225, 61, 0, 816, -2, 0, 0, 0,
	0, 45, 0, 50, 876, 75, 74, 1273, 0, 0,
	0, 57, 1235, 65, 67, 1236, 0, 821, 822, 0,
	852, 856, 0, 817, 0, 0, 1349, 1348, 1348, 100,
	0, 1808, 1326, -2, -2, 0, 0, 1361, 1362, 1335,
	-2, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	-2, 0, 0, 165, 166, 0, 41, 398, 0, 161,
	0, 391, 337, 0, 1251, 0, 0, 0, 0, 0,
	816, 0, 1343, 142, 143, 150, 151, 152, 371, 371,
	371, 538, 0, 0, 153, 153, 502, 503, 504, 0,
	0, -2, 396, 0, 482, 0, 0, 385, 385, 389,
	387, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 0, 517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 623, 0, 372, 0, 536, 537, 434, 0,
	0, 0, 0, 0, 514, 515, 0, 0, 1351, 1352,
	0, 0, 0, 371, 371, 0, 0, 0, 0, 371,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 141,
	1264, 0, 0, 0, -2, 0, 667, 0, 0, 0,
	1344, 1344, 0, 674, 0, 676, 677, 0, 0, 678,
	0, 734, 734, 732, 733, 680, 681, 682, 683, 737,
	0, 0, 380, 381, 382, 734, 737, 0, 737, 737,
	737, 737, 734, 734, 734, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 740, 737, 0, 711,
	0, 712, 713, 716, 717, 719, 1873, 1874, 1382, 1872,
	1872, 723, 727, 1334, 749, 757, 760, 777, 775, 776,
	778, 770, 771, 772, 773, 0, 791, 792, 797, 0,
	0, 0, 0, 803, 804, 805, 0, 0, 808, 809,
	810, 0, 0, 0, 0, 0, 937, 0, 0, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 976, 977, 978, 979,
	982, 0, 0, 0, 987, 988, 0, 0, 0, 0,
	826, 0, 1202, 0, 1072, 0, 1073, 1075, 1076, 0,
	1077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1354, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 836, 0, 0, 836, 836, 0, 0, 0,
	208, 209, 210, 211, 212, 226, 227, 228, 229, 230,
	280, 1210, 0, 1056, 0, 0, 0, 44, 781, 782,
	0, 900, 1354, 0, 0, 832, 0, 55, 64, 66,
	1234, 59, 1234, 0, 838, 0, 0, -2, -2, 839,
	845, 846, 847, 848, 849, 52, 1870, 53, 0, 72,
	0, 46, 0, 0, 0, 0, 349, 1276, 0, 0,
	1227, 1228, 1231, 0, 853, 1688, 857, 0, 859, 860,
	0, 819, 0, 98, 0, 916, 0, 0, 0, 1808,
	1332, 0, 102, 103, 0, 0, 0, 355, 1337, 1338,
	1339, -2, 378, 0, 355, 344, 288, 289, 290, 337,
	292, 337, 337, 337, 337, 349, 349, 349, 349, 320,
	321, 322, 323, 324, 0, 0, 307, 337, 337, 337,
	337, 327, 328, 329, 330, 331, 332, 333, 334, 293,
	294, 295, 296, 297, 298, 299, 300, 301, 339, 339,
	339, 341, 341, 0, 42, 0, 359, 0, 1231, 0,
	0, 1264, 1346, 1356, 0, 0, 0, 1346, 120, 0,
	0, 0, 539, 573, 496, 528, 540, 0, 499, 500,
	-2, 0, 0, 481, 0, 483, 0, 379, 0, -2,
	0, 389, 0, 385, 389, 386, 389, 377, 390, 518,
	519, 520, 0, 522, 523, 603, 886, 0, 0, 0,
	0, 0, 609, 610, 611, 0, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 529, 530, 531, 532,
	533, 534, 535, 0, 0, 0, 483, 0, 525, 0,
	435, 436, 437, 0, 0, 440, 441, 442, 443, 0,
	0, 446, 447, 448, 903, 904, 449, 450, 475, 476,
	477, 451, 452, 453, 454, 455, 456, 457, 469, 470,
	471, 472, 473, 474, 458, 459, 460, 461, 462, 463,
	466, 0, 135, 1255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 835, 918, 1367, 1368, 738, 739, 0, 383,
	384, 737, 737, 684, 724, 0, 737, 688, 725, 689,
	691, 690, 692, 705, 706, 737, 695, 735, 736, 696,
	697, 698, 699, 700, 701, 702, 720, 707, 708, 709,
	741, 0, 745, 746, 721, 722, 0, 758, 762, 763,
	764, 765, 0, 0, 794, 94, 799, 800, 801, 802,
	814, 807, 1058, 934, 935, 936, 0, 938, 941, 0,
	1042, 1044, 943, 945, 1053, 1054, 1055, 0, 0, 0,
	0, 0, 949, 953, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 973, 1180, 1181, 1182,
	990, 281, 282, 0, 991, 0, 850, 0, 0, 0,
	0, 0, 0, 0, 827, 828, 1208, 1205, 0, 0,
	1165, 1167, 0, 0, 0, 0, 0, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1183, 0,
	0, 0, 0, 0, 1201, 0, 993, 994, 995, 0,
	0, 0, 1355, 0, 130, 131, 0, 0, 0, 0,
	0, 1137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 837,
	1211, 0, -2, 0, 0, 0, 0, 0, 992, 0,
	0, 1320, 0, 0, 784, 785, 787, 0, 920, 0,
	901, 0, 0, 790, 0, 831, 0, 834, 58, 60,
	843, 844, 0, 861, 840, 54, 49, 0, 0, 878,
	1274, 349, 1296, 0, 353, 354, 1237, 1238, 0, 1230,
	1232, 1233, 77, 858, 854, 0, 932, 0, 0, 915,
	0, 864, 866, 867, 868, 898, 0, 871, 0, 0,
	0, 0, 0, 96, 917, 1327, 101, 0, 0, 106,
	107, 1328, 1329, 1330, 1331, 0, 562, -2, 430, 167,
	169, 170, 171, 162, -2, 347, 345, 346, 291, 349,
	349, 314, 315, 316, 317, 318, 319, 0, 0, 308,
	309, 310, 311, 302, 0, 303, 304, 305, 0, 306,
	397, 0, 1239, 360, 361, 363, 371, 0, 366, 367,
	0, 371, 371, 0, 392, 393, 0, 1231, 1255, 0,
	0, 0, 1357, 1356, 1356, 1356, 0, 155, 156, 157,
	158, 159, 160, 598, 0, 0, 574, 596, 597, 153,
	0, 0, 163, 485, 484, 0, 630, 0, 395, 0,
	0, 389, 389, 374, 375, 521, 0, 0, 605, 606,
	607, 608, 0, 0, 0, 510, 424, 0, 483, 485,
	355, 0, 438, 439, 444, 445, 464, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 554,
	555, 556, 487, 560, 557, 487, 561, 1252, 1253, 1254,
	0, 0, 668, 0, 0, 421, 92, 1345, 673, 734,
	694, 726, 734, 686, 693, 714, 754, 798, 0, 0,
	0, 0, 806, 0, 0, 942, 1043, 1045, 946, 0,
	950, 954, 0, 0, 0, 0, 0, 0, 0, 1039,
	1063, 1064, 0, 0, 1225, 0, 1206, 0, 0, 1071,
	1168, 1169, 0, 0, 0, 0, 0, 1082, 1083, 1084,
	1085, 1086, 0, 1088, 0, 0, 0, 1092, 1093, 0,
	0, 1094, 0, 0, 0, 0, 0, 0, 0, 0,
	1106, 1107, 1108, 1109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1120, 1121, 0, 1021, 0, 0,
	0, 0, 1021, 0, 1059, 0, 0, 836, 0, 1170,
	1171, 1172, 1173, 1174, 1211, 1321, 783, 786, 788, 874,
	921, 922, 0, 0, 0, 0, 902, 1353, 829, 830,
	833, -2, 0, 0, 1213, 0, 0, 861, 932, 862,
	0, 841, 51, 877, 0, 1278, 1277, 1290, 1303, 350,
	351, 352, 1229, 0, 1234, 0, 1314, 0, 0, 1306,
	0, 0, 0, 0, 0, 0, 0, 0, 905, 0,
	0, 908, 0, 0, 0, 0, 899, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 90, 91, 0, 0,
	0, 104, 105, 0, 0, 111, 356, 357, 144, 153,
	432, 168, 405, 0, 0, 287, 348, 312, 313, 0,
	335, 0, 0, 0, 426, 116, 1243, 1242, 371, 371,
	362, 0, 365, 0, 0, 0, 1358, 338, 394, 0,
	134, 0, 0, 0, 0, 0, 140, 568, 0, 0,
	575, 0, 0, 0, 494, 0, 505, 506, 0, 602,
	-2, 664, 359, 0, 373, 376, 887, 0, 0, 507,
	0, 425, 485, 512, 513, 526, 467, 468, 465, 0,
	0, 1265, 1266, 1271, 1269, 1270, 121, 546, 548, 547,
	551, 0, 0, 489, 0, 489, 544, 0, 421, 1239,
	0, 672, 422, 423, 737, 737, 793, 95, 0, 796,
	0, 0, 0, 0, 947, 951, 851, 0, 0, 337,
	337, 1188, 337, 341, 1191, 337, 1193, 337, 1196, 337,
	1199, 1200, 0, 0, 0, 0, 1203, 1070, 1209, 0,
	0, 0, 0, 1081, 0, 0, 0, 0, 0, 0,
	132, 133, 1137, 0, 0, 1139, 1141, 1142, 1098, 1138,
	0, 0, 1135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1015, 1020, 0, 1022, 1023, 0, 0,
	1123, 1124, 1125, 0, 0, 0, 0, 1133, 1133, 1133,
	1060, 1061, 0, 1212, 923, 928, 928, 928, 0, 0,
	0, 1340, 1341, 1214, 1215, 932, 1216, 863, 842, 879,
	1296, 0, 1289, 0, -2, 1298, 0, 0, 0, 1304,
	855, 78, 933, 81, 0, 1314, 1323, 0, 1305, 1316,
	1318, 0, 0, 0, 1310, 0, 932, 865, 894, 896,
	0, 891, 906, 907, 909, 0, 911, 0, 913, 914,
	876, 870, 872, 0, 0, 0, 98, 0, 932, 932,
	97, 0, 919, 108, 109, 110, 431, 172, 177, 0,
	0, 0, 182, 0, 184, 0, 0, 0, 189, 190,
	371, 371, 406, 0, 284, 286, 0, 0, 175, 349,
	0, 349, 0, 342, 0, 407, 427, 1240, 1241, 0,
	0, 364, 368, 369, 370, 0, 1347, 136, 0, 0,
	0, 571, 0, 599, 0, 0, 0, 0, 0, 0,
	164, 486, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 0, 371, 0, 0, 0, 371, 371, 371, 0,
	656, 358, 0, 0, 627, 624, 508, 0, 213, 214,
	216, 0, 0, 511, 876, 1256, 1257, 1258, 0, 1268,
	1272, 124, 0, 0, 0, 0, 558, 0, 488, 559,
	669, 670, 671, 93, 679, 685, 795, 815, 940, 948,
	952, 0, 984, 1186, 349, 1189, 1190, 1192, 1194, 1195,
	1197, 1198, 985, 986, 0, 1066, 0, 1068, 1234, 0,
	1207, 0, 0, 1080, 0, 0, 0, 1089, 1090, 1091,
	0, 0, 1097, 0, 1099, 0, 0, 0, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 0, 1015,
	1225, 0, 1122, 1024, 1025, 1030, 1030, 1030, 1129, 0,
	0, 0, 0, 1062, 0, 0, 0, 0, 900, -2,
	62, 1216, 1218, 0, 1283, 1281, 1281, 1291, 1292, 0,
	0, 1299, 0, 0, 0, 0, 82, 0, 0, 0,
	1319, 0, 0, 0, 0, 99, 1225, 888, 895, 0,
	0, 889, 0, 890, 910, 912, 869, -2, 873, 0,
	932, 932, 88, 89, 0, 178, 0, 180, 206, 207,
	0, 183, 185, 186, 187, 193, 194, 195, 188, 0,
	0, 283, 285, 0, 0, 325, 336, 326, 0, 0,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 876, 137, 138,
	139, 563, 0, 573, 0, 0, 0, 566, 0, 497,
	0, 0, 0, 371, 371, 371, 0, 0, 0, 0,
	641, 0, 0, 604, 0, 612, 0, 0, 0, 217,
	218, 0, 1267, 545, 0, 122, 123, 0, 0, 550,
	490, 491, 1175, 1187, 0, 0, 0, 1204, 0, 0,
	0, 0, 1087, 1095, 0, 1140, 0, 1102, 0, 0,
	0, 593, 594, 0, 1136, 1019, 1225, 1011, 0, 1021,
	1031, 1032, 0, 1021, 1021, 1021, 1134, 1021, 1021, 0,
	929, 0, 0, 0, 0, 920, 1218, 1223, 0, 0,
	1286, 0, 1279, 1282, 1280, 1293, 0, 0, 1300, 0,
	1302, 0, 1324, 1325, 1317, 0, 1309, 1312, 1308, 1311,
	1234, 892, 0, 897, 0, 1225, 87, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 0, 0, 340, 343, 0, 0, 0,
	564, 0, 576, 567, 0, 654, 0, 658, 0, 0,
	0, 661, 662, 663, 640, 0, 644, 399, 628, 625,
	626, 509, 0, 125, 126, 0, 0, 0, 0, 0,
	0, 1065, 1067, 1069, 1078, 1079, 1184, 1185, 1096, 1100,
	0, 1103, 0, 0, 1104, 0, 595, 1011, 1018, 1012,
	0, 996, 997, 1016, 0, 1028, 1029, 0, 0, 0,
	0, 0, 0, 925, 882, 883, 930, 931, 0, 0,
	875, 1223, 80, 1224, 1221, 0, 1219, 1217, 1275, 0,
	1284, 1285, 1294, 1295, 1301, 0, 1307, 0, 85, 0,
	0, 0, 1234, 179, 0, 198, 0, 572, 0, 575,
	565, 652, 653, 0, 665, 657, 659, 660, 642, -2,
	1259, 0, 0, 0, 552, 983, 0, 0, 0, 1137,
	1105, 0, 591, 592, 1017, 1013, 0, 1006, 0, 0,
	0, 1009, 1010, 1126, 1127, 1128, 1130, 1131, 1132, 0,
	924, 926, 927, 79, 0, 1220, 1036, 0, 1287, 1288,
	1315, 1313, 893, 900, 0, 86, 412, 405, 1259, 0,
	0, 0, 645, 646, 647, 648, 649, 650, 651, 542,
	1261, 127, 128, 478, 479, 480, 121, 1176, 0, 1179,
	0, 0, 1007, 1008, 998, 999, 1000, 884, 885, 1222,
	0, 0, 577, 0, 579, 0, -2, 400, 413, 0,
	173, 199, 200, 0, 0, 203, 204, 205, 196, 197,
	117, 0, 0, 666, 0, 1262, 1263, 124, 1177, 1101,
	0, 1037, 1015, 578, 0, 0, 355, 0, 588, 401,
	402, 0, 408, 409, 410, 411, 201, 202, 600, 0,
	0, 549, 0, 1014, 0, 580, 581, 589, 0, 403,
	0, 404, 0, 0, 0, 569, 0, 600, 1260, 0,
	1035, 0, 590, 586, 414, 416, 417, 0, 0, 415,
	601, 570, 1178, 0, 418, 419, 420, 582, 583, 584,
	585,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 167, 159, 3,
	85, 87, 164, 162, 86, 163, 217, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 613,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 169, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 170,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 160,
	161, 166, 168, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:568
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:573
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:574
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:578
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:614
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:624
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:628
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:633
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:637
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:643
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:649
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:655
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:659
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:664
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:668
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:674
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:678
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:684
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:690
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:751
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:758
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:772
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:803
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:837
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:843
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:855
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:863
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:875
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:887
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:891
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:897
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:903
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:907
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:911
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:921
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:925
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:929
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:935
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:939
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:945
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:949
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:958
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:974
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:980
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:984
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:990
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:994
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:998
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1004
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1008
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1012
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1016
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1022
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1026
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1032
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1038
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1045
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1054
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1058
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1074
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1078
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1084
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1089
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1094
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1100
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1105
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1111
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1120
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1126
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1130
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1142
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1149
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1156
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1161
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1166
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1171
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1178
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1185
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1196
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1203
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1207
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1213
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1217
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1221
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1229
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1233
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1239
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1243
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1249
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1253
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1259
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1263
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1269
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1273
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1279
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1283
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1289
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1299
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1304
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1309
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1313
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1318
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1322
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1326
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1337
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1346
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1355
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1359
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1368
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1372
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1378
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1394
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1399
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1404
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1409
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1418
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1427
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1432
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1438
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1444
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1448
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1454
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1458
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1462
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1468
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1472
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1477
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1481
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1486
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1492
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1508
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1514
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1522
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1529
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1533
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1537
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1541
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1545
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1556
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1563
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1573
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1577
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1581
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1585
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1589
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1593
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1597
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1602
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1606
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1610
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1618
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1799
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1803
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1807
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1813
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1817
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1821
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1827
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1831
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1838
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1842
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1846
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1850
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1970
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1974
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1978
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2072
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2081
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2086
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2090
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2098
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2108
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2116
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2120
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2124
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2129
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2133
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2146
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2150
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2165
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2169
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2173
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2180
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2185
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2189
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2195
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2199
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2205
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2209
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2214
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2218
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2222
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2226
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2230
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2234
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2240
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2244
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2250
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2254
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2258
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2262
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2266
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2271
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2275
		{
			yyVAL.str = yyDollar[2].str
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2285
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2300
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2305
		{
			yyVAL.str = "key"
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
			yyVAL.str = yyDollar[1].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2319
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2334
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2338
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2344
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2348
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2354
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2358
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2364
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2368
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2374
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2380
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2384
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2388
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2392
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2396
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2405
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2411
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2417
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2423
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2427
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2431
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2436
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2440
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2446
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2452
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2458
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2462
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2466
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2470
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2474
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2493
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2497
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2502
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2506
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2515
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2521
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2525
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2535
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2539
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2545
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2549
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2553
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2557
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2561
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2565
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2569
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2573
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2577
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2581
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2585
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2589
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2593
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2597
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2601
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2605
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2609
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2613
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2617
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2621
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2625
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2629
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2633
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2637
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2641
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2645
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2649
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2653
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2657
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2661
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2665
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2697
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2710
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2716
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2729
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2734
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2747
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2751
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2760
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2764
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2768
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2772
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 497:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2776
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2782
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2786
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2790
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2796
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2800
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2804
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2808
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2812
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2816
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2820
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2824
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2828
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2832
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2836
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2840
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2844
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2848
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2852
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2856
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2860
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2864
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2868
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2872
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2876
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2880
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2884
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2888
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2892
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2896
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2902
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2906
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2912
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2916
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2920
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2924
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2928
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2932
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2936
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2940
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2944
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2950
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2957
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2964
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2971
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2977
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2987
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2994
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3001
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3013
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3023
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3027
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3031
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3054
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3058
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3069
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3076
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3083
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3090
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3103
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3112
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3120
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3127
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3138
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3147
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3155
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3164
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3171
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3179
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3183
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3192
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3203
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3207
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3212
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3216
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3221
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3225
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3231
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3237
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3243
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3247
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3253
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3257
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3263
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3269
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3275
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3281
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3287
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3291
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3295
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3299
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3305
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3311
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3317
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3321
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3325
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3331
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3335
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3340
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3344
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3349
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3353
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3359
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3363
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3367
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3371
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3375
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3379
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3383
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3387
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3391
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3395
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3399
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3403
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3407
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3411
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3415
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3419
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3423
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3427
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3431
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3435
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3439
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3443
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3448
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3452
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3456
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3463
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3478
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3482
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3487
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3492
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3497
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3502
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3507
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3513
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3519
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3524
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3530
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3536
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3540
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3546
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3551
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3555
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3560
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3565
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3570
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3575
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3581
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3587
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3594
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3601
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3608
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3616
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3620
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3626
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3632
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3638
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3644
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3650
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3656
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3662
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3668
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3674
		{
			yyVAL.str = ""
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = ""
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3684
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3690
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3694
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3700
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3704
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3713
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3717
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3723
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3727
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3732
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3742
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3750
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3754
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3762
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3766
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3770
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3774
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3778
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3782
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3786
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3790
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3798
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3802
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3810
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3814
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3818
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3822
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3826
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3830
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3834
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3838
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3842
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3846
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3854
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3858
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3862
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3866
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3870
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3878
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3882
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3886
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3890
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3894
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3902
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3913
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3947
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3951
		{
			yyVAL.str = "extended "
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3957
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3961
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3967
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3971
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3977
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3981
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3985
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3995
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3999
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4009
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4015
		{
			yyVAL.empty = struct{}{}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.empty = struct{}{}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.empty = struct{}{}
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4033
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4078
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4080
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4083
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4101
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4105
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4109
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4113
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4117
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4121
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
			yyVAL.str = yyDollar[1].str
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4131
		{
			yyVAL.str = yyDollar[1].str
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4135
		{
			yyVAL.str = yyDollar[1].str
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4158
		{
			yyVAL.str = ""
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4182
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4198
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4202
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4208
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4214
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4218
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4222
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4226
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4232
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4244
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4248
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4252
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4256
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4260
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4264
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4274
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4280
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4284
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4288
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4292
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4308
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4312
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4316
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4320
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4329
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4333
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4337
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4342
		{
			yyVAL.str = ""
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4351
		{
			setAllowComments(yylex, true)
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4355
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4361
		{
			yyVAL.strs = nil
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4365
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4371
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4375
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4379
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = ""
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4388
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = SQLCacheStr
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4397
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4401
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4405
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4411
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4415
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4427
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4432
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4436
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4442
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4446
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4451
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4455
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4460
		{
			yyVAL.strs = nil
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4468
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4476
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.str = SQLCacheStr
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4490
		{
			yyVAL.str = DistinctStr
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4494
		{
			yyVAL.str = DistinctStr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = StraightJoinHint
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4512
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4516
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4522
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4526
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4530
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4534
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4539
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4547
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4554
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4559
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4563
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4569
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4575
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4579
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4589
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4593
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4597
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4601
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4607
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4611
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4617
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4621
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4626
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4630
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4636
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4640
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4646
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4650
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4656
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4660
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4664
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4668
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4674
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4678
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4691
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4695
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4699
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4703
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4709
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4711
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4715
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4717
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4721
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4723
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4726
		{
			yyVAL.empty = struct{}{}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.empty = struct{}{}
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4731
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4735
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4739
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4752
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4756
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4760
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4766
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4772
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4776
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4780
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4784
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4790
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4794
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4804
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4814
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4818
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4824
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4833
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4839
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4843
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4849
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4853
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4857
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4861
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4866
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4870
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4874
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4878
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4888
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4895
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4899
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4903
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4907
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4911
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4915
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4919
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4929
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5017
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5025
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5029
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5033
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5037
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5043
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5047
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5051
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5055
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5059
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5063
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5067
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5075
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5079
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5083
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5087
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5091
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5095
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5103
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5107
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5111
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5151
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5155
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5159
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5165
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5169
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:5175
		{
			yyLOCAL = CurrentRowType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:5179
		{
			yyLOCAL = UnboundedPrecedingType
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:5183
		{
			yyLOCAL = UnboundedFollowingType
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5189
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5193
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5197
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5201
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5205
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5211
		{
			yyLOCAL = &FramePoint{Type: yyDollar[1].framePointTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5215
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5219
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5238
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5244
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5248
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion(), IsBetween: true}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5257
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5263
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent.String(), PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5268
		{
			yyLOCAL = &WindowSpecification{PartitionClause: yyDollar[1].exprsUnion(), OrderClause: yyDollar[2].orderByUnion(), FrameClause: yyDollar[3].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5274
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5278
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5283
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5290
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5296
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5300
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5306
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5310
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5316
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5320
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5325
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5332
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5338
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5342
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5348
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5354
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5358
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5364
		{
			yyVAL.str = ""
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5368
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5374
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5378
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5385
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5389
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5393
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5397
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5403
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5407
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5411
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5415
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5419
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5423
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5427
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5433
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5437
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5441
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5448
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5454
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5458
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5526
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5541
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5560
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5564
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5568
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5572
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5576
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5580
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5596
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5608
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5624
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5628
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5632
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5636
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5640
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5644
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5648
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5652
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5656
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5660
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5664
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5668
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5672
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5676
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5688
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5692
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5696
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5700
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5704
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5708
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5712
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5716
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5720
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5724
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5736
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5740
		{
			val := convertStringToInt(yyDollar[3].str)
			yyLOCAL = &NtileExpr{IntValue: &val, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = &NtileExpr{VarValue: yyDollar[3].colIdent, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = &NtileExpr{IsNull: true, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			val := convertStringToInt(yyDollar[5].str)
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), IntValue: &val, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5760
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), VarValue: yyDollar[5].colIdent, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5764
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), IsNull: true, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5768
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5772
		{
			val := convertStringToInt(yyDollar[5].str)
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), IntValue: &val, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), VarValue: yyDollar[5].colIdent, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), IsNull: true, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5791
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5800
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5805
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5809
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5815
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5819
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5825
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5829
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5835
		{
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5837
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5841
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5845
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5849
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5853
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5857
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5861
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5865
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5869
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5873
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5877
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5883
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5887
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5891
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5895
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5899
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5903
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5907
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5911
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5915
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5970
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5974
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5978
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5982
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5986
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5992
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5996
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6000
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6010
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6014
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6020
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6024
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6028
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6032
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6036
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6042
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6046
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6050
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6054
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6058
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6062
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6066
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6070
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6074
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6078
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6093
		{
			yyVAL.str = string("")
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6097
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6103
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6107
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6113
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6128
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6132
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6136
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6165
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6180
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6186
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6190
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6195
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6199
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6208
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6214
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6220
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6224
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6230
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6235
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6239
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6243
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6252
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6258
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6262
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6266
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6275
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6279
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6283
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6287
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6294
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6298
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6302
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6306
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6312
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6316
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6320
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6325
		{
			yyVAL.str = ""
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6329
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6333
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6337
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6342
		{
			yyVAL.str = ""
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6346
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6352
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6356
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6361
		{
			yyVAL.str = ""
		}
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6365
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6370
		{
			yyVAL.str = "cascaded"
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6374
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6378
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6387
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6393
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6399
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6405
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6414
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6418
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6423
		{
			yyVAL.str = ""
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6427
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6433
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6437
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6443
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6447
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6451
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6456
		{
			yyVAL.str = ""
		}
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6460
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6464
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6469
		{
			yyVAL.str = ""
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6473
		{
			yyVAL.str = " header"
		}
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6478
		{
			yyVAL.str = ""
		}
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6482
		{
			yyVAL.str = " manifest on"
		}
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6486
		{
			yyVAL.str = " manifest off"
		}
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6491
		{
			yyVAL.str = ""
		}
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6495
		{
			yyVAL.str = " overwrite on"
		}
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6499
		{
			yyVAL.str = " overwrite off"
		}
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6505
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6510
		{
			yyVAL.str = ""
		}
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6514
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6520
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6524
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6530
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6534
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6539
		{
			yyVAL.str = ""
		}
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6543
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6549
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6553
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6559
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6563
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6567
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6572
		{
			yyVAL.str = ""
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6576
		{
			yyVAL.str = " optionally"
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6589
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6593
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6597
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6601
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6605
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6611
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6615
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6619
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6623
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6628
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6632
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6638
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6642
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6648
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6652
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6658
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6662
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6677
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6681
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6687
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6693
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6697
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6703
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6707
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6711
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6715
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6719
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6727
		{
			yyVAL.str = "charset"
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6737
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6741
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6754
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6756
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6759
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6761
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6764
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6766
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6769
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6771
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6774
		{
			yyVAL.empty = struct{}{}
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6776
		{
			yyVAL.empty = struct{}{}
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6778
		{
			yyVAL.empty = struct{}{}
		}
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6782
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6791
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6798
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6802
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6808
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6812
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6819
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6825
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6829
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6835
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6839
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6846
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7371
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7380
		{
			decNesting(yylex)
		}
	case 1871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7385
		{
			skipToEnd(yylex)
		}
	case 1872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7390
		{
			skipToEnd(yylex)
		}
	case 1873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7394
		{
			skipToEnd(yylex)
		}
	case 1874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7398
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
