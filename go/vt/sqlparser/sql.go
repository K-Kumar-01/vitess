// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const COUNT = 57792
const AVG = 57793
const MAX = 57794
const MIN = 57795
const SUM = 57796
const GROUP_CONCAT = 57797
const BIT_AND = 57798
const BIT_OR = 57799
const BIT_XOR = 57800
const STD = 57801
const STDDEV = 57802
const STDDEV_POP = 57803
const STDDEV_SAMP = 57804
const VAR_POP = 57805
const VAR_SAMP = 57806
const VARIANCE = 57807
const REGEXP_INSTR = 57808
const REGEXP_LIKE = 57809
const REGEXP_REPLACE = 57810
const REGEXP_SUBSTR = 57811
const ExtractValue = 57812
const UpdateXML = 57813
const GET_LOCK = 57814
const RELEASE_LOCK = 57815
const RELEASE_ALL_LOCKS = 57816
const IS_FREE_LOCK = 57817
const IS_USED_LOCK = 57818
const LOCATE = 57819
const POSITION = 57820
const MATCH = 57821
const AGAINST = 57822
const BOOLEAN = 57823
const LANGUAGE = 57824
const WITH = 57825
const QUERY = 57826
const EXPANSION = 57827
const WITHOUT = 57828
const VALIDATION = 57829
const UNUSED = 57830
const ARRAY = 57831
const BYTE = 57832
const CUME_DIST = 57833
const DESCRIPTION = 57834
const DENSE_RANK = 57835
const EMPTY = 57836
const EXCEPT = 57837
const FIRST_VALUE = 57838
const GROUPING = 57839
const GROUPS = 57840
const JSON_TABLE = 57841
const LAG = 57842
const LAST_VALUE = 57843
const LATERAL = 57844
const LEAD = 57845
const NTH_VALUE = 57846
const NTILE = 57847
const OF = 57848
const OVER = 57849
const PERCENT_RANK = 57850
const RANK = 57851
const RECURSIVE = 57852
const ROW_NUMBER = 57853
const SYSTEM = 57854
const WINDOW = 57855
const ACTIVE = 57856
const ADMIN = 57857
const AUTOEXTEND_SIZE = 57858
const BUCKETS = 57859
const CLONE = 57860
const COLUMN_FORMAT = 57861
const COMPONENT = 57862
const DEFINITION = 57863
const ENFORCED = 57864
const ENGINE_ATTRIBUTE = 57865
const EXCLUDE = 57866
const FOLLOWING = 57867
const GEOMCOLLECTION = 57868
const GET_MASTER_PUBLIC_KEY = 57869
const HISTOGRAM = 57870
const HISTORY = 57871
const INACTIVE = 57872
const INVISIBLE = 57873
const LOCKED = 57874
const MASTER_COMPRESSION_ALGORITHMS = 57875
const MASTER_PUBLIC_KEY_PATH = 57876
const MASTER_TLS_CIPHERSUITES = 57877
const MASTER_ZSTD_COMPRESSION_LEVEL = 57878
const NESTED = 57879
const NETWORK_NAMESPACE = 57880
const NOWAIT = 57881
const NULLS = 57882
const OJ = 57883
const OLD = 57884
const OPTIONAL = 57885
const ORDINALITY = 57886
const ORGANIZATION = 57887
const OTHERS = 57888
const PARTIAL = 57889
const PATH = 57890
const PERSIST = 57891
const PERSIST_ONLY = 57892
const PRECEDING = 57893
const PRIVILEGE_CHECKS_USER = 57894
const PROCESS = 57895
const RANDOM = 57896
const REFERENCE = 57897
const REQUIRE_ROW_FORMAT = 57898
const RESOURCE = 57899
const RESPECT = 57900
const RESTART = 57901
const RETAIN = 57902
const REUSE = 57903
const ROLE = 57904
const SECONDARY = 57905
const SECONDARY_ENGINE = 57906
const SECONDARY_ENGINE_ATTRIBUTE = 57907
const SECONDARY_LOAD = 57908
const SECONDARY_UNLOAD = 57909
const SIMPLE = 57910
const SKIP = 57911
const SRID = 57912
const THREAD_PRIORITY = 57913
const TIES = 57914
const UNBOUNDED = 57915
const VCPU = 57916
const VISIBLE = 57917
const RETURNING = 57918
const FORMAT_BYTES = 57919
const FORMAT_PICO_TIME = 57920
const PS_CURRENT_THREAD_ID = 57921
const PS_THREAD_ID = 57922
const GTID_SUBSET = 57923
const GTID_SUBTRACT = 57924
const WAIT_FOR_EXECUTED_GTID_SET = 57925
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57926
const FORMAT = 57927
const TREE = 57928
const VITESS = 57929
const TRADITIONAL = 57930
const LOCAL = 57931
const LOW_PRIORITY = 57932
const NO_WRITE_TO_BINLOG = 57933
const LOGS = 57934
const ERROR = 57935
const GENERAL = 57936
const HOSTS = 57937
const OPTIMIZER_COSTS = 57938
const USER_RESOURCES = 57939
const SLOW = 57940
const CHANNEL = 57941
const RELAY = 57942
const EXPORT = 57943
const CURRENT = 57944
const ROW = 57945
const ROWS = 57946
const AVG_ROW_LENGTH = 57947
const CONNECTION = 57948
const CHECKSUM = 57949
const DELAY_KEY_WRITE = 57950
const ENCRYPTION = 57951
const ENGINE = 57952
const INSERT_METHOD = 57953
const MAX_ROWS = 57954
const MIN_ROWS = 57955
const PACK_KEYS = 57956
const PASSWORD = 57957
const FIXED = 57958
const DYNAMIC = 57959
const COMPRESSED = 57960
const REDUNDANT = 57961
const COMPACT = 57962
const ROW_FORMAT = 57963
const STATS_AUTO_RECALC = 57964
const STATS_PERSISTENT = 57965
const STATS_SAMPLE_PAGES = 57966
const STORAGE = 57967
const MEMORY = 57968
const DISK = 57969
const PARTITIONS = 57970
const LINEAR = 57971
const RANGE = 57972
const LIST = 57973
const SUBPARTITION = 57974
const SUBPARTITIONS = 57975
const HASH = 57976

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 48,
	13, 48,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 147,
	652, 147,
	-2, 155,
	-1, 48,
	132, 155,
	173, 155,
	335, 155,
	-2, 500,
	-1, 55,
	35, 742,
	235, 742,
	246, 742,
	281, 756,
	282, 756,
	-2, 744,
	-1, 60,
	237, 773,
	-2, 771,
	-1, 114,
	234, 1420,
	-2, 121,
	-1, 116,
	1, 148,
	652, 148,
	-2, 155,
	-1, 127,
	133, 386,
	240, 386,
	-2, 489,
	-1, 146,
	132, 155,
	173, 155,
	335, 155,
	-2, 509,
	-1, 764,
	86, 1437,
	-2, 1284,
	-1, 765,
	86, 1438,
	218, 1442,
	-2, 1285,
	-1, 798,
	218, 1441,
	-2, 39,
	-1, 874,
	59, 841,
	-2, 856,
	-1, 960,
	245, 40,
	250, 40,
	-2, 397,
	-1, 1045,
	1, 557,
	652, 557,
	-2, 155,
	-1, 1454,
	218, 1442,
	-2, 1285,
	-1, 1480,
	59, 842,
	-2, 861,
	-1, 1481,
	59, 843,
	-2, 862,
	-1, 1533,
	132, 155,
	173, 155,
	335, 155,
	-2, 436,
	-1, 1612,
	133, 386,
	240, 386,
	-2, 489,
	-1, 1621,
	245, 41,
	250, 41,
	-2, 398,
	-1, 1965,
	218, 1446,
	-2, 1440,
	-1, 1966,
	218, 1442,
	-2, 1438,
	-1, 2066,
	132, 155,
	173, 155,
	335, 155,
	-2, 437,
	-1, 2073,
	25, 176,
	-2, 178,
	-1, 2426,
	77, 95,
	87, 95,
	-2, 918,
	-1, 2494,
	627, 669,
	-2, 643,
	-1, 2660,
	49, 1379,
	-2, 1373,
	-1, 2952,
	7, 54,
	18, 54,
	20, 54,
	88, 54,
	-2, 890,
	-1, 3307,
	627, 669,
	-2, 657,
	-1, 3400,
	22, 1797,
	32, 1797,
	174, 1797,
	257, 1797,
	315, 1797,
	316, 1797,
	317, 1797,
	318, 1797,
	319, 1797,
	320, 1797,
	321, 1797,
	323, 1797,
	324, 1797,
	325, 1797,
	326, 1797,
	327, 1797,
	328, 1797,
	329, 1797,
	330, 1797,
	331, 1797,
	332, 1797,
	333, 1797,
	334, 1797,
	336, 1797,
	338, 1797,
	339, 1797,
	340, 1797,
	341, 1797,
	342, 1797,
	343, 1797,
	344, 1797,
	345, 1797,
	346, 1797,
	349, 1797,
	350, 1797,
	351, 1797,
	352, 1797,
	353, 1797,
	354, 1797,
	355, 1797,
	356, 1797,
	357, 1797,
	498, 1797,
	-2, 601,
}

const yyPrivate = 57344

const yyLast = 46233

var yyAct = [...]int{
	1488, 806, 3056, 3057, 799, 1835, 3055, 3471, 3288, 3483,
	800, 672, 3440, 2063, 3377, 3441, 3398, 1536, 3341, 2884,
	3029, 3364, 2015, 2715, 2809, 1995, 2722, 3272, 3220, 1108,
	768, 37, 3, 2772, 2777, 2774, 2773, 2771, 652, 2776,
	2775, 3270, 3085, 867, 889, 2673, 2323, 658, 2763, 2619,
	3016, 2676, 1997, 654, 2358, 2133, 2397, 2677, 2674, 2923,
	2792, 2730, 2791, 2555, 3090, 3260, 2917, 682, 1458, 2794,
	2035, 769, 2943, 2661, 1495, 2671, 2384, 763, 1956, 762,
	2461, 2096, 2909, 650, 651, 2459, 2814, 2538, 2164, 36,
	2051, 2491, 890, 2040, 992, 1637, 1110, 2460, 2409, 2039,
	2390, 38, 2101, 2376, 1057, 1482, 869, 2360, 871, 2121,
	875, 1961, 1927, 1926, 1831, 1841, 1953, 2142, 2530, 1619,
	2120, 2103, 2027, 2181, 950, 1086, 141, 2453, 892, 1525,
	95, 1504, 955, 1789, 922, 664, 646, 2428, 2019, 2042,
	1462, 1345, 1738, 1851, 96, 1808, 1734, 1279, 929, 1590,
	1626, 926, 961, 958, 2118, 1718, 1923, 930, 1311, 2092,
	1106, 1100, 956, 1860, 957, 1743, 881, 1524, 159, 876,
	2020, 119, 117, 118, 1585, 1611, 124, 125, 659, 908,
	910, 877, 879, 1041, 155, 903, 1353, 1349, 1987, 3297,
	2484, 89, 1509, 91, 641, 85, 2420, 3472, 968, 3017,
	2760, 97, 2135, 2136, 2137, 2135, 3326, 2482, 76, 2514,
	2513, 2179, 1703, 3009, 878, 77, 120, 8, 897, 7,
	902, 6, 87, 87, 126, 90, 585, 87, 2972, 3424,
	2546, 98, 3327, 2547, 812, 813, 814, 647, 994, 3322,
	2782, 1811, 618, 3060, 923, 1280, 624, 3321, 1796, 1992,
	1993, 1011, 1012, 1013, 1795, 1016, 1017, 1018, 1019, 1794,
	642, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 868, 918,
	884, 3378, 971, 948, 883, 120, 870, 917, 946, 945,
	944, 947, 1793, 891, 102, 812, 813, 814, 2780, 1792,
	1489, 998, 1001, 1002, 1791, 3060, 2782, 1774, 182, 644,
	2356, 645, 916, 766, 767, 3419, 1783, 2657, 2112, 2779,
	2786, 2168, 2386, 916, 766, 767, 2504, 972, 3059, 3444,
	1014, 997, 121, 1280, 143, 104, 105, 893, 108, 939,
	899, 114, 899, 2106, 183, 164, 3322, 580, 87, 1005,
	2623, 3428, 1290, 120, 934, 618, 3384, 3426, 3494, 3439,
	3462, 1296, 2889, 2888, 2780, 2167, 618, 863, 864, 865,
	866, 2507, 3273, 874, 182, 2324, 154, 3427, 1801, 2831,
	2166, 3216, 142, 3425, 1962, 2487, 2786, 3215, 3022, 996,
	3059, 3023, 3491, 995, 3374, 3475, 3316, 3453, 121, 3030,
	143, 905, 906, 161, 3365, 162, 3302, 618, 2161, 3373,
	3315, 164, 2554, 3403, 78, 2851, 78, 3384, 1600, 2223,
	2357, 130, 131, 153, 152, 181, 78, 2437, 2522, 3408,
	2436, 2783, 2521, 2438, 1044, 2712, 2713, 1526, 2400, 1527,
	1290, 2711, 154, 3406, 78, 619, 2545, 80, 142, 2023,
	1312, 1286, 3412, 3413, 1278, 1994, 2058, 2059, 2220, 2057,
	2732, 2733, 1103, 2401, 1076, 3103, 1093, 3407, 1095, 161,
	861, 162, 3225, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1321, 1320, 1322, 1323, 2221, 2105, 860, 1613, 1614, 153,
	152, 181, 87, 1293, 87, 1294, 1295, 2783, 1064, 938,
	1081, 1082, 940, 1065, 87, 2485, 1092, 1094, 3289, 2449,
	2076, 2075, 618, 943, 2588, 1050, 1051, 618, 2920, 3445,
	632, 2811, 87, 1040, 147, 128, 150, 135, 127, 1064,
	148, 149, 909, 1077, 1065, 2839, 165, 1070, 2837, 1286,
	3446, 1782, 1063, 636, 1062, 171, 136, 1053, 2393, 2394,
	2815, 630, 618, 2531, 2023, 3248, 1466, 3249, 619, 2492,
	139, 137, 132, 133, 134, 138, 2143, 2731, 1102, 619,
	1693, 941, 129, 1784, 1785, 1786, 1523, 2804, 2517, 2734,
	2187, 140, 1724, 2182, 3474, 2805, 943, 1039, 1719, 1097,
	147, 1615, 150, 1015, 1612, 1083, 148, 149, 1085, 943,
	1046, 935, 165, 1090, 2533, 1084, 2812, 1091, 937, 936,
	619, 171, 1079, 1080, 1694, 3200, 1695, 1096, 1078, 919,
	913, 911, 1071, 2193, 2190, 2192, 2191, 2194, 2195, 182,
	919, 913, 911, 2021, 2022, 2188, 3011, 3420, 3010, 2202,
	1609, 1089, 2199, 1021, 2200, 981, 2201, 1020, 2186, 2813,
	2184, 1043, 979, 121, 3007, 143, 951, 941, 2146, 3064,
	952, 2036, 156, 952, 990, 989, 164, 1604, 182, 37,
	988, 1272, 2589, 987, 986, 985, 2221, 984, 1469, 983,
	1285, 1282, 1283, 1284, 1289, 1291, 1288, 2622, 1287, 942,
	2185, 1060, 121, 1066, 1067, 1068, 1069, 154, 1281, 1329,
	1330, 1331, 1332, 142, 978, 164, 3296, 2483, 991, 1337,
	1326, 2734, 1341, 927, 1326, 619, 1104, 1105, 964, 2537,
	619, 927, 3495, 3451, 161, 925, 162, 1000, 156, 3380,
	927, 1098, 963, 963, 2534, 1735, 949, 999, 2021, 2022,
	151, 2109, 1613, 1614, 153, 152, 181, 1042, 2442, 2119,
	3487, 904, 1625, 2172, 2519, 619, 809, 809, 3379, 2171,
	1731, 809, 942, 161, 1007, 162, 1261, 3006, 1285, 1282,
	1283, 1284, 1289, 1291, 1288, 942, 1287, 1262, 1263, 2165,
	1266, 2110, 2451, 1008, 2753, 181, 1281, 2486, 1725, 2108,
	3380, 982, 1726, 1727, 970, 2550, 1522, 2516, 980, 2235,
	1598, 144, 1333, 1074, 145, 2921, 151, 1597, 1596, 2361,
	2363, 2502, 1732, 3226, 1705, 1704, 1706, 1707, 1708, 3379,
	1594, 584, 3058, 2111, 579, 2784, 2785, 3285, 2163, 912,
	2970, 2971, 2959, 2107, 157, 3314, 970, 2540, 2788, 1456,
	912, 169, 2539, 2506, 2939, 147, 1615, 150, 2433, 1612,
	116, 148, 149, 77, 1450, 2396, 1275, 165, 1273, 1624,
	1274, 2332, 2529, 1986, 1723, 2528, 171, 144, 1513, 1351,
	145, 1352, 1355, 970, 81, 3411, 1422, 1490, 1492, 2391,
	2540, 1055, 2064, 177, 3058, 2539, 1297, 2505, 1327, 1328,
	1326, 2784, 2785, 1323, 2710, 969, 165, 2222, 1457, 1472,
	157, 886, 1087, 1476, 2788, 171, 86, 169, 86, 871,
	1061, 1744, 1470, 1101, 1473, 1346, 1059, 970, 86, 3410,
	1052, 3310, 993, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 1861, 1049, 86, 969, 3002, 176,
	178, 179, 180, 963, 966, 967, 111, 927, 1862, 177,
	2873, 960, 964, 2933, 2183, 1728, 1528, 1428, 1429, 1430,
	1431, 1432, 1457, 1276, 1474, 2574, 3485, 1852, 95, 3486,
	1813, 3484, 959, 2362, 969, 1852, 1006, 2249, 1475, 1296,
	1003, 2475, 96, 156, 1814, 1324, 1325, 1812, 970, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	1463, 1294, 1295, 1073, 3454, 176, 178, 179, 180, 1295,
	1720, 3099, 1721, 2977, 1075, 1722, 112, 2976, 969, 1631,
	2162, 2150, 156, 973, 963, 1634, 1633, 970, 975, 1296,
	1623, 2160, 976, 974, 2155, 1045, 1318, 1319, 1321, 1320,
	1322, 1323, 1601, 1602, 1603, 2158, 1666, 1088, 981, 1669,
	979, 1671, 3447, 977, 1460, 3343, 1745, 1058, 1296, 2960,
	1514, 151, 3278, 1494, 1471, 1491, 3489, 3208, 2246, 98,
	2155, 2159, 868, 1296, 1639, 1859, 1640, 1688, 1642, 1644,
	3207, 1610, 1648, 1650, 1652, 1654, 1656, 870, 1629, 969,
	1713, 1519, 1520, 1617, 3198, 963, 966, 967, 3344, 927,
	3049, 1296, 2240, 960, 964, 3279, 3036, 2157, 3037, 1678,
	1679, 1293, 2239, 1294, 1295, 1684, 1685, 1593, 1628, 1711,
	2576, 3496, 144, 3048, 2984, 145, 2983, 2973, 969, 1607,
	1608, 1606, 1505, 973, 963, 1620, 2761, 1670, 975, 2749,
	2457, 2245, 976, 974, 1316, 1317, 1318, 1319, 1321, 1320,
	1322, 1323, 1740, 2456, 1712, 157, 3458, 1489, 2227, 2228,
	2229, 1293, 169, 1294, 1295, 1627, 1627, 1489, 1477, 2115,
	1592, 1803, 1805, 1806, 1857, 1748, 1714, 1700, 1858, 1674,
	1698, 1697, 1752, 1710, 1754, 1755, 1756, 1757, 1746, 1747,
	1293, 1761, 1294, 1295, 157, 1804, 1696, 1686, 1312, 1736,
	2549, 169, 1751, 1773, 177, 1293, 3497, 1294, 1295, 1758,
	1759, 1760, 1680, 1677, 120, 1901, 1676, 946, 945, 944,
	1675, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1320,
	1322, 1323, 1646, 1293, 1599, 1294, 1295, 3448, 1750, 1958,
	1296, 1699, 1312, 177, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 3305, 3304, 1771, 1296, 1772,
	176, 178, 179, 180, 2288, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1321, 1320, 1322, 1323, 812, 813, 814, 2276,
	3282, 1498, 2718, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 1296, 3281, 3280, 1742, 3203, 176,
	178, 179, 180, 1893, 1882, 1883, 1884, 1885, 1895, 1886,
	1887, 1888, 1900, 1896, 1889, 1890, 1897, 1898, 1899, 1891,
	1892, 1894, 3188, 3456, 1489, 3187, 2556, 2719, 1296, 1838,
	1838, 1499, 1836, 1836, 1839, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1321, 1320, 1322, 1323, 624, 624, 624, 1817,
	2967, 1855, 2440, 2721, 3098, 1856, 1314, 1315, 1316, 1317,
	1318, 1319, 1321, 1320, 1322, 1323, 2130, 2716, 3096, 2128,
	2131, 1456, 1293, 2129, 1294, 1295, 2126, 3390, 1489, 1809,
	2127, 3045, 2981, 1807, 2732, 2733, 2966, 2816, 2752, 1919,
	1293, 2717, 1294, 1295, 1816, 1853, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 2558,
	1296, 3388, 1489, 2751, 2466, 2454, 1452, 1951, 1958, 2177,
	2176, 1779, 1780, 1955, 2723, 2018, 1293, 1957, 1294, 1295,
	1457, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1298, 2000,
	1775, 1741, 1980, 1810, 807, 1709, 1701, 1691, 1687, 1683,
	1682, 1913, 1963, 1681, 1500, 1296, 1099, 2808, 1490, 1988,
	1293, 1924, 1294, 1295, 1265, 2382, 3473, 1815, 1523, 1915,
	3435, 1489, 1292, 1489, 92, 2568, 2567, 2566, 2560, 1489,
	2564, 1312, 2559, 2234, 2557, 93, 101, 2382, 3371, 2562,
	2286, 2731, 2012, 3386, 1489, 3234, 1954, 100, 2561, 99,
	1292, 1489, 3233, 2734, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1321, 1320, 1322, 1323, 2563, 2565, 3192, 2005, 1965,
	2006, 1863, 1864, 1865, 1866, 2382, 3351, 3191, 1989, 1312,
	1797, 1798, 1799, 1800, 1924, 1877, 1968, 1969, 3257, 1489,
	1489, 3028, 1293, 1963, 1294, 1295, 2382, 3347, 2398, 95,
	2073, 2493, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321,
	1320, 1322, 1323, 96, 2471, 1964, 2672, 1489, 2156, 95,
	3334, 1489, 899, 1842, 1843, 2382, 3298, 2932, 1845, 2072,
	899, 899, 1849, 96, 3020, 3295, 1854, 1293, 2011, 1294,
	1295, 3211, 1489, 2116, 2382, 3199, 3020, 1489, 2932, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1292,
	1965, 94, 2720, 1902, 1903, 1904, 1905, 1906, 1907, 1909,
	2406, 1914, 1999, 1916, 1917, 1918, 2155, 1920, 1921, 1922,
	1296, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 2049, 1952, 2033, 1959, 1960, 899,
	2013, 899, 899, 899, 899, 899, 2098, 2071, 1296, 2068,
	1489, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 2144,
	1981, 1982, 1983, 1984, 1985, 883, 2082, 2083, 2084, 2085,
	2055, 2077, 918, 2078, 2079, 2080, 2081, 2070, 2104, 2069,
	917, 2054, 2053, 2031, 2382, 3018, 2155, 1489, 2934, 2088,
	2089, 2090, 2091, 2114, 1489, 3339, 2038, 899, 2067, 1840,
	2937, 1489, 2297, 1489, 92, 2742, 2741, 1847, 1848, 2738,
	2739, 94, 2738, 2737, 2429, 93, 3309, 2099, 2382, 2024,
	2025, 2094, 2095, 2149, 2406, 101, 2152, 2113, 2153, 2117,
	2429, 2141, 3449, 1296, 2125, 2378, 100, 1296, 99, 2406,
	1489, 100, 1293, 2398, 1294, 1295, 2062, 94, 2893, 971,
	94, 2148, 2099, 2147, 2221, 2515, 2151, 1296, 1589, 2496,
	2028, 2029, 2489, 2490, 2382, 2381, 2705, 2724, 2170, 2173,
	1489, 2728, 2405, 2174, 2175, 2846, 2221, 2430, 2740, 2727,
	1293, 2645, 1294, 1295, 2169, 2236, 1489, 2432, 1967, 2056,
	1296, 1970, 1971, 2430, 972, 1296, 1589, 1588, 1534, 1533,
	2236, 2297, 2273, 2221, 1627, 2100, 1489, 2272, 2236, 2155,
	1292, 2138, 1296, 2729, 2026, 2932, 3255, 1489, 2725, 1493,
	87, 2237, 1990, 2726, 1787, 2241, 1730, 2406, 2243, 2244,
	2180, 2212, 2213, 2232, 2251, 1521, 2215, 1296, 2253, 2254,
	2255, 1489, 954, 953, 2010, 2216, 3416, 3354, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2238, 2205,
	1296, 755, 873, 3222, 1809, 1293, 1496, 1294, 1295, 1293,
	3189, 1294, 1295, 3252, 1489, 3110, 3001, 1502, 2231, 3293,
	2233, 2998, 2979, 2856, 2277, 2278, 2279, 2280, 2281, 1293,
	2283, 1294, 1295, 1296, 2285, 3238, 1489, 2855, 2290, 2291,
	1591, 2292, 2097, 2806, 2295, 1296, 2296, 2766, 2762, 2256,
	2299, 2497, 2093, 2087, 2303, 2219, 2086, 1716, 2308, 2309,
	2310, 2311, 1293, 633, 1294, 1295, 2271, 1293, 1810, 1294,
	1295, 2322, 1296, 2325, 2326, 1622, 1618, 1296, 2230, 1587,
	87, 2328, 2330, 1501, 1293, 113, 1294, 1295, 2333, 2334,
	2335, 2336, 2337, 2764, 1296, 2463, 1044, 2810, 1296, 2344,
	2345, 3223, 2346, 2112, 2284, 2349, 2351, 1296, 2012, 1293,
	2354, 1294, 1295, 924, 2248, 931, 2908, 1489, 3468, 1312,
	2366, 2003, 1308, 1838, 1309, 1296, 1836, 2367, 2901, 1489,
	1296, 1777, 1293, 3466, 1294, 1295, 2353, 1296, 1310, 1324,
	1325, 1307, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321,
	1320, 1322, 1323, 2462, 1296, 2898, 1489, 2944, 2945, 3442,
	2896, 1489, 1296, 3320, 3243, 1293, 2985, 1294, 1295, 1296,
	2282, 2365, 2947, 2758, 2757, 2756, 2672, 1293, 1489, 1294,
	1295, 2861, 1489, 2476, 1296, 2206, 37, 3422, 2402, 2694,
	2844, 1489, 3372, 1778, 2695, 2422, 1296, 3080, 2950, 3079,
	2368, 2463, 2370, 1965, 1293, 2949, 1294, 1295, 3229, 1293,
	2250, 1294, 1295, 2352, 1489, 1296, 2017, 2986, 2987, 2988,
	2954, 2257, 2258, 2259, 2260, 2691, 1293, 2690, 1294, 1295,
	1293, 1497, 1294, 1295, 1296, 2009, 2938, 2379, 3196, 1293,
	1296, 1294, 1295, 2392, 2989, 2350, 1489, 3078, 2650, 1964,
	1463, 2355, 2329, 1489, 2421, 2649, 2692, 1293, 3277, 1294,
	1295, 2693, 1293, 1296, 1294, 1295, 1346, 2312, 1489, 1293,
	2380, 1294, 1295, 2696, 1296, 2415, 2416, 2383, 2395, 2304,
	1489, 3089, 2488, 3091, 1296, 2659, 1293, 2925, 1294, 1295,
	1296, 2990, 2991, 2992, 1293, 2924, 1294, 1295, 2928, 3003,
	1729, 1293, 2427, 1294, 1295, 1296, 2434, 2512, 2431, 1296,
	2441, 859, 1487, 1483, 887, 2736, 1293, 2903, 1294, 1295,
	2465, 2444, 888, 2899, 2375, 2468, 2469, 1484, 1293, 1296,
	1294, 1295, 2104, 2447, 1296, 2455, 2467, 2450, 2452, 2510,
	2503, 1861, 1010, 1009, 2464, 1296, 2871, 1293, 2824, 1294,
	1295, 1296, 2007, 2008, 1486, 1862, 1485, 2867, 1264, 2472,
	2462, 2473, 1296, 2477, 2478, 2479, 1293, 2853, 1294, 1295,
	1296, 2443, 1293, 2852, 1294, 1295, 92, 2578, 2579, 2580,
	2581, 2582, 2509, 94, 1505, 1610, 2543, 93, 2849, 92,
	2498, 2499, 121, 2458, 2552, 1293, 2587, 1294, 1295, 1658,
	93, 1296, 3481, 1662, 2930, 1296, 1293, 2508, 1294, 1295,
	2028, 2029, 2348, 94, 2754, 2209, 1293, 2347, 1294, 1295,
	2662, 2664, 1293, 2569, 1294, 1295, 2198, 3395, 2343, 2665,
	3294, 2571, 3218, 2735, 2342, 2583, 2532, 1293, 2551, 1294,
	1295, 1293, 2419, 1294, 1295, 2341, 1659, 1660, 1661, 2014,
	2648, 1296, 2197, 2340, 1663, 1664, 1665, 2541, 2647, 2535,
	2542, 1293, 2196, 1294, 1295, 101, 1293, 2910, 1294, 1295,
	2225, 99, 2553, 895, 896, 2570, 100, 1293, 99, 1294,
	1295, 3265, 2629, 1293, 2339, 1294, 1295, 94, 2338, 2600,
	101, 2602, 3264, 2624, 1293, 3246, 1294, 1295, 2626, 3097,
	3095, 100, 1293, 99, 1294, 1295, 3094, 2613, 2614, 2615,
	2616, 3087, 2411, 2414, 2415, 2416, 2412, 2999, 2413, 2417,
	2929, 2592, 2944, 2945, 2681, 1954, 2927, 1954, 2767, 2139,
	2598, 1605, 101, 1293, 2327, 1294, 1295, 1293, 894, 1294,
	1295, 2699, 2700, 100, 100, 3086, 2629, 2608, 2609, 2610,
	2611, 2612, 2918, 2652, 875, 2398, 3470, 3469, 103, 3068,
	2378, 2590, 2669, 2628, 2625, 2274, 2627, 2001, 2675, 1515,
	1506, 2684, 2704, 2675, 1476, 2422, 106, 107, 3469, 3470,
	2644, 3283, 2965, 1293, 2548, 1294, 1295, 2640, 885, 88,
	1, 2969, 3405, 2678, 899, 597, 1991, 1461, 3443, 2651,
	3401, 3402, 1702, 2572, 2573, 2654, 1692, 2575, 2666, 2667,
	2577, 3031, 1925, 876, 3219, 2770, 1109, 2145, 1109, 1109,
	2683, 2686, 2687, 2997, 2689, 877, 2685, 2102, 962, 2688,
	2584, 2585, 2586, 2701, 2702, 95, 2697, 146, 1267, 1269,
	2790, 2065, 2591, 2708, 1296, 2593, 2594, 2595, 2066, 96,
	1740, 2596, 2597, 3367, 110, 1928, 2599, 1296, 920, 2601,
	2769, 2745, 2603, 2604, 2605, 2606, 109, 2744, 965, 2826,
	2607, 1928, 1928, 1928, 1928, 1928, 1072, 2747, 2748, 2746,
	2641, 2642, 2643, 2140, 3021, 1296, 2448, 2074, 1540, 899,
	2841, 2842, 2843, 2845, 2847, 2653, 2630, 2631, 2632, 2633,
	2634, 2635, 2797, 1538, 2798, 2636, 2637, 2854, 2638, 2828,
	2639, 1539, 2858, 2859, 2860, 2862, 2863, 2864, 2865, 2789,
	2801, 2866, 1537, 2868, 2869, 2870, 2104, 2321, 2874, 2875,
	2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 1296, 2817,
	2320, 1542, 2820, 2819, 2768, 2706, 2890, 2714, 2707, 2894,
	1541, 2895, 2897, 2827, 2900, 2902, 2670, 2904, 2905, 2906,
	2907, 2830, 2835, 2275, 1296, 2913, 2822, 2823, 2319, 2872,
	1781, 631, 2418, 625, 184, 1529, 1293, 1507, 1294, 1295,
	2885, 1004, 587, 2703, 2743, 2178, 2887, 593, 1296, 1293,
	1338, 1294, 1295, 2891, 1296, 1776, 2646, 2435, 915, 907,
	2935, 2936, 2002, 1296, 2940, 2369, 914, 1296, 2411, 2414,
	2415, 2416, 2412, 2680, 2413, 2417, 2922, 1293, 2658, 1294,
	1295, 2318, 2952, 2953, 1296, 2660, 2832, 2833, 2916, 2834,
	1296, 2385, 2836, 2663, 2838, 2656, 2840, 3276, 1296, 3088,
	3352, 2445, 1296, 2765, 2914, 2911, 2912, 2317, 1503, 2892,
	2247, 1850, 2043, 2919, 2926, 3063, 1802, 656, 655, 653,
	2371, 2941, 2399, 1299, 801, 2359, 1467, 1468, 1516, 2931,
	1293, 2316, 1294, 1295, 1296, 2410, 2408, 2315, 2407, 2207,
	2050, 2948, 2946, 2957, 2958, 1296, 2314, 2942, 3397, 2045,
	2313, 2041, 1296, 2951, 2377, 2955, 1293, 754, 1294, 1295,
	753, 1511, 665, 1296, 657, 649, 2963, 2307, 2964, 3004,
	3005, 1296, 3019, 2306, 752, 751, 2797, 1530, 2798, 1296,
	1293, 2305, 1294, 1295, 2962, 2302, 1293, 2796, 1294, 1295,
	3025, 3026, 3381, 1296, 2848, 1293, 2518, 1294, 1295, 1293,
	1296, 1294, 1295, 2974, 2975, 2807, 2520, 2446, 2857, 1296,
	2803, 3039, 1277, 1479, 643, 933, 1293, 2301, 1294, 1295,
	924, 3224, 1293, 3300, 1294, 1295, 2224, 2850, 2300, 1478,
	1293, 1880, 1294, 1295, 1293, 2298, 1294, 1295, 3050, 1638,
	1638, 1881, 1638, 3307, 1638, 1638, 2294, 1647, 1638, 1638,
	1638, 1638, 1638, 3054, 2293, 3008, 2980, 3027, 2982, 3012,
	3013, 3014, 2289, 2778, 924, 3062, 1293, 3015, 1294, 1295,
	2759, 2494, 2132, 3069, 63, 3044, 2287, 1293, 41, 1294,
	1295, 3271, 2956, 2252, 1293, 3340, 1294, 1295, 750, 1487,
	1483, 747, 2242, 3065, 3038, 1293, 3066, 1294, 1295, 1715,
	3067, 2620, 2621, 1293, 1484, 1294, 1295, 3323, 3324, 746,
	3325, 1293, 1908, 1294, 1295, 1737, 3052, 3061, 638, 3083,
	3418, 1268, 901, 32, 31, 1293, 30, 1294, 1295, 1480,
	1481, 1486, 1293, 1485, 1294, 1295, 1838, 29, 28, 1836,
	3112, 1293, 23, 1294, 1295, 22, 21, 37, 20, 3104,
	19, 25, 3040, 18, 17, 16, 2781, 3438, 1109, 3480,
	2675, 115, 3093, 3084, 50, 3108, 3092, 47, 45, 123,
	3106, 3100, 3102, 122, 48, 44, 1047, 42, 27, 26,
	3000, 15, 14, 13, 12, 11, 2678, 10, 9, 5,
	2678, 4, 3113, 3114, 35, 34, 3210, 33, 1271, 3116,
	24, 2, 2481, 2134, 3197, 3217, 0, 0, 0, 0,
	808, 79, 0, 3024, 0, 0, 0, 0, 0, 0,
	0, 0, 3227, 3228, 0, 3230, 0, 3231, 3232, 0,
	0, 0, 3235, 3236, 3237, 3195, 3239, 3242, 3240, 3241,
	3221, 3194, 1838, 0, 0, 1836, 3244, 3209, 3193, 0,
	0, 0, 3251, 3253, 3254, 3256, 3258, 3259, 3261, 3201,
	3213, 3214, 3041, 0, 3042, 0, 0, 3043, 0, 0,
	3046, 3047, 0, 0, 0, 0, 0, 0, 0, 3051,
	0, 0, 0, 0, 3204, 3205, 3206, 3245, 872, 3053,
	79, 0, 0, 0, 0, 3247, 3291, 0, 0, 3250,
	0, 0, 0, 0, 0, 0, 0, 3269, 872, 0,
	0, 3070, 0, 3287, 3071, 0, 3072, 3073, 3268, 3074,
	0, 3075, 1109, 1109, 932, 0, 3076, 3266, 3267, 0,
	0, 0, 0, 3286, 0, 3284, 3275, 3290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3101, 0, 0, 0, 2678, 0, 0, 0, 0,
	0, 0, 3109, 0, 0, 3111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3115,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 3292, 0, 3436, 0, 0, 3190, 0, 0,
	0, 0, 0, 1846, 1557, 3313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3319, 0, 0, 0, 3311, 0, 0, 0, 37,
	0, 3308, 0, 0, 1878, 1879, 0, 3303, 0, 0,
	0, 3335, 3306, 0, 0, 0, 0, 3336, 3337, 0,
	0, 0, 3299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3348,
	0, 0, 0, 0, 3329, 0, 0, 3330, 0, 0,
	0, 0, 0, 0, 1109, 0, 0, 3318, 0, 0,
	0, 3338, 0, 0, 0, 3328, 0, 0, 3375, 3376,
	0, 0, 0, 0, 3274, 37, 0, 3353, 0, 3345,
	0, 2675, 3385, 3387, 3389, 3350, 3382, 3383, 3366, 3221,
	3368, 3358, 3363, 3360, 3359, 3357, 3355, 3362, 3361, 0,
	0, 2004, 0, 0, 0, 0, 0, 3417, 0, 0,
	0, 0, 0, 0, 0, 0, 1545, 3393, 0, 0,
	0, 0, 0, 0, 3396, 3414, 3404, 0, 2016, 3409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3382,
	3383, 0, 1511, 3423, 0, 1109, 3421, 0, 3434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3432, 0, 0, 924, 3437, 0, 0,
	0, 0, 0, 1341, 0, 0, 0, 0, 0, 0,
	3455, 3457, 3459, 0, 0, 0, 0, 0, 0, 3450,
	1838, 0, 3452, 1836, 3464, 0, 0, 0, 0, 1558,
	0, 3463, 3461, 3460, 3467, 0, 3465, 0, 0, 0,
	0, 3479, 0, 0, 0, 3382, 3383, 3317, 0, 3476,
	0, 931, 0, 3482, 0, 0, 0, 0, 3492, 3493,
	3488, 3490, 0, 0, 0, 0, 0, 0, 0, 0,
	3331, 0, 0, 3332, 0, 3333, 1838, 0, 924, 1836,
	3498, 3500, 3501, 3241, 931, 3499, 0, 1571, 1574, 1575,
	1576, 1577, 1578, 1579, 0, 1580, 1581, 1582, 1583, 1584,
	1559, 1560, 1561, 1562, 1543, 1544, 1572, 0, 1546, 0,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 0,
	0, 1556, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	0, 924, 0, 0, 0, 0, 1832, 0, 0, 0,
	1832, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3415, 0, 0, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3429, 0, 3430, 0, 3431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1107, 0, 1107, 1107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2218, 0, 0, 161, 0, 162, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	1573, 1557, 0, 0, 3477, 0, 3478, 872, 1334, 1335,
	1336, 0, 1339, 0, 1340, 1342, 1343, 1344, 0, 1347,
	1348, 1350, 1350, 0, 1350, 1354, 1354, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 0, 0, 0, 0, 1421, 624, 1423, 1424,
	1425, 1426, 1427, 0, 0, 0, 0, 0, 0, 165,
	0, 1354, 1354, 1354, 1354, 1354, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 0,
	618, 0, 0, 1545, 0, 0, 0, 0, 0, 0,
	1459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1109, 0,
	0, 0, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2372, 0, 1465, 0, 0, 0, 0, 0, 872,
	0, 0, 2387, 872, 0, 0, 0, 0, 0, 872,
	0, 0, 0, 0, 0, 0, 1558, 0, 0, 0,
	601, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 596, 0, 1571, 1574, 1575, 1576, 1577, 1578,
	1579, 610, 1580, 1581, 1582, 1583, 1584, 1559, 1560, 1561,
	1562, 1543, 1544, 1572, 2470, 1546, 606, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 0, 0, 1556, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 0, 0, 0,
	0, 2016, 0, 0, 0, 0, 0, 0, 2495, 0,
	0, 0, 0, 619, 0, 0, 0, 2500, 0, 0,
	0, 3134, 3136, 3135, 3153, 3154, 3155, 3156, 3157, 3158,
	3159, 704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 0, 588, 602, 0,
	621, 0, 620, 592, 0, 590, 594, 603, 595, 0,
	589, 0, 600, 0, 0, 591, 604, 605, 608, 611,
	612, 613, 609, 607, 0, 598, 622, 157, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 1107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 0,
	0, 0, 176, 178, 179, 180, 2618, 0, 0, 0,
	0, 0, 0, 0, 1109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1638, 0, 0, 765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2655, 0, 0, 0, 3140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1109, 0,
	0, 0, 0, 3148, 3149, 2682, 1638, 0, 0, 0,
	0, 1107, 1107, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 187, 623, 0, 629, 0, 0, 0,
	0, 635, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	617, 0, 0, 0, 770, 0, 683, 774, 685, 771,
	772, 0, 681, 684, 773, 0, 0, 0, 0, 0,
	0, 635, 187, 635, 0, 0, 0, 0, 0, 0,
	0, 924, 0, 0, 0, 0, 0, 0, 0, 2016,
	702, 703, 3133, 3137, 3138, 3139, 3150, 3151, 3152, 3160,
	3162, 735, 3161, 3163, 3164, 3165, 3168, 3169, 3170, 3171,
	3166, 3167, 3172, 3117, 3121, 3118, 3119, 3120, 3132, 3122,
	3123, 3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3173,
	3174, 3175, 3176, 3177, 3178, 3143, 3147, 3146, 3144, 3145,
	3141, 3142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 775, 0, 776, 0, 0, 780,
	0, 0, 0, 782, 781, 0, 783, 749, 748, 0,
	0, 777, 778, 0, 779, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 39,
	40, 80, 0, 0, 0, 0, 0, 0, 0, 2886,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 1464, 43, 69, 70, 0, 67, 71, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 0, 0, 0, 56, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	932, 0, 0, 0, 928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2016, 2016,
	0, 0, 0, 932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3032, 3033, 3034, 3035, 0, 0, 0, 0,
	0, 0, 46, 49, 52, 51, 54, 0, 66, 0,
	0, 75, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 83, 82, 0, 0, 64,
	65, 53, 0, 0, 0, 0, 0, 73, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	59, 60, 61, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3105,
	0, 3107, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 187, 2226, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 635, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2016, 0, 0, 635, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1109, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3262,
	0, 0, 0, 3262, 3262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	86, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2016, 0, 2331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2403, 2404, 0, 0,
	0, 2016, 0, 0, 0, 2423, 0, 2424, 2425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1048, 0, 1054, 0, 0, 1056, 0, 0, 0,
	0, 0, 0, 0, 2016, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 635, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 187, 0, 3342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 635, 0, 3346, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2501, 0, 0,
	0, 1109, 1109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 0,
	0, 0, 0, 0, 0, 0, 3391, 0, 0, 0,
	0, 1454, 0, 0, 0, 0, 0, 635, 635, 0,
	635, 3399, 635, 635, 0, 635, 635, 635, 635, 635,
	635, 0, 0, 0, 0, 0, 0, 0, 1454, 0,
	0, 1454, 635, 1454, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 3342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 2016, 0,
	0, 0, 0, 635, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2886, 0, 3399, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 2617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	802, 810, 811, 812, 813, 814, 803, 805, 0, 0,
	0, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 807, 815, 816, 0, 0, 2044,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2679, 1535, 79, 0, 0, 2044, 2044, 2044,
	2044, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2799, 2800, 0, 2423, 872, 0, 0, 0, 2044,
	0, 0, 2044, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 0, 0, 0, 0, 0,
	635, 635, 0, 0, 0, 0, 1672, 0, 0, 0,
	0, 0, 0, 0, 0, 2787, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 2795, 87, 0, 0, 0,
	0, 0, 802, 810, 811, 812, 813, 814, 803, 805,
	0, 1717, 0, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 807, 815, 816, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 1749, 0, 2829, 0, 0, 0, 0,
	1753, 635, 0, 0, 0, 0, 0, 1454, 0, 0,
	0, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 0, 0,
	0, 0, 0, 2799, 2800, 0, 0, 0, 0, 0,
	0, 0, 635, 635, 0, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 0, 0, 0,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 770, 0, 0, 774,
	0, 771, 772, 0, 0, 0, 773, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 635, 0, 0, 2961,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	635, 0, 0, 1966, 0, 187, 0, 187, 0, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 635, 0, 0, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 0, 635, 0, 0, 0, 635, 635,
	0, 0, 0, 0, 0, 0, 634, 0, 634, 0,
	3077, 0, 3081, 3082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 810, 811, 0,
	0, 0, 0, 1837, 0, 2679, 187, 79, 0, 2679,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	187, 187, 0, 0, 187, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	187, 810, 811, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2030, 0,
	0, 0, 0, 0, 0, 0, 187, 2034, 0, 2037,
	0, 635, 1790, 0, 0, 0, 0, 0, 3202, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 0, 0, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 3301, 0, 0, 0, 2189, 1966, 0, 0, 0,
	187, 0, 2203, 2204, 0, 0, 2208, 0, 187, 79,
	0, 0, 0, 0, 0, 2211, 0, 0, 0, 635,
	0, 0, 2214, 0, 0, 0, 0, 0, 0, 0,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2217, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 187, 756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3349, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 583, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 583, 0, 0, 0, 0, 187, 0,
	0, 583, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 882, 0, 0, 635,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 900, 0, 900, 635, 0, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 1454, 0, 0, 0, 0, 3433, 0, 0, 0,
	0, 0, 0, 0, 187, 187, 187, 187, 187, 634,
	1260, 634, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 187, 0, 0, 0,
	0, 634, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 0, 0, 0, 0,
	0, 0, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	2474, 1453, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	1454, 0, 0, 635, 635, 1454, 187, 187, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 187, 0, 0, 187, 0, 187, 0,
	0, 187, 187, 187, 0, 0, 0, 0, 0, 634,
	634, 0, 0, 0, 0, 0, 2523, 2524, 2525, 2526,
	2527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 2536, 0,
	0, 0, 0, 0, 634, 0, 187, 0, 0, 0,
	0, 0, 0, 2544, 0, 0, 0, 0, 0, 635,
	634, 0, 1454, 0, 0, 0, 0, 635, 0, 0,
	1586, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	1595, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 634, 187, 1621, 0, 187, 0, 0,
	0, 0, 0, 1630, 0, 0, 1453, 1632, 0, 0,
	1635, 1636, 634, 634, 0, 634, 0, 634, 634, 0,
	634, 634, 634, 634, 634, 634, 0, 0, 0, 0,
	0, 0, 0, 1453, 1667, 1668, 1453, 634, 1453, 0,
	1673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 635, 0, 0,
	0, 0, 0, 0, 0, 1733, 0, 0, 634, 583,
	0, 583, 0, 0, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 2755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 187, 187, 187, 0,
	0, 0, 0, 0, 2793, 0, 635, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2818, 0, 0, 2821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 635, 635, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 0, 0, 2915, 0,
	583, 0, 0, 187, 1844, 0, 634, 0, 0, 0,
	0, 0, 1453, 0, 0, 0, 0, 0, 0, 0,
	882, 0, 1454, 0, 0, 0, 0, 635, 0, 635,
	0, 0, 0, 0, 0, 0, 0, 634, 634, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2978, 634, 0, 0,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 2993, 0, 635, 2994, 2995,
	2996, 1455, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 1455, 0,
	0, 1455, 0, 1455, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 0, 0, 1689, 0, 0, 635, 0, 0,
	0, 635, 635, 0, 0, 634, 0, 0, 634, 583,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1739, 0, 0, 0, 634,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 1763, 583,
	583, 583, 583, 583, 583, 583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 0,
	0, 2122, 2123, 2124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	0, 634, 0, 0, 0, 0, 0, 634, 1630, 0,
	0, 1630, 0, 1630, 187, 0, 0, 0, 0, 2154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 634,
	0, 0, 0, 634, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1454, 0, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 635,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 0, 635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 635,
	0, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 900, 0, 0, 0, 0, 0,
	0, 0, 900, 900, 635, 0, 0, 1455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 635, 0, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 900, 1739, 900, 900, 900, 900, 900, 0, 0,
	0, 0, 0, 0, 0, 3312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 634, 0, 1739, 0, 583, 0, 583, 0, 583,
	2052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 1630, 1630, 0, 0, 0,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1453, 2511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 0, 0,
	583, 583, 0, 0, 583, 0, 2210, 0, 0, 0,
	0, 0, 0, 583, 0, 0, 0, 0, 0, 0,
	583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 1453, 0, 0, 634, 634,
	1453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1739, 0, 0, 0,
	583, 0, 2750, 0, 0, 0, 0, 0, 1689, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 1453, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2825, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 0, 0, 2480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 583, 583, 583, 583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 900, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 900, 0, 0, 0, 634, 634, 634, 634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1455, 0, 0, 0, 0, 1455, 583, 583, 583, 583,
	583, 0, 0, 0, 0, 0, 0, 0, 2698, 0,
	0, 0, 0, 583, 0, 0, 1689, 0, 583, 0,
	0, 583, 2709, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1453, 0, 0,
	0, 0, 634, 0, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 634, 0, 0, 0,
	0, 0, 0, 0, 583, 0, 0, 583, 0, 0,
	0, 0, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 634, 0, 0, 0, 634, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 0, 583, 0, 0, 583, 583, 583, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1453, 0,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1689, 0, 0, 0, 0, 0, 634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1455, 0, 0, 0, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 634, 0,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 583, 0, 1243, 1228, 493, 0, 1171,
	1246, 1140, 1159, 1256, 1162, 1165, 1207, 1119, 1185, 396,
	1156, 1112, 1144, 1114, 1151, 1115, 1142, 1173, 255, 1139,
	1230, 1189, 1245, 348, 252, 1121, 1145, 410, 1161, 194,
	1209, 463, 239, 358, 355, 501, 267, 258, 254, 237,
	301, 366, 408, 483, 402, 1252, 352, 1195, 0, 473,
	381, 0, 0, 1455, 1175, 1234, 1183, 1221, 1170, 1208,
	1129, 1194, 1247, 1157, 1204, 1248, 307, 235, 309, 193,
	393, 474, 271, 0, 0, 0, 0, 624, 0, 0,
	0, 3369, 0, 3370, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 333, 342, 341, 322, 323, 325, 327,
	332, 339, 345, 1153, 1201, 1242, 1154, 1203, 250, 305,
	257, 249, 498, 1253, 1233, 1118, 1182, 1241, 1689, 0,
	217, 1244, 1177, 0, 1206, 0, 1259, 1113, 1197, 0,
	1116, 1120, 1255, 1237, 1148, 260, 0, 0, 0, 0,
	0, 0, 0, 1174, 1184, 1218, 1222, 1168, 0, 0,
	0, 0, 0, 0, 0, 1146, 0, 1193, 0, 0,
	0, 1125, 1117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1172, 0, 0, 0, 0,
	1128, 0, 1147, 1219, 0, 1111, 282, 1122, 382, 242,
	0, 1226, 1236, 1169, 538, 1240, 1167, 1166, 1213, 1126,
	1232, 1160, 347, 1124, 314, 189, 213, 0, 1158, 392,
	438, 450, 1231, 1143, 1152, 240, 1150, 448, 406, 517,
	221, 269, 435, 412, 446, 419, 272, 1192, 1211, 447,
	353, 503, 429, 514, 539, 540, 248, 386, 526, 487,
	534, 555, 214, 245, 400, 480, 520, 470, 378, 499,
	500, 313, 469, 280, 192, 351, 545, 212, 456, 230,
	219, 505, 523, 274, 433, 201, 482, 512, 227, 460,
	0, 0, 557, 203, 510, 479, 374, 310, 311, 202,
	0, 434, 253, 278, 243, 395, 507, 508, 241, 558,
	216, 533, 208, 1123, 532, 388, 502, 511, 375, 364,
	207, 509, 373, 363, 318, 337, 338, 265, 291, 426,
	356, 427, 292, 384, 383, 385, 196, 521, 0, 197,
	0, 475, 522, 559, 222, 223, 225, 1138, 264, 268,
	276, 279, 287, 288, 297, 349, 399, 425, 421, 430,
	1227, 497, 515, 527, 537, 543, 544, 546, 547, 548,
	549, 550, 552, 551, 387, 295, 471, 317, 354, 1216,
	1258, 405, 449, 228, 519, 472, 1133, 1137, 1131, 1198,
	1132, 1187, 1188, 1134, 1249, 1250, 1251, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 1220, 1127, 0, 1135,
	1136, 1229, 1238, 1239, 578, 365, 462, 516, 319, 331,
	334, 324, 343, 0, 344, 320, 321, 326, 328, 329,
	330, 335, 336, 340, 346, 236, 199, 371, 379, 496,
	296, 204, 205, 206, 489, 490, 491, 492, 530, 531,
	535, 439, 440, 441, 442, 277, 525, 293, 445, 444,
	315, 316, 360, 428, 1191, 188, 209, 350, 1254, 431,
	273, 556, 529, 524, 195, 211, 1130, 247, 1141, 1149,
	0, 1155, 1163, 1164, 1176, 1178, 1179, 1180, 1181, 1199,
	1200, 1202, 1210, 1212, 1215, 1217, 1224, 1235, 1257, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 302, 303, 306, 312, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 432,
	437, 451, 452, 453, 454, 455, 458, 459, 464, 465,
	466, 467, 468, 476, 477, 481, 504, 506, 518, 536,
	541, 457, 285, 286, 423, 424, 298, 299, 553, 554,
	284, 513, 542, 0, 359, 1190, 1196, 362, 266, 289,
	304, 1205, 528, 478, 215, 443, 275, 238, 1223, 1225,
	200, 234, 218, 244, 259, 262, 308, 372, 380, 409,
	414, 281, 256, 232, 436, 229, 461, 484, 485, 486,
	488, 376, 251, 413, 1186, 1214, 357, 494, 495, 300,
	377, 0, 0, 1243, 1228, 493, 0, 1171, 1246, 1140,
	1159, 1256, 1162, 1165, 1207, 1119, 1185, 396, 1156, 1112,
	1144, 1114, 1151, 1115, 1142, 1173, 255, 1139, 1230, 1189,
	1245, 348, 252, 1121, 1145, 410, 1161, 194, 1209, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 1252, 352, 1195, 0, 473, 381, 0,
	0, 0, 1175, 1234, 1183, 1221, 1170, 1208, 1129, 1194,
	1247, 1157, 1204, 1248, 307, 235, 309, 193, 393, 474,
	271, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 333, 342, 341, 322, 323, 325, 327, 332, 339,
	345, 1153, 1201, 1242, 1154, 1203, 250, 305, 257, 249,
	498, 1253, 1233, 1118, 1182, 1241, 0, 0, 217, 1244,
	1177, 0, 1206, 0, 1259, 1113, 1197, 0, 1116, 1120,
	1255, 1237, 1148, 260, 0, 0, 0, 0, 0, 0,
	0, 1174, 1184, 1218, 1222, 1168, 0, 0, 0, 0,
	0, 2710, 0, 1146, 0, 1193, 0, 0, 0, 1125,
	1117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1172, 0, 0, 0, 0, 1128, 0,
	1147, 1219, 0, 1111, 282, 1122, 382, 242, 0, 1226,
	1236, 1169, 538, 1240, 1167, 1166, 1213, 1126, 1232, 1160,
	347, 1124, 314, 189, 213, 0, 1158, 392, 438, 450,
	1231, 1143, 1152, 240, 1150, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 1192, 1211, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 216, 533,
	208, 1123, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 337, 338, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 1138, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 1227, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 1216, 1258, 405,
	449, 228, 519, 472, 1133, 1137, 1131, 1198, 1132, 1187,
	1188, 1134, 1249, 1250, 1251, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 1220, 1127, 0, 1135, 1136, 1229,
	1238, 1239, 578, 365, 462, 516, 319, 331, 334, 324,
	343, 0, 344, 320, 321, 326, 328, 329, 330, 335,
	336, 340, 346, 236, 199, 371, 379, 496, 296, 204,
	205, 206, 489, 490, 491, 492, 530, 531, 535, 439,
	440, 441, 442, 277, 525, 293, 445, 444, 315, 316,
	360, 428, 1191, 188, 209, 350, 1254, 431, 273, 556,
	529, 524, 195, 211, 1130, 247, 1141, 1149, 0, 1155,
	1163, 1164, 1176, 1178, 1179, 1180, 1181, 1199, 1200, 1202,
	1210, 1212, 1215, 1217, 1224, 1235, 1257, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	285, 286, 423, 424, 298, 299, 553, 554, 284, 513,
	542, 0, 359, 1190, 1196, 362, 266, 289, 304, 1205,
	528, 478, 215, 443, 275, 238, 1223, 1225, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 1186, 1214, 357, 494, 495, 300, 377, 0,
	0, 1243, 1228, 493, 0, 1171, 1246, 1140, 1159, 1256,
	1162, 1165, 1207, 1119, 1185, 396, 1156, 1112, 1144, 1114,
	1151, 1115, 1142, 1173, 255, 1139, 1230, 1189, 1245, 348,
	252, 1121, 1145, 410, 1161, 194, 1209, 463, 239, 358,
	355, 501, 267, 258, 254, 237, 301, 366, 408, 483,
	402, 1252, 352, 1195, 0, 473, 381, 0, 0, 0,
	1175, 1234, 1183, 1221, 1170, 1208, 1129, 1194, 1247, 1157,
	1204, 1248, 307, 235, 309, 193, 393, 474, 271, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 333,
	342, 341, 322, 323, 325, 327, 332, 339, 345, 1153,
	1201, 1242, 1154, 1203, 250, 305, 257, 249, 498, 1253,
	1233, 1118, 1182, 1241, 0, 0, 217, 1244, 1177, 0,
	1206, 0, 1259, 1113, 1197, 0, 1116, 1120, 1255, 1237,
	1148, 260, 0, 0, 0, 0, 0, 0, 0, 1174,
	1184, 1218, 1222, 1168, 0, 0, 0, 0, 0, 2668,
	0, 1146, 0, 1193, 0, 0, 0, 1125, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1172, 0, 0, 0, 0, 1128, 0, 1147, 1219,
	0, 1111, 282, 1122, 382, 242, 0, 1226, 1236, 1169,
	538, 1240, 1167, 1166, 1213, 1126, 1232, 1160, 347, 1124,
	314, 189, 213, 0, 1158, 392, 438, 450, 1231, 1143,
	1152, 240, 1150, 448, 406, 517, 221, 269, 435, 412,
	446, 419, 272, 1192, 1211, 447, 353, 503, 429, 514,
	539, 540, 248, 386, 526, 487, 534, 555, 214, 245,
	400, 480, 520, 470, 378, 499, 500, 313, 469, 280,
	192, 351, 545, 212, 456, 230, 219, 505, 523, 274,
	433, 201, 482, 512, 227, 460, 0, 0, 557, 203,
	510, 479, 374, 310, 311, 202, 0, 434, 253, 278,
	243, 395, 507, 508, 241, 558, 216, 533, 208, 1123,
	532, 388, 502, 511, 375, 364, 207, 509, 373, 363,
	318, 337, 338, 265, 291, 426, 356, 427, 292, 384,
	383, 385, 196, 521, 0, 197, 0, 475, 522, 559,
	222, 223, 225, 1138, 264, 268, 276, 279, 287, 288,
	297, 349, 399, 425, 421, 430, 1227, 497, 515, 527,
	537, 543, 544, 546, 547, 548, 549, 550, 552, 551,
	387, 295, 471, 317, 354, 1216, 1258, 405, 449, 228,
	519, 472, 1133, 1137, 1131, 1198, 1132, 1187, 1188, 1134,
	1249, 1250, 1251, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 1220, 1127, 0, 1135, 1136, 1229, 1238, 1239,
	578, 365, 462, 516, 319, 331, 334, 324, 343, 0,
	344, 320, 321, 326, 328, 329, 330, 335, 336, 340,
	346, 236, 199, 371, 379, 496, 296, 204, 205, 206,
	489, 490, 491, 492, 530, 531, 535, 439, 440, 441,
	442, 277, 525, 293, 445, 444, 315, 316, 360, 428,
	1191, 188, 209, 350, 1254, 431, 273, 556, 529, 524,
	195, 211, 1130, 247, 1141, 1149, 0, 1155, 1163, 1164,
	1176, 1178, 1179, 1180, 1181, 1199, 1200, 1202, 1210, 1212,
	1215, 1217, 1224, 1235, 1257, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 302,
	303, 306, 312, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 432, 437, 451, 452, 453,
	454, 455, 458, 459, 464, 465, 466, 467, 468, 476,
	477, 481, 504, 506, 518, 536, 541, 457, 285, 286,
	423, 424, 298, 299, 553, 554, 284, 513, 542, 0,
	359, 1190, 1196, 362, 266, 289, 304, 1205, 528, 478,
	215, 443, 275, 238, 1223, 1225, 200, 234, 218, 244,
	259, 262, 308, 372, 380, 409, 414, 281, 256, 232,
	436, 229, 461, 484, 485, 486, 488, 376, 251, 413,
	1186, 1214, 357, 494, 495, 300, 377, 0, 0, 1243,
	1228, 493, 0, 1171, 1246, 1140, 1159, 1256, 1162, 1165,
	1207, 1119, 1185, 396, 1156, 1112, 1144, 1114, 1151, 1115,
	1142, 1173, 255, 1139, 1230, 1189, 1245, 348, 252, 1121,
	1145, 410, 1161, 194, 1209, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 1252,
	352, 1195, 0, 473, 381, 0, 0, 0, 1175, 1234,
	1183, 1221, 1170, 1208, 1129, 1194, 1247, 1157, 1204, 1248,
	307, 235, 309, 193, 393, 474, 271, 0, 0, 0,
	0, 798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 333, 342, 341,
	322, 323, 325, 327, 332, 339, 345, 1153, 1201, 1242,
	1154, 1203, 250, 305, 257, 249, 498, 1253, 1233, 1118,
	1182, 1241, 0, 0, 217, 1244, 1177, 0, 1206, 0,
	1259, 1113, 1197, 0, 1116, 1120, 1255, 1237, 1148, 260,
	0, 0, 0, 0, 0, 0, 0, 1174, 1184, 1218,
	1222, 1168, 0, 0, 0, 0, 0, 2032, 0, 1146,
	0, 1193, 0, 0, 0, 1125, 1117, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1172,
	0, 0, 0, 0, 1128, 0, 1147, 1219, 0, 1111,
	282, 1122, 382, 242, 0, 1226, 1236, 1169, 538, 1240,
	1167, 1166, 1213, 1126, 1232, 1160, 347, 1124, 314, 189,
	213, 0, 1158, 392, 438, 450, 1231, 1143, 1152, 240,
	1150, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 1192, 1211, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 216, 533, 208, 1123, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 337,
	338, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 1138, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 1227, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 1216, 1258, 405, 449, 228, 519, 472,
	1133, 1137, 1131, 1198, 1132, 1187, 1188, 1134, 1249, 1250,
	1251, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	1220, 1127, 0, 1135, 1136, 1229, 1238, 1239, 578, 365,
	462, 516, 319, 331, 334, 324, 343, 0, 344, 320,
	321, 326, 328, 329, 330, 335, 336, 340, 346, 236,
	199, 371, 379, 496, 296, 204, 205, 206, 489, 490,
	491, 492, 530, 531, 535, 439, 440, 441, 442, 277,
	525, 293, 445, 444, 315, 316, 360, 428, 1191, 188,
	209, 350, 1254, 431, 273, 556, 529, 524, 195, 211,
	1130, 247, 1141, 1149, 0, 1155, 1163, 1164, 1176, 1178,
	1179, 1180, 1181, 1199, 1200, 1202, 1210, 1212, 1215, 1217,
	1224, 1235, 1257, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 285, 286, 423, 424,
	298, 299, 553, 554, 284, 513, 542, 0, 359, 1190,
	1196, 362, 266, 289, 304, 1205, 528, 478, 215, 443,
	275, 238, 1223, 1225, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 1186, 1214,
	357, 494, 495, 300, 377, 0, 0, 1243, 1228, 493,
	0, 1171, 1246, 1140, 1159, 1256, 1162, 1165, 1207, 1119,
	1185, 396, 1156, 1112, 1144, 1114, 1151, 1115, 1142, 1173,
	255, 1139, 1230, 1189, 1245, 348, 252, 1121, 1145, 410,
	1161, 194, 1209, 463, 239, 358, 355, 501, 267, 258,
	254, 237, 301, 366, 408, 483, 402, 1252, 352, 1195,
	0, 473, 381, 0, 0, 0, 1175, 1234, 1183, 1221,
	1170, 1208, 1129, 1194, 1247, 1157, 1204, 1248, 307, 235,
	309, 193, 393, 474, 271, 0, 87, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 333, 342, 341, 322, 323,
	325, 327, 332, 339, 345, 1153, 1201, 1242, 1154, 1203,
	250, 305, 257, 249, 498, 1253, 1233, 1118, 1182, 1241,
	0, 0, 217, 1244, 1177, 0, 1206, 0, 1259, 1113,
	1197, 0, 1116, 1120, 1255, 1237, 1148, 260, 0, 0,
	0, 0, 0, 0, 0, 1174, 1184, 1218, 1222, 1168,
	0, 0, 0, 0, 0, 0, 0, 1146, 0, 1193,
	0, 0, 0, 1125, 1117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1172, 0, 0,
	0, 0, 1128, 0, 1147, 1219, 0, 1111, 282, 1122,
	382, 242, 0, 1226, 1236, 1169, 538, 1240, 1167, 1166,
	1213, 1126, 1232, 1160, 347, 1124, 314, 189, 213, 0,
	1158, 392, 438, 450, 1231, 1143, 1152, 240, 1150, 448,
	406, 517, 221, 269, 435, 412, 446, 419, 272, 1192,
	1211, 447, 353, 503, 429, 514, 539, 540, 248, 386,
	526, 487, 534, 555, 214, 245, 400, 480, 520, 470,
	378, 499, 500, 313, 469, 280, 192, 351, 545, 212,
	456, 230, 219, 505, 523, 274, 433, 201, 482, 512,
	227, 460, 0, 0, 557, 203, 510, 479, 374, 310,
	311, 202, 0, 434, 253, 278, 243, 395, 507, 508,
	241, 558, 216, 533, 208, 1123, 532, 388, 502, 511,
	375, 364, 207, 509, 373, 363, 318, 337, 338, 265,
	291, 426, 356, 427, 292, 384, 383, 385, 196, 521,
	0, 197, 0, 475, 522, 559, 222, 223, 225, 1138,
	264, 268, 276, 279, 287, 288, 297, 349, 399, 425,
	421, 430, 1227, 497, 515, 527, 537, 543, 544, 546,
	547, 548, 549, 550, 552, 551, 387, 295, 471, 317,
	354, 1216, 1258, 405, 449, 228, 519, 472, 1133, 1137,
	1131, 1198, 1132, 1187, 1188, 1134, 1249, 1250, 1251, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 1220, 1127,
	0, 1135, 1136, 1229, 1238, 1239, 578, 365, 462, 516,
	319, 331, 334, 324, 343, 0, 344, 320, 321, 326,
	328, 329, 330, 335, 336, 340, 346, 236, 199, 371,
	379, 496, 296, 204, 205, 206, 489, 490, 491, 492,
	530, 531, 535, 439, 440, 441, 442, 277, 525, 293,
	445, 444, 315, 316, 360, 428, 1191, 188, 209, 350,
	1254, 431, 273, 556, 529, 524, 195, 211, 1130, 247,
	1141, 1149, 0, 1155, 1163, 1164, 1176, 1178, 1179, 1180,
	1181, 1199, 1200, 1202, 1210, 1212, 1215, 1217, 1224, 1235,
	1257, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 302, 303, 306, 312, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 432, 437, 451, 452, 453, 454, 455, 458, 459,
	464, 465, 466, 467, 468, 476, 477, 481, 504, 506,
	518, 536, 541, 457, 285, 286, 423, 424, 298, 299,
	553, 554, 284, 513, 542, 0, 359, 1190, 1196, 362,
	266, 289, 304, 1205, 528, 478, 215, 443, 275, 238,
	1223, 1225, 200, 234, 218, 244, 259, 262, 308, 372,
	380, 409, 414, 281, 256, 232, 436, 229, 461, 484,
	485, 486, 488, 376, 251, 413, 1186, 1214, 357, 494,
	495, 300, 377, 0, 0, 1243, 1228, 493, 0, 1171,
	1246, 1140, 1159, 1256, 1162, 1165, 1207, 1119, 1185, 396,
	1156, 1112, 1144, 1114, 1151, 1115, 1142, 1173, 255, 1139,
	1230, 1189, 1245, 348, 252, 1121, 1145, 410, 1161, 194,
	1209, 463, 239, 358, 355, 501, 267, 258, 254, 237,
	301, 366, 408, 483, 402, 1252, 352, 1195, 0, 473,
	381, 0, 0, 0, 1175, 1234, 1183, 1221, 1170, 1208,
	1129, 1194, 1247, 1157, 1204, 1248, 307, 235, 309, 193,
	393, 474, 271, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 333, 342, 341, 322, 323, 325, 327,
	332, 339, 345, 1153, 1201, 1242, 1154, 1203, 250, 305,
	257, 249, 498, 1253, 1233, 1118, 1182, 1241, 0, 0,
	217, 1244, 1177, 0, 1206, 0, 1259, 1113, 1197, 0,
	1116, 1120, 1255, 1237, 1148, 260, 0, 0, 0, 0,
	0, 0, 0, 1174, 1184, 1218, 1222, 1168, 0, 0,
	0, 0, 0, 0, 0, 1146, 0, 1193, 0, 0,
	0, 1125, 1117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1172, 0, 0, 0, 0,
	1128, 0, 1147, 1219, 0, 1111, 282, 1122, 382, 242,
	0, 1226, 1236, 1169, 538, 1240, 1167, 1166, 1213, 1126,
	1232, 1160, 347, 1124, 314, 189, 213, 0, 1158, 392,
	438, 450, 1231, 1143, 1152, 240, 1150, 448, 406, 517,
	221, 269, 435, 412, 446, 419, 272, 1192, 1211, 447,
	353, 503, 429, 514, 539, 540, 248, 386, 526, 487,
	534, 555, 214, 245, 400, 480, 520, 470, 378, 499,
	500, 313, 469, 280, 192, 351, 545, 212, 456, 230,
	219, 505, 523, 274, 433, 201, 482, 512, 227, 460,
	0, 0, 557, 203, 510, 479, 374, 310, 311, 202,
	0, 434, 253, 278, 243, 395, 507, 508, 241, 558,
	216, 533, 208, 1123, 532, 388, 502, 511, 375, 364,
	207, 509, 373, 363, 318, 337, 338, 265, 291, 426,
	356, 427, 292, 384, 383, 385, 196, 521, 0, 197,
	0, 475, 522, 559, 222, 223, 225, 1138, 264, 268,
	276, 279, 287, 288, 297, 349, 399, 425, 421, 430,
	1227, 497, 515, 527, 537, 543, 544, 546, 547, 548,
	549, 550, 552, 551, 387, 295, 471, 317, 354, 1216,
	1258, 405, 449, 228, 519, 472, 1133, 1137, 1131, 1198,
	1132, 1187, 1188, 1134, 1249, 1250, 1251, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 1220, 1127, 0, 1135,
	1136, 1229, 1238, 1239, 578, 365, 462, 516, 319, 331,
	334, 324, 343, 0, 344, 320, 321, 326, 328, 329,
	330, 335, 336, 340, 346, 236, 199, 371, 379, 496,
	296, 204, 205, 206, 489, 490, 491, 492, 530, 531,
	535, 439, 440, 441, 442, 277, 525, 293, 445, 444,
	315, 316, 360, 428, 1191, 188, 209, 350, 1254, 431,
	273, 556, 529, 524, 195, 211, 1130, 247, 1141, 1149,
	0, 1155, 1163, 1164, 1176, 1178, 1179, 1180, 1181, 1199,
	1200, 1202, 1210, 1212, 1215, 1217, 1224, 1235, 1257, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 302, 303, 306, 312, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 432,
	437, 451, 452, 453, 454, 455, 458, 459, 464, 465,
	466, 467, 468, 476, 477, 481, 504, 506, 518, 536,
	541, 457, 285, 286, 423, 424, 298, 299, 553, 554,
	284, 513, 542, 0, 359, 1190, 1196, 362, 266, 289,
	304, 1205, 528, 478, 215, 443, 275, 238, 1223, 1225,
	200, 234, 218, 244, 259, 262, 308, 372, 380, 409,
	414, 281, 256, 232, 436, 229, 461, 484, 485, 486,
	488, 376, 251, 413, 1186, 1214, 357, 494, 495, 300,
	377, 0, 0, 1243, 1228, 493, 0, 1171, 1246, 1140,
	1159, 1256, 1162, 1165, 1207, 1119, 1185, 396, 1156, 1112,
	1144, 1114, 1151, 1115, 1142, 1173, 255, 1139, 1230, 1189,
	1245, 348, 252, 1121, 1145, 410, 1161, 194, 1209, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 1252, 352, 1195, 0, 473, 381, 0,
	0, 0, 1175, 1234, 1183, 1221, 1170, 1208, 1129, 1194,
	1247, 1157, 1204, 1248, 307, 235, 309, 193, 393, 474,
	271, 0, 0, 0, 0, 798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 333, 342, 341, 322, 323, 325, 327, 332, 339,
	345, 1153, 1201, 1242, 1154, 1203, 250, 305, 257, 249,
	498, 1253, 1233, 1118, 1182, 1241, 0, 0, 217, 1244,
	1177, 0, 1206, 0, 1259, 1113, 1197, 0, 1116, 1120,
	1255, 1237, 1148, 260, 0, 0, 0, 0, 0, 0,
	0, 1174, 1184, 1218, 1222, 1168, 0, 0, 0, 0,
	0, 0, 0, 1146, 0, 1193, 0, 0, 0, 1125,
	1117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1172, 0, 0, 0, 0, 1128, 0,
	1147, 1219, 0, 1111, 282, 1122, 382, 242, 0, 1226,
	1236, 1169, 538, 1240, 1167, 1166, 1213, 1126, 1232, 1160,
	347, 1124, 314, 189, 213, 0, 1158, 392, 438, 450,
	1231, 1143, 1152, 240, 1150, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 1192, 1211, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 216, 533,
	208, 1123, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 337, 338, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 1138, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 1227, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 1216, 1258, 405,
	449, 228, 519, 472, 1133, 1137, 1131, 1198, 1132, 1187,
	1188, 1134, 1249, 1250, 1251, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 1220, 1127, 0, 1135, 1136, 1229,
	1238, 1239, 578, 365, 462, 516, 319, 331, 334, 324,
	343, 0, 344, 320, 321, 326, 328, 329, 330, 335,
	336, 340, 346, 236, 199, 371, 379, 496, 296, 204,
	205, 206, 489, 490, 491, 492, 530, 531, 535, 439,
	440, 441, 442, 277, 525, 293, 445, 444, 315, 316,
	360, 428, 1191, 188, 209, 350, 1254, 431, 273, 556,
	529, 524, 195, 211, 1130, 247, 1141, 1149, 0, 1155,
	1163, 1164, 1176, 1178, 1179, 1180, 1181, 1199, 1200, 1202,
	1210, 1212, 1215, 1217, 1224, 1235, 1257, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	285, 286, 423, 424, 298, 299, 553, 554, 284, 513,
	542, 0, 359, 1190, 1196, 362, 266, 289, 304, 1205,
	528, 478, 215, 443, 275, 238, 1223, 1225, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 1186, 1214, 357, 494, 495, 300, 377, 0,
	0, 1243, 1228, 493, 0, 1171, 1246, 1140, 1159, 1256,
	1162, 1165, 1207, 1119, 1185, 396, 1156, 1112, 1144, 1114,
	1151, 1115, 1142, 1173, 255, 1139, 1230, 1189, 1245, 348,
	252, 1121, 1145, 410, 1161, 194, 1209, 463, 239, 358,
	355, 501, 267, 258, 254, 237, 301, 366, 408, 483,
	402, 1252, 352, 1195, 0, 473, 381, 0, 0, 0,
	1175, 1234, 1183, 1221, 1170, 1208, 1129, 1194, 1247, 1157,
	1204, 1248, 307, 235, 309, 193, 393, 474, 271, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 333,
	342, 341, 322, 323, 325, 327, 332, 339, 345, 1153,
	1201, 1242, 1154, 1203, 250, 305, 257, 249, 498, 1253,
	1233, 1118, 1182, 1241, 0, 0, 217, 1244, 1177, 0,
	1206, 0, 1259, 1113, 1197, 0, 1116, 1120, 1255, 1237,
	1148, 260, 0, 0, 0, 0, 0, 0, 0, 1174,
	1184, 1218, 1222, 1168, 0, 0, 0, 0, 0, 0,
	0, 1146, 0, 1193, 0, 0, 0, 1125, 1117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1172, 0, 0, 0, 0, 1128, 0, 1147, 1219,
	0, 1111, 282, 1122, 382, 242, 0, 1226, 1236, 1169,
	538, 1240, 1167, 1166, 1213, 1126, 1232, 1160, 347, 1124,
	314, 189, 213, 0, 1158, 392, 438, 450, 1231, 1143,
	1152, 240, 1150, 448, 406, 517, 221, 269, 435, 412,
	446, 419, 272, 1192, 1211, 447, 353, 503, 429, 514,
	539, 540, 248, 386, 526, 487, 534, 555, 214, 245,
	400, 480, 520, 470, 378, 499, 500, 313, 469, 280,
	192, 351, 545, 212, 456, 230, 219, 505, 523, 274,
	433, 201, 482, 512, 227, 460, 0, 0, 557, 203,
	510, 479, 374, 310, 311, 202, 0, 434, 253, 278,
	243, 395, 507, 508, 241, 558, 216, 533, 208, 1123,
	532, 388, 502, 511, 375, 364, 207, 509, 373, 363,
	318, 337, 338, 265, 291, 426, 356, 427, 292, 384,
	383, 385, 196, 521, 0, 197, 0, 475, 522, 559,
	222, 223, 225, 1138, 264, 268, 276, 279, 287, 288,
	297, 349, 399, 425, 421, 430, 1227, 497, 515, 527,
	537, 543, 544, 546, 547, 548, 549, 550, 552, 551,
	387, 295, 471, 317, 354, 1216, 1258, 405, 449, 228,
	519, 472, 1133, 1137, 1131, 1198, 1132, 1187, 1188, 1134,
	1249, 1250, 1251, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 1220, 1127, 0, 1135, 1136, 1229, 1238, 1239,
	578, 365, 462, 516, 319, 331, 334, 324, 343, 0,
	344, 320, 321, 326, 328, 329, 330, 335, 336, 340,
	346, 236, 199, 371, 379, 496, 296, 204, 205, 206,
	489, 490, 491, 492, 530, 531, 535, 439, 440, 441,
	442, 277, 525, 293, 445, 444, 315, 316, 360, 428,
	1191, 188, 209, 350, 1254, 431, 273, 556, 529, 524,
	195, 211, 1130, 247, 1141, 1149, 0, 1155, 1163, 1164,
	1176, 1178, 1179, 1180, 1181, 1199, 1200, 1202, 1210, 1212,
	1215, 1217, 1224, 1235, 1257, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 302,
	303, 306, 312, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 432, 437, 451, 452, 453,
	454, 455, 458, 459, 464, 465, 466, 467, 468, 476,
	477, 481, 504, 506, 518, 536, 541, 457, 285, 286,
	423, 424, 298, 299, 553, 554, 284, 513, 542, 0,
	359, 1190, 1196, 362, 266, 289, 304, 1205, 528, 478,
	215, 443, 275, 238, 1223, 1225, 200, 234, 218, 244,
	259, 262, 308, 372, 380, 409, 414, 281, 256, 232,
	436, 229, 461, 484, 485, 486, 488, 376, 251, 413,
	1186, 1214, 357, 494, 495, 300, 377, 0, 0, 0,
	0, 493, 0, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 666, 0,
	0, 0, 255, 671, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 678,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 87, 0,
	0, 798, 766, 767, 802, 810, 811, 812, 813, 814,
	803, 805, 0, 0, 226, 804, 233, 706, 708, 707,
	725, 726, 727, 728, 729, 730, 731, 704, 807, 815,
	816, 0, 250, 305, 257, 249, 498, 0, 0, 1910,
	1911, 1912, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 648, 663, 0, 677, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 660, 661, 0, 0, 0,
	0, 760, 0, 662, 0, 0, 670, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 759, 0, 0, 538, 0,
	0, 757, 0, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 712, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 720,
	721, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	770, 758, 683, 774, 685, 771, 772, 680, 681, 684,
	773, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	761, 669, 668, 0, 676, 0, 702, 703, 705, 709,
	710, 711, 722, 723, 724, 732, 734, 735, 733, 736,
	737, 738, 741, 742, 743, 744, 739, 740, 745, 686,
	690, 687, 688, 689, 701, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 784, 785, 786, 787, 788,
	789, 715, 719, 718, 716, 717, 713, 714, 667, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	775, 247, 776, 0, 0, 780, 0, 0, 0, 782,
	781, 0, 783, 749, 748, 0, 0, 777, 778, 0,
	779, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 790, 791, 792, 793,
	794, 795, 796, 797, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 809, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 377,
	357, 494, 495, 300, 493, 0, 679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 666, 0, 0, 0, 255, 671, 0, 0, 0,
	348, 252, 0, 0, 410, 0, 194, 0, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 678, 352, 0, 0, 473, 381, 0, 0,
	0, 0, 0, 674, 675, 0, 0, 0, 0, 0,
	0, 2060, 0, 307, 235, 309, 193, 393, 474, 271,
	0, 87, 0, 0, 798, 766, 767, 802, 810, 811,
	812, 813, 814, 803, 805, 0, 0, 226, 804, 233,
	706, 708, 707, 725, 726, 727, 728, 729, 730, 731,
	704, 807, 815, 816, 2061, 250, 305, 257, 249, 498,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 648, 663, 0, 677, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 660, 661,
	0, 0, 0, 0, 760, 0, 662, 0, 0, 670,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 382, 242, 0, 759, 0,
	0, 538, 0, 0, 757, 0, 0, 0, 0, 347,
	0, 314, 189, 213, 0, 0, 392, 438, 450, 0,
	0, 0, 240, 0, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 0, 0, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 712, 533, 208,
	0, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 720, 721, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 0, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 0, 0, 405, 449,
	228, 519, 472, 770, 758, 683, 774, 685, 771, 772,
	680, 681, 684, 773, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 761, 669, 668, 0, 676, 0, 702,
	703, 705, 709, 710, 711, 722, 723, 724, 732, 734,
	735, 733, 736, 737, 738, 741, 742, 743, 744, 739,
	740, 745, 686, 690, 687, 688, 689, 701, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 784, 785,
	786, 787, 788, 789, 715, 719, 718, 716, 717, 713,
	714, 667, 188, 209, 350, 0, 431, 273, 556, 529,
	524, 195, 211, 775, 247, 776, 0, 0, 780, 0,
	0, 0, 782, 781, 0, 783, 749, 748, 0, 0,
	777, 778, 0, 779, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 790,
	791, 792, 793, 794, 795, 796, 797, 284, 513, 542,
	0, 359, 0, 0, 362, 266, 289, 304, 0, 528,
	478, 215, 443, 275, 238, 809, 0, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 0, 0, 357, 494, 495, 300, 377, 0, 0,
	0, 78, 493, 0, 679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 666,
	0, 0, 0, 255, 671, 0, 0, 0, 348, 252,
	0, 0, 410, 0, 194, 0, 463, 239, 358, 355,
	501, 267, 258, 254, 237, 301, 366, 408, 483, 402,
	678, 352, 0, 0, 473, 381, 0, 0, 0, 0,
	0, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 235, 309, 193, 393, 474, 271, 0, 87,
	0, 0, 798, 766, 767, 802, 810, 811, 812, 813,
	814, 803, 805, 0, 0, 226, 804, 233, 706, 708,
	707, 725, 726, 727, 728, 729, 730, 731, 704, 807,
	815, 816, 0, 250, 305, 257, 249, 498, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 648, 663, 0, 677, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 661, 0, 0,
	0, 0, 760, 0, 662, 0, 0, 670, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 382, 242, 0, 759, 0, 0, 538,
	0, 0, 757, 0, 0, 0, 0, 347, 0, 314,
	189, 213, 0, 0, 392, 438, 450, 0, 0, 0,
	240, 0, 448, 406, 517, 221, 269, 435, 412, 446,
	419, 272, 0, 0, 447, 353, 503, 429, 514, 539,
	540, 248, 386, 526, 487, 534, 555, 214, 245, 400,
	480, 520, 470, 378, 499, 500, 313, 469, 280, 192,
	351, 545, 212, 456, 230, 219, 505, 523, 274, 433,
	201, 482, 512, 227, 460, 0, 0, 557, 203, 510,
	479, 374, 310, 311, 202, 0, 434, 253, 278, 243,
	395, 507, 508, 241, 558, 712, 533, 208, 0, 532,
	388, 502, 511, 375, 364, 207, 509, 373, 363, 318,
	720, 721, 265, 291, 426, 356, 427, 292, 384, 383,
	385, 196, 521, 0, 197, 0, 475, 522, 559, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	349, 399, 425, 421, 430, 0, 497, 515, 527, 537,
	543, 544, 546, 547, 548, 549, 550, 552, 551, 387,
	295, 471, 317, 354, 0, 0, 405, 449, 228, 519,
	472, 770, 758, 683, 774, 685, 771, 772, 680, 681,
	684, 773, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 761, 669, 668, 0, 676, 0, 702, 703, 705,
	709, 710, 711, 722, 723, 724, 732, 734, 735, 733,
	736, 737, 738, 741, 742, 743, 744, 739, 740, 745,
	686, 690, 687, 688, 689, 701, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 784, 785, 786, 787,
	788, 789, 715, 719, 718, 716, 717, 713, 714, 667,
	188, 209, 350, 86, 431, 273, 556, 529, 524, 195,
	211, 775, 247, 776, 0, 0, 780, 0, 0, 0,
	782, 781, 0, 783, 749, 748, 0, 0, 777, 778,
	0, 779, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 302, 303,
	306, 312, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 432, 437, 451, 452, 453, 454,
	455, 458, 459, 464, 465, 466, 467, 468, 476, 477,
	481, 504, 506, 518, 536, 541, 457, 790, 791, 792,
	793, 794, 795, 796, 797, 284, 513, 542, 0, 359,
	0, 0, 362, 266, 289, 304, 0, 528, 478, 215,
	443, 275, 238, 809, 0, 200, 234, 218, 244, 259,
	262, 308, 372, 380, 409, 414, 281, 256, 232, 436,
	229, 461, 484, 485, 486, 488, 376, 251, 413, 0,
	377, 357, 494, 495, 300, 493, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 666, 0, 0, 0, 255, 671, 0, 0,
	0, 348, 252, 0, 0, 410, 0, 194, 0, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 678, 352, 0, 0, 473, 381, 0,
	0, 0, 0, 0, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 235, 309, 193, 393, 474,
	271, 0, 87, 0, 0, 798, 766, 767, 802, 810,
	811, 812, 813, 814, 803, 805, 0, 0, 226, 804,
	233, 706, 708, 707, 725, 726, 727, 728, 729, 730,
	731, 704, 807, 815, 816, 0, 250, 305, 257, 249,
	498, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 648, 663, 0, 677,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	661, 0, 0, 0, 0, 760, 0, 662, 0, 0,
	670, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 382, 242, 0, 759,
	0, 0, 538, 0, 0, 757, 0, 0, 0, 0,
	347, 0, 314, 189, 213, 0, 0, 392, 438, 450,
	0, 0, 0, 240, 0, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 3356, 0, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 712, 533,
	208, 0, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 720, 721, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 0, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 0, 0, 405,
	449, 228, 519, 472, 770, 758, 683, 774, 685, 771,
	772, 680, 681, 684, 773, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 761, 669, 668, 0, 676, 0,
	702, 703, 705, 709, 710, 711, 722, 723, 724, 732,
	734, 735, 733, 736, 737, 738, 741, 742, 743, 744,
	739, 740, 745, 686, 690, 687, 688, 689, 701, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 784,
	785, 786, 787, 788, 789, 715, 719, 718, 716, 717,
	713, 714, 667, 188, 209, 350, 0, 431, 273, 556,
	529, 524, 195, 211, 775, 247, 776, 0, 0, 780,
	0, 0, 0, 782, 781, 0, 783, 749, 748, 0,
	0, 777, 778, 0, 779, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	790, 791, 792, 793, 794, 795, 796, 797, 284, 513,
	542, 0, 359, 0, 0, 362, 266, 289, 304, 0,
	528, 478, 215, 443, 275, 238, 809, 0, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 0, 377, 357, 494, 495, 300, 493, 0,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 666, 0, 0, 0, 255,
	671, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 678, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 674, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 87, 0, 1489, 798, 766,
	767, 802, 810, 811, 812, 813, 814, 803, 805, 0,
	0, 226, 804, 233, 706, 708, 707, 725, 726, 727,
	728, 729, 730, 731, 704, 807, 815, 816, 0, 250,
	305, 257, 249, 498, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 648,
	663, 0, 677, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 660, 661, 0, 0, 0, 0, 760, 0,
	662, 0, 0, 670, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 759, 0, 0, 538, 0, 0, 757, 0,
	0, 0, 0, 347, 0, 314, 189, 213, 0, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 0,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 712, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 720, 721, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 770, 758, 683,
	774, 685, 771, 772, 680, 681, 684, 773, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 761, 669, 668,
	0, 676, 0, 702, 703, 705, 709, 710, 711, 722,
	723, 724, 732, 734, 735, 733, 736, 737, 738, 741,
	742, 743, 744, 739, 740, 745, 686, 690, 687, 688,
	689, 701, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 784, 785, 786, 787, 788, 789, 715, 719,
	718, 716, 717, 713, 714, 667, 188, 209, 350, 0,
	431, 273, 556, 529, 524, 195, 211, 775, 247, 776,
	0, 0, 780, 0, 0, 0, 782, 781, 0, 783,
	749, 748, 0, 0, 777, 778, 0, 779, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 790, 791, 792, 793, 794, 795, 796,
	797, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 809,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 377, 357, 494, 495,
	300, 493, 0, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 666, 0,
	0, 0, 255, 671, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 678,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	674, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 87, 0,
	0, 798, 766, 767, 802, 810, 811, 812, 813, 814,
	803, 805, 0, 0, 226, 804, 233, 706, 708, 707,
	725, 726, 727, 728, 729, 730, 731, 704, 807, 815,
	816, 0, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 648, 663, 0, 677, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 660, 661, 898, 0, 0,
	0, 760, 0, 662, 0, 0, 670, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 759, 0, 0, 538, 0,
	0, 757, 0, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 712, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 720,
	721, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	770, 758, 683, 774, 685, 771, 772, 680, 681, 684,
	773, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	761, 669, 668, 0, 676, 0, 702, 703, 705, 709,
	710, 711, 722, 723, 724, 732, 734, 735, 733, 736,
	737, 738, 741, 742, 743, 744, 739, 740, 745, 686,
	690, 687, 688, 689, 701, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 784, 785, 786, 787, 788,
	789, 715, 719, 718, 716, 717, 713, 714, 667, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	775, 247, 776, 0, 0, 780, 0, 0, 0, 782,
	781, 0, 783, 749, 748, 0, 0, 777, 778, 0,
	779, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 790, 791, 792, 793,
	794, 795, 796, 797, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 809, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 377,
	357, 494, 495, 300, 493, 0, 679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 666, 0, 0, 0, 255, 671, 0, 0, 0,
	348, 252, 0, 0, 410, 0, 194, 0, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 678, 352, 0, 0, 473, 381, 0, 0,
	0, 0, 0, 674, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 235, 309, 193, 393, 474, 271,
	0, 87, 0, 0, 798, 766, 767, 802, 810, 811,
	812, 813, 814, 803, 805, 0, 0, 226, 804, 233,
	706, 708, 707, 725, 726, 727, 728, 729, 730, 731,
	704, 807, 815, 816, 0, 250, 305, 257, 249, 498,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 648, 663, 0, 677, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 660, 661,
	0, 0, 0, 0, 760, 0, 662, 0, 0, 670,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 382, 242, 0, 759, 0,
	0, 538, 0, 0, 757, 0, 0, 0, 0, 347,
	0, 314, 189, 213, 0, 0, 392, 438, 450, 0,
	0, 0, 240, 0, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 0, 0, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 712, 533, 208,
	0, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 720, 721, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 0, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 0, 0, 405, 449,
	228, 519, 472, 770, 758, 683, 774, 685, 771, 772,
	680, 681, 684, 773, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 761, 669, 668, 0, 676, 0, 702,
	703, 705, 709, 710, 711, 722, 723, 724, 732, 734,
	735, 733, 736, 737, 738, 741, 742, 743, 744, 739,
	740, 745, 686, 690, 687, 688, 689, 701, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 784, 785,
	786, 787, 788, 789, 715, 719, 718, 716, 717, 713,
	714, 667, 188, 209, 350, 0, 431, 273, 556, 529,
	524, 195, 211, 775, 247, 776, 0, 0, 780, 0,
	0, 0, 782, 781, 0, 783, 749, 748, 0, 0,
	777, 778, 0, 779, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 790,
	791, 792, 793, 794, 795, 796, 797, 284, 513, 542,
	0, 359, 0, 0, 362, 266, 289, 304, 0, 528,
	478, 215, 443, 275, 238, 809, 0, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 0, 377, 357, 494, 495, 300, 493, 0, 679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 666, 0, 0, 0, 255, 671,
	0, 0, 0, 348, 252, 0, 0, 410, 0, 194,
	0, 463, 239, 358, 355, 501, 267, 258, 254, 237,
	301, 366, 408, 483, 402, 678, 352, 0, 0, 473,
	381, 0, 0, 0, 0, 0, 674, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 235, 309, 193,
	393, 474, 271, 0, 87, 0, 0, 798, 766, 767,
	802, 810, 811, 812, 813, 814, 803, 805, 0, 0,
	226, 804, 233, 706, 708, 707, 725, 726, 727, 728,
	729, 730, 731, 704, 807, 815, 816, 0, 250, 305,
	257, 249, 498, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 663,
	0, 677, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 661, 0, 0, 0, 0, 760, 0, 662,
	0, 0, 670, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 382, 242,
	0, 759, 0, 0, 538, 0, 0, 757, 0, 0,
	0, 0, 347, 0, 314, 189, 213, 0, 0, 392,
	438, 450, 0, 0, 0, 240, 0, 448, 406, 517,
	221, 269, 435, 412, 446, 419, 272, 0, 0, 447,
	353, 503, 429, 514, 539, 540, 248, 386, 526, 487,
	534, 555, 214, 245, 400, 480, 520, 470, 378, 499,
	500, 313, 469, 280, 192, 351, 545, 212, 456, 230,
	219, 505, 523, 274, 433, 201, 482, 512, 227, 460,
	0, 0, 557, 203, 510, 479, 374, 310, 311, 202,
	0, 434, 253, 278, 243, 395, 507, 508, 241, 558,
	712, 533, 208, 0, 532, 388, 502, 511, 375, 364,
	207, 509, 373, 363, 318, 720, 721, 265, 291, 426,
	356, 427, 292, 384, 383, 385, 196, 521, 0, 197,
	0, 475, 522, 559, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 349, 399, 425, 421, 430,
	0, 497, 515, 527, 537, 543, 544, 546, 547, 548,
	549, 550, 552, 551, 387, 295, 471, 317, 354, 0,
	0, 405, 449, 228, 519, 472, 770, 758, 683, 774,
	685, 771, 772, 680, 681, 684, 773, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 761, 669, 668, 0,
	676, 0, 702, 703, 705, 709, 710, 711, 722, 723,
	724, 732, 734, 735, 733, 736, 737, 738, 741, 742,
	743, 744, 739, 740, 745, 686, 690, 687, 688, 689,
	701, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 784, 785, 786, 787, 788, 789, 715, 719, 718,
	716, 717, 713, 714, 667, 188, 209, 350, 0, 431,
	273, 556, 529, 524, 195, 211, 775, 247, 776, 0,
	0, 780, 0, 0, 0, 782, 781, 0, 783, 749,
	748, 0, 0, 777, 778, 0, 779, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 302, 303, 306, 312, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 432,
	437, 451, 452, 453, 454, 455, 458, 459, 464, 465,
	466, 467, 468, 476, 477, 481, 504, 506, 518, 536,
	541, 457, 790, 791, 792, 793, 794, 795, 796, 797,
	284, 513, 542, 0, 359, 0, 0, 362, 266, 289,
	304, 0, 528, 478, 215, 443, 275, 238, 809, 0,
	200, 234, 218, 244, 259, 262, 308, 372, 380, 409,
	414, 281, 256, 232, 436, 229, 461, 484, 485, 486,
	488, 376, 251, 413, 0, 377, 357, 494, 495, 300,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 348, 252, 0, 0,
	410, 0, 194, 0, 463, 239, 358, 355, 501, 267,
	258, 254, 237, 301, 366, 408, 483, 402, 0, 352,
	0, 0, 473, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	235, 309, 193, 393, 474, 271, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 333, 342, 341, 322,
	323, 325, 327, 332, 339, 345, 0, 0, 0, 0,
	0, 250, 305, 257, 249, 498, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 382, 242, 0, 0, 0, 969, 538, 0, 0,
	0, 0, 0, 966, 967, 347, 927, 314, 189, 213,
	960, 964, 392, 438, 450, 0, 0, 0, 240, 0,
	448, 406, 517, 221, 269, 435, 412, 446, 419, 272,
	0, 0, 447, 353, 503, 429, 514, 539, 540, 248,
	386, 526, 487, 534, 555, 214, 245, 400, 480, 520,
	470, 378, 499, 500, 313, 469, 280, 192, 351, 545,
	212, 456, 230, 219, 505, 523, 274, 433, 201, 482,
	512, 227, 460, 0, 0, 557, 203, 510, 479, 374,
	310, 311, 202, 0, 434, 253, 278, 243, 395, 507,
	508, 241, 558, 216, 533, 208, 0, 532, 388, 502,
	511, 375, 364, 207, 509, 373, 363, 318, 337, 338,
	265, 291, 426, 356, 427, 292, 384, 383, 385, 196,
	521, 0, 197, 0, 475, 522, 559, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 349, 399,
	425, 421, 430, 0, 497, 515, 527, 537, 543, 544,
	546, 547, 548, 549, 550, 552, 551, 387, 295, 471,
	317, 354, 0, 0, 405, 449, 228, 519, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 365, 462,
	516, 319, 331, 334, 324, 343, 0, 344, 320, 321,
	326, 328, 329, 330, 335, 336, 340, 346, 236, 199,
	371, 379, 496, 296, 204, 205, 206, 489, 490, 491,
	492, 530, 531, 535, 439, 440, 441, 442, 277, 525,
	293, 445, 444, 315, 316, 360, 428, 0, 188, 209,
	350, 0, 431, 273, 556, 529, 524, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 302, 303, 306, 312,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 432, 437, 451, 452, 453, 454, 455, 458,
	459, 464, 465, 466, 467, 468, 476, 477, 481, 504,
	506, 518, 536, 541, 457, 285, 286, 423, 424, 298,
	299, 553, 554, 284, 513, 542, 0, 359, 0, 0,
	362, 266, 289, 304, 0, 528, 478, 215, 443, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 308,
	372, 380, 409, 414, 281, 256, 232, 436, 229, 461,
	484, 485, 486, 488, 376, 251, 413, 0, 0, 357,
	494, 495, 300, 377, 0, 0, 0, 78, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 0, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 87, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 333, 342, 341, 322, 323, 325,
	327, 332, 339, 345, 0, 0, 0, 0, 0, 250,
	305, 257, 249, 498, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 314, 189, 213, 0, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 0,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 216, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 337, 338, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 365, 462, 516, 319,
	331, 334, 324, 343, 0, 344, 320, 321, 326, 328,
	329, 330, 335, 336, 340, 346, 236, 199, 371, 379,
	496, 296, 204, 205, 206, 489, 490, 491, 492, 530,
	531, 535, 439, 440, 441, 442, 277, 525, 293, 445,
	444, 315, 316, 360, 428, 0, 188, 209, 350, 86,
	431, 273, 556, 529, 524, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 2047, 0, 0, 2046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 285, 286, 423, 424, 298, 299, 553,
	554, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 1508, 357, 494, 495,
	300, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 1510, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 0,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 0, 0,
	0, 624, 0, 0, 0, 1512, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 333, 342, 341,
	322, 323, 325, 327, 332, 339, 345, 0, 0, 0,
	0, 0, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 1293, 0,
	1294, 1295, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 216, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 337,
	338, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 365,
	462, 516, 319, 331, 334, 324, 343, 0, 344, 320,
	321, 326, 328, 329, 330, 335, 336, 340, 346, 236,
	199, 371, 379, 496, 296, 204, 205, 206, 489, 490,
	491, 492, 530, 531, 535, 439, 440, 441, 442, 277,
	525, 293, 445, 444, 315, 316, 360, 428, 0, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 285, 286, 423, 424,
	298, 299, 553, 554, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 377,
	357, 494, 495, 300, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	348, 252, 0, 0, 410, 0, 194, 0, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 0, 352, 0, 0, 473, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 235, 309, 193, 393, 474, 271,
	0, 0, 0, 0, 798, 0, 0, 1449, 1452, 0,
	0, 0, 0, 1448, 1451, 0, 0, 226, 1447, 233,
	333, 342, 341, 322, 323, 325, 327, 332, 339, 345,
	0, 0, 0, 0, 0, 250, 305, 257, 249, 498,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 382, 242, 0, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 314, 189, 213, 0, 0, 392, 438, 450, 0,
	0, 0, 240, 0, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 0, 0, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 216, 533, 208,
	0, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 337, 338, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 0, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 0, 0, 405, 449,
	228, 519, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 365, 462, 516, 319, 331, 334, 324, 343,
	0, 344, 320, 321, 326, 328, 329, 330, 335, 336,
	340, 346, 236, 199, 371, 379, 496, 296, 204, 205,
	206, 489, 490, 491, 492, 530, 531, 535, 439, 440,
	441, 442, 277, 525, 293, 445, 444, 315, 316, 360,
	428, 0, 188, 209, 350, 0, 431, 273, 556, 529,
	524, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 285,
	286, 423, 424, 298, 299, 553, 554, 284, 513, 542,
	0, 359, 0, 0, 362, 266, 289, 304, 0, 528,
	478, 215, 443, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 0, 0, 357, 494, 495, 300, 377, 0, 0,
	0, 78, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 348, 252,
	0, 0, 410, 0, 194, 0, 463, 239, 358, 355,
	501, 267, 258, 254, 237, 301, 366, 408, 483, 402,
	0, 352, 0, 0, 473, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 235, 309, 193, 393, 474, 271, 0, 87,
	0, 1489, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 333, 342,
	341, 322, 323, 325, 327, 332, 339, 345, 0, 0,
	0, 0, 0, 250, 305, 257, 249, 498, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 382, 242, 0, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 314,
	189, 213, 0, 0, 392, 438, 450, 0, 0, 0,
	240, 0, 448, 406, 517, 221, 269, 435, 412, 446,
	419, 272, 0, 0, 447, 353, 503, 429, 514, 539,
	540, 248, 386, 526, 487, 534, 555, 214, 245, 400,
	480, 520, 470, 378, 499, 500, 313, 469, 280, 192,
	351, 545, 212, 456, 230, 219, 505, 523, 274, 433,
	201, 482, 512, 227, 460, 0, 0, 557, 203, 510,
	479, 374, 310, 311, 202, 0, 434, 253, 278, 243,
	395, 507, 508, 241, 558, 216, 533, 208, 0, 532,
	388, 502, 511, 375, 364, 207, 509, 373, 363, 318,
	337, 338, 265, 291, 426, 356, 427, 292, 384, 383,
	385, 196, 521, 0, 197, 0, 475, 522, 559, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	349, 399, 425, 421, 430, 0, 497, 515, 527, 537,
	543, 544, 546, 547, 548, 549, 550, 552, 551, 387,
	295, 471, 317, 354, 0, 0, 405, 449, 228, 519,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	365, 462, 516, 319, 331, 334, 324, 343, 0, 344,
	320, 321, 326, 328, 329, 330, 335, 336, 340, 346,
	236, 199, 371, 379, 496, 296, 204, 205, 206, 489,
	490, 491, 492, 530, 531, 535, 439, 440, 441, 442,
	277, 525, 293, 445, 444, 315, 316, 360, 428, 0,
	188, 209, 350, 86, 431, 273, 556, 529, 524, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 302, 303,
	306, 312, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 432, 437, 451, 452, 453, 454,
	455, 458, 459, 464, 465, 466, 467, 468, 476, 477,
	481, 504, 506, 518, 536, 541, 457, 285, 286, 423,
	424, 298, 299, 553, 554, 284, 513, 542, 0, 359,
	0, 0, 362, 266, 289, 304, 0, 528, 478, 215,
	443, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 308, 372, 380, 409, 414, 281, 256, 232, 436,
	229, 461, 484, 485, 486, 488, 376, 251, 413, 0,
	377, 357, 494, 495, 300, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 348, 252, 0, 0, 410, 0, 194, 0, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 0, 352, 0, 0, 473, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 235, 309, 193, 393, 474,
	271, 0, 87, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 333, 342, 341, 322, 323, 325, 327, 332, 339,
	345, 0, 0, 0, 0, 0, 250, 305, 257, 249,
	498, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 382, 242, 0, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 314, 189, 213, 0, 0, 392, 438, 450,
	0, 0, 0, 240, 0, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 0, 0, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 216, 533,
	208, 0, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 337, 338, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 0, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 0, 0, 405,
	449, 228, 519, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 365, 462, 516, 319, 331, 334, 324,
	343, 0, 344, 320, 321, 326, 328, 329, 330, 335,
	336, 340, 346, 236, 199, 371, 379, 496, 296, 204,
	205, 206, 489, 490, 491, 492, 530, 531, 535, 439,
	440, 441, 442, 277, 525, 293, 445, 444, 315, 316,
	360, 428, 0, 188, 209, 350, 0, 431, 273, 556,
	529, 524, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 2047, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	285, 286, 423, 424, 298, 299, 553, 554, 284, 513,
	542, 0, 359, 0, 0, 362, 266, 289, 304, 0,
	528, 478, 215, 443, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 0, 377, 357, 494, 495, 300, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 1998, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 0, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 0, 0, 0, 186, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 333, 342, 341, 322, 323, 325,
	327, 332, 339, 345, 0, 0, 0, 0, 0, 250,
	305, 257, 249, 498, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 314, 189, 213, 0, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 1996,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 216, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 337, 338, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 365, 462, 516, 319,
	331, 334, 324, 343, 0, 344, 320, 321, 326, 328,
	329, 330, 335, 336, 340, 346, 236, 199, 371, 379,
	496, 296, 204, 205, 206, 489, 490, 491, 492, 530,
	531, 535, 439, 440, 441, 442, 277, 525, 293, 445,
	444, 315, 316, 360, 428, 0, 188, 209, 350, 0,
	431, 273, 556, 529, 524, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 285, 286, 423, 424, 298, 299, 553,
	554, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 377, 357, 494, 495,
	300, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 0,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 333, 342, 341,
	322, 323, 325, 327, 332, 339, 345, 0, 0, 0,
	0, 0, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 921, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 347, 927, 314, 189,
	213, 925, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 216, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 337,
	338, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 365,
	462, 516, 319, 331, 334, 324, 343, 0, 344, 320,
	321, 326, 328, 329, 330, 335, 336, 340, 346, 236,
	199, 371, 379, 496, 296, 204, 205, 206, 489, 490,
	491, 492, 530, 531, 535, 439, 440, 441, 442, 277,
	525, 293, 445, 444, 315, 316, 360, 428, 0, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 285, 286, 423, 424,
	298, 299, 553, 554, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 377,
	357, 494, 495, 300, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	1998, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	348, 252, 0, 0, 410, 0, 194, 0, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 0, 352, 0, 0, 473, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 235, 309, 193, 393, 474, 271,
	0, 0, 0, 0, 186, 0, 0, 0, 1690, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	333, 342, 341, 322, 323, 325, 327, 332, 339, 345,
	0, 0, 0, 0, 0, 250, 305, 257, 249, 498,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 382, 242, 0, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 314, 189, 213, 0, 0, 392, 438, 450, 0,
	0, 0, 240, 0, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 0, 0, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 216, 533, 208,
	0, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 337, 338, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 0, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 0, 0, 405, 449,
	228, 519, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 365, 462, 516, 319, 331, 334, 324, 343,
	0, 344, 320, 321, 326, 328, 329, 330, 335, 336,
	340, 346, 236, 199, 371, 379, 496, 296, 204, 205,
	206, 489, 490, 491, 492, 530, 531, 535, 439, 440,
	441, 442, 277, 525, 293, 445, 444, 315, 316, 360,
	428, 0, 188, 209, 350, 0, 431, 273, 556, 529,
	524, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 285,
	286, 423, 424, 298, 299, 553, 554, 284, 513, 542,
	0, 359, 0, 0, 362, 266, 289, 304, 0, 528,
	478, 215, 443, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 0, 377, 357, 494, 495, 300, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 348, 252, 0, 0, 410, 0, 194,
	0, 463, 239, 358, 355, 501, 267, 258, 254, 237,
	301, 366, 408, 483, 402, 0, 352, 0, 0, 473,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 235, 309, 193,
	393, 474, 271, 0, 0, 0, 1489, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 333, 342, 341, 322, 323, 325, 327,
	332, 339, 345, 0, 0, 0, 0, 0, 250, 305,
	257, 249, 498, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 382, 242,
	0, 0, 0, 0, 538, 0, 0, 0, 3263, 0,
	0, 0, 347, 0, 314, 189, 213, 0, 0, 392,
	438, 450, 0, 0, 0, 240, 0, 448, 406, 517,
	221, 269, 435, 412, 446, 419, 272, 0, 0, 447,
	353, 503, 429, 514, 539, 540, 248, 386, 526, 487,
	534, 555, 214, 245, 400, 480, 520, 470, 378, 499,
	500, 313, 469, 280, 192, 351, 545, 212, 456, 230,
	219, 505, 523, 274, 433, 201, 482, 512, 227, 460,
	0, 0, 557, 203, 510, 479, 374, 310, 311, 202,
	0, 434, 253, 278, 243, 395, 507, 508, 241, 558,
	216, 533, 208, 0, 532, 388, 502, 511, 375, 364,
	207, 509, 373, 363, 318, 337, 338, 265, 291, 426,
	356, 427, 292, 384, 383, 385, 196, 521, 0, 197,
	0, 475, 522, 559, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 349, 399, 425, 421, 430,
	0, 497, 515, 527, 537, 543, 544, 546, 547, 548,
	549, 550, 552, 551, 387, 295, 471, 317, 354, 0,
	0, 405, 449, 228, 519, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 578, 365, 462, 516, 319, 331,
	334, 324, 343, 0, 344, 320, 321, 326, 328, 329,
	330, 335, 336, 340, 346, 236, 199, 371, 379, 496,
	296, 204, 205, 206, 489, 490, 491, 492, 530, 531,
	535, 439, 440, 441, 442, 277, 525, 293, 445, 444,
	315, 316, 360, 428, 0, 188, 209, 350, 0, 431,
	273, 556, 529, 524, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 302, 303, 306, 312, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 432,
	437, 451, 452, 453, 454, 455, 458, 459, 464, 465,
	466, 467, 468, 476, 477, 481, 504, 506, 518, 536,
	541, 457, 285, 286, 423, 424, 298, 299, 553, 554,
	284, 513, 542, 0, 359, 0, 0, 362, 266, 289,
	304, 0, 528, 478, 215, 443, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 308, 372, 380, 409,
	414, 281, 256, 232, 436, 229, 461, 484, 485, 486,
	488, 376, 251, 413, 0, 377, 357, 494, 495, 300,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 348, 252, 0, 0,
	410, 0, 194, 0, 463, 239, 358, 355, 501, 267,
	258, 254, 237, 301, 366, 408, 483, 402, 0, 352,
	0, 0, 473, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	235, 309, 193, 393, 474, 271, 0, 0, 0, 0,
	624, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 333, 342, 341, 322,
	323, 325, 327, 332, 339, 345, 0, 0, 0, 0,
	0, 250, 305, 257, 249, 498, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 382, 242, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 314, 189, 213,
	0, 0, 392, 438, 450, 0, 0, 0, 240, 0,
	448, 406, 517, 221, 269, 435, 412, 446, 419, 272,
	0, 0, 447, 353, 503, 429, 514, 539, 540, 248,
	386, 526, 487, 534, 555, 214, 245, 400, 480, 520,
	470, 378, 499, 500, 313, 469, 280, 192, 351, 545,
	212, 456, 230, 219, 505, 523, 274, 433, 201, 482,
	512, 227, 460, 0, 0, 557, 203, 510, 479, 374,
	310, 311, 202, 0, 434, 253, 278, 243, 395, 507,
	508, 241, 558, 216, 533, 208, 0, 532, 388, 502,
	511, 375, 364, 207, 509, 373, 363, 318, 337, 338,
	265, 291, 426, 356, 427, 292, 384, 383, 385, 196,
	521, 0, 197, 0, 475, 522, 559, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 349, 399,
	425, 421, 430, 0, 497, 515, 527, 537, 543, 544,
	546, 547, 548, 549, 550, 552, 551, 387, 295, 471,
	317, 354, 0, 0, 405, 449, 228, 519, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 365, 462,
	516, 319, 331, 334, 324, 343, 0, 344, 320, 321,
	326, 328, 329, 330, 335, 336, 340, 346, 236, 199,
	371, 379, 496, 296, 204, 205, 206, 489, 490, 491,
	492, 530, 531, 535, 439, 440, 441, 442, 277, 525,
	293, 445, 444, 315, 316, 360, 428, 0, 188, 209,
	350, 0, 431, 273, 556, 529, 524, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 302, 303, 306, 312,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 432, 437, 451, 452, 453, 454, 455, 458,
	459, 464, 465, 466, 467, 468, 476, 477, 481, 504,
	506, 518, 536, 541, 457, 285, 286, 423, 424, 298,
	299, 553, 554, 284, 513, 542, 0, 359, 0, 0,
	362, 266, 289, 304, 0, 528, 478, 215, 443, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 308,
	372, 380, 409, 414, 281, 256, 232, 436, 229, 461,
	484, 485, 486, 488, 376, 251, 413, 0, 377, 357,
	494, 495, 300, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 348,
	252, 0, 0, 410, 0, 194, 0, 463, 239, 358,
	355, 501, 267, 258, 254, 237, 301, 366, 408, 483,
	402, 0, 352, 0, 0, 473, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 235, 309, 193, 393, 474, 271, 0,
	0, 0, 0, 624, 0, 0, 0, 2388, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 333,
	342, 341, 322, 323, 325, 327, 332, 339, 345, 0,
	0, 0, 0, 0, 250, 305, 257, 249, 498, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 382, 242, 0, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	314, 189, 213, 0, 0, 392, 438, 450, 0, 0,
	0, 240, 0, 448, 406, 517, 221, 269, 435, 412,
	446, 419, 272, 0, 0, 447, 353, 503, 429, 514,
	539, 540, 248, 386, 526, 487, 534, 555, 214, 245,
	400, 480, 520, 470, 378, 499, 500, 313, 469, 280,
	192, 351, 545, 212, 456, 230, 219, 505, 523, 274,
	433, 201, 482, 512, 227, 460, 0, 0, 557, 203,
	510, 479, 374, 310, 311, 202, 0, 434, 253, 278,
	243, 395, 507, 508, 241, 558, 216, 533, 208, 0,
	532, 388, 502, 511, 375, 364, 207, 509, 373, 363,
	318, 337, 338, 265, 291, 426, 356, 427, 292, 384,
	383, 385, 196, 521, 0, 197, 0, 475, 522, 559,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 349, 399, 425, 421, 430, 0, 497, 515, 527,
	537, 543, 544, 546, 547, 548, 549, 550, 552, 551,
	387, 295, 471, 317, 354, 0, 0, 405, 449, 228,
	519, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 365, 462, 516, 319, 331, 334, 324, 343, 0,
	344, 320, 321, 326, 328, 329, 330, 335, 336, 340,
	346, 236, 199, 371, 379, 496, 296, 204, 205, 206,
	489, 490, 491, 492, 530, 531, 535, 439, 440, 441,
	442, 277, 525, 293, 445, 444, 315, 316, 360, 428,
	0, 188, 209, 350, 0, 431, 273, 556, 529, 524,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 302,
	303, 306, 312, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 432, 437, 451, 452, 453,
	454, 455, 458, 459, 464, 465, 466, 467, 468, 476,
	477, 481, 504, 506, 518, 536, 541, 457, 285, 286,
	423, 424, 298, 299, 553, 554, 284, 513, 542, 0,
	359, 0, 0, 362, 266, 289, 304, 0, 528, 478,
	215, 443, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 308, 372, 380, 409, 414, 281, 256, 232,
	436, 229, 461, 484, 485, 486, 488, 376, 251, 413,
	0, 377, 357, 494, 495, 300, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 348, 252, 0, 0, 410, 0, 194, 0,
	463, 239, 358, 355, 501, 267, 258, 254, 237, 301,
	366, 408, 483, 402, 0, 352, 0, 0, 473, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 235, 309, 193, 393,
	474, 271, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 0, 2373, 0, 0, 0, 2374, 0, 0, 226,
	0, 233, 333, 342, 341, 322, 323, 325, 327, 332,
	339, 345, 0, 0, 0, 0, 0, 250, 305, 257,
	249, 498, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 382, 242, 0,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 314, 189, 213, 0, 0, 392, 438,
	450, 0, 0, 0, 240, 0, 448, 406, 517, 221,
	269, 435, 412, 446, 419, 272, 0, 0, 447, 353,
	503, 429, 514, 539, 540, 248, 386, 526, 487, 534,
	555, 214, 245, 400, 480, 520, 470, 378, 499, 500,
	313, 469, 280, 192, 351, 545, 212, 456, 230, 219,
	505, 523, 274, 433, 201, 482, 512, 227, 460, 0,
	0, 557, 203, 510, 479, 374, 310, 311, 202, 0,
	434, 253, 278, 243, 395, 507, 508, 241, 558, 216,
	533, 208, 0, 532, 388, 502, 511, 375, 364, 207,
	509, 373, 363, 318, 337, 338, 265, 291, 426, 356,
	427, 292, 384, 383, 385, 196, 521, 0, 197, 0,
	475, 522, 559, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 349, 399, 425, 421, 430, 0,
	497, 515, 527, 537, 543, 544, 546, 547, 548, 549,
	550, 552, 551, 387, 295, 471, 317, 354, 0, 0,
	405, 449, 228, 519, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 365, 462, 516, 319, 331, 334,
	324, 343, 0, 344, 320, 321, 326, 328, 329, 330,
	335, 336, 340, 346, 236, 199, 371, 379, 496, 296,
	204, 205, 206, 489, 490, 491, 492, 530, 531, 535,
	439, 440, 441, 442, 277, 525, 293, 445, 444, 315,
	316, 360, 428, 0, 188, 209, 350, 0, 431, 273,
	556, 529, 524, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 302, 303, 306, 312, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 432, 437,
	451, 452, 453, 454, 455, 458, 459, 464, 465, 466,
	467, 468, 476, 477, 481, 504, 506, 518, 536, 541,
	457, 285, 286, 423, 424, 298, 299, 553, 554, 284,
	513, 542, 0, 359, 0, 0, 362, 266, 289, 304,
	0, 528, 478, 215, 443, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 308, 372, 380, 409, 414,
	281, 256, 232, 436, 229, 461, 484, 485, 486, 488,
	376, 251, 413, 0, 377, 357, 494, 495, 300, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 1532, 0, 0, 0, 348, 252, 0, 0, 410,
	0, 194, 0, 463, 239, 358, 355, 501, 267, 258,
	254, 237, 301, 366, 408, 483, 402, 0, 352, 0,
	0, 473, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 235,
	309, 193, 393, 474, 271, 0, 0, 0, 0, 624,
	0, 0, 0, 1531, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 333, 342, 341, 322, 323,
	325, 327, 332, 339, 345, 0, 0, 0, 0, 0,
	250, 305, 257, 249, 498, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	382, 242, 0, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 314, 189, 213, 0,
	0, 392, 438, 450, 0, 0, 0, 240, 0, 448,
	406, 517, 221, 269, 435, 412, 446, 419, 272, 0,
	0, 447, 353, 503, 429, 514, 539, 540, 248, 386,
	526, 487, 534, 555, 214, 245, 400, 480, 520, 470,
	378, 499, 500, 313, 469, 280, 192, 351, 545, 212,
	456, 230, 219, 505, 523, 274, 433, 201, 482, 512,
	227, 460, 0, 0, 557, 203, 510, 479, 374, 310,
	311, 202, 0, 434, 253, 278, 243, 395, 507, 508,
	241, 558, 216, 533, 208, 0, 532, 388, 502, 511,
	375, 364, 207, 509, 373, 363, 318, 337, 338, 265,
	291, 426, 356, 427, 292, 384, 383, 385, 196, 521,
	0, 197, 0, 475, 522, 559, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 349, 399, 425,
	421, 430, 0, 497, 515, 527, 537, 543, 544, 546,
	547, 548, 549, 550, 552, 551, 387, 295, 471, 317,
	354, 0, 0, 405, 449, 228, 519, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 365, 462, 516,
	319, 331, 334, 324, 343, 0, 344, 320, 321, 326,
	328, 329, 330, 335, 336, 340, 346, 236, 199, 371,
	379, 496, 296, 204, 205, 206, 489, 490, 491, 492,
	530, 531, 535, 439, 440, 441, 442, 277, 525, 293,
	445, 444, 315, 316, 360, 428, 0, 188, 209, 350,
	0, 431, 273, 556, 529, 524, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 302, 303, 306, 312, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 432, 437, 451, 452, 453, 454, 455, 458, 459,
	464, 465, 466, 467, 468, 476, 477, 481, 504, 506,
	518, 536, 541, 457, 285, 286, 423, 424, 298, 299,
	553, 554, 284, 513, 542, 0, 359, 0, 0, 362,
	266, 289, 304, 0, 528, 478, 215, 443, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 308, 372,
	380, 409, 414, 281, 256, 232, 436, 229, 461, 484,
	485, 486, 488, 376, 251, 413, 0, 377, 357, 494,
	495, 300, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 348, 252,
	0, 0, 410, 0, 194, 0, 463, 239, 358, 355,
	501, 267, 258, 254, 237, 301, 366, 408, 483, 402,
	0, 352, 0, 0, 473, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 235, 309, 193, 393, 474, 271, 0, 0,
	0, 0, 626, 627, 628, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 333, 342,
	341, 322, 323, 325, 327, 332, 339, 345, 0, 0,
	0, 0, 0, 250, 305, 257, 249, 498, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 382, 242, 0, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 314,
	189, 213, 0, 0, 392, 438, 450, 0, 0, 0,
	240, 0, 448, 406, 517, 221, 269, 435, 412, 446,
	419, 272, 0, 0, 447, 353, 503, 429, 514, 539,
	540, 248, 386, 526, 487, 534, 555, 214, 245, 400,
	480, 520, 470, 378, 499, 500, 313, 469, 280, 192,
	351, 545, 212, 456, 230, 219, 505, 523, 274, 433,
	201, 482, 512, 227, 460, 0, 0, 557, 203, 510,
	479, 374, 310, 311, 202, 0, 434, 253, 278, 243,
	395, 507, 508, 241, 558, 216, 533, 208, 0, 532,
	388, 502, 511, 375, 364, 207, 509, 373, 363, 318,
	337, 338, 265, 291, 426, 356, 427, 292, 384, 383,
	385, 196, 521, 0, 197, 0, 475, 522, 559, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	349, 399, 425, 421, 430, 0, 497, 515, 527, 537,
	543, 544, 546, 547, 548, 549, 550, 552, 551, 387,
	295, 471, 317, 354, 0, 0, 405, 449, 228, 519,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	365, 462, 516, 319, 331, 334, 324, 343, 0, 344,
	320, 321, 326, 328, 329, 330, 335, 336, 340, 346,
	236, 199, 371, 379, 496, 296, 204, 205, 206, 489,
	490, 491, 492, 530, 531, 535, 439, 440, 441, 442,
	277, 525, 293, 445, 444, 315, 316, 360, 428, 0,
	188, 209, 350, 0, 431, 273, 556, 529, 524, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 302, 303,
	306, 312, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 432, 437, 451, 452, 453, 454,
	455, 458, 459, 464, 465, 466, 467, 468, 476, 477,
	481, 504, 506, 518, 536, 541, 457, 285, 286, 423,
	424, 298, 299, 553, 554, 284, 513, 542, 0, 359,
	0, 0, 362, 266, 289, 304, 0, 528, 478, 215,
	443, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 308, 372, 380, 409, 414, 281, 256, 232, 436,
	229, 461, 484, 485, 486, 488, 376, 251, 413, 0,
	377, 357, 494, 495, 300, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 348, 252, 0, 0, 410, 0, 194, 0, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 0, 352, 0, 0, 473, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 235, 309, 193, 393, 474,
	271, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 333, 342, 341, 322, 323, 325, 327, 332, 339,
	345, 0, 0, 0, 0, 0, 250, 305, 257, 249,
	498, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 382, 242, 0, 0,
	0, 0, 538, 0, 0, 0, 3392, 0, 0, 0,
	347, 0, 314, 189, 213, 0, 0, 392, 438, 450,
	0, 0, 0, 240, 0, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 0, 0, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 216, 533,
	208, 0, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 337, 338, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 0, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 0, 0, 405,
	449, 228, 519, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 365, 462, 516, 319, 331, 334, 324,
	343, 0, 344, 320, 321, 326, 328, 329, 330, 335,
	336, 340, 346, 236, 199, 371, 379, 496, 296, 204,
	205, 206, 489, 490, 491, 492, 530, 531, 535, 439,
	440, 441, 442, 277, 525, 293, 445, 444, 315, 316,
	360, 428, 0, 188, 209, 350, 0, 431, 273, 556,
	529, 524, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	285, 286, 423, 424, 298, 299, 553, 554, 284, 513,
	542, 0, 359, 0, 0, 362, 266, 289, 304, 0,
	528, 478, 215, 443, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 0, 377, 357, 494, 495, 300, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 0, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 0, 0, 0, 186, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 333, 342, 341, 322, 323, 325,
	327, 332, 339, 345, 0, 0, 0, 0, 0, 250,
	305, 257, 249, 498, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 314, 189, 213, 0, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 0,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 216, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 337, 338, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 365, 462, 516, 319,
	331, 334, 324, 343, 0, 344, 320, 321, 326, 328,
	329, 330, 335, 336, 340, 346, 236, 199, 371, 379,
	496, 296, 204, 205, 206, 489, 490, 491, 492, 530,
	531, 535, 439, 440, 441, 442, 277, 525, 293, 445,
	444, 315, 316, 360, 428, 0, 188, 209, 350, 0,
	431, 273, 556, 529, 524, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 285, 286, 423, 424, 298, 299, 553,
	554, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 377, 357, 494, 495,
	300, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 0,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 333, 342, 341,
	322, 323, 325, 327, 332, 339, 345, 0, 0, 0,
	0, 0, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 0, 0, 0, 538, 0,
	0, 0, 3263, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 216, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 337,
	338, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 365,
	462, 516, 319, 331, 334, 324, 343, 0, 344, 320,
	321, 326, 328, 329, 330, 335, 336, 340, 346, 236,
	199, 371, 379, 496, 296, 204, 205, 206, 489, 490,
	491, 492, 530, 531, 535, 439, 440, 441, 442, 277,
	525, 293, 445, 444, 315, 316, 360, 428, 0, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 285, 286, 423, 424,
	298, 299, 553, 554, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 377,
	357, 494, 495, 300, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	348, 252, 0, 0, 410, 0, 194, 0, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 0, 352, 0, 0, 473, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 235, 309, 193, 393, 474, 271,
	0, 87, 0, 0, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	333, 342, 341, 322, 323, 325, 327, 332, 339, 345,
	0, 0, 0, 0, 0, 250, 305, 257, 249, 498,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 382, 242, 0, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 314, 189, 213, 0, 0, 392, 438, 450, 0,
	0, 0, 240, 0, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 0, 0, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 216, 533, 208,
	0, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 337, 338, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 0, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 0, 0, 405, 449,
	228, 519, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 365, 462, 516, 319, 331, 334, 324, 343,
	0, 344, 320, 321, 326, 328, 329, 330, 335, 336,
	340, 346, 236, 199, 371, 379, 496, 296, 204, 205,
	206, 489, 490, 491, 492, 530, 531, 535, 439, 440,
	441, 442, 277, 525, 293, 445, 444, 315, 316, 360,
	428, 0, 188, 209, 350, 0, 431, 273, 556, 529,
	524, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 285,
	286, 423, 424, 298, 299, 553, 554, 284, 513, 542,
	0, 359, 0, 0, 362, 266, 289, 304, 0, 528,
	478, 215, 443, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 0, 377, 357, 494, 495, 300, 493, 0, 0,
	0, 0, 2048, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 348, 252, 0, 0, 410, 0, 194,
	0, 463, 239, 358, 355, 501, 267, 258, 254, 237,
	301, 366, 408, 483, 402, 0, 352, 0, 0, 473,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 235, 309, 193,
	393, 474, 271, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 333, 342, 341, 322, 323, 325, 327,
	332, 339, 345, 0, 0, 0, 0, 0, 250, 305,
	257, 249, 498, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 382, 242,
	0, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 314, 189, 213, 0, 0, 392,
	438, 450, 0, 0, 0, 240, 0, 448, 406, 517,
	221, 269, 435, 412, 446, 419, 272, 0, 0, 447,
	353, 503, 429, 514, 539, 540, 248, 386, 526, 487,
	534, 555, 214, 245, 400, 480, 520, 470, 378, 499,
	500, 313, 469, 280, 192, 351, 545, 212, 456, 230,
	219, 505, 523, 274, 433, 201, 482, 512, 227, 460,
	0, 0, 557, 203, 510, 479, 374, 310, 311, 202,
	0, 434, 253, 278, 243, 395, 507, 508, 241, 558,
	216, 533, 208, 0, 532, 388, 502, 511, 375, 364,
	207, 509, 373, 363, 318, 337, 338, 265, 291, 426,
	356, 427, 292, 384, 383, 385, 196, 521, 0, 197,
	0, 475, 522, 559, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 349, 399, 425, 421, 430,
	0, 497, 515, 527, 537, 543, 544, 546, 547, 548,
	549, 550, 552, 551, 387, 295, 471, 317, 354, 0,
	0, 405, 449, 228, 519, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 578, 365, 462, 516, 319, 331,
	334, 324, 343, 0, 344, 320, 321, 326, 328, 329,
	330, 335, 336, 340, 346, 236, 199, 371, 379, 496,
	296, 204, 205, 206, 489, 490, 491, 492, 530, 531,
	535, 439, 440, 441, 442, 277, 525, 293, 445, 444,
	315, 316, 360, 428, 0, 188, 209, 350, 0, 431,
	273, 556, 529, 524, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 302, 303, 306, 312, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 432,
	437, 451, 452, 453, 454, 455, 458, 459, 464, 465,
	466, 467, 468, 476, 477, 481, 504, 506, 518, 536,
	541, 457, 285, 286, 423, 424, 298, 299, 553, 554,
	284, 513, 542, 0, 359, 0, 0, 362, 266, 289,
	304, 0, 528, 478, 215, 443, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 308, 372, 380, 409,
	414, 281, 256, 232, 436, 229, 461, 484, 485, 486,
	488, 376, 251, 413, 0, 377, 357, 494, 495, 300,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 348, 252, 0, 0,
	410, 0, 194, 0, 463, 239, 358, 355, 501, 267,
	258, 254, 237, 301, 366, 408, 483, 402, 0, 352,
	0, 0, 473, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	235, 309, 193, 393, 474, 271, 0, 0, 0, 0,
	624, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 333, 342, 341, 322,
	323, 325, 327, 332, 339, 345, 0, 0, 0, 0,
	0, 250, 305, 257, 249, 498, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 382, 242, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 314, 189, 213,
	0, 0, 392, 438, 450, 0, 0, 0, 240, 0,
	448, 406, 517, 221, 269, 435, 412, 446, 419, 272,
	0, 0, 447, 353, 503, 429, 514, 539, 540, 248,
	386, 526, 487, 534, 555, 214, 245, 400, 480, 520,
	470, 378, 499, 500, 313, 469, 280, 192, 351, 545,
	212, 456, 230, 219, 505, 523, 274, 433, 201, 482,
	512, 227, 460, 0, 0, 557, 203, 510, 479, 374,
	310, 311, 202, 0, 434, 253, 278, 243, 395, 507,
	508, 241, 558, 216, 533, 208, 0, 532, 388, 502,
	511, 375, 364, 207, 509, 373, 363, 318, 337, 338,
	265, 291, 426, 356, 427, 292, 384, 383, 385, 196,
	521, 0, 197, 0, 475, 522, 559, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 349, 399,
	425, 421, 430, 0, 497, 515, 527, 537, 543, 544,
	546, 547, 548, 549, 550, 552, 551, 387, 295, 471,
	317, 354, 0, 0, 405, 449, 228, 519, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 365, 462,
	516, 319, 331, 334, 324, 343, 0, 344, 320, 321,
	326, 328, 329, 330, 335, 336, 340, 346, 236, 199,
	371, 379, 496, 296, 204, 205, 206, 489, 490, 491,
	492, 530, 531, 535, 439, 440, 441, 442, 277, 525,
	293, 445, 444, 315, 316, 360, 428, 0, 188, 209,
	350, 0, 431, 273, 556, 529, 524, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 302, 303, 306, 312,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 432, 437, 451, 452, 453, 454, 455, 458,
	459, 464, 465, 466, 467, 468, 476, 477, 481, 504,
	506, 518, 536, 541, 457, 285, 286, 423, 424, 298,
	299, 553, 554, 284, 513, 542, 0, 359, 0, 0,
	362, 266, 289, 304, 0, 528, 478, 215, 443, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 308,
	372, 380, 409, 414, 281, 256, 232, 436, 229, 461,
	484, 485, 486, 488, 376, 251, 413, 0, 377, 357,
	494, 495, 300, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 348,
	252, 0, 0, 410, 0, 194, 0, 463, 239, 358,
	355, 501, 267, 258, 254, 237, 301, 366, 408, 483,
	402, 0, 352, 0, 0, 473, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 235, 309, 193, 393, 474, 271, 0,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 333,
	342, 341, 322, 323, 325, 327, 332, 339, 345, 0,
	0, 0, 0, 0, 250, 305, 257, 249, 498, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 382, 242, 0, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	314, 189, 213, 0, 0, 392, 438, 450, 0, 0,
	0, 240, 0, 448, 406, 517, 221, 269, 435, 412,
	446, 419, 272, 0, 0, 447, 353, 503, 429, 514,
	539, 540, 248, 386, 526, 487, 534, 555, 214, 245,
	400, 480, 520, 470, 378, 499, 500, 313, 469, 280,
	192, 351, 545, 212, 456, 230, 219, 505, 523, 274,
	433, 201, 482, 512, 227, 460, 0, 0, 557, 203,
	510, 479, 374, 310, 311, 202, 0, 434, 253, 278,
	243, 395, 507, 508, 241, 558, 216, 533, 208, 0,
	532, 388, 502, 511, 375, 364, 207, 509, 373, 363,
	318, 337, 338, 265, 291, 426, 356, 427, 292, 384,
	383, 385, 196, 521, 0, 197, 0, 475, 522, 559,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 349, 399, 425, 421, 430, 0, 497, 515, 527,
	537, 543, 544, 546, 547, 548, 549, 550, 552, 551,
	387, 295, 471, 317, 354, 0, 0, 405, 449, 228,
	519, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 365, 462, 516, 319, 331, 334, 324, 343, 0,
	344, 320, 321, 326, 328, 329, 330, 335, 336, 340,
	346, 236, 199, 371, 379, 496, 296, 204, 205, 206,
	489, 490, 491, 492, 530, 531, 535, 439, 440, 441,
	442, 277, 525, 293, 445, 444, 315, 316, 360, 428,
	0, 188, 209, 350, 0, 431, 273, 556, 529, 524,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 302,
	303, 306, 312, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 432, 437, 451, 452, 453,
	454, 455, 458, 459, 464, 465, 466, 467, 468, 476,
	477, 481, 504, 506, 518, 536, 541, 457, 285, 286,
	423, 424, 298, 299, 553, 554, 284, 513, 542, 0,
	359, 0, 0, 362, 266, 289, 304, 0, 528, 478,
	215, 443, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 308, 372, 380, 409, 414, 281, 256, 232,
	436, 229, 461, 484, 485, 486, 488, 376, 251, 413,
	0, 377, 357, 494, 495, 300, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 348, 252, 0, 0, 410, 0, 194, 0,
	463, 239, 358, 355, 501, 267, 258, 254, 237, 301,
	366, 408, 483, 402, 0, 352, 0, 0, 473, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 235, 309, 193, 393,
	474, 271, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 333, 342, 341, 322, 323, 325, 327, 332,
	339, 345, 0, 0, 0, 0, 0, 250, 305, 257,
	249, 498, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 382, 242, 0,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 314, 189, 213, 0, 0, 392, 438,
	450, 0, 0, 0, 240, 0, 448, 406, 517, 221,
	269, 435, 412, 446, 419, 272, 0, 0, 447, 353,
	503, 429, 514, 539, 540, 248, 386, 526, 487, 534,
	555, 214, 245, 400, 480, 520, 470, 378, 499, 500,
	313, 469, 280, 192, 351, 545, 212, 456, 230, 219,
	505, 523, 274, 433, 201, 482, 512, 227, 460, 0,
	0, 557, 203, 510, 479, 374, 310, 311, 202, 0,
	434, 253, 278, 243, 395, 507, 508, 241, 558, 216,
	533, 208, 0, 532, 388, 502, 511, 375, 364, 207,
	509, 373, 363, 318, 337, 338, 265, 291, 426, 356,
	427, 292, 384, 383, 385, 196, 521, 0, 197, 0,
	475, 522, 559, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 349, 399, 425, 421, 430, 0,
	497, 515, 527, 537, 543, 544, 546, 547, 548, 549,
	550, 552, 551, 387, 295, 471, 317, 354, 0, 0,
	405, 449, 228, 519, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 365, 462, 516, 319, 331, 334,
	324, 343, 0, 344, 320, 321, 326, 328, 329, 330,
	335, 336, 340, 346, 236, 199, 371, 379, 496, 296,
	204, 205, 206, 489, 490, 491, 492, 530, 531, 535,
	439, 440, 441, 442, 277, 525, 293, 445, 444, 315,
	316, 360, 428, 0, 188, 209, 350, 1788, 431, 273,
	556, 529, 524, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 302, 303, 306, 312, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 432, 437,
	451, 452, 453, 454, 455, 458, 459, 464, 465, 466,
	467, 468, 476, 477, 481, 504, 506, 518, 536, 541,
	457, 285, 286, 423, 424, 298, 299, 553, 554, 284,
	513, 542, 0, 359, 0, 0, 362, 266, 289, 304,
	0, 528, 478, 215, 443, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 308, 372, 380, 409, 414,
	281, 256, 232, 436, 229, 461, 484, 485, 486, 488,
	376, 251, 413, 0, 377, 357, 494, 495, 300, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 1657, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 348, 252, 0, 0, 410,
	0, 194, 0, 463, 239, 358, 355, 501, 267, 258,
	254, 237, 301, 366, 408, 483, 402, 0, 352, 0,
	0, 473, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 235,
	309, 193, 393, 474, 271, 0, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 333, 342, 341, 322, 323,
	325, 327, 332, 339, 345, 0, 0, 0, 0, 0,
	250, 305, 257, 249, 498, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	382, 242, 0, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 314, 189, 213, 0,
	0, 392, 438, 450, 0, 0, 0, 240, 0, 448,
	406, 517, 221, 269, 435, 412, 446, 419, 272, 0,
	0, 447, 353, 503, 429, 514, 539, 540, 248, 386,
	526, 487, 534, 555, 214, 245, 400, 480, 520, 470,
	378, 499, 500, 313, 469, 280, 192, 351, 545, 212,
	456, 230, 219, 505, 523, 274, 433, 201, 482, 512,
	227, 460, 0, 0, 557, 203, 510, 479, 374, 310,
	311, 202, 0, 434, 253, 278, 243, 395, 507, 508,
	241, 558, 216, 533, 208, 0, 532, 388, 502, 511,
	375, 364, 207, 509, 373, 363, 318, 337, 338, 265,
	291, 426, 356, 427, 292, 384, 383, 385, 196, 521,
	0, 197, 0, 475, 522, 559, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 349, 399, 425,
	421, 430, 0, 497, 515, 527, 537, 543, 544, 546,
	547, 548, 549, 550, 552, 551, 387, 295, 471, 317,
	354, 0, 0, 405, 449, 228, 519, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 365, 462, 516,
	319, 331, 334, 324, 343, 0, 344, 320, 321, 326,
	328, 329, 330, 335, 336, 340, 346, 236, 199, 371,
	379, 496, 296, 204, 205, 206, 489, 490, 491, 492,
	530, 531, 535, 439, 440, 441, 442, 277, 525, 293,
	445, 444, 315, 316, 360, 428, 0, 188, 209, 350,
	0, 431, 273, 556, 529, 524, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 302, 303, 306, 312, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 432, 437, 451, 452, 453, 454, 455, 458, 459,
	464, 465, 466, 467, 468, 476, 477, 481, 504, 506,
	518, 536, 541, 457, 285, 286, 423, 424, 298, 299,
	553, 554, 284, 513, 542, 0, 359, 0, 0, 362,
	266, 289, 304, 0, 528, 478, 215, 443, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 308, 372,
	380, 409, 414, 281, 256, 232, 436, 229, 461, 484,
	485, 486, 488, 376, 251, 413, 0, 377, 357, 494,
	495, 300, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 1655, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 348, 252,
	0, 0, 410, 0, 194, 0, 463, 239, 358, 355,
	501, 267, 258, 254, 237, 301, 366, 408, 483, 402,
	0, 352, 0, 0, 473, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 235, 309, 193, 393, 474, 271, 0, 0,
	0, 0, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 333, 342,
	341, 322, 323, 325, 327, 332, 339, 345, 0, 0,
	0, 0, 0, 250, 305, 257, 249, 498, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 382, 242, 0, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 314,
	189, 213, 0, 0, 392, 438, 450, 0, 0, 0,
	240, 0, 448, 406, 517, 221, 269, 435, 412, 446,
	419, 272, 0, 0, 447, 353, 503, 429, 514, 539,
	540, 248, 386, 526, 487, 534, 555, 214, 245, 400,
	480, 520, 470, 378, 499, 500, 313, 469, 280, 192,
	351, 545, 212, 456, 230, 219, 505, 523, 274, 433,
	201, 482, 512, 227, 460, 0, 0, 557, 203, 510,
	479, 374, 310, 311, 202, 0, 434, 253, 278, 243,
	395, 507, 508, 241, 558, 216, 533, 208, 0, 532,
	388, 502, 511, 375, 364, 207, 509, 373, 363, 318,
	337, 338, 265, 291, 426, 356, 427, 292, 384, 383,
	385, 196, 521, 0, 197, 0, 475, 522, 559, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	349, 399, 425, 421, 430, 0, 497, 515, 527, 537,
	543, 544, 546, 547, 548, 549, 550, 552, 551, 387,
	295, 471, 317, 354, 0, 0, 405, 449, 228, 519,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	365, 462, 516, 319, 331, 334, 324, 343, 0, 344,
	320, 321, 326, 328, 329, 330, 335, 336, 340, 346,
	236, 199, 371, 379, 496, 296, 204, 205, 206, 489,
	490, 491, 492, 530, 531, 535, 439, 440, 441, 442,
	277, 525, 293, 445, 444, 315, 316, 360, 428, 0,
	188, 209, 350, 0, 431, 273, 556, 529, 524, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 302, 303,
	306, 312, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 432, 437, 451, 452, 453, 454,
	455, 458, 459, 464, 465, 466, 467, 468, 476, 477,
	481, 504, 506, 518, 536, 541, 457, 285, 286, 423,
	424, 298, 299, 553, 554, 284, 513, 542, 0, 359,
	0, 0, 362, 266, 289, 304, 0, 528, 478, 215,
	443, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 308, 372, 380, 409, 414, 281, 256, 232, 436,
	229, 461, 484, 485, 486, 488, 376, 251, 413, 0,
	377, 357, 494, 495, 300, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 1653,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 348, 252, 0, 0, 410, 0, 194, 0, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 0, 352, 0, 0, 473, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 235, 309, 193, 393, 474,
	271, 0, 0, 0, 0, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 333, 342, 341, 322, 323, 325, 327, 332, 339,
	345, 0, 0, 0, 0, 0, 250, 305, 257, 249,
	498, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 382, 242, 0, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 314, 189, 213, 0, 0, 392, 438, 450,
	0, 0, 0, 240, 0, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 0, 0, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 216, 533,
	208, 0, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 337, 338, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 0, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 0, 0, 405,
	449, 228, 519, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 365, 462, 516, 319, 331, 334, 324,
	343, 0, 344, 320, 321, 326, 328, 329, 330, 335,
	336, 340, 346, 236, 199, 371, 379, 496, 296, 204,
	205, 206, 489, 490, 491, 492, 530, 531, 535, 439,
	440, 441, 442, 277, 525, 293, 445, 444, 315, 316,
	360, 428, 0, 188, 209, 350, 0, 431, 273, 556,
	529, 524, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	285, 286, 423, 424, 298, 299, 553, 554, 284, 513,
	542, 0, 359, 0, 0, 362, 266, 289, 304, 0,
	528, 478, 215, 443, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 0, 377, 357, 494, 495, 300, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 1651, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 0, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 333, 342, 341, 322, 323, 325,
	327, 332, 339, 345, 0, 0, 0, 0, 0, 250,
	305, 257, 249, 498, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 314, 189, 213, 0, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 0,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 216, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 337, 338, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 365, 462, 516, 319,
	331, 334, 324, 343, 0, 344, 320, 321, 326, 328,
	329, 330, 335, 336, 340, 346, 236, 199, 371, 379,
	496, 296, 204, 205, 206, 489, 490, 491, 492, 530,
	531, 535, 439, 440, 441, 442, 277, 525, 293, 445,
	444, 315, 316, 360, 428, 0, 188, 209, 350, 0,
	431, 273, 556, 529, 524, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 285, 286, 423, 424, 298, 299, 553,
	554, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 377, 357, 494, 495,
	300, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 1649, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 0,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 333, 342, 341,
	322, 323, 325, 327, 332, 339, 345, 0, 0, 0,
	0, 0, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 216, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 337,
	338, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 365,
	462, 516, 319, 331, 334, 324, 343, 0, 344, 320,
	321, 326, 328, 329, 330, 335, 336, 340, 346, 236,
	199, 371, 379, 496, 296, 204, 205, 206, 489, 490,
	491, 492, 530, 531, 535, 439, 440, 441, 442, 277,
	525, 293, 445, 444, 315, 316, 360, 428, 0, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 389, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 285, 286, 423, 424,
	298, 299, 553, 554, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 377,
	357, 494, 495, 300, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 1645, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	348, 252, 0, 0, 410, 0, 194, 0, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 0, 352, 0, 0, 473, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 235, 309, 193, 393, 474, 271,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	333, 342, 341, 322, 323, 325, 327, 332, 339, 345,
	0, 0, 0, 0, 0, 250, 305, 257, 249, 498,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 382, 242, 0, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 314, 189, 213, 0, 0, 392, 438, 450, 0,
	0, 0, 240, 0, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 0, 0, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 216, 533, 208,
	0, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 337, 338, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 0, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 0, 0, 405, 449,
	228, 519, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 365, 462, 516, 319, 331, 334, 324, 343,
	0, 344, 320, 321, 326, 328, 329, 330, 335, 336,
	340, 346, 236, 199, 371, 379, 496, 296, 204, 205,
	206, 489, 490, 491, 492, 530, 531, 535, 439, 440,
	441, 442, 277, 525, 293, 445, 444, 315, 316, 360,
	428, 0, 188, 209, 350, 0, 431, 273, 556, 529,
	524, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 285,
	286, 423, 424, 298, 299, 553, 554, 284, 513, 542,
	0, 359, 0, 0, 362, 266, 289, 304, 0, 528,
	478, 215, 443, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 0, 377, 357, 494, 495, 300, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 1643, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 348, 252, 0, 0, 410, 0, 194,
	0, 463, 239, 358, 355, 501, 267, 258, 254, 237,
	301, 366, 408, 483, 402, 0, 352, 0, 0, 473,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 235, 309, 193,
	393, 474, 271, 0, 0, 0, 0, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 333, 342, 341, 322, 323, 325, 327,
	332, 339, 345, 0, 0, 0, 0, 0, 250, 305,
	257, 249, 498, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 382, 242,
	0, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 314, 189, 213, 0, 0, 392,
	438, 450, 0, 0, 0, 240, 0, 448, 406, 517,
	221, 269, 435, 412, 446, 419, 272, 0, 0, 447,
	353, 503, 429, 514, 539, 540, 248, 386, 526, 487,
	534, 555, 214, 245, 400, 480, 520, 470, 378, 499,
	500, 313, 469, 280, 192, 351, 545, 212, 456, 230,
	219, 505, 523, 274, 433, 201, 482, 512, 227, 460,
	0, 0, 557, 203, 510, 479, 374, 310, 311, 202,
	0, 434, 253, 278, 243, 395, 507, 508, 241, 558,
	216, 533, 208, 0, 532, 388, 502, 511, 375, 364,
	207, 509, 373, 363, 318, 337, 338, 265, 291, 426,
	356, 427, 292, 384, 383, 385, 196, 521, 0, 197,
	0, 475, 522, 559, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 349, 399, 425, 421, 430,
	0, 497, 515, 527, 537, 543, 544, 546, 547, 548,
	549, 550, 552, 551, 387, 295, 471, 317, 354, 0,
	0, 405, 449, 228, 519, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 578, 365, 462, 516, 319, 331,
	334, 324, 343, 0, 344, 320, 321, 326, 328, 329,
	330, 335, 336, 340, 346, 236, 199, 371, 379, 496,
	296, 204, 205, 206, 489, 490, 491, 492, 530, 531,
	535, 439, 440, 441, 442, 277, 525, 293, 445, 444,
	315, 316, 360, 428, 0, 188, 209, 350, 0, 431,
	273, 556, 529, 524, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 302, 303, 306, 312, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 432,
	437, 451, 452, 453, 454, 455, 458, 459, 464, 465,
	466, 467, 468, 476, 477, 481, 504, 506, 518, 536,
	541, 457, 285, 286, 423, 424, 298, 299, 553, 554,
	284, 513, 542, 0, 359, 0, 0, 362, 266, 289,
	304, 0, 528, 478, 215, 443, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 308, 372, 380, 409,
	414, 281, 256, 232, 436, 229, 461, 484, 485, 486,
	488, 376, 251, 413, 0, 377, 357, 494, 495, 300,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 1641, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 348, 252, 0, 0,
	410, 0, 194, 0, 463, 239, 358, 355, 501, 267,
	258, 254, 237, 301, 366, 408, 483, 402, 0, 352,
	0, 0, 473, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	235, 309, 193, 393, 474, 271, 0, 0, 0, 0,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 333, 342, 341, 322,
	323, 325, 327, 332, 339, 345, 0, 0, 0, 0,
	0, 250, 305, 257, 249, 498, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 382, 242, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 314, 189, 213,
	0, 0, 392, 438, 450, 0, 0, 0, 240, 0,
	448, 406, 517, 221, 269, 435, 412, 446, 419, 272,
	0, 0, 447, 353, 503, 429, 514, 539, 540, 248,
	386, 526, 487, 534, 555, 214, 245, 400, 480, 520,
	470, 378, 499, 500, 313, 469, 280, 192, 351, 545,
	212, 456, 230, 219, 505, 523, 274, 433, 201, 482,
	512, 227, 460, 0, 0, 557, 203, 510, 479, 374,
	310, 311, 202, 0, 434, 253, 278, 243, 395, 507,
	508, 241, 558, 216, 533, 208, 0, 532, 388, 502,
	511, 375, 364, 207, 509, 373, 363, 318, 337, 338,
	265, 291, 426, 356, 427, 292, 384, 383, 385, 196,
	521, 0, 197, 0, 475, 522, 559, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 349, 399,
	425, 421, 430, 0, 497, 515, 527, 537, 543, 544,
	546, 547, 548, 549, 550, 552, 551, 387, 295, 471,
	317, 354, 0, 0, 405, 449, 228, 519, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 365, 462,
	516, 319, 331, 334, 324, 343, 0, 344, 320, 321,
	326, 328, 329, 330, 335, 336, 340, 346, 236, 199,
	371, 379, 496, 296, 204, 205, 206, 489, 490, 491,
	492, 530, 531, 535, 439, 440, 441, 442, 277, 525,
	293, 445, 444, 315, 316, 360, 428, 0, 188, 209,
	350, 0, 431, 273, 556, 529, 524, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 302, 303, 306, 312,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 432, 437, 451, 452, 453, 454, 455, 458,
	459, 464, 465, 466, 467, 468, 476, 477, 481, 504,
	506, 518, 536, 541, 457, 285, 286, 423, 424, 298,
	299, 553, 554, 284, 513, 542, 0, 359, 0, 0,
	362, 266, 289, 304, 0, 528, 478, 215, 443, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 308,
	372, 380, 409, 414, 281, 256, 232, 436, 229, 461,
	484, 485, 486, 488, 376, 251, 413, 0, 377, 357,
	494, 495, 300, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 348,
	252, 0, 0, 410, 0, 194, 0, 463, 239, 358,
	355, 501, 267, 258, 254, 237, 301, 366, 408, 483,
	402, 0, 352, 0, 0, 473, 381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 235, 309, 193, 393, 474, 271, 0,
	1616, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 0, 233, 333,
	342, 341, 322, 323, 325, 327, 332, 339, 345, 0,
	0, 0, 0, 0, 250, 305, 257, 249, 498, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 382, 242, 0, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	314, 189, 213, 0, 0, 392, 438, 450, 0, 0,
	0, 240, 0, 448, 406, 517, 221, 269, 435, 412,
	446, 419, 272, 0, 0, 447, 353, 503, 429, 514,
	539, 540, 248, 386, 526, 487, 534, 555, 214, 245,
	400, 480, 520, 470, 378, 499, 500, 313, 469, 280,
	192, 351, 545, 212, 456, 230, 219, 505, 523, 274,
	433, 201, 482, 512, 227, 460, 0, 0, 557, 203,
	510, 479, 374, 310, 311, 202, 0, 434, 253, 278,
	243, 395, 507, 508, 241, 558, 216, 533, 208, 0,
	532, 388, 502, 511, 375, 364, 207, 509, 373, 363,
	318, 337, 338, 265, 291, 426, 356, 427, 292, 384,
	383, 385, 196, 521, 0, 197, 0, 475, 522, 559,
	222, 223, 225, 0, 264, 268, 276, 279, 287, 288,
	297, 349, 399, 425, 421, 430, 0, 497, 515, 527,
	537, 543, 544, 546, 547, 548, 549, 550, 552, 551,
	387, 295, 471, 317, 354, 0, 0, 405, 449, 228,
	519, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 365, 462, 516, 319, 331, 334, 324, 343, 0,
	344, 320, 321, 326, 328, 329, 330, 335, 336, 340,
	346, 236, 199, 371, 379, 496, 296, 204, 205, 206,
	489, 490, 491, 492, 530, 531, 535, 439, 440, 441,
	442, 277, 525, 293, 445, 444, 315, 316, 360, 428,
	0, 188, 209, 350, 0, 431, 273, 556, 529, 524,
	195, 211, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 191, 198, 210, 220,
	224, 231, 246, 261, 263, 270, 283, 290, 294, 302,
	303, 306, 312, 361, 367, 368, 369, 370, 389, 390,
	391, 394, 397, 398, 401, 403, 404, 407, 411, 415,
	416, 417, 418, 420, 422, 432, 437, 451, 452, 453,
	454, 455, 458, 459, 464, 465, 466, 467, 468, 476,
	477, 481, 504, 506, 518, 536, 541, 457, 285, 286,
	423, 424, 298, 299, 553, 554, 284, 513, 542, 0,
	359, 0, 0, 362, 266, 289, 304, 0, 528, 478,
	215, 443, 275, 238, 0, 0, 200, 234, 218, 244,
	259, 262, 308, 372, 380, 409, 414, 281, 256, 232,
	436, 229, 461, 484, 485, 486, 488, 376, 251, 413,
	0, 377, 357, 494, 495, 300, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 0, 1517, 255, 0, 0,
	0, 0, 348, 252, 0, 0, 410, 0, 194, 0,
	463, 239, 358, 355, 501, 267, 258, 254, 237, 301,
	366, 408, 483, 402, 0, 352, 0, 0, 473, 381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 235, 309, 193, 393,
	474, 271, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	0, 233, 333, 342, 341, 322, 323, 325, 327, 332,
	339, 345, 0, 0, 0, 0, 0, 250, 305, 257,
	249, 498, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 382, 242, 0,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 314, 189, 213, 0, 0, 392, 438,
	450, 0, 0, 0, 240, 0, 448, 406, 517, 221,
	269, 435, 412, 446, 419, 272, 0, 0, 447, 353,
	503, 429, 514, 539, 540, 248, 386, 526, 487, 534,
	555, 214, 245, 400, 480, 520, 470, 378, 499, 500,
	313, 469, 280, 192, 351, 545, 212, 456, 230, 219,
	505, 523, 274, 433, 201, 482, 512, 227, 460, 0,
	0, 557, 203, 510, 479, 374, 310, 311, 202, 0,
	434, 253, 278, 243, 395, 507, 508, 241, 558, 216,
	533, 208, 0, 532, 388, 502, 511, 375, 364, 207,
	509, 373, 363, 318, 337, 338, 265, 291, 426, 356,
	427, 292, 384, 383, 385, 196, 521, 0, 197, 0,
	475, 522, 559, 222, 223, 225, 0, 264, 268, 276,
	279, 287, 288, 297, 349, 399, 425, 421, 430, 0,
	497, 515, 527, 537, 543, 544, 546, 547, 548, 549,
	550, 552, 551, 387, 295, 471, 317, 354, 0, 0,
	405, 449, 228, 519, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 365, 462, 516, 319, 331, 334,
	324, 343, 0, 344, 320, 321, 326, 328, 329, 330,
	335, 336, 340, 346, 236, 199, 371, 379, 496, 296,
	204, 205, 206, 489, 490, 491, 492, 530, 531, 535,
	439, 440, 441, 442, 277, 525, 293, 445, 444, 315,
	316, 360, 428, 0, 188, 209, 350, 0, 431, 273,
	556, 529, 524, 195, 211, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 191,
	198, 210, 220, 224, 231, 246, 261, 263, 270, 283,
	290, 294, 302, 303, 306, 312, 361, 367, 368, 369,
	370, 389, 390, 391, 394, 397, 398, 401, 403, 404,
	407, 411, 415, 416, 417, 418, 420, 422, 432, 437,
	451, 452, 453, 454, 455, 458, 459, 464, 465, 466,
	467, 468, 476, 477, 481, 504, 506, 518, 536, 541,
	457, 285, 286, 423, 424, 298, 299, 553, 554, 284,
	513, 542, 0, 359, 0, 0, 362, 266, 289, 304,
	0, 528, 478, 215, 443, 275, 238, 0, 0, 200,
	234, 218, 244, 259, 262, 308, 372, 380, 409, 414,
	281, 256, 232, 436, 229, 461, 484, 485, 486, 488,
	376, 251, 413, 0, 377, 357, 494, 495, 300, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 348, 252, 0, 0, 410,
	0, 194, 0, 463, 239, 358, 355, 501, 267, 258,
	254, 237, 301, 366, 408, 483, 402, 0, 352, 0,
	0, 473, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 235,
	309, 193, 393, 474, 271, 0, 0, 0, 0, 624,
	0, 0, 0, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 0, 233, 333, 342, 341, 322, 323,
	325, 327, 332, 339, 345, 0, 0, 0, 0, 0,
	250, 305, 257, 249, 498, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	382, 242, 0, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 314, 189, 213, 0,
	0, 392, 438, 450, 0, 0, 0, 240, 0, 448,
	406, 517, 221, 269, 435, 412, 446, 419, 272, 0,
	0, 447, 353, 503, 429, 514, 539, 540, 248, 386,
	526, 487, 534, 555, 214, 245, 400, 480, 520, 470,
	378, 499, 500, 313, 469, 280, 192, 351, 545, 212,
	456, 230, 219, 505, 523, 274, 433, 201, 482, 512,
	227, 460, 0, 0, 557, 203, 510, 479, 374, 310,
	311, 202, 0, 434, 253, 278, 243, 395, 507, 508,
	241, 558, 216, 533, 208, 0, 532, 388, 502, 511,
	375, 364, 207, 509, 373, 363, 318, 337, 338, 265,
	291, 426, 356, 427, 292, 384, 383, 385, 196, 521,
	0, 197, 0, 475, 522, 559, 222, 223, 225, 0,
	264, 268, 276, 279, 287, 288, 297, 349, 399, 425,
	421, 430, 0, 497, 515, 527, 537, 543, 544, 546,
	547, 548, 549, 550, 552, 551, 387, 295, 471, 317,
	354, 0, 0, 405, 449, 228, 519, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 365, 462, 516,
	319, 331, 334, 324, 343, 0, 344, 320, 321, 326,
	328, 329, 330, 335, 336, 340, 346, 236, 199, 371,
	379, 496, 296, 204, 205, 206, 489, 490, 491, 492,
	530, 531, 535, 439, 440, 441, 442, 277, 525, 293,
	445, 444, 315, 316, 360, 428, 0, 188, 209, 350,
	0, 431, 273, 556, 529, 524, 195, 211, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 191, 198, 210, 220, 224, 231, 246, 261,
	263, 270, 283, 290, 294, 302, 303, 306, 312, 361,
	367, 368, 369, 370, 389, 390, 391, 394, 397, 398,
	401, 403, 404, 407, 411, 415, 416, 417, 418, 420,
	422, 432, 437, 451, 452, 453, 454, 455, 458, 459,
	464, 465, 466, 467, 468, 476, 477, 481, 504, 506,
	518, 536, 541, 457, 285, 286, 423, 424, 298, 299,
	553, 554, 284, 513, 542, 0, 359, 0, 0, 362,
	266, 289, 304, 0, 528, 478, 215, 443, 275, 238,
	0, 0, 200, 234, 218, 244, 259, 262, 308, 372,
	380, 409, 414, 281, 256, 232, 436, 229, 461, 484,
	485, 486, 488, 376, 251, 413, 0, 377, 357, 494,
	495, 300, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 348, 252,
	0, 0, 410, 0, 194, 0, 463, 239, 358, 355,
	501, 267, 258, 254, 237, 301, 366, 408, 483, 402,
	0, 352, 0, 0, 473, 381, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 235, 309, 193, 393, 474, 271, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 0, 233, 333, 342,
	341, 322, 323, 325, 327, 332, 339, 345, 0, 0,
	0, 0, 0, 250, 305, 257, 249, 498, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 382, 242, 0, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 314,
	189, 213, 0, 0, 392, 438, 450, 0, 0, 0,
	240, 0, 448, 406, 517, 221, 269, 435, 412, 446,
	419, 272, 0, 0, 447, 353, 503, 429, 514, 539,
	540, 248, 386, 526, 487, 534, 555, 214, 245, 400,
	480, 520, 470, 378, 499, 500, 313, 469, 280, 192,
	351, 545, 212, 456, 230, 219, 505, 523, 274, 433,
	201, 482, 512, 227, 460, 0, 0, 557, 203, 510,
	479, 374, 310, 311, 202, 0, 434, 253, 278, 243,
	395, 507, 508, 241, 558, 216, 533, 208, 0, 532,
	388, 502, 511, 375, 364, 207, 509, 373, 363, 318,
	337, 338, 265, 291, 426, 356, 427, 292, 384, 383,
	385, 196, 521, 0, 197, 0, 475, 522, 559, 222,
	223, 225, 0, 264, 268, 276, 279, 287, 288, 297,
	349, 399, 425, 421, 430, 0, 497, 515, 527, 537,
	543, 544, 546, 547, 548, 549, 550, 552, 551, 387,
	295, 471, 317, 354, 0, 0, 405, 449, 228, 519,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	365, 462, 516, 319, 331, 334, 324, 343, 0, 344,
	320, 321, 326, 328, 329, 330, 335, 336, 340, 346,
	236, 199, 371, 379, 496, 296, 204, 205, 206, 489,
	490, 491, 492, 530, 531, 535, 439, 440, 441, 442,
	277, 525, 293, 445, 444, 315, 316, 360, 428, 0,
	188, 209, 350, 0, 431, 273, 556, 529, 524, 195,
	211, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	880, 0, 0, 0, 190, 191, 198, 210, 220, 224,
	231, 246, 261, 263, 270, 283, 290, 294, 302, 303,
	306, 312, 361, 367, 368, 369, 370, 389, 390, 391,
	394, 397, 398, 401, 403, 404, 407, 411, 415, 416,
	417, 418, 420, 422, 432, 437, 451, 452, 453, 454,
	455, 458, 459, 464, 465, 466, 467, 468, 476, 477,
	481, 504, 506, 518, 536, 541, 457, 285, 286, 423,
	424, 298, 299, 553, 554, 284, 513, 542, 0, 359,
	0, 0, 362, 266, 289, 304, 0, 528, 478, 215,
	443, 275, 238, 0, 0, 200, 234, 218, 244, 259,
	262, 308, 372, 380, 409, 414, 281, 256, 232, 436,
	229, 461, 484, 485, 486, 488, 376, 251, 413, 0,
	377, 357, 494, 495, 300, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 348, 252, 0, 0, 410, 0, 194, 0, 463,
	239, 358, 355, 501, 267, 258, 254, 237, 301, 366,
	408, 483, 402, 0, 352, 0, 0, 473, 381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 235, 309, 193, 393, 474,
	271, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 0,
	233, 333, 342, 341, 322, 323, 325, 327, 332, 339,
	345, 0, 0, 0, 0, 0, 250, 305, 257, 249,
	498, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 640, 0, 282, 0, 382, 242, 0, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 314, 189, 213, 0, 0, 392, 438, 450,
	0, 0, 0, 240, 0, 448, 406, 517, 221, 269,
	435, 412, 446, 419, 272, 0, 0, 447, 353, 503,
	429, 514, 539, 540, 248, 386, 526, 487, 534, 555,
	214, 245, 400, 480, 520, 470, 378, 499, 500, 313,
	469, 280, 192, 351, 545, 212, 456, 230, 219, 505,
	523, 274, 433, 201, 482, 512, 227, 460, 0, 0,
	557, 203, 510, 479, 374, 310, 311, 202, 0, 434,
	253, 278, 243, 395, 507, 508, 241, 558, 216, 533,
	208, 0, 532, 388, 502, 511, 375, 364, 207, 509,
	373, 363, 318, 337, 338, 265, 291, 426, 356, 427,
	292, 384, 383, 385, 196, 521, 0, 197, 0, 475,
	522, 559, 222, 223, 225, 0, 264, 268, 276, 279,
	287, 288, 297, 349, 399, 425, 421, 430, 0, 497,
	515, 527, 537, 543, 544, 546, 547, 548, 549, 550,
	552, 551, 387, 295, 471, 317, 354, 0, 0, 405,
	449, 228, 519, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 578, 365, 462, 516, 319, 331, 334, 324,
	343, 0, 344, 320, 321, 326, 328, 329, 330, 335,
	336, 340, 346, 236, 199, 371, 379, 496, 296, 204,
	205, 206, 489, 490, 491, 492, 530, 531, 535, 439,
	440, 441, 442, 277, 525, 293, 445, 444, 315, 316,
	360, 428, 0, 188, 209, 350, 0, 431, 273, 556,
	529, 524, 195, 211, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 191, 198,
	210, 220, 224, 231, 246, 261, 263, 270, 283, 290,
	294, 302, 303, 306, 312, 361, 367, 368, 369, 370,
	389, 390, 391, 394, 397, 398, 401, 403, 404, 407,
	411, 415, 416, 417, 418, 420, 422, 432, 437, 451,
	452, 453, 454, 455, 458, 459, 464, 465, 466, 467,
	468, 476, 477, 481, 504, 506, 518, 536, 541, 457,
	285, 286, 423, 424, 298, 299, 553, 554, 639, 513,
	542, 0, 359, 0, 0, 362, 266, 289, 304, 0,
	528, 478, 215, 443, 275, 238, 0, 0, 200, 234,
	218, 244, 259, 262, 308, 372, 380, 409, 414, 281,
	256, 232, 436, 229, 461, 484, 485, 486, 488, 376,
	251, 413, 0, 377, 357, 494, 495, 300, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 348, 252, 0, 0, 410, 0,
	194, 0, 463, 239, 358, 355, 501, 267, 258, 254,
	237, 301, 366, 408, 483, 402, 0, 352, 0, 0,
	473, 381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 235, 309,
	193, 393, 474, 271, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 0, 233, 333, 342, 341, 322, 323, 325,
	327, 332, 339, 345, 0, 0, 0, 0, 0, 250,
	305, 257, 249, 498, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 382,
	242, 0, 0, 581, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 314, 189, 213, 0, 0,
	392, 438, 450, 0, 0, 0, 240, 0, 448, 406,
	517, 221, 269, 435, 412, 446, 419, 272, 0, 0,
	447, 353, 503, 429, 514, 539, 540, 248, 386, 526,
	487, 534, 555, 214, 245, 400, 480, 520, 470, 378,
	499, 500, 313, 469, 280, 192, 351, 545, 212, 456,
	230, 219, 505, 523, 274, 433, 201, 482, 512, 227,
	460, 0, 0, 557, 203, 510, 479, 374, 310, 311,
	202, 0, 434, 253, 278, 243, 395, 507, 508, 241,
	558, 216, 533, 208, 0, 532, 388, 502, 511, 375,
	364, 207, 509, 373, 363, 318, 337, 338, 265, 291,
	426, 356, 427, 292, 384, 383, 385, 196, 521, 0,
	197, 0, 475, 522, 559, 222, 223, 225, 0, 264,
	268, 276, 279, 287, 288, 297, 349, 399, 425, 421,
	430, 0, 497, 515, 527, 537, 543, 544, 546, 547,
	548, 549, 550, 552, 551, 387, 295, 471, 317, 354,
	0, 0, 405, 449, 228, 519, 472, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 365, 462, 516, 319,
	331, 334, 324, 343, 0, 344, 320, 321, 326, 328,
	329, 330, 335, 336, 340, 346, 236, 199, 371, 379,
	496, 296, 204, 205, 206, 489, 490, 491, 492, 530,
	531, 535, 439, 440, 441, 442, 277, 525, 293, 445,
	444, 315, 316, 360, 428, 0, 188, 209, 350, 0,
	431, 273, 556, 529, 524, 195, 211, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 191, 198, 210, 220, 224, 231, 246, 261, 263,
	270, 283, 290, 294, 302, 303, 306, 312, 361, 367,
	368, 369, 370, 389, 390, 391, 394, 397, 398, 401,
	403, 404, 407, 411, 415, 416, 417, 418, 420, 422,
	432, 437, 451, 452, 453, 454, 455, 458, 459, 464,
	465, 466, 467, 468, 476, 477, 481, 504, 506, 518,
	536, 541, 457, 285, 286, 423, 424, 298, 299, 553,
	554, 284, 513, 542, 0, 359, 0, 0, 362, 266,
	289, 304, 0, 528, 478, 215, 443, 275, 238, 0,
	0, 200, 234, 218, 244, 259, 262, 308, 372, 380,
	409, 414, 281, 256, 232, 436, 229, 461, 484, 485,
	486, 488, 376, 251, 413, 0, 377, 357, 494, 495,
	300, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 348, 252, 0,
	0, 410, 0, 194, 0, 463, 239, 358, 355, 501,
	267, 258, 254, 237, 301, 366, 408, 483, 402, 0,
	352, 0, 0, 473, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 235, 309, 193, 393, 474, 271, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 0, 233, 333, 342, 341,
	322, 323, 325, 327, 332, 339, 345, 0, 0, 0,
	0, 0, 250, 305, 257, 249, 498, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 382, 242, 0, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 314, 189,
	213, 0, 0, 392, 438, 450, 0, 0, 0, 240,
	0, 448, 406, 517, 221, 269, 435, 412, 446, 419,
	272, 0, 0, 447, 353, 503, 429, 514, 539, 540,
	248, 386, 526, 487, 534, 555, 214, 245, 400, 480,
	520, 470, 378, 499, 500, 313, 469, 280, 192, 351,
	545, 212, 456, 230, 219, 505, 523, 274, 433, 201,
	482, 512, 227, 460, 0, 0, 557, 203, 510, 479,
	374, 310, 311, 202, 0, 434, 253, 278, 243, 395,
	507, 508, 241, 558, 216, 533, 208, 0, 532, 388,
	502, 511, 375, 364, 207, 509, 373, 363, 318, 337,
	338, 265, 291, 426, 356, 427, 292, 384, 383, 385,
	196, 521, 0, 197, 0, 475, 522, 559, 222, 223,
	225, 0, 264, 268, 276, 279, 287, 288, 297, 349,
	399, 425, 421, 430, 0, 497, 515, 527, 537, 543,
	544, 546, 547, 548, 549, 550, 552, 551, 387, 295,
	471, 317, 354, 0, 0, 405, 449, 228, 519, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 365,
	462, 516, 319, 331, 334, 324, 343, 0, 344, 320,
	321, 326, 328, 329, 330, 335, 336, 340, 346, 236,
	199, 371, 379, 496, 296, 204, 205, 206, 489, 490,
	491, 492, 530, 531, 535, 439, 440, 441, 442, 277,
	525, 293, 445, 444, 315, 316, 360, 428, 0, 188,
	209, 350, 0, 431, 273, 556, 529, 524, 195, 211,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 191, 198, 210, 220, 224, 231,
	246, 261, 263, 270, 283, 290, 294, 302, 303, 306,
	312, 361, 367, 368, 369, 370, 3400, 390, 391, 394,
	397, 398, 401, 403, 404, 407, 411, 415, 416, 417,
	418, 420, 422, 432, 437, 451, 452, 453, 454, 455,
	458, 459, 464, 465, 466, 467, 468, 476, 477, 481,
	504, 506, 518, 536, 541, 457, 285, 286, 423, 424,
	298, 299, 553, 554, 284, 513, 542, 0, 359, 0,
	0, 362, 266, 289, 304, 0, 528, 478, 215, 443,
	275, 238, 0, 0, 200, 234, 218, 244, 259, 262,
	308, 372, 380, 409, 414, 281, 256, 232, 436, 229,
	461, 484, 485, 486, 488, 376, 251, 413, 0, 377,
	357, 494, 495, 300, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	348, 252, 0, 0, 410, 0, 194, 0, 463, 239,
	358, 355, 501, 267, 258, 254, 237, 301, 366, 408,
	483, 402, 0, 352, 0, 0, 473, 381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 235, 309, 193, 393, 474, 271,
	0, 0, 0, 0, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 0, 233,
	333, 342, 341, 322, 323, 325, 327, 332, 339, 345,
	0, 0, 0, 0, 0, 250, 305, 257, 249, 498,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 382, 242, 0, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 314, 189, 213, 0, 0, 392, 438, 450, 0,
	0, 0, 240, 0, 448, 406, 517, 221, 269, 435,
	412, 446, 419, 272, 0, 0, 447, 353, 503, 429,
	514, 539, 540, 248, 386, 526, 487, 534, 555, 214,
	245, 400, 480, 520, 470, 378, 499, 500, 313, 469,
	280, 192, 351, 545, 212, 456, 230, 219, 505, 523,
	274, 433, 201, 482, 512, 227, 460, 0, 0, 557,
	203, 510, 479, 374, 310, 311, 202, 0, 434, 253,
	278, 243, 395, 507, 508, 241, 558, 216, 533, 208,
	0, 532, 388, 502, 511, 375, 364, 207, 509, 373,
	363, 318, 337, 338, 265, 291, 426, 356, 427, 292,
	384, 383, 385, 196, 521, 0, 197, 0, 475, 522,
	559, 222, 223, 225, 0, 264, 268, 276, 279, 287,
	288, 297, 349, 399, 425, 421, 430, 0, 497, 515,
	527, 537, 543, 544, 546, 547, 548, 549, 550, 552,
	551, 387, 295, 471, 317, 354, 0, 0, 405, 449,
	228, 519, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 365, 462, 516, 319, 331, 334, 324, 343,
	0, 344, 320, 321, 326, 328, 329, 330, 335, 336,
	340, 346, 236, 199, 371, 379, 496, 296, 204, 205,
	206, 489, 490, 491, 492, 530, 531, 535, 439, 440,
	441, 442, 277, 525, 293, 445, 444, 315, 316, 360,
	428, 0, 188, 209, 350, 0, 431, 273, 556, 529,
	524, 195, 211, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 191, 198, 210,
	220, 224, 231, 246, 261, 263, 270, 283, 290, 294,
	302, 303, 306, 312, 361, 367, 368, 369, 370, 389,
	390, 391, 394, 397, 398, 401, 403, 404, 407, 411,
	415, 416, 417, 418, 420, 422, 432, 437, 451, 452,
	453, 454, 455, 458, 459, 464, 465, 466, 467, 468,
	476, 477, 481, 504, 506, 518, 536, 541, 457, 285,
	286, 423, 424, 298, 299, 553, 554, 284, 513, 542,
	0, 359, 0, 0, 362, 266, 289, 304, 0, 528,
	478, 215, 443, 275, 238, 0, 0, 200, 234, 218,
	244, 259, 262, 308, 372, 380, 409, 414, 281, 256,
	232, 436, 229, 461, 484, 485, 486, 488, 376, 251,
	413, 0, 377, 357, 494, 495, 300, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 348, 252, 0, 0, 410, 0, 194,
	0, 463, 239, 358, 355, 501, 267, 258, 254, 237,
	301, 366, 408, 483, 402, 0, 352, 0, 0, 473,
	381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 235, 309, 193,
	393, 474, 271, 0, 0, 0, 0, 798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 0, 233, 333, 342, 341, 322, 323, 325, 327,
	332, 339, 345, 0, 0, 0, 0, 0, 250, 305,
	257, 249, 498, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 382, 242,
	0, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 314, 189, 213, 0, 0, 392,
	438, 450, 0, 0, 0, 240, 0, 448, 406, 517,
	221, 269, 435, 412, 446, 419, 272, 0, 0, 447,
	353, 503, 429, 514, 539, 540, 248, 386, 526, 487,
	534, 555, 214, 245, 400, 480, 520, 470, 378, 499,
	500, 313, 469, 280, 192, 351, 545, 212, 456, 230,
	219, 505, 523, 274, 433, 201, 482, 512, 227, 460,
	0, 0, 557, 203, 510, 479, 374, 310, 311, 202,
	0, 434, 253, 278, 243, 395, 507, 508, 241, 558,
	216, 533, 208, 0, 532, 388, 502, 511, 375, 364,
	207, 509, 373, 363, 318, 337, 338, 265, 291, 426,
	356, 427, 292, 384, 383, 385, 196, 521, 0, 197,
	0, 475, 522, 559, 222, 223, 225, 0, 264, 268,
	276, 279, 287, 288, 297, 349, 399, 425, 421, 430,
	0, 497, 515, 527, 537, 543, 544, 546, 547, 548,
	549, 550, 552, 551, 387, 295, 471, 317, 354, 0,
	0, 405, 449, 228, 519, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 578, 365, 462, 516, 319, 331,
	334, 324, 343, 0, 344, 320, 321, 326, 328, 329,
	330, 335, 336, 340, 346, 236, 199, 371, 379, 496,
	296, 204, 205, 206, 489, 490, 491, 492, 530, 531,
	535, 439, 440, 441, 442, 277, 525, 293, 445, 444,
	315, 316, 360, 428, 0, 188, 209, 350, 0, 431,
	273, 556, 529, 524, 195, 211, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	191, 198, 210, 220, 224, 231, 246, 261, 263, 270,
	283, 290, 294, 302, 303, 306, 312, 361, 367, 368,
	369, 370, 389, 390, 391, 394, 397, 398, 401, 403,
	404, 407, 411, 415, 416, 417, 418, 420, 422, 432,
	437, 451, 452, 453, 454, 455, 458, 459, 464, 465,
	466, 467, 468, 476, 477, 481, 504, 506, 518, 536,
	541, 457, 285, 286, 423, 424, 298, 299, 553, 554,
	284, 513, 542, 0, 359, 0, 0, 362, 266, 289,
	304, 0, 528, 478, 215, 443, 275, 238, 0, 0,
	200, 234, 218, 244, 259, 262, 308, 372, 380, 409,
	414, 281, 256, 232, 436, 229, 461, 484, 485, 486,
	488, 376, 251, 413, 0, 377, 357, 494, 495, 300,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 348, 252, 0, 0,
	410, 0, 194, 0, 463, 239, 358, 355, 501, 267,
	258, 254, 237, 301, 366, 408, 483, 402, 0, 352,
	0, 0, 473, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	235, 309, 193, 393, 474, 271, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 0, 233, 333, 342, 341, 322,
	323, 325, 327, 332, 339, 345, 0, 0, 0, 0,
	0, 250, 305, 257, 249, 498, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 382, 242, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 314, 189, 213,
	0, 0, 392, 438, 450, 0, 0, 0, 240, 0,
	448, 406, 517, 221, 269, 435, 412, 446, 419, 272,
	0, 0, 447, 353, 503, 429, 514, 539, 540, 248,
	386, 526, 487, 534, 555, 214, 245, 400, 480, 520,
	470, 378, 499, 500, 313, 469, 280, 192, 351, 545,
	212, 456, 230, 219, 505, 523, 274, 433, 201, 482,
	512, 227, 460, 0, 0, 557, 203, 510, 479, 374,
	310, 311, 202, 0, 434, 253, 278, 243, 395, 507,
	508, 241, 558, 216, 533, 208, 0, 532, 388, 502,
	511, 375, 364, 207, 509, 373, 363, 318, 337, 338,
	265, 291, 426, 356, 427, 292, 384, 383, 385, 196,
	521, 0, 197, 0, 475, 522, 559, 222, 223, 225,
	0, 264, 268, 276, 279, 287, 288, 297, 349, 399,
	425, 421, 430, 0, 497, 515, 527, 537, 543, 544,
	546, 547, 548, 549, 550, 552, 551, 387, 295, 471,
	317, 354, 0, 0, 405, 449, 228, 519, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 365, 462,
	516, 319, 331, 334, 324, 343, 0, 344, 320, 321,
	326, 328, 329, 330, 335, 336, 340, 346, 236, 199,
	371, 379, 496, 296, 204, 205, 206, 489, 490, 491,
	492, 530, 531, 535, 439, 440, 441, 442, 277, 525,
	293, 445, 444, 315, 316, 360, 428, 0, 188, 209,
	350, 0, 431, 273, 556, 529, 524, 195, 211, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 191, 198, 210, 220, 224, 231, 246,
	261, 263, 270, 283, 290, 294, 302, 303, 306, 312,
	361, 367, 368, 369, 370, 389, 390, 391, 394, 397,
	398, 401, 403, 404, 407, 411, 415, 416, 417, 418,
	420, 422, 432, 437, 451, 452, 453, 454, 455, 458,
	459, 464, 465, 466, 467, 468, 476, 477, 481, 504,
	506, 518, 536, 541, 457, 285, 286, 423, 424, 298,
	299, 553, 554, 284, 513, 542, 0, 359, 0, 0,
	362, 266, 289, 304, 0, 528, 478, 215, 443, 275,
	238, 0, 0, 200, 234, 218, 244, 259, 262, 308,
	372, 380, 409, 414, 281, 256, 232, 436, 229, 461,
	484, 485, 486, 488, 376, 251, 413, 0, 0, 357,
	494, 495, 300,
}

var yyPact = [...]int{
	4480, -1000, -461, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2234, 2338, -1000, -1000,
	-1000, -1000, 2444, -1000, 860, 1879, -1000, 2241, 301, -1000,
	45581, 590, -1000, 43009, 587, 3698, 28863, -1000, 242, -1000,
	206, 44295, 231, 42366, -1000, -1000, -297, 18565, 2147, 103,
	87, 45581, -1000, -1000, -1000, -1000, 2405, 1874, -1000, 418,
	-1000, -1000, -1000, -1000, -1000, -1000, 41723, -1000, -1000, -1000,
	2264, 2247, 2456, 742, 2152, -1000, 2331, 1874, -1000, 18565,
	2399, 2330, 17922, -1000, 17922, 513, -1000, -1000, 223, -1000,
	-1000, 24362, 45581, 31435, 366, -1000, 2241, -1000, -1000, -1000,
	110, -1000, 390, 1776, -1000, 1775, -1000, 702, 783, 434,
	528, 521, 409, 407, 405, 404, 403, 400, 395, 394,
	443, -1000, 774, 774, -111, -115, 3564, 492, 491, 491,
	739, 546, 2188, 2187, -1000, -1000, 774, 774, 774, 420,
	774, 774, 774, 774, 369, 365, 774, 774, 774, 774,
	774, 774, 774, 774, 774, 774, 774, 774, 774, 774,
	774, 774, 774, 353, 2241, 320, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 45581,
	280, 45581, -1000, 663, 45581, 901, 901, 161, 901, 901,
	901, 901, 256, 768, 81, -1000, 252, 331, 219, 317,
	888, 232, -1000, -1000, 307, 888, 1363, -1000, 757, 185,
	-1000, 901, 901, -1000, 12110, 157, 12110, 12110, -1000, 2206,
	-1000, -1000, -1000, -1000, -1000, 1374, -1000, -1000, -1000, -1000,
	-1000, 543, -1000, -1000, -1000, -1000, 44295, 41080, 436, 815,
	-1000, -1000, -1000, 71, -1000, -1000, 1522, 1097, 18565, 1283,
	-1000, 1862, 717, -1000, -1000, -1000, -1000, -1000, 668, -1000,
	19208, 19208, 19208, 19208, -1000, -1000, 1754, 1754, 1754, 1754,
	19208, 1754, -1000, 19208, 1754, 1754, 1754, 18565, 1754, 1754,
	1754, 1754, -1000, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, -1000, -1000, -1000, -1000, 1754, 658, 1754, 1754, 1754,
	1754, 1754, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1754, 1754, 1754, 1754, 1754, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 21785, -1000, 15993, 1754,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	45581, -1000, 1754, 258, 44295, 44295, 411, 2331, 1874, -1000,
	2405, 2363, 418, -1000, 2886, 1738, 1702, 1391, 1874, 1752,
	45581, -1000, 1800, -1000, -1000, -1000, 2050, 1238, 1361, -1000,
	-1000, -1000, -1000, 1876, 18565, -1000, -1000, 2436, -1000, 21142,
	650, 959, 2435, 40437, -1000, 513, 513, 1768, 487, 38,
	-1000, -1000, -1000, -1000, 808, 28220, -1000, -1000, -1000, -1000,
	1731, 45581, -1000, -1000, 3659, 1258, -1000, 1873, -1000, 1729,
	-1000, 1834, 18565, 1895, 586, 1258, 573, 572, 565, -1000,
	-20, -1000, -1000, -1000, -1000, -1000, -1000, 774, 774, 774,
	-1000, 402, 2392, 301, 622, -1000, -1000, -1000, 39794, 1870,
	1258, -1000, 1869, -1000, 896, 619, 660, 660, 1258, -1000,
	-1000, 44938, 1258, 892, 891, 1258, 1258, 44295, 44295, -1000,
	39151, -1000, 38508, 37865, 1137, 44295, 37222, 36579, 35936, 35293,
	34650, -1000, 2248, -1000, 2252, -1000, -1000, -1000, 44938, 1258,
	1258, 44938, 44295, 44938, 45581, 1258, -1000, -1000, 385, -1000,
	-1000, 1125, 1121, 1118, 774, 774, 1117, 1360, 1357, 1356,
	774, 774, 1102, 1355, 30149, 1354, 319, 1101, 1086, 1085,
	1146, 1353, 181, 1352, 1088, 1059, 1081, 44295, 1851, 45581,
	-1000, 303, 788, 489, 807, 2241, 2136, 1759, 523, 578,
	1258, 496, 496, 44295, -1000, 14054, -1000, -1000, 1348, 18565,
	-1000, 897, 888, 888, -1000, -1000, -1000, -1000, -1000, -1000,
	901, 45581, 897, -1000, -1000, -1000, 888, 901, 45581, 901,
	901, 901, 901, 888, 888, 888, 901, 45581, 45581, 45581,
	45581, 45581, 45581, 45581, 45581, 45581, 12110, 757, 901, -302,
	-1000, 1347, -1000, 1997, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	12110, 12110, -1000, -1000, -1000, -1000, 229, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -30, 1757, 34007, -1000,
	-305, -310, -317, -350, -1000, -1000, -1000, -355, -361, -1000,
	-1000, -1000, 18565, 18565, 18565, 18565, -145, -1000, 1055, 19208,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 141, 828, 19208,
	19208, 19208, 19208, 19208, 19208, 19208, 19208, 19208, 19208, 19208,
	19208, 19208, 19208, 19208, -1000, -1000, 26291, 5908, 5908, 717,
	717, 717, 717, -1000, 17922, 18565, 18565, 717, -1000, 1258,
	15993, 33364, 17922, 17922, 18565, 823, 1097, 44938, 18565, -1000,
	1391, -1000, -1000, -1000, 1079, -1000, 910, 2197, 2197, 2197,
	2197, 18565, 18565, 18565, 18565, 18565, 18565, 18565, 18565, 18565,
	18565, 2197, 44295, 44295, 884, 18565, 18565, 18565, 18565, 18565,
	18565, 14702, 18565, 18565, 19208, 18565, 18565, 18565, 1391, 18565,
	18565, 18565, 18565, 18565, 18565, 18565, 18565, 18565, 18565, 18565,
	18565, 18565, 18565, 18565, 18565, 18565, 18565, 18565, 18565, 18565,
	18565, 18565, 18565, 18565, 18565, 18565, 1391, 18565, 1328, 18565,
	18565, 17922, 13406, 17922, 17922, 17922, 17922, 17922, -1000, -1000,
	-1000, -1000, -1000, 18565, 18565, 18565, 18565, 18565, 18565, 18565,
	18565, 1391, 18565, 18565, 18565, 18565, 18565, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 645, 1479, 1452, 1385, 18565,
	-1000, 1755, -1000, -152, 23719, 18565, 1346, 2433, 1924, 44295,
	-1000, -1000, -1000, 2331, -1000, 2331, 1479, 2169, 2056, 17922,
	-1000, -1000, 2169, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1582, -1000, 45581, 1752, 2304, 44295, 2034, 1332, 380,
	-1000, 18565, 18565, 1747, -1000, 1753, 45581, -1000, -145, -1000,
	32721, -1000, -1000, 11462, -1000, 45581, 391, 45581, -1000, 23076,
	32078, 234, 38, -1000, 1722, -1000, 59, 54, 15345, 709,
	-1000, -1000, -1000, 3564, 19851, 1491, 709, 147, -1000, -1000,
	-1000, 1834, -1000, 1834, 1834, 1834, 1834, 380, 380, 380,
	380, -1000, -1000, -1000, -1000, -1000, 1850, 1847, -1000, 1834,
	1834, 1834, 1834, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1846, 1846, 1846, 1836, 1836, 485, -1000, 18565, 241, 31435,
	2263, 1074, 1626, 303, 510, 1906, 1258, 1258, 1258, 510,
	-1000, 1287, 1280, 1277, -1000, -444, 1744, -1000, -1000, 2390,
	-1000, -1000, 854, 926, 924, 893, 44295, 271, 388, -1000,
	468, -1000, 31435, 1258, 887, 660, 1258, -1000, 1258, -1000,
	-1000, -1000, -1000, -1000, 1258, -1000, -1000, 1742, -1000, 1539,
	983, 921, 947, 907, 1742, -1000, -1000, -92, 1742, -1000,
	1742, -1000, 1742, -1000, 1742, -1000, 1742, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 796, 240, -227, 44295,
	271, 522, -1000, 516, 26291, -1000, -1000, -1000, 26291, 26291,
	-1000, -1000, -1000, -1000, 1327, 1326, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -431, 45581, -1000, 296, 806,
	374, 414, 346, 45581, 324, 2319, 2309, 2283, 354, 361,
	45581, 45581, 496, 1989, 45581, 2269, 45581, -1000, -1000, -1000,
	-1000, -1000, 1097, 45581, -1000, -1000, 901, 901, -1000, -1000,
	45581, 901, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	901, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 45581, -1000, -1000, -1000,
	-1000, 44295, -1000, -1000, -1000, -1000, -1000, 159, 57, 397,
	-1000, -1000, -1000, -1000, -1000, 2328, -1000, 1097, 863, 870,
	-1000, 1754, -1000, -1000, 1042, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 141, 19208, 19208, 19208, 1344, 541, 1392, 1175,
	1195, 981, 981, 871, 871, 723, 723, 723, 723, 723,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1323, -1000,
	1718, -1000, 1853, 1025, 1391, 2825, -1000, 1718, 1718, 1054,
	831, -1000, 18565, 1391, 2816, -1000, -1000, 1391, 1391, 1391,
	18565, -1000, -1000, 18565, 18565, 18565, 18565, 1626, 1626, 1626,
	1626, 1626, 1626, 1626, 1626, 1626, 1626, 18565, 1740, 1735,
	2431, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1254, 1626, 1626, 1626, 1626, 1626, 18565, 1970,
	-1000, -1000, -1000, 1413, 2809, 1105, 2795, 1626, 1626, -1000,
	1626, 2787, 2779, 1391, 1522, 1391, 1734, -1000, 2768, 1626,
	2761, 2750, 2718, 2072, 2714, 2706, 2700, 1626, 1626, 1626,
	2060, 2683, 2679, 2670, 2664, 2640, 2614, 2561, 2533, 2520,
	1626, -149, 1626, 1391, -1000, -1000, -1000, -1000, -1000, 2327,
	2045, 1391, 1733, 1754, 643, -1000, -1000, 1718, 1391, 1391,
	1718, 1718, 2281, 2277, 2246, 2238, 2227, 2221, 1626, 1626,
	-1000, 1626, 2210, 2205, 2038, 2006, 13406, 1391, -1000, 1385,
	45581, -1000, -296, -1000, 18, 735, 1754, -1000, 30149, 1391,
	-1000, 5864, -1000, 1149, -1000, -1000, -1000, -1000, -1000, 27577,
	1741, 2169, -1000, -1000, 1754, 1697, -1000, -1000, 380, 130,
	26934, 705, 705, 190, 1097, 1097, 18565, -1000, -1000, -1000,
	-1000, -1000, -1000, 637, 2420, 406, 1754, -1000, 1760, 2622,
	-1000, -1000, -1000, 2297, 20499, -1000, 1754, 1754, 45581, 1736,
	1720, -1000, 630, -1000, 1379, 1722, 38, 26, -1000, -1000,
	-1000, -1000, 1097, -1000, 1259, 393, 661, -1000, 476, -1000,
	-1000, -1000, -1000, 2173, 144, -1000, -1000, -1000, 275, 380,
	-1000, -1000, -1000, -1000, -1000, -1000, 1322, 1322, -1000, -1000,
	-1000, -1000, -1000, 1058, -1000, -1000, -1000, 1045, -1000, -1000,
	2185, 2000, 241, -1000, -1000, 774, 1321, -1000, -1000, 2177,
	774, 774, 44295, -1000, -1000, 1476, 2263, 296, 45581, 841,
	1987, -1000, 1906, 1906, 1906, 45581, -1000, -1000, -1000, -1000,
	-1000, -1000, -438, 56, 419, -1000, -1000, -1000, 367, 44295,
	1695, -1000, 263, -1000, 1463, -1000, 44295, -1000, 1691, 1845,
	1258, 1258, -1000, -1000, -1000, 44295, 1754, -1000, -1000, -1000,
	-1000, 577, 2189, 295, -1000, -1000, -168, -1000, -1000, 271,
	263, 44938, 1258, 709, -1000, -1000, -1000, -1000, -1000, -434,
	1687, 561, 284, 339, 45581, 45581, 45581, 45581, 45581, 638,
	-1000, -1000, -1000, -1000, 248, -1000, -1000, 248, -1000, -1000,
	-1000, -1000, 325, 497, -1000, 45581, 45581, 632, -1000, -1000,
	-1000, 888, -1000, -1000, 888, -1000, -1000, -1000, -1000, -1000,
	2233, 45581, 45, -388, -1000, -383, 18565, -1000, -1000, -1000,
	-1000, 1061, 537, 1392, 19208, 19208, 17922, -85, 1152, 1152,
	26291, -1000, 18565, -1000, -1000, 18565, 18565, 818, -1000, 18565,
	975, -1000, 18565, -1000, -1000, -1000, 1385, 1626, 1626, 1626,
	1626, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1743, 18565, 18565, 18565, 1391, 340, -1000, -1000, -1000,
	-1000, -1000, 2427, -1000, 18565, -1000, 26291, 18565, 18565, 18565,
	-1000, -1000, -1000, 18565, 18565, -1000, -1000, 18565, 18565, -1000,
	18565, 18565, 18565, -1000, 18565, 18565, 18565, 18565, -1000, -1000,
	-1000, -1000, 18565, 18565, 18565, 18565, 18565, 18565, 18565, 18565,
	18565, 18565, -1000, -1000, 31435, 112, -149, 1328, 112, 1328,
	-1000, 17922, 12758, -1000, -1000, -1000, -1000, -1000, 18565, 18565,
	18565, 18565, 18565, 18565, -1000, -1000, -1000, 18565, 18565, -1000,
	18565, -1000, 18565, -1000, -1000, -1000, -1000, -1000, -1000, 735,
	-1000, 660, 660, 660, 44295, -1000, -1000, -1000, -1000, 1714,
	-1000, 2316, -1000, 2078, 2071, 2426, 2420, -1000, 23076, 2169,
	-1000, -1000, 44295, -285, -1000, 2119, 2253, 705, 705, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10814, 2331, 18565, 1980,
	44938, 136, -1000, 22433, 44295, 44938, 23076, 23076, 23076, 23076,
	23076, -1000, 2041, 2039, -1000, 2070, 2003, 2087, 45581, -1000,
	1672, 1391, 2363, 20499, 418, 18565, 25005, 1709, 23076, -1000,
	-1000, 23076, 45581, 10166, -1000, -1000, 40, 30, -1000, -1000,
	-1000, -1000, 3564, -1000, -1000, 1251, 2288, 2154, -1000, -1000,
	-1000, -1000, -1000, 1645, -1000, 1642, 1711, 1638, 240, -1000,
	1894, 2207, 774, 774, -1000, 1044, -1000, 1258, 1320, 1295,
	-1000, -1000, -1000, 548, -1000, 2268, 45581, 1979, 1978, 1977,
	-1000, -449, 1041, 1842, 1892, 18565, 1841, 2389, 1651, 44295,
	-1000, -1000, 44938, -1000, 262, -1000, 241, 44295, -1000, -1000,
	-1000, 388, 45581, -1000, 5450, -1000, -1000, -1000, 263, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 45581, 292, -1000, 1837,
	1367, -1000, -1000, 1900, -1000, -1000, -1000, -1000, 245, 373,
	244, 1294, 244, -1000, 45581, 589, 2000, 45581, -1000, -1000,
	-1000, 901, 901, -1000, -1000, 2195, -1000, 1258, 1626, 19208,
	19208, -1000, 717, -1000, 1754, -127, 1834, 1834, -1000, 1834,
	1836, -1000, 1834, 218, 1834, 215, 1834, -1000, -1000, 1391,
	1391, 1385, 1983, 1773, -1000, 1097, 18565, 2181, -1000, -1000,
	-1000, -1000, -1000, -28, 2166, 2160, 1626, -1000, 1831, 1817,
	18565, 1626, 1391, 1974, 1626, 1626, 1626, 1626, -1000, 1097,
	1385, 2150, 1385, 1626, 1626, 2139, 357, 1626, 1635, 1635,
	1635, 1635, 1635, 1385, 1385, 1385, 1385, 44295, -1000, -149,
	-1000, -1000, -194, -195, -1000, 1391, -149, 1681, 1391, -1000,
	1953, 1948, 2116, 1921, 1626, 2110, 1626, 1626, 1626, 1909,
	-1000, 2325, 2325, 2325, 1619, 1149, 45581, -1000, -1000, -1000,
	-1000, 2420, 2416, 1657, -1000, -1000, 130, 467, -1000, 2120,
	2253, -1000, 2387, 2129, 2381, -1000, -1000, -1000, -1000, -1000,
	1097, -1000, 2254, 1490, -1000, 805, 1621, -1000, -1000, 17279,
	1633, 2059, 626, 1619, 1748, 2622, 1961, 1976, 2326, -1000,
	-1000, -1000, -1000, 2019, -1000, 2012, -1000, -1000, 1800, -1000,
	-1000, 1452, 1391, 2013, 391, 23076, 1533, 1533, -1000, 614,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 943, 5288, 2450,
	-1000, 1293, -1000, 1257, 197, 1032, -1000, -1000, 774, 774,
	-1000, 883, 879, -1000, 45581, 1816, -1000, 380, 1289, 380,
	1031, -1000, 1029, -1000, -1000, -1000, -1000, 2015, 2093, -1000,
	-1000, -1000, -1000, 45581, -1000, -1000, 45581, 45581, 45581, 1815,
	2378, -1000, 18565, 1810, 790, 2091, 44295, 44295, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 495,
	774, -414, 360, 358, 774, 774, 774, -450, -1000, -1000,
	1617, 1509, -1000, -112, -1000, 18565, -1000, -1000, -1000, 1181,
	1181, -1000, 1800, -1000, -1000, -1000, 1453, -1000, -1000, -101,
	44295, 44295, 44295, 44295, -1000, 1011, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 717, 19208,
	1391, -1000, -1000, 380, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 18565, -1000, 18565, -1000, 1097, 18565,
	2331, 1288, 18565, 18565, -1000, 1028, 1005, 1626, -1000, -1000,
	-1000, 18565, -1000, -1000, -1000, -1000, -1000, 18565, -1000, -1000,
	-1000, 18565, 212, 1152, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1391, 389, -1000, -1000, -1000, -1000,
	2425, -1000, 1391, 18565, -1000, -1000, 18565, -1000, 18565, 18565,
	-1000, 18565, -1000, 18565, -1000, -1000, -1000, -1000, 18565, 1754,
	2061, 1754, 1754, 25005, -1000, -1000, 2416, 2408, 2372, 2108,
	2111, 2111, 2120, -1000, 2367, 2361, -1000, 1275, 2360, 1261,
	877, -1000, 44938, 18565, 136, -1000, 408, 44295, 136, 44295,
	-1000, 2406, -1000, -1000, 18565, 1809, -1000, 18565, -1000, -1000,
	-1000, -1000, -1000, -1000, 5908, 2420, 1533, -1000, -1000, 729,
	-1000, 18565, -1000, -1000, -1000, 3936, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1232, 1229, -1000, -1000, 1804, 18565,
	-1000, -1000, -1000, 1439, 1429, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1800, -1000, -1000, -1000, -1000, 388, -441,
	2030, 44295, 999, -1000, 1507, 1651, 342, 136, 1205, 774,
	774, 774, 985, 972, 30149, 1504, -1000, 44295, 459, -1000,
	388, -1000, -117, -123, 1626, -1000, -1000, 2287, -1000, -1000,
	12758, -1000, -1000, 1797, 1904, -1000, -1000, -1000, 313, -1000,
	-1000, 1626, 1626, 2001, 1391, -1000, 1626, 1626, 1414, 1407,
	-1000, 1626, 1385, 1828, -1000, 212, 1391, 1968, -1000, -1000,
	5908, -1000, -1000, 2406, 2356, 112, -1000, -1000, 260, 112,
	1097, 1806, 1626, 1749, 1451, 1626, 1626, 25648, -1000, 2353,
	2342, 30792, 30792, 735, 2408, -158, 18565, 18565, 2084, 986,
	-1000, -1000, -1000, -1000, 1203, 1202, -1000, 1187, -1000, 2449,
	-1000, 1097, -1000, 136, -1000, 609, 1621, -1000, 2331, 1097,
	44295, 1097, 140, 2406, -1000, 1626, -1000, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, -1000, -1000, 44295,
	1811, -1000, -1000, 2285, 1497, 55, -1000, 1488, -1000, -1000,
	137, -1000, 18565, -1000, 30149, 1163, 1162, -1000, -1000, -1000,
	-1000, -450, -1000, -1000, -1000, -1000, -1000, -1000, 418, 1649,
	-1000, 773, 44295, 45581, 1391, 337, -105, -1000, -1000, 18565,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18565, -1000,
	1391, 1967, -1000, -264, -1000, -415, 18565, -149, -1000, -1000,
	-149, -1000, 18565, -1000, -1000, 18565, -1000, 18565, -1000, -1000,
	1483, -1000, -1000, -1000, -1000, -1000, 1483, 1483, -1000, -158,
	-1000, 1628, -1000, 44295, 1097, 1522, -1000, 979, -1000, -1000,
	-1000, -1000, -1000, 44938, 1621, 44295, -1000, 1459, 1391, 1754,
	2331, -1000, 1438, -1000, 418, -1000, 1781, 1892, -1000, -1000,
	-1000, 16636, -1000, -1000, -1000, -1000, -1000, 196, -96, 12758,
	9518, 1400, -1000, -1000, 2010, -90, -108, 1626, 1385, -1000,
	-371, -1000, -1000, -1000, -1000, 139, -1000, -1000, 1522, -1000,
	-1000, 1406, 1324, 1290, 29506, -1000, -1000, -1000, -1000, -158,
	-1000, -1000, 2282, -1000, -1000, 1511, -1000, -1000, 25005, 43652,
	-1000, -83, 327, -96, 18565, 1780, 1391, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 31, -1000, -1000, -1000, -1000,
	-1000, 1900, -1000, 2005, -1000, -1000, -1000, -1000, 200, -391,
	-185, -191, -1000, -1000, 19208, -1000, 18565, -1000, 18565, -1000,
	18565, -1000, -1000, -1000, 44295, 1754, -1000, 1383, -1000, 3192,
	-206, 1963, -1000, -45, -1000, -1000, -1000, 936, 1144, -1000,
	-1000, -1000, -1000, -1000, -1000, 1664, 44295, -1000, 478, -1000,
	-1000, -101, -103, 865, -1000, -1000, -1000, -1000, -1000, 1236,
	1069, 1626, -1000, 44295, -1000, 43652, -201, 709, 5908, -1000,
	1937, 1922, 2424, -1000, -1000, -1000, -1000, -1000, -1000, -453,
	1378, 298, -1000, -106, 200, -1000, 18565, -1000, 18565, -1000,
	1391, -1000, -1000, 2256, 140, -1000, 2447, -1000, 2445, 718,
	718, -1000, 971, -453, -1000, -110, -1000, 1626, 1626, -1000,
	-207, -1000, -1000, -1000, -1000, -1000, 475, 1090, -1000, -1000,
	-1000, -1000, -1000, -1000, 5908, -1000, -1000, -1000, 274, 274,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 3023, 3022, 48, 7, 40, 39, 3021, 30, 89,
	208, 32, 195, 101, 3020, 3018, 3017, 3015, 3014, 3011,
	3009, 221, 219, 217, 3008, 3007, 3005, 3004, 3003, 3002,
	3001, 2999, 2998, 2997, 214, 166, 182, 2996, 2995, 2994,
	126, 175, 97, 80, 177, 2993, 2989, 85, 2988, 2987,
	2984, 173, 172, 171, 850, 2981, 168, 117, 55, 2979,
	2977, 2976, 2975, 2974, 2973, 2971, 2970, 2968, 2966, 2965,
	2962, 2958, 2957, 2946, 2944, 2943, 294, 2942, 2941, 21,
	2940, 87, 2938, 2932, 2930, 2929, 14, 2928, 2927, 19,
	46, 2922, 2921, 49, 2920, 2916, 2913, 2911, 2908, 18,
	2905, 27, 2901, 41, 2898, 2894, 124, 2892, 2891, 2890,
	50, 2887, 2883, 2863, 2861, 2851, 2849, 2847, 147, 2846,
	2843, 2841, 163, 201, 2835, 2834, 384, 111, 115, 2833,
	2832, 105, 183, 2830, 123, 2827, 2826, 2825, 155, 2816,
	237, 2812, 2807, 69, 77, 2804, 84, 2795, 2794, 11,
	38, 79, 10, 4, 5, 2785, 2784, 67, 83, 2782,
	116, 2780, 2777, 103, 196, 2774, 99, 93, 2771, 2769,
	16, 8, 2768, 2, 6, 3, 72, 2767, 2762, 133,
	2760, 2759, 2758, 98, 2756, 2755, 4511, 2748, 90, 139,
	107, 82, 2745, 54, 56, 2744, 2743, 2742, 2740, 2739,
	53, 2738, 2737, 2736, 145, 68, 156, 2735, 51, 71,
	57, 135, 2732, 47, 91, 2731, 143, 141, 2730, 2729,
	66, 42, 43, 2728, 106, 131, 122, 44, 92, 193,
	2721, 2720, 64, 76, 2719, 2717, 2715, 2713, 158, 2711,
	2705, 73, 2698, 59, 2696, 188, 2693, 22, 74, 65,
	178, 2686, 78, 2685, 2682, 70, 95, 75, 45, 2679,
	170, 2678, 58, 180, 129, 167, 2677, 2676, 2675, 2670,
	185, 322, 2667, 2665, 104, 161, 146, 154, 88, 2664,
	354, 2662, 2661, 96, 4249, 1881, 2660, 29, 192, 2657,
	2655, 6299, 142, 52, 25, 2654, 125, 2653, 2652, 2651,
	2650, 194, 160, 114, 179, 63, 2649, 2643, 2641, 17,
	2630, 2621, 2602, 2591, 2583, 2568, 149, 37, 36, 35,
	186, 138, 13, 100, 159, 81, 2567, 2566, 2564, 127,
	134, 2563, 164, 162, 132, 198, 2556, 165, 150, 119,
	2548, 94, 34, 2546, 2538, 2534, 2533, 184, 2528, 2521,
	2517, 2508, 157, 148, 121, 109, 2507, 102, 120, 152,
	151, 62, 2503, 60, 2497, 2495, 33, 176, 28, 2494,
	20, 112, 113, 2492, 5824, 174, 2491, 24, 339, 153,
	2486, 2482, 9, 12, 15, 2481, 2480, 2478, 2477, 140,
	2476, 2475, 2472, 2471, 26, 61, 23, 1, 118, 86,
	2470, 2469, 3030, 0, 137, 2438, 187,
}

//line sql.y:7770
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 400, 401, 401, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 252, 374,
	375, 375, 250, 250, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 404, 404, 181, 181, 179, 179, 180, 180, 255,
	255, 24, 25, 25, 265, 265, 264, 264, 264, 266,
	266, 266, 266, 304, 304, 304, 26, 26, 26, 26,
	26, 124, 124, 377, 377, 376, 370, 370, 369, 369,
	368, 373, 373, 372, 372, 371, 38, 39, 48, 48,
	48, 48, 49, 50, 378, 378, 343, 55, 55, 54,
	54, 54, 54, 54, 54, 56, 56, 52, 52, 51,
	51, 53, 53, 345, 345, 331, 331, 344, 344, 344,
	344, 344, 344, 344, 330, 330, 135, 135, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 393, 393, 393, 392, 392,
	231, 231, 231, 231, 231, 231, 231, 231, 145, 145,
	157, 157, 157, 157, 157, 143, 143, 144, 142, 142,
	142, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 156, 156, 152, 152, 152,
	153, 153, 153, 154, 154, 394, 394, 394, 394, 309,
	309, 309, 309, 312, 312, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 311, 311, 311, 311, 311, 313,
	313, 313, 313, 313, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	315, 315, 315, 315, 315, 315, 315, 315, 329, 329,
	316, 316, 324, 324, 325, 325, 325, 326, 326, 326,
	327, 327, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 323, 323, 322, 322, 322, 332, 357, 357, 356,
	356, 354, 354, 354, 354, 354, 354, 354, 354, 341,
	341, 351, 351, 351, 351, 351, 340, 340, 336, 336,
	336, 337, 337, 338, 338, 335, 335, 339, 339, 353,
	353, 352, 352, 333, 333, 334, 334, 359, 395, 395,
	395, 395, 395, 396, 396, 360, 385, 387, 387, 387,
	386, 386, 383, 384, 382, 382, 382, 382, 382, 81,
	81, 81, 278, 278, 279, 279, 349, 349, 348, 348,
	348, 350, 350, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 273, 273, 273, 381, 381, 381,
	381, 381, 381, 380, 380, 380, 346, 346, 346, 379,
	379, 57, 57, 214, 214, 398, 398, 399, 399, 399,
	45, 45, 45, 45, 45, 45, 44, 44, 44, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	46, 46, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 106, 106, 107, 107,
	107, 107, 109, 109, 109, 362, 362, 58, 58, 3,
	3, 169, 171, 172, 172, 170, 170, 170, 170, 170,
	170, 60, 60, 59, 59, 174, 173, 175, 175, 175,
	1, 1, 2, 2, 4, 4, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 367, 367, 367, 367, 367, 367, 328, 328,
	328, 361, 361, 363, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 112, 111, 111, 110, 113, 113,
	113, 113, 113, 113, 113, 113, 365, 365, 365, 61,
	61, 366, 317, 318, 319, 5, 6, 342, 364, 120,
	120, 28, 37, 37, 29, 29, 29, 29, 30, 30,
	62, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 272, 272, 281, 281, 271, 271, 296, 296,
	296, 274, 274, 274, 275, 275, 391, 391, 391, 268,
	268, 64, 64, 64, 297, 297, 297, 297, 66, 66,
	67, 68, 68, 299, 299, 300, 300, 69, 70, 82,
	82, 82, 82, 82, 82, 105, 105, 105, 15, 15,
	15, 15, 78, 78, 78, 14, 14, 65, 65, 72,
	388, 388, 389, 390, 390, 390, 390, 73, 75, 31,
	31, 31, 31, 31, 31, 130, 130, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 125,
	125, 125, 119, 119, 405, 76, 77, 77, 123, 123,
	123, 116, 116, 116, 122, 122, 122, 16, 16, 17,
	254, 254, 18, 18, 127, 127, 129, 129, 129, 129,
	129, 131, 131, 131, 131, 131, 131, 131, 126, 126,
	128, 128, 128, 128, 289, 289, 289, 288, 288, 163,
	163, 165, 164, 164, 166, 166, 167, 167, 167, 167,
	212, 212, 189, 189, 248, 248, 247, 247, 253, 253,
	249, 249, 249, 249, 256, 256, 168, 168, 168, 168,
	176, 176, 177, 177, 178, 178, 298, 298, 294, 294,
	294, 293, 293, 182, 182, 182, 184, 183, 183, 183,
	183, 185, 185, 187, 187, 186, 186, 188, 193, 193,
	192, 192, 190, 190, 190, 190, 191, 191, 191, 191,
	194, 194, 140, 140, 140, 140, 140, 140, 140, 155,
	155, 155, 155, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 238, 238, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 149, 83, 83, 83, 84, 84,
	85, 85, 85, 85, 85, 86, 86, 86, 86, 86,
	141, 141, 88, 88, 87, 87, 207, 207, 286, 286,
	89, 90, 90, 93, 93, 92, 91, 91, 97, 97,
	94, 94, 96, 96, 95, 98, 98, 99, 100, 100,
	269, 269, 195, 195, 203, 203, 203, 203, 196, 196,
	196, 196, 196, 196, 196, 204, 204, 204, 211, 205,
	205, 201, 201, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 160,
	160, 160, 160, 219, 219, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	148, 148, 161, 161, 161, 161, 162, 162, 162, 162,
	162, 162, 162, 306, 306, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 406, 406, 320, 320,
	320, 320, 202, 202, 202, 202, 202, 121, 121, 121,
	121, 121, 303, 303, 303, 307, 307, 307, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 308, 308, 217, 217, 117, 117, 215,
	215, 216, 218, 218, 213, 213, 213, 213, 198, 198,
	198, 220, 220, 221, 221, 101, 102, 102, 103, 103,
	222, 222, 224, 223, 223, 225, 226, 226, 226, 227,
	227, 228, 228, 228, 47, 47, 47, 47, 47, 42,
	42, 42, 42, 43, 43, 43, 43, 132, 132, 132,
	132, 134, 134, 133, 133, 79, 79, 80, 80, 80,
	138, 138, 139, 139, 139, 136, 136, 137, 137, 245,
	245, 229, 229, 229, 236, 236, 236, 232, 232, 234,
	234, 234, 235, 235, 235, 233, 242, 242, 244, 244,
	243, 243, 239, 239, 240, 240, 241, 241, 241, 237,
	237, 197, 197, 197, 197, 197, 246, 246, 246, 246,
	257, 257, 208, 208, 210, 210, 209, 209, 159, 258,
	258, 262, 259, 259, 263, 263, 263, 263, 251, 251,
	251, 260, 260, 261, 261, 290, 290, 290, 267, 267,
	280, 280, 276, 276, 277, 277, 270, 270, 282, 282,
	282, 74, 206, 206, 358, 358, 355, 285, 285, 287,
	287, 291, 291, 295, 295, 292, 292, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 402, 403, 301,
	302, 302, 302,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 3, 3, 2, 2, 2, 1, 2,
	2, 0, 1, 0, 2, 2, 5, 0, 1, 1,
	2, 1, 3, 2, 1, 1, 3, 3, 3, 0,
	1, 4, 3, 3, 4, 2, 0, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 4, 3, 1, 3, 1, 7, 6, 7,
	7, 8, 8, 0, 1, 5, 2, 1, 1, 1,
	0, 1, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 1, 2, 0, 1, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 2, 0, 2, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 8, 5, 5,
	4, 4, 4, 6, 5, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 3, 3, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 5, 5, 4,
	0, 2, 4, 4, 0, 1, 0, 1, 2, 3,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 3, 1,
	3, 4, 3, 7, 0, 3, 1, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 1,
	1, 2, 6, 5, 6, 6, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 6, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 7, 6, 6, 2, 2,
	1, 6, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 4, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 8, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 4, 6, 6, 6,
	8, 6, 6, 4, 4, 3, 4, 6, 6, 4,
	4, 4, 6, 8, 6, 4, 6, 6, 8, 10,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	6, 5, 9, 6, 9, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 6, 8, 10, 12, 14,
	6, 8, 8, 10, 12, 14, 6, 8, 10, 12,
	6, 8, 4, 4, 3, 4, 6, 6, 4, 6,
	4, 6, 8, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 5, 1, 2,
	2, 0, 3, 0, 2, 2, 1, 3, 0, 1,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 1, 0, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 4, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -400, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -402,
	11, 438, 256, 255, 28, -12, 500, 86, -401, 652,
	-245, -229, 22, 33, 29, -228, -224, -123, -229, 20,
	18, 7, -76, -405, -76, -76, 12, 13, -76, -343,
	-345, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -367, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 500, 503, -350, 223, 229, 230,
	225, 439, 123, 122, 75, -347, 361, 533, 622, -56,
	624, 102, 104, 623, 44, 235, 625, 626, 627, 540,
	628, 244, 629, 630, 631, 632, 638, 582, 639, 640,
	641, 124, 7, -76, -295, -291, 89, -284, 497, 247,
	531, 532, 296, 81, 41, 506, 358, 361, 533, 468,
	622, 307, 321, 315, 473, 474, 475, 342, 334, 498,
	534, 507, 299, 248, 284, 616, 332, 132, 624, 302,
	535, 262, 366, 367, 536, 368, 102, 310, 405, 637,
	301, 537, 635, 104, 623, 79, 467, 51, 619, 44,
	257, 330, 231, 326, 625, 285, 538, 509, 278, 123,
	120, 644, 36, 324, 50, 30, 634, 122, 49, 626,
	147, 539, 627, 540, 370, 349, 610, 48, 371, 263,
	541, 84, 268, 502, 305, 618, 372, 487, 325, 373,
	295, 633, 228, 542, 602, 594, 595, 374, 375, 611,
	543, 350, 354, 489, 544, 397, 472, 376, 598, 599,
	651, 52, 545, 546, 612, 121, 547, 78, 628, 80,
	319, 320, 548, 293, 246, 492, 493, 399, 346, 450,
	457, 458, 108, 109, 453, 110, 459, 111, 460, 461,
	462, 451, 112, 105, 452, 463, 464, 347, 348, 113,
	465, 107, 106, 454, 456, 114, 466, 244, 35, 377,
	499, 297, 58, 272, 400, 46, 352, 648, 45, 606,
	494, 549, 609, 345, 341, 447, 53, 550, 551, 552,
	553, 469, 629, 344, 318, 340, 643, 4, 290, 470,
	630, 62, 230, 356, 355, 357, 279, 396, 337, 554,
	555, 556, 251, 82, 557, 327, 21, 558, 559, 378,
	286, 560, 56, 561, 562, 403, 260, 563, 54, 631,
	39, 564, 265, 645, 632, 565, 566, 567, 568, 267,
	569, 380, 570, 596, 597, 379, 351, 353, 495, 274,
	381, 501, 571, 306, 323, 264, 636, 572, 252, 483,
	484, 485, 486, 617, 491, 490, 266, 271, 259, 404,
	253, 573, 574, 575, 576, 577, 300, 593, 578, 579,
	311, 638, 448, 43, 580, 581, 582, 583, 584, 294,
	289, 398, 407, 61, 83, 363, 585, 586, 615, 317,
	287, 587, 308, 55, 639, 640, 641, 281, 642, 476,
	477, 478, 479, 9, 649, 650, 471, 383, 124, 291,
	292, 47, 338, 273, 588, 303, 589, 328, 329, 343,
	316, 339, 309, 603, 275, 384, 449, 261, 590, 406,
	288, 359, 364, 304, 505, 488, 280, 385, 614, 504,
	480, 481, 336, 333, 282, 482, 591, 386, 236, 276,
	277, 592, 604, 387, 388, 298, 389, 390, 391, 392,
	393, 395, 394, 600, 601, 283, 503, 314, 331, 365,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 446, 234,
	-76, 234, -186, -291, 234, -260, 367, -281, 369, 382,
	377, 387, 375, -272, 378, 380, 274, -391, 397, 234,
	384, 222, 370, 379, 388, 389, 298, 395, 390, 394,
	283, 391, 392, 393, -374, 174, 627, 642, 132, 335,
	374, 372, 398, 606, 89, -297, 89, 90, 91, -284,
	309, -299, 314, -285, -374, -284, 312, -186, -82, 602,
	226, -301, -301, -125, 606, 608, -205, -140, 140, -155,
	-158, -146, -150, -199, -200, -201, -202, -156, -213, -250,
	163, 164, 171, 141, -211, -159, 26, 496, 440, 439,
	174, 31, -149, 217, 68, 69, 442, 143, 57, 11,
	415, 416, -157, 410, 417, 412, 467, 469, 470, 471,
	468, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 472, 444, 445, 115, 446, 105, 107, 106, 447,
	448, 449, 332, 494, 495, 489, 492, 493, 491, 490,
	347, 348, 450, 451, 452, 108, 109, 110, 111, 112,
	113, 114, 453, 456, 454, 455, 457, 458, 459, 464,
	465, 460, 461, 462, 463, 466, -85, -97, 522, 521,
	-98, -147, -148, -161, -162, -285, -291, 239, 409, 233,
	169, 438, -151, -144, -374, -284, 90, 91, -8, -209,
	408, 413, 414, 418, 411, 508, 510, 525, 526, 528,
	513, 518, 517, 520, 483, 484, 485, 486, 487, 488,
	594, 595, 596, 597, 598, 599, 600, 601, 89, -153,
	-152, -195, 92, 98, 103, 99, -397, 116, -402, 620,
	93, 94, 95, 96, 97, 117, 118, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 44,
	383, 383, -186, -76, -76, -76, -76, -222, -123, -224,
	-10, -8, -402, 8, -76, -8, -9, -13, -34, -36,
	527, -35, -291, -229, -245, 12, 159, 42, 50, -227,
	-228, -12, -8, -140, 19, 23, 24, -128, 165, -140,
	-291, -77, -128, -270, 238, -76, -76, -259, -304, 309,
	-263, 398, 606, 397, -251, -261, 89, -250, -260, 396,
	-344, 156, -330, -334, -285, 249, -360, 245, -186, -353,
	-352, -285, -402, -124, -280, 235, 243, 242, 133, -378,
	136, 291, 409, 233, -51, -52, -53, -260, 173, 626,
	-106, 266, 270, 87, 87, -334, -333, -332, -379, 270,
	249, -359, -351, 241, 250, -340, 242, 243, -335, 235,
	134, -379, -335, 240, 250, 245, 249, 270, 270, 124,
	270, 124, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 265, -341, 148, -341, 504, 504, -347, -379, 245,
	235, -379, -379, 241, -282, -335, 237, 25, 237, 35,
	35, -341, -341, -341, -260, 173, -341, -341, -341, -341,
	278, 278, -341, -341, -341, -341, -341, -341, -341, -341,
	-341, -341, -341, -341, -341, -341, -341, -341, -341, 234,
	-378, -132, 394, 298, 81, -54, 280, -37, -186, -280,
	235, 236, -378, 267, -186, 218, -186, -274, 156, 15,
	-274, -271, 383, 381, 368, 373, -274, -274, -274, -274,
	281, 366, -336, 235, 35, 246, 383, 281, 366, 281,
	282, 281, 282, 376, 386, 281, -296, 14, 159, 409,
	371, 375, 274, 234, 275, 236, 385, 282, -296, 93,
	-275, 156, 383, 277, -274, -274, -302, -402, -287, -285,
	-283, 227, 23, 139, 25, 27, 142, 174, 127, 19,
	143, 37, 229, 335, 245, 173, 241, 439, 222, 72,
	508, 410, 412, 408, 415, 441, 442, 409, 369, 31,
	13, 510, 28, 255, 24, 38, 167, 224, 146, 511,
	258, 26, 256, 115, 118, 513, 22, 75, 250, 14,
	243, 40, 16, 514, 515, 17, 239, 238, 159, 235,
	70, 11, 217, 29, 155, 66, 516, 134, 517, 518,
	519, 520, 128, 68, 156, 20, 646, 413, 414, 33,
	607, 496, 269, 169, 73, 59, 608, 140, 411, 521,
	522, 116, 523, 119, 76, 613, 136, 18, 71, 42,
	524, 270, 525, 240, 647, 526, 401, 527, 157, 225,
	438, 69, 158, 620, 528, 621, 233, 382, 8, 443,
	32, 254, 242, 126, 67, 529, 234, 145, 444, 445,
	237, 129, 117, 7, 133, 34, 12, 74, 77, 416,
	417, 418, 57, 125, 500, 144, 15, 530, 402, 138,
	-374, 609, -302, -302, 32, 90, 237, -285, -78, -285,
	93, -15, -11, -22, -21, -23, 148, -130, 383, -118,
	174, 627, 610, 611, 612, 609, 380, 617, 615, 613,
	281, 614, 87, 136, 138, 139, 4, -140, 155, -196,
	148, 149, 150, 151, 152, 153, 154, 159, 140, 142,
	156, -238, 137, 160, 161, 162, 163, 164, 165, 166,
	168, 167, 169, 170, 157, 158, 173, 220, 221, -150,
	-150, -150, -150, -211, -402, -402, -402, -150, -269, -402,
	-402, -150, -402, -402, -402, -217, -140, -402, -402, -406,
	-402, -406, -406, -320, -402, -320, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, 218, -402, -402, -402, -402, -402, -320, -320,
	-320, -320, -320, -402, -402, -402, -402, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, 103, 98, 92,
	-213, 99, 93, -374, -284, -291, -8, -9, -205, -402,
	-301, -388, -389, -189, -186, -402, 298, -285, -285, 267,
	-227, -12, -8, -222, -228, -224, -8, -76, -116, -129,
	63, 64, -131, 24, 38, 67, 65, 23, -403, 88,
	-403, -245, -403, 87, -36, -248, 86, 61, 43, 93,
	93, 87, 21, -223, -225, -140, 14, -289, 4, -288,
	25, -285, 93, 218, 101, 14, -187, 29, -186, -270,
	-270, 87, 309, 89, -265, -264, 399, 401, 148, -290,
	-285, 93, 31, 88, 87, -186, -309, -312, -314, -313,
	-315, -310, -311, 332, 333, 174, 336, 338, 339, 340,
	341, 342, 343, 344, 345, 346, 349, 32, 257, 328,
	329, 330, 331, 350, 351, 352, 353, 354, 355, 356,
	357, 315, 334, 498, 316, 317, 318, 319, 320, 321,
	323, 324, 325, 326, 327, -375, -374, 86, 88, 87,
	-316, 86, -140, -132, 234, -374, 235, 235, 235, -76,
	438, -341, -341, -341, 265, 19, -44, -41, -367, 18,
	-40, -41, 227, 120, 121, 224, 86, -330, 86, -339,
	-375, -374, 86, 134, 240, 133, -338, -335, -338, -339,
	-374, -213, -374, 134, 134, -374, -374, -256, -285, -256,
	-256, 23, -256, 23, -256, 23, 95, -285, -256, 23,
	-256, 23, -256, 23, -256, 23, -256, 23, 31, 78,
	79, 80, 31, 82, 83, 84, -213, -374, -374, -213,
	-330, -213, -186, -374, -260, 95, 95, 95, -341, -341,
	95, 93, 93, 93, -341, -341, 95, 93, -293, -291,
	93, 93, -380, 251, 295, 297, 95, 95, 95, 95,
	31, 93, -381, 31, 634, 633, 635, 636, 637, 93,
	95, 31, 95, 31, 95, -285, 86, -186, -138, 285,
	222, 224, 227, 76, 93, 299, 303, 304, 148, 44,
	87, 237, 234, -374, -276, 239, -276, -285, -292, -291,
	-283, 93, -140, -337, 14, 159, -296, -296, -274, -186,
	-337, -296, -274, -186, -274, -274, -274, -274, -296, -296,
	-296, -274, -291, -291, -186, -186, -186, -186, -186, -186,
	-186, -302, -275, -274, 609, 93, -268, 14, 76, -302,
	-302, -300, 312, 346, 603, 604, 605, 87, 500, -179,
	-186, 609, 609, 609, 609, 609, 609, -140, -140, -140,
	-140, 523, -203, 116, 140, 117, 118, -158, -204, -209,
	-211, 100, 159, 142, 156, -238, -146, -150, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -303, -285, 93, 174, -154, -153, 99, -397, -154,
	-126, -128, -140, -140, -374, -140, -285, -126, -126, -140,
	-215, -216, 144, -213, -140, -403, -403, 95, 99, 165,
	-122, 24, 38, -122, -122, -122, -122, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -122, -285, -285,
	-115, -114, 420, 421, 422, 423, 425, 426, 427, 430,
	431, 435, 436, 419, 437, 424, 429, 432, 433, 434,
	428, 331, -140, -140, -140, -140, -140, -140, -83, -140,
	127, 128, 129, -205, -140, -146, -140, -140, -140, -403,
	-140, -140, -140, -206, -205, -373, -372, -371, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -403, -140, -160, -144, 95, -252, 99, 90, -140,
	-140, -127, -126, -287, -292, -283, -284, -126, -127, -127,
	-126, -126, -140, -140, -140, -140, -140, -140, -140, -140,
	-403, -140, -140, -140, -140, -140, 218, -245, -403, -205,
	87, -390, 401, 402, 607, -294, 270, -293, 25, -206,
	93, 14, -254, 77, -285, -227, -227, 63, 64, 59,
	-126, -131, -403, -35, 25, -247, -285, 62, 93, -321,
	-260, 358, 359, 174, -140, -140, 87, -226, 27, 28,
	-186, -288, 165, -292, -186, -255, 270, -186, -164, -166,
	-167, -168, -189, -212, -402, -169, 519, 516, 14, -179,
	-180, -188, -291, -263, -304, -265, 87, 400, 402, 403,
	76, 119, -140, -322, 173, -349, -348, -347, -330, -332,
	-333, -334, 88, -322, -326, 364, 363, -316, -316, -316,
	-316, -316, -321, -321, -321, -321, 86, 86, -316, -316,
	-316, -316, -324, 86, -324, -324, -325, 86, -325, -360,
	-140, -357, -356, -354, -355, 244, 102, 592, 548, 500,
	540, 582, 77, -352, -226, 95, -403, -138, -277, 239,
	-358, -355, -374, -374, -374, -277, 89, 93, 89, 93,
	89, 93, -107, -58, -1, 646, 647, 648, 87, 19,
	-331, -330, -57, 295, -363, -364, 270, -359, -353, -339,
	134, -338, -339, -339, -374, 87, 29, 124, 124, 124,
	124, 500, 224, 32, -278, 539, 140, 592, 548, -330,
	-57, 237, 237, -303, -303, -303, 93, 93, -273, 642,
	-179, -134, 287, 148, 276, 276, 234, 234, 289, -186,
	300, 302, 301, 299, 303, 304, 23, 23, 23, 288,
	290, 292, 278, -186, -186, -276, 76, -181, -186, 26,
	-291, -186, -274, -274, -186, -274, -274, -186, -285, -118,
	401, 87, 500, 22, -119, 22, -402, 116, 117, 118,
	-204, -146, -150, -146, 139, 258, 87, -403, 25, 87,
	77, -403, 87, -403, -403, 87, 14, -218, -216, 146,
	-140, -403, 87, -403, -403, -403, -205, -140, -140, -140,
	-140, -403, -403, -403, -403, -403, -403, -403, -403, -403,
	-403, -205, 87, 87, 14, -307, 25, -403, -403, -403,
	-403, -403, -217, -403, 14, -403, 77, 87, 159, 87,
	-403, -403, -403, 87, 87, -403, -403, 87, 87, -403,
	87, 87, 87, -403, 87, 87, 87, 87, -403, -403,
	-403, -403, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, -403, -90, 524, -403, -403, 87, -403, 87,
	-403, -402, 218, -403, -403, -403, -403, -403, 87, 87,
	87, 87, 87, 87, -403, -403, -403, 87, 87, -403,
	87, -403, 87, -287, -403, -389, 606, 402, -193, -192,
	-190, 74, 238, 75, -402, -293, -403, -154, -252, -253,
	-252, -198, -285, 95, 99, -229, -163, -165, 14, -131,
	-211, 88, 87, -321, -233, -239, -271, -285, 93, 174,
	-323, 174, -323, 358, 359, -225, 218, -194, 15, -197,
	32, 57, -11, -402, -402, 32, 87, -182, -184, -183,
	-185, 66, 70, 72, 67, 68, 69, 73, -298, 25,
	-164, -9, -8, -402, -402, -402, -186, -179, -404, 14,
	77, -404, 87, 218, -264, -266, 404, 401, 407, -374,
	93, -106, 87, -347, -334, -230, -135, 40, -327, 365,
	-321, 507, -321, -329, 93, -329, 95, 95, 88, -47,
	-42, -43, 33, 81, -354, -341, 93, 39, -341, -341,
	-285, 88, -226, -134, -186, 140, 76, -358, -358, -358,
	-291, -2, 645, 651, 134, 86, 368, 18, -247, 87,
	88, -214, 296, 88, -108, -285, 88, 86, -339, -339,
	-285, -402, 234, 31, 31, 592, 548, 539, -57, -214,
	-213, -374, -322, 644, 643, 88, 236, 294, -139, 415,
	-136, 93, 89, -186, -186, -186, -186, -186, 227, 224,
	-398, 305, -398, 279, 237, -179, -186, 87, -81, 253,
	248, -296, -296, 33, -186, 401, 618, 616, -140, 139,
	258, -158, -150, -128, 497, -305, 174, 332, 257, 330,
	326, 346, 337, 363, 328, 364, 325, 324, 323, -305,
	-303, -205, -140, -140, 147, -140, 145, -140, -403, -403,
	-403, -403, -403, -222, -140, -140, -140, -403, 174, 332,
	14, -140, -303, -140, -140, -140, -140, -140, -371, -140,
	-205, -140, -205, -140, -140, -140, -140, -140, -372, -372,
	-372, -372, -372, -205, -205, -205, -205, -402, -285, -93,
	-92, -91, 575, 238, -90, -160, -93, -160, -127, -287,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-190, -335, -335, -335, -256, 87, -267, 22, 14, 57,
	57, -163, -194, -164, -131, -285, -236, 602, -242, 46,
	-240, -241, 47, -237, 48, 56, -323, -323, 165, -227,
	-140, -257, 76, -258, -262, -213, -208, -210, -209, -402,
	-246, -403, -285, -256, -258, -166, -167, -167, -166, -167,
	66, 66, 66, 71, 66, 71, 66, -183, -291, -403,
	-403, -9, -9, -140, -294, 77, -164, -164, -188, -291,
	165, 401, 405, 406, -347, -396, 116, 140, 31, 76,
	361, 102, -394, 173, 536, 587, 592, 548, 540, 582,
	-395, 240, 133, 134, 252, 25, 41, 88, 87, 88,
	87, 88, 87, -279, -278, -43, -42, -341, -341, 95,
	-374, 93, 93, 236, 26, -186, 76, 76, 76, -109,
	649, 95, 86, -3, 81, -140, 86, 19, -330, -213,
	-365, -317, -366, -318, -319, -5, -6, -342, -112, 57,
	102, -61, 44, 235, 629, 630, 124, -402, 642, -357,
	-247, -361, -363, -186, -143, -402, -142, -144, -151, 163,
	164, -214, -186, -133, 285, 293, 86, -137, 90, -377,
	77, 276, 361, 276, -399, 306, 93, -399, -186, -81,
	-47, -186, -274, -274, 33, -374, -403, -158, -150, -402,
	-308, 506, -316, -316, -316, -325, -316, 320, -316, 320,
	-316, -403, -403, -403, 87, -403, 22, -403, -140, 87,
	-117, 443, 87, 87, -403, 86, 86, -140, -403, -403,
	-403, 87, -403, -403, -403, -403, -403, 87, -403, -403,
	-403, 87, -306, 593, -403, -403, -403, -403, -403, -403,
	-403, -403, -403, -403, -89, -286, -285, -90, 557, 557,
	-403, -90, -219, 87, -403, -403, 87, -403, 87, 87,
	-403, 87, -403, 87, -403, -403, -403, -403, 87, -191,
	22, -191, -191, -403, -252, -186, -194, -220, 16, -233,
	51, 338, -244, -243, 55, 47, -241, 19, 49, 19,
	30, -257, 87, 148, 87, -403, -403, 87, 57, 218,
	-403, -194, -177, -176, 76, 77, -178, 76, -176, 66,
	66, -248, -403, -403, 87, -255, -164, -194, -194, 218,
	116, -402, -145, -157, -143, 12, 93, 93, -374, -393,
	633, 634, 31, 95, -341, -341, 134, 134, -186, 86,
	-321, 93, -321, 95, 95, 31, 82, 83, 84, 31,
	78, 79, 80, -186, -186, -186, -186, -362, 86, 19,
	-140, 86, 148, 88, -247, -247, 272, 159, -341, 627,
	278, 278, -341, -341, -341, -111, -110, 649, 88, -403,
	87, -328, 500, 503, -140, -152, -152, -248, 88, -370,
	500, -376, -285, -285, -285, -285, 95, 97, -146, -403,
	-321, -140, -140, -140, -227, 93, -140, -140, 95, 95,
	-403, -140, -205, -140, -403, -174, -173, -175, 610, 116,
	31, -305, -403, -207, 270, -96, -95, -94, 14, -403,
	-140, -140, -140, -140, -140, -140, -140, -402, 66, 18,
	16, -402, -402, -294, -220, -221, 17, 19, -234, 53,
	-232, 52, -232, -243, 19, 19, 93, 19, 93, 134,
	-262, -140, -210, 57, -11, -285, -208, -285, -222, -140,
	86, -140, -154, -194, -194, -140, -200, 467, 469, 470,
	471, 468, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 472, 446, 105, 107, 106, 447, 448, 449,
	332, 494, 495, 489, 492, 493, 491, 490, 347, 348,
	450, 451, 452, 108, 109, 110, 111, 112, 113, 114,
	453, 456, 454, 457, 458, 459, 464, 465, 460, 461,
	462, 463, 466, 483, 484, 485, 486, 487, 488, 594,
	595, 596, 597, 598, 599, 600, 601, 93, 93, 86,
	-140, 88, 88, -248, -361, -58, 88, -247, 95, 88,
	273, -209, -402, 93, -341, -341, -341, 95, 95, -293,
	-403, 87, -285, -395, -363, 504, 504, -403, 25, -369,
	-368, -287, 86, 77, -121, 159, 500, -403, -403, 87,
	-403, -403, -403, 88, 88, -403, -403, -403, 87, -403,
	-173, -175, -403, 76, -154, -222, 19, -93, 295, 297,
	-93, -403, 87, -403, -403, 87, -403, 87, -403, -403,
	-249, -403, -285, 240, 19, 19, -249, -249, -193, -221,
	-103, -102, -101, 530, -140, -205, -235, 54, 76, 119,
	93, 93, 93, 12, -208, 218, -227, -247, -171, 368,
	-222, -403, -247, 88, 25, 88, 651, 134, 88, -209,
	-120, -402, 269, -293, 93, 93, -110, -113, -11, 87,
	148, -247, -186, -403, 498, 73, 501, -140, -205, -403,
	76, 511, 610, -88, -87, -84, 621, 647, -205, -90,
	-90, -140, -140, -140, 87, -403, -403, -403, -103, 87,
	-100, -99, -285, 76, 119, -258, -285, 88, -403, -402,
	-227, 88, -231, -11, 86, -3, 269, -317, -366, -318,
	-319, -5, -6, -342, -79, 500, -368, -346, -287, 93,
	95, 88, 62, 499, 502, -403, -403, -86, 142, 619,
	590, -141, -152, -149, 217, -403, 87, -403, 87, -403,
	87, -285, 240, -101, 87, 25, -294, -172, -170, -285,
	554, -386, -385, 496, -396, -392, 116, 140, 102, -394,
	592, 548, 125, 126, -79, -140, 86, -403, -80, 284,
	606, -377, 62, -86, 620, 568, 542, 568, 542, -140,
	-140, -140, -99, -402, -403, 87, 22, -309, -60, 565,
	-383, -384, 76, -387, 374, 564, 585, 116, 93, 88,
	-247, 245, -370, 500, 139, -403, 87, -403, 87, -403,
	-89, -170, 561, -322, -154, -384, 76, -383, 76, 13,
	12, -4, 650, 88, 286, 501, -86, -140, -140, -403,
	-59, 26, -171, -382, 253, 248, 251, 32, -382, 95,
	-4, 502, -403, -403, 565, 247, 31, 116, -154, -174,
	-173, -173,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 69, 71, 72, 834,
	834, 834, 0, 834, 0, 0, 834, -2, -2, 834,
	1443, 0, 834, 0, 0, -2, 762, 768, 0, 770,
	-2, 0, 0, 779, 1989, 1989, 829, 0, 0, 0,
	0, 0, 834, 834, 834, 834, 1300, 49, 834, 0,
	84, 85, 785, 786, 787, 64, 0, 1987, 1, 3,
	70, 74, 0, 0, 0, 57, 1309, 0, 77, 0,
	0, 838, 0, 836, 0, 1426, 834, 834, 0, 116,
	117, 0, 0, 0, -2, 120, -2, 149, 150, 151,
	0, 156, 576, 503, 555, 501, 540, -2, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 379, 379, 0, 0, -2, 489, 489, 489,
	1428, 0, 0, 0, 537, 441, 379, 379, 379, 0,
	379, 379, 379, 379, 0, 0, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 1327, 155, 1444, 1441, 1442, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
	1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947,
	1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977,
	1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 0,
	1420, 0, 689, 935, 0, 751, 751, 0, 751, 751,
	751, 751, 0, 0, 0, 701, 0, 0, 0, 0,
	748, 0, 717, 718, 0, 748, 0, 724, 754, 0,
	729, 751, 751, 732, 1990, 0, 1990, 1990, 1411, 0,
	745, 743, 757, 758, 39, 761, 764, 765, 766, 767,
	769, 0, 774, 777, 1437, 1438, 0, 792, 48, 1692,
	784, 797, 798, 0, 830, 831, 44, 1079, 0, 957,
	962, 973, 988, 989, 990, 991, 992, 994, 995, 996,
	0, 0, 0, 0, 1001, 1002, 0, 0, 0, 0,
	0, 1060, 1010, 0, 0, 0, 0, 1275, 0, 0,
	1236, 1236, 1094, 1236, 1238, 1238, 1644, 1779, 1787, 1904,
	1607, 1612, 1613, 1614, 1897, 1898, 1899, 1900, 1938, 1939,
	1943, 1704, 0, 0, 0, 1986, 1741, 1749, 1750, 1773,
	1870, 1924, 1624, 1768, 1836, 1701, 1723, 1724, 1852, 1853,
	1745, 1746, 1727, 1739, 1742, 1730, 1731, 1733, 1735, 1740,
	1747, 1753, 1732, 1752, 1751, 0, 1728, 1729, 1734, 1744,
	1748, 1736, 1737, 1738, 1743, 1754, 0, 0, 0, 0,
	0, 1175, 1176, 1177, 1178, 0, 0, 0, 0, 0,
	0, 0, 275, 276, -2, -2, 42, 43, 1078, 1398,
	1238, 1238, 1238, 1238, 1238, 1020, 1021, 1022, 1023, 1024,
	1048, 1049, 1055, 1056, 1847, 1848, 1849, 1850, 1685, 1933,
	1693, 1694, 1831, 1832, 1706, 1707, 1961, 1962, -2, 221,
	222, 223, 224, 225, 226, 227, 0, 217, 0, 0,
	280, 281, 277, 278, 279, 1062, 1063, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273, 274, 1989,
	0, 807, 0, 0, 0, 0, 0, 1309, 0, 1301,
	1300, 62, 0, 834, -2, 0, 0, 0, 0, 46,
	0, 51, 894, 76, 75, 1349, 0, 0, 0, 58,
	1310, 66, 68, 1311, 0, 839, 840, 0, 870, 874,
	0, 835, 0, 0, 1427, 1426, 1426, 101, 0, 0,
	1402, 113, 114, 115, 0, 0, 1408, 1409, 1413, 1414,
	0, 0, 167, 168, 0, 40, 406, 0, 163, 0,
	399, 340, 0, 1327, 0, 0, 0, 0, 0, 834,
	0, 1421, 144, 145, 152, 153, 154, 379, 379, 379,
	552, 0, 0, 155, 155, 510, 511, 512, 0, 0,
	-2, 404, 0, 490, 0, 0, 393, 393, 397, 395,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 380, 0, 550, 551, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 1429, 1430, 0, 527,
	528, 0, 0, 0, 379, 379, 0, 0, 0, 0,
	379, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 1340, 0, 0, 0, -2, 0, 681, 0, 0,
	0, 1422, 1422, 0, 688, 0, 690, 691, 0, 0,
	692, 0, 748, 748, 746, 747, 694, 695, 696, 697,
	751, 0, 0, 388, 389, 390, 748, 751, 0, 751,
	751, 751, 751, 748, 748, 748, 751, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 754, 751, 0,
	725, 0, 726, 727, 730, 731, 733, 1991, 1992, 1439,
	1440, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1990, 1990, 737, 741, 1412, 763, 775, 778, 795, 793,
	794, 796, 788, 789, 790, 791, 0, 809, 810, 815,
	0, 0, 0, 0, 821, 822, 823, 0, 0, 826,
	827, 828, 0, 0, 0, 0, 0, 955, 0, 0,
	1068, 1069, 1070, 1071, 1072, 1073, 1074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 974, 975, 0, 0, 0, 997,
	998, 999, 1000, 1003, 0, 0, 0, 1008, 1009, 0,
	0, 0, 0, 0, 0, 0, 1276, 0, 0, 1092,
	0, 1093, 1095, 1096, 0, 1097, 844, 844, 844, 844,
	844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1432, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 854, 0, 0, 854, 854, 0, 0, 210, 211,
	212, 213, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 229, 230,
	231, 232, 282, 1284, -2, 0, 1078, 0, 0, 0,
	45, 799, 800, 0, 918, 1432, 0, 0, 850, 0,
	56, 65, 67, 1309, 60, 1309, 0, 856, 0, 0,
	-2, -2, 857, 863, 864, 865, 866, 867, 53, 1988,
	54, 0, 73, 0, 47, 0, 0, 0, 0, 352,
	1352, 0, 0, 1302, 1303, 1306, 0, 871, 1785, 875,
	0, 877, 878, 0, 837, 0, 99, 0, 934, 0,
	0, 0, 0, 1410, 103, 104, 0, 0, 0, 363,
	1415, 1416, 1417, -2, 386, 0, 363, 347, 290, 291,
	292, 340, 294, 340, 340, 340, 340, 352, 352, 352,
	352, 323, 324, 325, 326, 327, 0, 0, 309, 340,
	340, 340, 340, 330, 331, 332, 333, 334, 335, 336,
	337, 295, 296, 297, 298, 299, 300, 301, 302, 303,
	342, 342, 342, 344, 344, 0, 41, 0, 367, 0,
	1306, 0, 0, 1340, 1424, 1434, 0, 0, 0, 1424,
	122, 0, 0, 0, 553, 587, 504, 541, 554, 0,
	507, 508, -2, 0, 0, 489, 0, 491, 0, 387,
	0, -2, 0, 397, 0, 393, 397, 394, 397, 385,
	398, 531, 532, 533, 0, 535, 536, 617, 904, 0,
	0, 0, 0, 0, 623, 624, 625, 0, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 542, 543,
	544, 545, 546, 547, 548, 549, 0, 0, 0, 0,
	491, 0, 538, 0, 0, 443, 444, 445, 0, 0,
	448, 449, 450, 451, 0, 0, 454, 455, 456, 921,
	922, 457, 458, 483, 484, 485, 459, 460, 461, 462,
	463, 464, 465, 477, 478, 479, 480, 481, 482, 466,
	467, 468, 469, 470, 471, 474, 0, 137, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1422, 0, 0, 0, 0, 853, 936, 1445,
	1446, 752, 753, 0, 391, 392, 751, 751, 698, 738,
	0, 751, 702, 739, 703, 705, 704, 706, 719, 720,
	751, 709, 749, 750, 710, 711, 712, 713, 714, 715,
	716, 734, 721, 722, 723, 755, 0, 759, 760, 735,
	736, 0, 776, 780, 781, 782, 783, 0, 0, 812,
	95, 817, 818, 819, 820, 832, 825, 1080, 952, 953,
	954, 0, 956, 959, 0, 1064, 1066, 961, 963, 1075,
	1076, 1077, 0, 0, 0, 0, 0, 967, 971, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 993, 1252, 1253, 1254, 1012, 283, 284, 0, 1013,
	0, 868, 0, 0, 0, 1079, 1014, 0, 0, 0,
	1282, 1279, 0, 0, 0, 1237, 1239, 0, 0, 0,
	0, 845, 846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1255, 0, 0, 0, 0, 0, 1275, 0,
	1015, 1016, 1017, 0, 0, 0, 0, 0, 0, 1135,
	0, 0, 0, 0, 1433, 0, 132, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1179, 1180, 1181, 1182, 38, 0,
	0, 0, 855, 1286, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1204, 0, 0, 0, 0, 0, 0, 0, 1396, 0,
	0, 802, 803, 805, 0, 938, 0, 919, 0, 0,
	808, 0, 849, 0, 852, 59, 61, 861, 862, 0,
	879, 858, 55, 50, 0, 0, 896, 1350, 352, 1372,
	0, 361, 361, 358, 1312, 1313, 0, 1305, 1307, 1308,
	78, 876, 872, 0, 950, 0, 0, 933, 0, 882,
	884, 885, 886, 916, 0, 889, 0, 0, 0, 0,
	0, 97, 935, 1403, 0, 102, 0, 0, 107, 108,
	1404, 1405, 1406, 1407, 0, 576, -2, 438, 169, 171,
	172, 173, 164, -2, 350, 348, 349, 293, 352, 352,
	317, 318, 319, 320, 321, 322, 0, 0, 310, 311,
	312, 313, 304, 0, 305, 306, 307, 0, 308, 405,
	0, 1314, 368, 369, 371, 379, 0, 374, 375, 0,
	379, 379, 0, 400, 401, 0, 1306, 1331, 0, 0,
	0, 1435, 1434, 1434, 1434, 0, 157, 158, 159, 160,
	161, 162, 612, 0, 0, 588, 610, 611, 155, 0,
	0, 165, 493, 492, 0, 644, 0, 403, 0, 0,
	397, 397, 382, 383, 534, 0, 0, 619, 620, 621,
	622, 0, 0, 0, 520, 432, 0, 521, 522, 491,
	493, 0, 0, 363, 446, 447, 452, 453, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 568, 569, 570, 495, 574, 571, 495, 575, 1328,
	1329, 1330, 0, 0, 682, 0, 0, 429, 93, 1423,
	687, 748, 708, 740, 748, 700, 707, 728, 772, 816,
	0, 0, 0, 0, 824, 0, 0, 960, 1065, 1067,
	964, 0, 968, 972, 0, 0, 0, 0, 0, 0,
	0, 1061, 0, 1083, 1084, 0, 0, 0, 1280, 0,
	0, 1090, 0, 1240, 1241, 1098, 0, 0, 0, 0,
	0, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1300, 0, 0, 0, 0, 0, 1119, 1120, 1121,
	1122, 1123, 0, 1125, 0, 1126, 0, 0, 0, 0,
	1133, 1134, 1136, 0, 0, 1139, 1140, 0, 0, 1141,
	0, 0, 0, 1145, 0, 0, 0, 0, 1154, 1155,
	1156, 1157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 1169, 0, 1043, 0, 0, 1043, 0,
	1081, 854, 0, 1242, 1243, 1244, 1245, 1246, 0, 0,
	0, 0, 0, 0, 1202, 1203, 1205, 0, 0, 1208,
	0, 1210, 0, 1286, 1397, 801, 804, 806, 892, 939,
	940, 0, 0, 0, 0, 920, 1431, 847, 848, 851,
	898, 0, 1288, 0, 0, 879, 950, 880, 0, 859,
	52, 895, 0, 1354, 1353, 1366, 1379, 361, 361, 355,
	356, 362, 357, 359, 360, 1304, 0, 1309, 0, 1390,
	0, 0, 1382, 0, 0, 0, 0, 0, 0, 0,
	0, 923, 0, 0, 926, 0, 0, 0, 0, 917,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 91,
	92, 0, 0, 0, 105, 106, 0, 0, 112, 364,
	365, 146, 155, 440, 170, 413, 0, 0, 289, 351,
	314, 315, 316, 0, 338, 0, 0, 0, 434, 118,
	1318, 1317, 379, 379, 370, 0, 373, 0, 0, 0,
	1436, 341, 402, 0, 136, 0, 0, 0, 0, 0,
	142, 582, 0, 0, 589, 0, 0, 0, 502, 0,
	513, 514, 0, 616, -2, 678, 367, 0, 381, 384,
	905, 0, 0, 515, 0, 518, 519, 433, 493, 524,
	525, 539, 526, 475, 476, 473, 0, 0, 1341, 1342,
	1347, 1345, 1346, 123, 560, 562, 561, 565, 0, 0,
	497, 0, 497, 558, 0, 429, 1314, 0, 686, 430,
	431, 751, 751, 811, 96, 0, 814, 0, 0, 0,
	0, 965, 969, 869, 0, 1273, 340, 340, 1260, 340,
	344, 1263, 340, 1265, 340, 1268, 340, 1271, 1272, 0,
	0, 0, 0, 0, 1089, 1283, 0, 0, 1099, 1100,
	1101, 1102, 1103, 1277, 0, 0, 0, 1118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	0, 0, 0, 0, 0, 0, 1213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1038, 1042, 0,
	1044, 1045, 0, 0, 1171, 0, 0, 1183, 0, 1287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	941, 946, 946, 946, 0, 0, 0, 1418, 1419, 1289,
	1290, 950, 1291, 881, 860, 897, 1372, 0, 1365, 0,
	-2, 1374, 0, 0, 0, 1380, 353, 354, 873, 79,
	951, 82, 0, 1390, 1399, 0, 1381, 1392, 1394, 0,
	0, 0, 1386, 0, 950, 883, 912, 914, 0, 909,
	924, 925, 927, 0, 929, 0, 931, 932, 894, 888,
	890, 0, 0, 0, 99, 0, 950, 950, 98, 0,
	937, 109, 110, 111, 439, 174, 179, 0, 0, 0,
	184, 0, 186, 0, 0, 0, 191, 192, 379, 379,
	414, 0, 286, 288, 0, 0, 177, 352, 0, 352,
	0, 345, 0, 415, 435, 1315, 1316, 0, 0, 372,
	376, 377, 378, 0, 1425, 138, 0, 0, 0, 585,
	0, 613, 0, 0, 0, 0, 0, 0, 166, 494,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 0,
	379, 0, 0, 0, 379, 379, 379, 0, 670, 366,
	0, 0, 641, 638, 516, 0, 215, 216, 218, 0,
	0, 523, 894, 1332, 1333, 1334, 0, 1344, 1348, 126,
	0, 0, 0, 0, 572, 0, 496, 573, 683, 684,
	685, 94, 693, 699, 813, 833, 958, 966, 970, 0,
	0, 1274, 1258, 352, 1261, 1262, 1264, 1266, 1267, 1269,
	1270, 1006, 1007, 1011, 0, 1086, 0, 1088, 1281, 0,
	1309, 0, 0, 0, 1117, 0, 0, 0, 1128, 1127,
	1129, 0, 1131, 1132, 1137, 1138, 1142, 0, 1144, 1146,
	1147, 0, 0, 0, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1166, 1167, 0, 1036, 1039, 1170, 1046, 1047,
	1052, 1173, 0, 0, 1082, 1185, 0, 1190, 0, 0,
	1196, 0, 1200, 0, 1206, 1207, 1209, 1211, 0, 0,
	0, 0, 0, 918, 899, 63, 1291, 1293, 0, 1359,
	1357, 1357, 1367, 1368, 0, 0, 1375, 0, 0, 0,
	0, 83, 0, 0, 0, 1395, 0, 0, 0, 0,
	100, 1300, 906, 913, 0, 0, 907, 0, 908, 928,
	930, 887, -2, 891, 0, 950, 950, 89, 90, 0,
	180, 0, 182, 208, 209, 0, 185, 187, 188, 189,
	195, 196, 197, 190, 0, 0, 285, 287, 0, 0,
	328, 339, 329, 0, 0, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 894, 139, 140, 141, 577, 0, 587,
	0, 0, 0, 580, 0, 505, 0, 0, 0, 379,
	379, 379, 0, 0, 0, 0, 655, 0, 0, 618,
	0, 626, 0, 0, 0, 219, 220, 0, 1343, 559,
	0, 124, 125, 0, 0, 564, 498, 499, 1247, 1005,
	1259, 0, 0, 0, 0, 1278, 0, 0, 0, 0,
	1124, 0, 0, 0, 1150, 0, 0, 0, 607, 608,
	0, 1214, 1041, 1300, 0, 1043, 1053, 1054, 0, 1043,
	1184, 0, 0, 0, 0, 0, 0, 0, 947, 0,
	0, 0, 0, 938, 1293, 1298, 0, 0, 1362, 0,
	1355, 1358, 1356, 1369, 0, 0, 1376, 0, 1378, 0,
	1400, 1401, 1393, 0, 1385, 1388, 1384, 1387, 1309, 910,
	0, 915, 0, 1300, 88, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 343, 346, 0, 0, 0, 578, 0, 590, 581,
	0, 668, 0, 672, 0, 0, 0, 675, 676, 677,
	654, 0, 658, 407, 642, 639, 640, 517, 0, 127,
	128, 0, 0, 0, 0, 0, 0, 1085, 1087, 0,
	1114, 1115, 1116, 1256, 1257, 1130, 1143, 1148, 0, 1151,
	0, 0, 1152, 0, 609, 1032, 0, 0, 1050, 1051,
	0, 1186, 0, 1191, 1192, 0, 1197, 0, 1201, 1212,
	0, 943, 900, 901, 948, 949, 0, 0, 893, 1298,
	81, 1299, 1296, 0, 1294, 1292, 1351, 0, 1360, 1361,
	1370, 1371, 1377, 0, 1383, 0, 86, 0, 0, 0,
	1309, 181, 0, 200, 0, 586, 0, 589, 579, 666,
	667, 0, 679, 671, 673, 674, 656, -2, 1335, 0,
	0, 0, 566, 1004, 0, 0, 0, 0, 0, 1153,
	0, 605, 606, 1040, 1033, 0, 1018, 1019, 1037, 1172,
	1174, 0, 0, 0, 0, 942, 944, 945, 80, 0,
	1295, 1058, 0, 1363, 1364, 1391, 1389, 911, 918, 0,
	87, 420, 413, 1335, 0, 0, 0, 659, 660, 661,
	662, 663, 664, 665, 556, 1337, 129, 130, 486, 487,
	488, 123, 1248, 0, 1251, 1091, 1149, 1034, 0, 0,
	0, 0, 1030, 1031, 0, 1187, 0, 1193, 0, 1198,
	0, 902, 903, 1297, 0, 0, 591, 0, 593, 0,
	-2, 408, 421, 0, 175, 201, 202, 0, 0, 205,
	206, 207, 198, 199, 119, 0, 0, 680, 0, 1338,
	1339, 126, 1249, 0, 1025, 1026, 1027, 1028, 1029, 0,
	0, 0, 1059, 1038, 592, 0, 0, 363, 0, 602,
	409, 410, 0, 416, 417, 418, 419, 203, 204, 614,
	0, 0, 563, 0, 0, 1188, 0, 1194, 0, 1199,
	0, 594, 595, 603, 0, 411, 0, 412, 0, 0,
	0, 583, 0, 614, 1336, 0, 1035, 0, 0, 1057,
	0, 604, 600, 422, 424, 425, 0, 0, 423, 615,
	584, 1250, 1189, 1195, 0, 426, 427, 428, 596, 597,
	598, 599,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 652,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:583
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:588
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:589
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:593
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:629
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:635
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:646
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:650
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:656
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:660
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:666
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:672
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:678
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:682
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:691
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:697
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:701
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:707
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:781
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:803
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:807
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:847
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:874
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:878
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:884
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:896
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:908
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:912
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:918
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:941
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:942
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:946
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:956
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:960
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:966
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:970
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:979
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:991
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:995
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1001
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1005
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1011
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1015
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1019
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1025
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1029
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1033
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1037
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1043
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1047
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1051
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1057
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1063
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1070
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1079
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1083
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1090
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1094
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1099
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1114
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1119
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1125
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1130
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1141
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1145
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1151
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1161
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1167
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1174
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1181
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1186
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1191
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1196
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1203
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1210
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1221
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1232
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1238
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1242
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1246
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1250
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1254
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1258
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1264
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1268
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1274
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1278
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1284
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1288
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1294
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1298
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1304
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1308
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1314
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1318
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1324
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1329
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1338
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1347
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1351
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1362
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1371
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1380
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1384
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1397
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1403
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1409
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1414
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1419
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1424
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1429
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1434
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1439
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1443
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1448
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1452
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1457
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1463
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1469
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1473
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1479
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1483
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1487
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1493
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1497
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1502
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1506
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1511
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1523
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1528
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1539
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1547
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1554
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1562
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1566
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1570
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1587
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1591
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1597
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1601
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1605
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1609
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1626
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1630
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1634
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1638
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1642
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = Armscii8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = ASCIIStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = Big5Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = UBinaryStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = Cp1250Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = Cp1251Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = Cp1256Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = Cp1257Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.str = Cp850Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.str = Cp852Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.str = Cp866Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = Cp932Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = Dec8Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = EucjpmsStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = EuckrStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.str = Gb18030Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = Gb2312Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = GbkStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = Geostd8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.str = GreekStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.str = HebrewStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.str = Hp8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = Keybcs2Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = Koi8rStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = Koi8uStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = Latin1Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = Latin2Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = Latin5Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = Latin7Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = MacceStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = MacromanStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = SjisStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Swe7Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Tis620Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Ucs2Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = UjisStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Utf16Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = Utf16leStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = Utf32Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = Utf8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = Utf8mb4Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = Utf8Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1823
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1827
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1831
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1837
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1841
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1845
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1851
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1855
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1862
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1866
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1870
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1874
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1891
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1946
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1958
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1998
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2111
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2116
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2120
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2128
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2132
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2138
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2146
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2150
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2154
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2159
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2163
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2184
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2189
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2199
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2210
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2214
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2219
		{
			yyVAL.str = ""
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2227
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2233
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2238
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2242
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2248
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2252
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2258
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2262
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2267
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2271
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2275
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2279
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2283
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2287
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2293
		{
			yyVAL.str = ""
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2297
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2303
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2307
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2311
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2315
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2319
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			yyVAL.str = yyDollar[2].str
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2334
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2342
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2357
		{
			yyVAL.str = "key"
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2361
		{
			yyVAL.str = yyDollar[1].str
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2367
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2376
		{
			yyVAL.str = ""
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2386
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2390
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2396
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2400
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2406
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2410
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2416
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2420
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2426
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2432
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2436
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2440
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2444
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2448
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2453
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2457
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2463
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2469
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2475
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2479
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2483
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2488
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2492
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2498
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2504
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2510
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2514
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2518
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2522
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2526
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2531
		{
			yyVAL.str = ""
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2539
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2545
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2549
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2554
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2558
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2563
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2567
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2573
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2577
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2581
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2587
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2591
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2597
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2601
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2605
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2609
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2613
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2617
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2621
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2625
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2629
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2633
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2637
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2641
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2645
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2649
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2653
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2657
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2661
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2665
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2669
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2673
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2677
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2681
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2685
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2689
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2693
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2697
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2701
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2705
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2709
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2713
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2717
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2722
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2749
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = ""
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2768
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2772
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2781
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2786
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2790
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2799
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2803
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2812
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2816
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2820
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2824
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 505:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2828
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2834
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2838
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2842
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2848
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2852
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2856
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2860
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2864
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2868
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2872
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2876
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2880
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2884
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2889
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2906
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2910
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2914
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2918
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2922
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2926
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2930
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2934
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2938
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2942
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2946
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2950
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2954
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2958
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2962
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2966
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2970
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2976
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2980
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3006
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3010
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3014
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3028
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3035
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3042
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3049
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3055
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3065
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3072
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3079
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3105
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3109
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3122
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3132
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3136
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3161
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3168
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3205
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3216
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3225
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3233
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3242
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3249
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3261
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3270
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3285
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3290
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3299
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3303
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3309
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3315
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3321
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3325
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3331
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3335
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3341
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3347
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3353
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3359
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3365
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3369
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3373
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3377
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3383
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3389
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3395
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3399
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3403
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3409
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3413
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3418
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3422
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3427
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3431
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3437
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3441
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3445
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3449
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3453
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3457
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3461
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3465
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3469
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3473
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3477
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3481
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3485
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3489
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3493
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3497
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3501
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3505
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3509
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3513
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3517
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3521
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3530
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3534
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3540
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3544
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3550
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3555
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3559
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3564
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3569
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3574
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3579
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3584
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3590
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3596
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3601
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3607
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3613
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3617
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3623
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3628
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3632
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3637
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3642
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3647
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3652
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3658
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3664
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3671
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3678
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3685
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3697
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3703
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3709
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3715
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3721
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3727
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3733
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3739
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3745
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3751
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = ""
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3767
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3771
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 684:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3790
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3804
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3810
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4025
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.str = "extended "
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4035
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4039
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4055
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4059
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4063
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4073
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4077
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4087
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4093
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4101
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4132
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4176
		{
			yyVAL.empty = struct{}{}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.empty = struct{}{}
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4181
		{
			yyVAL.empty = struct{}{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4187
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4198
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4202
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4206
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4210
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4214
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4218
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = yyDollar[1].str
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = yyDollar[1].str
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = yyDollar[1].str
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4242
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4250
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4269
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4273
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4279
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4283
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4289
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4295
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4299
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4305
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4311
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4315
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4319
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4323
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4329
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4335
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4341
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4345
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4349
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4353
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4357
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4361
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4371
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4377
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4381
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4385
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4389
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4421
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4426
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4434
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = ""
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4448
		{
			setAllowComments(yylex, true)
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4452
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4458
		{
			yyVAL.strs = nil
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4462
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4468
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4472
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4476
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4481
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4489
		{
			yyVAL.str = SQLCacheStr
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4494
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4498
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4502
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4508
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4512
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4522
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4531
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4537
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4541
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4550
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4555
		{
			yyVAL.strs = nil
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4563
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4567
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4571
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4577
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4581
		{
			yyVAL.str = SQLCacheStr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4585
		{
			yyVAL.str = DistinctStr
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4589
		{
			yyVAL.str = DistinctStr
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4593
		{
			yyVAL.str = StraightJoinHint
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4597
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4601
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4607
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4611
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4617
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4621
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4625
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4629
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4634
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4642
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4654
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4658
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4664
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4670
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4674
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4684
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4688
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4692
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4696
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4702
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4706
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4712
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4716
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4725
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4731
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4735
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4741
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4745
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4751
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4755
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4759
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4763
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4769
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4773
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4786
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4790
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4794
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4798
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4804
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4806
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4810
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4812
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4816
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4818
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4821
		{
			yyVAL.empty = struct{}{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.empty = struct{}{}
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4826
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4834
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4841
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4847
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4851
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4855
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4861
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4867
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4871
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4875
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4879
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4885
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4889
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4899
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4903
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4909
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4913
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4919
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4928
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4934
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4938
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4944
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4948
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4952
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4956
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4961
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4965
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4969
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4973
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4998
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5002
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5006
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5010
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5032
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5087
		{
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5105
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5109
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5113
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5117
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5121
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5125
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5129
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5133
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5137
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5141
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5151
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5155
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5159
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5163
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5171
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5175
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5179
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5183
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5187
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5191
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5195
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5199
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5207
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5263
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5267
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5271
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5277
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5281
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5288
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5292
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5296
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5300
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5304
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5310
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5314
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5318
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5322
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5326
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5345
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5351
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5355
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5364
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5369
		{
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5372
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5378
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5384
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5388
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5400
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5406
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5410
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5416
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5420
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5426
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5430
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5442
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5448
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5452
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5458
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5464
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5468
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5474
		{
			yyVAL.str = ""
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5478
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5484
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5488
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5495
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5499
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5503
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5507
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5513
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5517
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5521
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5525
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5529
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5533
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5537
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5543
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5547
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5551
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5558
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5564
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5568
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5578
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5582
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5596
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5608
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5624
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5628
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5639
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5643
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5649
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5653
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5658
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5662
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5666
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5670
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5674
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5678
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5682
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5686
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5690
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5694
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5698
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5702
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5706
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5710
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5714
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5718
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5722
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5726
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5730
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5742
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5786
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5790
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5814
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5818
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5822
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6126
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6130
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6136
		{
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6138
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6142
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6146
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6150
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6154
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6158
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6162
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6166
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6170
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6174
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6178
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6184
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6188
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6192
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6196
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6200
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6204
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6208
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6212
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6216
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6271
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6275
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6279
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6283
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6287
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6293
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6297
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6301
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6311
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6315
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6321
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6325
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6329
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6333
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6337
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6343
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6347
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6351
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6355
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6359
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6363
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6367
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6371
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6375
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6379
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6385
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6389
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6403
		{
			yyVAL.str = string("")
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6407
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6413
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6417
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6423
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6438
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6442
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6446
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6450
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6456
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6479
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6484
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6488
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6494
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6500
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6504
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6509
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6513
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6518
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6522
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6528
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6534
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6538
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6544
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6549
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6553
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6557
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6562
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6566
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6572
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6576
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6580
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6589
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6593
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6597
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6601
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6608
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6612
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6616
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6620
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6626
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6630
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6634
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6638
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6643
		{
			yyVAL.str = ""
		}
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6647
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6651
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6655
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6660
		{
			yyVAL.str = ""
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6664
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6670
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6674
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6679
		{
			yyVAL.str = ""
		}
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6683
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6688
		{
			yyVAL.str = "cascaded"
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6692
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6696
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6705
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6711
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6717
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6723
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6732
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6736
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6741
		{
			yyVAL.str = ""
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6745
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6751
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6755
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6761
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6765
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6769
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6774
		{
			yyVAL.str = ""
		}
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6778
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6782
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6787
		{
			yyVAL.str = ""
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6791
		{
			yyVAL.str = " header"
		}
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6796
		{
			yyVAL.str = ""
		}
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6800
		{
			yyVAL.str = " manifest on"
		}
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6804
		{
			yyVAL.str = " manifest off"
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6809
		{
			yyVAL.str = ""
		}
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6813
		{
			yyVAL.str = " overwrite on"
		}
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6817
		{
			yyVAL.str = " overwrite off"
		}
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6823
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6828
		{
			yyVAL.str = ""
		}
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6832
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6838
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6842
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6848
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6852
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6857
		{
			yyVAL.str = ""
		}
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6861
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6867
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6871
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6877
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6881
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6885
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6890
		{
			yyVAL.str = ""
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6894
		{
			yyVAL.str = " optionally"
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6907
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6911
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6915
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6919
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6923
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6929
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6933
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6937
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6941
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6946
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6950
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6956
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6960
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6966
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6970
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6976
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6980
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6985
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6995
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6999
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7005
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:7011
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7015
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7021
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7025
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7029
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7033
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7039
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7043
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7047
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7054
		{
			yyVAL.str = "charset"
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7064
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7068
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7072
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7081
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7083
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7086
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7088
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7091
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7093
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7096
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7098
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7101
		{
			yyVAL.empty = struct{}{}
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7103
		{
			yyVAL.empty = struct{}{}
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7105
		{
			yyVAL.empty = struct{}{}
		}
	case 1431:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7109
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7114
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7118
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7123
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7125
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7129
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7135
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7139
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7146
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7152
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7156
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7162
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7166
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7173
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7740
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7749
		{
			decNesting(yylex)
		}
	case 1989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7754
		{
			skipToEnd(yylex)
		}
	case 1990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7759
		{
			skipToEnd(yylex)
		}
	case 1991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7763
		{
			skipToEnd(yylex)
		}
	case 1992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7767
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
