// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const BOTH = 57453
const LEADING = 57454
const TRAILING = 57455
const EMPTY_FROM_CLAUSE = 57456
const LOWER_THAN_CHARSET = 57457
const CHARSET = 57458
const UNIQUE = 57459
const KEY = 57460
const EXPRESSION_PREC_SETTER = 57461
const OR = 57462
const XOR = 57463
const AND = 57464
const NOT = 57465
const BETWEEN = 57466
const CASE = 57467
const WHEN = 57468
const THEN = 57469
const ELSE = 57470
const END = 57471
const LE = 57472
const GE = 57473
const NE = 57474
const NULL_SAFE_EQUAL = 57475
const IS = 57476
const LIKE = 57477
const REGEXP = 57478
const IN = 57479
const SHIFT_LEFT = 57480
const SHIFT_RIGHT = 57481
const DIV = 57482
const MOD = 57483
const UNARY = 57484
const COLLATE = 57485
const BINARY = 57486
const UNDERSCORE_ARMSCII8 = 57487
const UNDERSCORE_ASCII = 57488
const UNDERSCORE_BIG5 = 57489
const UNDERSCORE_BINARY = 57490
const UNDERSCORE_CP1250 = 57491
const UNDERSCORE_CP1251 = 57492
const UNDERSCORE_CP1256 = 57493
const UNDERSCORE_CP1257 = 57494
const UNDERSCORE_CP850 = 57495
const UNDERSCORE_CP852 = 57496
const UNDERSCORE_CP866 = 57497
const UNDERSCORE_CP932 = 57498
const UNDERSCORE_DEC8 = 57499
const UNDERSCORE_EUCJPMS = 57500
const UNDERSCORE_EUCKR = 57501
const UNDERSCORE_GB18030 = 57502
const UNDERSCORE_GB2312 = 57503
const UNDERSCORE_GBK = 57504
const UNDERSCORE_GEOSTD8 = 57505
const UNDERSCORE_GREEK = 57506
const UNDERSCORE_HEBREW = 57507
const UNDERSCORE_HP8 = 57508
const UNDERSCORE_KEYBCS2 = 57509
const UNDERSCORE_KOI8R = 57510
const UNDERSCORE_KOI8U = 57511
const UNDERSCORE_LATIN1 = 57512
const UNDERSCORE_LATIN2 = 57513
const UNDERSCORE_LATIN5 = 57514
const UNDERSCORE_LATIN7 = 57515
const UNDERSCORE_MACCE = 57516
const UNDERSCORE_MACROMAN = 57517
const UNDERSCORE_SJIS = 57518
const UNDERSCORE_SWE7 = 57519
const UNDERSCORE_TIS620 = 57520
const UNDERSCORE_UCS2 = 57521
const UNDERSCORE_UJIS = 57522
const UNDERSCORE_UTF16 = 57523
const UNDERSCORE_UTF16LE = 57524
const UNDERSCORE_UTF32 = 57525
const UNDERSCORE_UTF8 = 57526
const UNDERSCORE_UTF8MB4 = 57527
const INTERVAL = 57528
const JSON_EXTRACT_OP = 57529
const JSON_UNQUOTE_EXTRACT_OP = 57530
const CREATE = 57531
const ALTER = 57532
const DROP = 57533
const RENAME = 57534
const ANALYZE = 57535
const ADD = 57536
const FLUSH = 57537
const CHANGE = 57538
const MODIFY = 57539
const DEALLOCATE = 57540
const REVERT = 57541
const SCHEMA = 57542
const TABLE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const SPATIAL = 57551
const FULLTEXT = 57552
const KEY_BLOCK_SIZE = 57553
const CHECK = 57554
const INDEXES = 57555
const ACTION = 57556
const CASCADE = 57557
const CONSTRAINT = 57558
const FOREIGN = 57559
const NO = 57560
const REFERENCES = 57561
const RESTRICT = 57562
const SHOW = 57563
const DESCRIBE = 57564
const EXPLAIN = 57565
const DATE = 57566
const ESCAPE = 57567
const REPAIR = 57568
const OPTIMIZE = 57569
const TRUNCATE = 57570
const COALESCE = 57571
const EXCHANGE = 57572
const REBUILD = 57573
const PARTITIONING = 57574
const REMOVE = 57575
const PREPARE = 57576
const EXECUTE = 57577
const MAXVALUE = 57578
const PARTITION = 57579
const REORGANIZE = 57580
const LESS = 57581
const THAN = 57582
const PROCEDURE = 57583
const TRIGGER = 57584
const VINDEX = 57585
const VINDEXES = 57586
const DIRECTORY = 57587
const NAME = 57588
const UPGRADE = 57589
const STATUS = 57590
const VARIABLES = 57591
const WARNINGS = 57592
const CASCADED = 57593
const DEFINER = 57594
const OPTION = 57595
const SQL = 57596
const UNDEFINED = 57597
const SEQUENCE = 57598
const MERGE = 57599
const TEMPORARY = 57600
const TEMPTABLE = 57601
const INVOKER = 57602
const SECURITY = 57603
const FIRST = 57604
const AFTER = 57605
const LAST = 57606
const VITESS_MIGRATION = 57607
const CANCEL = 57608
const RETRY = 57609
const COMPLETE = 57610
const CLEANUP = 57611
const BEGIN = 57612
const START = 57613
const TRANSACTION = 57614
const COMMIT = 57615
const ROLLBACK = 57616
const SAVEPOINT = 57617
const RELEASE = 57618
const WORK = 57619
const BIT = 57620
const TINYINT = 57621
const SMALLINT = 57622
const MEDIUMINT = 57623
const INT = 57624
const INTEGER = 57625
const BIGINT = 57626
const INTNUM = 57627
const REAL = 57628
const DOUBLE = 57629
const FLOAT_TYPE = 57630
const DECIMAL_TYPE = 57631
const NUMERIC = 57632
const TIME = 57633
const TIMESTAMP = 57634
const DATETIME = 57635
const YEAR = 57636
const CHAR = 57637
const VARCHAR = 57638
const BOOL = 57639
const CHARACTER = 57640
const VARBINARY = 57641
const NCHAR = 57642
const TEXT = 57643
const TINYTEXT = 57644
const MEDIUMTEXT = 57645
const LONGTEXT = 57646
const BLOB = 57647
const TINYBLOB = 57648
const MEDIUMBLOB = 57649
const LONGBLOB = 57650
const JSON = 57651
const ENUM = 57652
const GEOMETRY = 57653
const POINT = 57654
const LINESTRING = 57655
const POLYGON = 57656
const GEOMETRYCOLLECTION = 57657
const MULTIPOINT = 57658
const MULTILINESTRING = 57659
const MULTIPOLYGON = 57660
const ASCII = 57661
const UNICODE = 57662
const NULLX = 57663
const AUTO_INCREMENT = 57664
const APPROXNUM = 57665
const SIGNED = 57666
const UNSIGNED = 57667
const ZEROFILL = 57668
const CODE = 57669
const COLLATION = 57670
const COLUMNS = 57671
const DATABASES = 57672
const ENGINES = 57673
const EVENT = 57674
const EXTENDED = 57675
const FIELDS = 57676
const FULL = 57677
const FUNCTION = 57678
const GTID_EXECUTED = 57679
const KEYSPACES = 57680
const OPEN = 57681
const PLUGINS = 57682
const PRIVILEGES = 57683
const PROCESSLIST = 57684
const SCHEMAS = 57685
const TABLES = 57686
const TRIGGERS = 57687
const USER = 57688
const VGTID_EXECUTED = 57689
const VITESS_KEYSPACES = 57690
const VITESS_METADATA = 57691
const VITESS_MIGRATIONS = 57692
const VITESS_REPLICATION_STATUS = 57693
const VITESS_SHARDS = 57694
const VITESS_TABLETS = 57695
const VSCHEMA = 57696
const NAMES = 57697
const GLOBAL = 57698
const SESSION = 57699
const ISOLATION = 57700
const LEVEL = 57701
const READ = 57702
const WRITE = 57703
const ONLY = 57704
const REPEATABLE = 57705
const COMMITTED = 57706
const UNCOMMITTED = 57707
const SERIALIZABLE = 57708
const CURRENT_TIMESTAMP = 57709
const DATABASE = 57710
const CURRENT_DATE = 57711
const CURRENT_TIME = 57712
const LOCALTIME = 57713
const LOCALTIMESTAMP = 57714
const CURRENT_USER = 57715
const UTC_DATE = 57716
const UTC_TIME = 57717
const UTC_TIMESTAMP = 57718
const DAY = 57719
const DAY_HOUR = 57720
const DAY_MICROSECOND = 57721
const DAY_MINUTE = 57722
const DAY_SECOND = 57723
const HOUR = 57724
const HOUR_MICROSECOND = 57725
const HOUR_MINUTE = 57726
const HOUR_SECOND = 57727
const MICROSECOND = 57728
const MINUTE = 57729
const MINUTE_MICROSECOND = 57730
const MINUTE_SECOND = 57731
const MONTH = 57732
const QUARTER = 57733
const SECOND = 57734
const SECOND_MICROSECOND = 57735
const YEAR_MONTH = 57736
const WEEK = 57737
const REPLACE = 57738
const CONVERT = 57739
const CAST = 57740
const SUBSTR = 57741
const SUBSTRING = 57742
const GROUP_CONCAT = 57743
const SEPARATOR = 57744
const TIMESTAMPADD = 57745
const TIMESTAMPDIFF = 57746
const WEIGHT_STRING = 57747
const LTRIM = 57748
const RTRIM = 57749
const TRIM = 57750
const JSON_ARRAY = 57751
const JSON_OBJECT = 57752
const JSON_QUOTE = 57753
const MATCH = 57754
const AGAINST = 57755
const BOOLEAN = 57756
const LANGUAGE = 57757
const WITH = 57758
const QUERY = 57759
const EXPANSION = 57760
const WITHOUT = 57761
const VALIDATION = 57762
const UNUSED = 57763
const ARRAY = 57764
const CUME_DIST = 57765
const DESCRIPTION = 57766
const DENSE_RANK = 57767
const EMPTY = 57768
const EXCEPT = 57769
const FIRST_VALUE = 57770
const GROUPING = 57771
const GROUPS = 57772
const JSON_TABLE = 57773
const LAG = 57774
const LAST_VALUE = 57775
const LATERAL = 57776
const LEAD = 57777
const MEMBER = 57778
const NTH_VALUE = 57779
const NTILE = 57780
const OF = 57781
const OVER = 57782
const PERCENT_RANK = 57783
const RANK = 57784
const RECURSIVE = 57785
const ROW_NUMBER = 57786
const SYSTEM = 57787
const WINDOW = 57788
const ACTIVE = 57789
const ADMIN = 57790
const BUCKETS = 57791
const CLONE = 57792
const COMPONENT = 57793
const DEFINITION = 57794
const ENFORCED = 57795
const EXCLUDE = 57796
const FOLLOWING = 57797
const GEOMCOLLECTION = 57798
const GET_MASTER_PUBLIC_KEY = 57799
const HISTOGRAM = 57800
const HISTORY = 57801
const INACTIVE = 57802
const INVISIBLE = 57803
const LOCKED = 57804
const MASTER_COMPRESSION_ALGORITHMS = 57805
const MASTER_PUBLIC_KEY_PATH = 57806
const MASTER_TLS_CIPHERSUITES = 57807
const MASTER_ZSTD_COMPRESSION_LEVEL = 57808
const NESTED = 57809
const NETWORK_NAMESPACE = 57810
const NOWAIT = 57811
const NULLS = 57812
const OJ = 57813
const OLD = 57814
const OPTIONAL = 57815
const ORDINALITY = 57816
const ORGANIZATION = 57817
const OTHERS = 57818
const PATH = 57819
const PERSIST = 57820
const PERSIST_ONLY = 57821
const PRECEDING = 57822
const PRIVILEGE_CHECKS_USER = 57823
const PROCESS = 57824
const RANDOM = 57825
const REFERENCE = 57826
const REQUIRE_ROW_FORMAT = 57827
const RESOURCE = 57828
const RESPECT = 57829
const RESTART = 57830
const RETAIN = 57831
const REUSE = 57832
const ROLE = 57833
const SECONDARY = 57834
const SECONDARY_ENGINE = 57835
const SECONDARY_LOAD = 57836
const SECONDARY_UNLOAD = 57837
const SKIP = 57838
const SRID = 57839
const THREAD_PRIORITY = 57840
const TIES = 57841
const UNBOUNDED = 57842
const VCPU = 57843
const VISIBLE = 57844
const FORMAT = 57845
const TREE = 57846
const VITESS = 57847
const TRADITIONAL = 57848
const LOCAL = 57849
const LOW_PRIORITY = 57850
const NO_WRITE_TO_BINLOG = 57851
const LOGS = 57852
const ERROR = 57853
const GENERAL = 57854
const HOSTS = 57855
const OPTIMIZER_COSTS = 57856
const USER_RESOURCES = 57857
const SLOW = 57858
const CHANNEL = 57859
const RELAY = 57860
const EXPORT = 57861
const AVG_ROW_LENGTH = 57862
const CONNECTION = 57863
const CHECKSUM = 57864
const DELAY_KEY_WRITE = 57865
const ENCRYPTION = 57866
const ENGINE = 57867
const INSERT_METHOD = 57868
const MAX_ROWS = 57869
const MIN_ROWS = 57870
const PACK_KEYS = 57871
const PASSWORD = 57872
const FIXED = 57873
const DYNAMIC = 57874
const COMPRESSED = 57875
const REDUNDANT = 57876
const COMPACT = 57877
const ROW_FORMAT = 57878
const STATS_AUTO_RECALC = 57879
const STATS_PERSISTENT = 57880
const STATS_SAMPLE_PAGES = 57881
const STORAGE = 57882
const MEMORY = 57883
const DISK = 57884
const PARTITIONS = 57885
const LINEAR = 57886
const RANGE = 57887
const LIST = 57888
const SUBPARTITION = 57889
const SUBPARTITIONS = 57890
const HASH = 57891

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	567, 145,
	-2, 151,
	-1, 48,
	119, 151,
	159, 151,
	315, 151,
	-2, 452,
	-1, 55,
	33, 631,
	219, 631,
	230, 631,
	265, 645,
	266, 645,
	-2, 633,
	-1, 60,
	221, 656,
	-2, 654,
	-1, 114,
	218, 1138,
	-2, 119,
	-1, 116,
	1, 146,
	567, 146,
	-2, 151,
	-1, 126,
	120, 355,
	224, 355,
	-2, 446,
	-1, 145,
	119, 151,
	159, 151,
	315, 151,
	-2, 461,
	-1, 623,
	203, 1159,
	-2, 1155,
	-1, 624,
	203, 1160,
	-2, 1156,
	-1, 698,
	57, 724,
	-2, 739,
	-1, 735,
	135, 1529,
	-2, 112,
	-1, 736,
	135, 1400,
	-2, 113,
	-1, 742,
	135, 1458,
	-2, 1132,
	-1, 887,
	135, 1331,
	-2, 1129,
	-1, 925,
	229, 41,
	234, 41,
	-2, 366,
	-1, 1002,
	1, 500,
	567, 500,
	-2, 151,
	-1, 1210,
	57, 725,
	-2, 744,
	-1, 1211,
	57, 726,
	-2, 745,
	-1, 1263,
	119, 151,
	159, 151,
	315, 151,
	-2, 396,
	-1, 1340,
	120, 355,
	224, 355,
	-2, 446,
	-1, 1349,
	229, 42,
	234, 42,
	-2, 367,
	-1, 1615,
	203, 1164,
	-2, 1158,
	-1, 1696,
	119, 151,
	159, 151,
	315, 151,
	-2, 397,
	-1, 1703,
	23, 170,
	-2, 172,
	-1, 1906,
	84, 39,
	-2, 780,
	-1, 1957,
	75, 94,
	84, 94,
	-2, 800,
	-1, 2131,
	47, 1100,
	-2, 1094,
	-1, 2301,
	84, 39,
	-2, 781,
	-1, 2339,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 772,
}

const yyPrivate = 57344

const yyLast = 37392

var yyAct = [...]int{
	623, 2601, 2607, 1649, 2399, 2572, 2253, 2558, 96, 2183,
	2190, 2485, 2142, 2224, 3, 691, 713, 2425, 1066, 617,
	37, 1189, 2145, 2236, 2499, 1756, 1894, 2192, 2235, 572,
	1225, 568, 2146, 2143, 618, 1929, 2310, 2304, 2430, 1629,
	626, 1668, 2330, 615, 2140, 2132, 565, 616, 594, 2238,
	1952, 182, 1921, 2296, 182, 1989, 532, 182, 1726, 1653,
	566, 2018, 548, 2059, 182, 154, 1014, 1746, 1731, 1990,
	1682, 1991, 182, 1941, 564, 38, 36, 890, 740, 1673,
	714, 1363, 1672, 1212, 1896, 693, 1913, 182, 955, 560,
	1609, 1606, 1545, 1504, 1043, 1552, 2075, 695, 1693, 699,
	140, 1765, 1798, 1733, 1983, 915, 1745, 1255, 1959, 548,
	920, 1234, 548, 182, 548, 1631, 577, 716, 95, 91,
	1675, 1192, 1148, 1564, 1522, 1455, 1085, 737, 1451, 1743,
	1437, 1347, 1722, 897, 1660, 1254, 926, 1354, 1612, 898,
	894, 921, 922, 1252, 1238, 705, 933, 1064, 1602, 1059,
	923, 1460, 123, 157, 117, 701, 700, 98, 1315, 118,
	1654, 124, 703, 1339, 555, 998, 727, 1155, 76, 2530,
	1151, 2011, 89, 2608, 97, 85, 1622, 1758, 1759, 1760,
	1758, 2221, 2038, 2037, 1796, 2009, 2067, 2068, 1320, 184,
	185, 186, 702, 77, 8, 7, 6, 1511, 721, 1510,
	726, 119, 1509, 184, 185, 186, 1626, 1627, 1508, 1507,
	707, 960, 125, 90, 1086, 1506, 505, 1493, 558, 1892,
	559, 1423, 891, 1498, 2586, 2128, 1923, 2207, 901, 2364,
	556, 957, 2481, 1086, 2480, 2392, 535, 906, 2393, 2617,
	959, 102, 958, 2568, 971, 972, 694, 975, 976, 977,
	978, 692, 734, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 708, 741,
	119, 912, 2611, 715, 937, 1836, 911, 522, 936, 78,
	913, 1738, 104, 105, 2541, 108, 2600, 2400, 114, 2559,
	1784, 179, 78, 78, 500, 80, 2567, 961, 962, 963,
	968, 2540, 2074, 78, 178, 1736, 2286, 1329, 2046, 2180,
	2181, 1256, 2045, 1257, 687, 688, 689, 690, 973, 1096,
	698, 1688, 1689, 521, 1893, 2179, 1968, 1932, 120, 1967,
	142, 2066, 1969, 1687, 119, 519, 1117, 1833, 1096, 1834,
	1033, 162, 2443, 685, 684, 1021, 2012, 1980, 729, 730,
	1022, 1034, 1933, 1593, 1628, 1062, 87, 2490, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1126, 1125, 1127, 1128, 87,
	87, 910, 152, 1007, 1008, 516, 1001, 141, 1021, 2307,
	87, 1706, 1705, 1022, 530, 2101, 1050, 1027, 1052, 2255,
	2277, 1020, 2275, 1019, 535, 535, 546, 1497, 159, 527,
	160, 535, 550, 544, 2019, 1010, 129, 130, 151, 150,
	177, 1766, 1092, 1196, 1443, 1084, 1804, 997, 1499, 1500,
	1501, 1810, 1807, 1809, 1808, 2248, 1049, 1051, 2041, 908,
	1035, 1092, 536, 2249, 1735, 974, 1585, 1574, 1575, 1576,
	1577, 1587, 1578, 1579, 1580, 1592, 1588, 1581, 1582, 1589,
	1590, 1591, 1583, 1584, 1586, 1061, 535, 1799, 905, 1038,
	1039, 907, 506, 2610, 508, 523, 1028, 538, 2256, 537,
	512, 1805, 510, 514, 524, 515, 1413, 509, 1438, 520,
	2587, 1056, 511, 525, 526, 528, 542, 541, 529, 1042,
	518, 539, 1003, 1812, 2054, 1813, 914, 1814, 1036, 1037,
	182, 1815, 182, 2257, 980, 182, 146, 127, 153, 134,
	126, 979, 147, 148, 1803, 910, 996, 1047, 163, 1801,
	1414, 1048, 1415, 1054, 2385, 1769, 1669, 168, 135, 2232,
	87, 1053, 944, 548, 548, 548, 942, 2102, 600, 909,
	1199, 1332, 138, 136, 131, 132, 133, 137, 1040, 917,
	954, 548, 548, 1046, 128, 910, 1802, 902, 1041, 953,
	935, 952, 916, 139, 904, 903, 917, 1078, 951, 950,
	2206, 949, 37, 1017, 948, 1023, 1024, 1025, 1026, 2186,
	1000, 1091, 1088, 1089, 1090, 1095, 1097, 1094, 947, 1093,
	536, 536, 2605, 946, 941, 2196, 1087, 536, 1063, 2612,
	1091, 1088, 1089, 1090, 1095, 1097, 1094, 1444, 1093, 2013,
	2598, 2076, 2043, 908, 2529, 1087, 2010, 1031, 1655, 1656,
	895, 1057, 1834, 935, 2187, 929, 895, 1353, 928, 895,
	1055, 1129, 1129, 893, 1132, 1133, 1134, 1135, 155, 1737,
	2231, 540, 1452, 2058, 1140, 2491, 1143, 1744, 2308, 2189,
	728, 2055, 536, 2184, 1187, 1790, 1448, 2214, 934, 533,
	935, 2539, 1182, 1072, 928, 931, 932, 964, 895, 999,
	2194, 2195, 925, 929, 534, 945, 2040, 2185, 1327, 943,
	970, 1068, 1069, 909, 1326, 182, 1325, 2030, 1835, 548,
	548, 2520, 2078, 924, 1449, 1323, 1136, 935, 504, 81,
	2477, 1897, 1899, 693, 1205, 182, 86, 499, 1200, 2191,
	1203, 1188, 1202, 149, 2070, 1847, 1206, 1786, 2345, 86,
	86, 934, 695, 909, 548, 2326, 938, 928, 182, 1006,
	86, 1352, 143, 548, 1018, 144, 939, 1964, 1009, 548,
	1425, 1424, 1426, 1427, 1428, 77, 1928, 1081, 1079, 1080,
	2053, 737, 1884, 2052, 2088, 2087, 2086, 2080, 934, 2084,
	1621, 2079, 116, 2077, 1153, 1157, 1154, 1242, 2082, 1169,
	2061, 1130, 1131, 1188, 2193, 2060, 1204, 2081, 935, 1129,
	95, 1012, 1694, 1128, 2178, 710, 2196, 1175, 1176, 1177,
	1178, 2061, 2083, 2085, 2603, 934, 2060, 2604, 1442, 2602,
	938, 928, 1527, 1030, 1044, 1193, 935, 184, 185, 186,
	939, 1547, 1461, 111, 1032, 1060, 1528, 1529, 1526, 98,
	619, 2535, 595, 597, 620, 621, 2381, 593, 596, 622,
	940, 2320, 956, 1016, 1800, 1445, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 1258, 1190, 1082,
	2094, 1898, 173, 174, 175, 176, 598, 599, 2456, 2457,
	2458, 2459, 2460, 2461, 2462, 1565, 1101, 1224, 1201, 692,
	1565, 694, 1861, 112, 2002, 1783, 934, 1221, 969, 1100,
	1101, 1548, 2596, 1099, 2439, 1100, 1101, 2578, 2356, 2188,
	182, 2576, 2096, 741, 1316, 1785, 1248, 1249, 2355, 1773,
	2580, 2581, 1362, 1324, 934, 1361, 1661, 1662, 2194, 2195,
	928, 931, 932, 1778, 895, 2577, 2283, 1351, 925, 929,
	1099, 1781, 1100, 1101, 548, 1099, 1349, 1100, 1101, 944,
	1439, 2613, 1440, 942, 1358, 1441, 2594, 1045, 1360, 1207,
	1782, 548, 548, 1002, 548, 1462, 548, 548, 1117, 548,
	548, 548, 548, 548, 548, 1121, 1122, 1123, 1124, 1126,
	1125, 1127, 1128, 1015, 548, 1253, 1359, 1778, 182, 1396,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1125, 1127,
	1128, 1219, 2546, 2513, 182, 1123, 1124, 1126, 1125, 1127,
	1128, 1391, 1392, 1869, 1780, 548, 2346, 182, 2281, 1219,
	2595, 1345, 1330, 1331, 1099, 2614, 1100, 1101, 1450, 1243,
	1219, 548, 2193, 182, 2547, 2514, 87, 1569, 1857, 1099,
	1338, 1100, 1101, 1365, 2196, 1366, 1432, 1368, 1370, 182,
	1525, 1374, 1376, 1378, 1380, 1382, 182, 1099, 1874, 1100,
	1101, 1393, 1839, 1840, 1841, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 548, 548, 548, 1517, 1519, 1520,
	2615, 2472, 1399, 1400, 1430, 1357, 1322, 2415, 1405, 1406,
	1356, 1336, 2414, 2252, 732, 637, 638, 639, 1355, 1355,
	1334, 1518, 1335, 1420, 1348, 182, 2363, 2362, 2222, 1431,
	1856, 1457, 2212, 1099, 1465, 1100, 1101, 1987, 1071, 1409,
	1986, 1469, 1741, 1471, 1472, 1473, 1474, 1433, 1418, 1417,
	1478, 1219, 1416, 1407, 1463, 1464, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1103, 1492, 1394, 1401, 1429, 1468, 1099,
	1546, 1100, 1101, 1398, 1397, 1475, 1476, 1477, 1453, 1372,
	2517, 1852, 1904, 1555, 548, 1903, 1419, 1523, 1328, 1099,
	1851, 1100, 1101, 1232, 2516, 1228, 119, 912, 2526, 548,
	548, 1530, 911, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1531, 1850, 2515, 1521,
	1566, 1467, 184, 185, 186, 1219, 2353, 1603, 1613, 1099,
	2470, 1100, 1101, 2438, 2382, 182, 1099, 2289, 1100, 1101,
	548, 1488, 1489, 1490, 1229, 2436, 1491, 1119, 1120, 1121,
	1122, 1123, 1124, 1126, 1125, 1127, 1128, 1603, 1231, 2411,
	1639, 2360, 1640, 1099, 182, 1100, 1101, 548, 1099, 1524,
	1100, 1101, 1099, 1988, 1100, 1101, 1099, 182, 1100, 1101,
	548, 2352, 184, 185, 186, 182, 1971, 182, 1615, 182,
	182, 548, 2288, 1996, 548, 1984, 1794, 1099, 1219, 1100,
	1101, 1613, 1617, 1618, 1878, 548, 1793, 1652, 95, 737,
	2319, 1099, 737, 1100, 1101, 1634, 1551, 1099, 1550, 1100,
	1101, 1549, 1494, 1557, 1558, 1458, 1421, 95, 184, 185,
	186, 1099, 1754, 1100, 1101, 1614, 1645, 1408, 1404, 1671,
	184, 185, 186, 1099, 1752, 1100, 1101, 1403, 1402, 1616,
	1230, 1058, 1619, 1620, 184, 185, 186, 1919, 2609, 2498,
	548, 1615, 2497, 92, 92, 2466, 1747, 1748, 1749, 1697,
	94, 1751, 1753, 2465, 93, 93, 101, 1712, 1713, 1714,
	1715, 707, 1698, 1680, 1633, 548, 2398, 100, 1644, 99,
	1930, 548, 1358, 1919, 2565, 1358, 2020, 1358, 94, 1919,
	2552, 101, 2173, 1777, 1930, 1703, 1919, 2550, 1666, 1647,
	1767, 1834, 100, 1728, 99, 1701, 2542, 1219, 1919, 2531,
	2390, 2528, 1919, 2473, 1664, 1999, 1734, 1685, 1219, 1219,
	2390, 1219, 1702, 548, 1684, 1546, 1919, 2388, 1778, 1219,
	1546, 1546, 1117, 2321, 2069, 1098, 1700, 1699, 2324, 1219,
	1960, 741, 2204, 2203, 741, 2584, 1219, 2200, 2201, 2200,
	2199, 1938, 1764, 2534, 1118, 1119, 1120, 1121, 1122, 1123,
	1124, 1126, 1125, 1127, 1128, 2319, 182, 1938, 1219, 2225,
	94, 1219, 1915, 182, 1724, 1725, 1848, 1219, 182, 182,
	1834, 2039, 182, 1742, 182, 1740, 1729, 94, 1750, 1739,
	1707, 182, 1708, 1709, 1710, 1711, 1319, 2024, 182, 1960,
	1787, 2016, 2017, 1961, 1919, 1918, 1098, 1219, 1718, 1719,
	1720, 1721, 1963, 1772, 1771, 1770, 1775, 1789, 1776, 1729,
	937, 1774, 1791, 1792, 936, 1788, 182, 548, 1219, 100,
	1355, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1125,
	1127, 1128, 1319, 1318, 1848, 1264, 1263, 2141, 1919, 1937,
	1938, 2202, 1779, 2116, 1686, 1848, 1877, 2319, 1866, 1797,
	1825, 1826, 1961, 2365, 1865, 1828, 1778, 1761, 1659, 1223,
	1624, 1834, 1502, 1447, 1829, 1250, 697, 919, 918, 2555,
	87, 2487, 1226, 2463, 2450, 624, 2380, 2377, 2358, 2292,
	2291, 1523, 1321, 1387, 1727, 2250, 2254, 1848, 2227, 2223,
	2025, 1723, 1117, 1938, 1843, 1113, 1845, 1114, 1818, 1778,
	1717, 1716, 1435, 2366, 2367, 2368, 1350, 2369, 1346, 1844,
	1317, 1115, 1116, 1112, 1118, 1119, 1120, 1121, 1122, 1123,
	1124, 1126, 1125, 1127, 1128, 113, 183, 1992, 1993, 183,
	1001, 2488, 183, 1388, 1389, 1390, 1738, 549, 1384, 183,
	2331, 2332, 1637, 87, 2591, 182, 2573, 183, 2334, 1832,
	2219, 2218, 2337, 182, 2370, 2371, 2217, 2141, 548, 2003,
	1890, 1907, 183, 1524, 548, 1819, 1943, 1946, 1947, 1948,
	1944, 1842, 1945, 1949, 1993, 548, 2331, 2332, 1495, 2165,
	2336, 1947, 1948, 2160, 549, 1385, 1386, 549, 183, 549,
	1943, 1946, 1947, 1948, 1944, 2159, 1945, 1949, 182, 1117,
	182, 1846, 2589, 1934, 2163, 2161, 2566, 1860, 37, 2164,
	2162, 2420, 1651, 2419, 1227, 1970, 1643, 1954, 2325, 1858,
	1615, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1125,
	1127, 1128, 1920, 2133, 2135, 1217, 1213, 2121, 2120, 2022,
	1872, 2512, 2136, 2312, 2429, 2431, 711, 2315, 2130, 1916,
	1214, 2311, 1446, 683, 712, 2198, 1978, 1997, 1561, 548,
	966, 2418, 965, 2264, 182, 1193, 1891, 1614, 1901, 1881,
	1882, 182, 1562, 1992, 1953, 1641, 1642, 1216, 2064, 1215,
	1070, 92, 1974, 548, 1912, 1917, 2015, 101, 1981, 1982,
	548, 1927, 93, 1958, 1358, 1358, 92, 2032, 100, 548,
	99, 2031, 120, 94, 2215, 2317, 94, 93, 1822, 94,
	1962, 2036, 1661, 1662, 1965, 2527, 2483, 1217, 1213, 1811,
	1734, 1972, 182, 182, 182, 182, 182, 2197, 1951, 1975,
	1648, 2297, 1214, 719, 720, 2119, 101, 1838, 99, 182,
	182, 2504, 1985, 2118, 1995, 2503, 2437, 100, 100, 99,
	2435, 2434, 2427, 2378, 2316, 182, 1994, 1210, 1211, 1216,
	2314, 1215, 2228, 1762, 1333, 2000, 101, 718, 2426, 2305,
	2034, 1930, 1915, 1546, 2004, 2005, 2006, 100, 2593, 2592,
	2593, 2103, 1338, 1867, 1635, 1244, 1236, 693, 106, 107,
	2518, 2351, 709, 103, 2093, 88, 1, 632, 2575, 517,
	1625, 1191, 531, 2571, 1422, 548, 1412, 2401, 2035, 2033,
	1604, 1605, 2484, 2021, 1768, 2376, 1732, 927, 145, 1695,
	1696, 548, 2561, 2110, 110, 2026, 2027, 888, 2072, 109,
	930, 1029, 2056, 1763, 2391, 1979, 182, 1704, 1270, 2062,
	548, 2071, 2063, 1268, 1269, 1267, 1272, 1271, 1266, 548,
	1868, 1496, 545, 1950, 180, 1259, 548, 548, 1237, 182,
	182, 182, 182, 182, 2073, 2090, 2138, 2110, 2089, 2123,
	2153, 182, 967, 507, 2205, 699, 182, 1795, 182, 513,
	182, 1141, 2144, 182, 182, 182, 2124, 2144, 2147, 2105,
	2117, 1966, 738, 731, 2109, 1206, 1954, 1636, 1905, 2149,
	2111, 2309, 2115, 2129, 2131, 1922, 2134, 2127, 2511, 2428,
	2553, 1976, 1233, 1859, 1563, 1676, 1516, 2172, 2213, 2122,
	2125, 570, 569, 567, 182, 1908, 1931, 1104, 627, 1895,
	2174, 701, 700, 2175, 1245, 1942, 1940, 548, 2152, 2155,
	2156, 2154, 2158, 2166, 2157, 1939, 548, 1820, 1681, 2234,
	2333, 182, 2170, 2171, 2176, 95, 2329, 1674, 1914, 2182,
	578, 182, 571, 1457, 2112, 2113, 2114, 563, 625, 2230,
	2348, 2240, 2042, 2251, 2044, 183, 182, 183, 1977, 182,
	183, 2209, 2208, 2247, 1083, 1209, 557, 900, 1560, 2265,
	2489, 2475, 1837, 2285, 1208, 1572, 2242, 1573, 2220, 1755,
	2241, 2210, 2211, 63, 41, 1597, 552, 2585, 549, 549,
	549, 1074, 1734, 2233, 2229, 2245, 725, 32, 31, 30,
	29, 28, 23, 22, 21, 20, 549, 549, 19, 25,
	18, 17, 16, 2260, 115, 50, 47, 548, 182, 45,
	2259, 122, 121, 48, 44, 1004, 42, 27, 26, 2262,
	2263, 2267, 15, 14, 13, 12, 11, 10, 9, 2273,
	5, 4, 35, 34, 2266, 33, 1077, 24, 2, 2008,
	1757, 0, 0, 0, 0, 0, 0, 0, 2303, 0,
	0, 0, 0, 0, 0, 0, 0, 2298, 2299, 0,
	0, 0, 0, 0, 182, 0, 0, 2313, 0, 0,
	2306, 0, 0, 0, 608, 0, 0, 2318, 0, 2328,
	0, 0, 2354, 0, 0, 0, 0, 182, 2338, 0,
	2335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2343, 2344, 0, 0, 2341, 182, 0, 0, 182, 182,
	182, 0, 0, 0, 2342, 0, 0, 0, 548, 548,
	2242, 2383, 2384, 0, 2241, 2349, 2350, 0, 0, 0,
	183, 0, 0, 0, 549, 549, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 548, 548, 548, 548, 2359,
	183, 2361, 0, 0, 0, 2270, 2271, 2386, 2272, 0,
	0, 2274, 0, 2276, 0, 2278, 0, 2397, 0, 549,
	0, 0, 0, 183, 2395, 2396, 0, 0, 549, 0,
	0, 0, 0, 739, 549, 0, 892, 0, 899, 178,
	0, 182, 2410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2406, 0, 0, 0, 0,
	0, 0, 0, 120, 0, 548, 0, 548, 0, 0,
	0, 2407, 0, 0, 0, 0, 162, 693, 2444, 0,
	2423, 2424, 0, 37, 2448, 0, 2433, 2432, 2446, 2144,
	0, 0, 0, 2440, 2442, 0, 2147, 0, 0, 0,
	2147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2452, 2453, 0,
	0, 548, 0, 2455, 2471, 0, 0, 1287, 0, 0,
	0, 0, 0, 159, 0, 160, 0, 0, 0, 0,
	0, 548, 0, 2467, 2469, 177, 2468, 0, 0, 0,
	0, 0, 0, 0, 2479, 0, 2478, 0, 548, 2486,
	2474, 0, 548, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2508, 0, 0, 183, 2505, 2506, 0, 2510,
	2507, 548, 0, 0, 2522, 0, 0, 0, 0, 0,
	0, 693, 0, 0, 548, 2521, 2519, 2525, 2523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2147, 549,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 182,
	0, 2536, 0, 0, 0, 0, 549, 549, 2533, 549,
	0, 549, 549, 37, 549, 549, 549, 549, 549, 549,
	0, 0, 0, 163, 0, 0, 0, 1275, 0, 549,
	0, 548, 168, 183, 0, 0, 0, 0, 0, 0,
	0, 2548, 0, 0, 0, 548, 548, 0, 0, 183,
	2551, 0, 2554, 548, 2556, 178, 2560, 37, 2144, 0,
	549, 0, 183, 2486, 2562, 0, 2014, 0, 0, 0,
	0, 0, 2582, 2574, 2579, 0, 549, 0, 183, 120,
	0, 142, 2588, 0, 0, 0, 0, 2590, 0, 0,
	0, 0, 162, 0, 183, 548, 0, 0, 2597, 0,
	0, 183, 0, 2599, 0, 2606, 0, 0, 1288, 0,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 549,
	549, 549, 2616, 152, 0, 0, 0, 0, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 159,
	183, 160, 0, 0, 0, 0, 0, 1341, 1342, 151,
	150, 177, 1301, 1304, 1305, 1306, 1307, 1308, 1309, 0,
	1310, 1311, 1312, 1313, 1314, 1289, 1290, 1291, 1292, 1273,
	1274, 1302, 0, 1276, 0, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 0, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 549, 0, 739, 739, 739,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1073, 1075, 0, 0, 0,
	0, 0, 0, 0, 120, 0, 0, 146, 1343, 153,
	183, 1340, 0, 147, 148, 549, 0, 162, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 549, 0, 0, 0, 0, 0, 1303, 0,
	0, 0, 183, 0, 0, 549, 0, 0, 0, 1973,
	183, 0, 183, 0, 183, 183, 549, 0, 0, 549,
	0, 0, 0, 0, 159, 0, 160, 1185, 0, 0,
	549, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 0, 0, 0, 0, 0, 173, 174, 175,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1197, 1198, 549, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 0, 549, 0, 1240, 0,
	0, 0, 0, 0, 0, 0, 0, 739, 0, 0,
	0, 0, 0, 1260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 183, 183, 0, 0, 183, 0, 183,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 549, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 161, 158,
	164, 165, 166, 167, 169, 170, 171, 172, 0, 0,
	0, 0, 0, 173, 174, 175, 176, 0, 0, 0,
	0, 0, 0, 609, 0, 0, 0, 0, 892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 1185, 0, 0, 0, 1364, 1364, 0, 1364, 1337,
	1364, 1364, 0, 1373, 1364, 1364, 1364, 1364, 1364, 0,
	0, 0, 120, 0, 142, 0, 1185, 1185, 892, 0,
	0, 0, 0, 0, 181, 162, 0, 503, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 503, 0, 0, 0, 1434,
	183, 0, 0, 0, 0, 0, 152, 0, 183, 0,
	706, 141, 0, 549, 0, 1454, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 724, 0, 724, 0,
	549, 0, 159, 0, 160, 0, 503, 0, 0, 0,
	1341, 1342, 151, 150, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 183, 0, 0, 739, 739,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 0, 0, 0, 0, 0, 173, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 0,
	146, 1343, 153, 0, 1340, 549, 147, 148, 1556, 0,
	0, 0, 163, 0, 549, 1185, 0, 0, 0, 0,
	0, 168, 0, 1570, 1571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 739, 0, 0, 183, 183, 183,
	183, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1218, 183, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1240, 0, 0, 739, 0, 0,
	0, 0, 0, 0, 0, 739, 0, 0, 739, 0,
	549, 0, 0, 0, 0, 0, 0, 0, 0, 892,
	0, 0, 155, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 549, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	723, 549, 549, 0, 183, 183, 183, 183, 183, 0,
	0, 0, 0, 0, 899, 0, 183, 0, 0, 0,
	0, 183, 0, 183, 0, 183, 0, 0, 183, 183,
	183, 0, 0, 0, 0, 0, 0, 149, 0, 892,
	0, 0, 0, 0, 0, 899, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 892, 0, 0,
	0, 549, 0, 0, 0, 0, 183, 0, 0, 0,
	717, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 503, 0, 503, 0, 0, 503, 87,
	0, 183, 0, 0, 183, 628, 635, 636, 637, 638,
	639, 629, 631, 0, 0, 0, 630, 0, 0, 633,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 0, 0, 0, 0, 0, 173, 174, 175, 176,
	0, 0, 549, 183, 0, 2243, 2244, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 0, 183,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 183, 183, 183, 0, 634, 79, 0,
	0, 0, 0, 549, 549, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 739, 0, 706, 0,
	549, 549, 549, 549, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 0, 0, 1909, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 696, 183, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 696, 0, 0, 0, 0,
	549, 0, 549, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 620, 621, 0, 0, 0, 622,
	0, 0, 0, 1998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 0, 0,
	0, 0, 0, 0, 2023, 0, 549, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 549, 549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 0, 549, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 1102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1186, 1186, 0, 0, 739,
	0, 503, 0, 0, 1220, 1222, 549, 0, 0, 0,
	0, 1149, 0, 0, 0, 1364, 0, 1410, 0, 0,
	549, 549, 0, 0, 0, 0, 0, 0, 549, 0,
	503, 0, 0, 0, 2126, 0, 0, 0, 0, 0,
	0, 0, 0, 739, 0, 0, 1456, 1185, 0, 0,
	2151, 1364, 1185, 0, 0, 561, 0, 0, 0, 0,
	0, 0, 503, 0, 0, 0, 0, 0, 0, 503,
	549, 0, 0, 0, 0, 0, 0, 0, 1479, 1480,
	503, 503, 503, 503, 503, 503, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 892, 0, 0, 1185, 0, 0, 0, 0, 1235,
	1650, 0, 0, 0, 78, 39, 40, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 43, 69,
	70, 724, 67, 71, 0, 0, 0, 0, 724, 724,
	0, 68, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 724, 1456, 724, 724, 724, 724, 724, 0,
	56, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 2126, 0, 0, 0, 0, 0, 0, 0, 0,
	1065, 1065, 1065, 724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 1456, 0, 503, 0,
	503, 0, 503, 1683, 0, 0, 0, 696, 1137, 1138,
	1139, 0, 1142, 0, 1144, 1145, 1146, 1147, 0, 1150,
	1152, 1152, 0, 1152, 1156, 1156, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 0, 1170, 1171,
	1172, 1173, 1174, 0, 0, 0, 0, 1156, 1156, 1156,
	1156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 1650, 46, 49, 52, 51, 54, 0,
	66, 0, 0, 75, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2402,
	2403, 2404, 2405, 0, 0, 0, 55, 83, 82, 0,
	0, 64, 65, 53, 0, 0, 0, 0, 0, 73,
	74, 0, 0, 0, 1195, 0, 0, 0, 0, 0,
	696, 0, 0, 0, 696, 0, 0, 0, 0, 0,
	696, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 58, 0, 59, 60,
	61, 62, 0, 0, 1185, 0, 0, 1459, 0, 2445,
	0, 2447, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1567, 0, 0, 0,
	1568, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 503, 0, 0, 0,
	0, 503, 503, 0, 0, 503, 0, 1823, 0, 0,
	0, 0, 1220, 1623, 503, 1650, 0, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 1194,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 1512,
	1513, 1514, 1515, 0, 0, 1646, 0, 0, 0, 503,
	0, 0, 2501, 0, 0, 0, 2501, 2501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 1553,
	1554, 0, 0, 502, 0, 1650, 0, 1559, 0, 0,
	0, 86, 0, 551, 0, 0, 0, 0, 1650, 0,
	0, 686, 1594, 1595, 1596, 1598, 561, 1607, 1608, 0,
	0, 0, 0, 0, 724, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 896, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1185, 0, 2549, 0, 0, 0, 0,
	0, 0, 0, 0, 724, 724, 0, 0, 0, 739,
	739, 0, 1657, 1658, 0, 1456, 0, 2569, 503, 0,
	0, 0, 0, 0, 0, 0, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 503, 0, 503, 628, 635, 636, 637, 638, 639,
	629, 631, 0, 0, 0, 630, 0, 0, 633, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1065, 1065, 1065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2243, 2244, 0, 503, 0, 0,
	0, 0, 0, 0, 2007, 0, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 503, 503, 503, 503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 503, 0, 1849, 0, 0, 0, 1853,
	0, 1854, 1855, 0, 0, 0, 0, 0, 503, 0,
	1863, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	1871, 0, 1873, 0, 0, 0, 1875, 0, 1876, 0,
	0, 0, 1879, 1880, 0, 0, 0, 724, 0, 0,
	1885, 1886, 1887, 1888, 1889, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1902, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 1186, 503, 503, 503, 503, 503, 0, 0, 0,
	0, 0, 0, 0, 2167, 0, 1862, 0, 0, 503,
	0, 1410, 0, 503, 0, 0, 503, 2177, 1456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1005,
	0, 1011, 0, 0, 1013, 0, 0, 0, 1149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	1235, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	0, 0, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 2108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 1247, 0, 2150,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 0,
	0, 503, 503, 503, 0, 0, 2168, 2169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2091, 2092, 0,
	0, 0, 2095, 0, 0, 0, 2097, 2098, 2099, 0,
	0, 0, 0, 0, 0, 2104, 0, 0, 1607, 2106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1410, 0, 0, 0, 1900, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2139, 0, 1186, 0, 0, 696, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1935, 1936, 0, 2269,
	0, 0, 0, 0, 0, 1955, 1956, 0, 0, 0,
	0, 0, 0, 2279, 2280, 2282, 2284, 0, 0, 1265,
	0, 0, 0, 2290, 0, 0, 0, 0, 2294, 0,
	0, 0, 0, 2295, 0, 0, 0, 0, 0, 2300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2322, 2323, 0, 0, 2327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2339, 2340, 0, 1395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2287, 0, 0,
	0, 0, 503, 0, 2293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1466, 2389,
	0, 0, 0, 0, 0, 1470, 0, 0, 0, 0,
	0, 0, 1186, 0, 0, 0, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 0, 0, 0, 0, 0, 0, 561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 2416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2148, 0, 79, 2379, 0, 1677, 1677, 1677, 1677,
	1677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2394, 0, 0, 1955, 696, 0, 0, 1677, 0, 0,
	1677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2482, 0,
	0, 0, 2408, 0, 2409, 0, 0, 0, 0, 2412,
	2413, 0, 2492, 2493, 2494, 0, 2495, 2496, 0, 0,
	0, 2500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2239, 2441, 0, 0, 0, 0, 1663, 0, 0, 0,
	0, 0, 2449, 0, 1667, 2451, 1670, 0, 2524, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 2454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2464,
	0, 0, 2268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2543, 0, 0, 0, 0, 561, 2544,
	2545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2509, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1677, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2347, 0, 0, 561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2387, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 1816, 1817, 0,
	0, 1821, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 0, 0, 0, 0, 2583, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2417, 1830, 2421, 2422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2148,
	0, 79, 0, 2148, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 2048, 2049, 2050, 2051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 2057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2258, 0, 0, 2261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2372, 0, 0, 2373, 2374, 2375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	870, 855, 424, 0, 802, 873, 772, 790, 883, 793,
	796, 837, 751, 816, 345, 787, 0, 776, 746, 782,
	747, 774, 804, 244, 771, 857, 820, 872, 300, 241,
	753, 777, 359, 792, 193, 839, 400, 228, 310, 307,
	431, 255, 247, 243, 227, 281, 317, 357, 418, 351,
	879, 304, 826, 0, 409, 330, 0, 0, 0, 806,
	861, 814, 851, 801, 838, 761, 825, 874, 788, 834,
	875, 287, 226, 192, 342, 410, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 2563, 0, 2564, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 784, 831, 869,
	785, 833, 239, 285, 246, 238, 428, 880, 860, 750,
	813, 868, 0, 0, 209, 871, 808, 0, 836, 0,
	886, 745, 828, 0, 748, 752, 882, 864, 780, 249,
	0, 0, 0, 0, 0, 0, 0, 805, 815, 848,
	799, 0, 0, 0, 0, 0, 0, 0, 778, 0,
	824, 0, 0, 0, 757, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 803, 0, 0,
	0, 760, 0, 779, 849, 0, 743, 268, 754, 331,
	231, 0, 853, 863, 800, 462, 867, 798, 797, 843,
	758, 859, 791, 299, 756, 293, 188, 205, 2537, 789,
	341, 382, 388, 858, 775, 783, 229, 781, 386, 355,
	446, 213, 257, 379, 360, 384, 367, 260, 823, 841,
	385, 305, 433, 374, 443, 463, 464, 237, 335, 453,
	422, 459, 475, 206, 234, 349, 415, 449, 406, 328,
	429, 430, 292, 405, 266, 191, 303, 469, 204, 394,
	221, 211, 197, 417, 441, 218, 397, 0, 0, 477,
	199, 439, 414, 324, 289, 290, 198, 0, 378, 242,
	264, 232, 344, 436, 437, 230, 478, 208, 458, 201,
	1067, 457, 337, 432, 440, 325, 315, 200, 438, 323,
	314, 295, 253, 275, 372, 308, 373, 276, 333, 332,
	334, 194, 450, 0, 195, 0, 411, 451, 479, 214,
	215, 216, 770, 252, 256, 263, 265, 271, 272, 279,
	301, 348, 371, 369, 375, 854, 427, 444, 454, 461,
	467, 468, 470, 471, 472, 473, 474, 336, 278, 407,
	294, 306, 846, 885, 354, 387, 219, 448, 408, 765,
	769, 763, 764, 818, 819, 766, 876, 877, 878, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 850, 759,
	0, 767, 768, 0, 856, 865, 866, 498, 316, 399,
	445, 296, 297, 298, 822, 187, 202, 302, 881, 376,
	261, 476, 456, 452, 744, 762, 236, 773, 0, 0,
	786, 794, 795, 807, 809, 810, 811, 812, 327, 829,
	830, 832, 840, 842, 845, 847, 852, 862, 884, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 312, 318, 319, 320, 321, 338,
	339, 340, 343, 346, 347, 350, 352, 353, 356, 363,
	364, 365, 366, 368, 370, 377, 381, 389, 390, 391,
	392, 393, 395, 396, 401, 402, 403, 404, 412, 416,
	434, 435, 447, 460, 465, 270, 442, 466, 0, 311,
	821, 827, 313, 254, 273, 284, 835, 455, 413, 207,
	383, 262, 196, 225, 210, 233, 248, 251, 288, 322,
	329, 358, 362, 267, 245, 223, 380, 220, 398, 419,
	420, 421, 423, 326, 240, 361, 817, 844, 309, 425,
	426, 280, 870, 855, 424, 0, 802, 873, 772, 790,
	883, 793, 796, 837, 751, 816, 345, 787, 0, 776,
	746, 782, 747, 774, 804, 244, 771, 857, 820, 872,
	300, 241, 753, 777, 359, 792, 193, 839, 400, 228,
	310, 307, 431, 255, 247, 243, 227, 281, 317, 357,
	418, 351, 879, 304, 826, 0, 409, 330, 0, 0,
	0, 806, 861, 814, 851, 801, 838, 761, 825, 874,
	788, 834, 875, 287, 226, 192, 342, 410, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 784,
	831, 869, 785, 833, 239, 285, 246, 238, 428, 880,
	860, 750, 813, 868, 0, 0, 209, 871, 808, 0,
	836, 0, 886, 745, 828, 0, 748, 752, 882, 864,
	780, 249, 0, 0, 0, 0, 0, 0, 0, 805,
	815, 848, 799, 0, 0, 0, 0, 0, 2178, 0,
	778, 0, 824, 0, 0, 0, 757, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 803,
	0, 0, 0, 760, 0, 779, 849, 0, 743, 268,
	754, 331, 231, 0, 853, 863, 800, 462, 867, 798,
	797, 843, 758, 859, 791, 299, 756, 293, 188, 205,
	0, 789, 341, 382, 388, 858, 775, 783, 229, 781,
	386, 355, 446, 213, 257, 379, 360, 384, 367, 260,
	823, 841, 385, 305, 433, 374, 443, 463, 464, 237,
	335, 453, 422, 459, 475, 206, 234, 349, 415, 449,
	406, 328, 429, 430, 292, 405, 266, 191, 303, 469,
	204, 394, 221, 211, 197, 417, 441, 218, 397, 0,
	0, 477, 199, 439, 414, 324, 289, 290, 198, 0,
	378, 242, 264, 232, 344, 436, 437, 230, 478, 208,
	458, 201, 1067, 457, 337, 432, 440, 325, 315, 200,
	438, 323, 314, 295, 253, 275, 372, 308, 373, 276,
	333, 332, 334, 194, 450, 0, 195, 0, 411, 451,
	479, 214, 215, 216, 770, 252, 256, 263, 265, 271,
	272, 279, 301, 348, 371, 369, 375, 854, 427, 444,
	454, 461, 467, 468, 470, 471, 472, 473, 474, 336,
	278, 407, 294, 306, 846, 885, 354, 387, 219, 448,
	408, 765, 769, 763, 764, 818, 819, 766, 876, 877,
	878, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	850, 759, 0, 767, 768, 0, 856, 865, 866, 498,
	316, 399, 445, 296, 297, 298, 822, 187, 202, 302,
	881, 376, 261, 476, 456, 452, 744, 762, 236, 773,
	0, 0, 786, 794, 795, 807, 809, 810, 811, 812,
	327, 829, 830, 832, 840, 842, 845, 847, 852, 862,
	884, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 312, 318, 319, 320,
	321, 338, 339, 340, 343, 346, 347, 350, 352, 353,
	356, 363, 364, 365, 366, 368, 370, 377, 381, 389,
	390, 391, 392, 393, 395, 396, 401, 402, 403, 404,
	412, 416, 434, 435, 447, 460, 465, 270, 442, 466,
	0, 311, 821, 827, 313, 254, 273, 284, 835, 455,
	413, 207, 383, 262, 196, 225, 210, 233, 248, 251,
	288, 322, 329, 358, 362, 267, 245, 223, 380, 220,
	398, 419, 420, 421, 423, 326, 240, 361, 817, 844,
	309, 425, 426, 280, 870, 855, 424, 0, 802, 873,
	772, 790, 883, 793, 796, 837, 751, 816, 345, 787,
	0, 776, 746, 782, 747, 774, 804, 244, 771, 857,
	820, 872, 300, 241, 753, 777, 359, 792, 193, 839,
	400, 228, 310, 307, 431, 255, 247, 243, 227, 281,
	317, 357, 418, 351, 879, 304, 826, 0, 409, 330,
	0, 0, 0, 806, 861, 814, 851, 801, 838, 761,
	825, 874, 788, 834, 875, 287, 226, 192, 342, 410,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 784, 831, 869, 785, 833, 239, 285, 246, 238,
	428, 880, 860, 750, 813, 868, 0, 0, 209, 871,
	808, 0, 836, 0, 886, 745, 828, 0, 748, 752,
	882, 864, 780, 249, 0, 0, 0, 0, 0, 0,
	0, 805, 815, 848, 799, 0, 0, 0, 0, 0,
	2137, 0, 778, 0, 824, 0, 0, 0, 757, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 803, 0, 0, 0, 760, 0, 779, 849, 0,
	743, 268, 754, 331, 231, 0, 853, 863, 800, 462,
	867, 798, 797, 843, 758, 859, 791, 299, 756, 293,
	188, 205, 0, 789, 341, 382, 388, 858, 775, 783,
	229, 781, 386, 355, 446, 213, 257, 379, 360, 384,
	367, 260, 823, 841, 385, 305, 433, 374, 443, 463,
	464, 237, 335, 453, 422, 459, 475, 206, 234, 349,
	415, 449, 406, 328, 429, 430, 292, 405, 266, 191,
	303, 469, 204, 394, 221, 211, 197, 417, 441, 218,
	397, 0, 0, 477, 199, 439, 414, 324, 289, 290,
	198, 0, 378, 242, 264, 232, 344, 436, 437, 230,
	478, 208, 458, 201, 1067, 457, 337, 432, 440, 325,
	315, 200, 438, 323, 314, 295, 253, 275, 372, 308,
	373, 276, 333, 332, 334, 194, 450, 0, 195, 0,
	411, 451, 479, 214, 215, 216, 770, 252, 256, 263,
	265, 271, 272, 279, 301, 348, 371, 369, 375, 854,
	427, 444, 454, 461, 467, 468, 470, 471, 472, 473,
	474, 336, 278, 407, 294, 306, 846, 885, 354, 387,
	219, 448, 408, 765, 769, 763, 764, 818, 819, 766,
	876, 877, 878, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 850, 759, 0, 767, 768, 0, 856, 865,
	866, 498, 316, 399, 445, 296, 297, 298, 822, 187,
	202, 302, 881, 376, 261, 476, 456, 452, 744, 762,
	236, 773, 0, 0, 786, 794, 795, 807, 809, 810,
	811, 812, 327, 829, 830, 832, 840, 842, 845, 847,
	852, 862, 884, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 312, 318,
	319, 320, 321, 338, 339, 340, 343, 346, 347, 350,
	352, 353, 356, 363, 364, 365, 366, 368, 370, 377,
	381, 389, 390, 391, 392, 393, 395, 396, 401, 402,
	403, 404, 412, 416, 434, 435, 447, 460, 465, 270,
	442, 466, 0, 311, 821, 827, 313, 254, 273, 284,
	835, 455, 413, 207, 383, 262, 196, 225, 210, 233,
	248, 251, 288, 322, 329, 358, 362, 267, 245, 223,
	380, 220, 398, 419, 420, 421, 423, 326, 240, 361,
	817, 844, 309, 425, 426, 280, 870, 855, 424, 0,
	802, 873, 772, 790, 883, 793, 796, 837, 751, 816,
	345, 787, 0, 776, 746, 782, 747, 774, 804, 244,
	771, 857, 820, 872, 300, 241, 753, 777, 359, 792,
	193, 839, 400, 228, 310, 307, 431, 255, 247, 243,
	227, 281, 317, 357, 418, 351, 879, 304, 826, 0,
	409, 330, 0, 0, 0, 806, 861, 814, 851, 801,
	838, 761, 825, 874, 788, 834, 875, 287, 226, 192,
	342, 410, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 784, 831, 869, 785, 833, 239, 285,
	246, 238, 428, 880, 860, 750, 813, 868, 0, 0,
	209, 871, 808, 0, 836, 0, 886, 745, 828, 0,
	748, 752, 882, 864, 780, 249, 0, 0, 0, 0,
	0, 0, 0, 805, 815, 848, 799, 0, 0, 0,
	0, 0, 1665, 0, 778, 0, 824, 0, 0, 0,
	757, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 803, 0, 0, 0, 760, 0, 779,
	849, 0, 743, 268, 754, 331, 231, 0, 853, 863,
	800, 462, 867, 798, 797, 843, 758, 859, 791, 299,
	756, 293, 188, 205, 0, 789, 341, 382, 388, 858,
	775, 783, 229, 781, 386, 355, 446, 213, 257, 379,
	360, 384, 367, 260, 823, 841, 385, 305, 433, 374,
	443, 463, 464, 237, 335, 453, 422, 459, 475, 206,
	234, 349, 415, 449, 406, 328, 429, 430, 292, 405,
	266, 191, 303, 469, 204, 394, 221, 211, 197, 417,
	441, 218, 397, 0, 0, 477, 199, 439, 414, 324,
	289, 290, 198, 0, 378, 242, 264, 232, 344, 436,
	437, 230, 478, 208, 458, 201, 1067, 457, 337, 432,
	440, 325, 315, 200, 438, 323, 314, 295, 253, 275,
	372, 308, 373, 276, 333, 332, 334, 194, 450, 0,
	195, 0, 411, 451, 479, 214, 215, 216, 770, 252,
	256, 263, 265, 271, 272, 279, 301, 348, 371, 369,
	375, 854, 427, 444, 454, 461, 467, 468, 470, 471,
	472, 473, 474, 336, 278, 407, 294, 306, 846, 885,
	354, 387, 219, 448, 408, 765, 769, 763, 764, 818,
	819, 766, 876, 877, 878, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 850, 759, 0, 767, 768, 0,
	856, 865, 866, 498, 316, 399, 445, 296, 297, 298,
	822, 187, 202, 302, 881, 376, 261, 476, 456, 452,
	744, 762, 236, 773, 0, 0, 786, 794, 795, 807,
	809, 810, 811, 812, 327, 829, 830, 832, 840, 842,
	845, 847, 852, 862, 884, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	312, 318, 319, 320, 321, 338, 339, 340, 343, 346,
	347, 350, 352, 353, 356, 363, 364, 365, 366, 368,
	370, 377, 381, 389, 390, 391, 392, 393, 395, 396,
	401, 402, 403, 404, 412, 416, 434, 435, 447, 460,
	465, 270, 442, 466, 0, 311, 821, 827, 313, 254,
	273, 284, 835, 455, 413, 207, 383, 262, 196, 225,
	210, 233, 248, 251, 288, 322, 329, 358, 362, 267,
	245, 223, 380, 220, 398, 419, 420, 421, 423, 326,
	240, 361, 817, 844, 309, 425, 426, 280, 870, 855,
	424, 0, 802, 873, 772, 790, 883, 793, 796, 837,
	751, 816, 345, 787, 0, 776, 746, 782, 747, 774,
	804, 244, 771, 857, 820, 872, 300, 241, 753, 777,
	359, 792, 193, 839, 400, 228, 310, 307, 431, 255,
	247, 243, 227, 281, 317, 357, 418, 351, 879, 304,
	826, 0, 409, 330, 0, 0, 0, 806, 861, 814,
	851, 801, 838, 761, 825, 874, 788, 834, 875, 287,
	226, 192, 342, 410, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 784, 831, 869, 785, 833,
	239, 285, 246, 238, 428, 880, 860, 750, 813, 868,
	0, 0, 209, 871, 808, 0, 836, 0, 886, 745,
	828, 0, 748, 752, 882, 864, 780, 249, 0, 0,
	0, 0, 0, 0, 0, 805, 815, 848, 799, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 824, 0,
	0, 0, 757, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 803, 0, 0, 0, 760,
	0, 779, 849, 0, 743, 268, 754, 331, 231, 0,
	853, 863, 800, 462, 867, 798, 797, 843, 758, 859,
	791, 299, 756, 293, 188, 205, 0, 789, 341, 382,
	388, 858, 775, 783, 229, 781, 386, 355, 446, 213,
	257, 379, 360, 384, 367, 260, 823, 841, 385, 305,
	433, 374, 443, 463, 464, 237, 335, 453, 422, 459,
	475, 206, 234, 349, 415, 449, 406, 328, 429, 430,
	292, 405, 266, 191, 303, 469, 204, 394, 221, 211,
	197, 417, 441, 218, 397, 0, 0, 477, 199, 439,
	414, 324, 289, 290, 198, 0, 378, 242, 264, 232,
	344, 436, 437, 230, 478, 208, 458, 201, 1067, 457,
	337, 432, 440, 325, 315, 200, 438, 323, 314, 295,
	253, 275, 372, 308, 373, 276, 333, 332, 334, 194,
	450, 0, 195, 0, 411, 451, 479, 214, 215, 216,
	770, 252, 256, 263, 265, 271, 272, 279, 301, 348,
	371, 369, 375, 854, 427, 444, 454, 461, 467, 468,
	470, 471, 472, 473, 474, 336, 278, 407, 294, 306,
	846, 885, 354, 387, 219, 448, 408, 765, 769, 763,
	764, 818, 819, 766, 876, 877, 878, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 850, 759, 0, 767,
	768, 0, 856, 865, 866, 498, 316, 399, 445, 296,
	297, 298, 822, 187, 202, 302, 881, 376, 261, 476,
	456, 452, 744, 762, 236, 773, 0, 0, 786, 794,
	795, 807, 809, 810, 811, 812, 327, 829, 830, 832,
	840, 842, 845, 847, 852, 862, 884, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 312, 318, 319, 320, 321, 338, 339, 340,
	343, 346, 347, 350, 352, 353, 356, 363, 364, 365,
	366, 368, 370, 377, 381, 389, 390, 391, 392, 393,
	395, 396, 401, 402, 403, 404, 412, 416, 434, 435,
	447, 460, 465, 270, 442, 466, 0, 311, 821, 827,
	313, 254, 273, 284, 835, 455, 413, 207, 383, 262,
	196, 225, 210, 233, 248, 251, 288, 322, 329, 358,
	362, 267, 245, 223, 380, 220, 398, 419, 420, 421,
	423, 326, 240, 361, 817, 844, 309, 425, 426, 280,
	870, 855, 424, 0, 802, 873, 772, 790, 883, 793,
	796, 837, 751, 816, 345, 787, 0, 776, 746, 782,
	747, 774, 804, 244, 771, 857, 820, 872, 300, 241,
	753, 777, 359, 792, 193, 839, 400, 228, 310, 307,
	431, 255, 247, 243, 227, 281, 317, 357, 418, 351,
	879, 304, 826, 0, 409, 330, 0, 0, 0, 806,
	861, 814, 851, 801, 838, 761, 825, 874, 788, 834,
	875, 287, 226, 192, 342, 410, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 784, 831, 869,
	785, 833, 239, 285, 246, 238, 428, 880, 860, 750,
	813, 868, 0, 0, 209, 871, 808, 0, 836, 0,
	886, 745, 828, 0, 748, 752, 882, 864, 780, 249,
	0, 0, 0, 0, 0, 0, 0, 805, 815, 848,
	799, 0, 0, 0, 0, 0, 0, 0, 778, 0,
	824, 0, 0, 0, 757, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 803, 0, 0,
	0, 760, 0, 779, 849, 0, 743, 268, 754, 331,
	231, 0, 853, 863, 800, 462, 867, 798, 797, 843,
	758, 859, 791, 299, 756, 293, 188, 205, 0, 789,
	341, 382, 388, 858, 775, 783, 229, 781, 386, 355,
	446, 213, 257, 379, 360, 384, 367, 260, 823, 841,
	385, 305, 433, 374, 443, 463, 464, 237, 335, 453,
	422, 459, 475, 206, 234, 349, 415, 449, 406, 328,
	429, 430, 292, 405, 266, 191, 303, 469, 204, 394,
	221, 211, 197, 417, 441, 218, 397, 0, 0, 477,
	199, 439, 414, 324, 289, 290, 198, 0, 378, 242,
	264, 232, 344, 436, 437, 230, 478, 208, 458, 201,
	1067, 457, 337, 432, 440, 325, 315, 200, 438, 323,
	314, 295, 253, 275, 372, 308, 373, 276, 333, 332,
	334, 194, 450, 0, 195, 0, 411, 451, 479, 214,
	215, 216, 770, 252, 256, 263, 265, 271, 272, 279,
	301, 348, 371, 369, 375, 854, 427, 444, 454, 461,
	467, 468, 470, 471, 472, 473, 474, 336, 278, 407,
	294, 306, 846, 885, 354, 387, 219, 448, 408, 765,
	769, 763, 764, 818, 819, 766, 876, 877, 878, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 850, 759,
	0, 767, 768, 0, 856, 865, 866, 498, 316, 399,
	445, 296, 297, 298, 822, 187, 202, 302, 881, 376,
	261, 476, 456, 452, 744, 762, 236, 773, 0, 0,
	786, 794, 795, 807, 809, 810, 811, 812, 327, 829,
	830, 832, 840, 842, 845, 847, 852, 862, 884, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 312, 318, 319, 320, 321, 338,
	339, 340, 343, 346, 347, 350, 352, 353, 356, 363,
	364, 365, 366, 368, 370, 377, 381, 389, 390, 391,
	392, 393, 395, 396, 401, 402, 403, 404, 412, 416,
	434, 435, 447, 460, 465, 270, 442, 466, 0, 311,
	821, 827, 313, 254, 273, 284, 835, 455, 413, 207,
	383, 262, 196, 225, 210, 233, 248, 251, 288, 322,
	329, 358, 362, 267, 245, 223, 380, 220, 398, 419,
	420, 421, 423, 326, 240, 361, 817, 844, 309, 425,
	426, 280, 870, 855, 424, 0, 802, 873, 772, 790,
	883, 793, 796, 837, 751, 816, 345, 787, 0, 776,
	746, 782, 747, 774, 804, 244, 771, 857, 820, 872,
	300, 241, 753, 777, 359, 792, 193, 839, 400, 228,
	310, 307, 431, 255, 247, 243, 227, 281, 317, 357,
	418, 351, 879, 304, 826, 0, 409, 330, 0, 0,
	0, 806, 861, 814, 851, 801, 838, 761, 825, 874,
	788, 834, 875, 287, 226, 192, 342, 410, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 784,
	831, 869, 785, 833, 239, 285, 246, 238, 428, 880,
	860, 750, 813, 868, 0, 0, 887, 871, 808, 0,
	836, 0, 886, 745, 828, 0, 748, 752, 882, 864,
	780, 249, 0, 0, 0, 0, 0, 0, 0, 805,
	815, 848, 799, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 824, 0, 0, 0, 757, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 803,
	0, 0, 0, 760, 0, 779, 849, 0, 743, 268,
	754, 331, 231, 0, 853, 863, 800, 462, 867, 798,
	797, 843, 758, 859, 791, 299, 756, 293, 188, 205,
	0, 789, 341, 382, 388, 858, 775, 783, 229, 781,
	386, 355, 446, 213, 257, 379, 360, 384, 367, 260,
	823, 841, 385, 305, 433, 374, 443, 463, 464, 237,
	335, 453, 422, 459, 475, 206, 234, 349, 415, 449,
	406, 328, 429, 430, 292, 405, 266, 191, 303, 469,
	204, 394, 221, 211, 197, 417, 441, 218, 397, 0,
	0, 477, 199, 439, 414, 324, 289, 290, 198, 0,
	378, 242, 264, 232, 344, 436, 437, 230, 478, 208,
	458, 201, 755, 457, 337, 432, 440, 325, 315, 200,
	438, 323, 314, 295, 253, 275, 372, 308, 373, 276,
	333, 332, 334, 194, 450, 0, 195, 0, 411, 451,
	479, 214, 215, 216, 770, 252, 256, 263, 265, 271,
	272, 279, 301, 348, 371, 369, 375, 854, 427, 444,
	454, 461, 467, 468, 470, 471, 472, 473, 474, 742,
	736, 735, 294, 306, 846, 885, 354, 387, 219, 448,
	408, 765, 769, 763, 764, 818, 819, 766, 876, 877,
	878, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	850, 759, 0, 767, 768, 0, 856, 865, 866, 498,
	316, 399, 445, 296, 297, 298, 822, 187, 202, 302,
	881, 376, 261, 476, 456, 452, 744, 762, 236, 773,
	0, 0, 786, 794, 795, 807, 809, 810, 811, 812,
	327, 829, 830, 832, 840, 842, 845, 847, 852, 862,
	884, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 312, 318, 319, 320,
	321, 338, 339, 340, 343, 346, 347, 350, 352, 353,
	356, 363, 364, 365, 366, 368, 370, 377, 381, 389,
	390, 391, 392, 393, 395, 396, 401, 402, 403, 404,
	412, 416, 434, 435, 447, 460, 465, 270, 442, 466,
	0, 311, 821, 827, 313, 254, 273, 284, 835, 455,
	413, 207, 383, 262, 196, 225, 210, 233, 248, 251,
	288, 322, 329, 358, 362, 267, 245, 223, 380, 220,
	398, 419, 420, 421, 423, 326, 240, 361, 817, 844,
	309, 425, 426, 280, 870, 855, 424, 0, 802, 873,
	772, 790, 883, 793, 796, 837, 751, 816, 345, 787,
	0, 776, 746, 782, 747, 774, 804, 244, 771, 857,
	820, 872, 300, 241, 753, 777, 359, 792, 193, 839,
	400, 228, 310, 307, 431, 255, 247, 243, 227, 281,
	317, 357, 418, 351, 879, 304, 826, 0, 409, 330,
	0, 0, 0, 806, 861, 814, 851, 801, 838, 761,
	825, 874, 788, 834, 875, 287, 226, 192, 342, 410,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 784, 831, 869, 785, 833, 239, 285, 246, 238,
	428, 880, 860, 750, 813, 868, 0, 0, 887, 871,
	808, 0, 836, 0, 886, 745, 828, 0, 748, 752,
	882, 864, 780, 249, 0, 0, 0, 0, 0, 0,
	0, 805, 815, 848, 799, 0, 0, 0, 0, 0,
	0, 0, 778, 0, 824, 0, 0, 0, 757, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 803, 0, 0, 0, 760, 0, 779, 849, 0,
	743, 268, 754, 331, 231, 0, 853, 863, 800, 462,
	867, 798, 797, 843, 758, 859, 791, 299, 756, 293,
	188, 205, 0, 789, 341, 382, 388, 858, 775, 783,
	229, 781, 386, 355, 446, 213, 257, 379, 360, 384,
	367, 260, 823, 841, 385, 305, 433, 374, 443, 463,
	464, 237, 335, 453, 422, 459, 475, 206, 234, 349,
	415, 449, 406, 328, 429, 430, 292, 405, 266, 191,
	303, 469, 204, 394, 221, 211, 197, 417, 1251, 218,
	397, 0, 0, 477, 199, 439, 414, 324, 289, 290,
	198, 0, 378, 242, 264, 232, 344, 436, 437, 230,
	478, 208, 458, 201, 755, 457, 337, 432, 440, 325,
	315, 200, 438, 323, 314, 295, 253, 275, 372, 308,
	373, 276, 333, 332, 334, 194, 450, 0, 195, 0,
	411, 451, 479, 214, 215, 216, 770, 252, 256, 263,
	265, 271, 272, 279, 301, 348, 371, 369, 375, 854,
	427, 444, 454, 461, 467, 468, 470, 471, 472, 473,
	474, 742, 736, 735, 294, 306, 846, 885, 354, 387,
	219, 448, 408, 765, 769, 763, 764, 818, 819, 766,
	876, 877, 878, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 850, 759, 0, 767, 768, 0, 856, 865,
	866, 498, 316, 399, 445, 296, 297, 298, 822, 187,
	202, 302, 881, 376, 261, 476, 456, 452, 744, 762,
	236, 773, 0, 0, 786, 794, 795, 807, 809, 810,
	811, 812, 327, 829, 830, 832, 840, 842, 845, 847,
	852, 862, 884, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 312, 318,
	319, 320, 321, 338, 339, 340, 343, 346, 347, 350,
	352, 353, 356, 363, 364, 365, 366, 368, 370, 377,
	381, 389, 390, 391, 392, 393, 395, 396, 401, 402,
	403, 404, 412, 416, 434, 435, 447, 460, 465, 270,
	442, 466, 0, 311, 821, 827, 313, 254, 273, 284,
	835, 455, 413, 207, 383, 262, 196, 225, 210, 233,
	248, 251, 288, 322, 329, 358, 362, 267, 245, 223,
	380, 220, 398, 419, 420, 421, 423, 326, 240, 361,
	817, 844, 309, 425, 426, 280, 870, 855, 424, 0,
	802, 873, 772, 790, 883, 793, 796, 837, 751, 816,
	345, 787, 0, 776, 746, 782, 747, 774, 804, 244,
	771, 857, 820, 872, 300, 241, 753, 777, 359, 792,
	193, 839, 400, 228, 310, 307, 431, 255, 247, 243,
	227, 281, 317, 357, 418, 351, 879, 304, 826, 0,
	409, 330, 0, 0, 0, 806, 861, 814, 851, 801,
	838, 761, 825, 874, 788, 834, 875, 287, 226, 192,
	342, 410, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 784, 831, 869, 785, 833, 239, 285,
	246, 238, 428, 880, 860, 750, 813, 868, 0, 0,
	887, 871, 808, 0, 836, 0, 886, 745, 828, 0,
	748, 752, 882, 864, 780, 249, 0, 0, 0, 0,
	0, 0, 0, 805, 815, 848, 799, 0, 0, 0,
	0, 0, 0, 0, 778, 0, 824, 0, 0, 0,
	757, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 803, 0, 0, 0, 760, 0, 779,
	849, 0, 743, 268, 754, 331, 231, 0, 853, 863,
	800, 462, 867, 798, 797, 843, 758, 859, 791, 299,
	756, 293, 188, 205, 0, 789, 341, 382, 388, 858,
	775, 783, 229, 781, 386, 355, 446, 213, 257, 379,
	360, 384, 367, 260, 823, 841, 385, 305, 433, 374,
	443, 463, 464, 237, 335, 453, 422, 459, 475, 206,
	234, 349, 415, 449, 406, 328, 429, 430, 292, 405,
	266, 191, 303, 469, 204, 394, 221, 211, 197, 417,
	733, 218, 397, 0, 0, 477, 199, 439, 414, 324,
	289, 290, 198, 0, 378, 242, 264, 232, 344, 436,
	437, 230, 478, 208, 458, 201, 755, 457, 337, 432,
	440, 325, 315, 200, 438, 323, 314, 295, 253, 275,
	372, 308, 373, 276, 333, 332, 334, 194, 450, 0,
	195, 0, 411, 451, 479, 214, 215, 216, 770, 252,
	256, 263, 265, 271, 272, 279, 301, 348, 371, 369,
	375, 854, 427, 444, 454, 461, 467, 468, 470, 471,
	472, 473, 474, 742, 736, 735, 294, 306, 846, 885,
	354, 387, 219, 448, 408, 765, 769, 763, 764, 818,
	819, 766, 876, 877, 878, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 850, 759, 0, 767, 768, 0,
	856, 865, 866, 498, 316, 399, 445, 296, 297, 298,
	822, 187, 202, 302, 881, 376, 261, 476, 456, 452,
	744, 762, 236, 773, 0, 0, 786, 794, 795, 807,
	809, 810, 811, 812, 327, 829, 830, 832, 840, 842,
	845, 847, 852, 862, 884, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	312, 318, 319, 320, 321, 338, 339, 340, 343, 346,
	347, 350, 352, 353, 356, 363, 364, 365, 366, 368,
	370, 377, 381, 389, 390, 391, 392, 393, 395, 396,
	401, 402, 403, 404, 412, 416, 434, 435, 447, 460,
	465, 270, 442, 466, 0, 311, 821, 827, 313, 254,
	273, 284, 835, 455, 413, 207, 383, 262, 196, 225,
	210, 233, 248, 251, 288, 322, 329, 358, 362, 267,
	245, 223, 380, 220, 398, 419, 420, 421, 423, 326,
	240, 361, 817, 844, 309, 425, 426, 280, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 1610, 0, 579, 0, 0, 0, 244,
	584, 0, 0, 0, 300, 241, 0, 1611, 359, 0,
	193, 0, 400, 228, 310, 307, 431, 255, 247, 243,
	227, 281, 317, 357, 418, 351, 591, 304, 0, 0,
	409, 330, 0, 0, 0, 0, 0, 586, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	342, 410, 259, 0, 87, 0, 0, 184, 185, 186,
	628, 635, 636, 637, 638, 639, 629, 631, 0, 0,
	217, 630, 224, 600, 633, 640, 641, 0, 239, 285,
	246, 238, 428, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 562, 576,
	0, 590, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	573, 574, 722, 0, 0, 0, 613, 0, 575, 0,
	0, 583, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 331, 231, 0, 612, 0,
	0, 462, 0, 0, 610, 0, 0, 0, 0, 299,
	0, 293, 188, 205, 0, 0, 341, 382, 388, 0,
	0, 0, 229, 0, 386, 355, 446, 213, 257, 379,
	360, 384, 367, 260, 0, 0, 385, 305, 433, 374,
	443, 463, 464, 237, 335, 453, 422, 459, 475, 206,
	234, 349, 415, 449, 406, 328, 429, 430, 292, 405,
	266, 191, 303, 469, 204, 394, 221, 211, 197, 417,
	441, 218, 397, 0, 0, 477, 199, 439, 414, 324,
	289, 290, 198, 0, 378, 242, 264, 232, 344, 436,
	437, 230, 478, 208, 458, 201, 0, 457, 337, 432,
	440, 325, 315, 200, 438, 323, 314, 295, 253, 275,
	372, 308, 373, 276, 333, 332, 334, 194, 450, 0,
	195, 0, 411, 451, 479, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 301, 348, 371, 369,
	375, 0, 427, 444, 454, 461, 467, 468, 470, 471,
	472, 473, 474, 336, 278, 407, 294, 306, 0, 0,
	354, 387, 219, 448, 408, 619, 611, 595, 597, 620,
	621, 592, 593, 596, 622, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 614, 582, 581, 0, 588, 589,
	0, 598, 599, 601, 602, 603, 604, 605, 606, 607,
	580, 187, 202, 302, 0, 376, 261, 476, 456, 452,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	312, 318, 319, 320, 321, 338, 339, 340, 343, 346,
	347, 350, 352, 353, 356, 363, 364, 365, 366, 368,
	370, 377, 381, 389, 390, 391, 392, 393, 395, 396,
	401, 402, 403, 404, 412, 416, 434, 435, 447, 460,
	465, 270, 442, 466, 0, 311, 0, 0, 313, 254,
	273, 284, 0, 455, 413, 207, 383, 262, 196, 225,
	210, 233, 248, 251, 288, 322, 329, 358, 362, 267,
	245, 223, 380, 220, 398, 419, 420, 421, 423, 326,
	240, 361, 424, 0, 309, 425, 426, 280, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 579,
	0, 0, 0, 244, 584, 0, 0, 0, 300, 241,
	0, 0, 359, 0, 193, 0, 400, 228, 310, 307,
	431, 255, 247, 243, 227, 281, 317, 357, 418, 351,
	591, 304, 0, 0, 409, 330, 0, 0, 0, 0,
	0, 586, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 342, 410, 259, 0, 87, 0,
	0, 184, 185, 186, 628, 635, 636, 637, 638, 639,
	629, 631, 0, 0, 217, 630, 224, 600, 633, 640,
	641, 0, 239, 285, 246, 238, 428, 0, 0, 1599,
	1600, 1601, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 562, 576, 0, 590, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 574, 0, 0, 0, 0,
	613, 0, 575, 0, 0, 583, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 331,
	231, 0, 612, 0, 0, 462, 0, 0, 610, 0,
	0, 0, 0, 299, 0, 293, 188, 205, 0, 0,
	341, 382, 388, 0, 0, 0, 229, 0, 386, 355,
	446, 213, 257, 379, 360, 384, 367, 260, 0, 0,
	385, 305, 433, 374, 443, 463, 464, 237, 335, 453,
	422, 459, 475, 206, 234, 349, 415, 449, 406, 328,
	429, 430, 292, 405, 266, 191, 303, 469, 204, 394,
	221, 211, 197, 417, 441, 218, 397, 0, 0, 477,
	199, 439, 414, 324, 289, 290, 198, 0, 378, 242,
	264, 232, 344, 436, 437, 230, 478, 208, 458, 201,
	0, 457, 337, 432, 440, 325, 315, 200, 438, 323,
	314, 295, 253, 275, 372, 308, 373, 276, 333, 332,
	334, 194, 450, 0, 195, 0, 411, 451, 479, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	301, 348, 371, 369, 375, 0, 427, 444, 454, 461,
	467, 468, 470, 471, 472, 473, 474, 336, 278, 407,
	294, 306, 0, 0, 354, 387, 219, 448, 408, 619,
	611, 595, 597, 620, 621, 592, 593, 596, 622, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 614, 582,
	581, 0, 588, 589, 0, 598, 599, 601, 602, 603,
	604, 605, 606, 607, 580, 187, 202, 302, 0, 376,
	261, 476, 456, 452, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 312, 318, 319, 320, 321, 338,
	339, 340, 343, 346, 347, 350, 352, 353, 356, 363,
	364, 365, 366, 368, 370, 377, 381, 389, 390, 391,
	392, 393, 395, 396, 401, 402, 403, 404, 412, 416,
	434, 435, 447, 460, 465, 270, 442, 466, 0, 311,
	0, 0, 313, 254, 273, 284, 0, 455, 413, 207,
	383, 262, 196, 225, 210, 233, 248, 251, 288, 322,
	329, 358, 362, 267, 245, 223, 380, 220, 398, 419,
	420, 421, 423, 326, 240, 361, 424, 0, 309, 425,
	426, 280, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 579, 0, 0, 0, 244, 584, 0,
	0, 0, 300, 241, 0, 0, 359, 0, 193, 0,
	400, 228, 310, 307, 431, 255, 247, 243, 227, 281,
	317, 357, 418, 351, 591, 304, 0, 0, 409, 330,
	0, 0, 0, 0, 0, 586, 587, 0, 0, 0,
	0, 0, 0, 1690, 0, 287, 226, 192, 342, 410,
	259, 0, 87, 0, 0, 184, 185, 186, 628, 635,
	636, 637, 638, 639, 629, 631, 0, 0, 217, 630,
	224, 600, 633, 640, 641, 1691, 239, 285, 246, 238,
	428, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 562, 576, 0, 590,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 573, 574,
	0, 0, 0, 0, 613, 0, 575, 0, 0, 583,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 331, 231, 0, 612, 0, 0, 462,
	0, 0, 610, 0, 0, 0, 0, 299, 0, 293,
	188, 205, 0, 0, 341, 382, 388, 0, 0, 0,
	229, 0, 386, 355, 446, 213, 257, 379, 360, 384,
	367, 260, 0, 0, 385, 305, 433, 374, 443, 463,
	464, 237, 335, 453, 422, 459, 475, 206, 234, 349,
	415, 449, 406, 328, 429, 430, 292, 405, 266, 191,
	303, 469, 204, 394, 221, 211, 197, 417, 441, 218,
	397, 0, 0, 477, 199, 439, 414, 324, 289, 290,
	198, 0, 378, 242, 264, 232, 344, 436, 437, 230,
	478, 208, 458, 201, 0, 457, 337, 432, 440, 325,
	315, 200, 438, 323, 314, 295, 253, 275, 372, 308,
	373, 276, 333, 332, 334, 194, 450, 0, 195, 0,
	411, 451, 479, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 301, 348, 371, 369, 375, 0,
	427, 444, 454, 461, 467, 468, 470, 471, 472, 473,
	474, 336, 278, 407, 294, 306, 0, 0, 354, 387,
	219, 448, 408, 619, 611, 595, 597, 620, 621, 592,
	593, 596, 622, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 614, 582, 581, 0, 588, 589, 0, 598,
	599, 601, 602, 603, 604, 605, 606, 607, 580, 187,
	202, 302, 0, 376, 261, 476, 456, 452, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 312, 318,
	319, 320, 321, 338, 339, 340, 343, 346, 347, 350,
	352, 353, 356, 363, 364, 365, 366, 368, 370, 377,
	381, 389, 390, 391, 392, 393, 395, 396, 401, 402,
	403, 404, 412, 416, 434, 435, 447, 460, 465, 270,
	442, 466, 0, 311, 0, 0, 313, 254, 273, 284,
	0, 455, 413, 207, 383, 262, 196, 225, 210, 233,
	248, 251, 288, 322, 329, 358, 362, 267, 245, 223,
	380, 220, 398, 419, 420, 421, 423, 326, 240, 361,
	78, 424, 309, 425, 426, 280, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 579, 0,
	0, 0, 244, 584, 0, 0, 0, 300, 241, 0,
	0, 359, 0, 193, 0, 400, 228, 310, 307, 431,
	255, 247, 243, 227, 281, 317, 357, 418, 351, 591,
	304, 0, 0, 409, 330, 0, 0, 0, 0, 0,
	586, 587, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 342, 410, 259, 0, 87, 0, 0,
	184, 185, 186, 628, 635, 636, 637, 638, 639, 629,
	631, 0, 0, 217, 630, 224, 600, 633, 640, 641,
	0, 239, 285, 246, 238, 428, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 562, 576, 0, 590, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 573, 574, 0, 0, 0, 0, 613,
	0, 575, 0, 0, 583, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 331, 231,
	0, 612, 0, 0, 462, 0, 0, 610, 0, 0,
	0, 0, 299, 0, 293, 188, 205, 0, 0, 341,
	382, 388, 0, 0, 0, 229, 0, 386, 355, 446,
	213, 257, 379, 360, 384, 367, 260, 0, 0, 385,
	305, 433, 374, 443, 463, 464, 237, 335, 453, 422,
	459, 475, 206, 234, 349, 415, 449, 406, 328, 429,
	430, 292, 405, 266, 191, 303, 469, 204, 394, 221,
	211, 197, 417, 441, 218, 397, 0, 0, 477, 199,
	439, 414, 324, 289, 290, 198, 0, 378, 242, 264,
	232, 344, 436, 437, 230, 478, 208, 458, 201, 0,
	457, 337, 432, 440, 325, 315, 200, 438, 323, 314,
	295, 253, 275, 372, 308, 373, 276, 333, 332, 334,
	194, 450, 0, 195, 0, 411, 451, 479, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 301,
	348, 371, 369, 375, 0, 427, 444, 454, 461, 467,
	468, 470, 471, 472, 473, 474, 336, 278, 407, 294,
	306, 0, 0, 354, 387, 219, 448, 408, 619, 611,
	595, 597, 620, 621, 592, 593, 596, 622, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 614, 582, 581,
	0, 588, 589, 0, 598, 599, 601, 602, 603, 604,
	605, 606, 607, 580, 187, 202, 302, 86, 376, 261,
	476, 456, 452, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 312, 318, 319, 320, 321, 338, 339,
	340, 343, 346, 347, 350, 352, 353, 356, 363, 364,
	365, 366, 368, 370, 377, 381, 389, 390, 391, 392,
	393, 395, 396, 401, 402, 403, 404, 412, 416, 434,
	435, 447, 460, 465, 270, 442, 466, 0, 311, 0,
	0, 313, 254, 273, 284, 0, 455, 413, 207, 383,
	262, 196, 225, 210, 233, 248, 251, 288, 322, 329,
	358, 362, 267, 245, 223, 380, 220, 398, 419, 420,
	421, 423, 326, 240, 361, 424, 0, 309, 425, 426,
	280, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 579, 0, 0, 0, 244, 584, 0, 0,
	0, 300, 241, 0, 0, 359, 0, 193, 0, 400,
	228, 310, 307, 431, 255, 247, 243, 227, 281, 317,
	357, 418, 351, 591, 304, 0, 0, 409, 330, 0,
	0, 0, 0, 0, 586, 587, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 342, 410, 259,
	0, 87, 0, 0, 184, 185, 186, 628, 635, 636,
	637, 638, 639, 629, 631, 0, 0, 217, 630, 224,
	600, 633, 640, 641, 0, 239, 285, 246, 238, 428,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 562, 576, 0, 590, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 573, 574, 0,
	0, 0, 0, 613, 0, 575, 0, 0, 583, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 331, 231, 0, 612, 0, 0, 462, 0,
	0, 610, 0, 0, 0, 0, 299, 0, 293, 188,
	205, 0, 0, 341, 382, 388, 0, 0, 0, 229,
	0, 386, 355, 446, 213, 257, 379, 360, 384, 367,
	260, 2532, 0, 385, 305, 433, 374, 443, 463, 464,
	237, 335, 453, 422, 459, 475, 206, 234, 349, 415,
	449, 406, 328, 429, 430, 292, 405, 266, 191, 303,
	469, 204, 394, 221, 211, 197, 417, 441, 218, 397,
	0, 0, 477, 199, 439, 414, 324, 289, 290, 198,
	0, 378, 242, 264, 232, 344, 436, 437, 230, 478,
	208, 458, 201, 0, 457, 337, 432, 440, 325, 315,
	200, 438, 323, 314, 295, 253, 275, 372, 308, 373,
	276, 333, 332, 334, 194, 450, 0, 195, 0, 411,
	451, 479, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 301, 348, 371, 369, 375, 0, 427,
	444, 454, 461, 467, 468, 470, 471, 472, 473, 474,
	336, 278, 407, 294, 306, 0, 0, 354, 387, 219,
	448, 408, 619, 611, 595, 597, 620, 621, 592, 593,
	596, 622, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 614, 582, 581, 0, 588, 589, 0, 598, 599,
	601, 602, 603, 604, 605, 606, 607, 580, 187, 202,
	302, 0, 376, 261, 476, 456, 452, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 312, 318, 319,
	320, 321, 338, 339, 340, 343, 346, 347, 350, 352,
	353, 356, 363, 364, 365, 366, 368, 370, 377, 381,
	389, 390, 391, 392, 393, 395, 396, 401, 402, 403,
	404, 412, 416, 434, 435, 447, 460, 465, 270, 442,
	466, 0, 311, 0, 0, 313, 254, 273, 284, 0,
	455, 413, 207, 383, 262, 196, 225, 210, 233, 248,
	251, 288, 322, 329, 358, 362, 267, 245, 223, 380,
	220, 398, 419, 420, 421, 423, 326, 240, 361, 424,
	0, 309, 425, 426, 280, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 579, 0, 0, 0,
	244, 584, 0, 0, 0, 300, 241, 0, 0, 359,
	0, 193, 0, 400, 228, 310, 307, 431, 255, 247,
	243, 227, 281, 317, 357, 418, 351, 591, 304, 0,
	0, 409, 330, 0, 0, 0, 0, 0, 586, 587,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 342, 410, 259, 0, 87, 0, 1219, 184, 185,
	186, 628, 635, 636, 637, 638, 639, 629, 631, 0,
	0, 217, 630, 224, 600, 633, 640, 641, 0, 239,
	285, 246, 238, 428, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 562,
	576, 0, 590, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 573, 574, 0, 0, 0, 0, 613, 0, 575,
	0, 0, 583, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 331, 231, 0, 612,
	0, 0, 462, 0, 0, 610, 0, 0, 0, 0,
	299, 0, 293, 188, 205, 0, 0, 341, 382, 388,
	0, 0, 0, 229, 0, 386, 355, 446, 213, 257,
	379, 360, 384, 367, 260, 0, 0, 385, 305, 433,
	374, 443, 463, 464, 237, 335, 453, 422, 459, 475,
	206, 234, 349, 415, 449, 406, 328, 429, 430, 292,
	405, 266, 191, 303, 469, 204, 394, 221, 211, 197,
	417, 441, 218, 397, 0, 0, 477, 199, 439, 414,
	324, 289, 290, 198, 0, 378, 242, 264, 232, 344,
	436, 437, 230, 478, 208, 458, 201, 0, 457, 337,
	432, 440, 325, 315, 200, 438, 323, 314, 295, 253,
	275, 372, 308, 373, 276, 333, 332, 334, 194, 450,
	0, 195, 0, 411, 451, 479, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 301, 348, 371,
	369, 375, 0, 427, 444, 454, 461, 467, 468, 470,
	471, 472, 473, 474, 336, 278, 407, 294, 306, 0,
	0, 354, 387, 219, 448, 408, 619, 611, 595, 597,
	620, 621, 592, 593, 596, 622, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 614, 582, 581, 0, 588,
	589, 0, 598, 599, 601, 602, 603, 604, 605, 606,
	607, 580, 187, 202, 302, 0, 376, 261, 476, 456,
	452, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 312, 318, 319, 320, 321, 338, 339, 340, 343,
	346, 347, 350, 352, 353, 356, 363, 364, 365, 366,
	368, 370, 377, 381, 389, 390, 391, 392, 393, 395,
	396, 401, 402, 403, 404, 412, 416, 434, 435, 447,
	460, 465, 270, 442, 466, 0, 311, 0, 0, 313,
	254, 273, 284, 0, 455, 413, 207, 383, 262, 196,
	225, 210, 233, 248, 251, 288, 322, 329, 358, 362,
	267, 245, 223, 380, 220, 398, 419, 420, 421, 423,
	326, 240, 361, 424, 0, 309, 425, 426, 280, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	579, 0, 0, 0, 244, 584, 0, 0, 0, 300,
	241, 0, 0, 359, 0, 193, 0, 400, 228, 310,
	307, 431, 255, 247, 243, 227, 281, 317, 357, 418,
	351, 591, 304, 0, 0, 409, 330, 0, 0, 0,
	0, 0, 586, 587, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 342, 410, 259, 0, 87,
	0, 0, 184, 185, 186, 628, 635, 636, 637, 638,
	639, 629, 631, 0, 0, 217, 630, 224, 600, 633,
	640, 641, 0, 239, 285, 246, 238, 428, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 562, 576, 0, 590, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 573, 574, 722, 0, 0,
	0, 613, 0, 575, 0, 0, 583, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	331, 231, 0, 612, 0, 0, 462, 0, 0, 610,
	0, 0, 0, 0, 299, 0, 293, 188, 205, 0,
	0, 341, 382, 388, 0, 0, 0, 229, 0, 386,
	355, 446, 213, 257, 379, 360, 384, 367, 260, 0,
	0, 385, 305, 433, 374, 443, 463, 464, 237, 335,
	453, 422, 459, 475, 206, 234, 349, 415, 449, 406,
	328, 429, 430, 292, 405, 266, 191, 303, 469, 204,
	394, 221, 211, 197, 417, 441, 218, 397, 0, 0,
	477, 199, 439, 414, 324, 289, 290, 198, 0, 378,
	242, 264, 232, 344, 436, 437, 230, 478, 208, 458,
	201, 0, 457, 337, 432, 440, 325, 315, 200, 438,
	323, 314, 295, 253, 275, 372, 308, 373, 276, 333,
	332, 334, 194, 450, 0, 195, 0, 411, 451, 479,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 301, 348, 371, 369, 375, 0, 427, 444, 454,
	461, 467, 468, 470, 471, 472, 473, 474, 336, 278,
	407, 294, 306, 0, 0, 354, 387, 219, 448, 408,
	619, 611, 595, 597, 620, 621, 592, 593, 596, 622,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 614,
	582, 581, 0, 588, 589, 0, 598, 599, 601, 602,
	603, 604, 605, 606, 607, 580, 187, 202, 302, 0,
	376, 261, 476, 456, 452, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 312, 318, 319, 320, 321,
	338, 339, 340, 343, 346, 347, 350, 352, 353, 356,
	363, 364, 365, 366, 368, 370, 377, 381, 389, 390,
	391, 392, 393, 395, 396, 401, 402, 403, 404, 412,
	416, 434, 435, 447, 460, 465, 270, 442, 466, 0,
	311, 0, 0, 313, 254, 273, 284, 0, 455, 413,
	207, 383, 262, 196, 225, 210, 233, 248, 251, 288,
	322, 329, 358, 362, 267, 245, 223, 380, 220, 398,
	419, 420, 421, 423, 326, 240, 361, 424, 0, 309,
	425, 426, 280, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 579, 0, 0, 0, 244, 584,
	0, 0, 0, 300, 241, 0, 0, 359, 0, 193,
	0, 400, 228, 310, 307, 431, 255, 247, 243, 227,
	281, 317, 357, 418, 351, 591, 304, 0, 0, 409,
	330, 0, 0, 0, 0, 0, 586, 587, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 342,
	410, 259, 0, 87, 0, 0, 184, 185, 186, 628,
	635, 636, 637, 638, 639, 629, 631, 0, 0, 217,
	630, 224, 600, 633, 640, 641, 0, 239, 285, 246,
	238, 428, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 562, 576, 0,
	590, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	574, 0, 0, 0, 0, 613, 0, 575, 0, 0,
	583, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 331, 231, 0, 612, 0, 0,
	462, 0, 0, 610, 0, 0, 0, 0, 299, 0,
	293, 188, 205, 0, 0, 341, 382, 388, 0, 0,
	0, 229, 0, 386, 355, 446, 213, 257, 379, 360,
	384, 367, 260, 0, 0, 385, 305, 433, 374, 443,
	463, 464, 237, 335, 453, 422, 459, 475, 206, 234,
	349, 415, 449, 406, 328, 429, 430, 292, 405, 266,
	191, 303, 469, 204, 394, 221, 211, 197, 417, 441,
	218, 397, 0, 0, 477, 199, 439, 414, 324, 289,
	290, 198, 0, 378, 242, 264, 232, 344, 436, 437,
	230, 478, 208, 458, 201, 0, 457, 337, 432, 440,
	325, 315, 200, 438, 323, 314, 295, 253, 275, 372,
	308, 373, 276, 333, 332, 334, 194, 450, 0, 195,
	0, 411, 451, 479, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 301, 348, 371, 369, 375,
	0, 427, 444, 454, 461, 467, 468, 470, 471, 472,
	473, 474, 336, 278, 407, 294, 306, 0, 0, 354,
	387, 219, 448, 408, 619, 611, 595, 597, 620, 621,
	592, 593, 596, 622, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 614, 582, 581, 0, 588, 589, 0,
	598, 599, 601, 602, 603, 604, 605, 606, 607, 580,
	187, 202, 302, 0, 376, 261, 476, 456, 452, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 312,
	318, 319, 320, 321, 338, 339, 340, 343, 346, 347,
	350, 352, 353, 356, 363, 364, 365, 366, 368, 370,
	377, 381, 389, 390, 391, 392, 393, 395, 396, 401,
	402, 403, 404, 412, 416, 434, 435, 447, 460, 465,
	270, 442, 466, 0, 311, 0, 0, 313, 254, 273,
	284, 0, 455, 413, 207, 383, 262, 196, 225, 210,
	233, 248, 251, 288, 322, 329, 358, 362, 267, 245,
	223, 380, 220, 398, 419, 420, 421, 423, 326, 240,
	361, 424, 0, 309, 425, 426, 280, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 579, 0,
	0, 0, 244, 584, 0, 0, 0, 300, 241, 0,
	0, 359, 0, 193, 0, 400, 228, 310, 307, 431,
	255, 247, 243, 227, 281, 317, 357, 418, 351, 591,
	304, 0, 0, 409, 330, 0, 0, 0, 0, 0,
	586, 587, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 342, 410, 259, 0, 87, 0, 0,
	184, 185, 186, 628, 635, 636, 637, 638, 639, 629,
	631, 0, 0, 217, 630, 224, 600, 633, 640, 641,
	0, 239, 285, 246, 238, 428, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 576, 0, 590, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 573, 574, 0, 0, 0, 0, 613,
	0, 575, 0, 0, 583, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 331, 231,
	0, 612, 0, 0, 462, 0, 0, 610, 0, 0,
	0, 0, 299, 0, 293, 188, 205, 0, 0, 341,
	382, 388, 0, 0, 0, 229, 0, 386, 355, 446,
	213, 257, 379, 360, 384, 367, 260, 0, 0, 385,
	305, 433, 374, 443, 463, 464, 237, 335, 453, 422,
	459, 475, 206, 234, 349, 415, 449, 406, 328, 429,
	430, 292, 405, 266, 191, 303, 469, 204, 394, 221,
	211, 197, 417, 441, 218, 397, 0, 0, 477, 199,
	439, 414, 324, 289, 290, 198, 0, 378, 242, 264,
	232, 344, 436, 437, 230, 478, 208, 458, 201, 0,
	457, 337, 432, 440, 325, 315, 200, 438, 323, 314,
	295, 253, 275, 372, 308, 373, 276, 333, 332, 334,
	194, 450, 0, 195, 0, 411, 451, 479, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 301,
	348, 371, 369, 375, 0, 427, 444, 454, 461, 467,
	468, 470, 471, 472, 473, 474, 336, 278, 407, 294,
	306, 0, 0, 354, 387, 219, 448, 408, 619, 611,
	595, 597, 620, 621, 592, 593, 596, 622, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 614, 582, 581,
	0, 588, 589, 0, 598, 599, 601, 602, 603, 604,
	605, 606, 607, 580, 187, 202, 302, 0, 376, 261,
	476, 456, 452, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 312, 318, 319, 320, 321, 338, 339,
	340, 343, 346, 347, 350, 352, 353, 356, 363, 364,
	365, 366, 368, 370, 377, 381, 389, 390, 391, 392,
	393, 395, 396, 401, 402, 403, 404, 412, 416, 434,
	435, 447, 460, 465, 270, 442, 466, 0, 311, 0,
	0, 313, 254, 273, 284, 0, 455, 413, 207, 383,
	262, 196, 225, 210, 233, 248, 251, 288, 322, 329,
	358, 362, 267, 245, 223, 380, 220, 398, 419, 420,
	421, 423, 326, 240, 361, 424, 0, 309, 425, 426,
	280, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 300, 241, 0, 0, 359, 0, 193, 0, 400,
	228, 310, 307, 431, 255, 247, 243, 227, 281, 317,
	357, 418, 351, 0, 304, 0, 0, 409, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 342, 410, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 428,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 331, 231, 0, 0, 0, 934, 462, 0,
	0, 0, 0, 0, 931, 932, 299, 895, 293, 188,
	205, 925, 929, 341, 382, 388, 0, 0, 0, 229,
	0, 386, 355, 446, 213, 257, 379, 360, 384, 367,
	260, 0, 0, 385, 305, 433, 374, 443, 463, 464,
	237, 335, 453, 422, 459, 475, 206, 234, 349, 415,
	449, 406, 328, 429, 430, 292, 405, 266, 191, 303,
	469, 204, 394, 221, 211, 197, 417, 441, 218, 397,
	0, 0, 477, 199, 439, 414, 324, 289, 290, 198,
	0, 378, 242, 264, 232, 344, 436, 437, 230, 478,
	208, 458, 201, 0, 457, 337, 432, 440, 325, 315,
	200, 438, 323, 314, 295, 253, 275, 372, 308, 373,
	276, 333, 332, 334, 194, 450, 0, 195, 0, 411,
	451, 479, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 301, 348, 371, 369, 375, 0, 427,
	444, 454, 461, 467, 468, 470, 471, 472, 473, 474,
	336, 278, 407, 294, 306, 0, 0, 354, 387, 219,
	448, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	498, 316, 399, 445, 296, 297, 298, 0, 187, 202,
	302, 0, 376, 261, 476, 456, 452, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 312, 318, 319,
	320, 321, 338, 339, 340, 343, 346, 347, 350, 352,
	353, 356, 363, 364, 365, 366, 368, 370, 377, 381,
	389, 390, 391, 392, 393, 395, 396, 401, 402, 403,
	404, 412, 416, 434, 435, 447, 460, 465, 270, 442,
	466, 0, 311, 0, 0, 313, 254, 273, 284, 0,
	455, 413, 207, 383, 262, 196, 225, 210, 233, 248,
	251, 288, 322, 329, 358, 362, 267, 245, 223, 380,
	220, 398, 419, 420, 421, 423, 326, 240, 361, 424,
	0, 309, 425, 426, 280, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 1239, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 300, 241, 0, 0, 359,
	0, 193, 0, 400, 228, 310, 307, 431, 255, 247,
	243, 227, 281, 317, 357, 418, 351, 0, 304, 0,
	0, 409, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 342, 410, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1241, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 428, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 1099, 0, 1100, 1101, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 331, 231, 0, 0,
	0, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	299, 0, 293, 188, 205, 0, 0, 341, 382, 388,
	0, 0, 0, 229, 0, 386, 355, 446, 213, 257,
	379, 360, 384, 367, 260, 0, 0, 385, 305, 433,
	374, 443, 463, 464, 237, 335, 453, 422, 459, 475,
	206, 234, 349, 415, 449, 406, 328, 429, 430, 292,
	405, 266, 191, 303, 469, 204, 394, 221, 211, 197,
	417, 441, 218, 397, 0, 0, 477, 199, 439, 414,
	324, 289, 290, 198, 0, 378, 242, 264, 232, 344,
	436, 437, 230, 478, 208, 458, 201, 0, 457, 337,
	432, 440, 325, 315, 200, 438, 323, 314, 295, 253,
	275, 372, 308, 373, 276, 333, 332, 334, 194, 450,
	0, 195, 0, 411, 451, 479, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 301, 348, 371,
	369, 375, 0, 427, 444, 454, 461, 467, 468, 470,
	471, 472, 473, 474, 336, 278, 407, 294, 306, 0,
	0, 354, 387, 219, 448, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 316, 399, 445, 296, 297,
	298, 0, 187, 202, 302, 0, 376, 261, 476, 456,
	452, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 312, 318, 319, 320, 321, 338, 339, 340, 343,
	346, 347, 350, 352, 353, 356, 363, 364, 365, 366,
	368, 370, 377, 381, 389, 390, 391, 392, 393, 395,
	396, 401, 402, 403, 404, 412, 416, 434, 435, 447,
	460, 465, 270, 442, 466, 0, 311, 0, 0, 313,
	254, 273, 284, 0, 455, 413, 207, 383, 262, 196,
	225, 210, 233, 248, 251, 288, 322, 329, 358, 362,
	267, 245, 223, 380, 220, 398, 419, 420, 421, 423,
	326, 240, 361, 424, 0, 309, 425, 426, 280, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 300,
	241, 0, 0, 359, 0, 193, 0, 400, 228, 310,
	307, 431, 255, 247, 243, 227, 281, 317, 357, 418,
	351, 0, 304, 0, 0, 409, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 342, 410, 259, 0, 0,
	0, 0, 184, 185, 186, 1181, 1184, 0, 0, 0,
	0, 1180, 1183, 0, 0, 217, 1179, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 428, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	331, 231, 0, 0, 0, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 299, 0, 293, 188, 205, 0,
	0, 341, 382, 388, 0, 0, 0, 229, 0, 386,
	355, 446, 213, 257, 379, 360, 384, 367, 260, 0,
	0, 385, 305, 433, 374, 443, 463, 464, 237, 335,
	453, 422, 459, 475, 206, 234, 349, 415, 449, 406,
	328, 429, 430, 292, 405, 266, 191, 303, 469, 204,
	394, 221, 211, 197, 417, 441, 218, 397, 0, 0,
	477, 199, 439, 414, 324, 289, 290, 198, 0, 378,
	242, 264, 232, 344, 436, 437, 230, 478, 208, 458,
	201, 0, 457, 337, 432, 440, 325, 315, 200, 438,
	323, 314, 295, 253, 275, 372, 308, 373, 276, 333,
	332, 334, 194, 450, 0, 195, 0, 411, 451, 479,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 301, 348, 371, 369, 375, 0, 427, 444, 454,
	461, 467, 468, 470, 471, 472, 473, 474, 336, 278,
	407, 294, 306, 0, 0, 354, 387, 219, 448, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 498, 316,
	399, 445, 296, 297, 298, 0, 187, 202, 302, 0,
	376, 261, 476, 456, 452, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 312, 318, 319, 320, 321,
	338, 339, 340, 343, 346, 347, 350, 352, 353, 356,
	363, 364, 365, 366, 368, 370, 377, 381, 389, 390,
	391, 392, 393, 395, 396, 401, 402, 403, 404, 412,
	416, 434, 435, 447, 460, 465, 270, 442, 466, 0,
	311, 0, 0, 313, 254, 273, 284, 0, 455, 413,
	207, 383, 262, 196, 225, 210, 233, 248, 251, 288,
	322, 329, 358, 362, 267, 245, 223, 380, 220, 398,
	419, 420, 421, 423, 326, 240, 361, 78, 424, 309,
	425, 426, 280, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 300, 241, 0, 0, 359, 0,
	193, 0, 400, 228, 310, 307, 431, 255, 247, 243,
	227, 281, 317, 357, 418, 351, 0, 304, 0, 0,
	409, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	342, 410, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 428, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 331, 231, 0, 0, 0,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 293, 188, 205, 0, 0, 341, 382, 388, 0,
	0, 0, 229, 0, 386, 355, 446, 213, 257, 379,
	360, 384, 367, 260, 0, 0, 385, 305, 433, 374,
	443, 463, 464, 237, 335, 453, 422, 459, 475, 206,
	234, 349, 415, 449, 406, 328, 429, 430, 292, 405,
	266, 191, 303, 469, 204, 394, 221, 211, 197, 417,
	441, 218, 397, 0, 0, 477, 199, 439, 414, 324,
	289, 290, 198, 0, 378, 242, 264, 232, 344, 436,
	437, 230, 478, 208, 458, 201, 0, 457, 337, 432,
	440, 325, 315, 200, 438, 323, 314, 295, 253, 275,
	372, 308, 373, 276, 333, 332, 334, 194, 450, 0,
	195, 0, 411, 451, 479, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 301, 348, 371, 369,
	375, 0, 427, 444, 454, 461, 467, 468, 470, 471,
	472, 473, 474, 336, 278, 407, 294, 306, 0, 0,
	354, 387, 219, 448, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 498, 316, 399, 445, 296, 297, 298,
	0, 187, 202, 302, 86, 376, 261, 476, 456, 452,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1678, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	312, 318, 319, 320, 321, 338, 339, 340, 343, 346,
	347, 350, 352, 353, 356, 363, 364, 365, 366, 368,
	370, 377, 381, 389, 390, 391, 392, 393, 395, 396,
	401, 402, 403, 404, 412, 416, 434, 435, 447, 460,
	465, 270, 442, 466, 0, 311, 0, 0, 313, 254,
	273, 284, 0, 455, 413, 207, 383, 262, 196, 225,
	210, 233, 248, 251, 288, 322, 329, 358, 362, 267,
	245, 223, 380, 220, 398, 419, 420, 421, 423, 326,
	240, 361, 78, 424, 309, 425, 426, 280, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 300,
	241, 0, 0, 359, 0, 193, 0, 400, 228, 310,
	307, 431, 255, 247, 243, 227, 281, 317, 357, 418,
	351, 0, 304, 0, 0, 409, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 342, 410, 259, 0, 87,
	0, 1219, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 428, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	331, 231, 0, 0, 0, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 299, 0, 293, 188, 205, 0,
	0, 341, 382, 388, 0, 0, 0, 229, 0, 386,
	355, 446, 213, 257, 379, 360, 384, 367, 260, 0,
	0, 385, 305, 433, 374, 443, 463, 464, 237, 335,
	453, 422, 459, 475, 206, 234, 349, 415, 449, 406,
	328, 429, 430, 292, 405, 266, 191, 303, 469, 204,
	394, 221, 211, 197, 417, 441, 218, 397, 0, 0,
	477, 199, 439, 414, 324, 289, 290, 198, 0, 378,
	242, 264, 232, 344, 436, 437, 230, 478, 208, 458,
	201, 0, 457, 337, 432, 440, 325, 315, 200, 438,
	323, 314, 295, 253, 275, 372, 308, 373, 276, 333,
	332, 334, 194, 450, 0, 195, 0, 411, 451, 479,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 301, 348, 371, 369, 375, 0, 427, 444, 454,
	461, 467, 468, 470, 471, 472, 473, 474, 336, 278,
	407, 294, 306, 0, 0, 354, 387, 219, 448, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 498, 316,
	399, 445, 296, 297, 298, 0, 187, 202, 302, 86,
	376, 261, 476, 456, 452, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 312, 318, 319, 320, 321,
	338, 339, 340, 343, 346, 347, 350, 352, 353, 356,
	363, 364, 365, 366, 368, 370, 377, 381, 389, 390,
	391, 392, 393, 395, 396, 401, 402, 403, 404, 412,
	416, 434, 435, 447, 460, 465, 270, 442, 466, 0,
	311, 0, 0, 313, 254, 273, 284, 0, 455, 413,
	207, 383, 262, 196, 225, 210, 233, 248, 251, 288,
	322, 329, 358, 362, 267, 245, 223, 380, 220, 398,
	419, 420, 421, 423, 326, 240, 361, 424, 0, 309,
	425, 426, 280, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 1632, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 300, 241, 0, 0, 359, 0, 193,
	0, 400, 228, 310, 307, 431, 255, 247, 243, 227,
	281, 317, 357, 418, 351, 0, 304, 0, 0, 409,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 342,
	410, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 428, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 331, 231, 0, 0, 0, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 299, 0,
	293, 188, 205, 0, 0, 341, 382, 388, 0, 0,
	0, 229, 0, 386, 355, 446, 213, 257, 379, 360,
	384, 367, 260, 0, 1630, 385, 305, 433, 374, 443,
	463, 464, 237, 335, 453, 422, 459, 475, 206, 234,
	349, 415, 449, 406, 328, 429, 430, 292, 405, 266,
	191, 303, 469, 204, 394, 221, 211, 197, 417, 441,
	218, 397, 0, 0, 477, 199, 439, 414, 324, 289,
	290, 198, 0, 378, 242, 264, 232, 344, 436, 437,
	230, 478, 208, 458, 201, 0, 457, 337, 432, 440,
	325, 315, 200, 438, 323, 314, 295, 253, 275, 372,
	308, 373, 276, 333, 332, 334, 194, 450, 0, 195,
	0, 411, 451, 479, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 301, 348, 371, 369, 375,
	0, 427, 444, 454, 461, 467, 468, 470, 471, 472,
	473, 474, 336, 278, 407, 294, 306, 0, 0, 354,
	387, 219, 448, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 498, 316, 399, 445, 296, 297, 298, 0,
	187, 202, 302, 0, 376, 261, 476, 456, 452, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 312,
	318, 319, 320, 321, 338, 339, 340, 343, 346, 347,
	350, 352, 353, 356, 363, 364, 365, 366, 368, 370,
	377, 381, 389, 390, 391, 392, 393, 395, 396, 401,
	402, 403, 404, 412, 416, 434, 435, 447, 460, 465,
	270, 442, 466, 0, 311, 0, 0, 313, 254, 273,
	284, 0, 455, 413, 207, 383, 262, 196, 225, 210,
	233, 248, 251, 288, 322, 329, 358, 362, 267, 245,
	223, 380, 220, 398, 419, 420, 421, 423, 326, 240,
	361, 424, 0, 309, 425, 426, 280, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 300, 241, 0,
	0, 359, 0, 193, 0, 400, 228, 310, 307, 431,
	255, 247, 243, 227, 281, 317, 357, 418, 351, 0,
	304, 0, 0, 409, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 342, 410, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 428, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 331, 231,
	0, 0, 0, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 299, 895, 293, 188, 205, 893, 0, 341,
	382, 388, 0, 0, 0, 229, 0, 386, 355, 446,
	213, 257, 379, 360, 384, 367, 260, 0, 0, 385,
	305, 433, 374, 443, 463, 464, 237, 335, 453, 422,
	459, 475, 206, 234, 349, 415, 449, 406, 328, 429,
	430, 292, 405, 266, 191, 303, 469, 204, 394, 221,
	211, 197, 417, 441, 218, 397, 0, 0, 477, 199,
	439, 414, 324, 289, 290, 198, 0, 378, 242, 264,
	232, 344, 436, 437, 230, 478, 208, 458, 201, 0,
	457, 337, 432, 440, 325, 315, 200, 438, 323, 314,
	295, 253, 275, 372, 308, 373, 276, 333, 332, 334,
	194, 450, 0, 195, 0, 411, 451, 479, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 301,
	348, 371, 369, 375, 0, 427, 444, 454, 461, 467,
	468, 470, 471, 472, 473, 474, 336, 278, 407, 294,
	306, 0, 0, 354, 387, 219, 448, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 498, 316, 399, 445,
	296, 297, 298, 0, 187, 202, 302, 0, 376, 261,
	476, 456, 452, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 312, 318, 319, 320, 321, 338, 339,
	340, 343, 346, 347, 350, 352, 353, 356, 363, 364,
	365, 366, 368, 370, 377, 381, 389, 390, 391, 392,
	393, 395, 396, 401, 402, 403, 404, 412, 416, 434,
	435, 447, 460, 465, 270, 442, 466, 0, 311, 0,
	0, 313, 254, 273, 284, 0, 455, 413, 207, 383,
	262, 196, 225, 210, 233, 248, 251, 288, 322, 329,
	358, 362, 267, 245, 223, 380, 220, 398, 419, 420,
	421, 423, 326, 240, 361, 424, 0, 309, 425, 426,
	280, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 300, 241, 0, 0, 359, 0, 193, 0, 400,
	228, 310, 307, 431, 255, 247, 243, 227, 281, 317,
	357, 418, 351, 0, 304, 0, 0, 409, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 342, 410, 259,
	0, 0, 0, 1219, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 428,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 331, 231, 0, 0, 0, 0, 462, 0,
	0, 0, 2502, 0, 0, 0, 299, 0, 293, 188,
	205, 0, 0, 341, 382, 388, 0, 0, 0, 229,
	0, 386, 355, 446, 213, 257, 379, 360, 384, 367,
	260, 0, 0, 385, 305, 433, 374, 443, 463, 464,
	237, 335, 453, 422, 459, 475, 206, 234, 349, 415,
	449, 406, 328, 429, 430, 292, 405, 266, 191, 303,
	469, 204, 394, 221, 211, 197, 417, 441, 218, 397,
	0, 0, 477, 199, 439, 414, 324, 289, 290, 198,
	0, 378, 242, 264, 232, 344, 436, 437, 230, 478,
	208, 458, 201, 0, 457, 337, 432, 440, 325, 315,
	200, 438, 323, 314, 295, 253, 275, 372, 308, 373,
	276, 333, 332, 334, 194, 450, 0, 195, 0, 411,
	451, 479, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 301, 348, 371, 369, 375, 0, 427,
	444, 454, 461, 467, 468, 470, 471, 472, 473, 474,
	336, 278, 407, 294, 306, 0, 0, 354, 387, 219,
	448, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	498, 316, 399, 445, 296, 297, 298, 0, 187, 202,
	302, 0, 376, 261, 476, 456, 452, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 312, 318, 319,
	320, 321, 338, 339, 340, 343, 346, 347, 350, 352,
	353, 356, 363, 364, 365, 366, 368, 370, 377, 381,
	389, 390, 391, 392, 393, 395, 396, 401, 402, 403,
	404, 412, 416, 434, 435, 447, 460, 465, 270, 442,
	466, 0, 311, 0, 0, 313, 254, 273, 284, 0,
	455, 413, 207, 383, 262, 196, 225, 210, 233, 248,
	251, 288, 322, 329, 358, 362, 267, 245, 223, 380,
	220, 398, 419, 420, 421, 423, 326, 240, 361, 424,
	0, 309, 425, 426, 280, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 1632, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 300, 241, 0, 0, 359,
	0, 193, 0, 400, 228, 310, 307, 431, 255, 247,
	243, 227, 281, 317, 357, 418, 351, 0, 304, 0,
	0, 409, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 342, 410, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 428, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 331, 231, 0, 0,
	0, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	299, 0, 293, 188, 205, 0, 0, 341, 382, 388,
	0, 0, 0, 229, 0, 386, 355, 446, 213, 257,
	379, 360, 384, 367, 260, 0, 0, 385, 305, 433,
	374, 443, 463, 464, 237, 335, 453, 422, 459, 475,
	206, 234, 349, 415, 449, 406, 328, 429, 430, 292,
	405, 266, 191, 303, 469, 204, 394, 221, 211, 197,
	417, 441, 218, 397, 0, 0, 477, 199, 439, 414,
	324, 289, 290, 198, 0, 378, 242, 264, 232, 344,
	436, 437, 230, 478, 208, 458, 201, 0, 457, 337,
	432, 440, 325, 315, 200, 438, 323, 314, 295, 253,
	275, 372, 308, 373, 276, 333, 332, 334, 194, 450,
	0, 195, 0, 411, 451, 479, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 301, 348, 371,
	369, 375, 0, 427, 444, 454, 461, 467, 468, 470,
	471, 472, 473, 474, 336, 278, 407, 294, 306, 0,
	0, 354, 387, 219, 448, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 316, 399, 445, 296, 297,
	298, 0, 187, 202, 302, 0, 376, 261, 476, 456,
	452, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 312, 318, 319, 320, 321, 338, 339, 340, 343,
	346, 347, 350, 352, 353, 356, 363, 364, 365, 366,
	368, 370, 377, 381, 389, 390, 391, 392, 393, 395,
	396, 401, 402, 403, 404, 412, 416, 434, 435, 447,
	460, 465, 270, 442, 466, 0, 311, 0, 0, 313,
	254, 273, 284, 0, 455, 413, 207, 383, 262, 196,
	225, 210, 233, 248, 251, 288, 322, 329, 358, 362,
	267, 245, 223, 380, 220, 398, 419, 420, 421, 423,
	326, 240, 361, 424, 0, 309, 425, 426, 280, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 300,
	241, 0, 0, 359, 0, 193, 0, 400, 228, 310,
	307, 431, 255, 247, 243, 227, 281, 317, 357, 418,
	351, 0, 304, 0, 0, 409, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 342, 410, 259, 0, 87,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 428, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	331, 231, 0, 0, 0, 0, 462, 0, 0, 0,
	0, 0, 0, 0, 299, 0, 293, 188, 205, 0,
	0, 341, 382, 388, 0, 0, 0, 229, 0, 386,
	355, 446, 213, 257, 379, 360, 384, 367, 260, 0,
	0, 385, 305, 433, 374, 443, 463, 464, 237, 335,
	453, 422, 459, 475, 206, 234, 349, 415, 449, 406,
	328, 429, 430, 292, 405, 266, 191, 303, 469, 204,
	394, 221, 211, 197, 417, 441, 218, 397, 0, 0,
	477, 199, 439, 414, 324, 289, 290, 198, 0, 378,
	242, 264, 232, 344, 436, 437, 230, 478, 208, 458,
	201, 0, 457, 337, 432, 440, 325, 315, 200, 438,
	323, 314, 295, 253, 275, 372, 308, 373, 276, 333,
	332, 334, 194, 450, 0, 195, 0, 411, 451, 479,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 301, 348, 371, 369, 375, 0, 427, 444, 454,
	461, 467, 468, 470, 471, 472, 473, 474, 336, 278,
	407, 294, 306, 0, 0, 354, 387, 219, 448, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 498, 316,
	399, 445, 296, 297, 298, 0, 187, 202, 302, 0,
	376, 261, 476, 456, 452, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1678, 0, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 312, 318, 319, 320, 321,
	338, 339, 340, 343, 346, 347, 350, 352, 353, 356,
	363, 364, 365, 366, 368, 370, 377, 381, 389, 390,
	391, 392, 393, 395, 396, 401, 402, 403, 404, 412,
	416, 434, 435, 447, 460, 465, 270, 442, 466, 0,
	311, 0, 0, 313, 254, 273, 284, 0, 455, 413,
	207, 383, 262, 196, 225, 210, 233, 248, 251, 288,
	322, 329, 358, 362, 267, 245, 223, 380, 220, 398,
	419, 420, 421, 423, 326, 240, 361, 424, 0, 309,
	425, 426, 280, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 300, 241, 0, 0, 359, 0, 193,
	0, 400, 228, 310, 307, 431, 255, 247, 243, 227,
	281, 317, 357, 418, 351, 0, 304, 0, 0, 409,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 342,
	410, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 428, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1926, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 331, 231, 0, 0, 0, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 299, 0,
	293, 188, 205, 0, 0, 341, 382, 388, 0, 0,
	0, 229, 0, 386, 355, 446, 213, 257, 379, 360,
	384, 367, 260, 0, 0, 385, 305, 433, 374, 443,
	463, 464, 237, 335, 453, 422, 459, 475, 206, 234,
	349, 415, 449, 406, 328, 429, 430, 292, 405, 266,
	191, 303, 469, 204, 394, 221, 211, 197, 417, 441,
	218, 397, 0, 0, 477, 199, 439, 414, 324, 289,
	290, 198, 0, 378, 242, 264, 232, 344, 436, 437,
	230, 478, 208, 458, 201, 0, 457, 337, 432, 440,
	325, 315, 200, 438, 323, 314, 295, 253, 275, 372,
	308, 373, 276, 333, 332, 334, 194, 450, 0, 195,
	0, 411, 451, 479, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 301, 348, 371, 369, 375,
	0, 427, 444, 454, 461, 467, 468, 470, 471, 472,
	473, 474, 336, 278, 407, 294, 306, 0, 0, 354,
	387, 219, 448, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 498, 316, 399, 445, 296, 297, 298, 0,
	187, 202, 302, 0, 376, 261, 476, 456, 452, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 312,
	318, 319, 320, 321, 338, 339, 340, 343, 346, 347,
	350, 352, 353, 356, 363, 364, 365, 366, 368, 370,
	377, 381, 389, 390, 391, 392, 393, 395, 396, 401,
	402, 403, 404, 412, 416, 434, 435, 447, 460, 465,
	270, 442, 466, 0, 311, 0, 0, 313, 254, 273,
	284, 0, 455, 413, 207, 383, 262, 196, 225, 210,
	233, 248, 251, 288, 322, 329, 358, 362, 267, 245,
	223, 380, 220, 398, 419, 420, 421, 423, 326, 240,
	361, 424, 0, 309, 425, 426, 280, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 300, 241, 0,
	0, 359, 0, 193, 0, 400, 228, 310, 307, 431,
	255, 247, 243, 227, 281, 317, 357, 418, 351, 0,
	304, 0, 0, 409, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 342, 410, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 1910, 0, 0, 0,
	1911, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 428, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 331, 231,
	0, 0, 0, 0, 462, 0, 0, 0, 0, 0,
	0, 0, 299, 0, 293, 188, 205, 0, 0, 341,
	382, 388, 0, 0, 0, 229, 0, 386, 355, 446,
	213, 257, 379, 360, 384, 367, 260, 0, 0, 385,
	305, 433, 374, 443, 463, 464, 237, 335, 453, 422,
	459, 475, 206, 234, 349, 415, 449, 406, 328, 429,
	430, 292, 405, 266, 191, 303, 469, 204, 394, 221,
	211, 197, 417, 441, 218, 397, 0, 0, 477, 199,
	439, 414, 324, 289, 290, 198, 0, 378, 242, 264,
	232, 344, 436, 437, 230, 478, 208, 458, 201, 0,
	457, 337, 432, 440, 325, 315, 200, 438, 323, 314,
	295, 253, 275, 372, 308, 373, 276, 333, 332, 334,
	194, 450, 0, 195, 0, 411, 451, 479, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 301,
	348, 371, 369, 375, 0, 427, 444, 454, 461, 467,
	468, 470, 471, 472, 473, 474, 336, 278, 407, 294,
	306, 0, 0, 354, 387, 219, 448, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 498, 316, 399, 445,
	296, 297, 298, 0, 187, 202, 302, 0, 376, 261,
	476, 456, 452, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 312, 318, 319, 320, 321, 338, 339,
	340, 343, 346, 347, 350, 352, 353, 356, 363, 364,
	365, 366, 368, 370, 377, 381, 389, 390, 391, 392,
	393, 395, 396, 401, 402, 403, 404, 412, 416, 434,
	435, 447, 460, 465, 270, 442, 466, 0, 311, 0,
	0, 313, 254, 273, 284, 0, 455, 413, 207, 383,
	262, 196, 225, 210, 233, 248, 251, 288, 322, 329,
	358, 362, 267, 245, 223, 380, 220, 398, 419, 420,
	421, 423, 326, 240, 361, 424, 0, 309, 425, 426,
	280, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 1262, 0, 0,
	0, 300, 241, 0, 0, 359, 0, 193, 0, 400,
	228, 310, 307, 431, 255, 247, 243, 227, 281, 317,
	357, 418, 351, 0, 304, 0, 0, 409, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 342, 410, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1261, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 428,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 331, 231, 0, 0, 0, 0, 462, 0,
	0, 0, 0, 0, 0, 0, 299, 0, 293, 188,
	205, 0, 0, 341, 382, 388, 0, 0, 0, 229,
	0, 386, 355, 446, 213, 257, 379, 360, 384, 367,
	260, 0, 0, 385, 305, 433, 374, 443, 463, 464,
	237, 335, 453, 422, 459, 475, 206, 234, 349, 415,
	449, 406, 328, 429, 430, 292, 405, 266, 191, 303,
	469, 204, 394, 221, 211, 197, 417, 441, 218, 397,
	0, 0, 477, 199, 439, 414, 324, 289, 290, 198,
	0, 378, 242, 264, 232, 344, 436, 437, 230, 478,
	208, 458, 201, 0, 457, 337, 432, 440, 325, 315,
	200, 438, 323, 314, 295, 253, 275, 372, 308, 373,
	276, 333, 332, 334, 194, 450, 0, 195, 0, 411,
	451, 479, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 301, 348, 371, 369, 375, 0, 427,
	444, 454, 461, 467, 468, 470, 471, 472, 473, 474,
	336, 278, 407, 294, 306, 0, 0, 354, 387, 219,
	448, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	498, 316, 399, 445, 296, 297, 298, 0, 187, 202,
	302, 0, 376, 261, 476, 456, 452, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 312, 318, 319,
	320, 321, 338, 339, 340, 343, 346, 347, 350, 352,
	353, 356, 363, 364, 365, 366, 368, 370, 377, 381,
	389, 390, 391, 392, 393, 395, 396, 401, 402, 403,
	404, 412, 416, 434, 435, 447, 460, 465, 270, 442,
	466, 0, 311, 0, 0, 313, 254, 273, 284, 0,
	455, 413, 207, 383, 262, 196, 225, 210, 233, 248,
	251, 288, 322, 329, 358, 362, 267, 245, 223, 380,
	220, 398, 419, 420, 421, 423, 326, 240, 361, 424,
	0, 309, 425, 426, 280, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 300, 241, 0, 0, 359,
	0, 193, 0, 400, 228, 310, 307, 431, 255, 247,
	243, 227, 281, 317, 357, 418, 351, 0, 304, 0,
	0, 409, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 342, 410, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 428, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 331, 231, 0, 0,
	0, 0, 462, 0, 0, 0, 2570, 0, 0, 0,
	299, 0, 293, 188, 205, 0, 0, 341, 382, 388,
	0, 0, 0, 229, 0, 386, 355, 446, 213, 257,
	379, 360, 384, 367, 260, 0, 0, 385, 305, 433,
	374, 443, 463, 464, 237, 335, 453, 422, 459, 475,
	206, 234, 349, 415, 449, 406, 328, 429, 430, 292,
	405, 266, 191, 303, 469, 204, 394, 221, 211, 197,
	417, 441, 218, 397, 0, 0, 477, 199, 439, 414,
	324, 289, 290, 198, 0, 378, 242, 264, 232, 344,
	436, 437, 230, 478, 208, 458, 201, 0, 457, 337,
	432, 440, 325, 315, 200, 438, 323, 314, 295, 253,
	275, 372, 308, 373, 276, 333, 332, 334, 194, 450,
	0, 195, 0, 411, 451, 479, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 301, 348, 371,
	369, 375, 0, 427, 444, 454, 461, 467, 468, 470,
	471, 472, 473, 474, 336, 278, 407, 294, 306, 0,
	0, 354, 387, 219, 448, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 316, 399, 445, 296, 297,
	298, 0, 187, 202, 302, 0, 376, 261, 476, 456,
	452, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 312, 318, 319, 320, 321, 338, 339, 340, 343,
	346, 347, 350, 352, 353, 356, 363, 364, 365, 366,
	368, 370, 377, 381, 389, 390, 391, 392, 393, 395,
	396, 401, 402, 403, 404, 412, 416, 434, 435, 447,
	460, 465, 270, 442, 466, 0, 311, 0, 0, 313,
	254, 273, 284, 0, 455, 413, 207, 383, 262, 196,
	225, 210, 233, 248, 251, 288, 322, 329, 358, 362,
	267, 245, 223, 380, 220, 398, 419, 420, 421, 423,
	326, 240, 361, 424, 0, 309, 425, 426, 280, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 300,
	241, 0, 0, 359, 0, 193, 0, 400, 228, 310,
	307, 431, 255, 247, 243, 227, 281, 317, 357, 418,
	351, 0, 304, 0, 0, 409, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 342, 410, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 428, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	331, 231, 0, 0, 0, 0, 462, 0, 0, 0,
	2502, 0, 0, 0, 299, 0, 293, 188, 205, 0,
	0, 341, 382, 388, 0, 0, 0, 229, 0, 386,
	355, 446, 213, 257, 379, 360, 384, 367, 260, 0,
	0, 385, 305, 433, 374, 443, 463, 464, 237, 335,
	453, 422, 459, 475, 206, 234, 349, 415, 449, 406,
	328, 429, 430, 292, 405, 266, 191, 303, 469, 204,
	394, 221, 211, 197, 417, 441, 218, 397, 0, 0,
	477, 199, 439, 414, 324, 289, 290, 198, 0, 378,
	242, 264, 232, 344, 436, 437, 230, 478, 208, 458,
	201, 0, 457, 337, 432, 440, 325, 315, 200, 438,
	323, 314, 295, 253, 275, 372, 308, 373, 276, 333,
	332, 334, 194, 450, 0, 195, 0, 411, 451, 479,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 301, 348, 371, 369, 375, 0, 427, 444, 454,
	461, 467, 468, 470, 471, 472, 473, 474, 336, 278,
	407, 294, 306, 0, 0, 354, 387, 219, 448, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 498, 316,
	399, 445, 296, 297, 298, 0, 187, 202, 302, 0,
	376, 261, 476, 456, 452, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 312, 318, 319, 320, 321,
	338, 339, 340, 343, 346, 347, 350, 352, 353, 356,
	363, 364, 365, 366, 368, 370, 377, 381, 389, 390,
	391, 392, 393, 395, 396, 401, 402, 403, 404, 412,
	416, 434, 435, 447, 460, 465, 270, 442, 466, 0,
	311, 0, 0, 313, 254, 273, 284, 0, 455, 413,
	207, 383, 262, 196, 225, 210, 233, 248, 251, 288,
	322, 329, 358, 362, 267, 245, 223, 380, 220, 398,
	419, 420, 421, 423, 326, 240, 361, 424, 0, 309,
	425, 426, 280, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 300, 241, 0, 0, 359, 0, 193,
	0, 400, 228, 310, 307, 431, 255, 247, 243, 227,
	281, 317, 357, 418, 351, 0, 304, 0, 0, 409,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 342,
	410, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1411, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 428, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 331, 231, 0, 0, 0, 0,
	462, 0, 0, 0, 0, 0, 0, 0, 299, 0,
	293, 188, 205, 0, 0, 341, 382, 388, 0, 0,
	0, 229, 0, 386, 355, 446, 213, 257, 379, 360,
	384, 367, 260, 0, 0, 385, 305, 433, 374, 443,
	463, 464, 237, 335, 453, 422, 459, 475, 206, 234,
	349, 415, 449, 406, 328, 429, 430, 292, 405, 266,
	191, 303, 469, 204, 394, 221, 211, 197, 417, 441,
	218, 397, 0, 0, 477, 199, 439, 414, 324, 289,
	290, 198, 0, 378, 242, 264, 232, 344, 436, 437,
	230, 478, 208, 458, 201, 0, 457, 337, 432, 440,
	325, 315, 200, 438, 323, 314, 295, 253, 275, 372,
	308, 373, 276, 333, 332, 334, 194, 450, 0, 195,
	0, 411, 451, 479, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 301, 348, 371, 369, 375,
	0, 427, 444, 454, 461, 467, 468, 470, 471, 472,
	473, 474, 336, 278, 407, 294, 306, 0, 0, 354,
	387, 219, 448, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 498, 316, 399, 445, 296, 297, 298, 0,
	187, 202, 302, 0, 376, 261, 476, 456, 452, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 312,
	318, 319, 320, 321, 338, 339, 340, 343, 346, 347,
	350, 352, 353, 356, 363, 364, 365, 366, 368, 370,
	377, 381, 389, 390, 391, 392, 393, 395, 396, 401,
	402, 403, 404, 412, 416, 434, 435, 447, 460, 465,
	270, 442, 466, 0, 311, 0, 0, 313, 254, 273,
	284, 0, 455, 413, 207, 383, 262, 196, 225, 210,
	233, 248, 251, 288, 322, 329, 358, 362, 267, 245,
	223, 380, 220, 398, 419, 420, 421, 423, 326, 240,
	361, 0, 424, 309, 425, 426, 280, 1679, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 300, 241,
	0, 0, 359, 0, 193, 0, 400, 228, 310, 307,
	431, 255, 247, 243, 227, 281, 317, 357, 418, 351,
	0, 304, 0, 0, 409, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 342, 410, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 428, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 331,
	231, 0, 0, 0, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 293, 188, 205, 0, 0,
	341, 382, 388, 0, 0, 0, 229, 0, 386, 355,
	446, 213, 257, 379, 360, 384, 367, 260, 0, 0,
	385, 305, 433, 374, 443, 463, 464, 237, 335, 453,
	422, 459, 475, 206, 234, 349, 415, 449, 406, 328,
	429, 430, 292, 405, 266, 191, 303, 469, 204, 394,
	221, 211, 197, 417, 441, 218, 397, 0, 0, 477,
	199, 439, 414, 324, 289, 290, 198, 0, 378, 242,
	264, 232, 344, 436, 437, 230, 478, 208, 458, 201,
	0, 457, 337, 432, 440, 325, 315, 200, 438, 323,
	314, 295, 253, 275, 372, 308, 373, 276, 333, 332,
	334, 194, 450, 0, 195, 0, 411, 451, 479, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	301, 348, 371, 369, 375, 0, 427, 444, 454, 461,
	467, 468, 470, 471, 472, 473, 474, 336, 278, 407,
	294, 306, 0, 0, 354, 387, 219, 448, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 498, 316, 399,
	445, 296, 297, 298, 0, 187, 202, 302, 0, 376,
	261, 476, 456, 452, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 312, 318, 319, 320, 321, 338,
	339, 340, 343, 346, 347, 350, 352, 353, 356, 363,
	364, 365, 366, 368, 370, 377, 381, 389, 390, 391,
	392, 393, 395, 396, 401, 402, 403, 404, 412, 416,
	434, 435, 447, 460, 465, 270, 442, 466, 0, 311,
	0, 0, 313, 254, 273, 284, 0, 455, 413, 207,
	383, 262, 196, 225, 210, 233, 248, 251, 288, 322,
	329, 358, 362, 267, 245, 223, 380, 220, 398, 419,
	420, 421, 423, 326, 240, 361, 424, 0, 309, 425,
	426, 280, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 300, 241, 0, 0, 359, 0, 193, 0,
	400, 228, 310, 307, 431, 255, 247, 243, 227, 281,
	317, 357, 418, 351, 0, 304, 0, 0, 409, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 342, 410,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	428, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 331, 231, 0, 0, 0, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 293,
	188, 205, 0, 0, 341, 382, 388, 0, 0, 0,
	229, 0, 386, 355, 446, 213, 257, 379, 360, 384,
	367, 260, 0, 0, 385, 305, 433, 374, 443, 463,
	464, 237, 335, 453, 422, 459, 475, 206, 234, 349,
	415, 449, 406, 328, 429, 430, 292, 405, 266, 191,
	303, 469, 204, 394, 221, 211, 197, 417, 441, 218,
	397, 0, 0, 477, 199, 439, 414, 324, 289, 290,
	198, 0, 378, 242, 264, 232, 344, 436, 437, 230,
	478, 208, 458, 201, 0, 457, 337, 432, 440, 325,
	315, 200, 438, 323, 314, 295, 253, 275, 372, 308,
	373, 276, 333, 332, 334, 194, 450, 0, 195, 0,
	411, 451, 479, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 301, 348, 371, 369, 375, 0,
	427, 444, 454, 461, 467, 468, 470, 471, 472, 473,
	474, 336, 278, 407, 294, 306, 0, 0, 354, 387,
	219, 448, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 316, 399, 445, 296, 297, 298, 0, 187,
	202, 302, 0, 376, 261, 476, 456, 452, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 312, 318,
	319, 320, 321, 338, 339, 340, 343, 346, 347, 350,
	352, 353, 356, 363, 364, 365, 366, 368, 370, 377,
	381, 389, 390, 391, 392, 393, 395, 396, 401, 402,
	403, 404, 412, 416, 434, 435, 447, 460, 465, 270,
	442, 466, 0, 311, 0, 0, 313, 254, 273, 284,
	0, 455, 413, 207, 383, 262, 196, 225, 210, 233,
	248, 251, 288, 322, 329, 358, 362, 267, 245, 223,
	380, 220, 398, 419, 420, 421, 423, 326, 240, 361,
	424, 0, 309, 425, 426, 280, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 300, 241, 0, 0,
	359, 0, 193, 0, 400, 228, 310, 307, 431, 255,
	247, 243, 227, 281, 317, 357, 418, 351, 0, 304,
	0, 0, 409, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 342, 410, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 428, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 331, 231, 0,
	0, 0, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 293, 188, 205, 0, 0, 341, 382,
	388, 0, 0, 0, 229, 0, 386, 355, 446, 213,
	257, 379, 360, 384, 367, 260, 0, 0, 385, 305,
	433, 374, 443, 463, 464, 237, 335, 453, 422, 459,
	475, 206, 234, 349, 415, 449, 406, 328, 429, 430,
	292, 405, 266, 191, 303, 469, 204, 394, 221, 211,
	197, 417, 441, 218, 397, 0, 0, 477, 199, 439,
	414, 324, 289, 290, 198, 0, 378, 242, 264, 232,
	344, 436, 437, 230, 478, 208, 458, 201, 0, 457,
	337, 432, 440, 325, 315, 200, 438, 323, 314, 295,
	253, 275, 372, 308, 373, 276, 333, 332, 334, 194,
	450, 0, 195, 0, 411, 451, 479, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 301, 348,
	371, 369, 375, 0, 427, 444, 454, 461, 467, 468,
	470, 471, 472, 473, 474, 336, 278, 407, 294, 306,
	0, 0, 354, 387, 219, 448, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 316, 399, 445, 296,
	297, 298, 0, 187, 202, 302, 0, 376, 261, 476,
	456, 452, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 312, 318, 319, 320, 321, 338, 339, 340,
	343, 346, 347, 350, 352, 353, 356, 363, 364, 365,
	366, 368, 370, 377, 381, 389, 390, 391, 392, 393,
	395, 396, 401, 402, 403, 404, 412, 416, 434, 435,
	447, 460, 465, 270, 442, 466, 0, 311, 0, 0,
	313, 254, 273, 284, 0, 455, 413, 207, 383, 262,
	196, 225, 210, 233, 248, 251, 288, 322, 329, 358,
	362, 267, 245, 223, 380, 220, 398, 419, 420, 421,
	423, 326, 240, 361, 424, 0, 309, 425, 426, 280,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	300, 241, 0, 0, 359, 0, 193, 0, 400, 228,
	310, 307, 431, 255, 247, 243, 227, 281, 317, 357,
	418, 351, 0, 304, 0, 0, 409, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 342, 410, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 428, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 331, 231, 0, 0, 0, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 293, 188, 205,
	0, 0, 341, 382, 388, 0, 0, 0, 229, 0,
	386, 355, 446, 213, 257, 379, 360, 384, 367, 260,
	0, 0, 385, 305, 433, 374, 443, 463, 464, 237,
	335, 453, 422, 459, 475, 206, 234, 349, 415, 449,
	406, 328, 429, 430, 292, 405, 266, 191, 303, 469,
	204, 394, 221, 211, 197, 417, 441, 218, 397, 0,
	0, 477, 199, 439, 414, 324, 289, 290, 198, 0,
	378, 242, 264, 232, 344, 436, 437, 230, 478, 208,
	458, 201, 0, 457, 337, 432, 440, 325, 315, 200,
	438, 323, 314, 295, 253, 275, 372, 308, 373, 276,
	333, 332, 334, 194, 450, 0, 195, 0, 411, 451,
	479, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 301, 348, 371, 369, 375, 0, 427, 444,
	454, 461, 467, 468, 470, 471, 472, 473, 474, 336,
	278, 407, 294, 306, 0, 0, 354, 387, 219, 448,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	316, 399, 445, 296, 297, 298, 0, 187, 202, 302,
	1503, 376, 261, 476, 456, 452, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 312, 318, 319, 320,
	321, 338, 339, 340, 343, 346, 347, 350, 352, 353,
	356, 363, 364, 365, 366, 368, 370, 377, 381, 389,
	390, 391, 392, 393, 395, 396, 401, 402, 403, 404,
	412, 416, 434, 435, 447, 460, 465, 270, 442, 466,
	0, 311, 0, 0, 313, 254, 273, 284, 0, 455,
	413, 207, 383, 262, 196, 225, 210, 233, 248, 251,
	288, 322, 329, 358, 362, 267, 245, 223, 380, 220,
	398, 419, 420, 421, 423, 326, 240, 361, 424, 0,
	309, 425, 426, 280, 0, 0, 0, 0, 0, 0,
	345, 0, 1383, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 300, 241, 0, 0, 359, 0,
	193, 0, 400, 228, 310, 307, 431, 255, 247, 243,
	227, 281, 317, 357, 418, 351, 0, 304, 0, 0,
	409, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	342, 410, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 428, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 331, 231, 0, 0, 0,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 293, 188, 205, 0, 0, 341, 382, 388, 0,
	0, 0, 229, 0, 386, 355, 446, 213, 257, 379,
	360, 384, 367, 260, 0, 0, 385, 305, 433, 374,
	443, 463, 464, 237, 335, 453, 422, 459, 475, 206,
	234, 349, 415, 449, 406, 328, 429, 430, 292, 405,
	266, 191, 303, 469, 204, 394, 221, 211, 197, 417,
	441, 218, 397, 0, 0, 477, 199, 439, 414, 324,
	289, 290, 198, 0, 378, 242, 264, 232, 344, 436,
	437, 230, 478, 208, 458, 201, 0, 457, 337, 432,
	440, 325, 315, 200, 438, 323, 314, 295, 253, 275,
	372, 308, 373, 276, 333, 332, 334, 194, 450, 0,
	195, 0, 411, 451, 479, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 301, 348, 371, 369,
	375, 0, 427, 444, 454, 461, 467, 468, 470, 471,
	472, 473, 474, 336, 278, 407, 294, 306, 0, 0,
	354, 387, 219, 448, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 498, 316, 399, 445, 296, 297, 298,
	0, 187, 202, 302, 0, 376, 261, 476, 456, 452,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	312, 318, 319, 320, 321, 338, 339, 340, 343, 346,
	347, 350, 352, 353, 356, 363, 364, 365, 366, 368,
	370, 377, 381, 389, 390, 391, 392, 393, 395, 396,
	401, 402, 403, 404, 412, 416, 434, 435, 447, 460,
	465, 270, 442, 466, 0, 311, 0, 0, 313, 254,
	273, 284, 0, 455, 413, 207, 383, 262, 196, 225,
	210, 233, 248, 251, 288, 322, 329, 358, 362, 267,
	245, 223, 380, 220, 398, 419, 420, 421, 423, 326,
	240, 361, 424, 0, 309, 425, 426, 280, 0, 0,
	0, 0, 0, 0, 345, 0, 1381, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 300, 241,
	0, 0, 359, 0, 193, 0, 400, 228, 310, 307,
	431, 255, 247, 243, 227, 281, 317, 357, 418, 351,
	0, 304, 0, 0, 409, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 342, 410, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 428, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 331,
	231, 0, 0, 0, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 293, 188, 205, 0, 0,
	341, 382, 388, 0, 0, 0, 229, 0, 386, 355,
	446, 213, 257, 379, 360, 384, 367, 260, 0, 0,
	385, 305, 433, 374, 443, 463, 464, 237, 335, 453,
	422, 459, 475, 206, 234, 349, 415, 449, 406, 328,
	429, 430, 292, 405, 266, 191, 303, 469, 204, 394,
	221, 211, 197, 417, 441, 218, 397, 0, 0, 477,
	199, 439, 414, 324, 289, 290, 198, 0, 378, 242,
	264, 232, 344, 436, 437, 230, 478, 208, 458, 201,
	0, 457, 337, 432, 440, 325, 315, 200, 438, 323,
	314, 295, 253, 275, 372, 308, 373, 276, 333, 332,
	334, 194, 450, 0, 195, 0, 411, 451, 479, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	301, 348, 371, 369, 375, 0, 427, 444, 454, 461,
	467, 468, 470, 471, 472, 473, 474, 336, 278, 407,
	294, 306, 0, 0, 354, 387, 219, 448, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 498, 316, 399,
	445, 296, 297, 298, 0, 187, 202, 302, 0, 376,
	261, 476, 456, 452, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 312, 318, 319, 320, 321, 338,
	339, 340, 343, 346, 347, 350, 352, 353, 356, 363,
	364, 365, 366, 368, 370, 377, 381, 389, 390, 391,
	392, 393, 395, 396, 401, 402, 403, 404, 412, 416,
	434, 435, 447, 460, 465, 270, 442, 466, 0, 311,
	0, 0, 313, 254, 273, 284, 0, 455, 413, 207,
	383, 262, 196, 225, 210, 233, 248, 251, 288, 322,
	329, 358, 362, 267, 245, 223, 380, 220, 398, 419,
	420, 421, 423, 326, 240, 361, 424, 0, 309, 425,
	426, 280, 0, 0, 0, 0, 0, 0, 345, 0,
	1379, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 300, 241, 0, 0, 359, 0, 193, 0,
	400, 228, 310, 307, 431, 255, 247, 243, 227, 281,
	317, 357, 418, 351, 0, 304, 0, 0, 409, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 342, 410,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	428, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 331, 231, 0, 0, 0, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 293,
	188, 205, 0, 0, 341, 382, 388, 0, 0, 0,
	229, 0, 386, 355, 446, 213, 257, 379, 360, 384,
	367, 260, 0, 0, 385, 305, 433, 374, 443, 463,
	464, 237, 335, 453, 422, 459, 475, 206, 234, 349,
	415, 449, 406, 328, 429, 430, 292, 405, 266, 191,
	303, 469, 204, 394, 221, 211, 197, 417, 441, 218,
	397, 0, 0, 477, 199, 439, 414, 324, 289, 290,
	198, 0, 378, 242, 264, 232, 344, 436, 437, 230,
	478, 208, 458, 201, 0, 457, 337, 432, 440, 325,
	315, 200, 438, 323, 314, 295, 253, 275, 372, 308,
	373, 276, 333, 332, 334, 194, 450, 0, 195, 0,
	411, 451, 479, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 301, 348, 371, 369, 375, 0,
	427, 444, 454, 461, 467, 468, 470, 471, 472, 473,
	474, 336, 278, 407, 294, 306, 0, 0, 354, 387,
	219, 448, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 316, 399, 445, 296, 297, 298, 0, 187,
	202, 302, 0, 376, 261, 476, 456, 452, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 312, 318,
	319, 320, 321, 338, 339, 340, 343, 346, 347, 350,
	352, 353, 356, 363, 364, 365, 366, 368, 370, 377,
	381, 389, 390, 391, 392, 393, 395, 396, 401, 402,
	403, 404, 412, 416, 434, 435, 447, 460, 465, 270,
	442, 466, 0, 311, 0, 0, 313, 254, 273, 284,
	0, 455, 413, 207, 383, 262, 196, 225, 210, 233,
	248, 251, 288, 322, 329, 358, 362, 267, 245, 223,
	380, 220, 398, 419, 420, 421, 423, 326, 240, 361,
	424, 0, 309, 425, 426, 280, 0, 0, 0, 0,
	0, 0, 345, 0, 1377, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 300, 241, 0, 0,
	359, 0, 193, 0, 400, 228, 310, 307, 431, 255,
	247, 243, 227, 281, 317, 357, 418, 351, 0, 304,
	0, 0, 409, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 342, 410, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 428, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 331, 231, 0,
	0, 0, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 293, 188, 205, 0, 0, 341, 382,
	388, 0, 0, 0, 229, 0, 386, 355, 446, 213,
	257, 379, 360, 384, 367, 260, 0, 0, 385, 305,
	433, 374, 443, 463, 464, 237, 335, 453, 422, 459,
	475, 206, 234, 349, 415, 449, 406, 328, 429, 430,
	292, 405, 266, 191, 303, 469, 204, 394, 221, 211,
	197, 417, 441, 218, 397, 0, 0, 477, 199, 439,
	414, 324, 289, 290, 198, 0, 378, 242, 264, 232,
	344, 436, 437, 230, 478, 208, 458, 201, 0, 457,
	337, 432, 440, 325, 315, 200, 438, 323, 314, 295,
	253, 275, 372, 308, 373, 276, 333, 332, 334, 194,
	450, 0, 195, 0, 411, 451, 479, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 301, 348,
	371, 369, 375, 0, 427, 444, 454, 461, 467, 468,
	470, 471, 472, 473, 474, 336, 278, 407, 294, 306,
	0, 0, 354, 387, 219, 448, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 316, 399, 445, 296,
	297, 298, 0, 187, 202, 302, 0, 376, 261, 476,
	456, 452, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 312, 318, 319, 320, 321, 338, 339, 340,
	343, 346, 347, 350, 352, 353, 356, 363, 364, 365,
	366, 368, 370, 377, 381, 389, 390, 391, 392, 393,
	395, 396, 401, 402, 403, 404, 412, 416, 434, 435,
	447, 460, 465, 270, 442, 466, 0, 311, 0, 0,
	313, 254, 273, 284, 0, 455, 413, 207, 383, 262,
	196, 225, 210, 233, 248, 251, 288, 322, 329, 358,
	362, 267, 245, 223, 380, 220, 398, 419, 420, 421,
	423, 326, 240, 361, 424, 0, 309, 425, 426, 280,
	0, 0, 0, 0, 0, 0, 345, 0, 1375, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	300, 241, 0, 0, 359, 0, 193, 0, 400, 228,
	310, 307, 431, 255, 247, 243, 227, 281, 317, 357,
	418, 351, 0, 304, 0, 0, 409, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 342, 410, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 428, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 331, 231, 0, 0, 0, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 293, 188, 205,
	0, 0, 341, 382, 388, 0, 0, 0, 229, 0,
	386, 355, 446, 213, 257, 379, 360, 384, 367, 260,
	0, 0, 385, 305, 433, 374, 443, 463, 464, 237,
	335, 453, 422, 459, 475, 206, 234, 349, 415, 449,
	406, 328, 429, 430, 292, 405, 266, 191, 303, 469,
	204, 394, 221, 211, 197, 417, 441, 218, 397, 0,
	0, 477, 199, 439, 414, 324, 289, 290, 198, 0,
	378, 242, 264, 232, 344, 436, 437, 230, 478, 208,
	458, 201, 0, 457, 337, 432, 440, 325, 315, 200,
	438, 323, 314, 295, 253, 275, 372, 308, 373, 276,
	333, 332, 334, 194, 450, 0, 195, 0, 411, 451,
	479, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 301, 348, 371, 369, 375, 0, 427, 444,
	454, 461, 467, 468, 470, 471, 472, 473, 474, 336,
	278, 407, 294, 306, 0, 0, 354, 387, 219, 448,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	316, 399, 445, 296, 297, 298, 0, 187, 202, 302,
	0, 376, 261, 476, 456, 452, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 312, 318, 319, 320,
	321, 338, 339, 340, 343, 346, 347, 350, 352, 353,
	356, 363, 364, 365, 366, 368, 370, 377, 381, 389,
	390, 391, 392, 393, 395, 396, 401, 402, 403, 404,
	412, 416, 434, 435, 447, 460, 465, 270, 442, 466,
	0, 311, 0, 0, 313, 254, 273, 284, 0, 455,
	413, 207, 383, 262, 196, 225, 210, 233, 248, 251,
	288, 322, 329, 358, 362, 267, 245, 223, 380, 220,
	398, 419, 420, 421, 423, 326, 240, 361, 424, 0,
	309, 425, 426, 280, 0, 0, 0, 0, 0, 0,
	345, 0, 1371, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 300, 241, 0, 0, 359, 0,
	193, 0, 400, 228, 310, 307, 431, 255, 247, 243,
	227, 281, 317, 357, 418, 351, 0, 304, 0, 0,
	409, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	342, 410, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 428, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 331, 231, 0, 0, 0,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 293, 188, 205, 0, 0, 341, 382, 388, 0,
	0, 0, 229, 0, 386, 355, 446, 213, 257, 379,
	360, 384, 367, 260, 0, 0, 385, 305, 433, 374,
	443, 463, 464, 237, 335, 453, 422, 459, 475, 206,
	234, 349, 415, 449, 406, 328, 429, 430, 292, 405,
	266, 191, 303, 469, 204, 394, 221, 211, 197, 417,
	441, 218, 397, 0, 0, 477, 199, 439, 414, 324,
	289, 290, 198, 0, 378, 242, 264, 232, 344, 436,
	437, 230, 478, 208, 458, 201, 0, 457, 337, 432,
	440, 325, 315, 200, 438, 323, 314, 295, 253, 275,
	372, 308, 373, 276, 333, 332, 334, 194, 450, 0,
	195, 0, 411, 451, 479, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 301, 348, 371, 369,
	375, 0, 427, 444, 454, 461, 467, 468, 470, 471,
	472, 473, 474, 336, 278, 407, 294, 306, 0, 0,
	354, 387, 219, 448, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 498, 316, 399, 445, 296, 297, 298,
	0, 187, 202, 302, 0, 376, 261, 476, 456, 452,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	312, 318, 319, 320, 321, 338, 339, 340, 343, 346,
	347, 350, 352, 353, 356, 363, 364, 365, 366, 368,
	370, 377, 381, 389, 390, 391, 392, 393, 395, 396,
	401, 402, 403, 404, 412, 416, 434, 435, 447, 460,
	465, 270, 442, 466, 0, 311, 0, 0, 313, 254,
	273, 284, 0, 455, 413, 207, 383, 262, 196, 225,
	210, 233, 248, 251, 288, 322, 329, 358, 362, 267,
	245, 223, 380, 220, 398, 419, 420, 421, 423, 326,
	240, 361, 424, 0, 309, 425, 426, 280, 0, 0,
	0, 0, 0, 0, 345, 0, 1369, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 300, 241,
	0, 0, 359, 0, 193, 0, 400, 228, 310, 307,
	431, 255, 247, 243, 227, 281, 317, 357, 418, 351,
	0, 304, 0, 0, 409, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 342, 410, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 428, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 331,
	231, 0, 0, 0, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 293, 188, 205, 0, 0,
	341, 382, 388, 0, 0, 0, 229, 0, 386, 355,
	446, 213, 257, 379, 360, 384, 367, 260, 0, 0,
	385, 305, 433, 374, 443, 463, 464, 237, 335, 453,
	422, 459, 475, 206, 234, 349, 415, 449, 406, 328,
	429, 430, 292, 405, 266, 191, 303, 469, 204, 394,
	221, 211, 197, 417, 441, 218, 397, 0, 0, 477,
	199, 439, 414, 324, 289, 290, 198, 0, 378, 242,
	264, 232, 344, 436, 437, 230, 478, 208, 458, 201,
	0, 457, 337, 432, 440, 325, 315, 200, 438, 323,
	314, 295, 253, 275, 372, 308, 373, 276, 333, 332,
	334, 194, 450, 0, 195, 0, 411, 451, 479, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	301, 348, 371, 369, 375, 0, 427, 444, 454, 461,
	467, 468, 470, 471, 472, 473, 474, 336, 278, 407,
	294, 306, 0, 0, 354, 387, 219, 448, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 498, 316, 399,
	445, 296, 297, 298, 0, 187, 202, 302, 0, 376,
	261, 476, 456, 452, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 312, 318, 319, 320, 321, 338,
	339, 340, 343, 346, 347, 350, 352, 353, 356, 363,
	364, 365, 366, 368, 370, 377, 381, 389, 390, 391,
	392, 393, 395, 396, 401, 402, 403, 404, 412, 416,
	434, 435, 447, 460, 465, 270, 442, 466, 0, 311,
	0, 0, 313, 254, 273, 284, 0, 455, 413, 207,
	383, 262, 196, 225, 210, 233, 248, 251, 288, 322,
	329, 358, 362, 267, 245, 223, 380, 220, 398, 419,
	420, 421, 423, 326, 240, 361, 424, 0, 309, 425,
	426, 280, 0, 0, 0, 0, 0, 0, 345, 0,
	1367, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 300, 241, 0, 0, 359, 0, 193, 0,
	400, 228, 310, 307, 431, 255, 247, 243, 227, 281,
	317, 357, 418, 351, 0, 304, 0, 0, 409, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 342, 410,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	428, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 331, 231, 0, 0, 0, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 293,
	188, 205, 0, 0, 341, 382, 388, 0, 0, 0,
	229, 0, 386, 355, 446, 213, 257, 379, 360, 384,
	367, 260, 0, 0, 385, 305, 433, 374, 443, 463,
	464, 237, 335, 453, 422, 459, 475, 206, 234, 349,
	415, 449, 406, 328, 429, 430, 292, 405, 266, 191,
	303, 469, 204, 394, 221, 211, 197, 417, 441, 218,
	397, 0, 0, 477, 199, 439, 414, 324, 289, 290,
	198, 0, 378, 242, 264, 232, 344, 436, 437, 230,
	478, 208, 458, 201, 0, 457, 337, 432, 440, 325,
	315, 200, 438, 323, 314, 295, 253, 275, 372, 308,
	373, 276, 333, 332, 334, 194, 450, 0, 195, 0,
	411, 451, 479, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 301, 348, 371, 369, 375, 0,
	427, 444, 454, 461, 467, 468, 470, 471, 472, 473,
	474, 336, 278, 407, 294, 306, 0, 0, 354, 387,
	219, 448, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 316, 399, 445, 296, 297, 298, 0, 187,
	202, 302, 0, 376, 261, 476, 456, 452, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 312, 318,
	319, 320, 321, 338, 339, 340, 343, 346, 347, 350,
	352, 353, 356, 363, 364, 365, 366, 368, 370, 377,
	381, 389, 390, 391, 392, 393, 395, 396, 401, 402,
	403, 404, 412, 416, 434, 435, 447, 460, 465, 270,
	442, 466, 0, 311, 0, 0, 313, 254, 273, 284,
	0, 455, 413, 207, 383, 262, 196, 225, 210, 233,
	248, 251, 288, 322, 329, 358, 362, 267, 245, 223,
	380, 220, 398, 419, 420, 421, 423, 326, 240, 361,
	424, 0, 309, 425, 426, 280, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 300, 241, 0, 0,
	359, 0, 193, 0, 400, 228, 310, 307, 431, 255,
	247, 243, 227, 281, 317, 357, 418, 351, 0, 304,
	0, 0, 409, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 342, 410, 259, 0, 1344, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 428, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 331, 231, 0,
	0, 0, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 293, 188, 205, 0, 0, 341, 382,
	388, 0, 0, 0, 229, 0, 386, 355, 446, 213,
	257, 379, 360, 384, 367, 260, 0, 0, 385, 305,
	433, 374, 443, 463, 464, 237, 335, 453, 422, 459,
	475, 206, 234, 349, 415, 449, 406, 328, 429, 430,
	292, 405, 266, 191, 303, 469, 204, 394, 221, 211,
	197, 417, 441, 218, 397, 0, 0, 477, 199, 439,
	414, 324, 289, 290, 198, 0, 378, 242, 264, 232,
	344, 436, 437, 230, 478, 208, 458, 201, 0, 457,
	337, 432, 440, 325, 315, 200, 438, 323, 314, 295,
	253, 275, 372, 308, 373, 276, 333, 332, 334, 194,
	450, 0, 195, 0, 411, 451, 479, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 301, 348,
	371, 369, 375, 0, 427, 444, 454, 461, 467, 468,
	470, 471, 472, 473, 474, 336, 278, 407, 294, 306,
	0, 0, 354, 387, 219, 448, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 316, 399, 445, 296,
	297, 298, 0, 187, 202, 302, 0, 376, 261, 476,
	456, 452, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 312, 318, 319, 320, 321, 338, 339, 340,
	343, 346, 347, 350, 352, 353, 356, 363, 364, 365,
	366, 368, 370, 377, 381, 389, 390, 391, 392, 393,
	395, 396, 401, 402, 403, 404, 412, 416, 434, 435,
	447, 460, 465, 270, 442, 466, 0, 311, 0, 0,
	313, 254, 273, 284, 0, 455, 413, 207, 383, 262,
	196, 225, 210, 233, 248, 251, 288, 322, 329, 358,
	362, 267, 245, 223, 380, 220, 398, 419, 420, 421,
	423, 326, 240, 361, 424, 0, 309, 425, 426, 280,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 1246, 244, 0, 0, 0, 0,
	300, 241, 0, 0, 359, 0, 193, 0, 400, 228,
	310, 307, 431, 255, 247, 243, 227, 281, 317, 357,
	418, 351, 0, 304, 0, 0, 409, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 342, 410, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 428, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 331, 231, 0, 0, 0, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 293, 188, 205,
	0, 0, 341, 382, 388, 0, 0, 0, 229, 0,
	386, 355, 446, 213, 257, 379, 360, 384, 367, 260,
	0, 0, 385, 305, 433, 374, 443, 463, 464, 237,
	335, 453, 422, 459, 475, 206, 234, 349, 415, 449,
	406, 328, 429, 430, 292, 405, 266, 191, 303, 469,
	204, 394, 221, 211, 197, 417, 441, 218, 397, 0,
	0, 477, 199, 439, 414, 324, 289, 290, 198, 0,
	378, 242, 264, 232, 344, 436, 437, 230, 478, 208,
	458, 201, 0, 457, 337, 432, 440, 325, 315, 200,
	438, 323, 314, 295, 253, 275, 372, 308, 373, 276,
	333, 332, 334, 194, 450, 0, 195, 0, 411, 451,
	479, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 301, 348, 371, 369, 375, 0, 427, 444,
	454, 461, 467, 468, 470, 471, 472, 473, 474, 336,
	278, 407, 294, 306, 0, 0, 354, 387, 219, 448,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	316, 399, 445, 296, 297, 298, 0, 187, 202, 302,
	0, 376, 261, 476, 456, 452, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 312, 318, 319, 320,
	321, 338, 339, 340, 343, 346, 347, 350, 352, 353,
	356, 363, 364, 365, 366, 368, 370, 377, 381, 389,
	390, 391, 392, 393, 395, 396, 401, 402, 403, 404,
	412, 416, 434, 435, 447, 460, 465, 270, 442, 466,
	0, 311, 0, 0, 313, 254, 273, 284, 0, 455,
	413, 207, 383, 262, 196, 225, 210, 233, 248, 251,
	288, 322, 329, 358, 362, 267, 245, 223, 380, 220,
	398, 419, 420, 421, 423, 326, 240, 361, 424, 0,
	309, 425, 426, 280, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 300, 241, 0, 0, 359, 0,
	193, 0, 400, 228, 310, 307, 431, 255, 247, 243,
	227, 281, 317, 357, 418, 351, 0, 304, 0, 0,
	409, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	342, 410, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1076, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 428, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 331, 231, 0, 0, 0,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 293, 188, 205, 0, 0, 341, 382, 388, 0,
	0, 0, 229, 0, 386, 355, 446, 213, 257, 379,
	360, 384, 367, 260, 0, 0, 385, 305, 433, 374,
	443, 463, 464, 237, 335, 453, 422, 459, 475, 206,
	234, 349, 415, 449, 406, 328, 429, 430, 292, 405,
	266, 191, 303, 469, 204, 394, 221, 211, 197, 417,
	441, 218, 397, 0, 0, 477, 199, 439, 414, 324,
	289, 290, 198, 0, 378, 242, 264, 232, 344, 436,
	437, 230, 478, 208, 458, 201, 0, 457, 337, 432,
	440, 325, 315, 200, 438, 323, 314, 295, 253, 275,
	372, 308, 373, 276, 333, 332, 334, 194, 450, 0,
	195, 0, 411, 451, 479, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 301, 348, 371, 369,
	375, 0, 427, 444, 454, 461, 467, 468, 470, 471,
	472, 473, 474, 336, 278, 407, 294, 306, 0, 0,
	354, 387, 219, 448, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 498, 316, 399, 445, 296, 297, 298,
	0, 187, 202, 302, 0, 376, 261, 476, 456, 452,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	312, 318, 319, 320, 321, 338, 339, 340, 343, 346,
	347, 350, 352, 353, 356, 363, 364, 365, 366, 368,
	370, 377, 381, 389, 390, 391, 392, 393, 395, 396,
	401, 402, 403, 404, 412, 416, 434, 435, 447, 460,
	465, 270, 442, 466, 0, 311, 0, 0, 313, 254,
	273, 284, 0, 455, 413, 207, 383, 262, 196, 225,
	210, 233, 248, 251, 288, 322, 329, 358, 362, 267,
	245, 223, 380, 220, 398, 419, 420, 421, 423, 326,
	240, 361, 424, 0, 309, 425, 426, 280, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 300, 241,
	0, 0, 359, 0, 193, 0, 400, 228, 310, 307,
	431, 255, 247, 243, 227, 281, 317, 357, 418, 351,
	0, 304, 0, 0, 409, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 342, 410, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 428, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 331,
	231, 0, 0, 0, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 293, 188, 205, 0, 0,
	341, 382, 388, 0, 0, 0, 229, 0, 386, 355,
	446, 213, 257, 379, 360, 384, 367, 260, 0, 0,
	385, 305, 433, 374, 443, 463, 464, 237, 335, 453,
	422, 459, 475, 206, 234, 349, 415, 449, 406, 328,
	429, 430, 292, 405, 266, 191, 303, 469, 204, 394,
	221, 211, 197, 417, 441, 218, 397, 0, 0, 477,
	199, 439, 414, 324, 289, 290, 198, 0, 378, 242,
	264, 232, 344, 436, 437, 230, 478, 208, 458, 201,
	0, 457, 337, 432, 440, 325, 315, 200, 438, 323,
	314, 295, 253, 275, 372, 308, 373, 276, 333, 332,
	334, 194, 450, 0, 195, 0, 411, 451, 479, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	301, 348, 371, 369, 375, 0, 427, 444, 454, 461,
	467, 468, 470, 471, 472, 473, 474, 336, 278, 407,
	294, 306, 0, 0, 354, 387, 219, 448, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 498, 316, 399,
	445, 296, 297, 298, 0, 187, 202, 302, 0, 376,
	261, 476, 456, 452, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 704, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 312, 318, 319, 320, 321, 338,
	339, 340, 343, 346, 347, 350, 352, 353, 356, 363,
	364, 365, 366, 368, 370, 377, 381, 389, 390, 391,
	392, 393, 395, 396, 401, 402, 403, 404, 412, 416,
	434, 435, 447, 460, 465, 270, 442, 466, 0, 311,
	0, 0, 313, 254, 273, 284, 0, 455, 413, 207,
	383, 262, 196, 225, 210, 233, 248, 251, 288, 322,
	329, 358, 362, 267, 245, 223, 380, 220, 398, 419,
	420, 421, 423, 326, 240, 361, 424, 0, 309, 425,
	426, 280, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 300, 241, 0, 0, 359, 0, 193, 0,
	400, 228, 310, 307, 431, 255, 247, 243, 227, 281,
	317, 357, 418, 351, 0, 304, 0, 0, 409, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 342, 410,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	428, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	0, 268, 0, 331, 231, 0, 0, 0, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 293,
	188, 205, 0, 0, 341, 382, 388, 0, 0, 0,
	229, 0, 386, 355, 446, 213, 257, 379, 360, 384,
	367, 260, 0, 0, 385, 305, 433, 374, 443, 463,
	464, 237, 335, 453, 422, 459, 475, 206, 234, 349,
	415, 449, 406, 328, 429, 430, 292, 405, 266, 191,
	303, 469, 204, 394, 221, 211, 197, 417, 441, 218,
	397, 0, 0, 477, 199, 439, 414, 324, 289, 290,
	198, 0, 378, 242, 264, 232, 344, 436, 437, 230,
	478, 208, 458, 201, 0, 457, 337, 432, 440, 325,
	315, 200, 438, 323, 314, 295, 253, 275, 372, 308,
	373, 276, 333, 332, 334, 194, 450, 0, 195, 0,
	411, 451, 479, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 301, 348, 371, 369, 375, 0,
	427, 444, 454, 461, 467, 468, 470, 471, 472, 473,
	474, 336, 278, 407, 294, 306, 0, 0, 354, 387,
	219, 448, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 316, 399, 445, 296, 297, 298, 0, 187,
	202, 302, 0, 376, 261, 476, 456, 452, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 312, 318,
	319, 320, 321, 338, 339, 340, 343, 346, 347, 350,
	352, 353, 356, 363, 364, 365, 366, 368, 370, 377,
	381, 389, 390, 391, 392, 393, 395, 396, 401, 402,
	403, 404, 412, 416, 434, 435, 447, 460, 465, 553,
	442, 466, 0, 311, 0, 0, 313, 254, 273, 284,
	0, 455, 413, 207, 383, 262, 196, 225, 210, 233,
	248, 251, 288, 322, 329, 358, 362, 267, 245, 223,
	380, 220, 398, 419, 420, 421, 423, 326, 240, 361,
	424, 0, 309, 425, 426, 280, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 300, 241, 0, 0,
	359, 0, 193, 0, 400, 228, 310, 307, 431, 255,
	247, 243, 227, 281, 317, 357, 418, 351, 0, 304,
	0, 0, 409, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 342, 410, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 428, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 331, 231, 0,
	0, 501, 0, 462, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 293, 188, 205, 0, 0, 341, 382,
	388, 0, 0, 0, 229, 0, 386, 355, 446, 213,
	257, 379, 360, 384, 367, 260, 0, 0, 385, 305,
	433, 374, 443, 463, 464, 237, 335, 453, 422, 459,
	475, 206, 234, 349, 415, 449, 406, 328, 429, 430,
	292, 405, 266, 191, 303, 469, 204, 394, 221, 211,
	197, 417, 441, 218, 397, 0, 0, 477, 199, 439,
	414, 324, 289, 290, 198, 0, 378, 242, 264, 232,
	344, 436, 437, 230, 478, 208, 458, 201, 0, 457,
	337, 432, 440, 325, 315, 200, 438, 323, 314, 295,
	253, 275, 372, 308, 373, 276, 333, 332, 334, 194,
	450, 0, 195, 0, 411, 451, 479, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 301, 348,
	371, 369, 375, 0, 427, 444, 454, 461, 467, 468,
	470, 471, 472, 473, 474, 336, 278, 407, 294, 306,
	0, 0, 354, 387, 219, 448, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 316, 399, 445, 296,
	297, 298, 0, 187, 202, 302, 0, 376, 261, 476,
	456, 452, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 312, 318, 319, 320, 321, 338, 339, 340,
	343, 346, 347, 350, 352, 353, 356, 363, 364, 365,
	366, 368, 370, 377, 381, 389, 390, 391, 392, 393,
	395, 396, 401, 402, 403, 404, 412, 416, 434, 435,
	447, 460, 465, 270, 442, 466, 0, 311, 0, 0,
	313, 254, 273, 284, 0, 455, 413, 207, 383, 262,
	196, 225, 210, 233, 248, 251, 288, 322, 329, 358,
	362, 267, 245, 223, 380, 220, 398, 419, 420, 421,
	423, 326, 240, 361, 424, 0, 309, 425, 426, 280,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	300, 241, 0, 0, 359, 0, 193, 0, 400, 228,
	310, 307, 431, 255, 247, 243, 227, 281, 317, 357,
	418, 351, 0, 304, 0, 0, 409, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 342, 410, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 428, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 331, 231, 0, 0, 0, 0, 462, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 293, 188, 205,
	0, 0, 341, 382, 388, 0, 0, 0, 229, 0,
	386, 355, 446, 213, 257, 379, 360, 384, 367, 260,
	0, 0, 385, 305, 433, 374, 443, 463, 464, 237,
	335, 453, 422, 459, 475, 206, 234, 349, 415, 449,
	406, 328, 429, 430, 292, 405, 266, 191, 303, 469,
	204, 394, 221, 211, 197, 417, 441, 218, 397, 0,
	0, 477, 199, 439, 414, 324, 289, 290, 198, 0,
	378, 242, 264, 232, 344, 436, 437, 230, 478, 208,
	458, 201, 0, 457, 337, 432, 440, 325, 315, 200,
	438, 323, 314, 295, 253, 275, 372, 308, 373, 276,
	333, 332, 334, 194, 450, 0, 195, 0, 411, 451,
	479, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 301, 348, 371, 369, 375, 0, 427, 444,
	454, 461, 467, 468, 470, 471, 472, 473, 474, 336,
	278, 407, 294, 306, 0, 0, 354, 387, 219, 448,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	316, 399, 445, 296, 297, 298, 0, 187, 202, 302,
	0, 376, 261, 476, 456, 452, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 312, 318, 319, 320,
	321, 338, 339, 340, 343, 346, 347, 350, 352, 353,
	356, 363, 364, 365, 366, 368, 370, 377, 381, 389,
	390, 391, 392, 393, 395, 396, 401, 402, 403, 404,
	412, 416, 434, 435, 447, 460, 465, 270, 442, 466,
	0, 311, 0, 0, 313, 254, 273, 284, 0, 455,
	413, 207, 383, 262, 196, 225, 210, 233, 248, 251,
	288, 322, 329, 358, 362, 267, 245, 223, 380, 220,
	398, 419, 420, 421, 423, 326, 240, 361, 424, 0,
	309, 425, 426, 280, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 300, 241, 0, 0, 359, 0,
	193, 0, 400, 228, 310, 307, 431, 255, 247, 243,
	227, 281, 317, 357, 418, 351, 0, 304, 0, 0,
	409, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	342, 410, 259, 0, 0, 0, 0, 184, 2301, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 428, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 331, 231, 0, 0, 0,
	0, 462, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 293, 188, 205, 0, 0, 341, 382, 388, 0,
	0, 0, 229, 0, 386, 355, 446, 213, 257, 379,
	360, 384, 367, 260, 0, 0, 385, 305, 433, 374,
	443, 463, 464, 237, 335, 453, 422, 459, 475, 206,
	234, 349, 415, 449, 406, 328, 429, 430, 292, 405,
	266, 191, 303, 469, 204, 394, 221, 211, 197, 417,
	441, 218, 397, 0, 0, 477, 199, 439, 414, 324,
	289, 290, 198, 0, 378, 242, 264, 232, 344, 436,
	437, 230, 478, 208, 458, 201, 0, 457, 337, 432,
	440, 325, 315, 200, 438, 323, 314, 295, 253, 275,
	372, 308, 373, 276, 333, 332, 334, 194, 450, 0,
	195, 0, 411, 451, 479, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 301, 348, 371, 369,
	375, 0, 427, 444, 454, 461, 467, 468, 470, 471,
	472, 473, 474, 336, 278, 407, 294, 306, 0, 0,
	354, 387, 219, 448, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 498, 316, 399, 445, 296, 297, 298,
	0, 187, 202, 302, 0, 376, 261, 476, 456, 452,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	312, 318, 319, 320, 321, 338, 339, 340, 343, 346,
	347, 350, 352, 353, 356, 363, 364, 365, 366, 368,
	370, 377, 381, 389, 390, 391, 392, 393, 395, 396,
	401, 402, 403, 404, 412, 416, 434, 435, 447, 460,
	465, 270, 442, 466, 0, 311, 0, 0, 313, 254,
	273, 284, 0, 455, 413, 207, 383, 262, 196, 225,
	210, 233, 248, 251, 288, 322, 329, 358, 362, 267,
	245, 223, 380, 220, 398, 419, 420, 421, 423, 326,
	240, 361, 424, 0, 309, 425, 426, 280, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 300, 241,
	0, 0, 359, 0, 193, 0, 400, 228, 310, 307,
	431, 255, 247, 243, 227, 281, 317, 357, 418, 351,
	0, 304, 0, 0, 409, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 342, 410, 259, 0, 0, 0,
	0, 184, 1906, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 428, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 331,
	231, 0, 0, 0, 0, 462, 0, 0, 0, 0,
	0, 0, 0, 299, 0, 293, 188, 205, 0, 0,
	341, 382, 388, 0, 0, 0, 229, 0, 386, 355,
	446, 213, 257, 379, 360, 384, 367, 260, 0, 0,
	385, 305, 433, 374, 443, 463, 464, 237, 335, 453,
	422, 459, 475, 206, 234, 349, 415, 449, 406, 328,
	429, 430, 292, 405, 266, 191, 303, 469, 204, 394,
	221, 211, 197, 417, 441, 218, 397, 0, 0, 477,
	199, 439, 414, 324, 289, 290, 198, 0, 378, 242,
	264, 232, 344, 436, 437, 230, 478, 208, 458, 201,
	0, 457, 337, 432, 440, 325, 315, 200, 438, 323,
	314, 295, 253, 275, 372, 308, 373, 276, 333, 332,
	334, 194, 450, 0, 195, 0, 411, 451, 479, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	301, 348, 371, 369, 375, 0, 427, 444, 454, 461,
	467, 468, 470, 471, 472, 473, 474, 336, 278, 407,
	294, 306, 0, 0, 354, 387, 219, 448, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 498, 316, 399,
	445, 296, 297, 298, 0, 187, 202, 302, 0, 376,
	261, 476, 456, 452, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 312, 318, 319, 320, 321, 338,
	339, 340, 343, 346, 347, 350, 352, 353, 356, 363,
	364, 365, 366, 368, 370, 377, 381, 389, 390, 391,
	392, 393, 395, 396, 401, 402, 403, 404, 412, 416,
	434, 435, 447, 460, 465, 270, 442, 466, 0, 311,
	0, 0, 313, 254, 273, 284, 0, 455, 413, 207,
	383, 262, 196, 225, 210, 233, 248, 251, 288, 322,
	329, 358, 362, 267, 245, 223, 380, 220, 398, 419,
	420, 421, 423, 326, 240, 361, 0, 0, 309, 425,
	426, 280,
}

var yyPact = [...]int{
	4208, -1000, -395, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1756, 1762, -1000, -1000,
	-1000, -1000, 1858, -1000, 730, 1522, -1000, 1753, 299, -1000,
	35717, 489, -1000, 35163, 480, 117, 35717, -1000, 114, -1000,
	102, 35717, 110, 34609, -1000, -1000, -306, 15770, 1691, -17,
	-18, 35717, -1000, -1000, -1000, -1000, 1841, 1540, -1000, 273,
	-1000, -1000, -1000, -1000, -1000, -1000, 34055, -1000, -1000, -1000,
	1759, 1741, 1862, 640, 1686, -1000, 1800, 1540, -1000, 15770,
	1830, 1792, 15216, -1000, 15216, 428, -1000, -1000, 11331, -1000,
	-1000, 20204, 35717, 35717, 338, -1000, 1753, -1000, -1000, 337,
	-1000, 312, 1464, -1000, 1463, -1000, 439, 576, 340, 425,
	421, 339, 334, 320, 317, 315, 314, 307, 305, 301,
	-1000, 697, 697, -195, -197, 2294, 403, 403, 403, 446,
	1709, 1707, -1000, 657, -1000, 697, 697, 276, 697, 697,
	697, 697, 249, 242, 697, 697, 697, 697, 697, 697,
	697, 697, 697, 697, 697, 697, 697, 697, 697, 298,
	1753, 228, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35717,
	154, 35717, -1000, 578, 35717, 820, 820, 32, 820, 820,
	820, 820, 122, 584, -21, -1000, 86, 233, 194, 224,
	792, 168, 103, -1000, -1000, 215, 792, 1221, 672, 94,
	-1000, 820, 9083, 9083, 9083, -1000, 1730, -1000, -1000, -1000,
	-1000, -1000, -1000, 1011, -1000, 442, -1000, -1000, -1000, -1000,
	35717, 33501, 286, 714, -1000, -1000, -1000, 54, -1000, -1000,
	1321, 802, 15770, 981, -1000, 1448, 620, -1000, -1000, -1000,
	-1000, -1000, 567, 16324, 16324, 16324, 16324, -1000, -1000, 1467,
	1467, 1467, 1467, 16324, 1467, 16324, 1467, 1467, 1467, 1467,
	15770, 1467, 1467, 1467, -1000, 1467, 1467, 1467, 1467, 1467,
	1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467, 566,
	1467, 1467, 1467, 1467, 1467, -1000, -1000, -1000, -1000, 1467,
	1467, 1467, 1467, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 17986, -1000, 13554, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 35717, -1000, 1467, 131, 35717, 35717,
	289, 1800, 1540, -1000, 1841, 1811, 273, -1000, 1776, 1331,
	1303, 1173, 1540, 1455, 35717, -1000, 1469, -1000, -1000, -1000,
	1635, 1114, 1220, -1000, -1000, -1000, -1000, 1134, 15770, -1000,
	-1000, 1854, -1000, 17432, 564, 911, 1853, 32947, -1000, 428,
	428, 1461, 10769, -64, -1000, -1000, -1000, 712, 23528, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1730, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1431, 35717,
	-1000, -1000, 2357, 1228, -1000, 1507, -1000, 1428, -1000, 1479,
	1532, 477, 1228, 467, 465, 459, -1000, -106, -1000, -1000,
	-1000, -1000, -1000, 697, 697, -1000, 292, 1827, 299, 3113,
	-1000, -1000, -1000, 32393, 1505, 1228, -1000, 1503, -1000, 796,
	507, 539, 539, 1228, -1000, -1000, 35717, 1228, 784, 781,
	35717, 35717, -1000, 31839, -1000, 31285, 30731, 1047, 35717, 30177,
	29623, 29069, 28515, 27961, -1000, 1589, -1000, 1534, -1000, -1000,
	-1000, 35717, 35717, 35717, 275, -1000, -1000, 35717, 1228, -1000,
	-1000, 1042, 1041, 697, 697, 1034, 1218, 1217, 1208, 697,
	697, 1021, 1207, 25190, 241, 1020, 1017, 1016, 1054, 1196,
	192, 1035, 997, 1015, 35717, 1499, 35717, -1000, 209, 724,
	324, 700, 1753, 1690, 1459, 435, 476, 1228, 419, 419,
	35717, -1000, 9645, -1000, -1000, 1195, 15770, -1000, 800, 792,
	792, -1000, -1000, -1000, -1000, -1000, -1000, 820, 35717, 800,
	-1000, -1000, -1000, 792, 820, 35717, 820, 820, 820, 820,
	792, 792, 792, 820, 35717, 35717, 35717, 35717, 35717, 35717,
	35717, 35717, 35717, 9083, 9083, 9083, 672, 820, -310, -1000,
	1192, -1000, 1584, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 105, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -103, 1458, 27407, -1000, -312, -318, -319, -325,
	-1000, -1000, -1000, -328, -330, -1000, -1000, -1000, 15770, 15770,
	15770, 15770, -1000, 954, 16324, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 933, 673, 16324, 16324, 16324, 16324, 16324, 16324,
	16324, 16324, 16324, 16324, 16324, 16324, 16324, 16324, 16324, 721,
	1191, 1188, 620, 620, 620, 620, -1000, 15216, 15770, 15770,
	620, -1000, 1228, 26853, 15216, 15216, 15770, 1716, 734, 802,
	35717, -1000, 1173, -1000, -1000, -1000, 925, -1000, 35717, 35717,
	42, 15770, 15770, 15770, 12445, 15770, 15770, 15770, 11891, 9645,
	15216, 15216, 15216, 15216, 15216, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 557, 1356, 1304, 1392,
	-1000, 1456, -1000, -171, 19650, 15770, 1185, 1852, 1547, 35717,
	-1000, -1000, -1000, 1800, -1000, 1800, 1356, 1694, 1639, 15216,
	-1000, -1000, 1694, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1413, -1000, 35717, 1455, 1787, 35717, 1632, 1177, 282,
	-1000, 15770, 15770, 1454, -1000, 881, 35717, -1000, -1000, 26299,
	-1000, -1000, 8521, -1000, 35717, 272, 35717, -1000, 21866, 25745,
	10207, -64, -1000, 10207, 1440, -1000, -43, -57, 12999, 623,
	-1000, -1000, -1000, 2294, 16878, 1307, 623, 40, -1000, -1000,
	-1000, 1479, -1000, 1479, 1479, 1479, 1479, 282, 282, 282,
	282, -1000, -1000, -1000, -1000, -1000, 1498, 1497, -1000, 1479,
	1479, 1479, 1479, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1488, 1488, 1488, 1481, 1481, 397, -1000, 15770, 206, 35717,
	1767, 1010, 209, 424, 1541, 1228, 1228, 1228, 424, -1000,
	1214, 1202, -1000, -384, 1453, -1000, -1000, 1826, -1000, -1000,
	685, 822, 818, 502, 35717, 132, 271, -1000, 391, -1000,
	35717, 1228, 778, 539, 1228, -1000, 1228, -1000, -1000, -1000,
	-1000, -1000, 1228, 1452, -1000, 1495, 883, 810, 829, 764,
	1452, -1000, -1000, -143, 1452, -1000, 1452, -1000, 1452, -1000,
	1452, -1000, 1452, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 687, 35717, 132, 721, -1000, 434, -1000, -1000, 721,
	721, -1000, -1000, -1000, -1000, 1176, 1166, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -373, 35717, -1000, 186, 699, 259,
	296, 198, 35717, 138, 1778, 221, 239, 35717, 35717, 419,
	1571, 35717, 1764, 35717, -1000, -1000, -1000, -1000, -1000, 802,
	35717, -1000, -1000, 820, 820, -1000, -1000, 35717, 820, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 820, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 35717, 35717, -1000, -1000, -1000,
	-1000, -1000, 73, -40, 255, -1000, -1000, -1000, -1000, -1000,
	1797, -1000, 802, 754, 740, -1000, -1000, -1000, 939, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 933, 16324, 16324, 16324,
	1555, 473, 824, 1355, 1060, 806, 806, 834, 834, 627,
	627, 627, 627, 627, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1362, -1000, 1154, 1066, 1173, -1000, 1362, 1362, 1006,
	15216, -1000, -1000, 739, -1000, 15770, 1173, -1000, -1000, 1173,
	1450, 1444, 1851, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 970, 1100, 1100, 15770, 1026, -1000,
	-1000, -1000, 1173, 1321, 1173, 1442, -1000, 1180, 1100, 1173,
	15216, 15216, 1441, 1467, 549, -1000, 1362, 1173, 1173, 1362,
	1362, 9645, 1173, -1000, 35717, -1000, -305, -1000, -54, 629,
	1467, -1000, 25190, 1173, -1000, 1055, -1000, 36825, -1000, -1000,
	-1000, -1000, -1000, 22974, 1430, 1694, -1000, -1000, 1467, 1390,
	-1000, -1000, 282, -1, 22420, -1000, -1000, 802, 802, 15770,
	-1000, -1000, -1000, -1000, -1000, -1000, 543, 1838, 297, 1467,
	-1000, 1489, 1606, -1000, -1000, -1000, 1785, 18541, 1467, 35717,
	1457, 1398, -1000, 534, -1000, 1440, -64, -51, -1000, -1000,
	-1000, -1000, 802, -1000, 1156, 295, 2715, -1000, 400, -1000,
	-1000, -1000, -1000, 1698, 4, -1000, -1000, -1000, 282, 282,
	-1000, -1000, -1000, -1000, -1000, -1000, 1165, 1165, -1000, -1000,
	-1000, -1000, -1000, 1008, -1000, -1000, -1000, 1005, -1000, -1000,
	1148, 1576, 206, -1000, -1000, 697, 1163, 1700, 35717, -1000,
	-1000, 1300, 186, 35717, 747, 1565, -1000, 1541, 1541, 1541,
	35717, -1000, -1000, -1000, -1000, -375, 50, 263, -1000, -1000,
	-1000, 2540, 35717, 1387, -1000, 124, -1000, 1271, 1664, 35717,
	-1000, 1382, 1487, 1228, 1228, -1000, -1000, -1000, 35717, 1467,
	-1000, -1000, -1000, -1000, 469, 1752, 1748, 132, 124, 623,
	1228, -1000, -1000, -1000, -1000, -1000, -376, 1366, 456, 150,
	222, 35717, 35717, 35717, 35717, 35717, 542, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 231, 430, -1000, 35717, 35717,
	559, -1000, -1000, -1000, 792, -1000, -1000, 792, -1000, -1000,
	-1000, -1000, -1000, 1727, 35717, -46, -350, -1000, -347, -1000,
	-1000, -1000, -1000, 1278, 472, 824, 16324, 16324, 15216, -128,
	451, 451, 721, -1000, -1000, -1000, 15770, 15770, 1483, 716,
	-1000, 15770, 760, -1000, -1000, 15770, 15770, 15770, 1173, 225,
	-1000, -1000, 1849, -1000, 15770, -1000, -1000, 15770, 15770, -1000,
	-1000, 1362, 1362, 15216, 9645, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 629, -1000, 539, 539, 539,
	35717, -1000, -1000, -1000, -1000, -1000, -1000, 1439, 1803, -1000,
	1663, 1662, 1840, 1838, -1000, 21866, 1694, -1000, -1000, 35717,
	-295, -1000, 1684, 1668, -1000, -1000, -1000, -1000, 7959, 1800,
	15770, 1563, 35717, 1467, -1000, 19096, 35717, 35717, 21866, 21866,
	21866, 21866, 21866, -1000, 1611, 1599, -1000, 1621, 1620, 1595,
	35717, -1000, 1353, 1173, 1811, 18541, 273, 21312, 1287, 21866,
	-1000, -1000, 21866, 35717, 7397, -1000, -1000, -52, -72, -1000,
	-1000, -1000, -1000, 2294, -1000, -1000, 550, 1784, 1696, -1000,
	-1000, -1000, -1000, 1335, -1000, 1333, 1437, 1328, 100, -1000,
	1530, 1722, 697, 697, -1000, 1000, -1000, 1228, -1000, -1000,
	437, -1000, 1760, 35717, 1562, 1557, 1556, -1000, -383, 996,
	1486, 1361, 15770, 1485, 1825, 1434, 35717, -1000, -1000, 35717,
	-1000, -1000, 384, -1000, 206, 35717, -1000, -1000, -1000, 271,
	35717, -1000, 4695, 124, -1000, -1000, -1000, -1000, -1000, -1000,
	35717, 156, -1000, 1482, 986, -1000, -1000, 1491, -1000, -1000,
	-1000, -1000, 129, 243, -1000, 35717, 538, 1576, 35717, -1000,
	-1000, -1000, 820, 820, -1000, -1000, 1712, -1000, 1228, 16324,
	16324, -1000, 620, -1000, 1467, 1173, 1479, 1479, -1000, 1479,
	1481, -1000, 1479, 92, 1479, 90, 1479, -1000, -1000, 1173,
	1173, 914, 896, -113, -1000, 802, 15770, 1168, 1113, 1100,
	-1000, 1477, 1476, 15770, 1100, -1000, 802, -1000, -1000, 1173,
	-1000, -1000, 1791, 1791, 1791, 1314, 36271, 35717, -1000, -1000,
	-1000, -1000, 1838, 1835, 1436, -1000, -1000, -1, 330, -1000,
	1678, 1668, -1000, 1823, 1680, 1817, -1000, -1000, -1000, 802,
	-1000, 1757, 1443, -1000, 696, 1319, -1000, -1000, 14662, 1324,
	1643, 522, 1314, 1351, 1606, 1546, 1554, 1582, -1000, -1000,
	-1000, -1000, 1596, -1000, 1568, -1000, -1000, 1469, -1000, -1000,
	1304, 1173, 272, 21866, 1337, 1337, -1000, 515, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 893, 3526, 1861, -1000, 1151,
	-1000, 1096, -1000, 777, 767, -1000, 35717, 1475, -1000, 282,
	1131, 282, 995, -1000, 994, -1000, -1000, -241, -1000, -1000,
	1504, 1558, -1000, -1000, 35717, -1000, -1000, 35717, 35717, 35717,
	1474, 1816, -1000, 15770, 1473, 691, 1109, 35717, 35717, -1000,
	-1000, 267, 1467, -1000, 1312, 1306, -1000, -198, -1000, 15770,
	-1000, -1000, -1000, 983, 983, -1000, 1469, -1000, -1000, -1000,
	1261, -1000, -1000, -146, 35717, 35717, 35717, 35717, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 620, 16324, -1000,
	-1000, 282, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15770, -1000, 15770, -1000, 1800, 1129, 802, 15770, 15770,
	-1000, 980, 975, 1100, -1000, -1000, 1467, 1677, 1467, 1467,
	21312, -1000, -1000, 1835, 1833, 1815, 1673, 1675, 1675, 1678,
	-1000, 1814, 1813, -1000, 1115, 1809, 1103, 763, -1000, 35717,
	15770, 1467, -1000, 287, 35717, 1467, 35717, -1000, 1812, -1000,
	-1000, 15770, 1471, -1000, 15770, -1000, -1000, -1000, -1000, -1000,
	-1000, 1838, 1337, -1000, -1000, 633, -1000, 15770, -1000, -1000,
	-1000, 436, -1000, -1000, -1000, -1000, -1000, 1470, 15770, -1000,
	-1000, -1000, 1248, 1240, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1469, -1000, -1000, -1000, -1000, 271, -381, 1105,
	35717, 969, -1000, 1298, 1434, 447, -1000, 15770, 359, -1000,
	271, -1000, -203, -205, 1100, -1000, -1000, 1773, -1000, -1000,
	9645, -1000, -1000, 1468, 1536, -1000, 212, -1000, 1100, 1100,
	1173, -1000, 1100, 1100, 1237, 1234, -1000, 20758, -1000, 1808,
	1804, 24636, 24636, 629, 1833, -1000, 15770, 15770, 1669, 909,
	-1000, -1000, -1000, -1000, 1088, 1064, -1000, 1050, -1000, 1860,
	-1000, 802, -1000, 1467, -1000, 488, 1319, -1000, 1800, 802,
	35717, 802, 1812, -1000, 1100, -1000, 1467, 1467, 1467, 1467,
	1467, 1467, 1467, 35717, 1073, -1000, -1000, 1772, 1296, 48,
	-1000, 1294, -1000, -1000, -1000, -1000, 14108, -1000, -1000, -1000,
	-1000, -1000, -1000, 273, 1339, -1000, 686, 35717, 35717, 1173,
	230, -150, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1292,
	-1000, -1000, -1000, -1000, -1000, 1292, 1292, -1000, -1000, 802,
	1321, -1000, 908, -1000, -1000, -1000, -1000, -1000, 35717, 1319,
	35717, -1000, 1282, 1800, -1000, 1275, -1000, 273, -1000, 1466,
	1361, -1000, 1173, -144, 9645, 6835, 1269, -1000, -1000, 1626,
	-136, -192, 24082, -1000, -1000, -1000, -1000, -1000, 1186, -1000,
	-1000, -1000, 1552, 788, -144, 15770, 1332, -1000, -1000, -44,
	-1000, -1000, -1000, -1000, -1000, 1491, -1000, 1622, -1000, -1000,
	-1000, 1550, -1000, 1848, -1000, -1000, -1000, 833, 910, -1000,
	-1000, -1000, -1000, 797, 35717, 381, -1000, -1000, -146, -147,
	-1000, 1850, 562, 562, -1000, -1000, -392, 1233, 193, -1000,
	-162, -1000, -1000, -1000, 368, 902, -1000, -1000, 968, -392,
	-1000, -196, -1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2150, 2149, 13, 2, 2148, 19, 76, 168, 14,
	175, 75, 2147, 2146, 2145, 2143, 2142, 2141, 2140, 196,
	195, 194, 2138, 2137, 2136, 2135, 2134, 2133, 2132, 2128,
	2127, 2126, 192, 145, 162, 2125, 2124, 2123, 100, 163,
	69, 71, 161, 2122, 2121, 55, 2119, 2116, 2115, 159,
	154, 762, 2114, 153, 101, 25, 2112, 2111, 2110, 2109,
	2108, 2105, 2104, 2103, 2102, 2101, 2100, 2099, 2098, 2097,
	241, 2096, 2091, 7, 2087, 63, 2086, 2085, 2084, 2083,
	105, 2079, 2078, 2077, 2075, 2074, 2073, 126, 2072, 2071,
	2070, 2068, 174, 2067, 2066, 138, 90, 95, 2065, 2064,
	83, 165, 2063, 102, 2058, 2054, 2053, 130, 2052, 3490,
	2051, 49, 47, 2050, 46, 60, 43, 40, 2048, 2047,
	2042, 48, 74, 2040, 86, 50, 2038, 82, 79, 2037,
	42, 2036, 2030, 93, 2028, 2027, 2025, 73, 2016, 2015,
	4579, 2014, 70, 120, 84, 53, 2009, 26, 35, 2008,
	2007, 2006, 2005, 2003, 31, 2002, 2001, 1996, 124, 21,
	148, 22, 34, 32, 116, 1995, 29, 61, 1994, 123,
	122, 1993, 37, 17, 15, 1992, 8, 111, 134, 16,
	80, 119, 1991, 1990, 38, 52, 1989, 1988, 1987, 1986,
	1985, 1984, 45, 1983, 36, 1981, 176, 1979, 3, 1978,
	30, 24, 1977, 41, 81, 44, 12, 1973, 160, 1972,
	33, 143, 107, 135, 1971, 1970, 1961, 166, 226, 1959,
	1957, 66, 149, 128, 129, 1954, 228, 1953, 1952, 78,
	1555, 2184, 18, 144, 1938, 1935, 3103, 125, 115, 39,
	1934, 94, 1933, 1932, 1931, 164, 147, 92, 965, 96,
	1930, 1928, 1927, 1926, 1925, 1924, 1923, 1918, 188, 167,
	59, 98, 132, 58, 1917, 1915, 1914, 104, 77, 1913,
	142, 141, 110, 146, 1911, 151, 137, 131, 1910, 88,
	1909, 1907, 1904, 1902, 65, 1900, 1899, 1898, 1897, 139,
	133, 103, 67, 1896, 68, 106, 136, 140, 28, 1895,
	23, 1894, 1893, 152, 11, 1892, 4, 91, 1891, 1890,
	0, 1887, 6, 158, 237, 150, 1886, 1884, 1, 1883,
	5, 1882, 1881, 121, 1880, 1879, 1878, 10, 27, 9,
	1877, 1876, 1875, 3777, 3373, 108, 1873, 170,
}

//line sql.y:6299
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 331, 332, 332, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 310, 310,
	310, 313, 313, 30, 65, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 78, 78, 20, 21, 21, 21, 21,
	335, 335, 135, 135, 133, 133, 134, 134, 203, 203,
	22, 23, 23, 213, 213, 212, 212, 212, 214, 214,
	214, 214, 248, 248, 24, 24, 24, 24, 24, 93,
	93, 312, 312, 311, 306, 306, 305, 305, 304, 309,
	309, 308, 308, 307, 36, 37, 46, 46, 46, 46,
	47, 48, 314, 314, 280, 52, 52, 51, 51, 51,
	51, 53, 53, 50, 50, 49, 49, 282, 282, 269,
	269, 281, 281, 281, 281, 281, 281, 281, 268, 268,
	104, 104, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 326, 326, 183, 183, 183, 183, 183,
	183, 113, 113, 121, 121, 121, 121, 111, 111, 112,
	110, 110, 110, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 120, 120, 117, 117,
	117, 118, 118, 118, 327, 327, 327, 327, 251, 251,
	251, 251, 254, 254, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 253, 253, 253, 253, 253, 255, 255,
	255, 255, 255, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 257, 257,
	257, 257, 257, 257, 257, 257, 267, 267, 258, 258,
	262, 262, 263, 263, 263, 264, 264, 264, 265, 265,
	260, 260, 260, 260, 260, 260, 261, 261, 261, 270,
	294, 294, 293, 293, 291, 291, 291, 291, 279, 279,
	288, 288, 288, 288, 288, 278, 278, 274, 274, 274,
	275, 275, 276, 276, 273, 273, 277, 277, 290, 290,
	289, 271, 271, 272, 272, 296, 328, 328, 328, 328,
	329, 329, 297, 319, 320, 318, 318, 318, 318, 318,
	75, 75, 75, 225, 225, 225, 286, 286, 285, 285,
	285, 287, 287, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 220, 220, 220, 317, 317, 317, 317, 317, 317,
	316, 316, 316, 283, 283, 283, 315, 315, 54, 54,
	167, 167, 43, 43, 43, 43, 43, 43, 42, 42,
	42, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 44, 44, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 80, 80, 81, 81, 81,
	81, 82, 82, 82, 299, 299, 55, 55, 3, 3,
	1, 1, 2, 2, 4, 4, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 266, 266,
	266, 298, 298, 300, 302, 302, 302, 302, 301, 89,
	89, 26, 35, 35, 27, 27, 27, 27, 28, 28,
	56, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 321,
	321, 219, 219, 227, 227, 218, 218, 241, 241, 241,
	221, 221, 221, 222, 222, 325, 325, 325, 58, 58,
	58, 60, 60, 61, 62, 62, 243, 243, 244, 244,
	63, 64, 76, 76, 76, 76, 76, 76, 79, 79,
	79, 13, 13, 13, 13, 72, 72, 72, 12, 12,
	59, 59, 66, 322, 322, 323, 324, 324, 324, 324,
	67, 69, 29, 29, 29, 29, 29, 29, 99, 99,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 94, 94, 94, 88, 88, 336, 70, 71,
	71, 92, 92, 92, 85, 85, 85, 91, 91, 91,
	14, 14, 15, 202, 202, 16, 16, 96, 96, 98,
	98, 98, 98, 98, 100, 100, 100, 100, 100, 100,
	100, 95, 95, 97, 97, 97, 97, 234, 234, 234,
	233, 233, 124, 124, 126, 125, 125, 127, 127, 128,
	128, 128, 165, 165, 143, 143, 200, 200, 198, 198,
	199, 199, 201, 201, 201, 201, 204, 204, 129, 129,
	129, 129, 130, 130, 131, 131, 132, 132, 242, 242,
	239, 239, 239, 238, 238, 136, 136, 136, 138, 137,
	137, 137, 137, 139, 139, 141, 141, 140, 140, 142,
	147, 147, 146, 146, 144, 144, 144, 144, 145, 145,
	145, 145, 148, 148, 109, 109, 109, 109, 109, 109,
	119, 119, 119, 119, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 77, 77, 77, 216, 216, 149, 149, 157, 157,
	157, 157, 150, 150, 150, 150, 150, 150, 150, 158,
	158, 158, 164, 159, 159, 155, 155, 155, 155, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 337, 337, 259,
	259, 259, 156, 156, 156, 156, 156, 90, 90, 90,
	90, 90, 247, 247, 247, 250, 250, 250, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 170, 170, 86, 86, 168, 168, 169,
	171, 171, 166, 166, 166, 152, 152, 152, 172, 172,
	173, 173, 174, 174, 176, 175, 175, 177, 178, 178,
	178, 179, 179, 180, 180, 180, 45, 45, 45, 45,
	45, 40, 40, 40, 40, 41, 41, 41, 101, 101,
	101, 101, 103, 103, 102, 102, 73, 73, 74, 74,
	74, 107, 107, 108, 108, 108, 105, 105, 106, 106,
	196, 196, 181, 181, 181, 188, 188, 188, 184, 184,
	186, 186, 186, 187, 187, 187, 185, 193, 193, 195,
	195, 194, 194, 190, 190, 191, 191, 192, 192, 192,
	189, 189, 151, 151, 151, 151, 151, 197, 197, 197,
	197, 205, 205, 161, 161, 163, 163, 162, 123, 206,
	206, 210, 207, 207, 211, 211, 211, 211, 211, 208,
	208, 209, 209, 235, 235, 235, 215, 215, 226, 226,
	223, 223, 224, 224, 217, 217, 228, 228, 228, 68,
	160, 160, 295, 295, 292, 231, 231, 232, 232, 236,
	236, 240, 240, 237, 237, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 333, 334, 245, 246, 246, 246,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 2, 2, 2, 1, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 3, 0, 1,
	4, 3, 3, 4, 2, 0, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 1, 3, 1, 7, 5, 6, 6, 7,
	0, 1, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 0, 1, 2, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	0, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	6, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 5, 5, 0, 6, 5, 6, 4,
	5, 0, 8, 9, 0, 3, 0, 1, 0, 3,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 4, 4, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 4, 2, 4, 5, 4, 4, 4, 4, 4,
	3, 3, 3, 5, 2, 3, 3, 3, 3, 1,
	1, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 3, 4, 3, 7, 0, 3, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	3, 4, 3, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 9, 6, 6, 6, 2, 2, 3, 3,
	3, 1, 1, 1, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 5, 5, 6, 4,
	4, 8, 6, 8, 6, 8, 5, 4, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 5, 4, 4,
	7, 4, 6, 4, 4, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 2, 2, 0, 3,
	0, 2, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -331, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -56, -57, -58, -60,
	-61, -62, -63, -64, -12, -59, -29, -30, -65, -66,
	-67, -68, -69, -14, -15, -16, -7, -6, -11, 7,
	8, -78, -31, 30, -36, -46, 206, -47, -37, 207,
	-48, 209, 208, 245, 210, 238, 72, 287, 288, 290,
	291, 292, 293, -79, 243, 244, 212, 34, 43, 31,
	32, 35, 216, 251, 252, 215, -8, -32, 6, -333,
	9, 413, 240, 239, 26, -10, 433, 83, -332, 567,
	-196, -181, 20, 31, 27, -180, -176, -92, -181, 18,
	16, 5, -70, -336, -70, -70, 10, 11, -70, -280,
	-282, 83, 143, 83, -70, -52, -51, -50, -49, -53,
	29, -43, -44, -303, -42, -39, 211, 208, 255, 107,
	108, 245, 246, 247, 210, 229, 244, 248, 243, 264,
	-38, 78, 31, 433, 436, -287, 207, 213, 214, 414,
	110, 109, 73, 209, -284, 339, 537, -53, 539, 99,
	101, 538, 42, 219, 540, 541, 542, 543, 228, 544,
	545, 546, 547, 553, 554, 555, 556, 111, 5, -70,
	-240, -236, -310, -230, 86, 87, 88, 430, 231, 464,
	465, 280, 78, 39, 336, 339, 537, 287, 301, 295,
	322, 314, 431, 466, 283, 232, 268, 534, 312, 119,
	539, 286, 467, 246, 344, 345, 346, 99, 290, 381,
	552, 285, 468, 550, 101, 538, 77, 49, 42, 241,
	310, 215, 306, 540, 269, 469, 441, 262, 110, 107,
	559, 34, 304, 48, 28, 549, 109, 47, 541, 134,
	470, 542, 348, 327, 528, 46, 349, 247, 471, 81,
	252, 435, 536, 350, 305, 351, 279, 548, 212, 472,
	520, 352, 353, 529, 473, 328, 332, 474, 373, 354,
	566, 50, 475, 476, 530, 108, 477, 76, 543, 299,
	300, 478, 277, 230, 375, 326, 426, 427, 428, 228,
	33, 355, 432, 281, 56, 256, 376, 44, 330, 563,
	43, 524, 479, 527, 325, 321, 423, 51, 480, 481,
	482, 483, 544, 324, 298, 320, 558, 453, 274, 545,
	60, 214, 334, 333, 335, 263, 372, 317, 484, 485,
	486, 235, 79, 487, 307, 19, 488, 489, 356, 270,
	490, 54, 491, 492, 379, 244, 493, 52, 546, 37,
	249, 560, 547, 494, 495, 496, 497, 251, 498, 358,
	499, 357, 329, 331, 258, 359, 434, 500, 303, 248,
	551, 501, 236, 535, 250, 255, 243, 380, 237, 502,
	503, 504, 505, 506, 284, 507, 508, 291, 553, 424,
	41, 509, 510, 511, 512, 278, 273, 374, 383, 59,
	80, 341, 513, 533, 297, 271, 514, 288, 53, 554,
	555, 556, 265, 557, 7, 564, 565, 361, 111, 275,
	276, 45, 318, 257, 515, 516, 308, 309, 323, 296,
	319, 289, 521, 259, 362, 425, 245, 517, 382, 272,
	337, 342, 438, 264, 363, 532, 437, 316, 313, 266,
	518, 364, 220, 260, 261, 519, 522, 365, 366, 282,
	367, 368, 369, 370, 371, 267, 436, 294, 311, 343,
	394, 395, 396, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 422, 218,
	-70, 218, -140, -236, 218, -208, 345, -227, 347, 360,
	355, 365, 353, -219, 356, 358, 258, -325, 373, 218,
	362, 206, 160, 348, 357, 366, 367, 282, 368, 371,
	267, -321, -310, 542, 557, 119, 315, 352, 350, 374,
	524, 370, 369, -236, 289, -243, 294, -231, -310, -230,
	292, -140, -76, 520, 210, -245, -245, -94, 524, 526,
	-159, -109, 127, -119, -122, -114, -115, -153, -154, -155,
	-156, -120, -166, 149, 150, 157, 128, -164, -123, 24,
	429, 415, 414, 160, 29, 202, 66, 67, 417, 418,
	130, 55, 390, 391, -121, 386, 392, 387, 420, 421,
	102, 422, 423, 424, 425, 426, 427, 428, -231, -236,
	223, 385, 217, 155, 413, -116, -112, -6, -162, 384,
	388, 389, 393, -310, -230, -118, -117, -149, 89, 95,
	100, 96, -330, 103, -333, 90, 91, 92, 93, 94,
	104, 105, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 42, 361, 361, -140, -70, -70, -70,
	-70, -174, -92, -176, -8, -6, -333, 6, -70, -6,
	-7, -11, -32, -34, 460, -33, -236, -181, -196, 10,
	145, 40, 48, -179, -180, -10, -6, -109, 17, 21,
	22, -97, 151, -109, -236, -71, -97, -217, 222, -70,
	-70, -207, -248, 289, -211, 374, 373, -232, -209, -231,
	-229, -208, 372, 211, 439, 126, 23, 25, 129, 160,
	114, 17, 130, 35, 213, 315, 229, 159, 225, 414,
	206, 70, 440, 386, 387, 384, 390, 416, 417, 385,
	347, 29, 11, 442, 26, 239, 22, 36, 153, 208,
	133, 242, 24, 240, 102, 105, 445, 20, 73, 234,
	12, 227, 38, 14, 446, 447, 15, 223, 222, 145,
	219, 68, 9, 202, 27, 142, 64, 448, 121, 449,
	450, 451, 452, 115, 66, 143, 18, 561, 388, 389,
	31, 525, 429, 253, 155, 71, 57, 526, 127, 454,
	455, 103, 456, 106, 74, 531, 123, 16, 69, 40,
	457, 254, 458, 224, 562, 459, 377, 460, 144, 209,
	413, 67, 461, 217, 360, 6, 419, 30, 238, 226,
	113, 65, 462, 218, 132, 420, 421, 221, 116, 104,
	5, 120, 32, 10, 72, 75, 391, 392, 393, 55,
	112, 433, 131, 13, 463, 378, 125, 119, -281, 143,
	-268, -272, -231, 233, -297, 229, -140, -290, -289, -231,
	-93, -226, 219, 227, 226, 120, -314, 123, 275, 385,
	217, -49, -50, -208, 159, -80, 250, 254, 84, 84,
	-272, -271, -270, -315, 254, 233, -296, -288, 225, 234,
	-278, 226, 227, -273, 219, 121, -315, -273, 224, 234,
	254, 254, 111, 254, 111, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 249, -279, 135, -279, 437, 437,
	-284, -315, -315, -315, 221, 33, 33, -228, -273, 221,
	23, -279, -279, -208, 159, -279, -279, -279, -279, 262,
	262, -279, -279, -279, -279, -279, -279, -279, -279, -279,
	-279, -279, -279, -279, -279, -279, 218, -314, -101, 371,
	282, 78, -51, 264, -35, -140, -226, 219, 220, -314,
	251, -140, 203, -140, -221, 143, 13, -221, -218, 361,
	359, 346, 351, -221, -221, -221, -221, 265, 344, -274,
	219, 33, 230, 361, 265, 344, 265, 266, 265, 266,
	354, 364, 265, -241, 12, 145, 385, 349, 353, 258,
	218, 259, 220, 363, -310, 527, 266, -241, 90, -222,
	143, 361, 261, -221, -246, -333, -232, 315, -246, -246,
	30, 87, 221, -231, -72, -231, 90, -13, -9, -20,
	-19, -21, 135, -99, 361, -87, 160, 542, 528, 529,
	530, 527, 358, 535, 533, 531, 265, 532, 84, 123,
	125, 126, -109, 142, -150, 135, 136, 137, 138, 139,
	140, 141, 145, 127, 129, 143, 144, 124, 146, 147,
	148, 149, 150, 151, 152, 154, 153, 155, 156, 159,
	204, 205, -115, -115, -115, -115, -164, -333, -333, -333,
	-115, -216, -333, -115, -333, -333, -333, -333, -170, -109,
	-333, -337, -333, -337, -337, -259, -333, -259, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, 203,
	-333, -333, -333, -333, -333, -259, -259, -259, -259, 100,
	95, 89, -166, 96, 90, -231, -236, -6, -7, -159,
	-245, -322, -323, -143, -140, -333, 282, -231, -231, 251,
	-179, -10, -6, -174, -180, -176, -6, -70, -85, -98,
	61, 62, -100, 22, 36, 65, 63, 21, -334, 85,
	-334, -196, -334, 84, -34, -200, 83, 59, 41, 90,
	90, 84, 19, -175, -177, -109, 12, -234, -233, 23,
	-231, 90, 203, 98, 12, -141, 27, -140, -217, -217,
	84, 289, -211, -248, -213, -212, 375, 377, 135, -235,
	-231, 90, 29, 85, 84, -140, -251, -254, -256, -255,
	-257, -252, -253, 312, 313, 160, 316, 318, 319, 320,
	321, 322, 323, 324, 325, 326, 327, 30, 241, 308,
	309, 310, 311, 328, 329, 330, 331, 332, 333, 334,
	335, 295, 314, 431, 296, 297, 298, 299, 300, 301,
	303, 304, 305, 306, 307, -313, -310, 83, 85, 84,
	-258, 83, -101, 218, -310, 219, 219, 219, -70, 413,
	-279, -279, 249, 17, -42, -39, -303, 16, -38, -39,
	211, 107, 108, 208, 83, -268, 83, -277, -313, -310,
	83, 121, 224, 120, -276, -273, -276, -277, -310, -166,
	-310, 121, 121, -204, -231, -204, -204, 21, -204, 21,
	-204, 21, 92, -231, -204, 21, -204, 21, -204, 21,
	-204, 21, -204, 21, 29, 76, 77, 29, 79, 80,
	81, -166, -166, -268, -208, -140, -310, 92, 92, -279,
	-279, 92, 90, 90, 90, -279, -279, 92, 90, -238,
	-236, 90, -316, 235, 279, 281, 92, 92, 92, 92,
	29, 90, -317, 29, 549, 548, 550, 551, 552, 92,
	29, 92, 29, 92, -231, 83, -140, -107, 269, 206,
	208, 211, 74, 90, 283, 135, 42, 84, 221, 218,
	-310, -223, 223, -223, -231, -237, -236, -229, 90, -109,
	-275, 12, 145, -241, -241, -221, -140, -275, -241, -221,
	-140, -221, -221, -221, -221, -241, -241, -241, -221, -236,
	-236, -140, -140, -140, -140, -140, -140, -140, -246, -246,
	-246, -222, -221, 527, 90, 74, -244, 292, 326, 521,
	522, 523, 84, 433, -133, -140, 527, 527, 527, 527,
	527, 527, -109, -109, -109, -109, -157, 103, 127, 104,
	105, -122, -158, -162, -164, 97, 145, 129, 143, 144,
	-114, -115, -114, -114, -114, -114, -114, -114, -114, -114,
	-114, -114, -114, -114, -114, -247, -310, 90, 160, 90,
	90, -95, -97, -109, -109, -310, -231, -95, -95, -109,
	-91, 22, 36, -168, -169, 131, -166, -334, -334, 92,
	-231, -231, -84, -83, 395, 396, 397, 398, 400, 401,
	402, 405, 406, 410, 411, 394, 412, 399, 404, 407,
	408, 409, 403, 311, -109, -109, -109, -77, -109, 114,
	115, 116, -160, -159, -309, -308, -307, -109, -109, -96,
	22, 36, -95, -232, -237, -229, -95, -96, -96, -95,
	-95, 203, -196, -334, 84, -324, 377, 378, 525, -239,
	254, -238, 23, -160, 90, 12, -202, 75, -231, -179,
	-179, 61, 62, 57, -95, -100, -334, -33, 23, -198,
	-231, 60, 90, -260, -208, 336, 337, -109, -109, 84,
	-178, 25, 26, -140, -233, 151, -237, -140, -203, 254,
	-140, -125, -127, -128, -129, -143, -165, -333, 451, 12,
	-133, -134, -142, -236, -211, -213, 84, 376, 378, 379,
	74, 106, -109, -261, 159, -286, -285, -284, -268, -270,
	-271, -272, 85, -261, -264, 342, 341, -258, -258, -258,
	-258, -258, -260, -260, -260, -260, 83, 83, -258, -258,
	-258, -258, -262, 83, -262, -262, -263, 83, -263, -297,
	-109, -294, -293, -291, -292, 228, 99, 433, 75, -289,
	-178, 92, -107, -224, 223, -295, -292, -310, -310, -310,
	-224, -310, 90, -310, 90, -81, -55, -1, 561, 562,
	563, 84, 17, -269, -268, -54, 279, -300, -301, 254,
	-296, -290, -277, 121, -276, -277, -277, -310, 84, 27,
	111, 111, 111, 111, 433, 208, 30, -268, -54, -247,
	221, -247, -247, 90, 90, -220, 557, -133, -103, 271,
	135, 260, 260, 218, 218, 273, -140, 284, 286, 285,
	283, 21, 272, 274, 276, 262, -140, -140, -223, 74,
	-135, -140, 24, -236, -140, -221, -221, -140, -221, -221,
	-140, -231, -87, 377, 84, 433, 20, -88, 20, 103,
	104, 105, -158, -114, -115, -114, 126, 242, 84, -334,
	23, 84, 75, -334, -334, -334, 84, 12, -95, -171,
	-169, 133, -109, -334, -334, 84, 84, 12, -250, 23,
	-334, -334, -170, -334, 12, -334, -334, 84, 84, -334,
	-334, -95, -95, -333, 203, -334, -334, -334, -334, -334,
	-232, -323, 524, 378, -147, -146, -144, 72, 222, 73,
	-333, -238, -334, 90, 87, -199, 87, -198, -152, -231,
	92, 96, -181, -124, -126, 12, -100, -164, 85, 84,
	-260, -185, -190, -218, -231, 90, 160, -177, 203, -148,
	13, -151, 30, 55, -9, -333, -333, 30, 84, -136,
	-138, -137, -139, 64, 68, 70, 65, 66, 67, 71,
	-242, 23, -125, -7, -6, -333, -333, -140, -133, -335,
	12, 75, -335, 84, 203, -212, -214, 380, 377, 383,
	-310, 90, -80, 84, -284, -272, -182, -104, 38, -265,
	343, -260, -260, -267, 90, -267, 92, 92, 85, -45,
	-40, -41, 31, 78, -291, -279, 90, 37, -231, 85,
	-103, -140, 127, 74, -295, -295, -295, -236, -2, 560,
	566, 121, 83, 346, 16, -198, 84, 85, -167, 280,
	85, -302, 55, -231, 85, 83, -277, -277, -231, -333,
	218, 29, 29, -54, -167, -261, -310, 559, 558, 85,
	220, 278, -108, 390, -105, 90, 86, -140, -140, -140,
	-140, -140, 211, 208, 263, 221, -133, -140, 84, -75,
	237, 232, -241, -241, 31, -140, 377, 536, 534, 126,
	242, -122, -115, -97, 430, -249, 160, 312, 241, 310,
	306, 326, 317, 341, 308, 342, 305, 304, 303, -249,
	-247, -109, -109, -174, 134, -109, 132, -109, -109, -109,
	-334, 160, 312, 12, -109, -307, -109, -334, -334, -96,
	-232, -144, -273, -273, -273, -204, 84, -215, 20, 12,
	55, 55, -124, -148, -125, -100, -231, -188, 520, -193,
	44, -191, -192, 45, -189, 46, 54, 151, -179, -109,
	-205, 74, -206, -210, -166, -161, -163, -162, -333, -197,
	-334, -231, -204, -206, -127, -128, -128, -127, -128, 64,
	64, 64, 69, 64, 69, 64, -137, -236, -334, -334,
	-7, -7, -239, 75, -125, -125, -142, -236, 151, 377,
	381, 382, -284, -329, 103, 127, 29, 74, 339, 99,
	-327, 159, -328, 224, 120, 121, 236, 23, 39, 85,
	84, 85, 84, 85, 84, -225, 470, 127, -41, -40,
	-279, -279, 92, -310, 220, 24, -140, 74, 74, 74,
	-82, 564, 92, 83, -3, 78, -109, 83, 17, -268,
	-166, 256, 145, -294, -198, -298, -300, -140, -111, -333,
	-110, -112, -116, 149, 150, -167, -140, -102, 269, 277,
	83, -106, 87, -312, 75, 260, 339, 260, -140, -75,
	-45, -140, -221, -221, 31, -310, -122, -115, -333, -334,
	-258, -258, -258, -263, -258, 300, -258, 300, -258, -334,
	-334, 84, -334, 20, -334, -86, 419, -109, 84, 84,
	-334, 83, 83, -109, -334, -334, -145, 20, -145, -145,
	-334, 87, -140, -148, -172, 14, -185, 49, 318, -195,
	-194, 53, 45, -192, 17, 47, 17, 28, -205, 84,
	135, 84, -334, -334, 84, 55, 203, -334, -148, -131,
	-130, 74, 75, -132, 74, -130, 64, 64, -200, -334,
	-334, -203, -125, -148, -148, 203, 103, -333, -113, -121,
	-111, 10, 90, 90, -310, 121, 121, -140, 83, -260,
	90, -260, 92, 92, 470, 29, 79, 80, 81, 29,
	76, 77, -140, -140, -140, -140, -299, 83, 17, -109,
	83, 135, 85, -198, -198, 257, -162, -333, 85, -334,
	84, -266, 433, 436, -109, -117, -117, -200, 85, -306,
	433, -311, -231, -231, -231, -231, -114, -260, -109, -109,
	-179, 90, -109, -109, 92, 92, -334, -333, 64, 16,
	14, -333, -333, -239, -172, -173, 15, 17, -186, 51,
	-184, 50, -184, -194, 17, 17, 90, 17, 90, 121,
	-210, -109, -163, 55, -9, -231, -161, -231, -174, -109,
	83, -109, -148, -148, -109, -154, 422, 423, 424, 425,
	426, 427, 428, 83, -109, 85, 85, -200, -298, -55,
	85, -198, 92, 85, -162, -89, -333, 253, -328, -300,
	437, 437, -334, 23, -305, -304, -232, 83, 75, -90,
	145, 433, -334, -334, -334, -334, -334, 85, 85, -201,
	-334, -231, 224, 17, 17, -201, -201, -147, -173, -109,
	-159, -187, 52, 74, 106, 90, 90, 90, 10, -161,
	203, -179, -198, -174, -334, -198, 85, 23, 85, 566,
	121, 85, 253, -9, 84, 135, -198, -140, -334, 431,
	71, 434, 84, -334, -334, -334, 74, 106, -206, -231,
	85, -179, 85, -183, -9, 83, -3, -334, -73, 433,
	-304, -283, -232, 90, 92, 85, 60, 432, 435, -231,
	224, -319, -320, 74, -329, -326, 103, 127, 99, -327,
	112, 113, -73, -109, 83, -74, 268, 524, -312, 60,
	-320, 74, 11, 10, 103, 90, 85, -198, 229, -306,
	433, -318, 237, 232, 235, 30, -318, -4, 565, 85,
	270, 434, 231, 29, 103, 92, -4, 435,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 717,
	717, 717, 0, 717, 0, 0, 717, -2, -2, 717,
	1161, 0, 717, 0, 0, -2, 649, 651, 0, 653,
	-2, 0, 0, 662, 1623, 1623, 712, 0, 0, 0,
	0, 0, 717, 717, 717, 717, 1022, 48, 717, 0,
	83, 84, 668, 669, 670, 63, 0, 1621, 1, 3,
	69, 73, 0, 0, 0, 56, 1031, 0, 76, 0,
	0, 721, 0, 719, 0, 1144, 717, 717, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 515, 455, 498, 453, 484, -2, 446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 348, 348, 0, 0, -2, 446, 446, 446, 0,
	0, 0, 481, 1146, 401, 348, 348, 0, 348, 348,
	348, 348, 0, 0, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 1048,
	151, 1162, 1159, 1160, 38, 39, 40, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 0,
	1138, 0, 579, 817, 0, 640, 640, 0, 640, 640,
	640, 640, 0, 0, 0, 591, 0, 0, 0, 0,
	637, 0, 0, 610, 612, 0, 637, 0, 643, 0,
	624, 640, 1624, 1624, 1624, 1129, 0, 634, 632, 646,
	647, 629, 630, 648, 652, 0, 657, 660, 1155, 1156,
	0, 675, 47, 1392, 667, 680, 681, 0, 713, 714,
	43, 913, 0, 839, 843, 854, 867, 868, 869, 870,
	871, 873, 874, 0, 0, 0, 0, 879, 880, 0,
	0, 0, 0, 0, 894, 0, 0, 0, 0, 0,
	1003, 0, 967, 967, 930, 967, 969, 969, 0, 0,
	0, 1620, 1438, 1521, 1567, 1418, 1419, 1420, 1012, 0,
	0, 0, 0, 0, 0, 256, 257, 912, 1118, 969,
	969, 969, 969, -2, -2, 203, 204, 205, 206, 207,
	208, 209, 0, 199, 0, 261, 262, 258, 259, 260,
	896, 897, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 1623, 0, 690, 0, 0, 0, 0,
	0, 1031, 0, 1023, 1022, 61, 0, 717, -2, 0,
	0, 0, 0, 45, 0, 50, 776, 75, 74, 1070,
	0, 0, 0, 57, 1032, 65, 67, 1033, 0, 722,
	723, 0, 753, 757, 0, 718, 0, 0, 1145, 1144,
	1144, 100, 0, 1563, 1122, -2, -2, 0, 0, 1157,
	1158, 1131, -2, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, -2, 0, 0,
	161, 162, 0, 41, 374, 0, 157, 0, 368, 318,
	1048, 0, 0, 0, 0, 0, 717, 0, 1139, 142,
	143, 149, 150, 348, 348, 495, 0, 0, 151, 151,
	462, 463, 464, 0, 0, -2, 372, 0, 447, 0,
	0, 362, 362, 366, 364, 365, 0, 0, 0, 0,
	0, 0, 475, 0, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 0, 349, 0, 493, 494,
	402, 0, 0, 0, 0, 473, 474, 0, 0, 1147,
	1148, 0, 0, 348, 348, 0, 0, 0, 0, 348,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 1061, 0,
	0, 0, -2, 0, 571, 0, 0, 0, 1140, 1140,
	0, 578, 0, 580, 581, 0, 0, 582, 0, 637,
	637, 635, 636, 584, 585, 586, 587, 640, 0, 0,
	357, 358, 359, 637, 640, 0, 640, 640, 640, 640,
	637, 637, 637, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1624, 1624, 1624, 643, 640, 0, 620,
	0, 621, 622, 625, 626, 1625, 1626, 1177, 627, 628,
	1130, 650, 658, 661, 678, 676, 677, 679, 671, 672,
	673, 674, 0, 692, 693, 698, 0, 0, 0, 0,
	704, 705, 706, 0, 0, 709, 710, 711, 0, 0,
	0, 0, 837, 0, 0, 902, 903, 904, 905, 906,
	907, 908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 875, 876, 877, 878, 881, 0, 0, 0,
	886, 887, 0, 0, 0, 0, 0, 727, 0, 1004,
	0, 928, 0, 929, 931, 932, 0, 933, 0, 0,
	0, 0, 0, 0, 0, 1150, 129, 0, 737, 0,
	0, 737, 737, 0, 0, 193, 194, 195, 196, 210,
	211, 212, 213, 214, 263, 1012, 0, 912, 0, 0,
	44, 682, 683, 0, 800, 1150, 0, 0, 733, 0,
	55, 64, 66, 1031, 59, 1031, 0, 739, 0, 0,
	-2, -2, 740, 746, 747, 748, 749, 750, 52, 1622,
	53, 0, 72, 0, 46, 0, 0, 0, 0, 330,
	1073, 0, 0, 1024, 1025, 1028, 0, 754, 758, 0,
	760, 761, 0, 720, 0, 98, 0, 816, 0, 0,
	0, 1563, 1128, 0, 102, 103, 0, 0, 0, 336,
	1133, 1134, 1135, -2, 355, 0, 336, 325, 269, 270,
	271, 318, 273, 318, 318, 318, 318, 330, 330, 330,
	330, 301, 302, 303, 304, 305, 0, 0, 288, 318,
	318, 318, 318, 308, 309, 310, 311, 312, 313, 314,
	315, 274, 275, 276, 277, 278, 279, 280, 281, 282,
	320, 320, 320, 322, 322, 0, 42, 0, 340, 0,
	1028, 0, 1061, 1142, 1152, 0, 0, 0, 1142, 120,
	0, 0, 496, 526, 456, 485, 497, 0, 459, 460,
	-2, 0, 0, 446, 0, 448, 0, 356, 0, -2,
	0, 366, 0, 362, 366, 363, 366, 354, 367, 477,
	478, 479, 0, 537, 786, 0, 0, 0, 0, 0,
	543, 544, 545, 0, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 486, 487, 488, 489, 490, 491,
	492, 0, 0, 448, 0, 482, 0, 403, 404, 0,
	0, 407, 408, 409, 410, 0, 0, 413, 414, 415,
	803, 804, 416, 440, 441, 442, 417, 418, 419, 420,
	421, 422, 423, 434, 435, 436, 437, 438, 439, 424,
	425, 426, 427, 428, 431, 0, 135, 1052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1140,
	0, 0, 0, 0, 736, 818, 1163, 1164, 641, 642,
	0, 360, 361, 640, 640, 588, 611, 0, 640, 592,
	613, 593, 595, 594, 596, 615, 616, 640, 599, 638,
	639, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 617, 618, 619, 644, 0, 0, 659, 663, 664,
	665, 666, 0, 0, 695, 94, 700, 701, 702, 703,
	715, 708, 914, 834, 835, 836, 838, 840, 0, 898,
	900, 842, 844, 909, 910, 911, 0, 0, 0, 0,
	0, 848, 852, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 872, 982, 983, 984, 889,
	890, 0, 751, 0, 0, 0, 888, 0, 0, 0,
	0, 728, 729, 1010, 1007, 0, 0, 968, 970, 0,
	0, 0, 0, 946, 947, 948, 949, 950, 951, 952,
	953, 954, 955, 956, 957, 958, 959, 960, 961, 962,
	963, 964, 965, 966, 985, 0, 0, 1003, 0, 891,
	892, 893, 0, 1151, 0, 130, 131, 0, 0, 0,
	0, 0, 738, 1013, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 685, 686, 688, 0, 820,
	0, 801, 0, 0, 691, 0, 732, 0, 735, 58,
	60, 744, 745, 0, 762, 741, 54, 49, 0, 0,
	778, 1071, 330, 1093, 0, 334, 335, 1034, 1035, 0,
	1027, 1029, 1030, 77, 759, 755, 0, 832, 0, 0,
	815, 0, 765, 767, 768, 769, 798, 0, 0, 0,
	0, 0, 96, 817, 1123, 101, 0, 0, 106, 107,
	1124, 1125, 1126, 1127, 0, 515, -2, 398, 163, 165,
	166, 167, 158, -2, 328, 326, 327, 272, 330, 330,
	295, 296, 297, 298, 299, 300, 0, 0, 289, 290,
	291, 292, 283, 0, 284, 285, 286, 0, 287, 373,
	0, 1036, 341, 342, 344, 348, 0, 0, 0, 369,
	370, 0, 1052, 0, 0, 0, 1153, 1152, 1152, 1152,
	0, 153, 154, 155, 156, 532, 0, 0, 527, 530,
	531, 151, 0, 0, 159, 450, 449, 0, 564, 0,
	371, 0, 0, 366, 366, 351, 352, 480, 0, 0,
	539, 540, 541, 542, 0, 0, 0, 448, 450, 336,
	0, 405, 406, 411, 412, 429, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 510, 511, 512,
	513, 514, 1049, 1050, 1051, 0, 0, 572, 0, 0,
	390, 92, 1141, 577, 637, 598, 614, 637, 590, 597,
	623, 655, 699, 0, 0, 0, 0, 707, 0, 841,
	899, 901, 845, 0, 849, 853, 0, 0, 0, 0,
	0, 0, 0, 895, 919, 920, 0, 0, 1022, 0,
	1008, 0, 0, 927, 971, 0, 0, 0, 0, 0,
	938, 939, 0, 941, 0, 943, 944, 0, 0, 945,
	915, 0, 0, 737, 0, 972, 973, 974, 975, 976,
	1013, 684, 687, 689, 774, 821, 822, 0, 0, 0,
	0, 802, 1149, 730, 731, 734, -2, 0, 0, 1015,
	0, 0, 762, 832, 763, 0, 742, 51, 777, 0,
	1075, 1074, 1087, 1100, 331, 332, 333, 1026, 0, 1031,
	0, 1111, 0, 0, 1103, 0, 0, 0, 0, 0,
	0, 0, 0, 805, 0, 0, 808, 0, 0, 0,
	0, 799, 0, 0, 0, 0, 0, -2, 0, 0,
	90, 91, 0, 0, 0, 104, 105, 0, 0, 111,
	337, 338, 144, 151, 400, 164, 380, 0, 0, 268,
	329, 293, 294, 0, 316, 0, 0, 0, 393, 116,
	1040, 1039, 348, 348, 343, 0, 346, 0, 1154, 319,
	0, 134, 0, 0, 0, 0, 0, 140, 521, 0,
	0, 528, 0, 0, 0, 454, 0, 465, 466, 0,
	536, 563, 0, 568, 340, 0, 350, 353, 787, 0,
	0, 467, 0, 450, 471, 472, 483, 432, 433, 430,
	0, 0, 1062, 1063, 1068, 1066, 1067, 121, 503, 505,
	504, 508, 0, 0, 501, 0, 390, 1036, 0, 576,
	391, 392, 640, 640, 694, 95, 0, 697, 0, 0,
	0, 846, 850, 752, 0, 0, 318, 318, 990, 318,
	322, 993, 318, 995, 318, 998, 318, 1001, 1002, 0,
	0, 0, 0, 1005, 926, 1011, 0, 0, 0, 0,
	937, 0, 0, 0, 0, 132, 133, 916, 917, 0,
	1014, 823, 828, 828, 828, 0, 0, 0, 1136, 1137,
	1016, 1017, 832, 1018, 764, 743, 779, 1093, 0, 1086,
	0, -2, 1095, 0, 0, 0, 1101, 756, 78, 833,
	81, 0, 1111, 1119, 0, 1102, 1113, 1115, 0, 0,
	0, 1107, 0, 832, 766, 794, 796, 0, 791, 806,
	807, 809, 0, 811, 0, 813, 814, 776, 771, 772,
	0, 0, 98, 0, 832, 832, 97, 0, 819, 108,
	109, 110, 399, 168, 173, 0, 0, 0, 178, 0,
	180, 0, 381, 0, 265, 267, 0, 0, 171, 330,
	0, 330, 0, 323, 0, 382, 394, 0, 1037, 1038,
	0, 0, 345, 347, 0, 1143, 136, 0, 0, 0,
	524, 0, 533, 0, 0, 0, 0, 0, 0, 160,
	451, 0, 0, 339, 0, 0, 561, 558, 468, 0,
	197, 198, 200, 0, 0, 470, 776, 1053, 1054, 1055,
	0, 1065, 1069, 124, 0, 0, 0, 0, 573, 574,
	575, 93, 583, 589, 696, 716, 847, 851, 0, 883,
	988, 330, 991, 992, 994, 996, 997, 999, 1000, 884,
	885, 0, 922, 0, 924, 1031, 0, 1009, 0, 0,
	936, 0, 0, 0, 942, 918, 0, 0, 0, 0,
	800, -2, 62, 1018, 1020, 0, 1080, 1078, 1078, 1088,
	1089, 0, 0, 1096, 0, 0, 0, 0, 82, 0,
	0, 0, 1116, 0, 0, 0, 0, 99, 1022, 788,
	795, 0, 0, 789, 0, 790, 810, 812, 770, -2,
	773, 832, 832, 88, 89, 0, 174, 0, 176, 191,
	192, 0, 179, 181, 182, 264, 266, 0, 0, 306,
	317, 307, 0, 0, 395, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 776, 137, 138, 139, 516, 0, 526, 0,
	0, 0, 519, 0, 457, 0, 567, 0, 0, 538,
	0, 546, 0, 0, 0, 201, 202, 0, 1064, 502,
	0, 122, 123, 0, 0, 507, 977, 989, 0, 0,
	0, 1006, 0, 0, 0, 0, 940, 0, 829, 0,
	0, 0, 0, 820, 1020, 80, 0, 0, 1083, 0,
	1076, 1079, 1077, 1090, 0, 0, 1097, 0, 1099, 0,
	1120, 1121, 1114, 0, 1106, 1109, 1105, 1108, 1031, 792,
	0, 797, 1022, 87, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 324, 0, 0, 0,
	517, 0, 529, 520, 565, 566, 0, 569, 375, 562,
	559, 560, 469, 0, 125, 126, 0, 0, 0, 0,
	0, 0, 921, 923, 925, 934, 935, 986, 987, 0,
	825, 782, 783, 830, 831, 0, 0, 775, 79, 1021,
	1019, 1072, 0, 1081, 1082, 1091, 1092, 1098, 0, 1104,
	0, 85, 0, 1031, 175, 0, 185, 0, 525, 0,
	528, 518, 0, 1056, 0, 0, 0, 509, 882, 0,
	0, 0, 0, 824, 826, 827, 1084, 1085, 1112, 1110,
	793, 86, 376, 380, 1056, 0, 0, 570, 499, 1058,
	127, 128, 443, 444, 445, 121, 978, 0, 981, 784,
	785, 377, 378, 0, 169, 186, 187, 0, 0, 190,
	183, 184, 117, 0, 0, 0, 1059, 1060, 124, 979,
	379, 0, 0, 0, 188, 189, 534, 0, 0, 506,
	0, 383, 385, 386, 0, 0, 384, 522, 0, 534,
	1057, 0, 387, 388, 389, 535, 523, 980,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 128, 3, 3, 3, 154, 146, 3,
	83, 85, 151, 149, 84, 150, 203, 152, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 567,
	136, 135, 137, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 156, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 124, 3, 157,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 125,
	126, 127, 129, 130, 131, 132, 133, 134, 138, 139,
	140, 141, 142, 143, 144, 145, 147, 148, 153, 155,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:484
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:489
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:490
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:494
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:530
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:536
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:540
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:549
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:559
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:565
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:571
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:575
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:584
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:590
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:594
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:600
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:606
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:610
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:614
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:637
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:648
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:654
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:661
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:667
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:674
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:753
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:759
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:779
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:791
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:803
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:807
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:813
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:819
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:823
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:827
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:831
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:836
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:837
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:841
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:845
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:851
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:861
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:865
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:874
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:880
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:886
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:890
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:896
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:900
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:906
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:910
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:914
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:920
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:924
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:928
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:932
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:938
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:942
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:948
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:954
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:974
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:981
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:985
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:990
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:994
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1005
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1010
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1016
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1021
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1027
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1032
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1036
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1042
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1046
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1052
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1058
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1065
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1072
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1077
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1082
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1087
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1094
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1101
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1112
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1123
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1129
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1133
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1137
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1141
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1147
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1151
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1157
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1161
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1167
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1171
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1178
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1182
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1188
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1192
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1198
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1203
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1208
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1212
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1217
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1236
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1245
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1254
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1258
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1267
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1271
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1277
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1283
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1288
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1293
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1298
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1303
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1308
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1313
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1317
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1324
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1328
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1337
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1342
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1348
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1354
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1359
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1366
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1373
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1377
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1381
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1385
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1403
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1407
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1413
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1425
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1429
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1437
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1442
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1446
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1450
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1454
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1458
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.str = Armscii8Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.str = ASCIIStr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = Big5Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.str = UBinaryStr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.str = Cp1250Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.str = Cp1251Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = Cp1256Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.str = Cp1257Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.str = Cp850Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.str = Cp852Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1505
		{
			yyVAL.str = Cp866Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1509
		{
			yyVAL.str = Cp932Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1513
		{
			yyVAL.str = Dec8Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1517
		{
			yyVAL.str = EucjpmsStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.str = EuckrStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1525
		{
			yyVAL.str = Gb18030Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.str = Gb2312Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1533
		{
			yyVAL.str = GbkStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			yyVAL.str = Geostd8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1541
		{
			yyVAL.str = GreekStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.str = HebrewStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1549
		{
			yyVAL.str = Hp8Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.str = Keybcs2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.str = Koi8rStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1561
		{
			yyVAL.str = Koi8uStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1565
		{
			yyVAL.str = Latin1Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.str = Latin2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1573
		{
			yyVAL.str = Latin5Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1577
		{
			yyVAL.str = Latin7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1581
		{
			yyVAL.str = MacceStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.str = MacromanStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.str = SjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.str = Swe7Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1597
		{
			yyVAL.str = Tis620Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.str = Ucs2Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = UjisStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = Utf16Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = Utf16leStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = Utf32Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = Utf8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = Utf8mb4Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1639
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1664
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1668
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1672
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1676
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1682
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1693
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1754
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1766
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1782
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1808
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1816
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1820
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1907
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1912
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1916
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1924
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1928
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1934
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1942
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1946
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1950
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1955
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1959
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1964
		{
			yyVAL.str = ""
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1968
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1972
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1976
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1991
		{
			yyVAL.str = ""
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2006
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2011
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2015
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2021
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2031
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2035
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2040
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2044
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2050
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2060
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2064
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2068
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2072
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2076
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2081
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = yyDollar[2].str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = "key"
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = yyDollar[1].str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = ""
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2144
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2148
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2154
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2160
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2164
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2170
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2174
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2180
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2186
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2190
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2194
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2198
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2203
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2207
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2213
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2219
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2225
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2231
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2235
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2239
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2243
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2247
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2252
		{
			yyVAL.str = ""
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2256
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2265
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2269
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2273
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2278
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2282
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2288
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2296
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2302
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2312
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2316
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2320
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2324
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2328
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2332
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2336
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2340
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2344
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2348
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2352
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2356
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2360
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2364
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2368
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2372
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2376
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2380
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2384
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2388
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2392
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2396
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2400
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2404
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2408
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2412
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2416
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2420
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2425
		{
			yyVAL.str = ""
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2429
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2433
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2456
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2465
		{
			yyVAL.str = ""
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2471
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2475
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2480
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2484
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2493
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2497
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2501
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2505
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2509
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2515
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2519
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2523
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2529
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2533
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2537
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2541
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2545
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2549
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2553
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2557
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2561
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2565
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2569
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2573
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2577
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2581
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2585
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2589
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2593
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2597
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2601
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2605
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2609
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2613
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2617
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2623
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2627
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2633
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2637
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2641
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2645
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2649
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2653
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2657
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2661
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2665
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2671
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2678
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2685
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2692
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2698
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2702
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2709
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2716
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2728
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2738
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2742
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2746
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2759
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2769
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2773
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2791
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2798
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2805
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2812
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2819
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2823
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2832
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2840
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2849
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2856
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2868
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2877
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2892
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2897
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2901
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2906
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2910
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2916
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2920
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2925
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2929
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2934
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2938
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2944
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2948
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2952
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2956
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2960
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2964
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2968
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2972
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2976
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2980
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2984
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2988
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2992
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2996
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3000
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3004
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3008
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3012
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3016
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3020
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3024
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3028
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3033
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3037
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3041
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3048
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3052
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3058
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3063
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3067
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3074
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3081
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3090
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.str = ""
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yyVAL.str = ""
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3106
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3112
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3116
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 574:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3122
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3126
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3149
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3160
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3164
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3168
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3172
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3176
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3180
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3184
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3188
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3192
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3204
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3208
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3220
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3224
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3232
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3236
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3244
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3248
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3264
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3284
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3304
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3322
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3330
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3367
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3371
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3377
		{
			yyVAL.str = ""
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3381
		{
			yyVAL.str = "extended "
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3387
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3391
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3401
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3407
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3411
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3415
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3421
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3425
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3429
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3439
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3445
		{
			yyVAL.empty = struct{}{}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3449
		{
			yyVAL.empty = struct{}{}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3453
		{
			yyVAL.empty = struct{}{}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3473
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3477
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3483
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3489
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3493
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3498
		{
			yyVAL.empty = struct{}{}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
			yyVAL.empty = struct{}{}
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3503
		{
			yyVAL.empty = struct{}{}
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3505
		{
			yyVAL.empty = struct{}{}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3510
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3516
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3521
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3525
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3529
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3533
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3537
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3541
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = yyDollar[1].str
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = yyDollar[1].str
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = yyDollar[1].str
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3561
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3565
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3569
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3578
		{
			yyVAL.str = ""
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3586
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3596
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3602
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3606
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3612
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3618
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3622
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3628
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3634
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3638
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3642
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3646
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3652
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3658
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3664
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3668
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3672
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3676
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3680
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3684
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3694
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3700
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3704
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3708
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3712
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3716
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3720
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3732
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3736
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3740
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3744
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3749
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3753
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3757
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3762
		{
			yyVAL.str = ""
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3766
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3771
		{
			setAllowComments(yylex, true)
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3775
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3781
		{
			yyVAL.strs = nil
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3785
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3791
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3795
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3799
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3804
		{
			yyVAL.str = ""
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3808
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.str = SQLCacheStr
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3817
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3821
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3825
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, StatementIdentifier: NewColIdentWithAt(string(yyDollar[5].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3841
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3850
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3869
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3874
		{
			yyVAL.strs = nil
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3878
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3882
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3886
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3890
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3896
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.str = SQLCacheStr
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3904
		{
			yyVAL.str = DistinctStr
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3908
		{
			yyVAL.str = DistinctStr
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.str = StraightJoinHint
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3920
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3926
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3930
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3936
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3940
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3944
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3948
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3953
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3957
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3961
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3973
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3977
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3983
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3989
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3993
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4003
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4007
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4011
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4017
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4021
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4027
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4031
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4040
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4046
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4050
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4056
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4060
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4066
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4070
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4074
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4078
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4084
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4088
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4101
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4105
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4109
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4113
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4119
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4121
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4125
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4131
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4133
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4136
		{
			yyVAL.empty = struct{}{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.empty = struct{}{}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4141
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4149
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4156
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4162
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4166
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4170
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4176
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4182
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4186
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4190
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4194
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4200
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4204
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4214
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4228
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4234
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4243
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4249
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4253
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 824:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4259
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4263
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4267
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4271
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4276
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4280
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4284
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4288
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4298
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4305
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4309
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4313
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4317
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4321
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4325
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4332
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4336
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4340
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4344
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4350
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4354
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4358
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4362
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4366
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4370
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4374
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4378
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4382
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4386
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4390
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4396
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4400
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4404
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4408
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4412
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4416
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4420
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4424
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4428
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4432
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4436
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4440
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4444
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4450
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4454
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4458
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4462
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4466
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4470
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4474
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4478
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4482
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4486
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4490
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4494
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4498
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4502
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4506
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4510
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4514
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4518
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4522
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4530
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4534
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4542
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4546
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4552
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4556
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4560
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4566
		{
			yyVAL.str = ""
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4570
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4576
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4580
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4587
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4591
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4595
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4599
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4605
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4609
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4613
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4617
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4621
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4625
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4629
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4635
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4639
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4643
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4650
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4656
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4660
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4670
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4674
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4682
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4692
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4696
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4700
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4704
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4708
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4712
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4716
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4720
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4724
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4728
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4739
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4743
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4749
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4753
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4758
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4762
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4766
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4770
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4774
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4778
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4782
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4786
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4790
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4794
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4798
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4802
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4806
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4812
		{
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4814
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4818
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4822
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4826
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4830
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4834
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4838
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4842
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4846
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4850
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4854
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4860
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4864
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4868
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4872
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4876
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4880
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4884
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4888
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4892
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4906
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4910
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4920
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4924
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4928
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4936
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4942
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4946
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4950
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4954
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4958
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4964
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4968
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4972
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4982
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4986
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4992
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4996
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5000
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5004
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5008
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5014
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5018
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5022
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5026
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5030
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5034
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5038
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5042
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5046
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5050
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5065
		{
			yyVAL.str = string("")
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5069
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5075
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5079
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5085
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5100
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5104
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5108
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5137
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5155
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5161
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5167
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5171
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5177
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5182
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5186
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5190
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5195
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5199
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5205
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5209
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5213
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5222
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5226
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5230
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5234
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5241
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5245
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5249
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5253
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5259
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5263
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5267
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5272
		{
			yyVAL.str = ""
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5276
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5280
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5284
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5289
		{
			yyVAL.str = ""
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5293
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5303
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5308
		{
			yyVAL.str = ""
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5312
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5317
		{
			yyVAL.str = "cascaded"
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5321
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5334
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5340
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5346
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5352
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5361
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5365
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5370
		{
			yyVAL.str = ""
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5374
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5380
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5384
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5390
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5394
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5398
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5403
		{
			yyVAL.str = ""
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5407
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5411
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5416
		{
			yyVAL.str = ""
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5420
		{
			yyVAL.str = " header"
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5425
		{
			yyVAL.str = ""
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5429
		{
			yyVAL.str = " manifest on"
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5433
		{
			yyVAL.str = " manifest off"
		}
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5438
		{
			yyVAL.str = ""
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = " overwrite on"
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5446
		{
			yyVAL.str = " overwrite off"
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5452
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5457
		{
			yyVAL.str = ""
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5461
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5467
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5471
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5477
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5481
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5486
		{
			yyVAL.str = ""
		}
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5490
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5496
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5500
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5506
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5510
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5514
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5519
		{
			yyVAL.str = ""
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5523
		{
			yyVAL.str = " optionally"
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5536
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5540
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5544
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5548
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5552
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5558
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5562
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5566
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5570
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5575
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5579
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5585
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5589
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5595
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5599
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5605
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5610
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5620
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5624
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5630
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5636
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5640
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5646
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5650
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5654
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5658
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5662
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5670
		{
			yyVAL.str = "charset"
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5688
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5697
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5699
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5702
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5704
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5707
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5709
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5712
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5714
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5717
		{
			yyVAL.empty = struct{}{}
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5719
		{
			yyVAL.empty = struct{}{}
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.empty = struct{}{}
		}
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5725
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5734
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5741
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5745
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5751
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5755
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5762
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5768
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5772
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5778
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5782
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5789
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6270
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6279
		{
			decNesting(yylex)
		}
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6284
		{
			skipToEnd(yylex)
		}
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6289
		{
			skipToEnd(yylex)
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6293
		{
			skipToEnd(yylex)
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6297
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
