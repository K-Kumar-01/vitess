// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const JSON_PRETTY = 57441
const JSON_STORAGE_SIZE = 57442
const JSON_STORAGE_FREE = 57443
const JSON_CONTAINS = 57444
const JSON_CONTAINS_PATH = 57445
const JSON_EXTRACT = 57446
const JSON_KEYS = 57447
const JSON_OVERLAPS = 57448
const JSON_SEARCH = 57449
const JSON_VALUE = 57450
const EXTRACT = 57451
const NULL = 57452
const TRUE = 57453
const FALSE = 57454
const OFF = 57455
const DISCARD = 57456
const IMPORT = 57457
const ENABLE = 57458
const DISABLE = 57459
const TABLESPACE = 57460
const VIRTUAL = 57461
const STORED = 57462
const BOTH = 57463
const LEADING = 57464
const TRAILING = 57465
const EMPTY_FROM_CLAUSE = 57466
const LOWER_THAN_CHARSET = 57467
const CHARSET = 57468
const MEMBER = 57469
const UNIQUE = 57470
const KEY = 57471
const EXPRESSION_PREC_SETTER = 57472
const OR = 57473
const XOR = 57474
const AND = 57475
const NOT = 57476
const BETWEEN = 57477
const CASE = 57478
const WHEN = 57479
const THEN = 57480
const ELSE = 57481
const END = 57482
const LE = 57483
const GE = 57484
const NE = 57485
const NULL_SAFE_EQUAL = 57486
const IS = 57487
const LIKE = 57488
const REGEXP = 57489
const IN = 57490
const SHIFT_LEFT = 57491
const SHIFT_RIGHT = 57492
const DIV = 57493
const MOD = 57494
const UNARY = 57495
const COLLATE = 57496
const BINARY = 57497
const UNDERSCORE_ARMSCII8 = 57498
const UNDERSCORE_ASCII = 57499
const UNDERSCORE_BIG5 = 57500
const UNDERSCORE_BINARY = 57501
const UNDERSCORE_CP1250 = 57502
const UNDERSCORE_CP1251 = 57503
const UNDERSCORE_CP1256 = 57504
const UNDERSCORE_CP1257 = 57505
const UNDERSCORE_CP850 = 57506
const UNDERSCORE_CP852 = 57507
const UNDERSCORE_CP866 = 57508
const UNDERSCORE_CP932 = 57509
const UNDERSCORE_DEC8 = 57510
const UNDERSCORE_EUCJPMS = 57511
const UNDERSCORE_EUCKR = 57512
const UNDERSCORE_GB18030 = 57513
const UNDERSCORE_GB2312 = 57514
const UNDERSCORE_GBK = 57515
const UNDERSCORE_GEOSTD8 = 57516
const UNDERSCORE_GREEK = 57517
const UNDERSCORE_HEBREW = 57518
const UNDERSCORE_HP8 = 57519
const UNDERSCORE_KEYBCS2 = 57520
const UNDERSCORE_KOI8R = 57521
const UNDERSCORE_KOI8U = 57522
const UNDERSCORE_LATIN1 = 57523
const UNDERSCORE_LATIN2 = 57524
const UNDERSCORE_LATIN5 = 57525
const UNDERSCORE_LATIN7 = 57526
const UNDERSCORE_MACCE = 57527
const UNDERSCORE_MACROMAN = 57528
const UNDERSCORE_SJIS = 57529
const UNDERSCORE_SWE7 = 57530
const UNDERSCORE_TIS620 = 57531
const UNDERSCORE_UCS2 = 57532
const UNDERSCORE_UJIS = 57533
const UNDERSCORE_UTF16 = 57534
const UNDERSCORE_UTF16LE = 57535
const UNDERSCORE_UTF32 = 57536
const UNDERSCORE_UTF8 = 57537
const UNDERSCORE_UTF8MB4 = 57538
const INTERVAL = 57539
const JSON_EXTRACT_OP = 57540
const JSON_UNQUOTE_EXTRACT_OP = 57541
const CREATE = 57542
const ALTER = 57543
const DROP = 57544
const RENAME = 57545
const ANALYZE = 57546
const ADD = 57547
const FLUSH = 57548
const CHANGE = 57549
const MODIFY = 57550
const DEALLOCATE = 57551
const REVERT = 57552
const SCHEMA = 57553
const TABLE = 57554
const INDEX = 57555
const VIEW = 57556
const TO = 57557
const IGNORE = 57558
const IF = 57559
const PRIMARY = 57560
const COLUMN = 57561
const SPATIAL = 57562
const FULLTEXT = 57563
const KEY_BLOCK_SIZE = 57564
const CHECK = 57565
const INDEXES = 57566
const ACTION = 57567
const CASCADE = 57568
const CONSTRAINT = 57569
const FOREIGN = 57570
const NO = 57571
const REFERENCES = 57572
const RESTRICT = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const COALESCE = 57582
const EXCHANGE = 57583
const REBUILD = 57584
const PARTITIONING = 57585
const REMOVE = 57586
const PREPARE = 57587
const EXECUTE = 57588
const MAXVALUE = 57589
const PARTITION = 57590
const REORGANIZE = 57591
const LESS = 57592
const THAN = 57593
const PROCEDURE = 57594
const TRIGGER = 57595
const VINDEX = 57596
const VINDEXES = 57597
const DIRECTORY = 57598
const NAME = 57599
const UPGRADE = 57600
const STATUS = 57601
const VARIABLES = 57602
const WARNINGS = 57603
const CASCADED = 57604
const DEFINER = 57605
const OPTION = 57606
const SQL = 57607
const UNDEFINED = 57608
const SEQUENCE = 57609
const MERGE = 57610
const TEMPORARY = 57611
const TEMPTABLE = 57612
const INVOKER = 57613
const SECURITY = 57614
const FIRST = 57615
const AFTER = 57616
const LAST = 57617
const VITESS_MIGRATION = 57618
const CANCEL = 57619
const RETRY = 57620
const COMPLETE = 57621
const CLEANUP = 57622
const BEGIN = 57623
const START = 57624
const TRANSACTION = 57625
const COMMIT = 57626
const ROLLBACK = 57627
const SAVEPOINT = 57628
const RELEASE = 57629
const WORK = 57630
const BIT = 57631
const TINYINT = 57632
const SMALLINT = 57633
const MEDIUMINT = 57634
const INT = 57635
const INTEGER = 57636
const BIGINT = 57637
const INTNUM = 57638
const REAL = 57639
const DOUBLE = 57640
const FLOAT_TYPE = 57641
const DECIMAL_TYPE = 57642
const NUMERIC = 57643
const TIME = 57644
const TIMESTAMP = 57645
const DATETIME = 57646
const YEAR = 57647
const CHAR = 57648
const VARCHAR = 57649
const BOOL = 57650
const CHARACTER = 57651
const VARBINARY = 57652
const NCHAR = 57653
const TEXT = 57654
const TINYTEXT = 57655
const MEDIUMTEXT = 57656
const LONGTEXT = 57657
const BLOB = 57658
const TINYBLOB = 57659
const MEDIUMBLOB = 57660
const LONGBLOB = 57661
const JSON = 57662
const ENUM = 57663
const GEOMETRY = 57664
const POINT = 57665
const LINESTRING = 57666
const POLYGON = 57667
const GEOMETRYCOLLECTION = 57668
const MULTIPOINT = 57669
const MULTILINESTRING = 57670
const MULTIPOLYGON = 57671
const ASCII = 57672
const UNICODE = 57673
const NULLX = 57674
const AUTO_INCREMENT = 57675
const APPROXNUM = 57676
const SIGNED = 57677
const UNSIGNED = 57678
const ZEROFILL = 57679
const CODE = 57680
const COLLATION = 57681
const COLUMNS = 57682
const DATABASES = 57683
const ENGINES = 57684
const EVENT = 57685
const EXTENDED = 57686
const FIELDS = 57687
const FULL = 57688
const FUNCTION = 57689
const GTID_EXECUTED = 57690
const KEYSPACES = 57691
const OPEN = 57692
const PLUGINS = 57693
const PRIVILEGES = 57694
const PROCESSLIST = 57695
const SCHEMAS = 57696
const TABLES = 57697
const TRIGGERS = 57698
const USER = 57699
const VGTID_EXECUTED = 57700
const VITESS_KEYSPACES = 57701
const VITESS_METADATA = 57702
const VITESS_MIGRATIONS = 57703
const VITESS_REPLICATION_STATUS = 57704
const VITESS_SHARDS = 57705
const VITESS_TABLETS = 57706
const VSCHEMA = 57707
const NAMES = 57708
const GLOBAL = 57709
const SESSION = 57710
const ISOLATION = 57711
const LEVEL = 57712
const READ = 57713
const WRITE = 57714
const ONLY = 57715
const REPEATABLE = 57716
const COMMITTED = 57717
const UNCOMMITTED = 57718
const SERIALIZABLE = 57719
const CURRENT_TIMESTAMP = 57720
const DATABASE = 57721
const CURRENT_DATE = 57722
const CURRENT_TIME = 57723
const LOCALTIME = 57724
const LOCALTIMESTAMP = 57725
const CURRENT_USER = 57726
const UTC_DATE = 57727
const UTC_TIME = 57728
const UTC_TIMESTAMP = 57729
const DAY = 57730
const DAY_HOUR = 57731
const DAY_MICROSECOND = 57732
const DAY_MINUTE = 57733
const DAY_SECOND = 57734
const HOUR = 57735
const HOUR_MICROSECOND = 57736
const HOUR_MINUTE = 57737
const HOUR_SECOND = 57738
const MICROSECOND = 57739
const MINUTE = 57740
const MINUTE_MICROSECOND = 57741
const MINUTE_SECOND = 57742
const MONTH = 57743
const QUARTER = 57744
const SECOND = 57745
const SECOND_MICROSECOND = 57746
const YEAR_MONTH = 57747
const WEEK = 57748
const REPLACE = 57749
const CONVERT = 57750
const CAST = 57751
const SUBSTR = 57752
const SUBSTRING = 57753
const GROUP_CONCAT = 57754
const SEPARATOR = 57755
const TIMESTAMPADD = 57756
const TIMESTAMPDIFF = 57757
const WEIGHT_STRING = 57758
const LTRIM = 57759
const RTRIM = 57760
const TRIM = 57761
const JSON_ARRAY = 57762
const JSON_OBJECT = 57763
const JSON_QUOTE = 57764
const MATCH = 57765
const AGAINST = 57766
const BOOLEAN = 57767
const LANGUAGE = 57768
const WITH = 57769
const QUERY = 57770
const EXPANSION = 57771
const WITHOUT = 57772
const VALIDATION = 57773
const UNUSED = 57774
const ARRAY = 57775
const CUME_DIST = 57776
const DESCRIPTION = 57777
const DENSE_RANK = 57778
const EMPTY = 57779
const EXCEPT = 57780
const FIRST_VALUE = 57781
const GROUPING = 57782
const GROUPS = 57783
const JSON_TABLE = 57784
const LAG = 57785
const LAST_VALUE = 57786
const LATERAL = 57787
const LEAD = 57788
const NTH_VALUE = 57789
const NTILE = 57790
const OF = 57791
const OVER = 57792
const PERCENT_RANK = 57793
const RANK = 57794
const RECURSIVE = 57795
const ROW_NUMBER = 57796
const SYSTEM = 57797
const WINDOW = 57798
const ACTIVE = 57799
const ADMIN = 57800
const BUCKETS = 57801
const CLONE = 57802
const COMPONENT = 57803
const DEFINITION = 57804
const ENFORCED = 57805
const EXCLUDE = 57806
const FOLLOWING = 57807
const GEOMCOLLECTION = 57808
const GET_MASTER_PUBLIC_KEY = 57809
const HISTOGRAM = 57810
const HISTORY = 57811
const INACTIVE = 57812
const INVISIBLE = 57813
const LOCKED = 57814
const MASTER_COMPRESSION_ALGORITHMS = 57815
const MASTER_PUBLIC_KEY_PATH = 57816
const MASTER_TLS_CIPHERSUITES = 57817
const MASTER_ZSTD_COMPRESSION_LEVEL = 57818
const NESTED = 57819
const NETWORK_NAMESPACE = 57820
const NOWAIT = 57821
const NULLS = 57822
const OJ = 57823
const OLD = 57824
const OPTIONAL = 57825
const ORDINALITY = 57826
const ORGANIZATION = 57827
const OTHERS = 57828
const PATH = 57829
const PERSIST = 57830
const PERSIST_ONLY = 57831
const PRECEDING = 57832
const PRIVILEGE_CHECKS_USER = 57833
const PROCESS = 57834
const RANDOM = 57835
const REFERENCE = 57836
const REQUIRE_ROW_FORMAT = 57837
const RESOURCE = 57838
const RESPECT = 57839
const RESTART = 57840
const RETAIN = 57841
const REUSE = 57842
const ROLE = 57843
const SECONDARY = 57844
const SECONDARY_ENGINE = 57845
const SECONDARY_LOAD = 57846
const SECONDARY_UNLOAD = 57847
const SKIP = 57848
const SRID = 57849
const THREAD_PRIORITY = 57850
const TIES = 57851
const UNBOUNDED = 57852
const VCPU = 57853
const VISIBLE = 57854
const FORMAT = 57855
const TREE = 57856
const VITESS = 57857
const TRADITIONAL = 57858
const LOCAL = 57859
const LOW_PRIORITY = 57860
const NO_WRITE_TO_BINLOG = 57861
const LOGS = 57862
const ERROR = 57863
const GENERAL = 57864
const HOSTS = 57865
const OPTIMIZER_COSTS = 57866
const USER_RESOURCES = 57867
const SLOW = 57868
const CHANNEL = 57869
const RELAY = 57870
const EXPORT = 57871
const AVG_ROW_LENGTH = 57872
const CONNECTION = 57873
const CHECKSUM = 57874
const DELAY_KEY_WRITE = 57875
const ENCRYPTION = 57876
const ENGINE = 57877
const INSERT_METHOD = 57878
const MAX_ROWS = 57879
const MIN_ROWS = 57880
const PACK_KEYS = 57881
const PASSWORD = 57882
const FIXED = 57883
const DYNAMIC = 57884
const COMPRESSED = 57885
const REDUNDANT = 57886
const COMPACT = 57887
const ROW_FORMAT = 57888
const STATS_AUTO_RECALC = 57889
const STATS_PERSISTENT = 57890
const STATS_SAMPLE_PAGES = 57891
const STORAGE = 57892
const MEMORY = 57893
const DISK = 57894
const PARTITIONS = 57895
const LINEAR = 57896
const RANGE = 57897
const LIST = 57898
const SUBPARTITION = 57899
const SUBPARTITIONS = 57900
const HASH = 57901

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"MEMBER",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	577, 145,
	-2, 151,
	-1, 48,
	129, 151,
	170, 151,
	326, 151,
	-2, 452,
	-1, 55,
	33, 650,
	230, 650,
	241, 650,
	276, 664,
	277, 664,
	-2, 652,
	-1, 60,
	232, 675,
	-2, 673,
	-1, 114,
	229, 1176,
	-2, 119,
	-1, 116,
	1, 146,
	577, 146,
	-2, 151,
	-1, 126,
	131, 355,
	235, 355,
	-2, 446,
	-1, 145,
	129, 151,
	170, 151,
	326, 151,
	-2, 461,
	-1, 643,
	214, 1197,
	-2, 1193,
	-1, 644,
	214, 1198,
	-2, 1194,
	-1, 718,
	57, 743,
	-2, 758,
	-1, 755,
	146, 1579,
	-2, 112,
	-1, 756,
	146, 1440,
	-2, 113,
	-1, 762,
	146, 1508,
	-2, 1170,
	-1, 909,
	146, 1371,
	-2, 1167,
	-1, 947,
	240, 41,
	245, 41,
	-2, 366,
	-1, 1024,
	1, 500,
	577, 500,
	-2, 151,
	-1, 1243,
	57, 744,
	-2, 763,
	-1, 1244,
	57, 745,
	-2, 764,
	-1, 1297,
	129, 151,
	170, 151,
	326, 151,
	-2, 396,
	-1, 1374,
	131, 355,
	235, 355,
	-2, 446,
	-1, 1383,
	240, 42,
	245, 42,
	-2, 367,
	-1, 1660,
	214, 1202,
	-2, 1196,
	-1, 1743,
	129, 151,
	170, 151,
	326, 151,
	-2, 397,
	-1, 1750,
	23, 170,
	-2, 172,
	-1, 1965,
	84, 39,
	-2, 800,
	-1, 2017,
	75, 94,
	84, 94,
	-2, 820,
	-1, 2204,
	47, 1138,
	-2, 1132,
	-1, 2383,
	84, 39,
	-2, 801,
	-1, 2421,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 792,
	-1, 2682,
	90, 540,
	91, 540,
	172, 540,
	173, 540,
	174, 540,
	175, 540,
	176, 540,
	177, 540,
	178, 540,
	179, 540,
	180, 540,
	181, 540,
	182, 540,
	183, 540,
	184, 540,
	185, 540,
	186, 540,
	187, 540,
	188, 540,
	189, 540,
	190, 540,
	191, 540,
	192, 540,
	193, 540,
	194, 540,
	195, 540,
	196, 540,
	197, 540,
	198, 540,
	199, 540,
	200, 540,
	201, 540,
	202, 540,
	203, 540,
	204, 540,
	205, 540,
	206, 540,
	207, 540,
	208, 540,
	209, 540,
	210, 540,
	211, 540,
	212, 540,
	-2, 1510,
}

const yyPrivate = 57344

const yyLast = 38950

var yyAct = [...]int{
	643, 2730, 2748, 652, 2747, 2724, 2624, 1740, 2680, 2482,
	2684, 2327, 645, 1300, 2257, 2664, 1934, 2264, 2298, 2512,
	2583, 2218, 1674, 711, 3, 1222, 96, 733, 1953, 1088,
	582, 2215, 2266, 2310, 1803, 1258, 578, 638, 2600, 2219,
	2216, 1988, 2309, 2392, 2171, 2386, 575, 646, 2517, 2170,
	635, 182, 636, 604, 182, 2312, 542, 182, 2011, 1698,
	1713, 2213, 558, 1980, 182, 2412, 1773, 637, 37, 2378,
	2049, 2078, 182, 2205, 1778, 1036, 2119, 1793, 1694, 574,
	576, 2050, 1729, 2051, 1354, 977, 154, 182, 734, 2000,
	1718, 1245, 1955, 570, 1972, 1717, 1587, 912, 760, 38,
	1644, 1812, 140, 713, 2136, 1654, 1580, 1381, 1792, 558,
	36, 1780, 558, 182, 558, 1065, 1538, 587, 1845, 2043,
	1289, 937, 1267, 942, 1720, 1397, 95, 2019, 91, 1225,
	1489, 1171, 1599, 1557, 1676, 1107, 1485, 1388, 757, 916,
	948, 945, 919, 1790, 1657, 715, 1471, 719, 943, 1705,
	955, 920, 944, 1769, 1288, 725, 1699, 1286, 1272, 1640,
	1494, 1081, 1349, 1020, 747, 736, 98, 1086, 1373, 723,
	123, 124, 97, 85, 157, 117, 118, 565, 1667, 721,
	1178, 1174, 89, 2731, 1805, 1806, 1807, 1805, 2295, 2633,
	720, 2071, 2098, 2097, 76, 2069, 1843, 1457, 1108, 741,
	8, 746, 2127, 722, 77, 7, 6, 2128, 2758, 1671,
	1672, 2751, 515, 2757, 1545, 90, 1544, 125, 1543, 727,
	1542, 1541, 119, 1540, 184, 185, 186, 1527, 979, 568,
	1532, 569, 982, 102, 2698, 913, 1951, 2201, 1982, 928,
	923, 993, 994, 566, 997, 998, 999, 1000, 2744, 712,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 761, 754, 2708, 2721, 958,
	728, 735, 714, 2447, 104, 105, 935, 108, 959, 2281,
	114, 1550, 2579, 179, 2578, 981, 510, 1108, 983, 984,
	985, 119, 934, 933, 178, 2750, 2475, 2758, 980, 2476,
	2743, 1785, 78, 1118, 990, 2074, 707, 708, 709, 710,
	2674, 1883, 718, 2734, 995, 2644, 78, 78, 120, 80,
	142, 2719, 2483, 78, 2665, 1783, 1991, 1831, 2673, 2135,
	2643, 162, 2361, 184, 185, 186, 1363, 1072, 1952, 1074,
	749, 750, 1023, 2625, 2028, 2254, 2255, 2027, 2106, 2253,
	2029, 1992, 2105, 1735, 1736, 119, 1673, 1290, 2126, 1291,
	1880, 1734, 152, 1060, 1061, 1055, 2530, 141, 705, 1043,
	932, 1084, 1029, 1030, 1044, 1881, 545, 1071, 1073, 87,
	927, 704, 1042, 929, 1041, 2040, 1043, 1056, 159, 2162,
	160, 1044, 1118, 87, 87, 2072, 1114, 1753, 1752, 1106,
	87, 1049, 2329, 545, 1032, 2389, 1375, 1376, 151, 150,
	177, 2352, 1140, 2350, 556, 545, 1531, 560, 532, 1019,
	554, 1229, 545, 1447, 1533, 1534, 1535, 2079, 930, 1857,
	1854, 1856, 1855, 2588, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1149, 1148, 1150, 1151, 1477, 1813, 545, 2101, 2322,
	1851, 2733, 1062, 1846, 1472, 1078, 996, 2323, 1025, 1859,
	1064, 1860, 1063, 1861, 531, 1782, 1057, 1448, 1069, 1449,
	2114, 1083, 1070, 1058, 1059, 1862, 529, 932, 1002, 924,
	1050, 2330, 1075, 1001, 1850, 1114, 926, 925, 936, 2699,
	2331, 1848, 932, 1018, 966, 2468, 2306, 938, 964, 1816,
	87, 939, 1714, 939, 1068, 1852, 975, 146, 1377, 153,
	182, 1374, 182, 147, 148, 182, 526, 974, 973, 163,
	1366, 972, 971, 970, 2738, 540, 1849, 1881, 168, 976,
	969, 968, 963, 1076, 1232, 930, 950, 2270, 931, 1152,
	537, 2163, 917, 558, 558, 558, 917, 951, 2717, 2118,
	915, 1152, 1053, 917, 2728, 1956, 1958, 1022, 1387, 1486,
	1791, 558, 558, 748, 1113, 1110, 1111, 1112, 1117, 1119,
	1116, 2115, 1115, 546, 957, 1837, 1482, 1094, 986, 1109,
	2288, 957, 2100, 1361, 957, 1833, 628, 1100, 1360, 1359,
	2090, 1483, 1039, 1357, 1045, 1046, 1047, 1048, 2621, 514,
	546, 509, 2428, 516, 2408, 518, 533, 2305, 548, 2024,
	547, 522, 546, 520, 524, 534, 525, 1085, 519, 546,
	530, 2280, 2131, 521, 535, 536, 538, 552, 551, 539,
	37, 528, 549, 2632, 1895, 2070, 1153, 1154, 967, 155,
	1700, 1701, 965, 1987, 546, 931, 1021, 1943, 557, 1478,
	2137, 1666, 1079, 1113, 1110, 1111, 1112, 1117, 1119, 1116,
	931, 1115, 1386, 2103, 1155, 1156, 1157, 1158, 1109, 2073,
	1784, 1276, 956, 957, 1163, 1077, 1166, 960, 950, 956,
	1202, 2575, 956, 1215, 1034, 2390, 2121, 961, 950, 953,
	954, 2120, 917, 1741, 992, 759, 947, 951, 914, 2113,
	921, 2642, 2112, 116, 1152, 182, 1151, 1159, 2121, 558,
	558, 1090, 1091, 2120, 149, 2252, 1957, 946, 730, 1082,
	2749, 2589, 1220, 2638, 2464, 182, 1459, 1458, 1460, 1461,
	1462, 2139, 1476, 143, 81, 1882, 144, 1038, 1236, 1233,
	86, 713, 1238, 2402, 558, 978, 111, 1847, 182, 1052,
	1031, 1028, 1479, 558, 86, 86, 1040, 1292, 1066, 558,
	1054, 86, 1495, 1103, 1104, 1221, 77, 2726, 1101, 1102,
	2727, 956, 2725, 1628, 1832, 2155, 960, 950, 1600, 2062,
	1235, 550, 757, 1123, 1239, 1176, 961, 1177, 1180, 1600,
	715, 1909, 2526, 2149, 2148, 2147, 2141, 2439, 2145, 543,
	2140, 2438, 2138, 957, 1237, 1830, 962, 2143, 95, 1122,
	1123, 184, 185, 186, 544, 1582, 2142, 112, 1820, 1562,
	1208, 1209, 1210, 1211, 1396, 1395, 957, 1221, 1385, 1226,
	1828, 2144, 2146, 1563, 1564, 1561, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 2713, 98, 966,
	964, 2429, 173, 174, 175, 176, 1620, 1609, 1610, 1611,
	1612, 1622, 1613, 1614, 1615, 1627, 1623, 1616, 1617, 1624,
	1625, 1626, 1618, 1619, 1621, 1473, 1277, 1474, 1037, 2741,
	1475, 1223, 2570, 2739, 1024, 1825, 1234, 712, 1146, 1147,
	1149, 1148, 1150, 1151, 1257, 2498, 1583, 87, 1287, 1254,
	2260, 956, 1067, 991, 2690, 1825, 1496, 2650, 2497, 761,
	2614, 1560, 182, 1917, 1282, 1283, 1350, 714, 2688, 1552,
	1554, 1555, 1829, 2446, 956, 1358, 1900, 2692, 2693, 2445,
	950, 953, 954, 2296, 917, 1899, 2268, 2269, 947, 951,
	2358, 2286, 1827, 2689, 1553, 2261, 558, 2047, 1383, 2651,
	1252, 1240, 2615, 1887, 1888, 1889, 1392, 1604, 2599, 1252,
	1394, 2046, 1788, 558, 558, 1466, 558, 2740, 558, 558,
	2263, 558, 558, 558, 558, 558, 558, 657, 658, 659,
	1467, 1124, 1464, 1452, 2258, 1121, 558, 1122, 1123, 1393,
	182, 1430, 1142, 1143, 1144, 1145, 1146, 1147, 1149, 1148,
	1150, 1151, 2268, 2269, 1124, 1252, 182, 752, 1121, 2259,
	1122, 1123, 1706, 1707, 1425, 1426, 1451, 558, 1450, 182,
	1124, 1364, 1365, 1441, 1121, 1124, 1122, 1123, 1465, 1121,
	1484, 1122, 1123, 558, 1435, 182, 1432, 1431, 2157, 1406,
	2267, 2265, 1124, 1379, 1372, 1463, 1121, 1261, 1122, 1123,
	1124, 182, 2270, 1454, 1121, 2714, 1122, 1123, 182, 2618,
	184, 185, 186, 1391, 2436, 2617, 2616, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 558, 558, 558, 2525,
	2523, 1433, 1434, 1427, 2494, 2443, 1356, 1439, 1440, 1399,
	2435, 1400, 1390, 1402, 1404, 1217, 1262, 1408, 1410, 1412,
	1414, 1416, 1925, 2056, 1389, 1389, 2267, 182, 2044, 1369,
	1382, 1370, 1368, 1905, 2326, 1841, 1453, 1124, 2270, 1963,
	1840, 1121, 1962, 1122, 1123, 1499, 184, 185, 186, 759,
	759, 759, 1503, 1491, 1505, 1506, 1507, 1508, 1697, 1679,
	1443, 1512, 1585, 1428, 1584, 1528, 1492, 1095, 1097, 1455,
	184, 185, 186, 1581, 2031, 1526, 1442, 1497, 1498, 1438,
	1265, 1437, 1362, 2356, 1252, 1436, 1590, 558, 1487, 1252,
	1263, 1502, 1080, 1558, 1093, 1252, 1978, 2732, 1509, 1510,
	1511, 2596, 558, 558, 1565, 1904, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 119,
	934, 933, 2595, 92, 1601, 2704, 1252, 1556, 2564, 1124,
	2715, 92, 1501, 1121, 93, 1122, 1123, 1641, 94, 1566,
	1124, 2262, 93, 101, 1121, 1264, 1122, 1123, 182, 1978,
	2671, 1124, 1658, 558, 100, 1121, 99, 1122, 1123, 1218,
	1525, 1935, 94, 1522, 1523, 1524, 184, 185, 186, 2563,
	1801, 1978, 2658, 1559, 1641, 1124, 1898, 182, 1989, 1121,
	558, 1122, 1123, 2481, 1684, 2080, 1685, 2059, 1252, 1989,
	182, 1124, 1978, 2654, 558, 1121, 1252, 1122, 1123, 182,
	1749, 182, 2401, 182, 182, 558, 2403, 1124, 558, 2646,
	1252, 1121, 1974, 1122, 1123, 1230, 1231, 2696, 2629, 558,
	1252, 1660, 1826, 1252, 1120, 1586, 1658, 94, 1750, 95,
	1662, 1663, 1592, 1593, 757, 1978, 2634, 757, 1144, 1145,
	1146, 1147, 1149, 1148, 1150, 1151, 2473, 2631, 95, 1997,
	1274, 2373, 1252, 1659, 184, 185, 186, 1690, 1799, 759,
	2401, 1716, 2637, 1124, 1978, 1294, 1997, 1121, 1661, 1122,
	1123, 1664, 1665, 1252, 558, 1978, 2571, 2473, 1252, 1825,
	1794, 1795, 1796, 1124, 1896, 1798, 1800, 1121, 2568, 1122,
	1123, 1759, 1760, 1761, 1762, 1660, 1978, 2471, 2373, 558,
	1825, 1252, 100, 727, 1744, 558, 1392, 1689, 1678, 1392,
	1754, 1392, 1755, 1756, 1757, 1758, 1745, 1824, 1124, 2276,
	1727, 2189, 1121, 1733, 1122, 1123, 2214, 1711, 1765, 1766,
	1767, 1768, 1692, 1124, 1814, 1775, 2401, 1121, 1896, 1122,
	1123, 1928, 1748, 2465, 2406, 1252, 1914, 558, 2247, 1581,
	1781, 1913, 1709, 1140, 1581, 1581, 1136, 1881, 1137, 1825,
	1732, 761, 1731, 1996, 761, 2278, 2277, 1747, 2274, 2275,
	1896, 1746, 1138, 1139, 1135, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1149, 1148, 1150, 1151, 2274, 2273, 1124, 1808,
	182, 1704, 1121, 1256, 1122, 1123, 1811, 182, 1997, 1252,
	1896, 1252, 182, 182, 1669, 1140, 182, 2130, 182, 1776,
	1881, 2099, 1536, 1819, 1481, 182, 1822, 1997, 1823, 1771,
	1772, 1284, 182, 1789, 1787, 1786, 1797, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1149, 1148, 1150, 1151, 717, 958,
	1353, 2084, 1776, 1817, 1834, 1821, 644, 1818, 959, 1835,
	182, 558, 914, 2076, 2077, 1836, 1978, 1977, 1389, 2423,
	1838, 1839, 1120, 1252, 941, 1218, 1353, 1352, 940, 1398,
	1398, 2661, 1398, 87, 1398, 1398, 2048, 1407, 1398, 1398,
	1398, 1398, 1398, 2756, 2375, 1298, 1297, 2585, 1259, 2561,
	1218, 1218, 914, 1872, 1873, 2537, 2463, 183, 1875, 2460,
	183, 2441, 2367, 183, 2366, 1124, 1844, 1876, 559, 1121,
	183, 1122, 1123, 1355, 2020, 87, 1774, 2020, 183, 1558,
	1140, 1124, 1894, 1468, 2324, 1121, 2301, 1122, 1123, 1891,
	1124, 1893, 2297, 183, 1121, 2371, 1122, 1123, 2085, 1488,
	1865, 1770, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149,
	1148, 1150, 1151, 1764, 1763, 559, 1469, 1384, 559, 183,
	559, 2364, 1380, 1351, 1892, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1149, 1148, 1150, 1151, 113, 2021, 2299, 2053,
	2021, 1124, 759, 759, 759, 1121, 2023, 1122, 1123, 1881,
	182, 1023, 1879, 2413, 2414, 2754, 2363, 2328, 182, 1559,
	1140, 2586, 1785, 558, 1938, 2052, 1682, 1124, 2710, 558,
	2685, 1121, 2416, 1122, 1123, 1890, 1949, 1937, 2293, 2292,
	558, 2291, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149,
	1148, 1150, 1151, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1126, 2448, 1124, 182, 1936, 2214, 1121, 182, 1122, 1123,
	1124, 1908, 2053, 101, 1121, 2063, 1122, 1123, 1993, 1866,
	1906, 1529, 2030, 1124, 100, 2452, 99, 1121, 2419, 1122,
	1123, 2418, 2233, 1591, 2236, 94, 1933, 1979, 2232, 2237,
	1218, 1966, 2701, 1250, 1246, 1660, 2672, 1923, 1605, 1606,
	1124, 2449, 2450, 2451, 1121, 1696, 1122, 1123, 1247, 1932,
	1260, 37, 1975, 2234, 1421, 2613, 558, 1688, 2235, 759,
	2013, 182, 2453, 2454, 1226, 1931, 2407, 1659, 182, 1950,
	1940, 1941, 1124, 1686, 1687, 1249, 1121, 1248, 1122, 1123,
	558, 1976, 1960, 1252, 1418, 2041, 2042, 558, 1971, 1683,
	2194, 1392, 1392, 2193, 2082, 1124, 558, 1986, 2516, 1121,
	2034, 1122, 1123, 2012, 1422, 1423, 1424, 1929, 2096, 2518,
	2397, 1124, 2203, 2018, 2095, 1121, 1695, 1122, 1123, 182,
	182, 182, 182, 182, 2025, 1480, 2022, 1781, 703, 2272,
	1274, 1419, 1420, 759, 2032, 2038, 182, 182, 2055, 2035,
	2238, 759, 2006, 2007, 759, 2507, 2057, 2506, 2394, 988,
	987, 2338, 182, 1124, 2045, 914, 2393, 1121, 2075, 1122,
	1123, 2054, 2002, 2005, 2006, 2007, 2003, 2052, 2004, 2008,
	2124, 1581, 731, 2064, 2065, 2066, 1596, 2094, 2060, 1092,
	732, 1372, 2002, 2005, 2006, 2007, 2003, 2092, 2004, 2008,
	1597, 92, 2413, 2414, 2091, 2505, 2206, 2208, 2086, 2087,
	2154, 120, 93, 713, 92, 2209, 2093, 2174, 2399, 2174,
	921, 94, 2174, 94, 558, 93, 2172, 2736, 2172, 2289,
	101, 2172, 1706, 1707, 1869, 2630, 2581, 2271, 2010, 1693,
	558, 100, 2192, 99, 2173, 914, 2173, 739, 740, 2173,
	2191, 921, 94, 2183, 2132, 182, 2133, 1858, 2379, 558,
	1885, 101, 2116, 2179, 99, 2176, 2605, 2122, 558, 2604,
	2123, 2524, 100, 2134, 99, 558, 558, 2522, 182, 182,
	182, 182, 182, 2521, 2150, 2514, 2461, 2151, 2398, 2396,
	182, 1250, 1246, 914, 2196, 182, 2211, 2183, 182, 2302,
	182, 1809, 2217, 182, 182, 182, 1247, 2217, 2226, 2166,
	2220, 1367, 101, 2197, 738, 100, 183, 2513, 183, 2387,
	2246, 183, 1989, 100, 2712, 2711, 2712, 2184, 2182, 1974,
	2164, 1243, 1244, 1249, 1915, 1248, 1680, 1278, 2287, 1269,
	106, 107, 719, 2619, 182, 2434, 2195, 2198, 729, 559,
	559, 559, 103, 88, 1, 2687, 527, 558, 2248, 1670,
	1224, 2249, 1239, 2013, 541, 2188, 558, 559, 559, 2228,
	2229, 182, 2231, 2227, 721, 2683, 2230, 1456, 2239, 1446,
	2484, 182, 95, 1642, 1643, 720, 2250, 2185, 2186, 2187,
	2304, 2582, 2081, 1815, 2459, 1779, 182, 1878, 949, 182,
	2256, 2225, 145, 1491, 1742, 2243, 2244, 1743, 2667, 2339,
	110, 910, 109, 2283, 2282, 952, 1051, 1810, 2284, 2285,
	2474, 2039, 1751, 2316, 1304, 2315, 1302, 1303, 1301, 1306,
	1305, 1916, 1530, 555, 2009, 180, 1293, 1270, 989, 2307,
	517, 2279, 1781, 1842, 2308, 2319, 523, 1164, 2190, 2026,
	758, 751, 1681, 1964, 2303, 2222, 2391, 2202, 2204, 1981,
	2207, 2200, 2612, 2515, 2659, 2370, 2036, 1266, 2334, 1907,
	558, 182, 1598, 2333, 1721, 1551, 580, 579, 2336, 2337,
	577, 1967, 1990, 1127, 647, 1954, 1279, 2001, 2348, 1999,
	2341, 1998, 2342, 1867, 1728, 2415, 2411, 2746, 2679, 1723,
	1719, 1973, 2345, 2346, 588, 2347, 581, 573, 2349, 2431,
	2351, 183, 2353, 2314, 2102, 559, 559, 2385, 2325, 2104,
	2037, 2321, 1105, 1242, 567, 922, 1595, 2587, 182, 2573,
	1884, 183, 2360, 759, 1241, 1607, 2380, 2381, 1608, 2294,
	1802, 63, 41, 1635, 2388, 562, 2437, 2697, 2410, 1695,
	559, 182, 1096, 745, 183, 1968, 2420, 2400, 2395, 559,
	32, 31, 30, 29, 28, 559, 1983, 23, 22, 182,
	2426, 2427, 182, 182, 182, 21, 2417, 20, 19, 178,
	25, 18, 558, 558, 17, 16, 2425, 2424, 2707, 2735,
	115, 2316, 50, 2315, 2432, 47, 2433, 45, 122, 121,
	48, 44, 1026, 120, 42, 27, 26, 15, 14, 558,
	558, 558, 558, 2442, 13, 2444, 162, 12, 11, 10,
	9, 5, 4, 35, 2469, 34, 33, 1099, 24, 2,
	2068, 1804, 0, 0, 0, 0, 2480, 0, 0, 0,
	0, 0, 0, 0, 0, 2478, 2479, 0, 0, 0,
	0, 0, 2058, 0, 0, 2174, 0, 2174, 2033, 0,
	2466, 2467, 0, 182, 2172, 0, 2172, 0, 2493, 0,
	2489, 0, 0, 159, 0, 160, 1695, 0, 0, 0,
	0, 0, 2173, 2083, 2173, 2510, 2490, 558, 0, 558,
	0, 0, 2088, 0, 0, 177, 0, 0, 2502, 0,
	0, 2501, 0, 0, 0, 0, 0, 2174, 0, 2533,
	2531, 2511, 2217, 0, 2535, 2520, 2539, 713, 183, 2519,
	0, 2220, 2527, 2529, 0, 2220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 0, 2540, 2541, 0, 0,
	0, 2543, 559, 37, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 0, 559,
	559, 2565, 559, 0, 559, 559, 2567, 559, 559, 559,
	559, 559, 559, 2566, 2576, 558, 2572, 2577, 0, 558,
	558, 0, 559, 2584, 0, 0, 183, 0, 0, 0,
	1218, 0, 1218, 0, 163, 1218, 0, 0, 0, 0,
	759, 2609, 183, 168, 0, 0, 0, 0, 558, 2608,
	2611, 0, 2569, 559, 0, 183, 1398, 2606, 2607, 0,
	0, 0, 2620, 0, 0, 0, 0, 0, 0, 559,
	0, 183, 558, 2622, 2626, 2199, 0, 713, 2220, 0,
	0, 0, 0, 0, 759, 0, 0, 183, 1218, 0,
	0, 2224, 1398, 1218, 183, 0, 558, 182, 0, 0,
	0, 0, 0, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 559, 559, 559, 0, 2636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2623, 0, 0, 0,
	0, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 558, 558,
	2628, 0, 0, 0, 155, 1251, 0, 558, 0, 37,
	2217, 2652, 2662, 0, 2657, 2660, 182, 558, 2666, 0,
	0, 0, 2675, 914, 2639, 0, 1218, 2584, 2668, 0,
	0, 0, 1695, 0, 2686, 629, 2694, 2691, 2678, 0,
	0, 0, 0, 2700, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 559, 2709, 2706, 0, 558, 37, 0,
	0, 0, 0, 0, 0, 558, 0, 0, 559, 559,
	2718, 2174, 0, 2720, 2722, 0, 0, 0, 2729, 0,
	2723, 178, 0, 0, 0, 0, 181, 0, 0, 513,
	2737, 0, 553, 0, 2742, 0, 0, 0, 0, 513,
	0, 0, 0, 0, 0, 120, 0, 513, 2174, 2753,
	0, 2752, 0, 0, 183, 2174, 0, 2745, 162, 559,
	0, 0, 726, 0, 2755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2716, 2199, 0, 744, 0,
	744, 0, 0, 183, 0, 0, 559, 0, 513, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	559, 0, 0, 0, 0, 183, 0, 183, 0, 183,
	183, 559, 0, 0, 559, 159, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 0, 0, 0, 0, 0, 173, 174, 175,
	176, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 0, 0, 0, 0, 1695, 1695,
	0, 120, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 559, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 2485, 2486, 2487, 2488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	141, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 559, 0, 168, 0, 0, 1218, 0,
	1218, 159, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	130, 151, 150, 177, 0, 0, 0, 0, 1218, 0,
	0, 0, 0, 2532, 0, 2534, 183, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 183, 183,
	0, 0, 183, 0, 183, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1695, 0, 0, 0, 0, 0, 183, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 127, 153, 134, 126, 0, 147, 148, 0, 0,
	0, 2602, 163, 0, 0, 2602, 2602, 0, 0, 0,
	0, 168, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 136, 131, 132,
	133, 137, 0, 0, 1695, 0, 0, 0, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2545, 2547,
	2546, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 610, 0,
	0, 0, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 0, 513, 0, 0,
	513, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 1218, 0, 2653, 559,
	0, 0, 155, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 0, 759, 759, 559, 0, 0, 0,
	0, 0, 0, 2676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2681, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 0, 0, 0, 0, 0, 173,
	174, 175, 176, 1695, 0, 0, 0, 149, 0, 0,
	0, 2681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 144,
	0, 0, 559, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 1219, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1253, 1255, 0, 0,
	0, 0, 0, 0, 0, 183, 183, 183, 183, 183,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 183, 0, 0, 0, 0, 0, 0,
	726, 0, 0, 0, 0, 0, 0, 0, 183, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	0, 0, 0, 513, 0, 173, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 0, 605, 607, 640, 641, 0, 603, 606,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 608, 609, 2544,
	2548, 2549, 2550, 2551, 2552, 2553, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 0, 0,
	0, 559, 559, 0, 183, 183, 183, 183, 183, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 183, 0, 0, 183, 0, 183, 0, 0, 183,
	183, 183, 0, 0, 0, 78, 39, 40, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 43,
	69, 70, 0, 67, 71, 0, 0, 513, 0, 0,
	183, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 0, 0, 0, 0, 183, 0, 0,
	0, 56, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 87, 0, 1219, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1219,
	1219, 0, 0, 0, 0, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 559, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 0, 0, 0,
	0, 0, 0, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 1513, 1514, 513, 513, 513, 513, 513, 513,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 46, 49, 52, 51,
	54, 0, 66, 0, 183, 75, 72, 0, 0, 0,
	2705, 0, 513, 0, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 183, 55, 83,
	82, 0, 0, 64, 65, 53, 0, 0, 0, 0,
	0, 73, 74, 0, 0, 183, 654, 79, 183, 183,
	183, 1602, 0, 0, 0, 1603, 0, 0, 559, 559,
	0, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	0, 0, 0, 744, 744, 0, 0, 57, 58, 1219,
	59, 60, 61, 62, 0, 559, 559, 559, 559, 0,
	0, 0, 0, 0, 0, 0, 0, 1253, 1668, 0,
	0, 0, 0, 0, 0, 0, 0, 744, 1490, 744,
	744, 744, 744, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 79, 0, 0, 0,
	1691, 0, 0, 1444, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 716, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1309, 726, 559, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 0, 0, 0, 0,
	0, 0, 1490, 0, 513, 0, 513, 0, 513, 1730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 86, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 0, 1322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 559, 559, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 0, 1335, 1338, 1339, 1340,
	1341, 1342, 1343, 0, 1344, 1345, 1346, 1347, 1348, 1323,
	1324, 1325, 1326, 1307, 1308, 1336, 0, 1310, 559, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 0, 0, 0,
	0, 0, 559, 183, 0, 0, 743, 0, 0, 0,
	0, 0, 0, 0, 1227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 513, 0, 0, 559, 0,
	0, 0, 513, 0, 0, 0, 0, 513, 513, 0,
	0, 513, 0, 1870, 559, 559, 0, 0, 0, 0,
	513, 0, 0, 559, 0, 0, 0, 513, 512, 0,
	0, 0, 183, 559, 571, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 706, 0, 0, 0,
	0, 0, 1337, 0, 0, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 737, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 559, 1897, 0, 0, 0, 1901, 918, 1902, 1903,
	0, 0, 0, 0, 0, 0, 0, 1911, 0, 0,
	1912, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 0, 1918, 1919, 1920, 1921,
	1922, 0, 1924, 0, 0, 0, 1926, 0, 1927, 0,
	0, 0, 1930, 0, 0, 0, 0, 0, 0, 0,
	1939, 0, 0, 0, 0, 0, 0, 1944, 1945, 1946,
	1947, 1948, 0, 1691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 744, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1490, 0, 0, 513, 0, 0, 0, 0,
	0, 0, 0, 1444, 0, 0, 0, 0, 0, 1087,
	1087, 1087, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 655, 656, 0, 0, 0, 0, 513, 0,
	0, 0, 513, 0, 0, 0, 716, 1160, 1161, 1162,
	0, 1165, 0, 1167, 1168, 1169, 1170, 0, 1173, 1175,
	1175, 0, 1175, 1179, 1179, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 0, 1203, 1204, 1205,
	1206, 1207, 0, 0, 0, 0, 1179, 1179, 1179, 1179,
	0, 0, 0, 0, 0, 0, 513, 0, 0, 0,
	0, 0, 0, 2067, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 1228, 513, 513, 513, 513, 513, 716,
	0, 0, 0, 716, 0, 0, 0, 0, 0, 716,
	0, 513, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 0, 0,
	0, 0, 2161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 0, 0, 0, 0, 0, 0, 0,
	2175, 0, 0, 0, 0, 0, 2180, 2181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1219,
	0, 1219, 0, 0, 1219, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 0, 0, 1027, 0, 1033, 0, 0, 1035,
	2223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 0, 0, 0, 0, 0, 0, 2241, 2242, 0,
	0, 0, 0, 0, 0, 0, 0, 1219, 0, 0,
	0, 0, 1219, 513, 513, 513, 513, 513, 0, 0,
	0, 0, 0, 0, 0, 2240, 0, 0, 0, 1125,
	513, 0, 0, 1444, 0, 513, 0, 0, 513, 2251,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 0, 1309, 0,
	0, 571, 0, 0, 0, 2340, 513, 0, 0, 0,
	0, 0, 2344, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 0, 0, 513, 0, 2354, 2355, 2357, 2359,
	0, 0, 0, 0, 0, 0, 2365, 0, 0, 0,
	0, 2369, 0, 0, 0, 0, 2372, 0, 0, 0,
	0, 0, 0, 2374, 0, 2376, 0, 0, 2377, 0,
	0, 0, 0, 0, 2382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1322,
	0, 0, 0, 0, 0, 1268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 513, 2404, 2405, 0,
	0, 2409, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2421,
	2422, 0, 1087, 1087, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 1338, 1339, 1340, 1341, 1342, 1343,
	0, 1344, 1345, 1346, 1347, 1348, 1323, 1324, 1325, 1326,
	1307, 1308, 1336, 513, 1310, 0, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 0, 0, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 2472, 0, 0, 0, 0,
	0, 0, 0, 0, 513, 0, 0, 513, 513, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2499, 0, 2500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1299, 0, 0, 1337,
	0, 0, 0, 0, 0, 0, 0, 1219, 0, 1219,
	0, 0, 0, 0, 0, 0, 0, 0, 1444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 2580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2590, 2591, 2592,
	0, 2593, 2594, 1470, 0, 0, 0, 2597, 0, 2598,
	2601, 0, 0, 0, 0, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1500, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 2627, 0,
	0, 0, 0, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 1539, 0, 2641, 0, 1371, 0, 1546, 1547, 1548,
	1549, 0, 0, 0, 0, 0, 2647, 0, 120, 0,
	142, 0, 2648, 2649, 0, 0, 0, 0, 0, 0,
	0, 162, 513, 0, 0, 0, 0, 0, 0, 0,
	2655, 0, 0, 0, 0, 0, 0, 0, 1588, 1589,
	0, 2663, 0, 0, 0, 0, 1594, 0, 0, 0,
	0, 0, 152, 0, 0, 1219, 0, 141, 0, 0,
	0, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 571, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 159, 0,
	160, 2702, 0, 0, 0, 2703, 0, 0, 0, 0,
	0, 1444, 0, 0, 0, 0, 1375, 1376, 151, 150,
	177, 0, 0, 0, 0, 571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1886, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1702, 1703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 1715, 0, 0, 1539, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 1377, 153,
	0, 1374, 0, 147, 148, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 1942, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1994, 1995, 0, 0, 0, 0, 0, 0, 0, 2014,
	0, 2015, 2016, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1539, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 1863, 1864, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 0, 0, 0, 1874, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1910, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 0, 0, 0,
	0, 0, 173, 174, 175, 176, 0, 0, 0, 0,
	0, 1722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2221,
	0, 79, 0, 0, 1722, 1722, 1722, 1722, 1722, 0,
	0, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2014, 716, 0, 0, 0, 1722, 0, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2313,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2107, 2108, 2109, 2110, 2111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1539, 2117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2129, 0, 0, 2125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2152, 2153, 0, 0, 0, 2156, 0, 0, 0,
	2158, 2159, 2160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2165, 0, 0, 1645, 2167, 0, 2168, 2169,
	87, 0, 0, 2177, 2178, 0, 648, 655, 656, 657,
	658, 659, 649, 651, 1722, 0, 0, 650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2430, 0, 0,
	653, 660, 661, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2470, 0, 0, 0, 2317, 2318, 0,
	0, 0, 0, 2245, 0, 0, 0, 0, 0, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 2290, 2300,
	0, 0, 0, 0, 0, 2504, 0, 2508, 2509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2311, 0, 0, 0, 0,
	2221, 0, 79, 0, 2221, 2320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2332, 0, 0, 2335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2362, 0, 0, 0, 0, 0,
	0, 2368, 0, 0, 0, 2574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 2221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2440, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2455, 2462, 0, 2456, 2457, 2458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2656, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2491, 0, 2492, 0, 0, 0, 0,
	2495, 2496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2536, 0, 0, 2538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2562, 0,
	0, 87, 0, 0, 0, 0, 0, 648, 655, 656,
	657, 658, 659, 649, 651, 0, 0, 0, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 653, 660, 661, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2610, 571, 0, 0, 0, 0, 0, 0, 2317, 2318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2640, 0, 0, 0, 0, 2645, 0, 0, 0,
	892, 877, 434, 0, 824, 895, 793, 812, 905, 815,
	818, 859, 772, 838, 355, 809, 764, 797, 767, 804,
	768, 795, 826, 244, 792, 879, 842, 894, 310, 241,
	774, 798, 369, 814, 193, 861, 410, 228, 320, 317,
	441, 255, 247, 243, 227, 281, 327, 367, 428, 361,
	901, 314, 848, 0, 419, 340, 0, 0, 2695, 828,
	883, 836, 873, 823, 860, 782, 847, 896, 810, 856,
	897, 287, 226, 192, 352, 420, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 2669, 0, 2670, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 806, 853, 891,
	807, 855, 239, 285, 246, 238, 438, 902, 882, 771,
	835, 890, 0, 0, 209, 337, 893, 830, 0, 858,
	0, 908, 766, 850, 0, 769, 773, 904, 886, 801,
	249, 0, 0, 0, 0, 0, 0, 0, 827, 837,
	870, 821, 0, 639, 0, 0, 0, 640, 641, 799,
	0, 846, 642, 0, 0, 778, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 825, 0,
	0, 0, 781, 0, 800, 871, 0, 763, 268, 775,
	341, 231, 0, 875, 885, 822, 472, 889, 820, 819,
	865, 779, 881, 813, 309, 777, 293, 188, 205, 0,
	811, 351, 392, 398, 880, 796, 805, 229, 803, 396,
	365, 456, 213, 257, 389, 370, 394, 377, 260, 845,
	863, 395, 315, 443, 384, 453, 473, 474, 237, 345,
	463, 432, 469, 485, 206, 234, 359, 425, 459, 416,
	338, 439, 440, 292, 415, 266, 191, 313, 479, 204,
	404, 221, 211, 197, 427, 451, 218, 407, 0, 0,
	487, 199, 449, 424, 334, 289, 290, 198, 0, 388,
	242, 264, 232, 354, 446, 447, 230, 488, 208, 468,
	201, 1089, 467, 347, 442, 450, 335, 325, 200, 448,
	333, 324, 295, 253, 275, 382, 318, 383, 276, 343,
	342, 344, 194, 460, 0, 195, 0, 421, 461, 489,
	214, 215, 216, 791, 252, 256, 263, 265, 271, 272,
	279, 311, 358, 381, 379, 385, 876, 437, 454, 464,
	471, 477, 478, 480, 481, 482, 483, 484, 346, 278,
	417, 294, 316, 868, 907, 364, 397, 219, 458, 418,
	786, 790, 784, 785, 840, 841, 787, 898, 899, 900,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 0, 872,
	780, 0, 788, 789, 0, 878, 887, 888, 508, 326,
	409, 455, 296, 301, 304, 844, 187, 202, 312, 903,
	386, 261, 486, 466, 462, 765, 783, 236, 794, 802,
	0, 808, 816, 817, 829, 831, 832, 833, 834, 851,
	852, 854, 862, 864, 867, 869, 874, 884, 906, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	843, 849, 323, 254, 273, 284, 857, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 839, 866, 319, 435,
	436, 280, 892, 877, 434, 0, 824, 895, 793, 812,
	905, 815, 818, 859, 772, 838, 355, 809, 764, 797,
	767, 804, 768, 795, 826, 244, 792, 879, 842, 894,
	310, 241, 774, 798, 369, 814, 193, 861, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 901, 314, 848, 0, 419, 340, 0, 0,
	0, 828, 883, 836, 873, 823, 860, 782, 847, 896,
	810, 856, 897, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 806,
	853, 891, 807, 855, 239, 285, 246, 238, 438, 902,
	882, 771, 835, 890, 0, 0, 209, 337, 893, 830,
	0, 858, 0, 908, 766, 850, 0, 769, 773, 904,
	886, 801, 249, 0, 0, 0, 0, 0, 0, 0,
	827, 837, 870, 821, 0, 0, 0, 0, 0, 2252,
	0, 799, 0, 846, 0, 0, 0, 778, 770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	825, 0, 0, 0, 781, 0, 800, 871, 0, 763,
	268, 775, 341, 231, 0, 875, 885, 822, 472, 889,
	820, 819, 865, 779, 881, 813, 309, 777, 293, 188,
	205, 0, 811, 351, 392, 398, 880, 796, 805, 229,
	803, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 845, 863, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 485, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 487, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 488,
	208, 468, 201, 1089, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 489, 214, 215, 216, 791, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 876, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	346, 278, 417, 294, 316, 868, 907, 364, 397, 219,
	458, 418, 786, 790, 784, 785, 840, 841, 787, 898,
	899, 900, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	0, 872, 780, 0, 788, 789, 0, 878, 887, 888,
	508, 326, 409, 455, 296, 301, 304, 844, 187, 202,
	312, 903, 386, 261, 486, 466, 462, 765, 783, 236,
	794, 802, 0, 808, 816, 817, 829, 831, 832, 833,
	834, 851, 852, 854, 862, 864, 867, 869, 874, 884,
	906, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 843, 849, 323, 254, 273, 284, 857, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 839, 866,
	319, 435, 436, 280, 892, 877, 434, 0, 824, 895,
	793, 812, 905, 815, 818, 859, 772, 838, 355, 809,
	764, 797, 767, 804, 768, 795, 826, 244, 792, 879,
	842, 894, 310, 241, 774, 798, 369, 814, 193, 861,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 901, 314, 848, 0, 419, 340,
	0, 0, 0, 828, 883, 836, 873, 823, 860, 782,
	847, 896, 810, 856, 897, 287, 226, 192, 352, 420,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 806, 853, 891, 807, 855, 239, 285, 246, 238,
	438, 902, 882, 771, 835, 890, 0, 0, 209, 337,
	893, 830, 0, 858, 0, 908, 766, 850, 0, 769,
	773, 904, 886, 801, 249, 0, 0, 0, 0, 0,
	0, 0, 827, 837, 870, 821, 0, 0, 0, 0,
	0, 2210, 0, 799, 0, 846, 0, 0, 0, 778,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 825, 0, 0, 0, 781, 0, 800, 871,
	0, 763, 268, 775, 341, 231, 0, 875, 885, 822,
	472, 889, 820, 819, 865, 779, 881, 813, 309, 777,
	293, 188, 205, 0, 811, 351, 392, 398, 880, 796,
	805, 229, 803, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 845, 863, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 485, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 451,
	218, 407, 0, 0, 487, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 488, 208, 468, 201, 1089, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 489, 214, 215, 216, 791, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	876, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 346, 278, 417, 294, 316, 868, 907, 364,
	397, 219, 458, 418, 786, 790, 784, 785, 840, 841,
	787, 898, 899, 900, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 0, 872, 780, 0, 788, 789, 0, 878,
	887, 888, 508, 326, 409, 455, 296, 301, 304, 844,
	187, 202, 312, 903, 386, 261, 486, 466, 462, 765,
	783, 236, 794, 802, 0, 808, 816, 817, 829, 831,
	832, 833, 834, 851, 852, 854, 862, 864, 867, 869,
	874, 884, 906, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 322, 328,
	329, 330, 331, 348, 349, 350, 353, 356, 357, 360,
	362, 363, 366, 373, 374, 375, 376, 378, 380, 387,
	391, 399, 400, 401, 402, 403, 405, 406, 411, 412,
	413, 414, 422, 426, 444, 445, 457, 470, 475, 270,
	452, 476, 0, 321, 843, 849, 323, 254, 273, 284,
	857, 465, 423, 207, 393, 262, 196, 225, 210, 233,
	248, 251, 288, 332, 339, 368, 372, 267, 245, 223,
	390, 220, 408, 429, 430, 431, 433, 336, 240, 371,
	839, 866, 319, 435, 436, 280, 892, 877, 434, 0,
	824, 895, 793, 812, 905, 815, 818, 859, 772, 838,
	355, 809, 764, 797, 767, 804, 768, 795, 826, 244,
	792, 879, 842, 894, 310, 241, 774, 798, 369, 814,
	193, 861, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 901, 314, 848, 0,
	419, 340, 0, 0, 0, 828, 883, 836, 873, 823,
	860, 782, 847, 896, 810, 856, 897, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 806, 853, 891, 807, 855, 239, 285,
	246, 238, 438, 902, 882, 771, 835, 890, 0, 0,
	209, 337, 893, 830, 0, 858, 0, 908, 766, 850,
	0, 769, 773, 904, 886, 801, 249, 0, 0, 0,
	0, 0, 0, 0, 827, 837, 870, 821, 0, 0,
	0, 0, 0, 1710, 0, 799, 0, 846, 0, 0,
	0, 778, 770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 825, 0, 0, 0, 781, 0,
	800, 871, 0, 763, 268, 775, 341, 231, 0, 875,
	885, 822, 472, 889, 820, 819, 865, 779, 881, 813,
	309, 777, 293, 188, 205, 0, 811, 351, 392, 398,
	880, 796, 805, 229, 803, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 845, 863, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 485,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 487, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 488, 208, 468, 201, 1089, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 489, 214, 215, 216, 791,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 876, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 346, 278, 417, 294, 316, 868,
	907, 364, 397, 219, 458, 418, 786, 790, 784, 785,
	840, 841, 787, 898, 899, 900, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 0, 872, 780, 0, 788, 789,
	0, 878, 887, 888, 508, 326, 409, 455, 296, 301,
	304, 844, 187, 202, 312, 903, 386, 261, 486, 466,
	462, 765, 783, 236, 794, 802, 0, 808, 816, 817,
	829, 831, 832, 833, 834, 851, 852, 854, 862, 864,
	867, 869, 874, 884, 906, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	322, 328, 329, 330, 331, 348, 349, 350, 353, 356,
	357, 360, 362, 363, 366, 373, 374, 375, 376, 378,
	380, 387, 391, 399, 400, 401, 402, 403, 405, 406,
	411, 412, 413, 414, 422, 426, 444, 445, 457, 470,
	475, 270, 452, 476, 0, 321, 843, 849, 323, 254,
	273, 284, 857, 465, 423, 207, 393, 262, 196, 225,
	210, 233, 248, 251, 288, 332, 339, 368, 372, 267,
	245, 223, 390, 220, 408, 429, 430, 431, 433, 336,
	240, 371, 839, 866, 319, 435, 436, 280, 892, 877,
	434, 0, 824, 895, 793, 812, 905, 815, 818, 859,
	772, 838, 355, 809, 764, 797, 767, 804, 768, 795,
	826, 244, 792, 879, 842, 894, 310, 241, 774, 798,
	369, 814, 193, 861, 410, 228, 320, 317, 441, 255,
	247, 243, 227, 281, 327, 367, 428, 361, 901, 314,
	848, 0, 419, 340, 0, 0, 0, 828, 883, 836,
	873, 823, 860, 782, 847, 896, 810, 856, 897, 287,
	226, 192, 352, 420, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 806, 853, 891, 807, 855,
	239, 285, 246, 238, 438, 902, 882, 771, 835, 890,
	0, 0, 209, 337, 893, 830, 0, 858, 0, 908,
	766, 850, 0, 769, 773, 904, 886, 801, 249, 0,
	0, 0, 0, 0, 0, 0, 827, 837, 870, 821,
	0, 0, 0, 0, 0, 0, 0, 799, 0, 846,
	0, 0, 0, 778, 770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 825, 0, 0, 0,
	781, 0, 800, 871, 0, 763, 268, 775, 341, 231,
	0, 875, 885, 822, 472, 889, 820, 819, 865, 779,
	881, 813, 309, 777, 293, 188, 205, 0, 811, 351,
	392, 398, 880, 796, 805, 229, 803, 396, 365, 456,
	213, 257, 389, 370, 394, 377, 260, 845, 863, 395,
	315, 443, 384, 453, 473, 474, 237, 345, 463, 432,
	469, 485, 206, 234, 359, 425, 459, 416, 338, 439,
	440, 292, 415, 266, 191, 313, 479, 204, 404, 221,
	211, 197, 427, 451, 218, 407, 0, 0, 487, 199,
	449, 424, 334, 289, 290, 198, 0, 388, 242, 264,
	232, 354, 446, 447, 230, 488, 208, 468, 201, 1089,
	467, 347, 442, 450, 335, 325, 200, 448, 333, 324,
	295, 253, 275, 382, 318, 383, 276, 343, 342, 344,
	194, 460, 0, 195, 0, 421, 461, 489, 214, 215,
	216, 791, 252, 256, 263, 265, 271, 272, 279, 311,
	358, 381, 379, 385, 876, 437, 454, 464, 471, 477,
	478, 480, 481, 482, 483, 484, 346, 278, 417, 294,
	316, 868, 907, 364, 397, 219, 458, 418, 786, 790,
	784, 785, 840, 841, 787, 898, 899, 900, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 0, 872, 780, 0,
	788, 789, 0, 878, 887, 888, 508, 326, 409, 455,
	296, 301, 304, 844, 187, 202, 312, 903, 386, 261,
	486, 466, 462, 765, 783, 236, 794, 802, 0, 808,
	816, 817, 829, 831, 832, 833, 834, 851, 852, 854,
	862, 864, 867, 869, 874, 884, 906, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 843, 849,
	323, 254, 273, 284, 857, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 839, 866, 319, 435, 436, 280,
	892, 877, 434, 0, 824, 895, 793, 812, 905, 815,
	818, 859, 772, 838, 355, 809, 764, 797, 767, 804,
	768, 795, 826, 244, 792, 879, 842, 894, 310, 241,
	774, 798, 369, 814, 193, 861, 410, 228, 320, 317,
	441, 255, 247, 243, 227, 281, 327, 367, 428, 361,
	901, 314, 848, 0, 419, 340, 0, 0, 0, 828,
	883, 836, 873, 823, 860, 782, 847, 896, 810, 856,
	897, 287, 226, 192, 352, 420, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 806, 853, 891,
	807, 855, 239, 285, 246, 238, 438, 902, 882, 771,
	835, 890, 0, 0, 209, 337, 893, 830, 0, 858,
	0, 908, 766, 850, 0, 769, 773, 904, 886, 801,
	249, 0, 0, 0, 0, 0, 0, 0, 827, 837,
	870, 821, 0, 0, 0, 0, 0, 0, 0, 799,
	0, 846, 0, 0, 0, 778, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 825, 0,
	0, 0, 781, 0, 800, 871, 0, 763, 268, 775,
	341, 231, 0, 875, 885, 822, 472, 889, 820, 819,
	865, 779, 881, 813, 309, 777, 293, 188, 205, 0,
	811, 351, 392, 398, 880, 796, 805, 229, 803, 396,
	365, 456, 213, 257, 389, 370, 394, 377, 260, 845,
	863, 395, 315, 443, 384, 453, 473, 474, 237, 345,
	463, 432, 469, 485, 206, 234, 359, 425, 459, 416,
	338, 439, 440, 292, 415, 266, 191, 313, 479, 204,
	404, 221, 211, 197, 427, 451, 218, 407, 0, 0,
	487, 199, 449, 424, 334, 289, 290, 198, 0, 388,
	242, 264, 232, 354, 446, 447, 230, 488, 208, 468,
	201, 1089, 467, 347, 442, 450, 335, 325, 200, 448,
	333, 324, 295, 253, 275, 382, 318, 383, 276, 343,
	342, 344, 194, 460, 0, 195, 0, 421, 461, 489,
	214, 215, 216, 791, 252, 256, 263, 265, 271, 272,
	279, 311, 358, 381, 379, 385, 876, 437, 454, 464,
	471, 477, 478, 480, 481, 482, 483, 484, 346, 278,
	417, 294, 316, 868, 907, 364, 397, 219, 458, 418,
	786, 790, 784, 785, 840, 841, 787, 898, 899, 900,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 0, 872,
	780, 0, 788, 789, 0, 878, 887, 888, 508, 326,
	409, 455, 296, 301, 304, 844, 187, 202, 312, 903,
	386, 261, 486, 466, 462, 765, 783, 236, 794, 802,
	0, 808, 816, 817, 829, 831, 832, 833, 834, 851,
	852, 854, 862, 864, 867, 869, 874, 884, 906, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	843, 849, 323, 254, 273, 284, 857, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 839, 866, 319, 435,
	436, 280, 892, 877, 434, 0, 824, 895, 793, 812,
	905, 815, 818, 859, 772, 838, 355, 809, 764, 797,
	767, 804, 768, 795, 826, 244, 792, 879, 842, 894,
	310, 241, 774, 798, 369, 814, 193, 861, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 901, 314, 848, 0, 419, 340, 0, 0,
	0, 828, 883, 836, 873, 823, 860, 782, 847, 896,
	810, 856, 897, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 806,
	853, 891, 807, 855, 239, 285, 246, 238, 438, 902,
	882, 771, 835, 890, 0, 0, 909, 337, 893, 830,
	0, 858, 0, 908, 766, 850, 0, 769, 773, 904,
	886, 801, 249, 0, 0, 0, 0, 0, 0, 0,
	827, 837, 870, 821, 0, 0, 0, 0, 0, 0,
	0, 799, 0, 846, 0, 0, 0, 778, 770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	825, 0, 0, 0, 781, 0, 800, 871, 0, 763,
	268, 775, 341, 231, 0, 875, 885, 822, 472, 889,
	820, 819, 865, 779, 881, 813, 309, 777, 293, 188,
	205, 0, 811, 351, 392, 398, 880, 796, 805, 229,
	803, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 845, 863, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 485, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 487, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 488,
	208, 468, 201, 776, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 489, 214, 215, 216, 791, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 876, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	762, 756, 755, 294, 316, 868, 907, 364, 397, 219,
	458, 418, 786, 790, 784, 785, 840, 841, 787, 898,
	899, 900, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	0, 872, 780, 0, 788, 789, 0, 878, 887, 888,
	508, 326, 409, 455, 296, 301, 304, 844, 187, 202,
	312, 903, 386, 261, 486, 466, 462, 765, 783, 236,
	794, 802, 0, 808, 816, 817, 829, 831, 832, 833,
	834, 851, 852, 854, 862, 864, 867, 869, 874, 884,
	906, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 843, 849, 323, 254, 273, 284, 857, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 839, 866,
	319, 435, 436, 280, 892, 877, 434, 0, 824, 895,
	793, 812, 905, 815, 818, 859, 772, 838, 355, 809,
	764, 797, 767, 804, 768, 795, 826, 244, 792, 879,
	842, 894, 310, 241, 774, 798, 369, 814, 193, 861,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 901, 314, 848, 0, 419, 340,
	0, 0, 0, 828, 883, 836, 873, 823, 860, 782,
	847, 896, 810, 856, 897, 287, 226, 192, 352, 420,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 806, 853, 891, 807, 855, 239, 285, 246, 238,
	438, 902, 882, 771, 835, 890, 0, 0, 909, 337,
	893, 830, 0, 858, 0, 908, 766, 850, 0, 769,
	773, 904, 886, 801, 249, 0, 0, 0, 0, 0,
	0, 0, 827, 837, 870, 821, 0, 0, 0, 0,
	0, 0, 0, 799, 0, 846, 0, 0, 0, 778,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 825, 0, 0, 0, 781, 0, 800, 871,
	0, 763, 268, 775, 341, 231, 0, 875, 885, 822,
	472, 889, 820, 819, 865, 779, 881, 813, 309, 777,
	293, 188, 205, 0, 811, 351, 392, 398, 880, 796,
	805, 229, 803, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 845, 863, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 485, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 1285,
	218, 407, 0, 0, 487, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 488, 208, 468, 201, 776, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 489, 214, 215, 216, 791, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	876, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 762, 756, 755, 294, 316, 868, 907, 364,
	397, 219, 458, 418, 786, 790, 784, 785, 840, 841,
	787, 898, 899, 900, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 0, 872, 780, 0, 788, 789, 0, 878,
	887, 888, 508, 326, 409, 455, 296, 301, 304, 844,
	187, 202, 312, 903, 386, 261, 486, 466, 462, 765,
	783, 236, 794, 802, 0, 808, 816, 817, 829, 831,
	832, 833, 834, 851, 852, 854, 862, 864, 867, 869,
	874, 884, 906, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 322, 328,
	329, 330, 331, 348, 349, 350, 353, 356, 357, 360,
	362, 363, 366, 373, 374, 375, 376, 378, 380, 387,
	391, 399, 400, 401, 402, 403, 405, 406, 411, 412,
	413, 414, 422, 426, 444, 445, 457, 470, 475, 270,
	452, 476, 0, 321, 843, 849, 323, 254, 273, 284,
	857, 465, 423, 207, 393, 262, 196, 225, 210, 233,
	248, 251, 288, 332, 339, 368, 372, 267, 245, 223,
	390, 220, 408, 429, 430, 431, 433, 336, 240, 371,
	839, 866, 319, 435, 436, 280, 892, 877, 434, 0,
	824, 895, 793, 812, 905, 815, 818, 859, 772, 838,
	355, 809, 764, 797, 767, 804, 768, 795, 826, 244,
	792, 879, 842, 894, 310, 241, 774, 798, 369, 814,
	193, 861, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 901, 314, 848, 0,
	419, 340, 0, 0, 0, 828, 883, 836, 873, 823,
	860, 782, 847, 896, 810, 856, 897, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 806, 853, 891, 807, 855, 239, 285,
	246, 238, 438, 902, 882, 771, 835, 890, 0, 0,
	909, 337, 893, 830, 0, 858, 0, 908, 766, 850,
	0, 769, 773, 904, 886, 801, 249, 0, 0, 0,
	0, 0, 0, 0, 827, 837, 870, 821, 0, 0,
	0, 0, 0, 0, 0, 799, 0, 846, 0, 0,
	0, 778, 770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 825, 0, 0, 0, 781, 0,
	800, 871, 0, 763, 268, 775, 341, 231, 0, 875,
	885, 822, 472, 889, 820, 819, 865, 779, 881, 813,
	309, 777, 293, 188, 205, 0, 811, 351, 392, 398,
	880, 796, 805, 229, 803, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 845, 863, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 485,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 753, 218, 407, 0, 0, 487, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 488, 208, 468, 201, 776, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 489, 214, 215, 216, 791,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 876, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 762, 756, 755, 294, 316, 868,
	907, 364, 397, 219, 458, 418, 786, 790, 784, 785,
	840, 841, 787, 898, 899, 900, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 0, 872, 780, 0, 788, 789,
	0, 878, 887, 888, 508, 326, 409, 455, 296, 301,
	304, 844, 187, 202, 312, 903, 386, 261, 486, 466,
	462, 765, 783, 236, 794, 802, 0, 808, 816, 817,
	829, 831, 832, 833, 834, 851, 852, 854, 862, 864,
	867, 869, 874, 884, 906, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	322, 328, 329, 330, 331, 348, 349, 350, 353, 356,
	357, 360, 362, 363, 366, 373, 374, 375, 376, 378,
	380, 387, 391, 399, 400, 401, 402, 403, 405, 406,
	411, 412, 413, 414, 422, 426, 444, 445, 457, 470,
	475, 270, 452, 476, 0, 321, 843, 849, 323, 254,
	273, 284, 857, 465, 423, 207, 393, 262, 196, 225,
	210, 233, 248, 251, 288, 332, 339, 368, 372, 267,
	245, 223, 390, 220, 408, 429, 430, 431, 433, 336,
	240, 371, 839, 866, 319, 435, 436, 280, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 1655, 0, 589, 0, 0, 0, 244,
	594, 0, 0, 0, 310, 241, 0, 1656, 369, 0,
	193, 0, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 601, 314, 0, 0,
	419, 340, 0, 0, 0, 0, 0, 596, 597, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	352, 420, 259, 0, 87, 0, 0, 184, 185, 186,
	648, 655, 656, 657, 658, 659, 649, 651, 0, 0,
	217, 650, 224, 612, 614, 613, 621, 622, 623, 624,
	625, 626, 627, 610, 653, 660, 661, 0, 239, 285,
	246, 238, 438, 0, 0, 0, 0, 0, 0, 0,
	209, 337, 0, 0, 0, 0, 0, 0, 0, 572,
	586, 0, 600, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 584, 742, 0, 0, 0, 633, 0, 585,
	0, 0, 593, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 341, 231, 0, 632,
	0, 0, 472, 0, 0, 630, 0, 0, 0, 0,
	309, 0, 293, 188, 205, 0, 0, 351, 392, 398,
	0, 0, 0, 229, 0, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 0, 0, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 485,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 487, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 488, 208, 468, 201, 0, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 489, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 0, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 346, 278, 417, 294, 316, 0,
	0, 364, 397, 219, 458, 418, 639, 631, 605, 607,
	640, 641, 602, 603, 606, 642, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 0, 634, 592, 591, 0, 598,
	599, 0, 608, 609, 611, 615, 616, 617, 618, 619,
	620, 590, 187, 202, 312, 0, 386, 261, 486, 466,
	462, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	322, 328, 329, 330, 331, 348, 349, 350, 353, 356,
	357, 360, 362, 363, 366, 373, 374, 375, 376, 378,
	380, 387, 391, 399, 400, 401, 402, 403, 405, 406,
	411, 412, 413, 414, 422, 426, 444, 445, 457, 470,
	475, 270, 452, 476, 0, 321, 0, 0, 323, 254,
	273, 284, 0, 465, 423, 207, 393, 262, 196, 225,
	210, 233, 248, 251, 288, 332, 339, 368, 372, 267,
	245, 223, 390, 220, 408, 429, 430, 431, 433, 336,
	240, 371, 434, 0, 319, 435, 436, 280, 0, 0,
	0, 0, 0, 0, 355, 0, 0, 0, 0, 589,
	0, 0, 0, 244, 594, 0, 0, 0, 310, 241,
	0, 0, 369, 0, 193, 0, 410, 228, 320, 317,
	441, 255, 247, 243, 227, 281, 327, 367, 428, 361,
	601, 314, 0, 0, 419, 340, 0, 0, 0, 0,
	0, 596, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 352, 420, 259, 0, 87, 0,
	0, 184, 185, 186, 648, 655, 656, 657, 658, 659,
	649, 651, 0, 0, 217, 650, 224, 612, 614, 613,
	621, 622, 623, 624, 625, 626, 627, 610, 653, 660,
	661, 0, 239, 285, 246, 238, 438, 0, 0, 1637,
	1638, 1639, 0, 0, 209, 337, 0, 0, 0, 0,
	0, 0, 0, 572, 586, 0, 600, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 583, 584, 0, 0, 0,
	0, 633, 0, 585, 0, 0, 593, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 595, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	341, 231, 0, 632, 0, 0, 472, 0, 0, 630,
	0, 0, 0, 0, 309, 0, 293, 188, 205, 0,
	0, 351, 392, 398, 0, 0, 0, 229, 0, 396,
	365, 456, 213, 257, 389, 370, 394, 377, 260, 0,
	0, 395, 315, 443, 384, 453, 473, 474, 237, 345,
	463, 432, 469, 485, 206, 234, 359, 425, 459, 416,
	338, 439, 440, 292, 415, 266, 191, 313, 479, 204,
	404, 221, 211, 197, 427, 451, 218, 407, 0, 0,
	487, 199, 449, 424, 334, 289, 290, 198, 0, 388,
	242, 264, 232, 354, 446, 447, 230, 488, 208, 468,
	201, 0, 467, 347, 442, 450, 335, 325, 200, 448,
	333, 324, 295, 253, 275, 382, 318, 383, 276, 343,
	342, 344, 194, 460, 0, 195, 0, 421, 461, 489,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 311, 358, 381, 379, 385, 0, 437, 454, 464,
	471, 477, 478, 480, 481, 482, 483, 484, 346, 278,
	417, 294, 316, 0, 0, 364, 397, 219, 458, 418,
	639, 631, 605, 607, 640, 641, 602, 603, 606, 642,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 0, 634,
	592, 591, 0, 598, 599, 0, 608, 609, 611, 615,
	616, 617, 618, 619, 620, 590, 187, 202, 312, 0,
	386, 261, 486, 466, 462, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	0, 0, 323, 254, 273, 284, 0, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 434, 0, 319, 435,
	436, 280, 0, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 589, 0, 0, 0, 244, 594, 0,
	0, 0, 310, 241, 0, 0, 369, 0, 193, 0,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 601, 314, 0, 0, 419, 340,
	0, 0, 0, 0, 0, 596, 597, 0, 0, 0,
	0, 0, 0, 1737, 0, 287, 226, 192, 352, 420,
	259, 0, 87, 0, 0, 184, 185, 186, 648, 655,
	656, 657, 658, 659, 649, 651, 0, 0, 217, 650,
	224, 612, 614, 613, 621, 622, 623, 624, 625, 626,
	627, 610, 653, 660, 661, 1738, 239, 285, 246, 238,
	438, 0, 0, 0, 0, 0, 0, 0, 209, 337,
	0, 0, 0, 0, 0, 0, 0, 572, 586, 0,
	600, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 583,
	584, 0, 0, 0, 0, 633, 0, 585, 0, 0,
	593, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 341, 231, 0, 632, 0, 0,
	472, 0, 0, 630, 0, 0, 0, 0, 309, 0,
	293, 188, 205, 0, 0, 351, 392, 398, 0, 0,
	0, 229, 0, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 0, 0, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 485, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 451,
	218, 407, 0, 0, 487, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 488, 208, 468, 201, 0, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 489, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	0, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 346, 278, 417, 294, 316, 0, 0, 364,
	397, 219, 458, 418, 639, 631, 605, 607, 640, 641,
	602, 603, 606, 642, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 0, 634, 592, 591, 0, 598, 599, 0,
	608, 609, 611, 615, 616, 617, 618, 619, 620, 590,
	187, 202, 312, 0, 386, 261, 486, 466, 462, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 322, 328,
	329, 330, 331, 348, 349, 350, 353, 356, 357, 360,
	362, 363, 366, 373, 374, 375, 376, 378, 380, 387,
	391, 399, 400, 401, 402, 403, 405, 406, 411, 412,
	413, 414, 422, 426, 444, 445, 457, 470, 475, 270,
	452, 476, 0, 321, 0, 0, 323, 254, 273, 284,
	0, 465, 423, 207, 393, 262, 196, 225, 210, 233,
	248, 251, 288, 332, 339, 368, 372, 267, 245, 223,
	390, 220, 408, 429, 430, 431, 433, 336, 240, 371,
	78, 434, 319, 435, 436, 280, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 589, 0,
	0, 0, 244, 594, 0, 0, 0, 310, 241, 0,
	0, 369, 0, 193, 0, 410, 228, 320, 317, 441,
	255, 247, 243, 227, 281, 327, 367, 428, 361, 601,
	314, 0, 0, 419, 340, 0, 0, 0, 0, 0,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 352, 420, 259, 0, 87, 0, 0,
	184, 185, 186, 648, 655, 656, 657, 658, 659, 649,
	651, 0, 0, 217, 650, 224, 612, 614, 613, 621,
	622, 623, 624, 625, 626, 627, 610, 653, 660, 661,
	0, 239, 285, 246, 238, 438, 0, 0, 0, 0,
	0, 0, 0, 209, 337, 0, 0, 0, 0, 0,
	0, 0, 572, 586, 0, 600, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 584, 0, 0, 0, 0,
	633, 0, 585, 0, 0, 593, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 595, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 341,
	231, 0, 632, 0, 0, 472, 0, 0, 630, 0,
	0, 0, 0, 309, 0, 293, 188, 205, 0, 0,
	351, 392, 398, 0, 0, 0, 229, 0, 396, 365,
	456, 213, 257, 389, 370, 394, 377, 260, 0, 0,
	395, 315, 443, 384, 453, 473, 474, 237, 345, 463,
	432, 469, 485, 206, 234, 359, 425, 459, 416, 338,
	439, 440, 292, 415, 266, 191, 313, 479, 204, 404,
	221, 211, 197, 427, 451, 218, 407, 0, 0, 487,
	199, 449, 424, 334, 289, 290, 198, 0, 388, 242,
	264, 232, 354, 446, 447, 230, 488, 208, 468, 201,
	0, 467, 347, 442, 450, 335, 325, 200, 448, 333,
	324, 295, 253, 275, 382, 318, 383, 276, 343, 342,
	344, 194, 460, 0, 195, 0, 421, 461, 489, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	311, 358, 381, 379, 385, 0, 437, 454, 464, 471,
	477, 478, 480, 481, 482, 483, 484, 346, 278, 417,
	294, 316, 0, 0, 364, 397, 219, 458, 418, 639,
	631, 605, 607, 640, 641, 602, 603, 606, 642, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 0, 634, 592,
	591, 0, 598, 599, 0, 608, 609, 611, 615, 616,
	617, 618, 619, 620, 590, 187, 202, 312, 86, 386,
	261, 486, 466, 462, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 322, 328, 329, 330, 331, 348, 349,
	350, 353, 356, 357, 360, 362, 363, 366, 373, 374,
	375, 376, 378, 380, 387, 391, 399, 400, 401, 402,
	403, 405, 406, 411, 412, 413, 414, 422, 426, 444,
	445, 457, 470, 475, 270, 452, 476, 0, 321, 0,
	0, 323, 254, 273, 284, 0, 465, 423, 207, 393,
	262, 196, 225, 210, 233, 248, 251, 288, 332, 339,
	368, 372, 267, 245, 223, 390, 220, 408, 429, 430,
	431, 433, 336, 240, 371, 434, 0, 319, 435, 436,
	280, 0, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 0, 589, 0, 0, 0, 244, 594, 0, 0,
	0, 310, 241, 0, 0, 369, 0, 193, 0, 410,
	228, 320, 317, 441, 255, 247, 243, 227, 281, 327,
	367, 428, 361, 601, 314, 0, 0, 419, 340, 0,
	0, 0, 0, 0, 596, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 352, 420, 259,
	0, 87, 0, 0, 184, 185, 186, 648, 655, 656,
	657, 658, 659, 649, 651, 0, 0, 217, 650, 224,
	612, 614, 613, 621, 622, 623, 624, 625, 626, 627,
	610, 653, 660, 661, 0, 239, 285, 246, 238, 438,
	0, 0, 0, 0, 0, 0, 0, 209, 337, 0,
	0, 0, 0, 0, 0, 0, 572, 586, 0, 600,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 583, 584,
	0, 0, 0, 0, 633, 0, 585, 0, 0, 593,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 341, 231, 0, 632, 0, 0, 472,
	0, 0, 630, 0, 0, 0, 0, 309, 0, 293,
	188, 205, 0, 0, 351, 392, 398, 0, 0, 0,
	229, 0, 396, 365, 456, 213, 257, 389, 370, 394,
	377, 260, 2635, 0, 395, 315, 443, 384, 453, 473,
	474, 237, 345, 463, 432, 469, 485, 206, 234, 359,
	425, 459, 416, 338, 439, 440, 292, 415, 266, 191,
	313, 479, 204, 404, 221, 211, 197, 427, 451, 218,
	407, 0, 0, 487, 199, 449, 424, 334, 289, 290,
	198, 0, 388, 242, 264, 232, 354, 446, 447, 230,
	488, 208, 468, 201, 0, 467, 347, 442, 450, 335,
	325, 200, 448, 333, 324, 295, 253, 275, 382, 318,
	383, 276, 343, 342, 344, 194, 460, 0, 195, 0,
	421, 461, 489, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 311, 358, 381, 379, 385, 0,
	437, 454, 464, 471, 477, 478, 480, 481, 482, 483,
	484, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 639, 631, 605, 607, 640, 641, 602,
	603, 606, 642, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 0, 634, 592, 591, 0, 598, 599, 0, 608,
	609, 611, 615, 616, 617, 618, 619, 620, 590, 187,
	202, 312, 0, 386, 261, 486, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 589, 0, 0, 0,
	244, 594, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 601, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 596, 597,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 87, 0, 1252, 184, 185,
	186, 648, 655, 656, 657, 658, 659, 649, 651, 0,
	0, 217, 650, 224, 612, 614, 613, 621, 622, 623,
	624, 625, 626, 627, 610, 653, 660, 661, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	572, 586, 0, 600, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 583, 584, 0, 0, 0, 0, 633, 0,
	585, 0, 0, 593, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	632, 0, 0, 472, 0, 0, 630, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	485, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 487, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 488, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 489, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 346, 278, 417, 294, 316,
	0, 0, 364, 397, 219, 458, 418, 639, 631, 605,
	607, 640, 641, 602, 603, 606, 642, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 0, 634, 592, 591, 0,
	598, 599, 0, 608, 609, 611, 615, 616, 617, 618,
	619, 620, 590, 187, 202, 312, 0, 386, 261, 486,
	466, 462, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 322, 328, 329, 330, 331, 348, 349, 350, 353,
	356, 357, 360, 362, 363, 366, 373, 374, 375, 376,
	378, 380, 387, 391, 399, 400, 401, 402, 403, 405,
	406, 411, 412, 413, 414, 422, 426, 444, 445, 457,
	470, 475, 270, 452, 476, 0, 321, 0, 0, 323,
	254, 273, 284, 0, 465, 423, 207, 393, 262, 196,
	225, 210, 233, 248, 251, 288, 332, 339, 368, 372,
	267, 245, 223, 390, 220, 408, 429, 430, 431, 433,
	336, 240, 371, 434, 0, 319, 435, 436, 280, 0,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	589, 0, 0, 0, 244, 594, 0, 0, 0, 310,
	241, 0, 0, 369, 0, 193, 0, 410, 228, 320,
	317, 441, 255, 247, 243, 227, 281, 327, 367, 428,
	361, 601, 314, 0, 0, 419, 340, 0, 0, 0,
	0, 0, 596, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 352, 420, 259, 0, 87,
	0, 0, 184, 185, 186, 648, 655, 656, 657, 658,
	659, 649, 651, 0, 0, 217, 650, 224, 612, 614,
	613, 621, 622, 623, 624, 625, 626, 627, 610, 653,
	660, 661, 0, 239, 285, 246, 238, 438, 0, 0,
	0, 0, 0, 0, 0, 209, 337, 0, 0, 0,
	0, 0, 0, 0, 572, 586, 0, 600, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 583, 584, 742, 0,
	0, 0, 633, 0, 585, 0, 0, 593, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 683,
	684, 685, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 595,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 341, 231, 0, 632, 0, 0, 472, 0, 0,
	630, 0, 0, 0, 0, 309, 0, 293, 188, 205,
	0, 0, 351, 392, 398, 0, 0, 0, 229, 0,
	396, 365, 456, 213, 257, 389, 370, 394, 377, 260,
	0, 0, 395, 315, 443, 384, 453, 473, 474, 237,
	345, 463, 432, 469, 485, 206, 234, 359, 425, 459,
	416, 338, 439, 440, 292, 415, 266, 191, 313, 479,
	204, 404, 221, 211, 197, 427, 451, 218, 407, 0,
	0, 487, 199, 449, 424, 334, 289, 290, 198, 0,
	388, 242, 264, 232, 354, 446, 447, 230, 488, 208,
	468, 201, 0, 467, 347, 442, 450, 335, 325, 200,
	448, 333, 324, 295, 253, 275, 382, 318, 383, 276,
	343, 342, 344, 194, 460, 0, 195, 0, 421, 461,
	489, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 311, 358, 381, 379, 385, 0, 437, 454,
	464, 471, 477, 478, 480, 481, 482, 483, 484, 346,
	278, 417, 294, 316, 0, 0, 364, 397, 219, 458,
	418, 639, 631, 605, 607, 640, 641, 602, 603, 606,
	642, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 0,
	634, 592, 591, 0, 598, 599, 0, 608, 609, 611,
	615, 616, 617, 618, 619, 620, 590, 187, 202, 312,
	0, 386, 261, 486, 466, 462, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 322, 328, 329, 330, 331,
	348, 349, 350, 353, 356, 357, 360, 362, 363, 366,
	373, 374, 375, 376, 378, 380, 387, 391, 399, 400,
	401, 402, 403, 405, 406, 411, 412, 413, 414, 422,
	426, 444, 445, 457, 470, 475, 270, 452, 476, 0,
	321, 0, 0, 323, 254, 273, 284, 0, 465, 423,
	207, 393, 262, 196, 225, 210, 233, 248, 251, 288,
	332, 339, 368, 372, 267, 245, 223, 390, 220, 408,
	429, 430, 431, 433, 336, 240, 371, 434, 0, 319,
	435, 436, 280, 0, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 589, 0, 0, 0, 244, 594,
	0, 0, 0, 310, 241, 0, 0, 369, 0, 193,
	0, 410, 228, 320, 317, 441, 255, 247, 243, 227,
	281, 327, 367, 428, 361, 601, 314, 0, 0, 419,
	340, 0, 0, 0, 0, 0, 596, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 352,
	420, 259, 0, 87, 0, 0, 184, 185, 186, 648,
	655, 656, 657, 658, 659, 649, 651, 0, 0, 217,
	650, 224, 612, 614, 613, 621, 622, 623, 624, 625,
	626, 627, 610, 653, 660, 661, 0, 239, 285, 246,
	238, 438, 0, 0, 0, 0, 0, 0, 0, 209,
	337, 0, 0, 0, 0, 0, 0, 0, 572, 586,
	0, 600, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	583, 584, 0, 0, 0, 0, 633, 0, 585, 0,
	0, 593, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 341, 231, 0, 632, 0,
	0, 472, 0, 0, 630, 0, 0, 0, 0, 309,
	0, 293, 188, 205, 0, 0, 351, 392, 398, 0,
	0, 0, 229, 0, 396, 365, 456, 213, 257, 389,
	370, 394, 377, 260, 0, 0, 395, 315, 443, 384,
	453, 473, 474, 237, 345, 463, 432, 469, 485, 206,
	234, 359, 425, 459, 416, 338, 439, 440, 292, 415,
	266, 191, 313, 479, 204, 404, 221, 211, 197, 427,
	451, 218, 407, 0, 0, 487, 199, 449, 424, 334,
	289, 290, 198, 0, 388, 242, 264, 232, 354, 446,
	447, 230, 488, 208, 468, 201, 0, 467, 347, 442,
	450, 335, 325, 200, 448, 333, 324, 295, 253, 275,
	382, 318, 383, 276, 343, 342, 344, 194, 460, 0,
	195, 0, 421, 461, 489, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 311, 358, 381, 379,
	385, 0, 437, 454, 464, 471, 477, 478, 480, 481,
	482, 483, 484, 346, 278, 417, 294, 316, 0, 0,
	364, 397, 219, 458, 418, 639, 631, 605, 607, 640,
	641, 602, 603, 606, 642, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 0, 634, 592, 591, 0, 598, 599,
	0, 608, 609, 611, 615, 616, 617, 618, 619, 620,
	590, 187, 202, 312, 0, 386, 261, 486, 466, 462,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 322,
	328, 329, 330, 331, 348, 349, 350, 353, 356, 357,
	360, 362, 363, 366, 373, 374, 375, 376, 378, 380,
	387, 391, 399, 400, 401, 402, 403, 405, 406, 411,
	412, 413, 414, 422, 426, 444, 445, 457, 470, 475,
	270, 452, 476, 0, 321, 0, 0, 323, 254, 273,
	284, 0, 465, 423, 207, 393, 262, 196, 225, 210,
	233, 248, 251, 288, 332, 339, 368, 372, 267, 245,
	223, 390, 220, 408, 429, 430, 431, 433, 336, 240,
	371, 434, 0, 319, 435, 436, 280, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 589, 0,
	0, 0, 244, 594, 0, 0, 0, 310, 241, 0,
	0, 369, 0, 193, 0, 410, 228, 320, 317, 441,
	255, 247, 243, 227, 281, 327, 367, 428, 361, 601,
	314, 0, 0, 419, 340, 0, 0, 0, 0, 0,
	596, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 352, 420, 259, 0, 87, 0, 0,
	184, 185, 186, 648, 655, 656, 657, 658, 659, 649,
	651, 0, 0, 217, 650, 224, 612, 614, 613, 621,
	622, 623, 624, 625, 626, 627, 610, 653, 660, 661,
	0, 239, 285, 246, 238, 438, 0, 0, 0, 0,
	0, 0, 0, 209, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 600, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 584, 0, 0, 0, 0,
	633, 0, 585, 0, 0, 593, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 595, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 341,
	231, 0, 632, 0, 0, 472, 0, 0, 630, 0,
	0, 0, 0, 309, 0, 293, 188, 205, 0, 0,
	351, 392, 398, 0, 0, 0, 229, 0, 396, 365,
	456, 213, 257, 389, 370, 394, 377, 260, 0, 0,
	395, 315, 443, 384, 453, 473, 474, 237, 345, 463,
	432, 469, 485, 206, 234, 359, 425, 459, 416, 338,
	439, 440, 292, 415, 266, 191, 313, 479, 204, 404,
	221, 211, 197, 427, 451, 218, 407, 0, 0, 487,
	199, 449, 424, 334, 289, 290, 198, 0, 388, 242,
	264, 232, 354, 446, 447, 230, 488, 208, 468, 201,
	0, 467, 347, 442, 450, 335, 325, 200, 448, 333,
	324, 295, 253, 275, 382, 318, 383, 276, 343, 342,
	344, 194, 460, 0, 195, 0, 421, 461, 489, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	311, 358, 381, 379, 385, 0, 437, 454, 464, 471,
	477, 478, 480, 481, 482, 483, 484, 346, 278, 417,
	294, 316, 0, 0, 364, 397, 219, 458, 418, 639,
	631, 605, 607, 640, 641, 602, 603, 606, 642, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 0, 634, 592,
	591, 0, 598, 599, 0, 608, 609, 611, 615, 616,
	617, 618, 619, 620, 590, 187, 202, 312, 0, 386,
	261, 486, 466, 462, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 322, 328, 329, 330, 331, 348, 349,
	350, 353, 356, 357, 360, 362, 363, 366, 373, 374,
	375, 376, 378, 380, 387, 391, 399, 400, 401, 402,
	403, 405, 406, 411, 412, 413, 414, 422, 426, 444,
	445, 457, 470, 475, 270, 452, 476, 0, 321, 0,
	0, 323, 254, 273, 284, 0, 465, 423, 207, 393,
	262, 196, 225, 210, 233, 248, 251, 288, 332, 339,
	368, 372, 267, 245, 223, 390, 220, 408, 429, 430,
	431, 433, 336, 240, 371, 434, 0, 319, 435, 436,
	280, 0, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 310, 241, 0, 0, 369, 0, 193, 0, 410,
	228, 320, 317, 441, 255, 247, 243, 227, 281, 327,
	367, 428, 361, 0, 314, 0, 0, 419, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 352, 420, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 655, 656,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 438,
	0, 0, 0, 0, 0, 0, 0, 209, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 341, 231, 0, 0, 0, 0, 472,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 293,
	188, 205, 0, 0, 351, 392, 398, 0, 0, 0,
	229, 0, 396, 365, 456, 213, 257, 389, 370, 394,
	377, 260, 0, 0, 395, 315, 443, 384, 453, 473,
	474, 237, 345, 463, 432, 469, 485, 206, 234, 359,
	425, 459, 416, 338, 439, 440, 292, 415, 266, 191,
	313, 479, 204, 404, 221, 211, 197, 427, 451, 218,
	407, 0, 0, 487, 199, 449, 424, 334, 289, 290,
	198, 0, 388, 242, 264, 232, 354, 446, 447, 230,
	488, 208, 468, 201, 0, 467, 347, 442, 450, 335,
	325, 200, 448, 333, 324, 295, 253, 275, 382, 318,
	383, 276, 343, 342, 344, 194, 460, 0, 195, 0,
	421, 461, 489, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 311, 358, 381, 379, 385, 0,
	437, 454, 464, 471, 477, 478, 480, 481, 482, 483,
	484, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 486, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 956, 472, 0, 0, 0, 0, 0, 953,
	954, 309, 917, 293, 188, 205, 947, 951, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	485, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 487, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 488, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 489, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 346, 278, 417, 294, 316,
	0, 0, 364, 397, 219, 458, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 508, 326, 409, 455, 296,
	301, 304, 0, 187, 202, 312, 0, 386, 261, 486,
	466, 462, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 322, 328, 329, 330, 331, 348, 349, 350, 353,
	356, 357, 360, 362, 363, 366, 373, 374, 375, 376,
	378, 380, 387, 391, 399, 400, 401, 402, 403, 405,
	406, 411, 412, 413, 414, 422, 426, 444, 445, 457,
	470, 475, 270, 452, 476, 0, 321, 0, 0, 323,
	254, 273, 284, 0, 465, 423, 207, 393, 262, 196,
	225, 210, 233, 248, 251, 288, 332, 339, 368, 372,
	267, 245, 223, 390, 220, 408, 429, 430, 431, 433,
	336, 240, 371, 78, 434, 319, 435, 436, 280, 0,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	87, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 485, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 487, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 488,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 489, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	346, 278, 417, 294, 316, 0, 0, 364, 397, 219,
	458, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	508, 326, 409, 455, 296, 301, 304, 0, 187, 202,
	312, 86, 386, 261, 486, 466, 462, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 1725, 0, 0, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 0, 0, 323, 254, 273, 284, 0, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 434, 0,
	319, 435, 436, 280, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 1273, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 310, 241, 0, 0, 369, 0,
	193, 0, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 0, 314, 0, 0,
	419, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 438, 0, 0, 0, 0, 0, 0, 0,
	209, 1271, 0, 0, 0, 1121, 0, 1122, 1123, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 341, 231, 0, 0,
	0, 0, 472, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 293, 188, 205, 0, 0, 351, 392, 398,
	0, 0, 0, 229, 0, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 0, 0, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 485,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 487, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 488, 208, 468, 201, 0, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 489, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 0, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 346, 278, 417, 294, 316, 0,
	0, 364, 397, 219, 458, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 508, 326, 409, 455, 296, 301,
	304, 0, 187, 202, 312, 0, 386, 261, 486, 466,
	462, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	322, 328, 329, 330, 331, 348, 349, 350, 353, 356,
	357, 360, 362, 363, 366, 373, 374, 375, 376, 378,
	380, 387, 391, 399, 400, 401, 402, 403, 405, 406,
	411, 412, 413, 414, 422, 426, 444, 445, 457, 470,
	475, 270, 452, 476, 0, 321, 0, 0, 323, 254,
	273, 284, 0, 465, 423, 207, 393, 262, 196, 225,
	210, 233, 248, 251, 288, 332, 339, 368, 372, 267,
	245, 223, 390, 220, 408, 429, 430, 431, 433, 336,
	240, 371, 434, 0, 319, 435, 436, 280, 0, 0,
	0, 0, 0, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 310, 241,
	0, 0, 369, 0, 193, 0, 410, 228, 320, 317,
	441, 255, 247, 243, 227, 281, 327, 367, 428, 361,
	0, 314, 0, 0, 419, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 352, 420, 259, 0, 0, 0,
	0, 184, 185, 186, 1214, 1217, 0, 0, 0, 0,
	1213, 1216, 0, 0, 217, 1212, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 438, 0, 0, 0,
	0, 0, 0, 0, 209, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	341, 231, 0, 0, 0, 0, 472, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 293, 188, 205, 0,
	0, 351, 392, 398, 0, 0, 0, 229, 0, 396,
	365, 456, 213, 257, 389, 370, 394, 377, 260, 0,
	0, 395, 315, 443, 384, 453, 473, 474, 237, 345,
	463, 432, 469, 485, 206, 234, 359, 425, 459, 416,
	338, 439, 440, 292, 415, 266, 191, 313, 479, 204,
	404, 221, 211, 197, 427, 451, 218, 407, 0, 0,
	487, 199, 449, 424, 334, 289, 290, 198, 0, 388,
	242, 264, 232, 354, 446, 447, 230, 488, 208, 468,
	201, 0, 467, 347, 442, 450, 335, 325, 200, 448,
	333, 324, 295, 253, 275, 382, 318, 383, 276, 343,
	342, 344, 194, 460, 0, 195, 0, 421, 461, 489,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 311, 358, 381, 379, 385, 0, 437, 454, 464,
	471, 477, 478, 480, 481, 482, 483, 484, 346, 278,
	417, 294, 316, 0, 0, 364, 397, 219, 458, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 326,
	409, 455, 296, 301, 304, 0, 187, 202, 312, 0,
	386, 261, 486, 466, 462, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	0, 0, 323, 254, 273, 284, 0, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 78, 434, 319, 435,
	436, 280, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 310, 241, 0, 0, 369, 0, 193,
	0, 410, 228, 320, 317, 441, 255, 247, 243, 227,
	281, 327, 367, 428, 361, 0, 314, 0, 0, 419,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 352,
	420, 259, 0, 87, 0, 1252, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 438, 0, 0, 0, 0, 0, 0, 0, 209,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 341, 231, 0, 0, 0,
	0, 472, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 293, 188, 205, 0, 0, 351, 392, 398, 0,
	0, 0, 229, 0, 396, 365, 456, 213, 257, 389,
	370, 394, 377, 260, 0, 0, 395, 315, 443, 384,
	453, 473, 474, 237, 345, 463, 432, 469, 485, 206,
	234, 359, 425, 459, 416, 338, 439, 440, 292, 415,
	266, 191, 313, 479, 204, 404, 221, 211, 197, 427,
	451, 218, 407, 0, 0, 487, 199, 449, 424, 334,
	289, 290, 198, 0, 388, 242, 264, 232, 354, 446,
	447, 230, 488, 208, 468, 201, 0, 467, 347, 442,
	450, 335, 325, 200, 448, 333, 324, 295, 253, 275,
	382, 318, 383, 276, 343, 342, 344, 194, 460, 0,
	195, 0, 421, 461, 489, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 311, 358, 381, 379,
	385, 0, 437, 454, 464, 471, 477, 478, 480, 481,
	482, 483, 484, 346, 278, 417, 294, 316, 0, 0,
	364, 397, 219, 458, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 508, 326, 409, 455, 296, 301, 304,
	0, 187, 202, 312, 86, 386, 261, 486, 466, 462,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 322,
	328, 329, 330, 331, 348, 349, 350, 353, 356, 357,
	360, 362, 363, 366, 373, 374, 375, 376, 378, 380,
	387, 391, 399, 400, 401, 402, 403, 405, 406, 411,
	412, 413, 414, 422, 426, 444, 445, 457, 470, 475,
	270, 452, 476, 0, 321, 0, 0, 323, 254, 273,
	284, 0, 465, 423, 207, 393, 262, 196, 225, 210,
	233, 248, 251, 288, 332, 339, 368, 372, 267, 245,
	223, 390, 220, 408, 429, 430, 431, 433, 336, 240,
	371, 434, 0, 319, 435, 436, 280, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 310, 241, 0,
	0, 369, 0, 193, 0, 410, 228, 320, 317, 441,
	255, 247, 243, 227, 281, 327, 367, 428, 361, 0,
	314, 0, 0, 419, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 352, 420, 259, 0, 87, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 438, 0, 0, 0, 0,
	0, 0, 0, 209, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 341,
	231, 0, 0, 0, 0, 472, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 293, 188, 205, 0, 0,
	351, 392, 398, 0, 0, 0, 229, 0, 396, 365,
	456, 213, 257, 389, 370, 394, 377, 260, 0, 0,
	395, 315, 443, 384, 453, 473, 474, 237, 345, 463,
	432, 469, 485, 206, 234, 359, 425, 459, 416, 338,
	439, 440, 292, 415, 266, 191, 313, 479, 204, 404,
	221, 211, 197, 427, 451, 218, 407, 0, 0, 487,
	199, 449, 424, 334, 289, 290, 198, 0, 388, 242,
	264, 232, 354, 446, 447, 230, 488, 208, 468, 201,
	0, 467, 347, 442, 450, 335, 325, 200, 448, 333,
	324, 295, 253, 275, 382, 318, 383, 276, 343, 342,
	344, 194, 460, 0, 195, 0, 421, 461, 489, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	311, 358, 381, 379, 385, 0, 437, 454, 464, 471,
	477, 478, 480, 481, 482, 483, 484, 346, 278, 417,
	294, 316, 0, 0, 364, 397, 219, 458, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 508, 326, 409,
	455, 296, 301, 304, 0, 187, 202, 312, 0, 386,
	261, 486, 466, 462, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 1725, 0, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 322, 328, 329, 330, 331, 348, 349,
	350, 353, 356, 357, 360, 362, 363, 366, 373, 374,
	375, 376, 378, 380, 387, 391, 399, 400, 401, 402,
	403, 405, 406, 411, 412, 413, 414, 422, 426, 444,
	445, 457, 470, 475, 270, 452, 476, 0, 321, 0,
	0, 323, 254, 273, 284, 0, 465, 423, 207, 393,
	262, 196, 225, 210, 233, 248, 251, 288, 332, 339,
	368, 372, 267, 245, 223, 390, 220, 408, 429, 430,
	431, 433, 336, 240, 371, 434, 0, 319, 435, 436,
	280, 0, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 1677, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 310, 241, 0, 0, 369, 0, 193, 0, 410,
	228, 320, 317, 441, 255, 247, 243, 227, 281, 327,
	367, 428, 361, 0, 314, 0, 0, 419, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 352, 420, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 438,
	0, 0, 0, 0, 0, 0, 0, 209, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 341, 231, 0, 0, 0, 0, 472,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 293,
	188, 205, 0, 0, 351, 392, 398, 0, 0, 0,
	229, 0, 396, 365, 456, 213, 257, 389, 370, 394,
	377, 260, 0, 1675, 395, 315, 443, 384, 453, 473,
	474, 237, 345, 463, 432, 469, 485, 206, 234, 359,
	425, 459, 416, 338, 439, 440, 292, 415, 266, 191,
	313, 479, 204, 404, 221, 211, 197, 427, 451, 218,
	407, 0, 0, 487, 199, 449, 424, 334, 289, 290,
	198, 0, 388, 242, 264, 232, 354, 446, 447, 230,
	488, 208, 468, 201, 0, 467, 347, 442, 450, 335,
	325, 200, 448, 333, 324, 295, 253, 275, 382, 318,
	383, 276, 343, 342, 344, 194, 460, 0, 195, 0,
	421, 461, 489, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 311, 358, 381, 379, 385, 0,
	437, 454, 464, 471, 477, 478, 480, 481, 482, 483,
	484, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 486, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 911, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 917, 293, 188, 205, 915, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	485, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 487, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 488, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 489, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 346, 278, 417, 294, 316,
	0, 0, 364, 397, 219, 458, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 508, 326, 409, 455, 296,
	301, 304, 0, 187, 202, 312, 0, 386, 261, 486,
	466, 462, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 322, 328, 329, 330, 331, 348, 349, 350, 353,
	356, 357, 360, 362, 363, 366, 373, 374, 375, 376,
	378, 380, 387, 391, 399, 400, 401, 402, 403, 405,
	406, 411, 412, 413, 414, 422, 426, 444, 445, 457,
	470, 475, 270, 452, 476, 0, 321, 0, 0, 323,
	254, 273, 284, 0, 465, 423, 207, 393, 262, 196,
	225, 210, 233, 248, 251, 288, 332, 339, 368, 372,
	267, 245, 223, 390, 220, 408, 429, 430, 431, 433,
	336, 240, 371, 434, 0, 319, 435, 436, 280, 0,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 1677,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 310,
	241, 0, 0, 369, 0, 193, 0, 410, 228, 320,
	317, 441, 255, 247, 243, 227, 281, 327, 367, 428,
	361, 0, 314, 0, 0, 419, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 352, 420, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 438, 0, 0,
	0, 0, 0, 0, 0, 209, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 341, 231, 0, 0, 0, 0, 472, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 293, 188, 205,
	0, 0, 351, 392, 398, 0, 0, 0, 229, 0,
	396, 365, 456, 213, 257, 389, 370, 394, 377, 260,
	0, 0, 395, 315, 443, 384, 453, 473, 474, 237,
	345, 463, 432, 469, 485, 206, 234, 359, 425, 459,
	416, 338, 439, 440, 292, 415, 266, 191, 313, 479,
	204, 404, 221, 211, 197, 427, 451, 218, 407, 0,
	0, 487, 199, 449, 424, 334, 289, 290, 198, 0,
	388, 242, 264, 232, 354, 446, 447, 230, 488, 208,
	468, 201, 0, 467, 347, 442, 450, 335, 325, 200,
	448, 333, 324, 295, 253, 275, 382, 318, 383, 276,
	343, 342, 344, 194, 460, 0, 195, 0, 421, 461,
	489, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 311, 358, 381, 379, 385, 0, 437, 454,
	464, 471, 477, 478, 480, 481, 482, 483, 484, 346,
	278, 417, 294, 316, 0, 0, 364, 397, 219, 458,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 508,
	326, 409, 455, 296, 301, 304, 0, 187, 202, 312,
	0, 386, 261, 486, 466, 462, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 322, 328, 329, 330, 331,
	348, 349, 350, 353, 356, 357, 360, 362, 363, 366,
	373, 374, 375, 376, 378, 380, 387, 391, 399, 400,
	401, 402, 403, 405, 406, 411, 412, 413, 414, 422,
	426, 444, 445, 457, 470, 475, 270, 452, 476, 0,
	321, 0, 0, 323, 254, 273, 284, 0, 465, 423,
	207, 393, 262, 196, 225, 210, 233, 248, 251, 288,
	332, 339, 368, 372, 267, 245, 223, 390, 220, 408,
	429, 430, 431, 433, 336, 240, 371, 434, 0, 319,
	435, 436, 280, 0, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 310, 241, 0, 0, 369, 0, 193,
	0, 410, 228, 320, 317, 441, 255, 247, 243, 227,
	281, 327, 367, 428, 361, 0, 314, 0, 0, 419,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 352,
	420, 259, 0, 0, 0, 1252, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 438, 0, 0, 0, 0, 0, 0, 0, 209,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 341, 231, 0, 0, 0,
	0, 472, 0, 0, 0, 2603, 0, 0, 0, 309,
	0, 293, 188, 205, 0, 0, 351, 392, 398, 0,
	0, 0, 229, 0, 396, 365, 456, 213, 257, 389,
	370, 394, 377, 260, 0, 0, 395, 315, 443, 384,
	453, 473, 474, 237, 345, 463, 432, 469, 485, 206,
	234, 359, 425, 459, 416, 338, 439, 440, 292, 415,
	266, 191, 313, 479, 204, 404, 221, 211, 197, 427,
	451, 218, 407, 0, 0, 487, 199, 449, 424, 334,
	289, 290, 198, 0, 388, 242, 264, 232, 354, 446,
	447, 230, 488, 208, 468, 201, 0, 467, 347, 442,
	450, 335, 325, 200, 448, 333, 324, 295, 253, 275,
	382, 318, 383, 276, 343, 342, 344, 194, 460, 0,
	195, 0, 421, 461, 489, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 311, 358, 381, 379,
	385, 0, 437, 454, 464, 471, 477, 478, 480, 481,
	482, 483, 484, 346, 278, 417, 294, 316, 0, 0,
	364, 397, 219, 458, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 508, 326, 409, 455, 296, 301, 304,
	0, 187, 202, 312, 0, 386, 261, 486, 466, 462,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 322,
	328, 329, 330, 331, 348, 349, 350, 353, 356, 357,
	360, 362, 363, 366, 373, 374, 375, 376, 378, 380,
	387, 391, 399, 400, 401, 402, 403, 405, 406, 411,
	412, 413, 414, 422, 426, 444, 445, 457, 470, 475,
	270, 452, 476, 0, 321, 0, 0, 323, 254, 273,
	284, 0, 465, 423, 207, 393, 262, 196, 225, 210,
	233, 248, 251, 288, 332, 339, 368, 372, 267, 245,
	223, 390, 220, 408, 429, 430, 431, 433, 336, 240,
	371, 434, 0, 319, 435, 436, 280, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 310, 241, 0,
	0, 369, 0, 193, 0, 410, 228, 320, 317, 441,
	255, 247, 243, 227, 281, 327, 367, 428, 361, 0,
	314, 0, 0, 419, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 352, 420, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 438, 0, 0, 0, 0,
	0, 0, 0, 209, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 341,
	231, 0, 0, 0, 0, 472, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 293, 188, 205, 0, 0,
	351, 392, 398, 0, 0, 0, 229, 0, 396, 365,
	456, 213, 257, 389, 370, 394, 377, 260, 0, 0,
	395, 315, 443, 384, 453, 473, 474, 237, 345, 463,
	432, 469, 485, 206, 234, 359, 425, 459, 416, 338,
	439, 440, 292, 415, 266, 191, 313, 479, 204, 404,
	221, 211, 197, 427, 451, 218, 407, 0, 0, 487,
	199, 449, 424, 334, 289, 290, 198, 0, 388, 242,
	264, 232, 354, 446, 447, 230, 488, 208, 468, 201,
	0, 467, 347, 442, 450, 335, 325, 200, 448, 333,
	324, 295, 253, 275, 382, 318, 383, 276, 343, 342,
	344, 194, 460, 0, 195, 0, 421, 461, 489, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	311, 358, 381, 379, 385, 0, 437, 454, 464, 471,
	477, 478, 480, 481, 482, 483, 484, 346, 278, 417,
	294, 316, 0, 0, 364, 397, 219, 458, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 508, 326, 409,
	455, 296, 301, 304, 0, 187, 202, 312, 0, 386,
	261, 486, 466, 462, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 322, 328, 329, 330, 331, 348, 349,
	350, 353, 356, 357, 360, 362, 363, 366, 373, 374,
	375, 376, 378, 380, 387, 391, 399, 400, 401, 402,
	403, 405, 406, 411, 412, 413, 414, 422, 426, 444,
	445, 457, 470, 475, 270, 452, 476, 0, 321, 0,
	0, 323, 254, 273, 284, 0, 465, 423, 207, 393,
	262, 196, 225, 210, 233, 248, 251, 288, 332, 339,
	368, 372, 267, 245, 223, 390, 220, 408, 429, 430,
	431, 433, 336, 240, 371, 434, 0, 319, 435, 436,
	280, 0, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 310, 241, 0, 0, 369, 0, 193, 0, 410,
	228, 320, 317, 441, 255, 247, 243, 227, 281, 327,
	367, 428, 361, 0, 314, 0, 0, 419, 340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 352, 420, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	1969, 0, 0, 0, 1970, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 438,
	0, 0, 0, 0, 0, 0, 0, 209, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 341, 231, 0, 0, 0, 0, 472,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 293,
	188, 205, 0, 0, 351, 392, 398, 0, 0, 0,
	229, 0, 396, 365, 456, 213, 257, 389, 370, 394,
	377, 260, 0, 0, 395, 315, 443, 384, 453, 473,
	474, 237, 345, 463, 432, 469, 485, 206, 234, 359,
	425, 459, 416, 338, 439, 440, 292, 415, 266, 191,
	313, 479, 204, 404, 221, 211, 197, 427, 451, 218,
	407, 0, 0, 487, 199, 449, 424, 334, 289, 290,
	198, 0, 388, 242, 264, 232, 354, 446, 447, 230,
	488, 208, 468, 201, 0, 467, 347, 442, 450, 335,
	325, 200, 448, 333, 324, 295, 253, 275, 382, 318,
	383, 276, 343, 342, 344, 194, 460, 0, 195, 0,
	421, 461, 489, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 311, 358, 381, 379, 385, 0,
	437, 454, 464, 471, 477, 478, 480, 481, 482, 483,
	484, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 486, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 1296, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1295, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	485, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 487, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 488, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 489, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 346, 278, 417, 294, 316,
	0, 0, 364, 397, 219, 458, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 508, 326, 409, 455, 296,
	301, 304, 0, 187, 202, 312, 0, 386, 261, 486,
	466, 462, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 322, 328, 329, 330, 331, 348, 349, 350, 353,
	356, 357, 360, 362, 363, 366, 373, 374, 375, 376,
	378, 380, 387, 391, 399, 400, 401, 402, 403, 405,
	406, 411, 412, 413, 414, 422, 426, 444, 445, 457,
	470, 475, 270, 452, 476, 0, 321, 0, 0, 323,
	254, 273, 284, 0, 465, 423, 207, 393, 262, 196,
	225, 210, 233, 248, 251, 288, 332, 339, 368, 372,
	267, 245, 223, 390, 220, 408, 429, 430, 431, 433,
	336, 240, 371, 434, 0, 319, 435, 436, 280, 0,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 310,
	241, 0, 0, 369, 0, 193, 0, 410, 228, 320,
	317, 441, 255, 247, 243, 227, 281, 327, 367, 428,
	361, 0, 314, 0, 0, 419, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 352, 420, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 438, 0, 0,
	0, 0, 0, 0, 0, 209, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 341, 231, 0, 0, 0, 0, 472, 0, 0,
	0, 2677, 0, 0, 0, 309, 0, 293, 188, 205,
	0, 0, 351, 392, 398, 0, 0, 0, 229, 0,
	396, 365, 456, 213, 257, 389, 370, 394, 377, 260,
	0, 0, 395, 315, 443, 384, 453, 473, 474, 237,
	345, 463, 432, 469, 485, 206, 234, 359, 425, 459,
	416, 338, 439, 440, 292, 415, 266, 191, 313, 479,
	204, 404, 221, 211, 197, 427, 451, 218, 407, 0,
	0, 487, 199, 449, 424, 334, 289, 290, 198, 0,
	388, 242, 264, 232, 354, 446, 447, 230, 488, 208,
	468, 201, 0, 467, 347, 442, 450, 335, 325, 200,
	448, 333, 324, 295, 253, 275, 382, 318, 383, 276,
	343, 342, 344, 194, 460, 0, 195, 0, 421, 461,
	489, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 311, 358, 381, 379, 385, 0, 437, 454,
	464, 471, 477, 478, 480, 481, 482, 483, 484, 346,
	278, 417, 294, 316, 0, 0, 364, 397, 219, 458,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 508,
	326, 409, 455, 296, 301, 304, 0, 187, 202, 312,
	0, 386, 261, 486, 466, 462, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 322, 328, 329, 330, 331,
	348, 349, 350, 353, 356, 357, 360, 362, 363, 366,
	373, 374, 375, 376, 378, 380, 387, 391, 399, 400,
	401, 402, 403, 405, 406, 411, 412, 413, 414, 422,
	426, 444, 445, 457, 470, 475, 270, 452, 476, 0,
	321, 0, 0, 323, 254, 273, 284, 0, 465, 423,
	207, 393, 262, 196, 225, 210, 233, 248, 251, 288,
	332, 339, 368, 372, 267, 245, 223, 390, 220, 408,
	429, 430, 431, 433, 336, 240, 371, 434, 0, 319,
	435, 436, 280, 0, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 310, 241, 0, 0, 369, 0, 193,
	0, 410, 228, 320, 317, 441, 255, 247, 243, 227,
	281, 327, 367, 428, 361, 0, 314, 0, 0, 419,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 352,
	420, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 438, 0, 0, 0, 0, 0, 0, 0, 209,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 341, 231, 0, 0, 0,
	0, 472, 0, 0, 0, 2603, 0, 0, 0, 309,
	0, 293, 188, 205, 0, 0, 351, 392, 398, 0,
	0, 0, 229, 0, 396, 365, 456, 213, 257, 389,
	370, 394, 377, 260, 0, 0, 395, 315, 443, 384,
	453, 473, 474, 237, 345, 463, 432, 469, 485, 206,
	234, 359, 425, 459, 416, 338, 439, 440, 292, 415,
	266, 191, 313, 479, 204, 404, 221, 211, 197, 427,
	451, 218, 407, 0, 0, 487, 199, 449, 424, 334,
	289, 290, 198, 0, 388, 242, 264, 232, 354, 446,
	447, 230, 488, 208, 468, 201, 0, 467, 347, 442,
	450, 335, 325, 200, 448, 333, 324, 295, 253, 275,
	382, 318, 383, 276, 343, 342, 344, 194, 460, 0,
	195, 0, 421, 461, 489, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 311, 358, 381, 379,
	385, 0, 437, 454, 464, 471, 477, 478, 480, 481,
	482, 483, 484, 346, 278, 417, 294, 316, 0, 0,
	364, 397, 219, 458, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 508, 326, 409, 455, 296, 301, 304,
	0, 187, 202, 312, 0, 386, 261, 486, 466, 462,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 322,
	328, 329, 330, 331, 348, 349, 350, 353, 356, 357,
	360, 362, 363, 366, 373, 374, 375, 376, 378, 380,
	387, 391, 399, 400, 401, 402, 403, 405, 406, 411,
	412, 413, 414, 422, 426, 444, 445, 457, 470, 475,
	270, 452, 476, 0, 321, 0, 0, 323, 254, 273,
	284, 0, 465, 423, 207, 393, 262, 196, 225, 210,
	233, 248, 251, 288, 332, 339, 368, 372, 267, 245,
	223, 390, 220, 408, 429, 430, 431, 433, 336, 240,
	371, 434, 0, 319, 435, 436, 280, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 310, 241, 0,
	0, 369, 0, 193, 0, 410, 228, 320, 317, 441,
	255, 247, 243, 227, 281, 327, 367, 428, 361, 0,
	314, 0, 0, 419, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 352, 420, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 438, 0, 0, 0, 0,
	0, 0, 0, 209, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 341,
	231, 0, 0, 0, 0, 472, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 293, 188, 205, 0, 0,
	351, 392, 398, 0, 0, 0, 229, 0, 396, 365,
	456, 213, 257, 389, 370, 394, 377, 260, 0, 0,
	395, 315, 443, 384, 453, 473, 474, 237, 345, 463,
	432, 469, 485, 206, 234, 359, 425, 459, 416, 338,
	439, 440, 292, 415, 266, 191, 313, 479, 204, 404,
	221, 211, 197, 427, 451, 218, 407, 0, 0, 487,
	199, 449, 424, 334, 289, 290, 198, 0, 388, 242,
	264, 232, 354, 446, 447, 230, 488, 208, 468, 201,
	0, 467, 347, 442, 450, 335, 325, 200, 448, 333,
	324, 295, 253, 275, 382, 318, 383, 276, 343, 342,
	344, 194, 460, 0, 195, 0, 421, 461, 489, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	311, 358, 381, 379, 385, 0, 437, 454, 464, 471,
	477, 478, 480, 481, 482, 483, 484, 346, 278, 417,
	294, 316, 0, 0, 364, 397, 219, 458, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 508, 326, 409,
	455, 296, 301, 304, 0, 187, 202, 312, 0, 386,
	261, 486, 466, 462, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 322, 328, 329, 330, 331, 348, 349,
	350, 353, 356, 357, 360, 362, 363, 366, 373, 374,
	375, 376, 378, 380, 387, 391, 399, 400, 401, 402,
	403, 405, 406, 411, 412, 413, 414, 422, 426, 444,
	445, 457, 470, 475, 270, 452, 476, 0, 321, 0,
	0, 323, 254, 273, 284, 0, 465, 423, 207, 393,
	262, 196, 225, 210, 233, 248, 251, 288, 332, 339,
	368, 372, 267, 245, 223, 390, 220, 408, 429, 430,
	431, 433, 336, 240, 371, 0, 434, 319, 435, 436,
	280, 1726, 0, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 310, 241, 0, 0, 369, 0, 193, 0,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 0, 314, 0, 0, 419, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 352, 420,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	438, 0, 0, 0, 0, 0, 0, 0, 209, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 341, 231, 0, 0, 0, 0,
	472, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	293, 188, 205, 0, 0, 351, 392, 398, 0, 0,
	0, 229, 0, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 0, 0, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 485, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 451,
	218, 407, 0, 0, 487, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 488, 208, 468, 201, 0, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 489, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	0, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 346, 278, 417, 294, 316, 0, 0, 364,
	397, 219, 458, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 508, 326, 409, 455, 296, 301, 304, 0,
	187, 202, 312, 0, 386, 261, 486, 466, 462, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 322, 328,
	329, 330, 331, 348, 349, 350, 353, 356, 357, 360,
	362, 363, 366, 373, 374, 375, 376, 378, 380, 387,
	391, 399, 400, 401, 402, 403, 405, 406, 411, 412,
	413, 414, 422, 426, 444, 445, 457, 470, 475, 270,
	452, 476, 0, 321, 0, 0, 323, 254, 273, 284,
	0, 465, 423, 207, 393, 262, 196, 225, 210, 233,
	248, 251, 288, 332, 339, 368, 372, 267, 245, 223,
	390, 220, 408, 429, 430, 431, 433, 336, 240, 371,
	434, 0, 319, 435, 436, 280, 0, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 310, 241, 0, 0,
	369, 0, 193, 0, 410, 228, 320, 317, 441, 255,
	247, 243, 227, 281, 327, 367, 428, 361, 0, 314,
	0, 0, 419, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 352, 420, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 438, 0, 0, 0, 0, 0,
	0, 0, 209, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 341, 231,
	0, 0, 0, 0, 472, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 293, 188, 205, 0, 0, 351,
	392, 398, 0, 0, 0, 229, 0, 396, 365, 456,
	213, 257, 389, 370, 394, 377, 260, 0, 0, 395,
	315, 443, 384, 453, 473, 474, 237, 345, 463, 432,
	469, 485, 206, 234, 359, 425, 459, 416, 338, 439,
	440, 292, 415, 266, 191, 313, 479, 204, 404, 221,
	211, 197, 427, 451, 218, 407, 0, 0, 487, 199,
	449, 424, 334, 289, 290, 198, 0, 388, 242, 264,
	232, 354, 446, 447, 230, 488, 208, 468, 201, 0,
	467, 347, 442, 450, 335, 325, 200, 448, 333, 324,
	295, 253, 275, 382, 318, 383, 276, 343, 342, 344,
	194, 460, 0, 195, 0, 421, 461, 489, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 311,
	358, 381, 379, 385, 0, 437, 454, 464, 471, 477,
	478, 480, 481, 482, 483, 484, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 508, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	486, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 485, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 487, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 488,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 489, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	346, 278, 417, 294, 316, 0, 0, 364, 397, 219,
	458, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	508, 326, 409, 455, 296, 301, 304, 0, 187, 202,
	312, 0, 386, 261, 486, 466, 462, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 0, 0, 323, 254, 273, 284, 0, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 434, 0,
	319, 435, 436, 280, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 310, 241, 0, 0, 369, 0,
	193, 0, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 0, 314, 0, 0,
	419, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 438, 0, 0, 0, 0, 0, 0, 0,
	209, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 341, 231, 0, 0,
	0, 0, 472, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 293, 188, 205, 0, 0, 351, 392, 398,
	0, 0, 0, 229, 0, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 0, 0, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 485,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 487, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 488, 208, 468, 201, 0, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 489, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 0, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 346, 278, 417, 294, 316, 0,
	0, 364, 397, 219, 458, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 508, 326, 409, 455, 296, 301,
	304, 0, 187, 202, 312, 1537, 386, 261, 486, 466,
	462, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	322, 328, 329, 330, 331, 348, 349, 350, 353, 356,
	357, 360, 362, 363, 366, 373, 374, 375, 376, 378,
	380, 387, 391, 399, 400, 401, 402, 403, 405, 406,
	411, 412, 413, 414, 422, 426, 444, 445, 457, 470,
	475, 270, 452, 476, 0, 321, 0, 0, 323, 254,
	273, 284, 0, 465, 423, 207, 393, 262, 196, 225,
	210, 233, 248, 251, 288, 332, 339, 368, 372, 267,
	245, 223, 390, 220, 408, 429, 430, 431, 433, 336,
	240, 371, 434, 0, 319, 435, 436, 280, 0, 0,
	0, 0, 0, 0, 355, 0, 1417, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 310, 241,
	0, 0, 369, 0, 193, 0, 410, 228, 320, 317,
	441, 255, 247, 243, 227, 281, 327, 367, 428, 361,
	0, 314, 0, 0, 419, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 352, 420, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 438, 0, 0, 0,
	0, 0, 0, 0, 209, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	341, 231, 0, 0, 0, 0, 472, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 293, 188, 205, 0,
	0, 351, 392, 398, 0, 0, 0, 229, 0, 396,
	365, 456, 213, 257, 389, 370, 394, 377, 260, 0,
	0, 395, 315, 443, 384, 453, 473, 474, 237, 345,
	463, 432, 469, 485, 206, 234, 359, 425, 459, 416,
	338, 439, 440, 292, 415, 266, 191, 313, 479, 204,
	404, 221, 211, 197, 427, 451, 218, 407, 0, 0,
	487, 199, 449, 424, 334, 289, 290, 198, 0, 388,
	242, 264, 232, 354, 446, 447, 230, 488, 208, 468,
	201, 0, 467, 347, 442, 450, 335, 325, 200, 448,
	333, 324, 295, 253, 275, 382, 318, 383, 276, 343,
	342, 344, 194, 460, 0, 195, 0, 421, 461, 489,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 311, 358, 381, 379, 385, 0, 437, 454, 464,
	471, 477, 478, 480, 481, 482, 483, 484, 346, 278,
	417, 294, 316, 0, 0, 364, 397, 219, 458, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 326,
	409, 455, 296, 301, 304, 0, 187, 202, 312, 0,
	386, 261, 486, 466, 462, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	0, 0, 323, 254, 273, 284, 0, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 434, 0, 319, 435,
	436, 280, 0, 0, 0, 0, 0, 0, 355, 0,
	1415, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 310, 241, 0, 0, 369, 0, 193, 0,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 0, 314, 0, 0, 419, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 352, 420,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	438, 0, 0, 0, 0, 0, 0, 0, 209, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 341, 231, 0, 0, 0, 0,
	472, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	293, 188, 205, 0, 0, 351, 392, 398, 0, 0,
	0, 229, 0, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 0, 0, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 485, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 451,
	218, 407, 0, 0, 487, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 488, 208, 468, 201, 0, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 489, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	0, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 346, 278, 417, 294, 316, 0, 0, 364,
	397, 219, 458, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 508, 326, 409, 455, 296, 301, 304, 0,
	187, 202, 312, 0, 386, 261, 486, 466, 462, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 322, 328,
	329, 330, 331, 348, 349, 350, 353, 356, 357, 360,
	362, 363, 366, 373, 374, 375, 376, 378, 380, 387,
	391, 399, 400, 401, 402, 403, 405, 406, 411, 412,
	413, 414, 422, 426, 444, 445, 457, 470, 475, 270,
	452, 476, 0, 321, 0, 0, 323, 254, 273, 284,
	0, 465, 423, 207, 393, 262, 196, 225, 210, 233,
	248, 251, 288, 332, 339, 368, 372, 267, 245, 223,
	390, 220, 408, 429, 430, 431, 433, 336, 240, 371,
	434, 0, 319, 435, 436, 280, 0, 0, 0, 0,
	0, 0, 355, 0, 1413, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 310, 241, 0, 0,
	369, 0, 193, 0, 410, 228, 320, 317, 441, 255,
	247, 243, 227, 281, 327, 367, 428, 361, 0, 314,
	0, 0, 419, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 352, 420, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 438, 0, 0, 0, 0, 0,
	0, 0, 209, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 341, 231,
	0, 0, 0, 0, 472, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 293, 188, 205, 0, 0, 351,
	392, 398, 0, 0, 0, 229, 0, 396, 365, 456,
	213, 257, 389, 370, 394, 377, 260, 0, 0, 395,
	315, 443, 384, 453, 473, 474, 237, 345, 463, 432,
	469, 485, 206, 234, 359, 425, 459, 416, 338, 439,
	440, 292, 415, 266, 191, 313, 479, 204, 404, 221,
	211, 197, 427, 451, 218, 407, 0, 0, 487, 199,
	449, 424, 334, 289, 290, 198, 0, 388, 242, 264,
	232, 354, 446, 447, 230, 488, 208, 468, 201, 0,
	467, 347, 442, 450, 335, 325, 200, 448, 333, 324,
	295, 253, 275, 382, 318, 383, 276, 343, 342, 344,
	194, 460, 0, 195, 0, 421, 461, 489, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 311,
	358, 381, 379, 385, 0, 437, 454, 464, 471, 477,
	478, 480, 481, 482, 483, 484, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 508, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	486, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 1411, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 485, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 487, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 488,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 489, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	346, 278, 417, 294, 316, 0, 0, 364, 397, 219,
	458, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	508, 326, 409, 455, 296, 301, 304, 0, 187, 202,
	312, 0, 386, 261, 486, 466, 462, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 0, 0, 323, 254, 273, 284, 0, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 434, 0,
	319, 435, 436, 280, 0, 0, 0, 0, 0, 0,
	355, 0, 1409, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 310, 241, 0, 0, 369, 0,
	193, 0, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 0, 314, 0, 0,
	419, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 438, 0, 0, 0, 0, 0, 0, 0,
	209, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 341, 231, 0, 0,
	0, 0, 472, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 293, 188, 205, 0, 0, 351, 392, 398,
	0, 0, 0, 229, 0, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 0, 0, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 485,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 487, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 488, 208, 468, 201, 0, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 489, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 0, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 346, 278, 417, 294, 316, 0,
	0, 364, 397, 219, 458, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 508, 326, 409, 455, 296, 301,
	304, 0, 187, 202, 312, 0, 386, 261, 486, 466,
	462, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	322, 328, 329, 330, 331, 348, 349, 350, 353, 356,
	357, 360, 362, 363, 366, 373, 374, 375, 376, 378,
	380, 387, 391, 399, 400, 401, 402, 403, 405, 406,
	411, 412, 413, 414, 422, 426, 444, 445, 457, 470,
	475, 270, 452, 476, 0, 321, 0, 0, 323, 254,
	273, 284, 0, 465, 423, 207, 393, 262, 196, 225,
	210, 233, 248, 251, 288, 332, 339, 368, 372, 267,
	245, 223, 390, 220, 408, 429, 430, 431, 433, 336,
	240, 371, 434, 0, 319, 435, 436, 280, 0, 0,
	0, 0, 0, 0, 355, 0, 1405, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 310, 241,
	0, 0, 369, 0, 193, 0, 410, 228, 320, 317,
	441, 255, 247, 243, 227, 281, 327, 367, 428, 361,
	0, 314, 0, 0, 419, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 352, 420, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 438, 0, 0, 0,
	0, 0, 0, 0, 209, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	341, 231, 0, 0, 0, 0, 472, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 293, 188, 205, 0,
	0, 351, 392, 398, 0, 0, 0, 229, 0, 396,
	365, 456, 213, 257, 389, 370, 394, 377, 260, 0,
	0, 395, 315, 443, 384, 453, 473, 474, 237, 345,
	463, 432, 469, 485, 206, 234, 359, 425, 459, 416,
	338, 439, 440, 292, 415, 266, 191, 313, 479, 204,
	404, 221, 211, 197, 427, 451, 218, 407, 0, 0,
	487, 199, 449, 424, 334, 289, 290, 198, 0, 388,
	242, 264, 232, 354, 446, 447, 230, 488, 208, 468,
	201, 0, 467, 347, 442, 450, 335, 325, 200, 448,
	333, 324, 295, 253, 275, 382, 318, 383, 276, 343,
	342, 344, 194, 460, 0, 195, 0, 421, 461, 489,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 311, 358, 381, 379, 385, 0, 437, 454, 464,
	471, 477, 478, 480, 481, 482, 483, 484, 346, 278,
	417, 294, 316, 0, 0, 364, 397, 219, 458, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 326,
	409, 455, 296, 301, 304, 0, 187, 202, 312, 0,
	386, 261, 486, 466, 462, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	0, 0, 323, 254, 273, 284, 0, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 434, 0, 319, 435,
	436, 280, 0, 0, 0, 0, 0, 0, 355, 0,
	1403, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 310, 241, 0, 0, 369, 0, 193, 0,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 0, 314, 0, 0, 419, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 352, 420,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	438, 0, 0, 0, 0, 0, 0, 0, 209, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 341, 231, 0, 0, 0, 0,
	472, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	293, 188, 205, 0, 0, 351, 392, 398, 0, 0,
	0, 229, 0, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 0, 0, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 485, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 451,
	218, 407, 0, 0, 487, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 488, 208, 468, 201, 0, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 489, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	0, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 346, 278, 417, 294, 316, 0, 0, 364,
	397, 219, 458, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 508, 326, 409, 455, 296, 301, 304, 0,
	187, 202, 312, 0, 386, 261, 486, 466, 462, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 322, 328,
	329, 330, 331, 348, 349, 350, 353, 356, 357, 360,
	362, 363, 366, 373, 374, 375, 376, 378, 380, 387,
	391, 399, 400, 401, 402, 403, 405, 406, 411, 412,
	413, 414, 422, 426, 444, 445, 457, 470, 475, 270,
	452, 476, 0, 321, 0, 0, 323, 254, 273, 284,
	0, 465, 423, 207, 393, 262, 196, 225, 210, 233,
	248, 251, 288, 332, 339, 368, 372, 267, 245, 223,
	390, 220, 408, 429, 430, 431, 433, 336, 240, 371,
	434, 0, 319, 435, 436, 280, 0, 0, 0, 0,
	0, 0, 355, 0, 1401, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 310, 241, 0, 0,
	369, 0, 193, 0, 410, 228, 320, 317, 441, 255,
	247, 243, 227, 281, 327, 367, 428, 361, 0, 314,
	0, 0, 419, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 352, 420, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 438, 0, 0, 0, 0, 0,
	0, 0, 209, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 341, 231,
	0, 0, 0, 0, 472, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 293, 188, 205, 0, 0, 351,
	392, 398, 0, 0, 0, 229, 0, 396, 365, 456,
	213, 257, 389, 370, 394, 377, 260, 0, 0, 395,
	315, 443, 384, 453, 473, 474, 237, 345, 463, 432,
	469, 485, 206, 234, 359, 425, 459, 416, 338, 439,
	440, 292, 415, 266, 191, 313, 479, 204, 404, 221,
	211, 197, 427, 451, 218, 407, 0, 0, 487, 199,
	449, 424, 334, 289, 290, 198, 0, 388, 242, 264,
	232, 354, 446, 447, 230, 488, 208, 468, 201, 0,
	467, 347, 442, 450, 335, 325, 200, 448, 333, 324,
	295, 253, 275, 382, 318, 383, 276, 343, 342, 344,
	194, 460, 0, 195, 0, 421, 461, 489, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 311,
	358, 381, 379, 385, 0, 437, 454, 464, 471, 477,
	478, 480, 481, 482, 483, 484, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 508, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	486, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	1378, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 485, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 487, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 488,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 489, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	346, 278, 417, 294, 316, 0, 0, 364, 397, 219,
	458, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	508, 326, 409, 455, 296, 301, 304, 0, 187, 202,
	312, 0, 386, 261, 486, 466, 462, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 0, 0, 323, 254, 273, 284, 0, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 434, 0,
	319, 435, 436, 280, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 1280, 244,
	0, 0, 0, 0, 310, 241, 0, 0, 369, 0,
	193, 0, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 0, 314, 0, 0,
	419, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 438, 0, 0, 0, 0, 0, 0, 0,
	209, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 341, 231, 0, 0,
	0, 0, 472, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 293, 188, 205, 0, 0, 351, 392, 398,
	0, 0, 0, 229, 0, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 0, 0, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 485,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 487, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 488, 208, 468, 201, 0, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 489, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 0, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 346, 278, 417, 294, 316, 0,
	0, 364, 397, 219, 458, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 508, 326, 409, 455, 296, 301,
	304, 0, 187, 202, 312, 0, 386, 261, 486, 466,
	462, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	322, 328, 329, 330, 331, 348, 349, 350, 353, 356,
	357, 360, 362, 363, 366, 373, 374, 375, 376, 378,
	380, 387, 391, 399, 400, 401, 402, 403, 405, 406,
	411, 412, 413, 414, 422, 426, 444, 445, 457, 470,
	475, 270, 452, 476, 0, 321, 0, 0, 323, 254,
	273, 284, 0, 465, 423, 207, 393, 262, 196, 225,
	210, 233, 248, 251, 288, 332, 339, 368, 372, 267,
	245, 223, 390, 220, 408, 429, 430, 431, 433, 336,
	240, 371, 434, 0, 319, 435, 436, 280, 0, 0,
	0, 0, 0, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 310, 241,
	0, 0, 369, 0, 193, 0, 410, 228, 320, 317,
	441, 255, 247, 243, 227, 281, 327, 367, 428, 361,
	0, 314, 0, 0, 419, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 352, 420, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1098, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 438, 0, 0, 0,
	0, 0, 0, 0, 209, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	341, 231, 0, 0, 0, 0, 472, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 293, 188, 205, 0,
	0, 351, 392, 398, 0, 0, 0, 229, 0, 396,
	365, 456, 213, 257, 389, 370, 394, 377, 260, 0,
	0, 395, 315, 443, 384, 453, 473, 474, 237, 345,
	463, 432, 469, 485, 206, 234, 359, 425, 459, 416,
	338, 439, 440, 292, 415, 266, 191, 313, 479, 204,
	404, 221, 211, 197, 427, 451, 218, 407, 0, 0,
	487, 199, 449, 424, 334, 289, 290, 198, 0, 388,
	242, 264, 232, 354, 446, 447, 230, 488, 208, 468,
	201, 0, 467, 347, 442, 450, 335, 325, 200, 448,
	333, 324, 295, 253, 275, 382, 318, 383, 276, 343,
	342, 344, 194, 460, 0, 195, 0, 421, 461, 489,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 311, 358, 381, 379, 385, 0, 437, 454, 464,
	471, 477, 478, 480, 481, 482, 483, 484, 346, 278,
	417, 294, 316, 0, 0, 364, 397, 219, 458, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 326,
	409, 455, 296, 301, 304, 0, 187, 202, 312, 0,
	386, 261, 486, 466, 462, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	0, 0, 323, 254, 273, 284, 0, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 434, 0, 319, 435,
	436, 280, 0, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 310, 241, 0, 0, 369, 0, 193, 0,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 0, 314, 0, 0, 419, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 352, 420,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	438, 0, 0, 0, 0, 0, 0, 0, 209, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 341, 231, 0, 0, 0, 0,
	472, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	293, 188, 205, 0, 0, 351, 392, 398, 0, 0,
	0, 229, 0, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 0, 0, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 485, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 451,
	218, 407, 0, 0, 487, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 488, 208, 468, 201, 0, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 489, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	0, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 346, 278, 417, 294, 316, 0, 0, 364,
	397, 219, 458, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 508, 326, 409, 455, 296, 301, 304, 0,
	187, 202, 312, 0, 386, 261, 486, 466, 462, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 724,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 322, 328,
	329, 330, 331, 348, 349, 350, 353, 356, 357, 360,
	362, 363, 366, 373, 374, 375, 376, 378, 380, 387,
	391, 399, 400, 401, 402, 403, 405, 406, 411, 412,
	413, 414, 422, 426, 444, 445, 457, 470, 475, 270,
	452, 476, 0, 321, 0, 0, 323, 254, 273, 284,
	0, 465, 423, 207, 393, 262, 196, 225, 210, 233,
	248, 251, 288, 332, 339, 368, 372, 267, 245, 223,
	390, 220, 408, 429, 430, 431, 433, 336, 240, 371,
	434, 0, 319, 435, 436, 280, 0, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 310, 241, 0, 0,
	369, 0, 193, 0, 410, 228, 320, 317, 441, 255,
	247, 243, 227, 281, 327, 367, 428, 361, 0, 314,
	0, 0, 419, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 352, 420, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 438, 0, 0, 0, 0, 0,
	0, 0, 209, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 268, 0, 341, 231,
	0, 0, 0, 0, 472, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 293, 188, 205, 0, 0, 351,
	392, 398, 0, 0, 0, 229, 0, 396, 365, 456,
	213, 257, 389, 370, 394, 377, 260, 0, 0, 395,
	315, 443, 384, 453, 473, 474, 237, 345, 463, 432,
	469, 485, 206, 234, 359, 425, 459, 416, 338, 439,
	440, 292, 415, 266, 191, 313, 479, 204, 404, 221,
	211, 197, 427, 451, 218, 407, 0, 0, 487, 199,
	449, 424, 334, 289, 290, 198, 0, 388, 242, 264,
	232, 354, 446, 447, 230, 488, 208, 468, 201, 0,
	467, 347, 442, 450, 335, 325, 200, 448, 333, 324,
	295, 253, 275, 382, 318, 383, 276, 343, 342, 344,
	194, 460, 0, 195, 0, 421, 461, 489, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 311,
	358, 381, 379, 385, 0, 437, 454, 464, 471, 477,
	478, 480, 481, 482, 483, 484, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 508, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	486, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 563, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 511, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 485, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 487, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 488,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 489, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	346, 278, 417, 294, 316, 0, 0, 364, 397, 219,
	458, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	508, 326, 409, 455, 296, 301, 304, 0, 187, 202,
	312, 0, 386, 261, 486, 466, 462, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 0, 0, 323, 254, 273, 284, 0, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 434, 0,
	319, 435, 436, 280, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 310, 241, 0, 0, 369, 0,
	193, 0, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 0, 314, 0, 0,
	419, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 438, 0, 0, 0, 0, 0, 0, 0,
	209, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 341, 231, 0, 0,
	0, 0, 472, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 293, 188, 205, 0, 0, 351, 392, 398,
	0, 0, 0, 229, 0, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 0, 0, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 485,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 487, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 488, 208, 468, 201, 0, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 489, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 0, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 346, 278, 417, 294, 316, 0,
	0, 364, 397, 219, 458, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 508, 326, 409, 455, 296, 301,
	304, 0, 187, 202, 312, 0, 386, 261, 486, 466,
	462, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	322, 328, 329, 330, 331, 2682, 349, 350, 353, 356,
	357, 360, 362, 363, 366, 373, 374, 375, 376, 378,
	380, 387, 391, 399, 400, 401, 402, 403, 405, 406,
	411, 412, 413, 414, 422, 426, 444, 445, 457, 470,
	475, 270, 452, 476, 0, 321, 0, 0, 323, 254,
	273, 284, 0, 465, 423, 207, 393, 262, 196, 225,
	210, 233, 248, 251, 288, 332, 339, 368, 372, 267,
	245, 223, 390, 220, 408, 429, 430, 431, 433, 336,
	240, 371, 434, 0, 319, 435, 436, 280, 0, 0,
	0, 0, 0, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 310, 241,
	0, 0, 369, 0, 193, 0, 410, 228, 320, 317,
	441, 255, 247, 243, 227, 281, 327, 367, 428, 361,
	0, 314, 0, 0, 419, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 352, 420, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 438, 0, 0, 0,
	0, 0, 0, 0, 209, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	341, 231, 0, 0, 0, 0, 472, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 293, 188, 205, 0,
	0, 351, 392, 398, 0, 0, 0, 229, 0, 396,
	365, 456, 213, 257, 389, 370, 394, 377, 260, 0,
	0, 395, 315, 443, 384, 453, 473, 474, 237, 345,
	463, 432, 469, 485, 206, 234, 359, 425, 459, 416,
	338, 439, 440, 292, 415, 266, 191, 313, 479, 204,
	404, 221, 211, 197, 427, 451, 218, 407, 0, 0,
	487, 199, 449, 424, 334, 289, 290, 198, 0, 388,
	242, 264, 232, 354, 446, 447, 230, 488, 208, 468,
	201, 0, 467, 347, 442, 450, 335, 325, 200, 448,
	333, 324, 295, 253, 275, 382, 318, 383, 276, 343,
	342, 344, 194, 460, 0, 195, 0, 421, 461, 489,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 311, 358, 381, 379, 385, 0, 437, 454, 464,
	471, 477, 478, 480, 481, 482, 483, 484, 346, 278,
	417, 294, 316, 0, 0, 364, 397, 219, 458, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 326,
	409, 455, 296, 301, 304, 0, 187, 202, 312, 0,
	386, 261, 486, 466, 462, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	0, 0, 323, 254, 273, 284, 0, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 434, 0, 319, 435,
	436, 280, 0, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 310, 241, 0, 0, 369, 0, 193, 0,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 0, 314, 0, 0, 419, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 352, 420,
	259, 0, 0, 0, 0, 184, 2383, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	438, 0, 0, 0, 0, 0, 0, 0, 209, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 341, 231, 0, 0, 0, 0,
	472, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	293, 188, 205, 0, 0, 351, 392, 398, 0, 0,
	0, 229, 0, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 0, 0, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 485, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 451,
	218, 407, 0, 0, 487, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 488, 208, 468, 201, 0, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 489, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	0, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 346, 278, 417, 294, 316, 0, 0, 364,
	397, 219, 458, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 508, 326, 409, 455, 296, 301, 304, 0,
	187, 202, 312, 0, 386, 261, 486, 466, 462, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 322, 328,
	329, 330, 331, 348, 349, 350, 353, 356, 357, 360,
	362, 363, 366, 373, 374, 375, 376, 378, 380, 387,
	391, 399, 400, 401, 402, 403, 405, 406, 411, 412,
	413, 414, 422, 426, 444, 445, 457, 470, 475, 270,
	452, 476, 0, 321, 0, 0, 323, 254, 273, 284,
	0, 465, 423, 207, 393, 262, 196, 225, 210, 233,
	248, 251, 288, 332, 339, 368, 372, 267, 245, 223,
	390, 220, 408, 429, 430, 431, 433, 336, 240, 371,
	434, 0, 319, 435, 436, 280, 0, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 310, 241, 0, 0,
	369, 0, 193, 0, 410, 228, 320, 317, 441, 255,
	247, 243, 227, 281, 327, 367, 428, 361, 0, 314,
	0, 0, 419, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 352, 420, 259, 0, 0, 0, 0, 184,
	1965, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 438, 0, 0, 0, 0, 0,
	0, 0, 209, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 341, 231,
	0, 0, 0, 0, 472, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 293, 188, 205, 0, 0, 351,
	392, 398, 0, 0, 0, 229, 0, 396, 365, 456,
	213, 257, 389, 370, 394, 377, 260, 0, 0, 395,
	315, 443, 384, 453, 473, 474, 237, 345, 463, 432,
	469, 485, 206, 234, 359, 425, 459, 416, 338, 439,
	440, 292, 415, 266, 191, 313, 479, 204, 404, 221,
	211, 197, 427, 451, 218, 407, 0, 0, 487, 199,
	449, 424, 334, 289, 290, 198, 0, 388, 242, 264,
	232, 354, 446, 447, 230, 488, 208, 468, 201, 0,
	467, 347, 442, 450, 335, 325, 200, 448, 333, 324,
	295, 253, 275, 382, 318, 383, 276, 343, 342, 344,
	194, 460, 0, 195, 0, 421, 461, 489, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 311,
	358, 381, 379, 385, 0, 437, 454, 464, 471, 477,
	478, 480, 481, 482, 483, 484, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 508, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	486, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 0, 0, 319, 435, 436, 280,
}

var yyPact = [...]int{
	3549, -1000, -395, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1914, 1945, -1000, -1000,
	-1000, -1000, 2050, -1000, 663, 1573, -1000, 1902, 2862, -1000,
	37245, 372, -1000, 36117, 370, 247, 37245, -1000, 120, -1000,
	109, 37245, 114, 35553, -1000, -1000, -305, 15810, 1816, 9,
	-4, 37245, -1000, -1000, -1000, -1000, 2027, 1512, -1000, 317,
	-1000, -1000, -1000, -1000, -1000, -1000, 34989, -1000, -1000, -1000,
	1916, 1901, 2058, 562, 1862, -1000, 1966, 1512, -1000, 15810,
	2017, 1946, 15246, -1000, 15246, 330, -1000, -1000, 11291, -1000,
	-1000, 21452, 37245, 37245, 249, -1000, 1902, -1000, -1000, 318,
	-1000, 236, 1464, -1000, 1460, -1000, 452, 541, 267, 377,
	373, 266, 265, 258, 257, 256, 253, 252, 241, 269,
	-1000, 599, 599, -150, -163, 2716, 300, 300, 300, 346,
	1847, 1846, -1000, 671, -1000, 599, 599, 286, 599, 599,
	599, 599, 210, 205, 599, 599, 599, 599, 599, 599,
	599, 599, 599, 599, 599, 599, 599, 599, 599, 264,
	1902, 183, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37245,
	142, 37245, -1000, 470, 37245, 724, 724, 12, 724, 724,
	724, 724, 125, 519, -7, -1000, 111, 197, 87, 184,
	746, 108, 138, -1000, -1000, 178, 746, 1082, 565, 99,
	-1000, 724, 9003, 9003, 9003, -1000, 1879, -1000, -1000, -1000,
	-1000, -1000, -1000, 1087, -1000, 345, -1000, -1000, -1000, -1000,
	37245, 34425, 310, 618, -1000, -1000, -1000, 27, -1000, -1000,
	1220, 912, 15810, 1567, -1000, 1298, 534, -1000, -1000, -1000,
	-1000, -1000, 421, 16374, 16374, 16374, 16374, -1000, -1000, 1470,
	1470, 1470, 1470, 16374, 1470, 16374, 1470, 1470, 1470, 1470,
	15810, 1470, 1470, 1470, -1000, 1470, 1470, 1470, 1470, 1470,
	1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470,
	1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 466,
	1470, 1470, 1470, 1470, 1470, -1000, -1000, -1000, -1000, 1470,
	1470, 1470, 1470, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19195, -1000, 13554, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 37245, -1000, 1470, 128, 37245, 37245,
	272, 1966, 1512, -1000, 2027, 1976, 317, -1000, 1990, 1728,
	1191, 1084, 1512, 1389, 37245, -1000, 1485, -1000, -1000, -1000,
	1721, 1006, 1080, -1000, -1000, -1000, -1000, 1141, 15810, -1000,
	-1000, 2047, -1000, 18631, 457, 778, 2045, 33861, -1000, 330,
	330, 1417, 10719, -29, -1000, -1000, -1000, 611, 24272, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1879, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1481, 37245, -1000, -1000, 4597, 1040, -1000, 1560, -1000, 1462,
	-1000, 1510, 1593, 364, 1040, 359, 358, 353, -1000, -88,
	-1000, -1000, -1000, -1000, -1000, 599, 599, -1000, 260, 2014,
	2862, 5219, -1000, -1000, -1000, 33297, 1559, 1040, -1000, 1554,
	-1000, 696, 427, 449, 449, 1040, -1000, -1000, 37245, 1040,
	693, 692, 37245, 37245, -1000, 32733, -1000, 32169, 31605, 947,
	37245, 31041, 30477, 29913, 29349, 28785, -1000, 1785, -1000, 1755,
	-1000, -1000, -1000, 37245, 37245, 37245, 274, -1000, -1000, 37245,
	1040, -1000, -1000, 945, 944, 599, 599, 942, 1075, 1071,
	1069, 599, 599, 931, 1066, 25964, 177, 926, 924, 891,
	1024, 1059, 168, 953, 936, 888, 37245, 1553, 37245, -1000,
	174, 658, 355, 606, 1902, 1813, 1410, 344, 362, 1040,
	325, 325, 37245, -1000, 9575, -1000, -1000, 1056, 15810, -1000,
	750, 746, 746, -1000, -1000, -1000, -1000, -1000, -1000, 724,
	37245, 750, -1000, -1000, -1000, 746, 724, 37245, 724, 724,
	724, 724, 746, 746, 746, 724, 37245, 37245, 37245, 37245,
	37245, 37245, 37245, 37245, 37245, 9003, 9003, 9003, 565, 724,
	-310, -1000, 1055, -1000, 1667, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 113, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -107, 1408, 28221, -1000, -314, -316,
	-317, -319, -1000, -1000, -1000, -321, -323, -1000, -1000, -1000,
	15810, 15810, 15810, 15810, -185, -1000, 806, 16374, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 814, 679, 16374, 16374, 16374,
	16374, 16374, 16374, 16374, 16374, 16374, 16374, 16374, 16374, 16374,
	16374, 16374, 725, 1054, 1052, 534, 534, 534, 534, -1000,
	15246, 15810, 15810, 534, -1000, 1040, 27657, 15246, 15246, 15810,
	1884, 636, 912, 37245, -1000, 1084, -1000, -1000, -1000, 865,
	-1000, 37245, 37245, 451, 15810, 15810, 15810, 15810, 15810, 15810,
	12425, 15810, 15810, 15810, 15810, 15810, 15810, 15810, 15810, 15810,
	15810, 11861, 9575, 15246, 15246, 15246, 15246, 15246, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 437,
	1218, 1183, 1458, -1000, 1400, -1000, -179, 20888, 15810, 1049,
	2044, 1611, 37245, -1000, -1000, -1000, 1966, -1000, 1966, 1218,
	1742, 1730, 15246, -1000, -1000, 1742, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1215, -1000, 37245, 1389, 1936, 37245,
	1715, 1048, 293, -1000, 15810, 15810, 1387, -1000, 987, 37245,
	-1000, -185, -1000, 27093, -1000, -1000, 8431, -1000, 37245, 237,
	37245, -1000, 20324, 26529, 10147, -29, -1000, 10147, 1319, -1000,
	-26, -36, 12989, 523, -1000, -1000, -1000, 2716, 17502, 1195,
	523, 45, -1000, -1000, -1000, 1510, -1000, 1510, 1510, 1510,
	1510, 293, 293, 293, 293, -1000, -1000, -1000, -1000, -1000,
	1551, 1550, -1000, 1510, 1510, 1510, 1510, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1538, 1538, 1538, 1513, 1513, 313,
	-1000, 15810, 226, 37245, 1927, 870, 174, 326, 1607, 1040,
	1040, 1040, 326, -1000, 1248, 1160, -1000, -387, 1385, -1000,
	-1000, 2004, -1000, -1000, 694, 729, 728, 442, 37245, 156,
	234, -1000, 302, -1000, 37245, 1040, 686, 449, 1040, -1000,
	1040, -1000, -1000, -1000, -1000, -1000, 1040, 1355, -1000, 1275,
	821, 709, 801, 684, 1355, -1000, -1000, -117, 1355, -1000,
	1355, -1000, 1355, -1000, 1355, -1000, 1355, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 555, 37245, 156, 725, -1000,
	343, -1000, -1000, 725, 725, -1000, -1000, -1000, -1000, 1030,
	1025, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -371, 37245,
	-1000, 171, 601, 220, 255, 221, 37245, 135, 1956, 176,
	202, 37245, 37245, 325, 1665, 37245, 1930, 37245, -1000, -1000,
	-1000, -1000, -1000, 912, 37245, -1000, -1000, 724, 724, -1000,
	-1000, 37245, 724, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 724, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37245,
	37245, -1000, -1000, -1000, -1000, -1000, 116, -28, 291, -1000,
	-1000, -1000, -1000, -1000, 1960, -1000, 912, 673, 646, -1000,
	1470, -1000, -1000, 840, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 814, 16374, 16374, 16374, 1465, 381, 1545, 1488, 834,
	1158, 1158, 726, 726, 539, 539, 539, 539, 539, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1396, -1000, 1233, 851,
	1084, -1000, 1396, 1396, 1101, 15246, -1000, -1000, 647, -1000,
	15810, 1084, -1000, -1000, 1084, 1347, 1342, 2042, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 890,
	1268, 1268, 1268, 1268, 1268, 15810, 1090, -1000, -1000, -1000,
	1084, 1220, 1084, 1337, -1000, 1753, 1268, 1711, 1695, 1672,
	1157, 1640, 1613, 1600, 1084, 15246, 15246, 1334, 1470, 433,
	-1000, 1396, 1084, 1084, 1396, 1396, 9575, 1084, -1000, 37245,
	-1000, -298, -1000, -51, 483, 1470, -1000, 25964, 1084, -1000,
	1032, -1000, 38373, -1000, -1000, -1000, -1000, -1000, 23708, 1280,
	1742, -1000, -1000, 1470, 1452, -1000, -1000, 293, 29, 23144,
	-1000, -1000, 912, 912, 15810, -1000, -1000, -1000, -1000, -1000,
	-1000, 429, 2029, 296, 1470, -1000, 1413, 1828, -1000, -1000,
	-1000, 1935, 18067, -1000, 1470, 1470, 37245, 1585, 1582, -1000,
	395, -1000, 1319, -29, -44, -1000, -1000, -1000, -1000, 912,
	-1000, 1064, 238, 2294, -1000, 306, -1000, -1000, -1000, -1000,
	1827, 31, -1000, -1000, -1000, 293, 293, -1000, -1000, -1000,
	-1000, -1000, -1000, 1018, 1018, -1000, -1000, -1000, -1000, -1000,
	869, -1000, -1000, -1000, 855, -1000, -1000, 1471, 1654, 226,
	-1000, -1000, 599, 1013, 1839, 37245, -1000, -1000, 1182, 171,
	37245, 641, 1661, -1000, 1607, 1607, 1607, 37245, -1000, -1000,
	-1000, -1000, -375, 59, 312, -1000, -1000, -1000, 289, 37245,
	1449, -1000, 136, -1000, 1180, 1769, 37245, -1000, 1436, 1535,
	1040, 1040, -1000, -1000, -1000, 37245, 1470, -1000, -1000, -1000,
	-1000, 361, 1895, 1888, 156, 136, 523, 1040, -1000, -1000,
	-1000, -1000, -1000, -376, 1406, 351, 159, 262, 37245, 37245,
	37245, 37245, 37245, 480, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 196, 339, -1000, 37245, 37245, 465, -1000, -1000,
	-1000, 746, -1000, -1000, 746, -1000, -1000, -1000, -1000, -1000,
	1869, 37245, -30, -344, -1000, -337, 15810, -1000, -1000, -1000,
	-1000, 1350, 369, 1545, 16374, 16374, 15246, -112, 479, 479,
	725, -1000, -1000, -1000, 15810, 15810, 1366, 630, -1000, 15810,
	895, -1000, -1000, 15810, 15810, 15810, 1084, 218, -1000, -1000,
	-1000, -1000, -1000, 2038, -1000, 15810, -1000, -1000, 15810, 15810,
	-1000, 15810, 15810, 16938, 1084, 16938, 15810, 15810, 16938, -1000,
	1396, 1396, 15246, 9575, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 483, -1000, 449, 449, 449, 37245,
	-1000, -1000, -1000, -1000, -1000, -1000, 1317, 1950, -1000, 1768,
	1765, 2037, 2029, -1000, 20324, 1742, -1000, -1000, 37245, -293,
	-1000, 1798, 1881, -1000, -1000, -1000, -1000, 7859, 1966, 15810,
	1651, 37245, 1470, -1000, 19760, 37245, 37245, 20324, 20324, 20324,
	20324, 20324, -1000, 1694, 1688, -1000, 1719, 1690, 1806, 37245,
	-1000, 1394, 1084, 1976, 18067, 317, 15810, 22016, 1353, 20324,
	-1000, -1000, 20324, 37245, 7287, -1000, -1000, -39, -47, -1000,
	-1000, -1000, -1000, 2716, -1000, -1000, 871, 1934, 1820, -1000,
	-1000, -1000, -1000, 1382, -1000, 1364, 1315, 1361, 141, -1000,
	1581, 1866, 599, 599, -1000, 849, -1000, 1040, -1000, -1000,
	349, -1000, 1925, 37245, 1627, 1625, 1624, -1000, -386, 841,
	1529, 1580, 15810, 1523, 2002, 1260, 37245, -1000, -1000, 37245,
	-1000, -1000, 340, -1000, 226, 37245, -1000, -1000, -1000, 234,
	37245, -1000, 5967, 136, -1000, -1000, -1000, -1000, -1000, -1000,
	37245, 169, -1000, 1521, 1027, -1000, -1000, 1602, -1000, -1000,
	-1000, -1000, 131, 219, -1000, 37245, 443, 1654, 37245, -1000,
	-1000, -1000, 724, 724, -1000, -1000, 1850, -1000, 1040, 1268,
	16374, 16374, -1000, 534, -1000, 1470, 1084, 1510, 1510, -1000,
	1510, 1513, -1000, 1510, 102, 1510, 100, 1510, -1000, -1000,
	1084, 1084, 1079, 920, -98, -1000, 912, 15810, 1592, 1557,
	1268, -1000, 1501, 1499, 15810, 1268, -1000, 912, 1157, 1531,
	1247, -1000, -1000, -1000, 1005, -1000, 1294, 1268, 1480, 1084,
	-1000, -1000, 1084, -1000, -1000, 1958, 1958, 1958, 1296, 37809,
	37245, -1000, -1000, -1000, -1000, 2029, 2025, 1262, -1000, -1000,
	29, 356, -1000, 1833, 1881, -1000, 1992, 1793, 1991, -1000,
	-1000, -1000, 912, -1000, 1910, 1332, -1000, 597, 1202, -1000,
	-1000, 14682, 1340, 1741, 390, 1296, 1256, 1828, 1599, 1618,
	1848, -1000, -1000, -1000, -1000, 1687, -1000, 1684, -1000, -1000,
	1485, -1000, -1000, 1183, 1084, 1455, 237, 20324, 1245, 1245,
	-1000, 388, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 738,
	6478, 2055, -1000, 1000, -1000, 974, -1000, 669, 665, -1000,
	37245, 1498, -1000, 293, 995, 293, 837, -1000, 831, -1000,
	-1000, -207, -1000, -1000, 1692, 1716, -1000, -1000, 37245, -1000,
	-1000, 37245, 37245, 37245, 1496, 1989, -1000, 15810, 1493, 578,
	1338, 37245, 37245, -1000, -1000, 227, 1470, -1000, 1292, 1273,
	-1000, -148, -1000, 15810, -1000, -1000, -1000, 885, 885, -1000,
	1485, -1000, -1000, -1000, 1178, -1000, -1000, -122, 37245, 37245,
	37245, 37245, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 534, 16374, -1000, -1000, 293, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 15810, -1000, 15810, -1000,
	1966, 994, 912, 15810, 15810, -1000, 816, 803, 1268, -1000,
	1084, 16938, -1000, 16938, -1000, 15810, -1000, -1000, 1470, 1861,
	1470, 1470, 22016, -1000, -1000, 2025, 2022, 1988, 1777, 1789,
	1789, 1833, -1000, 1986, 1980, -1000, 990, 1974, 989, 660,
	-1000, 37245, 15810, 1470, -1000, 311, 37245, 1470, 37245, -1000,
	2019, -1000, -1000, 15810, 1492, -1000, 15810, -1000, -1000, -1000,
	-1000, -1000, -1000, 4302, 2029, 1245, -1000, -1000, 553, -1000,
	15810, -1000, -1000, -1000, 3056, -1000, -1000, -1000, -1000, -1000,
	1486, 15810, -1000, -1000, -1000, 1164, 1123, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1485, -1000, -1000, -1000, -1000,
	234, -384, 1283, 37245, 790, -1000, 1271, 1260, 417, -1000,
	15810, 290, -1000, 234, -1000, -164, -166, 1268, -1000, -1000,
	1933, -1000, -1000, 9575, -1000, -1000, 1484, 1606, -1000, 277,
	-1000, 1268, 1268, 1084, -1000, 1268, 1268, 1117, 1096, -1000,
	-1000, 1247, -1000, 874, 22580, -1000, 1972, 1969, 25400, 25400,
	483, 2022, -1000, 15810, 15810, 1733, 836, -1000, -1000, -1000,
	-1000, 976, 975, -1000, 969, -1000, 2053, -1000, 912, -1000,
	1470, -1000, 384, 1202, -1000, 1966, 912, 37245, 912, -14,
	2019, -1000, 1268, -1000, 1470, 1470, 1470, 1470, 1470, 1470,
	1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470,
	1470, 37245, 1213, -1000, -1000, 1932, 1242, 57, -1000, 1231,
	-1000, -1000, -1000, -1000, 14118, -1000, -1000, -1000, -1000, -1000,
	-1000, 317, 1258, -1000, 577, 37245, 37245, 1084, 259, -130,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15810,
	1205, -1000, -1000, -1000, -1000, -1000, 1205, 1205, -1000, -1000,
	912, 1220, -1000, 833, -1000, -1000, -1000, -1000, -1000, 37245,
	1202, 37245, -1000, 1188, 1084, 1470, 1966, -1000, 1167, -1000,
	317, -1000, 1468, 1580, -1000, 1084, -120, 9575, 6715, 1145,
	-1000, -1000, 1706, -115, -136, 1157, 24836, -1000, -1000, -1000,
	-1000, -1000, 1198, -1000, -1000, 22016, 36681, -1000, 1616, 805,
	-120, 15810, 1214, -1000, -1000, -45, -1000, -1000, -1000, -1000,
	-1000, 1602, -1000, 1702, -1000, 1084, -1000, -1000, -1000, 1121,
	-1000, 3760, -237, 1614, -1000, 2034, -1000, -1000, -1000, 734,
	965, -1000, -1000, -1000, -1000, 1125, 37245, 308, -1000, -1000,
	-122, -123, -1000, -1000, 36681, -233, 523, 4302, -1000, -1000,
	2036, 524, 524, -1000, -1000, -392, 1092, 170, -1000, -132,
	-1000, -1000, 1923, -14, -1000, -1000, -1000, 282, 854, -1000,
	-1000, 787, -392, -1000, -146, -256, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4302, 182, 182, -1000, 1601, -1000,
	-1000, 4302, -1000, 1489, -241, -1000, -330, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2351, 2350, 18, 1, 2349, 67, 110, 194, 24,
	173, 99, 2348, 2347, 2346, 2345, 2343, 2342, 2341, 206,
	205, 200, 2340, 2339, 2338, 2337, 2334, 2328, 2327, 2326,
	2325, 2324, 203, 155, 169, 2322, 2321, 2320, 102, 168,
	81, 83, 171, 2319, 2318, 70, 2317, 2315, 2312, 176,
	175, 703, 2310, 174, 101, 34, 2309, 2308, 2305, 2304,
	2301, 2300, 2298, 2297, 2295, 2288, 2287, 2284, 2283, 2282,
	2281, 2280, 233, 2273, 2272, 15, 2267, 76, 2265, 2263,
	2262, 2261, 121, 2260, 2259, 2258, 2255, 2254, 2252, 135,
	2250, 2249, 2247, 2246, 172, 2245, 2244, 144, 105, 96,
	2243, 2242, 91, 163, 2241, 118, 2240, 2239, 2238, 146,
	2234, 4116, 2233, 55, 52, 2229, 46, 80, 50, 47,
	12, 2227, 2226, 53, 79, 2224, 94, 58, 2221, 95,
	90, 2220, 2219, 8, 6, 2218, 4, 2217, 2, 65,
	2216, 2215, 116, 2214, 2213, 2211, 89, 2209, 2207, 4124,
	2206, 82, 124, 92, 69, 2205, 28, 41, 2204, 2203,
	2202, 2201, 2200, 36, 2197, 2196, 2195, 133, 25, 159,
	21, 37, 39, 117, 2194, 30, 71, 2192, 132, 131,
	2189, 45, 19, 23, 2187, 26, 122, 149, 27, 88,
	128, 2186, 2184, 48, 63, 2183, 2182, 2181, 2180, 2179,
	2178, 73, 2177, 43, 2176, 178, 2175, 78, 2173, 35,
	38, 2172, 60, 125, 61, 31, 2171, 156, 2170, 40,
	157, 120, 154, 2169, 2168, 2167, 164, 238, 2166, 2163,
	75, 161, 136, 143, 2161, 240, 2160, 2158, 98, 1526,
	586, 29, 158, 2157, 2156, 2675, 130, 134, 22, 2155,
	115, 2154, 2153, 2152, 177, 167, 106, 898, 104, 2151,
	13, 2150, 2149, 2148, 2147, 2146, 2144, 84, 180, 59,
	7, 153, 66, 2142, 2141, 2140, 119, 97, 2137, 152,
	148, 123, 150, 2136, 160, 137, 107, 2135, 85, 2132,
	2131, 2130, 2128, 86, 2127, 2124, 2122, 2118, 151, 142,
	111, 77, 2115, 74, 108, 140, 139, 42, 2114, 33,
	2113, 2112, 170, 20, 2111, 9, 44, 49, 16, 100,
	2104, 2103, 0, 2100, 11, 162, 239, 141, 2099, 2097,
	5, 2095, 10, 2084, 2080, 129, 2079, 2076, 2075, 17,
	32, 14, 3, 2074, 2073, 3816, 2645, 127, 2072, 181,
}

//line sql.y:6506
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 343, 344, 344, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 322, 322,
	322, 325, 325, 30, 67, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 80, 80, 20, 21, 21, 21, 21,
	347, 347, 144, 144, 142, 142, 143, 143, 212, 212,
	22, 23, 23, 222, 222, 221, 221, 221, 223, 223,
	223, 223, 257, 257, 24, 24, 24, 24, 24, 95,
	95, 324, 324, 323, 315, 315, 314, 314, 313, 321,
	321, 320, 320, 319, 36, 37, 46, 46, 46, 46,
	47, 48, 326, 326, 289, 52, 52, 51, 51, 51,
	51, 53, 53, 50, 50, 49, 49, 291, 291, 278,
	278, 290, 290, 290, 290, 290, 290, 290, 277, 277,
	106, 106, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 338, 338, 192, 192, 192, 192, 192,
	192, 115, 115, 123, 123, 123, 123, 113, 113, 114,
	112, 112, 112, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 122, 122, 119, 119,
	119, 120, 120, 120, 339, 339, 339, 339, 260, 260,
	260, 260, 263, 263, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 262, 262, 262, 262, 262, 264, 264,
	264, 264, 264, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 266, 266,
	266, 266, 266, 266, 266, 266, 276, 276, 267, 267,
	271, 271, 272, 272, 272, 273, 273, 273, 274, 274,
	269, 269, 269, 269, 269, 269, 270, 270, 270, 279,
	303, 303, 302, 302, 300, 300, 300, 300, 288, 288,
	297, 297, 297, 297, 297, 287, 287, 283, 283, 283,
	284, 284, 285, 285, 282, 282, 286, 286, 299, 299,
	298, 280, 280, 281, 281, 305, 340, 340, 340, 340,
	341, 341, 306, 331, 332, 330, 330, 330, 330, 330,
	77, 77, 77, 234, 234, 234, 295, 295, 294, 294,
	294, 296, 296, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 229, 229, 229, 329, 329, 329, 329, 329, 329,
	328, 328, 328, 292, 292, 292, 327, 327, 54, 54,
	176, 176, 43, 43, 43, 43, 43, 43, 42, 42,
	42, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 44, 44, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 82, 82, 83, 83, 83,
	83, 84, 84, 84, 308, 308, 55, 55, 3, 3,
	132, 134, 135, 135, 133, 133, 133, 133, 133, 133,
	57, 57, 56, 56, 137, 136, 138, 138, 138, 1,
	1, 2, 2, 4, 4, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 275, 275, 275,
	307, 307, 309, 311, 311, 311, 311, 310, 91, 91,
	26, 35, 35, 27, 27, 27, 27, 28, 28, 58,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 333, 333,
	228, 228, 236, 236, 227, 227, 250, 250, 250, 230,
	230, 230, 231, 231, 337, 337, 337, 60, 60, 60,
	62, 62, 63, 64, 64, 252, 252, 253, 253, 65,
	66, 78, 78, 78, 78, 78, 78, 81, 81, 81,
	13, 13, 13, 13, 74, 74, 74, 12, 12, 61,
	61, 68, 334, 334, 335, 336, 336, 336, 336, 69,
	71, 29, 29, 29, 29, 29, 29, 101, 101, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 96, 96, 96, 90, 90, 348, 72, 73, 73,
	94, 94, 94, 87, 87, 87, 93, 93, 93, 14,
	14, 15, 211, 211, 16, 16, 98, 98, 100, 100,
	100, 100, 100, 102, 102, 102, 102, 102, 102, 102,
	97, 97, 99, 99, 99, 99, 243, 243, 243, 242,
	242, 126, 126, 128, 127, 127, 129, 129, 130, 130,
	130, 130, 174, 174, 152, 152, 209, 209, 207, 207,
	208, 208, 210, 210, 210, 210, 213, 213, 131, 131,
	131, 131, 139, 139, 140, 140, 141, 141, 251, 251,
	248, 248, 248, 247, 247, 145, 145, 145, 147, 146,
	146, 146, 146, 148, 148, 150, 150, 149, 149, 151,
	156, 156, 155, 155, 153, 153, 153, 153, 154, 154,
	154, 154, 157, 157, 111, 111, 111, 111, 111, 111,
	111, 121, 121, 121, 121, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 79, 79, 79, 225, 225, 158, 158, 166,
	166, 166, 166, 159, 159, 159, 159, 159, 159, 159,
	167, 167, 167, 173, 168, 168, 164, 164, 164, 164,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 318, 318,
	317, 317, 316, 316, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 349, 349, 268, 268, 268,
	165, 165, 165, 165, 165, 92, 92, 92, 92, 92,
	256, 256, 256, 259, 259, 259, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 179, 179, 88, 88, 177, 177, 178, 180, 180,
	175, 175, 175, 161, 161, 161, 181, 181, 182, 182,
	183, 183, 185, 184, 184, 186, 187, 187, 187, 188,
	188, 189, 189, 189, 45, 45, 45, 45, 45, 40,
	40, 40, 40, 41, 41, 41, 103, 103, 103, 103,
	105, 105, 104, 104, 75, 75, 76, 76, 76, 109,
	109, 110, 110, 110, 107, 107, 108, 108, 205, 205,
	190, 190, 190, 197, 197, 197, 193, 193, 195, 195,
	195, 196, 196, 196, 194, 202, 202, 204, 204, 203,
	203, 199, 199, 200, 200, 201, 201, 201, 198, 198,
	160, 160, 160, 160, 160, 206, 206, 206, 206, 214,
	214, 170, 170, 172, 172, 171, 125, 215, 215, 219,
	216, 216, 220, 220, 220, 220, 220, 217, 217, 218,
	218, 244, 244, 244, 224, 224, 235, 235, 232, 232,
	233, 233, 226, 226, 237, 237, 237, 70, 169, 169,
	304, 304, 301, 240, 240, 241, 241, 245, 245, 249,
	249, 246, 246, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 345, 346, 254, 255, 255, 255,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 2, 2, 2, 1, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 3, 0, 1,
	4, 3, 3, 4, 2, 0, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 1, 3, 1, 7, 5, 6, 6, 7,
	0, 1, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 0, 1, 2, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	0, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	6, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 5, 5, 0, 6, 5, 6, 4,
	5, 0, 8, 9, 0, 3, 0, 1, 0, 3,
	8, 4, 1, 3, 3, 6, 7, 7, 8, 4,
	0, 1, 0, 1, 3, 3, 1, 1, 2, 1,
	1, 0, 2, 0, 2, 5, 3, 7, 4, 4,
	4, 4, 3, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 2, 2,
	1, 3, 2, 0, 4, 4, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	4, 2, 4, 5, 4, 4, 4, 4, 4, 3,
	3, 3, 5, 2, 3, 3, 3, 3, 1, 1,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 2, 1, 3,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 3, 4, 3, 7, 0, 3, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	6, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 9, 6, 6, 6, 2, 2, 3,
	3, 3, 1, 1, 1, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 5, 5, 6,
	4, 4, 8, 6, 8, 6, 8, 5, 4, 2,
	2, 1, 2, 2, 2, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 6, 4, 4, 4,
	7, 8, 6, 5, 6, 8, 11, 6, 0, 2,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -343, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -58, -59, -60, -62,
	-63, -64, -65, -66, -12, -61, -29, -30, -67, -68,
	-69, -70, -71, -14, -15, -16, -7, -6, -11, 7,
	8, -80, -31, 30, -36, -46, 217, -47, -37, 218,
	-48, 220, 219, 256, 221, 249, 72, 298, 299, 301,
	302, 303, 304, -81, 254, 255, 223, 34, 43, 31,
	32, 35, 227, 262, 263, 226, -8, -32, 6, -345,
	9, 424, 251, 250, 26, -10, 444, 83, -344, 577,
	-205, -190, 20, 31, 27, -189, -185, -94, -190, 18,
	16, 5, -72, -348, -72, -72, 10, 11, -72, -289,
	-291, 83, 154, 83, -72, -52, -51, -50, -49, -53,
	29, -43, -44, -312, -42, -39, 222, 219, 266, 117,
	118, 256, 257, 258, 221, 240, 255, 259, 254, 275,
	-38, 78, 31, 444, 447, -296, 218, 224, 225, 425,
	120, 119, 73, 220, -293, 350, 547, -53, 549, 99,
	101, 548, 42, 230, 550, 551, 552, 553, 239, 554,
	555, 556, 557, 563, 564, 565, 566, 121, 5, -72,
	-249, -245, -322, -239, 86, 87, 88, 441, 242, 474,
	475, 291, 78, 39, 347, 350, 547, 298, 312, 306,
	333, 325, 442, 476, 294, 243, 279, 544, 323, 129,
	549, 297, 477, 257, 355, 356, 357, 99, 301, 392,
	562, 296, 478, 560, 101, 548, 77, 49, 42, 252,
	321, 226, 317, 550, 280, 479, 452, 273, 120, 117,
	569, 34, 315, 48, 28, 559, 119, 47, 551, 145,
	480, 552, 359, 338, 538, 46, 360, 258, 481, 81,
	263, 446, 546, 361, 316, 362, 290, 558, 223, 482,
	530, 363, 364, 539, 483, 339, 343, 484, 384, 365,
	576, 50, 485, 486, 540, 118, 487, 76, 553, 310,
	311, 488, 288, 241, 386, 337, 437, 105, 106, 107,
	108, 438, 109, 102, 439, 110, 104, 103, 111, 239,
	33, 366, 443, 292, 56, 267, 387, 44, 341, 573,
	43, 534, 489, 537, 336, 332, 434, 51, 490, 491,
	492, 493, 554, 335, 309, 331, 568, 130, 285, 555,
	60, 225, 345, 344, 346, 274, 383, 328, 494, 495,
	496, 246, 79, 497, 318, 19, 498, 499, 367, 281,
	500, 54, 501, 502, 390, 255, 503, 52, 556, 37,
	260, 570, 557, 504, 505, 506, 507, 262, 508, 369,
	509, 368, 340, 342, 269, 370, 445, 510, 314, 259,
	561, 511, 247, 545, 261, 266, 254, 391, 248, 512,
	513, 514, 515, 516, 295, 517, 518, 302, 563, 435,
	41, 519, 520, 521, 522, 289, 284, 385, 394, 59,
	80, 352, 523, 543, 308, 282, 524, 299, 53, 564,
	565, 566, 276, 567, 7, 574, 575, 372, 121, 286,
	287, 45, 329, 268, 525, 526, 319, 320, 334, 307,
	330, 300, 531, 270, 373, 436, 256, 527, 393, 283,
	348, 353, 449, 275, 374, 542, 448, 327, 324, 277,
	528, 375, 231, 271, 272, 529, 532, 376, 377, 293,
	378, 379, 380, 381, 382, 278, 447, 305, 322, 354,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 433, 229,
	-72, 229, -149, -245, 229, -217, 356, -236, 358, 371,
	366, 376, 364, -228, 367, 369, 269, -337, 384, 229,
	373, 217, 171, 359, 368, 377, 378, 293, 379, 382,
	278, -333, -322, 552, 567, 129, 326, 363, 361, 385,
	534, 381, 380, -245, 300, -252, 305, -240, -322, -239,
	303, -149, -78, 530, 221, -254, -254, -96, 534, 536,
	-168, -111, 138, -121, -124, -116, -117, -162, -163, -164,
	-165, -122, -175, 160, 161, 168, 139, -173, -125, 24,
	440, 426, 425, 171, 29, 213, 66, 67, 428, 429,
	141, 55, 401, 402, -123, 397, 403, 398, 431, 432,
	112, 433, 102, 104, 103, 434, 435, 436, 437, 438,
	439, 105, 106, 107, 108, 109, 110, 111, -240, -245,
	234, 396, 228, 166, 424, -118, -114, -6, -171, 395,
	399, 400, 404, -322, -239, -120, -119, -158, 89, 95,
	100, 96, -342, 113, -345, 90, 91, 92, 93, 94,
	114, 115, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 42, 372, 372, -149, -72, -72, -72,
	-72, -183, -94, -185, -8, -6, -345, 6, -72, -6,
	-7, -11, -32, -34, 470, -33, -245, -190, -205, 10,
	156, 40, 48, -188, -189, -10, -6, -111, 17, 21,
	22, -99, 162, -111, -245, -73, -99, -226, 233, -72,
	-72, -216, -257, 300, -220, 385, 384, -241, -218, -240,
	-238, -217, 383, 222, 21, 450, 137, 23, 25, 140,
	171, 124, 17, 141, 35, 224, 326, 240, 170, 236,
	425, 217, 70, 451, 397, 398, 395, 401, 427, 428,
	396, 358, 29, 11, 453, 26, 250, 22, 36, 164,
	219, 144, 454, 253, 24, 251, 112, 115, 456, 20,
	73, 245, 12, 238, 38, 14, 457, 458, 15, 234,
	233, 156, 230, 68, 9, 213, 27, 153, 64, 459,
	132, 460, 461, 462, 463, 125, 66, 154, 18, 571,
	399, 400, 31, 535, 440, 264, 166, 71, 57, 536,
	138, 464, 465, 113, 466, 116, 74, 541, 134, 16,
	69, 40, 467, 265, 468, 235, 572, 469, 388, 470,
	155, 220, 424, 67, 471, 228, 371, 6, 430, 30,
	249, 237, 123, 65, 472, 229, 143, 431, 432, 232,
	126, 114, 5, 131, 32, 10, 72, 75, 402, 403,
	404, 55, 122, 444, 142, 13, 473, 389, 136, 129,
	-290, 154, -277, -281, -240, 244, -306, 240, -149, -299,
	-298, -240, -95, -235, 230, 238, 237, 131, -326, 134,
	286, 396, 228, -49, -50, -217, 170, -82, 261, 265,
	84, 84, -281, -280, -279, -327, 265, 244, -305, -297,
	236, 245, -287, 237, 238, -282, 230, 132, -327, -282,
	235, 245, 265, 265, 121, 265, 121, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 260, -288, 146, -288,
	448, 448, -293, -327, -327, -327, 232, 33, 33, -237,
	-282, 232, 23, -288, -288, -217, 170, -288, -288, -288,
	-288, 273, 273, -288, -288, -288, -288, -288, -288, -288,
	-288, -288, -288, -288, -288, -288, -288, -288, 229, -326,
	-103, 382, 293, 78, -51, 275, -35, -149, -235, 230,
	231, -326, 262, -149, 214, -149, -230, 154, 13, -230,
	-227, 372, 370, 357, 362, -230, -230, -230, -230, 276,
	355, -283, 230, 33, 241, 372, 276, 355, 276, 277,
	276, 277, 365, 375, 276, -250, 12, 156, 396, 360,
	364, 269, 229, 270, 231, 374, -322, 537, 277, -250,
	90, -231, 154, 372, 272, -230, -255, -345, -241, 326,
	-255, -255, 30, 87, 232, -240, -74, -240, 90, -13,
	-9, -20, -19, -21, 146, -101, 372, -89, 171, 552,
	538, 539, 540, 537, 369, 545, 543, 541, 276, 542,
	84, 134, 136, 137, 130, -111, 153, -159, 146, 147,
	148, 149, 150, 151, 152, 156, 138, 140, 154, 155,
	135, 157, 158, 159, 160, 161, 162, 163, 165, 164,
	166, 167, 170, 215, 216, -117, -117, -117, -117, -173,
	-345, -345, -345, -117, -225, -345, -117, -345, -345, -345,
	-345, -179, -111, -345, -349, -345, -349, -349, -268, -345,
	-268, -345, -345, -345, -345, -345, -345, -345, -345, -345,
	-345, -345, -345, -345, -345, -345, -345, -345, -345, -345,
	-345, -345, 214, -345, -345, -345, -345, -345, -268, -268,
	-268, -268, 100, 95, 89, -175, 96, 90, -240, -245,
	-6, -7, -168, -254, -334, -335, -152, -149, -345, 293,
	-240, -240, 262, -188, -10, -6, -183, -189, -185, -6,
	-72, -87, -100, 61, 62, -102, 22, 36, 65, 63,
	21, -346, 85, -346, -205, -346, 84, -34, -209, 83,
	59, 41, 90, 90, 84, 19, -184, -186, -111, 12,
	-243, 130, -242, 23, -240, 90, 214, 98, 12, -150,
	27, -149, -226, -226, 84, 300, -220, -257, -222, -221,
	386, 388, 146, -244, -240, 90, 29, 85, 84, -149,
	-260, -263, -265, -264, -266, -261, -262, 323, 324, 171,
	327, 329, 330, 331, 332, 333, 334, 335, 336, 337,
	338, 30, 252, 319, 320, 321, 322, 339, 340, 341,
	342, 343, 344, 345, 346, 306, 325, 442, 307, 308,
	309, 310, 311, 312, 314, 315, 316, 317, 318, -325,
	-322, 83, 85, 84, -267, 83, -103, 229, -322, 230,
	230, 230, -72, 424, -288, -288, 260, 17, -42, -39,
	-312, 16, -38, -39, 222, 117, 118, 219, 83, -277,
	83, -286, -325, -322, 83, 132, 235, 131, -285, -282,
	-285, -286, -322, -175, -322, 132, 132, -213, -240, -213,
	-213, 21, -213, 21, -213, 21, 92, -240, -213, 21,
	-213, 21, -213, 21, -213, 21, -213, 21, 29, 76,
	77, 29, 79, 80, 81, -175, -175, -277, -217, -149,
	-322, 92, 92, -288, -288, 92, 90, 90, 90, -288,
	-288, 92, 90, -247, -245, 90, -328, 246, 290, 292,
	92, 92, 92, 92, 29, 90, -329, 29, 559, 558,
	560, 561, 562, 92, 29, 92, 29, 92, -240, 83,
	-149, -109, 280, 217, 219, 222, 74, 90, 294, 146,
	42, 84, 232, 229, -322, -232, 234, -232, -240, -246,
	-245, -238, 90, -111, -284, 12, 156, -250, -250, -230,
	-149, -284, -250, -230, -149, -230, -230, -230, -230, -250,
	-250, -250, -230, -245, -245, -149, -149, -149, -149, -149,
	-149, -149, -255, -255, -255, -231, -230, 537, 90, 74,
	-253, 303, 337, 531, 532, 533, 84, 444, -142, -149,
	537, 537, 537, 537, 537, 537, -111, -111, -111, -111,
	466, -166, 113, 138, 114, 115, -124, -167, -171, -173,
	97, 156, 140, 154, 155, -116, -117, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-256, -322, 90, 171, 90, 90, -97, -99, -111, -111,
	-322, -240, -97, -97, -111, -93, 22, 36, -177, -178,
	142, -175, -346, -346, 92, -240, -240, -86, -85, 406,
	407, 408, 409, 411, 412, 413, 416, 417, 421, 422,
	405, 423, 410, 415, 418, 419, 420, 414, 322, -111,
	-111, -111, -111, -111, -111, -79, -111, 124, 125, 126,
	-169, -168, -321, -320, -319, -111, -111, -111, -111, -111,
	-111, -111, -111, -111, -98, 22, 36, -97, -241, -246,
	-238, -97, -98, -98, -97, -97, 214, -205, -346, 84,
	-336, 388, 389, 535, -248, 265, -247, 23, -169, 90,
	12, -211, 75, -240, -188, -188, 61, 62, 57, -97,
	-102, -346, -33, 23, -207, -240, 60, 90, -269, -217,
	347, 348, -111, -111, 84, -187, 25, 26, -149, -242,
	162, -246, -149, -212, 265, -149, -127, -129, -130, -131,
	-152, -174, -345, -132, 462, 459, 12, -142, -143, -151,
	-245, -220, -222, 84, 387, 389, 390, 74, 116, -111,
	-270, 170, -295, -294, -293, -277, -279, -280, -281, 85,
	-270, -273, 353, 352, -267, -267, -267, -267, -267, -269,
	-269, -269, -269, 83, 83, -267, -267, -267, -267, -271,
	83, -271, -271, -272, 83, -272, -306, -111, -303, -302,
	-300, -301, 239, 99, 444, 75, -298, -187, 92, -109,
	-233, 234, -304, -301, -322, -322, -322, -233, -322, 90,
	-322, 90, -83, -55, -1, 571, 572, 573, 84, 17,
	-278, -277, -54, 290, -309, -310, 265, -305, -299, -286,
	132, -285, -286, -286, -322, 84, 27, 121, 121, 121,
	121, 444, 219, 30, -277, -54, -256, 232, -256, -256,
	90, 90, -229, 567, -142, -105, 282, 146, 271, 271,
	229, 229, 284, -149, 295, 297, 296, 294, 21, 283,
	285, 287, 273, -149, -149, -232, 74, -144, -149, 24,
	-245, -149, -230, -230, -149, -230, -230, -149, -240, -89,
	388, 84, 444, 20, -90, 20, -345, 113, 114, 115,
	-167, -116, -117, -116, 137, 253, 84, -346, 23, 84,
	75, -346, -346, -346, 84, 12, -97, -180, -178, 144,
	-111, -346, -346, 84, 84, 12, -259, 23, -346, -346,
	-346, -346, -346, -179, -346, 12, -346, -346, 84, 84,
	-346, 84, 84, 84, -318, 84, 84, 84, 84, -346,
	-97, -97, -345, 214, -346, -346, -346, -346, -346, -241,
	-335, 534, 389, -156, -155, -153, 72, 233, 73, -345,
	-247, -346, 90, 87, -208, 87, -207, -161, -240, 92,
	96, -190, -126, -128, 12, -102, -173, 85, 84, -269,
	-194, -199, -227, -240, 90, 171, -186, 214, -157, 13,
	-160, 30, 55, -9, -345, -345, 30, 84, -145, -147,
	-146, -148, 64, 68, 70, 65, 66, 67, 71, -251,
	23, -127, -7, -6, -345, -345, -345, -149, -142, -347,
	12, 75, -347, 84, 214, -221, -223, 391, 388, 394,
	-322, 90, -82, 84, -293, -281, -191, -106, 38, -274,
	354, -269, -269, -276, 90, -276, 92, 92, 85, -45,
	-40, -41, 31, 78, -300, -288, 90, 37, -240, 85,
	-105, -149, 138, 74, -304, -304, -304, -245, -2, 570,
	576, 132, 83, 357, 16, -207, 84, 85, -176, 291,
	85, -311, 55, -240, 85, 83, -286, -286, -240, -345,
	229, 29, 29, -54, -176, -270, -322, 569, 568, 85,
	231, 289, -110, 401, -107, 90, 86, -149, -149, -149,
	-149, -149, 222, 219, 274, 232, -142, -149, 84, -77,
	248, 243, -250, -250, 31, -149, 388, 546, 544, -111,
	137, 253, -124, -117, -99, 441, -258, 171, 323, 252,
	321, 317, 337, 328, 352, 319, 353, 316, 315, 314,
	-258, -256, -111, -111, -183, 145, -111, 143, -111, -111,
	-111, -346, 171, 323, 12, -111, -319, -111, -111, -111,
	-317, -316, -120, -175, -342, -346, -317, -111, -111, -316,
	-346, -346, -98, -241, -153, -282, -282, -282, -213, 84,
	-224, 20, 12, 55, 55, -126, -157, -127, -102, -240,
	-197, 530, -202, 44, -200, -201, 45, -198, 46, 54,
	162, -188, -111, -214, 74, -215, -219, -175, -170, -172,
	-171, -345, -206, -346, -240, -213, -215, -129, -130, -130,
	-129, -130, 64, 64, 64, 69, 64, 69, 64, -146,
	-245, -346, -346, -7, -7, -111, -248, 75, -127, -127,
	-151, -245, 162, 388, 392, 393, -293, -341, 113, 138,
	29, 74, 350, 99, -339, 170, -340, 235, 131, 132,
	247, 23, 39, 85, 84, 85, 84, 85, 84, -234,
	480, 138, -41, -40, -288, -288, 92, -322, 231, 24,
	-149, 74, 74, 74, -84, 574, 92, 83, -3, 78,
	-111, 83, 17, -277, -175, 267, 156, -303, -207, -307,
	-309, -149, -113, -345, -112, -114, -118, 160, 161, -176,
	-149, -104, 280, 288, 83, -108, 87, -324, 75, 271,
	350, 271, -149, -77, -45, -149, -230, -230, 31, -322,
	-346, -124, -117, -345, -346, -267, -267, -267, -272, -267,
	311, -267, 311, -267, -346, -346, 84, -346, 20, -346,
	-88, 430, -111, 84, 84, -346, 83, 83, -111, -346,
	-318, 84, -346, 84, -346, 84, -346, -346, -154, 20,
	-154, -154, -346, 87, -149, -157, -181, 14, -194, 49,
	329, -204, -203, 53, 45, -201, 17, 47, 17, 28,
	-214, 84, 146, 84, -346, -346, 84, 55, 214, -346,
	-157, -140, -139, 74, 75, -141, 74, -139, 64, 64,
	-209, -346, -346, 84, -212, -127, -157, -157, 214, 113,
	-345, -115, -123, -113, 10, 90, 90, -322, 132, 132,
	-149, 83, -269, 90, -269, 92, 92, 480, 29, 79,
	80, 81, 29, 76, 77, -149, -149, -149, -149, -308,
	83, 17, -111, 83, 146, 85, -207, -207, 268, -171,
	-345, 85, -346, 84, -275, 444, 447, -111, -119, -119,
	-209, 85, -315, 444, -323, -240, -240, -240, -240, -116,
	-269, -111, -111, -188, 90, -111, -111, 92, 92, -346,
	-346, -317, -316, -111, -345, 64, 16, 14, -345, -345,
	-248, -181, -182, 15, 17, -195, 51, -193, 50, -193,
	-203, 17, 17, 90, 17, 90, 132, -219, -111, -172,
	55, -9, -240, -170, -240, -183, -111, 83, -111, -120,
	-157, -157, -111, -163, 433, 102, 104, 103, 434, 435,
	436, 437, 438, 439, 105, 106, 107, 108, 109, 110,
	111, 83, -111, 85, 85, -209, -307, -55, 85, -207,
	92, 85, -171, -91, -345, 264, -340, -309, 448, 448,
	-346, 23, -314, -313, -241, 83, 75, -92, 156, 444,
	-346, -346, -346, -346, -346, 85, 85, -346, -346, 84,
	-210, -346, -240, 235, 17, 17, -210, -210, -156, -182,
	-111, -168, -196, 52, 74, 116, 90, 90, 90, 10,
	-170, 214, -188, -207, -134, 357, -183, -346, -207, 85,
	23, 85, 576, 132, 85, 264, -9, 84, 146, -207,
	-149, -346, 442, 71, 445, -111, 84, -346, -346, -346,
	74, 116, -215, -240, 85, -346, -345, -188, 85, -192,
	-9, 83, -3, -346, -75, 444, -313, -292, -241, 90,
	92, 85, 60, 443, 446, -318, -240, 235, -248, -135,
	-133, -240, 494, -331, -332, 74, -341, -338, 113, 138,
	99, -339, 122, 123, -75, -111, 83, -76, 279, 534,
	-324, 60, -346, -346, 84, 20, -260, -57, 504, -332,
	74, 11, 10, 113, 90, 85, -207, 240, -315, 444,
	-133, 501, -270, -120, -330, 248, 243, 246, 30, -330,
	-4, 575, 85, 281, 445, -56, 24, -134, 242, 29,
	113, 92, -4, 446, 504, -120, -137, -136, -138, 538,
	113, 29, -136, -138, 74, -120, 74, 454, 538,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 736,
	736, 736, 0, 736, 0, 0, 736, -2, -2, 736,
	1199, 0, 736, 0, 0, -2, 668, 670, 0, 672,
	-2, 0, 0, 681, 1673, 1673, 731, 0, 0, 0,
	0, 0, 736, 736, 736, 736, 1060, 48, 736, 0,
	83, 84, 687, 688, 689, 63, 0, 1671, 1, 3,
	69, 73, 0, 0, 0, 56, 1069, 0, 76, 0,
	0, 740, 0, 738, 0, 1182, 736, 736, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 515, 455, 498, 453, 484, -2, 446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 348, 348, 0, 0, -2, 446, 446, 446, 0,
	0, 0, 481, 1184, 401, 348, 348, 0, 348, 348,
	348, 348, 0, 0, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 1086,
	151, 1200, 1197, 1198, 38, 39, 40, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 0,
	1176, 0, 598, 837, 0, 659, 659, 0, 659, 659,
	659, 659, 0, 0, 0, 610, 0, 0, 0, 0,
	656, 0, 0, 629, 631, 0, 656, 0, 662, 0,
	643, 659, 1674, 1674, 1674, 1167, 0, 653, 651, 665,
	666, 648, 649, 667, 671, 0, 676, 679, 1193, 1194,
	0, 694, 47, 1432, 686, 699, 700, 0, 732, 733,
	43, 934, 0, 859, 864, 875, 888, 889, 890, 891,
	892, 894, 895, 0, 0, 0, 0, 900, 901, 0,
	0, 0, 0, 0, 915, 0, 0, 0, 0, 0,
	1041, 0, 1005, 1005, 951, 1005, 1007, 1007, 0, 0,
	0, 1670, 1465, 1468, 1469, 1488, 1571, 1617, 1458, 1463,
	1466, 1459, 1460, 1461, 1462, 1464, 1467, 1470, 1050, 0,
	0, 0, 0, 0, 0, 256, 257, 933, 1156, 1007,
	1007, 1007, 1007, -2, -2, 203, 204, 205, 206, 207,
	208, 209, 0, 199, 0, 261, 262, 258, 259, 260,
	917, 918, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 1673, 0, 709, 0, 0, 0, 0,
	0, 1069, 0, 1061, 1060, 61, 0, 736, -2, 0,
	0, 0, 0, 45, 0, 50, 796, 75, 74, 1108,
	0, 0, 0, 57, 1070, 65, 67, 1071, 0, 741,
	742, 0, 772, 776, 0, 737, 0, 0, 1183, 1182,
	1182, 100, 0, 1613, 1160, -2, -2, 0, 0, 1195,
	1196, 1169, -2, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, -2,
	0, 0, 161, 162, 0, 41, 374, 0, 157, 0,
	368, 318, 1086, 0, 0, 0, 0, 0, 736, 0,
	1177, 142, 143, 149, 150, 348, 348, 495, 0, 0,
	151, 151, 462, 463, 464, 0, 0, -2, 372, 0,
	447, 0, 0, 362, 362, 366, 364, 365, 0, 0,
	0, 0, 0, 0, 475, 0, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 0, 349, 0,
	493, 494, 402, 0, 0, 0, 0, 473, 474, 0,
	0, 1185, 1186, 0, 0, 348, 348, 0, 0, 0,
	0, 348, 348, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 141,
	1099, 0, 0, 0, -2, 0, 590, 0, 0, 0,
	1178, 1178, 0, 597, 0, 599, 600, 0, 0, 601,
	0, 656, 656, 654, 655, 603, 604, 605, 606, 659,
	0, 0, 357, 358, 359, 656, 659, 0, 659, 659,
	659, 659, 656, 656, 656, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1674, 1674, 1674, 662, 659,
	0, 639, 0, 640, 641, 644, 645, 1675, 1676, 1216,
	646, 647, 1168, 669, 677, 680, 697, 695, 696, 698,
	690, 691, 692, 693, 0, 711, 712, 717, 0, 0,
	0, 0, 723, 724, 725, 0, 0, 728, 729, 730,
	0, 0, 0, 0, 0, 857, 0, 0, 923, 924,
	925, 926, 927, 928, 929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 896, 897, 898, 899, 902,
	0, 0, 0, 907, 908, 0, 0, 0, 0, 0,
	746, 0, 1042, 0, 949, 0, 950, 952, 953, 0,
	954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1188, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 756, 0, 0, 756, 756, 0, 0, 193, 194,
	195, 196, 210, 211, 212, 213, 214, 263, 1050, 0,
	933, 0, 0, 44, 701, 702, 0, 820, 1188, 0,
	0, 752, 0, 55, 64, 66, 1069, 59, 1069, 0,
	758, 0, 0, -2, -2, 759, 765, 766, 767, 768,
	769, 52, 1672, 53, 0, 72, 0, 46, 0, 0,
	0, 0, 330, 1111, 0, 0, 1062, 1063, 1066, 0,
	773, 1499, 777, 0, 779, 780, 0, 739, 0, 98,
	0, 836, 0, 0, 0, 1613, 1166, 0, 102, 103,
	0, 0, 0, 336, 1171, 1172, 1173, -2, 355, 0,
	336, 325, 269, 270, 271, 318, 273, 318, 318, 318,
	318, 330, 330, 330, 330, 301, 302, 303, 304, 305,
	0, 0, 288, 318, 318, 318, 318, 308, 309, 310,
	311, 312, 313, 314, 315, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 320, 320, 320, 322, 322, 0,
	42, 0, 340, 0, 1066, 0, 1099, 1180, 1190, 0,
	0, 0, 1180, 120, 0, 0, 496, 526, 456, 485,
	497, 0, 459, 460, -2, 0, 0, 446, 0, 448,
	0, 356, 0, -2, 0, 366, 0, 362, 366, 363,
	366, 354, 367, 477, 478, 479, 0, 556, 806, 0,
	0, 0, 0, 0, 562, 563, 564, 0, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 486, 487,
	488, 489, 490, 491, 492, 0, 0, 448, 0, 482,
	0, 403, 404, 0, 0, 407, 408, 409, 410, 0,
	0, 413, 414, 415, 823, 824, 416, 440, 441, 442,
	417, 418, 419, 420, 421, 422, 423, 434, 435, 436,
	437, 438, 439, 424, 425, 426, 427, 428, 431, 0,
	135, 1090, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1178, 0, 0, 0, 0, 755, 838,
	1201, 1202, 660, 661, 0, 360, 361, 659, 659, 607,
	630, 0, 659, 611, 632, 612, 614, 613, 615, 634,
	635, 659, 618, 657, 658, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 636, 637, 638, 663, 0,
	0, 678, 682, 683, 684, 685, 0, 0, 714, 94,
	719, 720, 721, 722, 734, 727, 935, 854, 855, 856,
	0, 858, 861, 0, 919, 921, 863, 865, 930, 931,
	932, 0, 0, 0, 0, 0, 869, 873, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	893, 1020, 1021, 1022, 910, 911, 0, 770, 0, 0,
	0, 909, 0, 0, 0, 0, 747, 748, 1048, 1045,
	0, 0, 1006, 1008, 0, 0, 0, 0, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1023,
	0, 0, 0, 0, 0, 1041, 0, 912, 913, 914,
	0, 1189, 0, 130, 131, 0, 0, 0, 0, 0,
	978, 0, 0, 0, 0, 0, 0, 757, 1051, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 1155, 0,
	704, 705, 707, 0, 840, 0, 821, 0, 0, 710,
	0, 751, 0, 754, 58, 60, 763, 764, 0, 781,
	760, 54, 49, 0, 0, 798, 1109, 330, 1131, 0,
	334, 335, 1072, 1073, 0, 1065, 1067, 1068, 77, 778,
	774, 0, 852, 0, 0, 835, 0, 784, 786, 787,
	788, 818, 0, 791, 0, 0, 0, 0, 0, 96,
	837, 1161, 101, 0, 0, 106, 107, 1162, 1163, 1164,
	1165, 0, 515, -2, 398, 163, 165, 166, 167, 158,
	-2, 328, 326, 327, 272, 330, 330, 295, 296, 297,
	298, 299, 300, 0, 0, 289, 290, 291, 292, 283,
	0, 284, 285, 286, 0, 287, 373, 0, 1074, 341,
	342, 344, 348, 0, 0, 0, 369, 370, 0, 1090,
	0, 0, 0, 1191, 1190, 1190, 1190, 0, 153, 154,
	155, 156, 551, 0, 0, 527, 549, 550, 151, 0,
	0, 159, 450, 449, 0, 583, 0, 371, 0, 0,
	366, 366, 351, 352, 480, 0, 0, 558, 559, 560,
	561, 0, 0, 0, 448, 450, 336, 0, 405, 406,
	411, 412, 429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 511, 512, 513, 514, 1087,
	1088, 1089, 0, 0, 591, 0, 0, 390, 92, 1179,
	596, 656, 617, 633, 656, 609, 616, 642, 674, 718,
	0, 0, 0, 0, 726, 0, 0, 862, 920, 922,
	866, 0, 870, 874, 0, 0, 0, 0, 0, 0,
	0, 916, 940, 941, 0, 0, 1060, 0, 1046, 0,
	0, 948, 1009, 0, 0, 0, 0, 0, 959, 960,
	961, 962, 963, 0, 965, 0, 967, 968, 0, 0,
	969, 0, 0, 0, 0, 0, 0, 0, 0, 936,
	0, 0, 756, 0, 1010, 1011, 1012, 1013, 1014, 1051,
	703, 706, 708, 794, 841, 842, 0, 0, 0, 0,
	822, 1187, 749, 750, 753, -2, 0, 0, 1053, 0,
	0, 781, 852, 782, 0, 761, 51, 797, 0, 1113,
	1112, 1125, 1138, 331, 332, 333, 1064, 0, 1069, 0,
	1149, 0, 0, 1141, 0, 0, 0, 0, 0, 0,
	0, 0, 825, 0, 0, 828, 0, 0, 0, 0,
	819, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	90, 91, 0, 0, 0, 104, 105, 0, 0, 111,
	337, 338, 144, 151, 400, 164, 380, 0, 0, 268,
	329, 293, 294, 0, 316, 0, 0, 0, 393, 116,
	1078, 1077, 348, 348, 343, 0, 346, 0, 1192, 319,
	0, 134, 0, 0, 0, 0, 0, 140, 521, 0,
	0, 528, 0, 0, 0, 454, 0, 465, 466, 0,
	555, 582, 0, 587, 340, 0, 350, 353, 807, 0,
	0, 467, 0, 450, 471, 472, 483, 432, 433, 430,
	0, 0, 1100, 1101, 1106, 1104, 1105, 121, 503, 505,
	504, 508, 0, 0, 501, 0, 390, 1074, 0, 595,
	391, 392, 659, 659, 713, 95, 0, 716, 0, 0,
	0, 0, 867, 871, 771, 0, 0, 318, 318, 1028,
	318, 322, 1031, 318, 1033, 318, 1036, 318, 1039, 1040,
	0, 0, 0, 0, 1043, 947, 1049, 0, 0, 0,
	0, 958, 0, 0, 0, 0, 132, 133, 978, 0,
	0, 980, 982, 983, 0, 973, 979, 0, 0, 0,
	937, 938, 0, 1052, 843, 848, 848, 848, 0, 0,
	0, 1174, 1175, 1054, 1055, 852, 1056, 783, 762, 799,
	1131, 0, 1124, 0, -2, 1133, 0, 0, 0, 1139,
	775, 78, 853, 81, 0, 1149, 1157, 0, 1140, 1151,
	1153, 0, 0, 0, 1145, 0, 852, 785, 814, 816,
	0, 811, 826, 827, 829, 0, 831, 0, 833, 834,
	796, 790, 792, 0, 0, 0, 98, 0, 852, 852,
	97, 0, 839, 108, 109, 110, 399, 168, 173, 0,
	0, 0, 178, 0, 180, 0, 381, 0, 265, 267,
	0, 0, 171, 330, 0, 330, 0, 323, 0, 382,
	394, 0, 1075, 1076, 0, 0, 345, 347, 0, 1181,
	136, 0, 0, 0, 524, 0, 552, 0, 0, 0,
	0, 0, 0, 160, 451, 0, 0, 339, 0, 0,
	580, 577, 468, 0, 197, 198, 200, 0, 0, 470,
	796, 1091, 1092, 1093, 0, 1103, 1107, 124, 0, 0,
	0, 0, 592, 593, 594, 93, 602, 608, 715, 735,
	860, 868, 872, 0, 904, 1026, 330, 1029, 1030, 1032,
	1034, 1035, 1037, 1038, 905, 906, 0, 943, 0, 945,
	1069, 0, 1047, 0, 0, 957, 0, 0, 0, 966,
	0, 0, 972, 0, 974, 0, 977, 939, 0, 0,
	0, 0, 820, -2, 62, 1056, 1058, 0, 1118, 1116,
	1116, 1126, 1127, 0, 0, 1134, 0, 0, 0, 0,
	82, 0, 0, 0, 1154, 0, 0, 0, 0, 99,
	1060, 808, 815, 0, 0, 809, 0, 810, 830, 832,
	789, -2, 793, 0, 852, 852, 88, 89, 0, 174,
	0, 176, 191, 192, 0, 179, 181, 182, 264, 266,
	0, 0, 306, 317, 307, 0, 0, 395, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 796, 137, 138, 139, 516,
	0, 526, 0, 0, 0, 519, 0, 457, 0, 586,
	0, 0, 557, 0, 565, 0, 0, 0, 201, 202,
	0, 1102, 502, 0, 122, 123, 0, 0, 507, 1015,
	1027, 0, 0, 0, 1044, 0, 0, 0, 0, 964,
	970, 0, 981, 0, 0, 849, 0, 0, 0, 0,
	840, 1058, 80, 0, 0, 1121, 0, 1114, 1117, 1115,
	1128, 0, 0, 1135, 0, 1137, 0, 1158, 1159, 1152,
	0, 1144, 1147, 1143, 1146, 1069, 812, 0, 817, 0,
	1060, 87, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 324, 0, 0, 0, 517, 0,
	529, 520, 584, 585, 0, 588, 375, 581, 578, 579,
	469, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	942, 944, 946, 955, 956, 1024, 1025, 971, 975, 0,
	0, 845, 802, 803, 850, 851, 0, 0, 795, 79,
	1059, 1057, 1110, 0, 1119, 1120, 1129, 1130, 1136, 0,
	1142, 0, 85, 0, 0, 0, 1069, 175, 0, 185,
	0, 525, 0, 528, 518, 0, 1094, 0, 0, 0,
	509, 903, 0, 0, 0, 978, 0, 844, 846, 847,
	1122, 1123, 1150, 1148, 813, 820, 0, 86, 376, 380,
	1094, 0, 0, 589, 499, 1096, 127, 128, 443, 444,
	445, 121, 1016, 0, 1019, 0, 804, 805, 530, 0,
	532, 0, -2, 377, 378, 0, 169, 186, 187, 0,
	0, 190, 183, 184, 117, 0, 0, 0, 1097, 1098,
	124, 1017, 976, 531, 0, 0, 336, 0, 541, 379,
	0, 0, 0, 188, 189, 553, 0, 0, 506, 0,
	533, 534, 542, 0, 383, 385, 386, 0, 0, 384,
	522, 0, 553, 1095, 0, 0, 543, 539, 387, 388,
	389, 554, 523, 1018, 0, 535, 536, 537, 0, 546,
	547, 0, 538, 0, 0, 548, 0, 544, 545,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 139, 3, 3, 3, 165, 157, 3,
	83, 85, 162, 160, 84, 161, 214, 163, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 577,
	147, 146, 148, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 167, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 135, 3, 168,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	136, 137, 138, 140, 141, 142, 143, 144, 145, 149,
	150, 151, 152, 153, 154, 155, 156, 158, 159, 164,
	166, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:498
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:503
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:504
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:508
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:544
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:550
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:554
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:558
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:563
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:573
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:579
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:585
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:589
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:598
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:604
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:608
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:614
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:620
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:624
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:628
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:662
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:668
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:675
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:688
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:714
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:720
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:724
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:767
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:773
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:793
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:805
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:817
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:821
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:827
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:833
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:837
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:841
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:845
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:850
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:851
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:855
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:865
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:869
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:875
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:879
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:888
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:900
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:904
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:910
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:914
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:920
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:924
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:928
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:934
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:938
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:942
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:946
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:952
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:956
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:968
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:975
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:999
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1004
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1008
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1014
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1019
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1024
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1030
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1035
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1041
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1050
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1056
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1072
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1079
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1086
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1091
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1096
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1101
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1108
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1115
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1126
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1137
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1143
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1147
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1155
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1165
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1171
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1175
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1181
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1185
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1192
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1196
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1202
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1212
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1217
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1226
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1250
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1259
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1268
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1272
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1281
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1285
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1291
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1297
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1302
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1307
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1312
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1317
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1322
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1327
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1331
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1338
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1342
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1351
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1356
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1362
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1368
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1373
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1380
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1387
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1391
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1395
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1399
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1410
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1427
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1431
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1435
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1439
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1443
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1447
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1451
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1456
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1460
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1464
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1468
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1472
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = Armscii8Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = ASCIIStr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = Big5Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = UBinaryStr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = Cp1250Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = Cp1251Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = Cp1256Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = Cp1257Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = Cp850Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = Cp852Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Cp866Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = Cp932Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Dec8Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = EucjpmsStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = EuckrStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Gb18030Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Gb2312Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = GbkStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = Geostd8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = GreekStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = HebrewStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Hp8Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = Keybcs2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = Koi8rStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = Koi8uStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = Latin1Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Latin2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Latin5Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Latin7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = MacceStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = MacromanStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = SjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Swe7Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Tis620Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = Ucs2Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = UjisStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Utf16Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Utf16leStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Utf32Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Utf8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = Utf8mb4Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1649
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1678
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1682
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1686
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1690
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1696
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1707
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1762
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1912
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1917
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1921
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1926
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1930
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1938
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1942
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1948
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1956
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1960
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1964
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1969
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1973
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1978
		{
			yyVAL.str = ""
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1986
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = ""
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2020
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2029
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2035
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2045
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2049
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2054
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2058
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2064
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2074
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2078
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2082
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2086
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2090
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = yyDollar[2].str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2129
		{
			yyVAL.str = "key"
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.str = yyDollar[1].str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2148
		{
			yyVAL.str = ""
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2158
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2162
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2168
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2174
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2178
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2184
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2188
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2194
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2200
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2204
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2208
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2212
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2221
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2227
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2233
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2239
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2245
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2249
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2253
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2257
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2261
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = ""
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2279
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2283
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2287
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2296
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2302
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2306
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2316
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2326
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2330
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2334
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2338
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2342
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2346
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2350
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2354
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2358
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2362
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2366
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2370
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2374
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2378
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2382
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2386
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2390
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2394
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2398
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2402
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2406
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2410
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2414
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2418
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2422
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2426
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2430
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2434
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2439
		{
			yyVAL.str = ""
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2443
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2447
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = ""
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2485
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2489
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2494
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2498
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2507
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2511
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2515
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2519
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2523
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2529
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2533
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2537
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2543
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2547
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2551
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2555
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2559
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2563
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2567
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2571
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2575
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2579
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2583
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2587
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2591
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2595
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2599
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2603
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2607
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2611
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2615
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2619
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2623
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2627
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2631
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2637
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2641
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2647
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2651
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2655
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2659
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2663
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2667
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2671
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2675
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2679
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2685
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2692
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2706
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2712
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2716
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2723
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2730
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2742
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2752
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2756
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2760
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2773
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2783
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2787
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2798
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2805
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2812
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2819
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2826
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2833
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2837
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2846
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2854
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2863
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2870
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2878
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2882
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2891
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2906
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2911
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2915
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2920
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2924
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2930
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2936
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2942
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2946
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2952
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2956
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2962
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2968
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2974
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2980
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2986
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2990
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3004
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3010
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3016
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3020
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3024
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3030
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3034
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3039
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3043
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3048
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3052
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3058
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3062
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3066
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3070
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3074
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3078
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3082
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3086
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3090
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3094
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3098
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3102
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3106
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3110
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3114
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3118
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3122
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3126
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3130
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3134
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3138
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3142
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3147
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3151
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3162
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3166
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3172
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3177
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3181
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3188
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3195
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3204
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3210
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3214
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3220
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3226
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3230
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3236
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3282
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3290
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3294
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3302
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3306
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3310
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3314
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3318
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3322
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3330
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3338
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3342
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3346
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3350
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3354
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3358
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3362
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3366
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3370
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3374
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3378
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3382
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3386
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3390
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3394
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3398
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3406
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3414
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3418
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3427
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3431
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3436
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3440
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3444
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3448
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3453
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3471
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3481
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3491
		{
			yyVAL.str = ""
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3495
		{
			yyVAL.str = "extended "
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3501
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3505
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3521
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3525
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3529
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3539
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3543
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3549
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3553
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3559
		{
			yyVAL.empty = struct{}{}
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3563
		{
			yyVAL.empty = struct{}{}
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3567
		{
			yyVAL.empty = struct{}{}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3587
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3591
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3597
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3603
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3607
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3612
		{
			yyVAL.empty = struct{}{}
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.empty = struct{}{}
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3617
		{
			yyVAL.empty = struct{}{}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3619
		{
			yyVAL.empty = struct{}{}
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3624
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3630
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3635
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3639
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3643
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3647
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3651
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3655
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3661
		{
			yyVAL.str = yyDollar[1].str
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3665
		{
			yyVAL.str = yyDollar[1].str
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = yyDollar[1].str
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3675
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3679
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3683
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3687
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3692
		{
			yyVAL.str = ""
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3696
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3700
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3706
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3710
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3716
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3720
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3726
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3732
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3736
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3742
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3748
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3752
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3756
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3760
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3766
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3772
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3778
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3782
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3786
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3790
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3798
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3804
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3808
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3814
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3818
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3822
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3846
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3850
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3863
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3867
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3871
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3876
		{
			yyVAL.str = ""
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3880
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3885
		{
			setAllowComments(yylex, true)
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3889
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3895
		{
			yyVAL.strs = nil
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3899
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3905
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3909
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3913
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3918
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = SQLCacheStr
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3931
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3935
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3939
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, StatementIdentifier: NewColIdentWithAt(string(yyDollar[5].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3964
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3979
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3983
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3988
		{
			yyVAL.strs = nil
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3996
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4000
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4004
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4014
		{
			yyVAL.str = SQLCacheStr
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			yyVAL.str = DistinctStr
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = DistinctStr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4026
		{
			yyVAL.str = StraightJoinHint
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4030
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4040
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4044
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4050
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4054
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4058
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4062
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4067
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4075
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4082
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4087
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4091
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4097
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4103
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4107
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4117
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4121
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4125
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4129
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4135
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4139
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4145
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4149
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4154
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4158
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4164
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4168
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4174
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4178
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4184
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4188
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4192
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4196
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4202
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4206
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4219
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4223
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4227
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4231
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4237
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4239
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4243
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4249
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4251
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4254
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4259
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4267
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4274
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4280
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4284
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4288
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4294
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4300
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4304
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4308
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4312
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4318
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4322
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4332
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4336
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4342
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4346
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4352
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4361
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4367
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4371
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 844:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4377
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4381
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4385
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4389
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4394
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4398
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4402
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4406
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4416
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4423
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4427
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4431
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4435
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4439
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4447
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4454
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4458
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4462
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4466
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4472
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4476
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4480
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4484
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4488
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4492
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4496
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4500
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4504
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4508
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4512
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4518
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4522
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4526
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4530
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4534
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4538
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4542
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4546
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4550
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4554
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4558
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4562
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4566
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4572
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4576
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4580
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4584
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4588
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4592
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4596
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4600
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4604
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4608
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4612
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4616
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4620
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4624
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4628
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4632
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4636
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4640
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4644
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4652
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4656
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4664
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4668
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4674
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4678
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4682
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4688
		{
			yyVAL.str = ""
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4692
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4698
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4702
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4709
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4713
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4717
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4721
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4727
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4731
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4735
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4739
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4743
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4747
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4751
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4757
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4761
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4765
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4772
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4778
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4782
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4792
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4796
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4800
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4804
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4814
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4818
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4822
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4826
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4830
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4834
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4838
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4842
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4846
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4850
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4861
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4865
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4871
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4875
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4880
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4884
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4888
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4892
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4896
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4900
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4904
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4908
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4912
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4916
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4920
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4924
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4928
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4936
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4940
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4944
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4948
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4952
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4956
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4960
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4972
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:4977
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:4981
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:4987
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4991
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4997
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5001
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5007
		{
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5009
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5013
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5017
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5021
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5025
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5029
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5033
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5037
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5041
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5045
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5049
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5055
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5059
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5063
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5067
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5071
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5075
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5079
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5083
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5087
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:5097
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:5101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:5105
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5137
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5141
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5145
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5149
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5153
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5159
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5163
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5167
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5173
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5177
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5181
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5187
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5191
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5195
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5199
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5203
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5209
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5213
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5217
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5221
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5225
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5229
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5233
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5237
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5241
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5245
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5260
		{
			yyVAL.str = string("")
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5264
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5270
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5274
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5280
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5295
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5299
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5303
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5332
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5346
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5350
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5356
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5362
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5366
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5372
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5377
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5381
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5385
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5394
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5400
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5404
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5408
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5413
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5417
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5421
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5425
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5429
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5436
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5440
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5444
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5448
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5454
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5458
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5462
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5467
		{
			yyVAL.str = ""
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5471
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5475
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5479
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5484
		{
			yyVAL.str = ""
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5488
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5494
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5498
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5503
		{
			yyVAL.str = ""
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5507
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5512
		{
			yyVAL.str = "cascaded"
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5516
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5520
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5525
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5529
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5535
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5541
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5547
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5556
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5560
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5565
		{
			yyVAL.str = ""
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5569
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5575
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5579
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5585
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5589
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5593
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5598
		{
			yyVAL.str = ""
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5602
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5606
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5611
		{
			yyVAL.str = ""
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5615
		{
			yyVAL.str = " header"
		}
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5620
		{
			yyVAL.str = ""
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5624
		{
			yyVAL.str = " manifest on"
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5628
		{
			yyVAL.str = " manifest off"
		}
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5633
		{
			yyVAL.str = ""
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5637
		{
			yyVAL.str = " overwrite on"
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5641
		{
			yyVAL.str = " overwrite off"
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5647
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5652
		{
			yyVAL.str = ""
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5656
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5662
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5666
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5672
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5676
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5681
		{
			yyVAL.str = ""
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5685
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5691
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5695
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5701
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5705
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5709
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5714
		{
			yyVAL.str = ""
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.str = " optionally"
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5731
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5735
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5739
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5743
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5747
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5753
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5757
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5761
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5765
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5774
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5780
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5784
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5790
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5794
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5800
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5805
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5815
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5819
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5825
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5831
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5835
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5841
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5845
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5849
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5853
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5857
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5865
		{
			yyVAL.str = "charset"
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5875
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5879
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5883
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5892
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5894
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5897
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5899
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5902
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5904
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5907
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5909
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5912
		{
			yyVAL.empty = struct{}{}
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5914
		{
			yyVAL.empty = struct{}{}
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5916
		{
			yyVAL.empty = struct{}{}
		}
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5920
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5929
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5936
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5940
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5946
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5950
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5957
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5963
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5967
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5973
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5977
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5984
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6477
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6486
		{
			decNesting(yylex)
		}
	case 1673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6491
		{
			skipToEnd(yylex)
		}
	case 1674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6496
		{
			skipToEnd(yylex)
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6500
		{
			skipToEnd(yylex)
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6504
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
