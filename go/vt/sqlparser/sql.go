// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const JSON_PRETTY = 57441
const JSON_STORAGE_SIZE = 57442
const JSON_STORAGE_FREE = 57443
const EXTRACT = 57444
const NULL = 57445
const TRUE = 57446
const FALSE = 57447
const OFF = 57448
const DISCARD = 57449
const IMPORT = 57450
const ENABLE = 57451
const DISABLE = 57452
const TABLESPACE = 57453
const VIRTUAL = 57454
const STORED = 57455
const BOTH = 57456
const LEADING = 57457
const TRAILING = 57458
const EMPTY_FROM_CLAUSE = 57459
const LOWER_THAN_CHARSET = 57460
const CHARSET = 57461
const UNIQUE = 57462
const KEY = 57463
const EXPRESSION_PREC_SETTER = 57464
const OR = 57465
const XOR = 57466
const AND = 57467
const NOT = 57468
const BETWEEN = 57469
const CASE = 57470
const WHEN = 57471
const THEN = 57472
const ELSE = 57473
const END = 57474
const LE = 57475
const GE = 57476
const NE = 57477
const NULL_SAFE_EQUAL = 57478
const IS = 57479
const LIKE = 57480
const REGEXP = 57481
const IN = 57482
const SHIFT_LEFT = 57483
const SHIFT_RIGHT = 57484
const DIV = 57485
const MOD = 57486
const UNARY = 57487
const COLLATE = 57488
const BINARY = 57489
const UNDERSCORE_ARMSCII8 = 57490
const UNDERSCORE_ASCII = 57491
const UNDERSCORE_BIG5 = 57492
const UNDERSCORE_BINARY = 57493
const UNDERSCORE_CP1250 = 57494
const UNDERSCORE_CP1251 = 57495
const UNDERSCORE_CP1256 = 57496
const UNDERSCORE_CP1257 = 57497
const UNDERSCORE_CP850 = 57498
const UNDERSCORE_CP852 = 57499
const UNDERSCORE_CP866 = 57500
const UNDERSCORE_CP932 = 57501
const UNDERSCORE_DEC8 = 57502
const UNDERSCORE_EUCJPMS = 57503
const UNDERSCORE_EUCKR = 57504
const UNDERSCORE_GB18030 = 57505
const UNDERSCORE_GB2312 = 57506
const UNDERSCORE_GBK = 57507
const UNDERSCORE_GEOSTD8 = 57508
const UNDERSCORE_GREEK = 57509
const UNDERSCORE_HEBREW = 57510
const UNDERSCORE_HP8 = 57511
const UNDERSCORE_KEYBCS2 = 57512
const UNDERSCORE_KOI8R = 57513
const UNDERSCORE_KOI8U = 57514
const UNDERSCORE_LATIN1 = 57515
const UNDERSCORE_LATIN2 = 57516
const UNDERSCORE_LATIN5 = 57517
const UNDERSCORE_LATIN7 = 57518
const UNDERSCORE_MACCE = 57519
const UNDERSCORE_MACROMAN = 57520
const UNDERSCORE_SJIS = 57521
const UNDERSCORE_SWE7 = 57522
const UNDERSCORE_TIS620 = 57523
const UNDERSCORE_UCS2 = 57524
const UNDERSCORE_UJIS = 57525
const UNDERSCORE_UTF16 = 57526
const UNDERSCORE_UTF16LE = 57527
const UNDERSCORE_UTF32 = 57528
const UNDERSCORE_UTF8 = 57529
const UNDERSCORE_UTF8MB4 = 57530
const INTERVAL = 57531
const JSON_EXTRACT_OP = 57532
const JSON_UNQUOTE_EXTRACT_OP = 57533
const CREATE = 57534
const ALTER = 57535
const DROP = 57536
const RENAME = 57537
const ANALYZE = 57538
const ADD = 57539
const FLUSH = 57540
const CHANGE = 57541
const MODIFY = 57542
const DEALLOCATE = 57543
const REVERT = 57544
const SCHEMA = 57545
const TABLE = 57546
const INDEX = 57547
const VIEW = 57548
const TO = 57549
const IGNORE = 57550
const IF = 57551
const PRIMARY = 57552
const COLUMN = 57553
const SPATIAL = 57554
const FULLTEXT = 57555
const KEY_BLOCK_SIZE = 57556
const CHECK = 57557
const INDEXES = 57558
const ACTION = 57559
const CASCADE = 57560
const CONSTRAINT = 57561
const FOREIGN = 57562
const NO = 57563
const REFERENCES = 57564
const RESTRICT = 57565
const SHOW = 57566
const DESCRIBE = 57567
const EXPLAIN = 57568
const DATE = 57569
const ESCAPE = 57570
const REPAIR = 57571
const OPTIMIZE = 57572
const TRUNCATE = 57573
const COALESCE = 57574
const EXCHANGE = 57575
const REBUILD = 57576
const PARTITIONING = 57577
const REMOVE = 57578
const PREPARE = 57579
const EXECUTE = 57580
const MAXVALUE = 57581
const PARTITION = 57582
const REORGANIZE = 57583
const LESS = 57584
const THAN = 57585
const PROCEDURE = 57586
const TRIGGER = 57587
const VINDEX = 57588
const VINDEXES = 57589
const DIRECTORY = 57590
const NAME = 57591
const UPGRADE = 57592
const STATUS = 57593
const VARIABLES = 57594
const WARNINGS = 57595
const CASCADED = 57596
const DEFINER = 57597
const OPTION = 57598
const SQL = 57599
const UNDEFINED = 57600
const SEQUENCE = 57601
const MERGE = 57602
const TEMPORARY = 57603
const TEMPTABLE = 57604
const INVOKER = 57605
const SECURITY = 57606
const FIRST = 57607
const AFTER = 57608
const LAST = 57609
const VITESS_MIGRATION = 57610
const CANCEL = 57611
const RETRY = 57612
const COMPLETE = 57613
const CLEANUP = 57614
const BEGIN = 57615
const START = 57616
const TRANSACTION = 57617
const COMMIT = 57618
const ROLLBACK = 57619
const SAVEPOINT = 57620
const RELEASE = 57621
const WORK = 57622
const BIT = 57623
const TINYINT = 57624
const SMALLINT = 57625
const MEDIUMINT = 57626
const INT = 57627
const INTEGER = 57628
const BIGINT = 57629
const INTNUM = 57630
const REAL = 57631
const DOUBLE = 57632
const FLOAT_TYPE = 57633
const DECIMAL_TYPE = 57634
const NUMERIC = 57635
const TIME = 57636
const TIMESTAMP = 57637
const DATETIME = 57638
const YEAR = 57639
const CHAR = 57640
const VARCHAR = 57641
const BOOL = 57642
const CHARACTER = 57643
const VARBINARY = 57644
const NCHAR = 57645
const TEXT = 57646
const TINYTEXT = 57647
const MEDIUMTEXT = 57648
const LONGTEXT = 57649
const BLOB = 57650
const TINYBLOB = 57651
const MEDIUMBLOB = 57652
const LONGBLOB = 57653
const JSON = 57654
const ENUM = 57655
const GEOMETRY = 57656
const POINT = 57657
const LINESTRING = 57658
const POLYGON = 57659
const GEOMETRYCOLLECTION = 57660
const MULTIPOINT = 57661
const MULTILINESTRING = 57662
const MULTIPOLYGON = 57663
const ASCII = 57664
const UNICODE = 57665
const NULLX = 57666
const AUTO_INCREMENT = 57667
const APPROXNUM = 57668
const SIGNED = 57669
const UNSIGNED = 57670
const ZEROFILL = 57671
const CODE = 57672
const COLLATION = 57673
const COLUMNS = 57674
const DATABASES = 57675
const ENGINES = 57676
const EVENT = 57677
const EXTENDED = 57678
const FIELDS = 57679
const FULL = 57680
const FUNCTION = 57681
const GTID_EXECUTED = 57682
const KEYSPACES = 57683
const OPEN = 57684
const PLUGINS = 57685
const PRIVILEGES = 57686
const PROCESSLIST = 57687
const SCHEMAS = 57688
const TABLES = 57689
const TRIGGERS = 57690
const USER = 57691
const VGTID_EXECUTED = 57692
const VITESS_KEYSPACES = 57693
const VITESS_METADATA = 57694
const VITESS_MIGRATIONS = 57695
const VITESS_REPLICATION_STATUS = 57696
const VITESS_SHARDS = 57697
const VITESS_TABLETS = 57698
const VSCHEMA = 57699
const NAMES = 57700
const GLOBAL = 57701
const SESSION = 57702
const ISOLATION = 57703
const LEVEL = 57704
const READ = 57705
const WRITE = 57706
const ONLY = 57707
const REPEATABLE = 57708
const COMMITTED = 57709
const UNCOMMITTED = 57710
const SERIALIZABLE = 57711
const CURRENT_TIMESTAMP = 57712
const DATABASE = 57713
const CURRENT_DATE = 57714
const CURRENT_TIME = 57715
const LOCALTIME = 57716
const LOCALTIMESTAMP = 57717
const CURRENT_USER = 57718
const UTC_DATE = 57719
const UTC_TIME = 57720
const UTC_TIMESTAMP = 57721
const DAY = 57722
const DAY_HOUR = 57723
const DAY_MICROSECOND = 57724
const DAY_MINUTE = 57725
const DAY_SECOND = 57726
const HOUR = 57727
const HOUR_MICROSECOND = 57728
const HOUR_MINUTE = 57729
const HOUR_SECOND = 57730
const MICROSECOND = 57731
const MINUTE = 57732
const MINUTE_MICROSECOND = 57733
const MINUTE_SECOND = 57734
const MONTH = 57735
const QUARTER = 57736
const SECOND = 57737
const SECOND_MICROSECOND = 57738
const YEAR_MONTH = 57739
const WEEK = 57740
const REPLACE = 57741
const CONVERT = 57742
const CAST = 57743
const SUBSTR = 57744
const SUBSTRING = 57745
const GROUP_CONCAT = 57746
const SEPARATOR = 57747
const TIMESTAMPADD = 57748
const TIMESTAMPDIFF = 57749
const WEIGHT_STRING = 57750
const LTRIM = 57751
const RTRIM = 57752
const TRIM = 57753
const MATCH = 57754
const AGAINST = 57755
const BOOLEAN = 57756
const LANGUAGE = 57757
const WITH = 57758
const QUERY = 57759
const EXPANSION = 57760
const WITHOUT = 57761
const VALIDATION = 57762
const UNUSED = 57763
const ARRAY = 57764
const CUME_DIST = 57765
const DESCRIPTION = 57766
const DENSE_RANK = 57767
const EMPTY = 57768
const EXCEPT = 57769
const FIRST_VALUE = 57770
const GROUPING = 57771
const GROUPS = 57772
const JSON_TABLE = 57773
const LAG = 57774
const LAST_VALUE = 57775
const LATERAL = 57776
const LEAD = 57777
const MEMBER = 57778
const NTH_VALUE = 57779
const NTILE = 57780
const OF = 57781
const OVER = 57782
const PERCENT_RANK = 57783
const RANK = 57784
const RECURSIVE = 57785
const ROW_NUMBER = 57786
const SYSTEM = 57787
const WINDOW = 57788
const ACTIVE = 57789
const ADMIN = 57790
const BUCKETS = 57791
const CLONE = 57792
const COMPONENT = 57793
const DEFINITION = 57794
const ENFORCED = 57795
const EXCLUDE = 57796
const FOLLOWING = 57797
const GEOMCOLLECTION = 57798
const GET_MASTER_PUBLIC_KEY = 57799
const HISTOGRAM = 57800
const HISTORY = 57801
const INACTIVE = 57802
const INVISIBLE = 57803
const LOCKED = 57804
const MASTER_COMPRESSION_ALGORITHMS = 57805
const MASTER_PUBLIC_KEY_PATH = 57806
const MASTER_TLS_CIPHERSUITES = 57807
const MASTER_ZSTD_COMPRESSION_LEVEL = 57808
const NESTED = 57809
const NETWORK_NAMESPACE = 57810
const NOWAIT = 57811
const NULLS = 57812
const OJ = 57813
const OLD = 57814
const OPTIONAL = 57815
const ORDINALITY = 57816
const ORGANIZATION = 57817
const OTHERS = 57818
const PATH = 57819
const PERSIST = 57820
const PERSIST_ONLY = 57821
const PRECEDING = 57822
const PRIVILEGE_CHECKS_USER = 57823
const PROCESS = 57824
const RANDOM = 57825
const REFERENCE = 57826
const REQUIRE_ROW_FORMAT = 57827
const RESOURCE = 57828
const RESPECT = 57829
const RESTART = 57830
const RETAIN = 57831
const REUSE = 57832
const ROLE = 57833
const SECONDARY = 57834
const SECONDARY_ENGINE = 57835
const SECONDARY_LOAD = 57836
const SECONDARY_UNLOAD = 57837
const SKIP = 57838
const SRID = 57839
const THREAD_PRIORITY = 57840
const TIES = 57841
const UNBOUNDED = 57842
const VCPU = 57843
const VISIBLE = 57844
const FORMAT = 57845
const TREE = 57846
const VITESS = 57847
const TRADITIONAL = 57848
const LOCAL = 57849
const LOW_PRIORITY = 57850
const NO_WRITE_TO_BINLOG = 57851
const LOGS = 57852
const ERROR = 57853
const GENERAL = 57854
const HOSTS = 57855
const OPTIMIZER_COSTS = 57856
const USER_RESOURCES = 57857
const SLOW = 57858
const CHANNEL = 57859
const RELAY = 57860
const EXPORT = 57861
const AVG_ROW_LENGTH = 57862
const CONNECTION = 57863
const CHECKSUM = 57864
const DELAY_KEY_WRITE = 57865
const ENCRYPTION = 57866
const ENGINE = 57867
const INSERT_METHOD = 57868
const MAX_ROWS = 57869
const MIN_ROWS = 57870
const PACK_KEYS = 57871
const PASSWORD = 57872
const FIXED = 57873
const DYNAMIC = 57874
const COMPRESSED = 57875
const REDUNDANT = 57876
const COMPACT = 57877
const ROW_FORMAT = 57878
const STATS_AUTO_RECALC = 57879
const STATS_PERSISTENT = 57880
const STATS_SAMPLE_PAGES = 57881
const STORAGE = 57882
const MEMORY = 57883
const DISK = 57884
const PARTITIONS = 57885
const LINEAR = 57886
const RANGE = 57887
const LIST = 57888
const SUBPARTITION = 57889
const SUBPARTITIONS = 57890
const HASH = 57891

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 140,
	567, 140,
	-2, 146,
	-1, 48,
	122, 146,
	162, 146,
	318, 146,
	-2, 447,
	-1, 55,
	33, 626,
	222, 626,
	233, 626,
	268, 640,
	269, 640,
	-2, 628,
	-1, 60,
	224, 651,
	-2, 649,
	-1, 114,
	221, 1133,
	-2, 119,
	-1, 116,
	1, 141,
	567, 141,
	-2, 146,
	-1, 126,
	123, 350,
	227, 350,
	-2, 441,
	-1, 145,
	122, 146,
	162, 146,
	318, 146,
	-2, 456,
	-1, 621,
	206, 1154,
	-2, 1150,
	-1, 622,
	206, 1155,
	-2, 1151,
	-1, 696,
	57, 719,
	-2, 734,
	-1, 733,
	138, 1521,
	-2, 112,
	-1, 734,
	138, 1395,
	-2, 113,
	-1, 740,
	138, 1450,
	-2, 1127,
	-1, 885,
	138, 1326,
	-2, 1124,
	-1, 923,
	232, 41,
	237, 41,
	-2, 361,
	-1, 1000,
	1, 495,
	567, 495,
	-2, 146,
	-1, 1206,
	57, 720,
	-2, 739,
	-1, 1207,
	57, 721,
	-2, 740,
	-1, 1259,
	122, 146,
	162, 146,
	318, 146,
	-2, 391,
	-1, 1336,
	123, 350,
	227, 350,
	-2, 441,
	-1, 1345,
	232, 42,
	237, 42,
	-2, 362,
	-1, 1605,
	206, 1159,
	-2, 1153,
	-1, 1686,
	122, 146,
	162, 146,
	318, 146,
	-2, 392,
	-1, 1693,
	23, 165,
	-2, 167,
	-1, 1892,
	84, 39,
	-2, 774,
	-1, 1942,
	75, 94,
	84, 94,
	-2, 794,
	-1, 2114,
	47, 1095,
	-2, 1089,
	-1, 2283,
	84, 39,
	-2, 775,
	-1, 2321,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 767,
}

const yyPrivate = 57344

const yyLast = 36319

var yyAct = [...]int{
	621, 2585, 2579, 2380, 2550, 2235, 2536, 2463, 1640, 2165,
	2172, 3, 2125, 2206, 689, 1064, 711, 612, 37, 2128,
	2406, 96, 1185, 2218, 2477, 1880, 613, 1746, 2174, 2217,
	565, 2129, 1221, 2411, 2126, 2286, 2292, 1619, 1644, 624,
	1659, 2312, 2123, 591, 2220, 1716, 2115, 1907, 562, 1938,
	2278, 182, 610, 561, 182, 1974, 529, 182, 611, 2003,
	2044, 1736, 545, 569, 182, 563, 1915, 1721, 1012, 1975,
	154, 738, 182, 1976, 1672, 1663, 36, 1927, 888, 712,
	1548, 1208, 38, 1664, 931, 1882, 1899, 182, 1541, 1500,
	557, 2060, 1683, 1788, 140, 693, 1755, 697, 691, 1041,
	1723, 1599, 1735, 1343, 913, 1251, 1944, 1968, 953, 545,
	1621, 918, 545, 182, 545, 714, 1230, 95, 574, 91,
	1146, 1666, 1316, 1083, 735, 1188, 1518, 1560, 1350, 895,
	1451, 1250, 924, 1733, 1433, 892, 1447, 919, 1651, 920,
	1248, 1234, 703, 921, 896, 1062, 1057, 1311, 1456, 157,
	725, 102, 1645, 1712, 701, 123, 698, 98, 996, 124,
	97, 76, 699, 552, 85, 1612, 1153, 1149, 2508, 89,
	1996, 2586, 1335, 2203, 1748, 1602, 117, 118, 1748, 1749,
	1750, 2023, 2022, 719, 1994, 724, 1786, 2052, 700, 77,
	1084, 8, 104, 105, 7, 108, 2053, 119, 114, 6,
	1507, 179, 90, 1359, 497, 1616, 1617, 1506, 502, 1505,
	705, 1504, 935, 1419, 1084, 1503, 958, 184, 185, 186,
	1214, 125, 1502, 889, 685, 686, 687, 688, 1489, 553,
	696, 555, 1494, 556, 2564, 1878, 2111, 690, 966, 692,
	1909, 904, 899, 2345, 2459, 2189, 2458, 2373, 957, 732,
	2374, 955, 78, 956, 2595, 80, 2546, 706, 727, 728,
	1826, 739, 713, 78, 969, 970, 119, 973, 974, 975,
	976, 934, 911, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 2589, 178,
	959, 960, 961, 910, 909, 1094, 78, 1728, 78, 2519,
	1999, 2578, 2381, 2537, 1774, 2545, 2518, 2059, 2268, 1325,
	971, 1879, 2424, 120, 908, 142, 1005, 1006, 2161, 1094,
	1918, 1726, 1953, 2031, 1824, 1952, 162, 2030, 1954, 87,
	119, 999, 2162, 2163, 184, 185, 186, 1678, 1679, 2051,
	87, 1048, 1823, 1050, 1589, 1919, 1677, 1060, 1008, 903,
	1618, 1252, 905, 1253, 1019, 1031, 683, 152, 682, 1020,
	1036, 1037, 141, 1019, 1965, 1997, 2259, 1018, 1020, 1017,
	532, 1032, 906, 87, 532, 87, 1696, 1695, 1115, 1025,
	2289, 1047, 1049, 159, 2237, 160, 543, 2086, 1090, 2257,
	1493, 1082, 532, 547, 1337, 1338, 151, 150, 177, 2468,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1123, 1125,
	1126, 519, 1090, 1800, 1797, 1799, 1798, 541, 1409, 1192,
	2004, 995, 1756, 2026, 1495, 1496, 1497, 1581, 1570, 1571,
	1572, 1573, 1583, 1574, 1575, 1576, 1588, 1584, 1577, 1578,
	1585, 1586, 1587, 1579, 1580, 1582, 908, 1059, 900, 1038,
	1033, 532, 1794, 1725, 2588, 902, 901, 518, 1026, 1039,
	1439, 1789, 1410, 2238, 1411, 532, 1802, 2230, 1803, 516,
	1804, 1434, 1045, 908, 994, 2231, 1046, 1034, 1035, 1054,
	1040, 1001, 907, 2039, 1805, 978, 1051, 2565, 977, 2366,
	2239, 972, 1793, 1791, 146, 1339, 153, 182, 1336, 182,
	147, 148, 182, 1195, 906, 912, 163, 1795, 1044, 513,
	942, 940, 914, 1759, 1328, 168, 915, 2214, 527, 87,
	1052, 1660, 915, 951, 950, 949, 948, 952, 2178, 947,
	545, 545, 545, 524, 1792, 946, 945, 944, 998, 2087,
	939, 893, 893, 2583, 2576, 891, 1127, 927, 545, 545,
	1127, 2590, 893, 1349, 1089, 1086, 1087, 1088, 1093, 1095,
	1092, 1076, 1091, 926, 1448, 933, 533, 37, 1029, 1085,
	533, 1734, 1015, 1824, 1021, 1022, 1023, 1024, 1089, 1086,
	1087, 1088, 1093, 1095, 1092, 2188, 1091, 726, 533, 1883,
	1885, 1646, 1647, 1085, 1323, 2040, 503, 1061, 505, 520,
	1780, 535, 1444, 534, 509, 1070, 507, 511, 521, 512,
	2507, 506, 1995, 517, 907, 962, 508, 522, 523, 525,
	539, 538, 526, 1055, 515, 536, 155, 997, 2213, 2055,
	2028, 1998, 2196, 1837, 2025, 2043, 1130, 1131, 1132, 1133,
	1322, 907, 968, 1321, 2015, 1445, 1138, 533, 1141, 933,
	1183, 1776, 2290, 943, 941, 1727, 1440, 1348, 1053, 1319,
	501, 533, 81, 932, 496, 2498, 2517, 2038, 936, 926,
	2037, 1438, 2326, 1825, 1128, 1129, 1066, 1067, 937, 86,
	2308, 1949, 1914, 182, 2469, 1870, 1611, 545, 545, 1238,
	86, 1165, 2455, 1010, 1178, 1134, 1127, 933, 938, 116,
	1684, 149, 1126, 182, 2160, 708, 1196, 1199, 1198, 1184,
	1042, 1058, 1202, 2513, 691, 1201, 2362, 143, 693, 2168,
	144, 1014, 545, 86, 2046, 86, 182, 1457, 2302, 2045,
	111, 545, 1421, 1420, 1422, 1423, 1424, 545, 77, 1007,
	1004, 1079, 1884, 933, 1077, 1016, 735, 932, 2581, 1078,
	954, 2582, 2061, 2580, 1790, 1441, 1254, 1028, 1151, 2079,
	1152, 1155, 1080, 2556, 2169, 1561, 1561, 1851, 1030, 933,
	2554, 1184, 537, 1200, 184, 185, 186, 95, 1543, 2558,
	2559, 1171, 1172, 1173, 1174, 1987, 2046, 2176, 2177, 2171,
	530, 2045, 1099, 112, 2555, 932, 2166, 1098, 1099, 2420,
	936, 926, 2337, 2336, 1189, 531, 1435, 1763, 1436, 1358,
	937, 1437, 1768, 2176, 2177, 1357, 1347, 98, 1773, 2265,
	2167, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 1775, 2063, 1523, 1771, 942, 173, 174, 175,
	176, 932, 1772, 967, 2572, 1186, 1043, 1203, 1524, 1525,
	1522, 1544, 2173, 690, 1013, 1197, 1097, 1220, 1098, 1099,
	1768, 940, 692, 1458, 1217, 2081, 933, 932, 1249, 1097,
	2524, 1098, 1099, 926, 929, 930, 2327, 893, 1244, 1245,
	1000, 923, 927, 739, 1215, 87, 2491, 1239, 182, 2593,
	1770, 2175, 1312, 2263, 1215, 2073, 2072, 2071, 2065, 1521,
	2069, 1320, 2064, 2178, 2062, 2525, 1513, 1515, 1516, 2067,
	1121, 1122, 1124, 1123, 1125, 1126, 2450, 2175, 2066, 1216,
	1218, 2492, 545, 1859, 1345, 1097, 2591, 1098, 1099, 2178,
	1514, 2271, 1354, 2068, 2070, 1097, 1356, 1098, 1099, 545,
	545, 2396, 545, 2395, 545, 545, 1865, 545, 545, 545,
	545, 545, 545, 1119, 1120, 1121, 1122, 1124, 1123, 1125,
	1126, 2574, 545, 2344, 932, 2343, 182, 1392, 1428, 2204,
	926, 929, 930, 1097, 893, 1098, 1099, 730, 923, 927,
	2194, 1972, 182, 1117, 1118, 1119, 1120, 1121, 1122, 1124,
	1123, 1125, 1126, 545, 2270, 182, 1971, 1847, 1355, 922,
	1341, 1215, 1097, 2592, 1098, 1099, 1446, 1731, 1565, 545,
	1426, 182, 1334, 622, 1351, 1351, 635, 636, 637, 1215,
	1326, 1327, 1429, 1387, 1388, 1414, 1097, 182, 1098, 1099,
	1416, 1427, 2170, 1413, 182, 1353, 1097, 1412, 1098, 1099,
	1389, 1403, 1397, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 545, 545, 545, 2504, 1324, 1318, 1394, 1352,
	1097, 1393, 1098, 1099, 183, 1368, 2573, 183, 2495, 1846,
	183, 1344, 1332, 1425, 1224, 546, 1330, 183, 2494, 1842,
	1395, 1396, 1453, 182, 2493, 183, 1401, 1402, 1841, 1331,
	2419, 1215, 1405, 1415, 1461, 1228, 1097, 2417, 1098, 1099,
	183, 1465, 2392, 1467, 1468, 1469, 1470, 1652, 1653, 1890,
	1474, 1097, 1889, 1098, 1099, 1390, 1840, 1459, 1460, 1829,
	1830, 1831, 546, 1225, 1488, 546, 183, 546, 1542, 2341,
	1097, 1464, 1098, 1099, 2234, 2333, 1981, 1519, 1471, 1472,
	1473, 1551, 545, 1361, 1449, 1362, 1969, 1364, 1366, 1215,
	119, 1370, 1372, 1374, 1376, 1378, 1517, 545, 545, 1784,
	1227, 1526, 1783, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1463, 910, 909, 1527,
	1643, 1603, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1101,
	1097, 182, 1098, 1099, 1625, 1546, 545, 1484, 1485, 1486,
	1545, 1487, 1097, 1490, 1098, 1099, 1454, 1417, 1097, 1404,
	1098, 1099, 1562, 1400, 1624, 2448, 1630, 1399, 1631, 1097,
	182, 1098, 1099, 545, 184, 185, 186, 1398, 2334, 1520,
	184, 185, 186, 182, 1956, 1226, 545, 1605, 184, 185,
	186, 182, 2363, 182, 1056, 182, 182, 545, 1973, 1115,
	545, 2054, 1069, 2476, 1603, 92, 1097, 2475, 1098, 1099,
	2444, 545, 735, 95, 2443, 735, 93, 1905, 2587, 1607,
	1608, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1123,
	1125, 1126, 95, 1097, 2379, 1098, 1099, 1905, 2543, 1097,
	1636, 1098, 1099, 2005, 1662, 1984, 1604, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1124, 1123, 1125, 1126, 1905, 2530,
	1605, 1547, 1702, 1703, 1704, 1705, 545, 1916, 1553, 1554,
	1215, 2124, 1737, 1738, 1739, 1905, 2528, 1741, 1743, 2155,
	1687, 2301, 184, 185, 186, 1670, 1744, 705, 1824, 1688,
	1692, 545, 1606, 2520, 1215, 1609, 1610, 545, 1354, 1905,
	2509, 1354, 2301, 1354, 2303, 1693, 1718, 101, 1096, 1767,
	2371, 2506, 1638, 184, 185, 186, 1757, 1742, 100, 1657,
	99, 1563, 1691, 1905, 2451, 1564, 1724, 1655, 1916, 1675,
	2512, 1635, 2371, 1215, 1905, 2369, 1905, 1674, 1924, 545,
	1697, 1542, 1698, 1699, 1700, 1701, 1542, 1542, 1690, 739,
	1689, 101, 739, 1768, 1215, 1216, 1613, 1924, 1708, 1709,
	1710, 1711, 100, 94, 99, 2306, 1215, 2186, 2185, 1754,
	2182, 2183, 92, 94, 935, 2182, 2181, 1924, 1215, 94,
	1838, 1215, 182, 93, 1351, 1824, 2024, 1215, 1637, 182,
	1315, 2009, 2001, 2002, 182, 182, 1945, 1719, 182, 2301,
	182, 1762, 100, 1732, 1765, 1730, 1766, 182, 1740, 1945,
	1729, 1714, 1715, 1923, 182, 1905, 1904, 1777, 1096, 1215,
	1769, 1215, 1115, 2346, 1836, 1901, 1761, 1760, 1764, 1779,
	1719, 1215, 2184, 934, 1781, 1782, 1778, 1215, 1315, 1314,
	94, 2099, 182, 545, 1116, 1117, 1118, 1119, 1120, 1121,
	1122, 1124, 1123, 1125, 1126, 1260, 1259, 1676, 1838, 1946,
	183, 1856, 183, 1855, 1768, 183, 1751, 1924, 1948, 1650,
	1838, 1787, 1946, 2347, 2348, 2349, 1219, 1768, 1815, 1816,
	695, 1824, 1614, 1818, 1498, 1443, 1383, 1246, 917, 916,
	2562, 2533, 1819, 546, 546, 546, 1634, 1838, 87, 1519,
	2465, 1222, 2441, 2431, 2361, 2358, 2339, 2274, 2273, 1317,
	1717, 546, 546, 2232, 2209, 2205, 2010, 1713, 1707, 1706,
	1431, 1346, 1833, 1115, 1835, 1342, 1111, 1313, 1112, 113,
	2207, 1978, 1808, 2350, 999, 1380, 1384, 1385, 1386, 1977,
	1834, 2236, 1113, 1114, 1110, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1124, 1123, 1125, 1126, 2466, 87, 2313, 2314,
	1929, 1932, 1933, 1934, 1930, 182, 1931, 1935, 1728, 1628,
	2313, 2314, 1822, 182, 2569, 2551, 2316, 1876, 1115, 545,
	2351, 2352, 1381, 1382, 2201, 545, 1978, 1893, 2200, 2199,
	2124, 1520, 1988, 1809, 1491, 2148, 545, 1933, 1934, 1832,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1123, 1125,
	1126, 1929, 1932, 1933, 1934, 1930, 2319, 1931, 1935, 182,
	182, 1920, 2318, 2146, 2143, 2142, 2144, 37, 2147, 1213,
	1209, 2145, 1906, 1605, 2567, 1955, 1940, 1850, 2544, 1642,
	1223, 2307, 2104, 2401, 1210, 2400, 183, 2116, 2118, 2103,
	546, 546, 2007, 2490, 2294, 2410, 2119, 1213, 1209, 709,
	2412, 2297, 2293, 1442, 2113, 1863, 183, 710, 1902, 1632,
	1633, 1212, 1210, 1211, 681, 1982, 2180, 1963, 964, 545,
	963, 2246, 1848, 1887, 182, 546, 1189, 1966, 1967, 183,
	1877, 182, 1604, 2399, 546, 1939, 1977, 1206, 1207, 1212,
	546, 1211, 1557, 545, 2049, 1898, 1068, 1959, 1903, 1943,
	545, 2000, 92, 2017, 1354, 1354, 1558, 1913, 1839, 545,
	2016, 2299, 1843, 93, 1844, 1845, 1867, 1868, 1947, 120,
	92, 2021, 1950, 1853, 1724, 94, 1854, 94, 1652, 1653,
	1957, 93, 182, 182, 182, 182, 182, 2197, 1812, 2505,
	1960, 2461, 2179, 1937, 1639, 717, 718, 1801, 2279, 182,
	182, 2102, 1860, 1861, 1862, 1970, 1864, 1828, 99, 2101,
	1866, 2482, 2481, 1979, 101, 182, 1985, 1871, 1872, 1873,
	1874, 1875, 2418, 1637, 1980, 100, 101, 99, 2019, 2416,
	1989, 1990, 1991, 1542, 1888, 2415, 1334, 100, 101, 99,
	2408, 2359, 2298, 2296, 2210, 1752, 1329, 716, 94, 100,
	100, 2407, 2287, 2078, 1916, 2571, 2570, 2011, 2012, 1901,
	691, 545, 2020, 2088, 2018, 1857, 1626, 1240, 1232, 106,
	107, 2571, 2496, 2332, 707, 103, 2093, 545, 88, 1,
	2056, 630, 2553, 514, 1615, 1187, 528, 2549, 2041, 1418,
	1408, 183, 182, 2057, 2382, 2462, 545, 2006, 1758, 2357,
	1722, 925, 145, 1685, 2047, 545, 1686, 2048, 2539, 2058,
	110, 886, 545, 545, 109, 182, 182, 182, 182, 182,
	2093, 2075, 2121, 2074, 928, 546, 2136, 182, 1027, 697,
	1753, 2372, 182, 182, 1964, 182, 2130, 1694, 182, 182,
	182, 2107, 546, 546, 1266, 546, 1264, 546, 546, 1202,
	546, 546, 546, 546, 546, 546, 2106, 2094, 2095, 2096,
	2097, 2092, 1265, 1263, 1268, 546, 1267, 1262, 1858, 183,
	2154, 1492, 2127, 2195, 2108, 2105, 542, 2127, 1936, 182,
	180, 1255, 599, 1233, 2156, 183, 965, 2157, 698, 504,
	2137, 2187, 545, 2140, 699, 1785, 546, 510, 183, 2138,
	2139, 545, 2141, 2149, 1139, 2100, 182, 1951, 2153, 2216,
	95, 1453, 546, 2158, 183, 736, 182, 729, 1627, 2164,
	1891, 2132, 2291, 2112, 2114, 1908, 2117, 603, 2110, 2489,
	183, 182, 2409, 2531, 182, 1961, 2191, 183, 1229, 2190,
	1849, 1559, 1667, 1623, 2247, 1512, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 546, 546, 546, 2212, 567,
	2224, 1724, 566, 564, 1894, 1917, 2223, 2215, 2227, 2085,
	2211, 1102, 625, 1881, 1241, 1928, 2192, 2193, 2090, 2091,
	2098, 618, 620, 619, 597, 1926, 183, 1925, 2242, 544,
	545, 182, 2241, 1810, 1671, 2315, 2311, 1665, 2248, 1900,
	575, 2255, 568, 560, 623, 2329, 2244, 2245, 2222, 2027,
	2233, 2249, 2029, 1962, 2229, 1081, 2135, 1205, 554, 898,
	1556, 2467, 2453, 1827, 2267, 1204, 1568, 1569, 2202, 1745,
	63, 41, 2133, 1594, 549, 2563, 737, 2280, 2281, 890,
	1072, 897, 723, 32, 31, 546, 182, 30, 2288, 2151,
	2152, 2295, 29, 28, 23, 22, 21, 20, 2300, 19,
	546, 546, 2285, 25, 2335, 18, 17, 16, 115, 182,
	50, 47, 2317, 2320, 2252, 2253, 45, 2254, 122, 121,
	2256, 48, 2258, 44, 2260, 2322, 1002, 182, 42, 27,
	182, 182, 182, 2310, 183, 2323, 26, 15, 14, 546,
	545, 545, 2330, 2331, 13, 12, 11, 10, 2364, 2365,
	2340, 2224, 2342, 2324, 2325, 9, 5, 2223, 4, 35,
	34, 33, 1075, 183, 24, 2, 546, 545, 545, 545,
	545, 2367, 1993, 1747, 0, 0, 183, 0, 0, 546,
	0, 0, 0, 0, 183, 0, 183, 0, 183, 183,
	546, 2378, 0, 546, 0, 2376, 2377, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 0, 0,
	0, 2251, 0, 182, 2391, 0, 0, 0, 0, 0,
	0, 0, 2388, 0, 0, 2261, 2262, 2264, 2266, 2387,
	0, 0, 0, 0, 0, 2272, 0, 545, 0, 545,
	2276, 0, 0, 2277, 178, 0, 0, 2425, 0, 2282,
	2404, 2405, 0, 37, 2413, 2429, 0, 2427, 2414, 546,
	2130, 0, 691, 0, 2130, 2423, 2421, 0, 120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 2304, 2305, 546, 0, 2309, 0, 0, 0,
	546, 0, 545, 2436, 0, 2127, 0, 0, 0, 0,
	2449, 0, 0, 0, 2321, 0, 614, 0, 592, 594,
	615, 616, 545, 590, 593, 617, 2445, 2447, 2446, 2433,
	2434, 0, 0, 2452, 0, 2457, 0, 2464, 2456, 545,
	0, 0, 546, 545, 545, 0, 0, 0, 159, 0,
	160, 0, 595, 596, 2437, 2438, 2439, 2440, 0, 0,
	0, 0, 0, 177, 0, 0, 2486, 2483, 2484, 0,
	2485, 2488, 545, 0, 0, 0, 0, 0, 2370, 0,
	2500, 0, 545, 0, 2497, 183, 2499, 0, 2501, 0,
	2503, 2130, 183, 0, 0, 691, 0, 183, 183, 721,
	0, 183, 0, 183, 0, 0, 545, 182, 0, 0,
	183, 0, 0, 2511, 2514, 0, 0, 183, 0, 37,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2397, 0, 0, 545,
	0, 0, 0, 0, 0, 183, 546, 0, 0, 2526,
	0, 0, 0, 545, 545, 0, 0, 2532, 2529, 0,
	2538, 545, 2534, 37, 0, 0, 0, 558, 2464, 2540,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 2560,
	168, 2552, 2557, 0, 0, 0, 0, 0, 0, 2566,
	0, 0, 0, 0, 2568, 0, 0, 0, 0, 715,
	2127, 0, 0, 545, 0, 0, 0, 737, 737, 737,
	2577, 2575, 0, 0, 2584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1071, 1073, 0, 0, 2594,
	0, 0, 0, 0, 0, 0, 2460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2470, 2471, 2472, 0, 2473, 2474, 0, 0, 0, 2478,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 0, 0, 546, 0,
	0, 155, 0, 0, 0, 0, 2502, 0, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 1181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 183, 0, 0, 0, 0, 2516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2521, 0,
	0, 0, 0, 0, 2522, 2523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1193, 1194, 0, 0, 0, 0,
	0, 2535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 1236,
	0, 0, 0, 0, 0, 0, 546, 0, 737, 0,
	0, 0, 0, 546, 1256, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 183, 183, 183, 183, 183,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 183, 120, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 183, 0,
	0, 0, 0, 0, 0, 0, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 0, 0, 0,
	0, 0, 173, 174, 175, 176, 0, 0, 152, 0,
	0, 0, 0, 141, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 160, 0, 0, 0,
	546, 0, 0, 0, 0, 1337, 1338, 151, 150, 177,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 0, 0, 0, 546, 546, 0, 183, 183,
	183, 183, 183, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 178, 183, 183, 0, 183, 890,
	0, 183, 183, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 1181, 0, 0, 0, 1360, 1360, 120, 1360,
	0, 1360, 1360, 0, 1369, 1360, 1360, 1360, 1360, 1360,
	0, 162, 0, 0, 0, 0, 0, 1181, 1181, 890,
	0, 0, 183, 0, 0, 146, 1339, 153, 0, 1336,
	0, 147, 148, 0, 0, 546, 604, 163, 0, 1100,
	0, 0, 0, 0, 546, 0, 168, 0, 0, 183,
	1430, 0, 0, 1958, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 1450, 1147, 159, 0,
	160, 0, 0, 0, 183, 0, 0, 183, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 181, 0, 0,
	500, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 1190, 0, 0, 500, 737,
	737, 737, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 183, 0, 0, 0, 0, 722,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 632, 79, 0, 0, 0, 0, 0, 0, 183,
	0, 163, 0, 0, 0, 0, 1231, 0, 0, 1552,
	168, 0, 0, 0, 0, 0, 1181, 0, 0, 0,
	0, 0, 183, 0, 1566, 1567, 0, 0, 894, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	183, 0, 149, 183, 183, 183, 0, 0, 0, 0,
	0, 0, 0, 546, 546, 0, 0, 0, 143, 0,
	0, 144, 0, 1629, 0, 0, 0, 0, 0, 694,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 546, 546, 546, 0, 0, 0, 0, 0, 694,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1236, 0, 0, 737, 0, 0, 0,
	0, 0, 0, 0, 737, 0, 0, 737, 0, 0,
	0, 155, 0, 0, 0, 0, 183, 0, 890, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 0, 0, 0, 0, 0, 173, 174,
	175, 176, 0, 897, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 890, 0,
	0, 0, 0, 0, 897, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 0, 546, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 890, 0, 0, 0,
	0, 0, 0, 78, 39, 40, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 546, 0, 43, 69, 70,
	0, 67, 71, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 1455, 0, 0, 0, 0, 546,
	183, 0, 0, 0, 0, 0, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 0, 0, 56,
	0, 0, 173, 174, 175, 176, 0, 0, 0, 0,
	87, 0, 546, 500, 0, 500, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 546, 546, 0, 0,
	1821, 0, 0, 0, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 1509, 1510, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	0, 0, 1003, 0, 1009, 0, 0, 1011, 0, 0,
	0, 0, 0, 0, 0, 1283, 1549, 1550, 0, 0,
	0, 0, 0, 0, 1555, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1590,
	1591, 1592, 1593, 1595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 46, 49, 52, 51,
	54, 0, 66, 0, 0, 75, 72, 1182, 0, 737,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1641, 0, 55, 83,
	82, 0, 1895, 64, 65, 53, 0, 0, 0, 0,
	0, 73, 74, 1910, 0, 0, 0, 1648, 1649, 0,
	0, 1063, 1063, 1063, 0, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 1682, 0, 0, 57, 58, 704,
	59, 60, 61, 62, 0, 0, 0, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 694, 1135,
	1136, 1137, 500, 1140, 0, 1142, 1143, 1144, 1145, 0,
	1148, 1150, 1150, 0, 1150, 1154, 1154, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1983, 1166, 1167, 1168,
	1169, 1170, 0, 1720, 0, 0, 1154, 1154, 1154, 1154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	0, 0, 0, 0, 0, 0, 2013, 0, 0, 1284,
	0, 1243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 1191, 0, 0, 0,
	0, 0, 694, 0, 0, 0, 694, 0, 0, 0,
	86, 0, 694, 1297, 1300, 1301, 1302, 1303, 1304, 1305,
	0, 1306, 1307, 1308, 1309, 1310, 1285, 1286, 1287, 1288,
	1269, 1270, 1298, 0, 1272, 0, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 500, 0, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2109, 0, 0, 0, 0, 0, 0,
	0, 1182, 737, 0, 0, 0, 1181, 0, 0, 2134,
	1360, 1181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1261, 0, 0, 1182, 1182, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1299, 0, 1406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 1452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 890,
	0, 0, 1181, 500, 0, 0, 0, 0, 1641, 0,
	500, 1391, 0, 0, 1147, 0, 0, 0, 0, 1475,
	1476, 500, 500, 500, 500, 500, 500, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1231, 0, 1462, 0, 0, 0, 0, 0, 0, 1466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 2109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 722,
	722, 0, 0, 0, 0, 1182, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 1452, 722, 722, 722, 722, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 0, 0, 1063, 1063, 1063, 0, 0, 0, 0,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 1641, 500,
	0, 0, 0, 0, 0, 1452, 0, 500, 0, 500,
	0, 500, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2383, 2384, 2385, 2386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2076, 2077, 0, 0,
	0, 2080, 0, 0, 0, 2082, 2083, 2084, 1654, 0,
	0, 0, 0, 0, 0, 2089, 1658, 0, 1661, 0,
	0, 1501, 0, 0, 0, 0, 0, 0, 0, 1181,
	0, 0, 0, 0, 2426, 0, 2428, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1641,
	0, 0, 0, 0, 0, 0, 1668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2479, 0, 0, 0,
	2479, 2479, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 500, 0, 2208, 0, 0,
	500, 500, 0, 0, 500, 0, 1813, 0, 0, 1641,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 1641,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1641, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 1806,
	1807, 0, 0, 1811, 1181, 0, 2527, 0, 0, 0,
	0, 2269, 1814, 0, 0, 0, 0, 0, 2275, 1817,
	737, 737, 0, 0, 0, 0, 0, 0, 2547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1452, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2375, 0, 0, 0, 500, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2389, 0, 2390, 0, 0, 0, 0,
	2393, 2394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 1942, 0, 1992, 0, 0,
	0, 0, 2422, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 2430, 0, 0, 2432, 0, 0, 0,
	0, 0, 1886, 0, 0, 0, 0, 0, 2435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2442,
	0, 694, 0, 0, 0, 0, 0, 0, 500, 500,
	500, 500, 500, 0, 0, 0, 0, 0, 0, 1986,
	0, 1921, 1922, 0, 0, 500, 500, 0, 558, 0,
	1941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2487, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 2033, 2034,
	2035, 2036, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 1501, 2042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2050, 0, 0, 0, 558, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2014, 0, 0, 0, 1182, 0, 0, 0, 0,
	1182, 500, 500, 500, 500, 500, 0, 0, 0, 0,
	0, 0, 0, 2150, 0, 0, 0, 0, 500, 1406,
	0, 500, 0, 0, 500, 2159, 1452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1182, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 0, 142, 0, 0, 0, 500, 0, 0,
	500, 0, 0, 1668, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2198, 0, 0, 0, 0, 0,
	0, 2131, 0, 79, 0, 0, 1668, 1668, 1668, 1668,
	1668, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	141, 2219, 0, 1941, 0, 0, 1668, 0, 0, 1668,
	0, 2228, 0, 0, 0, 0, 0, 500, 0, 0,
	0, 159, 0, 160, 0, 0, 2240, 0, 0, 2243,
	0, 0, 129, 130, 151, 150, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 2221,
	0, 0, 0, 0, 0, 0, 2284, 0, 0, 0,
	0, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 500, 0, 0, 500, 500, 500, 0,
	0, 2250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 127, 153, 134, 126, 0, 147, 148,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2338, 0, 0, 0, 138, 136,
	131, 132, 133, 137, 0, 0, 0, 0, 0, 0,
	128, 0, 2353, 0, 0, 2354, 2355, 2356, 0, 139,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 87, 0, 0, 0, 0, 0, 626, 633,
	634, 635, 636, 637, 627, 629, 0, 1668, 1182, 628,
	0, 0, 0, 0, 0, 631, 638, 639, 0, 0,
	2328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 2225, 2226, 0, 0, 0, 2368, 0, 0, 0,
	0, 0, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	2398, 0, 2402, 2403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 144, 0,
	0, 0, 0, 0, 0, 2131, 0, 79, 0, 2131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2515, 0, 0, 0, 0, 0, 0, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	0, 0, 0, 0, 0, 173, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 2131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1159,
	1161, 1162, 1163, 0, 0, 0, 614, 0, 0, 0,
	615, 616, 0, 0, 0, 617, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 868, 853, 421, 0, 800, 871, 770, 788, 881,
	791, 794, 835, 749, 814, 342, 785, 79, 774, 744,
	780, 745, 772, 802, 244, 769, 855, 818, 870, 297,
	241, 751, 775, 356, 790, 193, 837, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 877, 301, 824, 0, 406, 327, 0, 0, 0,
	804, 859, 812, 849, 799, 836, 759, 823, 872, 786,
	832, 873, 287, 226, 192, 339, 407, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 2541, 0, 2542, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 782, 829, 867, 783, 831, 239, 285, 246, 238,
	425, 878, 858, 748, 811, 866, 0, 0, 209, 869,
	806, 0, 834, 0, 884, 743, 826, 0, 746, 750,
	880, 862, 778, 249, 0, 0, 0, 0, 0, 0,
	0, 803, 813, 846, 797, 0, 0, 0, 0, 0,
	0, 0, 776, 0, 822, 0, 0, 0, 755, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 801, 0, 0, 0, 758, 0, 777, 847, 0,
	741, 268, 752, 328, 231, 0, 851, 861, 798, 459,
	865, 796, 795, 841, 756, 857, 789, 296, 754, 293,
	188, 205, 0, 787, 338, 379, 385, 856, 773, 781,
	229, 779, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 821, 839, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 1065, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 768, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 852,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 844, 883, 351, 384,
	219, 445, 405, 763, 767, 761, 762, 816, 817, 764,
	874, 875, 876, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 848, 757, 0, 765, 766, 0, 854, 863,
	864, 495, 313, 396, 442, 820, 187, 202, 299, 879,
	373, 261, 473, 453, 449, 742, 760, 236, 771, 0,
	0, 784, 792, 793, 805, 807, 808, 809, 810, 324,
	827, 828, 830, 838, 840, 843, 845, 850, 860, 882,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 819, 825, 310, 254, 273, 284, 833, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 815, 842, 306,
	422, 423, 280, 868, 853, 421, 0, 800, 871, 770,
	788, 881, 791, 794, 835, 749, 814, 342, 785, 0,
	774, 744, 780, 745, 772, 802, 244, 769, 855, 818,
	870, 297, 241, 751, 775, 356, 790, 193, 837, 397,
	228, 307, 304, 428, 255, 247, 243, 227, 281, 314,
	354, 415, 348, 877, 301, 824, 0, 406, 327, 0,
	0, 0, 804, 859, 812, 849, 799, 836, 759, 823,
	872, 786, 832, 873, 287, 226, 192, 339, 407, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 782, 829, 867, 783, 831, 239, 285,
	246, 238, 425, 878, 858, 748, 811, 866, 0, 0,
	209, 869, 806, 0, 834, 0, 884, 743, 826, 0,
	746, 750, 880, 862, 778, 249, 0, 0, 0, 0,
	0, 0, 0, 803, 813, 846, 797, 0, 0, 0,
	0, 0, 2160, 0, 776, 0, 822, 0, 0, 0,
	755, 747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 801, 0, 0, 0, 758, 0, 777,
	847, 0, 741, 268, 752, 328, 231, 0, 851, 861,
	798, 459, 865, 796, 795, 841, 756, 857, 789, 296,
	754, 293, 188, 205, 0, 787, 338, 379, 385, 856,
	773, 781, 229, 779, 383, 352, 443, 213, 257, 376,
	357, 381, 364, 260, 821, 839, 382, 302, 430, 371,
	440, 460, 461, 237, 332, 450, 419, 456, 472, 206,
	234, 346, 412, 446, 403, 325, 426, 427, 292, 402,
	266, 191, 300, 466, 204, 391, 221, 211, 197, 414,
	438, 218, 394, 0, 0, 474, 199, 436, 411, 321,
	289, 290, 198, 0, 375, 242, 264, 232, 341, 433,
	434, 230, 475, 208, 455, 201, 1065, 454, 334, 429,
	437, 322, 312, 200, 435, 320, 311, 295, 253, 275,
	369, 305, 370, 276, 330, 329, 331, 194, 447, 0,
	195, 0, 408, 448, 476, 214, 215, 216, 768, 252,
	256, 263, 265, 271, 272, 279, 298, 345, 368, 366,
	372, 852, 424, 441, 451, 458, 464, 465, 467, 468,
	469, 470, 471, 333, 278, 404, 294, 303, 844, 883,
	351, 384, 219, 445, 405, 763, 767, 761, 762, 816,
	817, 764, 874, 875, 876, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 848, 757, 0, 765, 766, 0,
	854, 863, 864, 495, 313, 396, 442, 820, 187, 202,
	299, 879, 373, 261, 473, 453, 449, 742, 760, 236,
	771, 0, 0, 784, 792, 793, 805, 807, 808, 809,
	810, 324, 827, 828, 830, 838, 840, 843, 845, 850,
	860, 882, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 398, 399, 400,
	401, 409, 413, 431, 432, 444, 457, 462, 270, 439,
	463, 0, 308, 819, 825, 310, 254, 273, 284, 833,
	452, 410, 207, 380, 262, 196, 225, 210, 233, 248,
	251, 288, 319, 326, 355, 359, 267, 245, 223, 377,
	220, 395, 416, 417, 418, 420, 323, 240, 358, 815,
	842, 306, 422, 423, 280, 868, 853, 421, 0, 800,
	871, 770, 788, 881, 791, 794, 835, 749, 814, 342,
	785, 0, 774, 744, 780, 745, 772, 802, 244, 769,
	855, 818, 870, 297, 241, 751, 775, 356, 790, 193,
	837, 397, 228, 307, 304, 428, 255, 247, 243, 227,
	281, 314, 354, 415, 348, 877, 301, 824, 0, 406,
	327, 0, 0, 0, 804, 859, 812, 849, 799, 836,
	759, 823, 872, 786, 832, 873, 287, 226, 192, 339,
	407, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 782, 829, 867, 783, 831,
	239, 285, 246, 238, 425, 878, 858, 748, 811, 866,
	0, 0, 209, 869, 806, 0, 834, 0, 884, 743,
	826, 0, 746, 750, 880, 862, 778, 249, 0, 0,
	0, 0, 0, 0, 0, 803, 813, 846, 797, 0,
	0, 0, 0, 0, 2120, 0, 776, 0, 822, 0,
	0, 0, 755, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 801, 0, 0, 0, 758,
	0, 777, 847, 0, 741, 268, 752, 328, 231, 0,
	851, 861, 798, 459, 865, 796, 795, 841, 756, 857,
	789, 296, 754, 293, 188, 205, 0, 787, 338, 379,
	385, 856, 773, 781, 229, 779, 383, 352, 443, 213,
	257, 376, 357, 381, 364, 260, 821, 839, 382, 302,
	430, 371, 440, 460, 461, 237, 332, 450, 419, 456,
	472, 206, 234, 346, 412, 446, 403, 325, 426, 427,
	292, 402, 266, 191, 300, 466, 204, 391, 221, 211,
	197, 414, 438, 218, 394, 0, 0, 474, 199, 436,
	411, 321, 289, 290, 198, 0, 375, 242, 264, 232,
	341, 433, 434, 230, 475, 208, 455, 201, 1065, 454,
	334, 429, 437, 322, 312, 200, 435, 320, 311, 295,
	253, 275, 369, 305, 370, 276, 330, 329, 331, 194,
	447, 0, 195, 0, 408, 448, 476, 214, 215, 216,
	768, 252, 256, 263, 265, 271, 272, 279, 298, 345,
	368, 366, 372, 852, 424, 441, 451, 458, 464, 465,
	467, 468, 469, 470, 471, 333, 278, 404, 294, 303,
	844, 883, 351, 384, 219, 445, 405, 763, 767, 761,
	762, 816, 817, 764, 874, 875, 876, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 848, 757, 0, 765,
	766, 0, 854, 863, 864, 495, 313, 396, 442, 820,
	187, 202, 299, 879, 373, 261, 473, 453, 449, 742,
	760, 236, 771, 0, 0, 784, 792, 793, 805, 807,
	808, 809, 810, 324, 827, 828, 830, 838, 840, 843,
	845, 850, 860, 882, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 398,
	399, 400, 401, 409, 413, 431, 432, 444, 457, 462,
	270, 439, 463, 0, 308, 819, 825, 310, 254, 273,
	284, 833, 452, 410, 207, 380, 262, 196, 225, 210,
	233, 248, 251, 288, 319, 326, 355, 359, 267, 245,
	223, 377, 220, 395, 416, 417, 418, 420, 323, 240,
	358, 815, 842, 306, 422, 423, 280, 868, 853, 421,
	0, 800, 871, 770, 788, 881, 791, 794, 835, 749,
	814, 342, 785, 0, 774, 744, 780, 745, 772, 802,
	244, 769, 855, 818, 870, 297, 241, 751, 775, 356,
	790, 193, 837, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 877, 301, 824,
	0, 406, 327, 0, 0, 0, 804, 859, 812, 849,
	799, 836, 759, 823, 872, 786, 832, 873, 287, 226,
	192, 339, 407, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 782, 829, 867,
	783, 831, 239, 285, 246, 238, 425, 878, 858, 748,
	811, 866, 0, 0, 209, 869, 806, 0, 834, 0,
	884, 743, 826, 0, 746, 750, 880, 862, 778, 249,
	0, 0, 0, 0, 0, 0, 0, 803, 813, 846,
	797, 0, 0, 0, 0, 0, 1656, 0, 776, 0,
	822, 0, 0, 0, 755, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 801, 0, 0,
	0, 758, 0, 777, 847, 0, 741, 268, 752, 328,
	231, 0, 851, 861, 798, 459, 865, 796, 795, 841,
	756, 857, 789, 296, 754, 293, 188, 205, 0, 787,
	338, 379, 385, 856, 773, 781, 229, 779, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 821, 839,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	1065, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 768, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 852, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 844, 883, 351, 384, 219, 445, 405, 763,
	767, 761, 762, 816, 817, 764, 874, 875, 876, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 848, 757,
	0, 765, 766, 0, 854, 863, 864, 495, 313, 396,
	442, 820, 187, 202, 299, 879, 373, 261, 473, 453,
	449, 742, 760, 236, 771, 0, 0, 784, 792, 793,
	805, 807, 808, 809, 810, 324, 827, 828, 830, 838,
	840, 843, 845, 850, 860, 882, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 819, 825, 310,
	254, 273, 284, 833, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 815, 842, 306, 422, 423, 280, 868,
	853, 421, 0, 800, 871, 770, 788, 881, 791, 794,
	835, 749, 814, 342, 785, 0, 774, 744, 780, 745,
	772, 802, 244, 769, 855, 818, 870, 297, 241, 751,
	775, 356, 790, 193, 837, 397, 228, 307, 304, 428,
	255, 247, 243, 227, 281, 314, 354, 415, 348, 877,
	301, 824, 0, 406, 327, 0, 0, 0, 804, 859,
	812, 849, 799, 836, 759, 823, 872, 786, 832, 873,
	287, 226, 192, 339, 407, 259, 0, 87, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 782,
	829, 867, 783, 831, 239, 285, 246, 238, 425, 878,
	858, 748, 811, 866, 0, 0, 209, 869, 806, 0,
	834, 0, 884, 743, 826, 0, 746, 750, 880, 862,
	778, 249, 0, 0, 0, 0, 0, 0, 0, 803,
	813, 846, 797, 0, 0, 0, 0, 0, 0, 0,
	776, 0, 822, 0, 0, 0, 755, 747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 801,
	0, 0, 0, 758, 0, 777, 847, 0, 741, 268,
	752, 328, 231, 0, 851, 861, 798, 459, 865, 796,
	795, 841, 756, 857, 789, 296, 754, 293, 188, 205,
	0, 787, 338, 379, 385, 856, 773, 781, 229, 779,
	383, 352, 443, 213, 257, 376, 357, 381, 364, 260,
	821, 839, 382, 302, 430, 371, 440, 460, 461, 237,
	332, 450, 419, 456, 472, 206, 234, 346, 412, 446,
	403, 325, 426, 427, 292, 402, 266, 191, 300, 466,
	204, 391, 221, 211, 197, 414, 438, 218, 394, 0,
	0, 474, 199, 436, 411, 321, 289, 290, 198, 0,
	375, 242, 264, 232, 341, 433, 434, 230, 475, 208,
	455, 201, 1065, 454, 334, 429, 437, 322, 312, 200,
	435, 320, 311, 295, 253, 275, 369, 305, 370, 276,
	330, 329, 331, 194, 447, 0, 195, 0, 408, 448,
	476, 214, 215, 216, 768, 252, 256, 263, 265, 271,
	272, 279, 298, 345, 368, 366, 372, 852, 424, 441,
	451, 458, 464, 465, 467, 468, 469, 470, 471, 333,
	278, 404, 294, 303, 844, 883, 351, 384, 219, 445,
	405, 763, 767, 761, 762, 816, 817, 764, 874, 875,
	876, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	848, 757, 0, 765, 766, 0, 854, 863, 864, 495,
	313, 396, 442, 820, 187, 202, 299, 879, 373, 261,
	473, 453, 449, 742, 760, 236, 771, 0, 0, 784,
	792, 793, 805, 807, 808, 809, 810, 324, 827, 828,
	830, 838, 840, 843, 845, 850, 860, 882, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 315, 316, 317, 318, 335, 336,
	337, 340, 343, 344, 347, 349, 350, 353, 360, 361,
	362, 363, 365, 367, 374, 378, 386, 387, 388, 389,
	390, 392, 393, 398, 399, 400, 401, 409, 413, 431,
	432, 444, 457, 462, 270, 439, 463, 0, 308, 819,
	825, 310, 254, 273, 284, 833, 452, 410, 207, 380,
	262, 196, 225, 210, 233, 248, 251, 288, 319, 326,
	355, 359, 267, 245, 223, 377, 220, 395, 416, 417,
	418, 420, 323, 240, 358, 815, 842, 306, 422, 423,
	280, 868, 853, 421, 0, 800, 871, 770, 788, 881,
	791, 794, 835, 749, 814, 342, 785, 0, 774, 744,
	780, 745, 772, 802, 244, 769, 855, 818, 870, 297,
	241, 751, 775, 356, 790, 193, 837, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 877, 301, 824, 0, 406, 327, 0, 0, 0,
	804, 859, 812, 849, 799, 836, 759, 823, 872, 786,
	832, 873, 287, 226, 192, 339, 407, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 782, 829, 867, 783, 831, 239, 285, 246, 238,
	425, 878, 858, 748, 811, 866, 0, 0, 209, 869,
	806, 0, 834, 0, 884, 743, 826, 0, 746, 750,
	880, 862, 778, 249, 0, 0, 0, 0, 0, 0,
	0, 803, 813, 846, 797, 0, 0, 0, 0, 0,
	0, 0, 776, 0, 822, 0, 0, 0, 755, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 801, 0, 0, 0, 758, 0, 777, 847, 0,
	741, 268, 752, 328, 231, 0, 851, 861, 798, 459,
	865, 796, 795, 841, 756, 857, 789, 296, 754, 293,
	188, 205, 0, 787, 338, 379, 385, 856, 773, 781,
	229, 779, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 821, 839, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 1065, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 768, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 852,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 844, 883, 351, 384,
	219, 445, 405, 763, 767, 761, 762, 816, 817, 764,
	874, 875, 876, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 848, 757, 0, 765, 766, 0, 854, 863,
	864, 495, 313, 396, 442, 820, 187, 202, 299, 879,
	373, 261, 473, 453, 449, 742, 760, 236, 771, 0,
	0, 784, 792, 793, 805, 807, 808, 809, 810, 324,
	827, 828, 830, 838, 840, 843, 845, 850, 860, 882,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 819, 825, 310, 254, 273, 284, 833, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 815, 842, 306,
	422, 423, 280, 868, 853, 421, 0, 800, 871, 770,
	788, 881, 791, 794, 835, 749, 814, 342, 785, 0,
	774, 744, 780, 745, 772, 802, 244, 769, 855, 818,
	870, 297, 241, 751, 775, 356, 790, 193, 837, 397,
	228, 307, 304, 428, 255, 247, 243, 227, 281, 314,
	354, 415, 348, 877, 301, 824, 0, 406, 327, 0,
	0, 0, 804, 859, 812, 849, 799, 836, 759, 823,
	872, 786, 832, 873, 287, 226, 192, 339, 407, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 782, 829, 867, 783, 831, 239, 285,
	246, 238, 425, 878, 858, 748, 811, 866, 0, 0,
	885, 869, 806, 0, 834, 0, 884, 743, 826, 0,
	746, 750, 880, 862, 778, 249, 0, 0, 0, 0,
	0, 0, 0, 803, 813, 846, 797, 0, 0, 0,
	0, 0, 0, 0, 776, 0, 822, 0, 0, 0,
	755, 747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 801, 0, 0, 0, 758, 0, 777,
	847, 0, 741, 268, 752, 328, 231, 0, 851, 861,
	798, 459, 865, 796, 795, 841, 756, 857, 789, 296,
	754, 293, 188, 205, 0, 787, 338, 379, 385, 856,
	773, 781, 229, 779, 383, 352, 443, 213, 257, 376,
	357, 381, 364, 260, 821, 839, 382, 302, 430, 371,
	440, 460, 461, 237, 332, 450, 419, 456, 472, 206,
	234, 346, 412, 446, 403, 325, 426, 427, 292, 402,
	266, 191, 300, 466, 204, 391, 221, 211, 197, 414,
	438, 218, 394, 0, 0, 474, 199, 436, 411, 321,
	289, 290, 198, 0, 375, 242, 264, 232, 341, 433,
	434, 230, 475, 208, 455, 201, 753, 454, 334, 429,
	437, 322, 312, 200, 435, 320, 311, 295, 253, 275,
	369, 305, 370, 276, 330, 329, 331, 194, 447, 0,
	195, 0, 408, 448, 476, 214, 215, 216, 768, 252,
	256, 263, 265, 271, 272, 279, 298, 345, 368, 366,
	372, 852, 424, 441, 451, 458, 464, 465, 467, 468,
	469, 470, 471, 740, 734, 733, 294, 303, 844, 883,
	351, 384, 219, 445, 405, 763, 767, 761, 762, 816,
	817, 764, 874, 875, 876, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 848, 757, 0, 765, 766, 0,
	854, 863, 864, 495, 313, 396, 442, 820, 187, 202,
	299, 879, 373, 261, 473, 453, 449, 742, 760, 236,
	771, 0, 0, 784, 792, 793, 805, 807, 808, 809,
	810, 324, 827, 828, 830, 838, 840, 843, 845, 850,
	860, 882, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 398, 399, 400,
	401, 409, 413, 431, 432, 444, 457, 462, 270, 439,
	463, 0, 308, 819, 825, 310, 254, 273, 284, 833,
	452, 410, 207, 380, 262, 196, 225, 210, 233, 248,
	251, 288, 319, 326, 355, 359, 267, 245, 223, 377,
	220, 395, 416, 417, 418, 420, 323, 240, 358, 815,
	842, 306, 422, 423, 280, 868, 853, 421, 0, 800,
	871, 770, 788, 881, 791, 794, 835, 749, 814, 342,
	785, 0, 774, 744, 780, 745, 772, 802, 244, 769,
	855, 818, 870, 297, 241, 751, 775, 356, 790, 193,
	837, 397, 228, 307, 304, 428, 255, 247, 243, 227,
	281, 314, 354, 415, 348, 877, 301, 824, 0, 406,
	327, 0, 0, 0, 804, 859, 812, 849, 799, 836,
	759, 823, 872, 786, 832, 873, 287, 226, 192, 339,
	407, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 782, 829, 867, 783, 831,
	239, 285, 246, 238, 425, 878, 858, 748, 811, 866,
	0, 0, 885, 869, 806, 0, 834, 0, 884, 743,
	826, 0, 746, 750, 880, 862, 778, 249, 0, 0,
	0, 0, 0, 0, 0, 803, 813, 846, 797, 0,
	0, 0, 0, 0, 0, 0, 776, 0, 822, 0,
	0, 0, 755, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 801, 0, 0, 0, 758,
	0, 777, 847, 0, 741, 268, 752, 328, 231, 0,
	851, 861, 798, 459, 865, 796, 795, 841, 756, 857,
	789, 296, 754, 293, 188, 205, 0, 787, 338, 379,
	385, 856, 773, 781, 229, 779, 383, 352, 443, 213,
	257, 376, 357, 381, 364, 260, 821, 839, 382, 302,
	430, 371, 440, 460, 461, 237, 332, 450, 419, 456,
	472, 206, 234, 346, 412, 446, 403, 325, 426, 427,
	292, 402, 266, 191, 300, 466, 204, 391, 221, 211,
	197, 414, 1247, 218, 394, 0, 0, 474, 199, 436,
	411, 321, 289, 290, 198, 0, 375, 242, 264, 232,
	341, 433, 434, 230, 475, 208, 455, 201, 753, 454,
	334, 429, 437, 322, 312, 200, 435, 320, 311, 295,
	253, 275, 369, 305, 370, 276, 330, 329, 331, 194,
	447, 0, 195, 0, 408, 448, 476, 214, 215, 216,
	768, 252, 256, 263, 265, 271, 272, 279, 298, 345,
	368, 366, 372, 852, 424, 441, 451, 458, 464, 465,
	467, 468, 469, 470, 471, 740, 734, 733, 294, 303,
	844, 883, 351, 384, 219, 445, 405, 763, 767, 761,
	762, 816, 817, 764, 874, 875, 876, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 848, 757, 0, 765,
	766, 0, 854, 863, 864, 495, 313, 396, 442, 820,
	187, 202, 299, 879, 373, 261, 473, 453, 449, 742,
	760, 236, 771, 0, 0, 784, 792, 793, 805, 807,
	808, 809, 810, 324, 827, 828, 830, 838, 840, 843,
	845, 850, 860, 882, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 398,
	399, 400, 401, 409, 413, 431, 432, 444, 457, 462,
	270, 439, 463, 0, 308, 819, 825, 310, 254, 273,
	284, 833, 452, 410, 207, 380, 262, 196, 225, 210,
	233, 248, 251, 288, 319, 326, 355, 359, 267, 245,
	223, 377, 220, 395, 416, 417, 418, 420, 323, 240,
	358, 815, 842, 306, 422, 423, 280, 868, 853, 421,
	0, 800, 871, 770, 788, 881, 791, 794, 835, 749,
	814, 342, 785, 0, 774, 744, 780, 745, 772, 802,
	244, 769, 855, 818, 870, 297, 241, 751, 775, 356,
	790, 193, 837, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 877, 301, 824,
	0, 406, 327, 0, 0, 0, 804, 859, 812, 849,
	799, 836, 759, 823, 872, 786, 832, 873, 287, 226,
	192, 339, 407, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 782, 829, 867,
	783, 831, 239, 285, 246, 238, 425, 878, 858, 748,
	811, 866, 0, 0, 885, 869, 806, 0, 834, 0,
	884, 743, 826, 0, 746, 750, 880, 862, 778, 249,
	0, 0, 0, 0, 0, 0, 0, 803, 813, 846,
	797, 0, 0, 0, 0, 0, 0, 0, 776, 0,
	822, 0, 0, 0, 755, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 801, 0, 0,
	0, 758, 0, 777, 847, 0, 741, 268, 752, 328,
	231, 0, 851, 861, 798, 459, 865, 796, 795, 841,
	756, 857, 789, 296, 754, 293, 188, 205, 0, 787,
	338, 379, 385, 856, 773, 781, 229, 779, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 821, 839,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 731, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	753, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 768, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 852, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 740, 734, 733,
	294, 303, 844, 883, 351, 384, 219, 445, 405, 763,
	767, 761, 762, 816, 817, 764, 874, 875, 876, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 848, 757,
	0, 765, 766, 0, 854, 863, 864, 495, 313, 396,
	442, 820, 187, 202, 299, 879, 373, 261, 473, 453,
	449, 742, 760, 236, 771, 0, 0, 784, 792, 793,
	805, 807, 808, 809, 810, 324, 827, 828, 830, 838,
	840, 843, 845, 850, 860, 882, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 819, 825, 310,
	254, 273, 284, 833, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 815, 842, 306, 422, 423, 280, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 1600, 0, 576, 0, 0, 0,
	244, 581, 0, 0, 0, 297, 241, 0, 1601, 356,
	0, 193, 0, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 588, 301, 0,
	0, 406, 327, 0, 0, 0, 0, 0, 583, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 339, 407, 259, 0, 87, 0, 0, 184, 185,
	186, 626, 633, 634, 635, 636, 637, 627, 629, 0,
	0, 217, 628, 224, 618, 620, 619, 597, 631, 638,
	639, 0, 239, 285, 246, 238, 425, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 559, 573, 0, 587, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 570, 571, 720, 0, 0, 0,
	608, 0, 572, 0, 0, 580, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 328,
	231, 0, 607, 0, 0, 459, 0, 0, 605, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	338, 379, 385, 0, 0, 0, 229, 0, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 0, 0,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	0, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 0, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 0, 0, 351, 384, 219, 445, 405, 614,
	606, 592, 594, 615, 616, 589, 590, 593, 617, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 609, 579,
	578, 0, 585, 586, 0, 595, 596, 598, 600, 601,
	602, 577, 187, 202, 299, 0, 373, 261, 473, 453,
	449, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 421, 0, 306, 422, 423, 280, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	576, 0, 0, 0, 244, 581, 0, 0, 0, 297,
	241, 0, 0, 356, 0, 193, 0, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 588, 301, 0, 0, 406, 327, 0, 0, 0,
	0, 0, 583, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 339, 407, 259, 0, 87,
	0, 0, 184, 185, 186, 626, 633, 634, 635, 636,
	637, 627, 629, 0, 0, 217, 628, 224, 618, 620,
	619, 597, 631, 638, 639, 0, 239, 285, 246, 238,
	425, 0, 0, 1596, 1597, 1598, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 559, 573, 0, 587,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 570, 571,
	0, 0, 0, 0, 608, 0, 572, 0, 0, 580,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 328, 231, 0, 607, 0, 0, 459,
	0, 0, 605, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 338, 379, 385, 0, 0, 0,
	229, 0, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 0, 0, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 0, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 0,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 0, 0, 351, 384,
	219, 445, 405, 614, 606, 592, 594, 615, 616, 589,
	590, 593, 617, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 609, 579, 578, 0, 585, 586, 0, 595,
	596, 598, 600, 601, 602, 577, 187, 202, 299, 0,
	373, 261, 473, 453, 449, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 421, 0, 306,
	422, 423, 280, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 576, 0, 0, 0, 244, 581,
	0, 0, 0, 297, 241, 0, 0, 356, 0, 193,
	0, 397, 228, 307, 304, 428, 255, 247, 243, 227,
	281, 314, 354, 415, 348, 588, 301, 0, 0, 406,
	327, 0, 0, 0, 0, 0, 583, 584, 0, 0,
	0, 0, 0, 0, 1680, 0, 287, 226, 192, 339,
	407, 259, 0, 87, 0, 0, 184, 185, 186, 626,
	633, 634, 635, 636, 637, 627, 629, 0, 0, 217,
	628, 224, 618, 620, 619, 597, 631, 638, 639, 1681,
	239, 285, 246, 238, 425, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	559, 573, 0, 587, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 570, 571, 0, 0, 0, 0, 608, 0,
	572, 0, 0, 580, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 328, 231, 0,
	607, 0, 0, 459, 0, 0, 605, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 338, 379,
	385, 0, 0, 0, 229, 0, 383, 352, 443, 213,
	257, 376, 357, 381, 364, 260, 0, 0, 382, 302,
	430, 371, 440, 460, 461, 237, 332, 450, 419, 456,
	472, 206, 234, 346, 412, 446, 403, 325, 426, 427,
	292, 402, 266, 191, 300, 466, 204, 391, 221, 211,
	197, 414, 438, 218, 394, 0, 0, 474, 199, 436,
	411, 321, 289, 290, 198, 0, 375, 242, 264, 232,
	341, 433, 434, 230, 475, 208, 455, 201, 0, 454,
	334, 429, 437, 322, 312, 200, 435, 320, 311, 295,
	253, 275, 369, 305, 370, 276, 330, 329, 331, 194,
	447, 0, 195, 0, 408, 448, 476, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 345,
	368, 366, 372, 0, 424, 441, 451, 458, 464, 465,
	467, 468, 469, 470, 471, 333, 278, 404, 294, 303,
	0, 0, 351, 384, 219, 445, 405, 614, 606, 592,
	594, 615, 616, 589, 590, 593, 617, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 609, 579, 578, 0,
	585, 586, 0, 595, 596, 598, 600, 601, 602, 577,
	187, 202, 299, 0, 373, 261, 473, 453, 449, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 398,
	399, 400, 401, 409, 413, 431, 432, 444, 457, 462,
	270, 439, 463, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 452, 410, 207, 380, 262, 196, 225, 210,
	233, 248, 251, 288, 319, 326, 355, 359, 267, 245,
	223, 377, 220, 395, 416, 417, 418, 420, 323, 240,
	358, 78, 421, 306, 422, 423, 280, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 576,
	0, 0, 0, 244, 581, 0, 0, 0, 297, 241,
	0, 0, 356, 0, 193, 0, 397, 228, 307, 304,
	428, 255, 247, 243, 227, 281, 314, 354, 415, 348,
	588, 301, 0, 0, 406, 327, 0, 0, 0, 0,
	0, 583, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 339, 407, 259, 0, 87, 0,
	0, 184, 185, 186, 626, 633, 634, 635, 636, 637,
	627, 629, 0, 0, 217, 628, 224, 618, 620, 619,
	597, 631, 638, 639, 0, 239, 285, 246, 238, 425,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 559, 573, 0, 587, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 571, 0,
	0, 0, 0, 608, 0, 572, 0, 0, 580, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 328, 231, 0, 607, 0, 0, 459, 0,
	0, 605, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 338, 379, 385, 0, 0, 0, 229,
	0, 383, 352, 443, 213, 257, 376, 357, 381, 364,
	260, 0, 0, 382, 302, 430, 371, 440, 460, 461,
	237, 332, 450, 419, 456, 472, 206, 234, 346, 412,
	446, 403, 325, 426, 427, 292, 402, 266, 191, 300,
	466, 204, 391, 221, 211, 197, 414, 438, 218, 394,
	0, 0, 474, 199, 436, 411, 321, 289, 290, 198,
	0, 375, 242, 264, 232, 341, 433, 434, 230, 475,
	208, 455, 201, 0, 454, 334, 429, 437, 322, 312,
	200, 435, 320, 311, 295, 253, 275, 369, 305, 370,
	276, 330, 329, 331, 194, 447, 0, 195, 0, 408,
	448, 476, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 345, 368, 366, 372, 0, 424,
	441, 451, 458, 464, 465, 467, 468, 469, 470, 471,
	333, 278, 404, 294, 303, 0, 0, 351, 384, 219,
	445, 405, 614, 606, 592, 594, 615, 616, 589, 590,
	593, 617, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 609, 579, 578, 0, 585, 586, 0, 595, 596,
	598, 600, 601, 602, 577, 187, 202, 299, 86, 373,
	261, 473, 453, 449, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 315, 316, 317, 318, 335,
	336, 337, 340, 343, 344, 347, 349, 350, 353, 360,
	361, 362, 363, 365, 367, 374, 378, 386, 387, 388,
	389, 390, 392, 393, 398, 399, 400, 401, 409, 413,
	431, 432, 444, 457, 462, 270, 439, 463, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 452, 410, 207,
	380, 262, 196, 225, 210, 233, 248, 251, 288, 319,
	326, 355, 359, 267, 245, 223, 377, 220, 395, 416,
	417, 418, 420, 323, 240, 358, 421, 0, 306, 422,
	423, 280, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 576, 0, 0, 0, 244, 581, 0,
	0, 0, 297, 241, 0, 0, 356, 0, 193, 0,
	397, 228, 307, 304, 428, 255, 247, 243, 227, 281,
	314, 354, 415, 348, 588, 301, 0, 0, 406, 327,
	0, 0, 0, 0, 0, 583, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 339, 407,
	259, 0, 87, 0, 0, 184, 185, 186, 626, 633,
	634, 635, 636, 637, 627, 629, 0, 0, 217, 628,
	224, 618, 620, 619, 597, 631, 638, 639, 0, 239,
	285, 246, 238, 425, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 559,
	573, 0, 587, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 571, 0, 0, 0, 0, 608, 0, 572,
	0, 0, 580, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 328, 231, 0, 607,
	0, 0, 459, 0, 0, 605, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 338, 379, 385,
	0, 0, 0, 229, 0, 383, 352, 443, 213, 257,
	376, 357, 381, 364, 260, 2510, 0, 382, 302, 430,
	371, 440, 460, 461, 237, 332, 450, 419, 456, 472,
	206, 234, 346, 412, 446, 403, 325, 426, 427, 292,
	402, 266, 191, 300, 466, 204, 391, 221, 211, 197,
	414, 438, 218, 394, 0, 0, 474, 199, 436, 411,
	321, 289, 290, 198, 0, 375, 242, 264, 232, 341,
	433, 434, 230, 475, 208, 455, 201, 0, 454, 334,
	429, 437, 322, 312, 200, 435, 320, 311, 295, 253,
	275, 369, 305, 370, 276, 330, 329, 331, 194, 447,
	0, 195, 0, 408, 448, 476, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 345, 368,
	366, 372, 0, 424, 441, 451, 458, 464, 465, 467,
	468, 469, 470, 471, 333, 278, 404, 294, 303, 0,
	0, 351, 384, 219, 445, 405, 614, 606, 592, 594,
	615, 616, 589, 590, 593, 617, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 609, 579, 578, 0, 585,
	586, 0, 595, 596, 598, 600, 601, 602, 577, 187,
	202, 299, 0, 373, 261, 473, 453, 449, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 315,
	316, 317, 318, 335, 336, 337, 340, 343, 344, 347,
	349, 350, 353, 360, 361, 362, 363, 365, 367, 374,
	378, 386, 387, 388, 389, 390, 392, 393, 398, 399,
	400, 401, 409, 413, 431, 432, 444, 457, 462, 270,
	439, 463, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 452, 410, 207, 380, 262, 196, 225, 210, 233,
	248, 251, 288, 319, 326, 355, 359, 267, 245, 223,
	377, 220, 395, 416, 417, 418, 420, 323, 240, 358,
	421, 0, 306, 422, 423, 280, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 576, 0, 0,
	0, 244, 581, 0, 0, 0, 297, 241, 0, 0,
	356, 0, 193, 0, 397, 228, 307, 304, 428, 255,
	247, 243, 227, 281, 314, 354, 415, 348, 588, 301,
	0, 0, 406, 327, 0, 0, 0, 0, 0, 583,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 339, 407, 259, 0, 87, 0, 1215, 184,
	185, 186, 626, 633, 634, 635, 636, 637, 627, 629,
	0, 0, 217, 628, 224, 618, 620, 619, 597, 631,
	638, 639, 0, 239, 285, 246, 238, 425, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 559, 573, 0, 587, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 571, 0, 0, 0,
	0, 608, 0, 572, 0, 0, 580, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	328, 231, 0, 607, 0, 0, 459, 0, 0, 605,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 443, 213, 257, 376, 357, 381, 364, 260, 0,
	0, 382, 302, 430, 371, 440, 460, 461, 237, 332,
	450, 419, 456, 472, 206, 234, 346, 412, 446, 403,
	325, 426, 427, 292, 402, 266, 191, 300, 466, 204,
	391, 221, 211, 197, 414, 438, 218, 394, 0, 0,
	474, 199, 436, 411, 321, 289, 290, 198, 0, 375,
	242, 264, 232, 341, 433, 434, 230, 475, 208, 455,
	201, 0, 454, 334, 429, 437, 322, 312, 200, 435,
	320, 311, 295, 253, 275, 369, 305, 370, 276, 330,
	329, 331, 194, 447, 0, 195, 0, 408, 448, 476,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 345, 368, 366, 372, 0, 424, 441, 451,
	458, 464, 465, 467, 468, 469, 470, 471, 333, 278,
	404, 294, 303, 0, 0, 351, 384, 219, 445, 405,
	614, 606, 592, 594, 615, 616, 589, 590, 593, 617,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 609,
	579, 578, 0, 585, 586, 0, 595, 596, 598, 600,
	601, 602, 577, 187, 202, 299, 0, 373, 261, 473,
	453, 449, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 315, 316, 317, 318, 335, 336, 337,
	340, 343, 344, 347, 349, 350, 353, 360, 361, 362,
	363, 365, 367, 374, 378, 386, 387, 388, 389, 390,
	392, 393, 398, 399, 400, 401, 409, 413, 431, 432,
	444, 457, 462, 270, 439, 463, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 452, 410, 207, 380, 262,
	196, 225, 210, 233, 248, 251, 288, 319, 326, 355,
	359, 267, 245, 223, 377, 220, 395, 416, 417, 418,
	420, 323, 240, 358, 421, 0, 306, 422, 423, 280,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 576, 0, 0, 0, 244, 581, 0, 0, 0,
	297, 241, 0, 0, 356, 0, 193, 0, 397, 228,
	307, 304, 428, 255, 247, 243, 227, 281, 314, 354,
	415, 348, 588, 301, 0, 0, 406, 327, 0, 0,
	0, 0, 0, 583, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 339, 407, 259, 0,
	87, 0, 0, 184, 185, 186, 626, 633, 634, 635,
	636, 637, 627, 629, 0, 0, 217, 628, 224, 618,
	620, 619, 597, 631, 638, 639, 0, 239, 285, 246,
	238, 425, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 559, 573, 0,
	587, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	571, 720, 0, 0, 0, 608, 0, 572, 0, 0,
	580, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 328, 231, 0, 607, 0, 0,
	459, 0, 0, 605, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 338, 379, 385, 0, 0,
	0, 229, 0, 383, 352, 443, 213, 257, 376, 357,
	381, 364, 260, 0, 0, 382, 302, 430, 371, 440,
	460, 461, 237, 332, 450, 419, 456, 472, 206, 234,
	346, 412, 446, 403, 325, 426, 427, 292, 402, 266,
	191, 300, 466, 204, 391, 221, 211, 197, 414, 438,
	218, 394, 0, 0, 474, 199, 436, 411, 321, 289,
	290, 198, 0, 375, 242, 264, 232, 341, 433, 434,
	230, 475, 208, 455, 201, 0, 454, 334, 429, 437,
	322, 312, 200, 435, 320, 311, 295, 253, 275, 369,
	305, 370, 276, 330, 329, 331, 194, 447, 0, 195,
	0, 408, 448, 476, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 345, 368, 366, 372,
	0, 424, 441, 451, 458, 464, 465, 467, 468, 469,
	470, 471, 333, 278, 404, 294, 303, 0, 0, 351,
	384, 219, 445, 405, 614, 606, 592, 594, 615, 616,
	589, 590, 593, 617, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 609, 579, 578, 0, 585, 586, 0,
	595, 596, 598, 600, 601, 602, 577, 187, 202, 299,
	0, 373, 261, 473, 453, 449, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 398, 399, 400, 401,
	409, 413, 431, 432, 444, 457, 462, 270, 439, 463,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 452,
	410, 207, 380, 262, 196, 225, 210, 233, 248, 251,
	288, 319, 326, 355, 359, 267, 245, 223, 377, 220,
	395, 416, 417, 418, 420, 323, 240, 358, 421, 0,
	306, 422, 423, 280, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 576, 0, 0, 0, 244,
	581, 0, 0, 0, 297, 241, 0, 0, 356, 0,
	193, 0, 397, 228, 307, 304, 428, 255, 247, 243,
	227, 281, 314, 354, 415, 348, 588, 301, 0, 0,
	406, 327, 0, 0, 0, 0, 0, 583, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	339, 407, 259, 0, 87, 0, 0, 184, 185, 186,
	626, 633, 634, 635, 636, 637, 627, 629, 0, 0,
	217, 628, 224, 618, 620, 619, 597, 631, 638, 639,
	0, 239, 285, 246, 238, 425, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 559, 573, 0, 587, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 571, 0, 0, 0, 0, 608,
	0, 572, 0, 0, 580, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 328, 231,
	0, 607, 0, 0, 459, 0, 0, 605, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 443,
	213, 257, 376, 357, 381, 364, 260, 0, 0, 382,
	302, 430, 371, 440, 460, 461, 237, 332, 450, 419,
	456, 472, 206, 234, 346, 412, 446, 403, 325, 426,
	427, 292, 402, 266, 191, 300, 466, 204, 391, 221,
	211, 197, 414, 438, 218, 394, 0, 0, 474, 199,
	436, 411, 321, 289, 290, 198, 0, 375, 242, 264,
	232, 341, 433, 434, 230, 475, 208, 455, 201, 0,
	454, 334, 429, 437, 322, 312, 200, 435, 320, 311,
	295, 253, 275, 369, 305, 370, 276, 330, 329, 331,
	194, 447, 0, 195, 0, 408, 448, 476, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	345, 368, 366, 372, 0, 424, 441, 451, 458, 464,
	465, 467, 468, 469, 470, 471, 333, 278, 404, 294,
	303, 0, 0, 351, 384, 219, 445, 405, 614, 606,
	592, 594, 615, 616, 589, 590, 593, 617, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 609, 579, 578,
	0, 585, 586, 0, 595, 596, 598, 600, 601, 602,
	577, 187, 202, 299, 0, 373, 261, 473, 453, 449,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	398, 399, 400, 401, 409, 413, 431, 432, 444, 457,
	462, 270, 439, 463, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 452, 410, 207, 380, 262, 196, 225,
	210, 233, 248, 251, 288, 319, 326, 355, 359, 267,
	245, 223, 377, 220, 395, 416, 417, 418, 420, 323,
	240, 358, 421, 0, 306, 422, 423, 280, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 576,
	0, 0, 0, 244, 581, 0, 0, 0, 297, 241,
	0, 0, 356, 0, 193, 0, 397, 228, 307, 304,
	428, 255, 247, 243, 227, 281, 314, 354, 415, 348,
	588, 301, 0, 0, 406, 327, 0, 0, 0, 0,
	0, 583, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 339, 407, 259, 0, 87, 0,
	0, 184, 185, 186, 626, 633, 634, 635, 636, 637,
	627, 629, 0, 0, 217, 628, 224, 618, 620, 619,
	597, 631, 638, 639, 0, 239, 285, 246, 238, 425,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 573, 0, 587, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 571, 0,
	0, 0, 0, 608, 0, 572, 0, 0, 580, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 328, 231, 0, 607, 0, 0, 459, 0,
	0, 605, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 338, 379, 385, 0, 0, 0, 229,
	0, 383, 352, 443, 213, 257, 376, 357, 381, 364,
	260, 0, 0, 382, 302, 430, 371, 440, 460, 461,
	237, 332, 450, 419, 456, 472, 206, 234, 346, 412,
	446, 403, 325, 426, 427, 292, 402, 266, 191, 300,
	466, 204, 391, 221, 211, 197, 414, 438, 218, 394,
	0, 0, 474, 199, 436, 411, 321, 289, 290, 198,
	0, 375, 242, 264, 232, 341, 433, 434, 230, 475,
	208, 455, 201, 0, 454, 334, 429, 437, 322, 312,
	200, 435, 320, 311, 295, 253, 275, 369, 305, 370,
	276, 330, 329, 331, 194, 447, 0, 195, 0, 408,
	448, 476, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 345, 368, 366, 372, 0, 424,
	441, 451, 458, 464, 465, 467, 468, 469, 470, 471,
	333, 278, 404, 294, 303, 0, 0, 351, 384, 219,
	445, 405, 614, 606, 592, 594, 615, 616, 589, 590,
	593, 617, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 609, 579, 578, 0, 585, 586, 0, 595, 596,
	598, 600, 601, 602, 577, 187, 202, 299, 0, 373,
	261, 473, 453, 449, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 315, 316, 317, 318, 335,
	336, 337, 340, 343, 344, 347, 349, 350, 353, 360,
	361, 362, 363, 365, 367, 374, 378, 386, 387, 388,
	389, 390, 392, 393, 398, 399, 400, 401, 409, 413,
	431, 432, 444, 457, 462, 270, 439, 463, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 452, 410, 207,
	380, 262, 196, 225, 210, 233, 248, 251, 288, 319,
	326, 355, 359, 267, 245, 223, 377, 220, 395, 416,
	417, 418, 420, 323, 240, 358, 421, 0, 306, 422,
	423, 280, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 356, 0, 193, 0,
	397, 228, 307, 304, 428, 255, 247, 243, 227, 281,
	314, 354, 415, 348, 0, 301, 0, 0, 406, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 339, 407,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 425, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 933, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 328, 231, 0, 0,
	0, 932, 459, 0, 0, 0, 0, 0, 929, 930,
	296, 893, 293, 188, 205, 923, 927, 338, 379, 385,
	0, 0, 0, 229, 0, 383, 352, 443, 213, 257,
	376, 357, 381, 364, 260, 0, 0, 382, 302, 430,
	371, 440, 460, 461, 237, 332, 450, 419, 456, 472,
	206, 234, 346, 412, 446, 403, 325, 426, 427, 292,
	402, 266, 191, 300, 466, 204, 391, 221, 211, 197,
	414, 438, 218, 394, 0, 0, 474, 199, 436, 411,
	321, 289, 290, 198, 0, 375, 242, 264, 232, 341,
	433, 434, 230, 475, 208, 455, 201, 0, 454, 334,
	429, 437, 322, 312, 200, 435, 320, 311, 295, 253,
	275, 369, 305, 370, 276, 330, 329, 331, 194, 447,
	0, 195, 0, 408, 448, 476, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 345, 368,
	366, 372, 0, 424, 441, 451, 458, 464, 465, 467,
	468, 469, 470, 471, 333, 278, 404, 294, 303, 0,
	0, 351, 384, 219, 445, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 313, 396, 442, 0, 187,
	202, 299, 0, 373, 261, 473, 453, 449, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 315,
	316, 317, 318, 335, 336, 337, 340, 343, 344, 347,
	349, 350, 353, 360, 361, 362, 363, 365, 367, 374,
	378, 386, 387, 388, 389, 390, 392, 393, 398, 399,
	400, 401, 409, 413, 431, 432, 444, 457, 462, 270,
	439, 463, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 452, 410, 207, 380, 262, 196, 225, 210, 233,
	248, 251, 288, 319, 326, 355, 359, 267, 245, 223,
	377, 220, 395, 416, 417, 418, 420, 323, 240, 358,
	421, 0, 306, 422, 423, 280, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 1235, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	356, 0, 193, 0, 397, 228, 307, 304, 428, 255,
	247, 243, 227, 281, 314, 354, 415, 348, 0, 301,
	0, 0, 406, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 339, 407, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1237, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 425, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 1097,
	0, 1098, 1099, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	328, 231, 0, 0, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 443, 213, 257, 376, 357, 381, 364, 260, 0,
	0, 382, 302, 430, 371, 440, 460, 461, 237, 332,
	450, 419, 456, 472, 206, 234, 346, 412, 446, 403,
	325, 426, 427, 292, 402, 266, 191, 300, 466, 204,
	391, 221, 211, 197, 414, 438, 218, 394, 0, 0,
	474, 199, 436, 411, 321, 289, 290, 198, 0, 375,
	242, 264, 232, 341, 433, 434, 230, 475, 208, 455,
	201, 0, 454, 334, 429, 437, 322, 312, 200, 435,
	320, 311, 295, 253, 275, 369, 305, 370, 276, 330,
	329, 331, 194, 447, 0, 195, 0, 408, 448, 476,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 345, 368, 366, 372, 0, 424, 441, 451,
	458, 464, 465, 467, 468, 469, 470, 471, 333, 278,
	404, 294, 303, 0, 0, 351, 384, 219, 445, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 313,
	396, 442, 0, 187, 202, 299, 0, 373, 261, 473,
	453, 449, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 315, 316, 317, 318, 335, 336, 337,
	340, 343, 344, 347, 349, 350, 353, 360, 361, 362,
	363, 365, 367, 374, 378, 386, 387, 388, 389, 390,
	392, 393, 398, 399, 400, 401, 409, 413, 431, 432,
	444, 457, 462, 270, 439, 463, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 452, 410, 207, 380, 262,
	196, 225, 210, 233, 248, 251, 288, 319, 326, 355,
	359, 267, 245, 223, 377, 220, 395, 416, 417, 418,
	420, 323, 240, 358, 421, 0, 306, 422, 423, 280,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 356, 0, 193, 0, 397, 228,
	307, 304, 428, 255, 247, 243, 227, 281, 314, 354,
	415, 348, 0, 301, 0, 0, 406, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 339, 407, 259, 0,
	0, 0, 0, 184, 185, 186, 1177, 1180, 0, 0,
	0, 0, 1176, 1179, 0, 0, 217, 1175, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 425, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 328, 231, 0, 0, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 338, 379, 385, 0, 0,
	0, 229, 0, 383, 352, 443, 213, 257, 376, 357,
	381, 364, 260, 0, 0, 382, 302, 430, 371, 440,
	460, 461, 237, 332, 450, 419, 456, 472, 206, 234,
	346, 412, 446, 403, 325, 426, 427, 292, 402, 266,
	191, 300, 466, 204, 391, 221, 211, 197, 414, 438,
	218, 394, 0, 0, 474, 199, 436, 411, 321, 289,
	290, 198, 0, 375, 242, 264, 232, 341, 433, 434,
	230, 475, 208, 455, 201, 0, 454, 334, 429, 437,
	322, 312, 200, 435, 320, 311, 295, 253, 275, 369,
	305, 370, 276, 330, 329, 331, 194, 447, 0, 195,
	0, 408, 448, 476, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 345, 368, 366, 372,
	0, 424, 441, 451, 458, 464, 465, 467, 468, 469,
	470, 471, 333, 278, 404, 294, 303, 0, 0, 351,
	384, 219, 445, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 313, 396, 442, 0, 187, 202, 299,
	0, 373, 261, 473, 453, 449, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 398, 399, 400, 401,
	409, 413, 431, 432, 444, 457, 462, 270, 439, 463,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 452,
	410, 207, 380, 262, 196, 225, 210, 233, 248, 251,
	288, 319, 326, 355, 359, 267, 245, 223, 377, 220,
	395, 416, 417, 418, 420, 323, 240, 358, 78, 421,
	306, 422, 423, 280, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 356,
	0, 193, 0, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 0, 301, 0,
	0, 406, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 339, 407, 259, 0, 87, 0, 1215, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 425, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 328,
	231, 0, 0, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	338, 379, 385, 0, 0, 0, 229, 0, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 0, 0,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	0, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 0, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 0, 0, 351, 384, 219, 445, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 313, 396,
	442, 0, 187, 202, 299, 86, 373, 261, 473, 453,
	449, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 78, 421, 306, 422, 423, 280, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 356, 0, 193, 0, 397, 228,
	307, 304, 428, 255, 247, 243, 227, 281, 314, 354,
	415, 348, 0, 301, 0, 0, 406, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 339, 407, 259, 0,
	87, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 425, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 328, 231, 0, 0, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 338, 379, 385, 0, 0,
	0, 229, 0, 383, 352, 443, 213, 257, 376, 357,
	381, 364, 260, 0, 0, 382, 302, 430, 371, 440,
	460, 461, 237, 332, 450, 419, 456, 472, 206, 234,
	346, 412, 446, 403, 325, 426, 427, 292, 402, 266,
	191, 300, 466, 204, 391, 221, 211, 197, 414, 438,
	218, 394, 0, 0, 474, 199, 436, 411, 321, 289,
	290, 198, 0, 375, 242, 264, 232, 341, 433, 434,
	230, 475, 208, 455, 201, 0, 454, 334, 429, 437,
	322, 312, 200, 435, 320, 311, 295, 253, 275, 369,
	305, 370, 276, 330, 329, 331, 194, 447, 0, 195,
	0, 408, 448, 476, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 345, 368, 366, 372,
	0, 424, 441, 451, 458, 464, 465, 467, 468, 469,
	470, 471, 333, 278, 404, 294, 303, 0, 0, 351,
	384, 219, 445, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 313, 396, 442, 0, 187, 202, 299,
	86, 373, 261, 473, 453, 449, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 398, 399, 400, 401,
	409, 413, 431, 432, 444, 457, 462, 270, 439, 463,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 452,
	410, 207, 380, 262, 196, 225, 210, 233, 248, 251,
	288, 319, 326, 355, 359, 267, 245, 223, 377, 220,
	395, 416, 417, 418, 420, 323, 240, 358, 421, 0,
	306, 422, 423, 280, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 1622, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 356, 0,
	193, 0, 397, 228, 307, 304, 428, 255, 247, 243,
	227, 281, 314, 354, 415, 348, 0, 301, 0, 0,
	406, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	339, 407, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 425, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 328, 231,
	0, 0, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 443,
	213, 257, 376, 357, 381, 364, 260, 0, 1620, 382,
	302, 430, 371, 440, 460, 461, 237, 332, 450, 419,
	456, 472, 206, 234, 346, 412, 446, 403, 325, 426,
	427, 292, 402, 266, 191, 300, 466, 204, 391, 221,
	211, 197, 414, 438, 218, 394, 0, 0, 474, 199,
	436, 411, 321, 289, 290, 198, 0, 375, 242, 264,
	232, 341, 433, 434, 230, 475, 208, 455, 201, 0,
	454, 334, 429, 437, 322, 312, 200, 435, 320, 311,
	295, 253, 275, 369, 305, 370, 276, 330, 329, 331,
	194, 447, 0, 195, 0, 408, 448, 476, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	345, 368, 366, 372, 0, 424, 441, 451, 458, 464,
	465, 467, 468, 469, 470, 471, 333, 278, 404, 294,
	303, 0, 0, 351, 384, 219, 445, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 313, 396, 442,
	0, 187, 202, 299, 0, 373, 261, 473, 453, 449,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	398, 399, 400, 401, 409, 413, 431, 432, 444, 457,
	462, 270, 439, 463, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 452, 410, 207, 380, 262, 196, 225,
	210, 233, 248, 251, 288, 319, 326, 355, 359, 267,
	245, 223, 377, 220, 395, 416, 417, 418, 420, 323,
	240, 358, 421, 0, 306, 422, 423, 280, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 356, 0, 193, 0, 397, 228, 307, 304,
	428, 255, 247, 243, 227, 281, 314, 354, 415, 348,
	0, 301, 0, 0, 406, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 339, 407, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 425,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 887, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 328, 231, 0, 0, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 296, 893, 293, 188,
	205, 891, 0, 338, 379, 385, 0, 0, 0, 229,
	0, 383, 352, 443, 213, 257, 376, 357, 381, 364,
	260, 0, 0, 382, 302, 430, 371, 440, 460, 461,
	237, 332, 450, 419, 456, 472, 206, 234, 346, 412,
	446, 403, 325, 426, 427, 292, 402, 266, 191, 300,
	466, 204, 391, 221, 211, 197, 414, 438, 218, 394,
	0, 0, 474, 199, 436, 411, 321, 289, 290, 198,
	0, 375, 242, 264, 232, 341, 433, 434, 230, 475,
	208, 455, 201, 0, 454, 334, 429, 437, 322, 312,
	200, 435, 320, 311, 295, 253, 275, 369, 305, 370,
	276, 330, 329, 331, 194, 447, 0, 195, 0, 408,
	448, 476, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 345, 368, 366, 372, 0, 424,
	441, 451, 458, 464, 465, 467, 468, 469, 470, 471,
	333, 278, 404, 294, 303, 0, 0, 351, 384, 219,
	445, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 313, 396, 442, 0, 187, 202, 299, 0, 373,
	261, 473, 453, 449, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 315, 316, 317, 318, 335,
	336, 337, 340, 343, 344, 347, 349, 350, 353, 360,
	361, 362, 363, 365, 367, 374, 378, 386, 387, 388,
	389, 390, 392, 393, 398, 399, 400, 401, 409, 413,
	431, 432, 444, 457, 462, 270, 439, 463, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 452, 410, 207,
	380, 262, 196, 225, 210, 233, 248, 251, 288, 319,
	326, 355, 359, 267, 245, 223, 377, 220, 395, 416,
	417, 418, 420, 323, 240, 358, 421, 0, 306, 422,
	423, 280, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 356, 0, 193, 0,
	397, 228, 307, 304, 428, 255, 247, 243, 227, 281,
	314, 354, 415, 348, 0, 301, 0, 0, 406, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 339, 407,
	259, 0, 0, 0, 1215, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 425, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 328, 231, 0, 0,
	0, 0, 459, 0, 0, 0, 2480, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 338, 379, 385,
	0, 0, 0, 229, 0, 383, 352, 443, 213, 257,
	376, 357, 381, 364, 260, 0, 0, 382, 302, 430,
	371, 440, 460, 461, 237, 332, 450, 419, 456, 472,
	206, 234, 346, 412, 446, 403, 325, 426, 427, 292,
	402, 266, 191, 300, 466, 204, 391, 221, 211, 197,
	414, 438, 218, 394, 0, 0, 474, 199, 436, 411,
	321, 289, 290, 198, 0, 375, 242, 264, 232, 341,
	433, 434, 230, 475, 208, 455, 201, 0, 454, 334,
	429, 437, 322, 312, 200, 435, 320, 311, 295, 253,
	275, 369, 305, 370, 276, 330, 329, 331, 194, 447,
	0, 195, 0, 408, 448, 476, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 345, 368,
	366, 372, 0, 424, 441, 451, 458, 464, 465, 467,
	468, 469, 470, 471, 333, 278, 404, 294, 303, 0,
	0, 351, 384, 219, 445, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 313, 396, 442, 0, 187,
	202, 299, 0, 373, 261, 473, 453, 449, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 315,
	316, 317, 318, 335, 336, 337, 340, 343, 344, 347,
	349, 350, 353, 360, 361, 362, 363, 365, 367, 374,
	378, 386, 387, 388, 389, 390, 392, 393, 398, 399,
	400, 401, 409, 413, 431, 432, 444, 457, 462, 270,
	439, 463, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 452, 410, 207, 380, 262, 196, 225, 210, 233,
	248, 251, 288, 319, 326, 355, 359, 267, 245, 223,
	377, 220, 395, 416, 417, 418, 420, 323, 240, 358,
	421, 0, 306, 422, 423, 280, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 1622, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	356, 0, 193, 0, 397, 228, 307, 304, 428, 255,
	247, 243, 227, 281, 314, 354, 415, 348, 0, 301,
	0, 0, 406, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 339, 407, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 425, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	328, 231, 0, 0, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 443, 213, 257, 376, 357, 381, 364, 260, 0,
	0, 382, 302, 430, 371, 440, 460, 461, 237, 332,
	450, 419, 456, 472, 206, 234, 346, 412, 446, 403,
	325, 426, 427, 292, 402, 266, 191, 300, 466, 204,
	391, 221, 211, 197, 414, 438, 218, 394, 0, 0,
	474, 199, 436, 411, 321, 289, 290, 198, 0, 375,
	242, 264, 232, 341, 433, 434, 230, 475, 208, 455,
	201, 0, 454, 334, 429, 437, 322, 312, 200, 435,
	320, 311, 295, 253, 275, 369, 305, 370, 276, 330,
	329, 331, 194, 447, 0, 195, 0, 408, 448, 476,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 345, 368, 366, 372, 0, 424, 441, 451,
	458, 464, 465, 467, 468, 469, 470, 471, 333, 278,
	404, 294, 303, 0, 0, 351, 384, 219, 445, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 313,
	396, 442, 0, 187, 202, 299, 0, 373, 261, 473,
	453, 449, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 315, 316, 317, 318, 335, 336, 337,
	340, 343, 344, 347, 349, 350, 353, 360, 361, 362,
	363, 365, 367, 374, 378, 386, 387, 388, 389, 390,
	392, 393, 398, 399, 400, 401, 409, 413, 431, 432,
	444, 457, 462, 270, 439, 463, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 452, 410, 207, 380, 262,
	196, 225, 210, 233, 248, 251, 288, 319, 326, 355,
	359, 267, 245, 223, 377, 220, 395, 416, 417, 418,
	420, 323, 240, 358, 421, 0, 306, 422, 423, 280,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 356, 0, 193, 0, 397, 228,
	307, 304, 428, 255, 247, 243, 227, 281, 314, 354,
	415, 348, 0, 301, 0, 0, 406, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 339, 407, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1911, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 425, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1912, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 328, 231, 0, 0, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 338, 379, 385, 0, 0,
	0, 229, 0, 383, 352, 443, 213, 257, 376, 357,
	381, 364, 260, 0, 0, 382, 302, 430, 371, 440,
	460, 461, 237, 332, 450, 419, 456, 472, 206, 234,
	346, 412, 446, 403, 325, 426, 427, 292, 402, 266,
	191, 300, 466, 204, 391, 221, 211, 197, 414, 438,
	218, 394, 0, 0, 474, 199, 436, 411, 321, 289,
	290, 198, 0, 375, 242, 264, 232, 341, 433, 434,
	230, 475, 208, 455, 201, 0, 454, 334, 429, 437,
	322, 312, 200, 435, 320, 311, 295, 253, 275, 369,
	305, 370, 276, 330, 329, 331, 194, 447, 0, 195,
	0, 408, 448, 476, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 345, 368, 366, 372,
	0, 424, 441, 451, 458, 464, 465, 467, 468, 469,
	470, 471, 333, 278, 404, 294, 303, 0, 0, 351,
	384, 219, 445, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 313, 396, 442, 0, 187, 202, 299,
	0, 373, 261, 473, 453, 449, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 398, 399, 400, 401,
	409, 413, 431, 432, 444, 457, 462, 270, 439, 463,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 452,
	410, 207, 380, 262, 196, 225, 210, 233, 248, 251,
	288, 319, 326, 355, 359, 267, 245, 223, 377, 220,
	395, 416, 417, 418, 420, 323, 240, 358, 421, 0,
	306, 422, 423, 280, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 356, 0,
	193, 0, 397, 228, 307, 304, 428, 255, 247, 243,
	227, 281, 314, 354, 415, 348, 0, 301, 0, 0,
	406, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	339, 407, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 1896, 0, 0, 0, 1897, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 425, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 328, 231,
	0, 0, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 443,
	213, 257, 376, 357, 381, 364, 260, 0, 0, 382,
	302, 430, 371, 440, 460, 461, 237, 332, 450, 419,
	456, 472, 206, 234, 346, 412, 446, 403, 325, 426,
	427, 292, 402, 266, 191, 300, 466, 204, 391, 221,
	211, 197, 414, 438, 218, 394, 0, 0, 474, 199,
	436, 411, 321, 289, 290, 198, 0, 375, 242, 264,
	232, 341, 433, 434, 230, 475, 208, 455, 201, 0,
	454, 334, 429, 437, 322, 312, 200, 435, 320, 311,
	295, 253, 275, 369, 305, 370, 276, 330, 329, 331,
	194, 447, 0, 195, 0, 408, 448, 476, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	345, 368, 366, 372, 0, 424, 441, 451, 458, 464,
	465, 467, 468, 469, 470, 471, 333, 278, 404, 294,
	303, 0, 0, 351, 384, 219, 445, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 313, 396, 442,
	0, 187, 202, 299, 0, 373, 261, 473, 453, 449,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	398, 399, 400, 401, 409, 413, 431, 432, 444, 457,
	462, 270, 439, 463, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 452, 410, 207, 380, 262, 196, 225,
	210, 233, 248, 251, 288, 319, 326, 355, 359, 267,
	245, 223, 377, 220, 395, 416, 417, 418, 420, 323,
	240, 358, 421, 0, 306, 422, 423, 280, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 1258, 0, 0, 0, 297, 241,
	0, 0, 356, 0, 193, 0, 397, 228, 307, 304,
	428, 255, 247, 243, 227, 281, 314, 354, 415, 348,
	0, 301, 0, 0, 406, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 339, 407, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1257, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 425,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 328, 231, 0, 0, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 338, 379, 385, 0, 0, 0, 229,
	0, 383, 352, 443, 213, 257, 376, 357, 381, 364,
	260, 0, 0, 382, 302, 430, 371, 440, 460, 461,
	237, 332, 450, 419, 456, 472, 206, 234, 346, 412,
	446, 403, 325, 426, 427, 292, 402, 266, 191, 300,
	466, 204, 391, 221, 211, 197, 414, 438, 218, 394,
	0, 0, 474, 199, 436, 411, 321, 289, 290, 198,
	0, 375, 242, 264, 232, 341, 433, 434, 230, 475,
	208, 455, 201, 0, 454, 334, 429, 437, 322, 312,
	200, 435, 320, 311, 295, 253, 275, 369, 305, 370,
	276, 330, 329, 331, 194, 447, 0, 195, 0, 408,
	448, 476, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 345, 368, 366, 372, 0, 424,
	441, 451, 458, 464, 465, 467, 468, 469, 470, 471,
	333, 278, 404, 294, 303, 0, 0, 351, 384, 219,
	445, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 313, 396, 442, 0, 187, 202, 299, 0, 373,
	261, 473, 453, 449, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 315, 316, 317, 318, 335,
	336, 337, 340, 343, 344, 347, 349, 350, 353, 360,
	361, 362, 363, 365, 367, 374, 378, 386, 387, 388,
	389, 390, 392, 393, 398, 399, 400, 401, 409, 413,
	431, 432, 444, 457, 462, 270, 439, 463, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 452, 410, 207,
	380, 262, 196, 225, 210, 233, 248, 251, 288, 319,
	326, 355, 359, 267, 245, 223, 377, 220, 395, 416,
	417, 418, 420, 323, 240, 358, 421, 0, 306, 422,
	423, 280, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 356, 0, 193, 0,
	397, 228, 307, 304, 428, 255, 247, 243, 227, 281,
	314, 354, 415, 348, 0, 301, 0, 0, 406, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 339, 407,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 425, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 328, 231, 0, 0,
	0, 0, 459, 0, 0, 0, 2548, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 338, 379, 385,
	0, 0, 0, 229, 0, 383, 352, 443, 213, 257,
	376, 357, 381, 364, 260, 0, 0, 382, 302, 430,
	371, 440, 460, 461, 237, 332, 450, 419, 456, 472,
	206, 234, 346, 412, 446, 403, 325, 426, 427, 292,
	402, 266, 191, 300, 466, 204, 391, 221, 211, 197,
	414, 438, 218, 394, 0, 0, 474, 199, 436, 411,
	321, 289, 290, 198, 0, 375, 242, 264, 232, 341,
	433, 434, 230, 475, 208, 455, 201, 0, 454, 334,
	429, 437, 322, 312, 200, 435, 320, 311, 295, 253,
	275, 369, 305, 370, 276, 330, 329, 331, 194, 447,
	0, 195, 0, 408, 448, 476, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 345, 368,
	366, 372, 0, 424, 441, 451, 458, 464, 465, 467,
	468, 469, 470, 471, 333, 278, 404, 294, 303, 0,
	0, 351, 384, 219, 445, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 313, 396, 442, 0, 187,
	202, 299, 0, 373, 261, 473, 453, 449, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 315,
	316, 317, 318, 335, 336, 337, 340, 343, 344, 347,
	349, 350, 353, 360, 361, 362, 363, 365, 367, 374,
	378, 386, 387, 388, 389, 390, 392, 393, 398, 399,
	400, 401, 409, 413, 431, 432, 444, 457, 462, 270,
	439, 463, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 452, 410, 207, 380, 262, 196, 225, 210, 233,
	248, 251, 288, 319, 326, 355, 359, 267, 245, 223,
	377, 220, 395, 416, 417, 418, 420, 323, 240, 358,
	421, 0, 306, 422, 423, 280, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	356, 0, 193, 0, 397, 228, 307, 304, 428, 255,
	247, 243, 227, 281, 314, 354, 415, 348, 0, 301,
	0, 0, 406, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 339, 407, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 425, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	328, 231, 0, 0, 0, 0, 459, 0, 0, 0,
	2480, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 443, 213, 257, 376, 357, 381, 364, 260, 0,
	0, 382, 302, 430, 371, 440, 460, 461, 237, 332,
	450, 419, 456, 472, 206, 234, 346, 412, 446, 403,
	325, 426, 427, 292, 402, 266, 191, 300, 466, 204,
	391, 221, 211, 197, 414, 438, 218, 394, 0, 0,
	474, 199, 436, 411, 321, 289, 290, 198, 0, 375,
	242, 264, 232, 341, 433, 434, 230, 475, 208, 455,
	201, 0, 454, 334, 429, 437, 322, 312, 200, 435,
	320, 311, 295, 253, 275, 369, 305, 370, 276, 330,
	329, 331, 194, 447, 0, 195, 0, 408, 448, 476,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 345, 368, 366, 372, 0, 424, 441, 451,
	458, 464, 465, 467, 468, 469, 470, 471, 333, 278,
	404, 294, 303, 0, 0, 351, 384, 219, 445, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 313,
	396, 442, 0, 187, 202, 299, 0, 373, 261, 473,
	453, 449, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 315, 316, 317, 318, 335, 336, 337,
	340, 343, 344, 347, 349, 350, 353, 360, 361, 362,
	363, 365, 367, 374, 378, 386, 387, 388, 389, 390,
	392, 393, 398, 399, 400, 401, 409, 413, 431, 432,
	444, 457, 462, 270, 439, 463, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 452, 410, 207, 380, 262,
	196, 225, 210, 233, 248, 251, 288, 319, 326, 355,
	359, 267, 245, 223, 377, 220, 395, 416, 417, 418,
	420, 323, 240, 358, 421, 0, 306, 422, 423, 280,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 356, 0, 193, 0, 397, 228,
	307, 304, 428, 255, 247, 243, 227, 281, 314, 354,
	415, 348, 0, 301, 0, 0, 406, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 339, 407, 259, 0,
	87, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 425, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 328, 231, 0, 0, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 338, 379, 385, 0, 0,
	0, 229, 0, 383, 352, 443, 213, 257, 376, 357,
	381, 364, 260, 0, 0, 382, 302, 430, 371, 440,
	460, 461, 237, 332, 450, 419, 456, 472, 206, 234,
	346, 412, 446, 403, 325, 426, 427, 292, 402, 266,
	191, 300, 466, 204, 391, 221, 211, 197, 414, 438,
	218, 394, 0, 0, 474, 199, 436, 411, 321, 289,
	290, 198, 0, 375, 242, 264, 232, 341, 433, 434,
	230, 475, 208, 455, 201, 0, 454, 334, 429, 437,
	322, 312, 200, 435, 320, 311, 295, 253, 275, 369,
	305, 370, 276, 330, 329, 331, 194, 447, 0, 195,
	0, 408, 448, 476, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 345, 368, 366, 372,
	0, 424, 441, 451, 458, 464, 465, 467, 468, 469,
	470, 471, 333, 278, 404, 294, 303, 0, 0, 351,
	384, 219, 445, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 313, 396, 442, 0, 187, 202, 299,
	0, 373, 261, 473, 453, 449, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 398, 399, 400, 401,
	409, 413, 431, 432, 444, 457, 462, 270, 439, 463,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 452,
	410, 207, 380, 262, 196, 225, 210, 233, 248, 251,
	288, 319, 326, 355, 359, 267, 245, 223, 377, 220,
	395, 416, 417, 418, 420, 323, 240, 358, 421, 0,
	306, 422, 423, 280, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 356, 0,
	193, 0, 397, 228, 307, 304, 428, 255, 247, 243,
	227, 281, 314, 354, 415, 348, 0, 301, 0, 0,
	406, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	339, 407, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 425, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 328, 231,
	0, 0, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 443,
	213, 257, 376, 357, 381, 364, 260, 0, 0, 382,
	302, 430, 371, 440, 460, 461, 237, 332, 450, 419,
	456, 472, 206, 234, 346, 412, 446, 403, 325, 426,
	427, 292, 402, 266, 191, 300, 466, 204, 391, 221,
	211, 197, 414, 438, 218, 394, 0, 0, 474, 199,
	436, 411, 321, 289, 290, 198, 0, 375, 242, 264,
	232, 341, 433, 434, 230, 475, 208, 455, 201, 0,
	454, 334, 429, 437, 322, 312, 200, 435, 320, 311,
	295, 253, 275, 369, 305, 370, 276, 330, 329, 331,
	194, 447, 0, 195, 0, 408, 448, 476, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	345, 368, 366, 372, 0, 424, 441, 451, 458, 464,
	465, 467, 468, 469, 470, 471, 333, 278, 404, 294,
	303, 0, 0, 351, 384, 219, 445, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 313, 396, 442,
	0, 187, 202, 299, 0, 373, 261, 473, 453, 449,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	398, 399, 400, 401, 409, 413, 431, 432, 444, 457,
	462, 270, 439, 463, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 452, 410, 207, 380, 262, 196, 225,
	210, 233, 248, 251, 288, 319, 326, 355, 359, 267,
	245, 223, 377, 220, 395, 416, 417, 418, 420, 323,
	240, 358, 0, 421, 306, 422, 423, 280, 1669, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 356, 0, 193, 0, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 0, 301, 0, 0, 406, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 339, 407, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	425, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 328, 231, 0, 0, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 338, 379, 385, 0, 0, 0,
	229, 0, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 0, 0, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 0, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 0,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 0, 0, 351, 384,
	219, 445, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 313, 396, 442, 0, 187, 202, 299, 0,
	373, 261, 473, 453, 449, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 421, 0, 306,
	422, 423, 280, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 356, 0, 193,
	0, 397, 228, 307, 304, 428, 255, 247, 243, 227,
	281, 314, 354, 415, 348, 0, 301, 0, 0, 406,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 339,
	407, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1237, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 425, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 328, 231, 0,
	0, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 338, 379,
	385, 0, 0, 0, 229, 0, 383, 352, 443, 213,
	257, 376, 357, 381, 364, 260, 0, 0, 382, 302,
	430, 371, 440, 460, 461, 237, 332, 450, 419, 456,
	472, 206, 234, 346, 412, 446, 403, 325, 426, 427,
	292, 402, 266, 191, 300, 466, 204, 391, 221, 211,
	197, 414, 438, 218, 394, 0, 0, 474, 199, 436,
	411, 321, 289, 290, 198, 0, 375, 242, 264, 232,
	341, 433, 434, 230, 475, 208, 455, 201, 0, 454,
	334, 429, 437, 322, 312, 200, 435, 320, 311, 295,
	253, 275, 369, 305, 370, 276, 330, 329, 331, 194,
	447, 0, 195, 0, 408, 448, 476, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 345,
	368, 366, 372, 0, 424, 441, 451, 458, 464, 465,
	467, 468, 469, 470, 471, 333, 278, 404, 294, 303,
	0, 0, 351, 384, 219, 445, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 313, 396, 442, 0,
	187, 202, 299, 0, 373, 261, 473, 453, 449, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 398,
	399, 400, 401, 409, 413, 431, 432, 444, 457, 462,
	270, 439, 463, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 452, 410, 207, 380, 262, 196, 225, 210,
	233, 248, 251, 288, 319, 326, 355, 359, 267, 245,
	223, 377, 220, 395, 416, 417, 418, 420, 323, 240,
	358, 421, 0, 306, 422, 423, 280, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 356, 0, 193, 0, 397, 228, 307, 304, 428,
	255, 247, 243, 227, 281, 314, 354, 415, 348, 0,
	301, 0, 0, 406, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 339, 407, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 425, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 328, 231, 0, 0, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 443, 213, 257, 376, 357, 381, 364, 260,
	0, 0, 382, 302, 430, 371, 440, 460, 461, 237,
	332, 450, 419, 456, 472, 206, 234, 346, 412, 446,
	403, 325, 426, 427, 292, 402, 266, 191, 300, 466,
	204, 391, 221, 211, 197, 414, 438, 218, 394, 0,
	0, 474, 199, 436, 411, 321, 289, 290, 198, 0,
	375, 242, 264, 232, 341, 433, 434, 230, 475, 208,
	455, 201, 0, 454, 334, 429, 437, 322, 312, 200,
	435, 320, 311, 295, 253, 275, 369, 305, 370, 276,
	330, 329, 331, 194, 447, 0, 195, 0, 408, 448,
	476, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 345, 368, 366, 372, 0, 424, 441,
	451, 458, 464, 465, 467, 468, 469, 470, 471, 333,
	278, 404, 294, 303, 0, 0, 351, 384, 219, 445,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	313, 396, 442, 0, 187, 202, 299, 0, 373, 261,
	473, 453, 449, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 315, 316, 317, 318, 335, 336,
	337, 340, 343, 344, 347, 349, 350, 353, 360, 361,
	362, 363, 365, 367, 374, 378, 386, 387, 388, 389,
	390, 392, 393, 398, 399, 400, 401, 409, 413, 431,
	432, 444, 457, 462, 270, 439, 463, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 452, 410, 207, 380,
	262, 196, 225, 210, 233, 248, 251, 288, 319, 326,
	355, 359, 267, 245, 223, 377, 220, 395, 416, 417,
	418, 420, 323, 240, 358, 421, 0, 306, 422, 423,
	280, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 356, 0, 193, 0, 397,
	228, 307, 304, 428, 255, 247, 243, 227, 281, 314,
	354, 415, 348, 0, 301, 0, 0, 406, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 339, 407, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 425, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 328, 231, 0, 0, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 338, 379, 385, 0,
	0, 0, 229, 0, 383, 352, 443, 213, 257, 376,
	357, 381, 364, 260, 0, 0, 382, 302, 430, 371,
	440, 460, 461, 237, 332, 450, 419, 456, 472, 206,
	234, 346, 412, 446, 403, 325, 426, 427, 292, 402,
	266, 191, 300, 466, 204, 391, 221, 211, 197, 414,
	438, 218, 394, 0, 0, 474, 199, 436, 411, 321,
	289, 290, 198, 0, 375, 242, 264, 232, 341, 433,
	434, 230, 475, 208, 455, 201, 0, 454, 334, 429,
	437, 322, 312, 200, 435, 320, 311, 295, 253, 275,
	369, 305, 370, 276, 330, 329, 331, 194, 447, 0,
	195, 0, 408, 448, 476, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 345, 368, 366,
	372, 0, 424, 441, 451, 458, 464, 465, 467, 468,
	469, 470, 471, 333, 278, 404, 294, 303, 0, 0,
	351, 384, 219, 445, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 313, 396, 442, 0, 187, 202,
	299, 1499, 373, 261, 473, 453, 449, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 398, 399, 400,
	401, 409, 413, 431, 432, 444, 457, 462, 270, 439,
	463, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	452, 410, 207, 380, 262, 196, 225, 210, 233, 248,
	251, 288, 319, 326, 355, 359, 267, 245, 223, 377,
	220, 395, 416, 417, 418, 420, 323, 240, 358, 421,
	0, 306, 422, 423, 280, 0, 0, 0, 0, 0,
	0, 342, 0, 1379, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 356,
	0, 193, 0, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 0, 301, 0,
	0, 406, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 339, 407, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 425, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 328,
	231, 0, 0, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	338, 379, 385, 0, 0, 0, 229, 0, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 0, 0,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	0, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 0, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 0, 0, 351, 384, 219, 445, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 313, 396,
	442, 0, 187, 202, 299, 0, 373, 261, 473, 453,
	449, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 421, 0, 306, 422, 423, 280, 0,
	0, 0, 0, 0, 0, 342, 0, 1377, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 356, 0, 193, 0, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 0, 301, 0, 0, 406, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 339, 407, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	425, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 328, 231, 0, 0, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 338, 379, 385, 0, 0, 0,
	229, 0, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 0, 0, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 0, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 0,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 0, 0, 351, 384,
	219, 445, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 313, 396, 442, 0, 187, 202, 299, 0,
	373, 261, 473, 453, 449, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 421, 0, 306,
	422, 423, 280, 0, 0, 0, 0, 0, 0, 342,
	0, 1375, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 356, 0, 193,
	0, 397, 228, 307, 304, 428, 255, 247, 243, 227,
	281, 314, 354, 415, 348, 0, 301, 0, 0, 406,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 339,
	407, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 425, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 328, 231, 0,
	0, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 338, 379,
	385, 0, 0, 0, 229, 0, 383, 352, 443, 213,
	257, 376, 357, 381, 364, 260, 0, 0, 382, 302,
	430, 371, 440, 460, 461, 237, 332, 450, 419, 456,
	472, 206, 234, 346, 412, 446, 403, 325, 426, 427,
	292, 402, 266, 191, 300, 466, 204, 391, 221, 211,
	197, 414, 438, 218, 394, 0, 0, 474, 199, 436,
	411, 321, 289, 290, 198, 0, 375, 242, 264, 232,
	341, 433, 434, 230, 475, 208, 455, 201, 0, 454,
	334, 429, 437, 322, 312, 200, 435, 320, 311, 295,
	253, 275, 369, 305, 370, 276, 330, 329, 331, 194,
	447, 0, 195, 0, 408, 448, 476, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 345,
	368, 366, 372, 0, 424, 441, 451, 458, 464, 465,
	467, 468, 469, 470, 471, 333, 278, 404, 294, 303,
	0, 0, 351, 384, 219, 445, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 313, 396, 442, 0,
	187, 202, 299, 0, 373, 261, 473, 453, 449, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 398,
	399, 400, 401, 409, 413, 431, 432, 444, 457, 462,
	270, 439, 463, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 452, 410, 207, 380, 262, 196, 225, 210,
	233, 248, 251, 288, 319, 326, 355, 359, 267, 245,
	223, 377, 220, 395, 416, 417, 418, 420, 323, 240,
	358, 421, 0, 306, 422, 423, 280, 0, 0, 0,
	0, 0, 0, 342, 0, 1373, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 356, 0, 193, 0, 397, 228, 307, 304, 428,
	255, 247, 243, 227, 281, 314, 354, 415, 348, 0,
	301, 0, 0, 406, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 339, 407, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 425, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 328, 231, 0, 0, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 443, 213, 257, 376, 357, 381, 364, 260,
	0, 0, 382, 302, 430, 371, 440, 460, 461, 237,
	332, 450, 419, 456, 472, 206, 234, 346, 412, 446,
	403, 325, 426, 427, 292, 402, 266, 191, 300, 466,
	204, 391, 221, 211, 197, 414, 438, 218, 394, 0,
	0, 474, 199, 436, 411, 321, 289, 290, 198, 0,
	375, 242, 264, 232, 341, 433, 434, 230, 475, 208,
	455, 201, 0, 454, 334, 429, 437, 322, 312, 200,
	435, 320, 311, 295, 253, 275, 369, 305, 370, 276,
	330, 329, 331, 194, 447, 0, 195, 0, 408, 448,
	476, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 345, 368, 366, 372, 0, 424, 441,
	451, 458, 464, 465, 467, 468, 469, 470, 471, 333,
	278, 404, 294, 303, 0, 0, 351, 384, 219, 445,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	313, 396, 442, 0, 187, 202, 299, 0, 373, 261,
	473, 453, 449, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 315, 316, 317, 318, 335, 336,
	337, 340, 343, 344, 347, 349, 350, 353, 360, 361,
	362, 363, 365, 367, 374, 378, 386, 387, 388, 389,
	390, 392, 393, 398, 399, 400, 401, 409, 413, 431,
	432, 444, 457, 462, 270, 439, 463, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 452, 410, 207, 380,
	262, 196, 225, 210, 233, 248, 251, 288, 319, 326,
	355, 359, 267, 245, 223, 377, 220, 395, 416, 417,
	418, 420, 323, 240, 358, 421, 0, 306, 422, 423,
	280, 0, 0, 0, 0, 0, 0, 342, 0, 1371,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 356, 0, 193, 0, 397,
	228, 307, 304, 428, 255, 247, 243, 227, 281, 314,
	354, 415, 348, 0, 301, 0, 0, 406, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 339, 407, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 425, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 328, 231, 0, 0, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 338, 379, 385, 0,
	0, 0, 229, 0, 383, 352, 443, 213, 257, 376,
	357, 381, 364, 260, 0, 0, 382, 302, 430, 371,
	440, 460, 461, 237, 332, 450, 419, 456, 472, 206,
	234, 346, 412, 446, 403, 325, 426, 427, 292, 402,
	266, 191, 300, 466, 204, 391, 221, 211, 197, 414,
	438, 218, 394, 0, 0, 474, 199, 436, 411, 321,
	289, 290, 198, 0, 375, 242, 264, 232, 341, 433,
	434, 230, 475, 208, 455, 201, 0, 454, 334, 429,
	437, 322, 312, 200, 435, 320, 311, 295, 253, 275,
	369, 305, 370, 276, 330, 329, 331, 194, 447, 0,
	195, 0, 408, 448, 476, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 345, 368, 366,
	372, 0, 424, 441, 451, 458, 464, 465, 467, 468,
	469, 470, 471, 333, 278, 404, 294, 303, 0, 0,
	351, 384, 219, 445, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 313, 396, 442, 0, 187, 202,
	299, 0, 373, 261, 473, 453, 449, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 398, 399, 400,
	401, 409, 413, 431, 432, 444, 457, 462, 270, 439,
	463, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	452, 410, 207, 380, 262, 196, 225, 210, 233, 248,
	251, 288, 319, 326, 355, 359, 267, 245, 223, 377,
	220, 395, 416, 417, 418, 420, 323, 240, 358, 421,
	0, 306, 422, 423, 280, 0, 0, 0, 0, 0,
	0, 342, 0, 1367, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 356,
	0, 193, 0, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 0, 301, 0,
	0, 406, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 339, 407, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 425, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 328,
	231, 0, 0, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	338, 379, 385, 0, 0, 0, 229, 0, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 0, 0,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	0, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 0, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 0, 0, 351, 384, 219, 445, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 313, 396,
	442, 0, 187, 202, 299, 0, 373, 261, 473, 453,
	449, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 421, 0, 306, 422, 423, 280, 0,
	0, 0, 0, 0, 0, 342, 0, 1365, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 356, 0, 193, 0, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 0, 301, 0, 0, 406, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 339, 407, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	425, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 328, 231, 0, 0, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 338, 379, 385, 0, 0, 0,
	229, 0, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 0, 0, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 0, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 0,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 0, 0, 351, 384,
	219, 445, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 313, 396, 442, 0, 187, 202, 299, 0,
	373, 261, 473, 453, 449, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 421, 0, 306,
	422, 423, 280, 0, 0, 0, 0, 0, 0, 342,
	0, 1363, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 356, 0, 193,
	0, 397, 228, 307, 304, 428, 255, 247, 243, 227,
	281, 314, 354, 415, 348, 0, 301, 0, 0, 406,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 339,
	407, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 425, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 328, 231, 0,
	0, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 338, 379,
	385, 0, 0, 0, 229, 0, 383, 352, 443, 213,
	257, 376, 357, 381, 364, 260, 0, 0, 382, 302,
	430, 371, 440, 460, 461, 237, 332, 450, 419, 456,
	472, 206, 234, 346, 412, 446, 403, 325, 426, 427,
	292, 402, 266, 191, 300, 466, 204, 391, 221, 211,
	197, 414, 438, 218, 394, 0, 0, 474, 199, 436,
	411, 321, 289, 290, 198, 0, 375, 242, 264, 232,
	341, 433, 434, 230, 475, 208, 455, 201, 0, 454,
	334, 429, 437, 322, 312, 200, 435, 320, 311, 295,
	253, 275, 369, 305, 370, 276, 330, 329, 331, 194,
	447, 0, 195, 0, 408, 448, 476, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 345,
	368, 366, 372, 0, 424, 441, 451, 458, 464, 465,
	467, 468, 469, 470, 471, 333, 278, 404, 294, 303,
	0, 0, 351, 384, 219, 445, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 313, 396, 442, 0,
	187, 202, 299, 0, 373, 261, 473, 453, 449, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 398,
	399, 400, 401, 409, 413, 431, 432, 444, 457, 462,
	270, 439, 463, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 452, 410, 207, 380, 262, 196, 225, 210,
	233, 248, 251, 288, 319, 326, 355, 359, 267, 245,
	223, 377, 220, 395, 416, 417, 418, 420, 323, 240,
	358, 421, 0, 306, 422, 423, 280, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 356, 0, 193, 0, 397, 228, 307, 304, 428,
	255, 247, 243, 227, 281, 314, 354, 415, 348, 0,
	301, 0, 0, 406, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 339, 407, 259, 0, 1340, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 425, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 328, 231, 0, 0, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 443, 213, 257, 376, 357, 381, 364, 260,
	0, 0, 382, 302, 430, 371, 440, 460, 461, 237,
	332, 450, 419, 456, 472, 206, 234, 346, 412, 446,
	403, 325, 426, 427, 292, 402, 266, 191, 300, 466,
	204, 391, 221, 211, 197, 414, 438, 218, 394, 0,
	0, 474, 199, 436, 411, 321, 289, 290, 198, 0,
	375, 242, 264, 232, 341, 433, 434, 230, 475, 208,
	455, 201, 0, 454, 334, 429, 437, 322, 312, 200,
	435, 320, 311, 295, 253, 275, 369, 305, 370, 276,
	330, 329, 331, 194, 447, 0, 195, 0, 408, 448,
	476, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 345, 368, 366, 372, 0, 424, 441,
	451, 458, 464, 465, 467, 468, 469, 470, 471, 333,
	278, 404, 294, 303, 0, 0, 351, 384, 219, 445,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	313, 396, 442, 0, 187, 202, 299, 0, 373, 261,
	473, 453, 449, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 315, 316, 317, 318, 335, 336,
	337, 340, 343, 344, 347, 349, 350, 353, 360, 361,
	362, 363, 365, 367, 374, 378, 386, 387, 388, 389,
	390, 392, 393, 398, 399, 400, 401, 409, 413, 431,
	432, 444, 457, 462, 270, 439, 463, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 452, 410, 207, 380,
	262, 196, 225, 210, 233, 248, 251, 288, 319, 326,
	355, 359, 267, 245, 223, 377, 220, 395, 416, 417,
	418, 420, 323, 240, 358, 421, 0, 306, 422, 423,
	280, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 0, 1242, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 356, 0, 193, 0, 397,
	228, 307, 304, 428, 255, 247, 243, 227, 281, 314,
	354, 415, 348, 0, 301, 0, 0, 406, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 339, 407, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 425, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 328, 231, 0, 0, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 338, 379, 385, 0,
	0, 0, 229, 0, 383, 352, 443, 213, 257, 376,
	357, 381, 364, 260, 0, 0, 382, 302, 430, 371,
	440, 460, 461, 237, 332, 450, 419, 456, 472, 206,
	234, 346, 412, 446, 403, 325, 426, 427, 292, 402,
	266, 191, 300, 466, 204, 391, 221, 211, 197, 414,
	438, 218, 394, 0, 0, 474, 199, 436, 411, 321,
	289, 290, 198, 0, 375, 242, 264, 232, 341, 433,
	434, 230, 475, 208, 455, 201, 0, 454, 334, 429,
	437, 322, 312, 200, 435, 320, 311, 295, 253, 275,
	369, 305, 370, 276, 330, 329, 331, 194, 447, 0,
	195, 0, 408, 448, 476, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 345, 368, 366,
	372, 0, 424, 441, 451, 458, 464, 465, 467, 468,
	469, 470, 471, 333, 278, 404, 294, 303, 0, 0,
	351, 384, 219, 445, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 313, 396, 442, 0, 187, 202,
	299, 0, 373, 261, 473, 453, 449, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 398, 399, 400,
	401, 409, 413, 431, 432, 444, 457, 462, 270, 439,
	463, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	452, 410, 207, 380, 262, 196, 225, 210, 233, 248,
	251, 288, 319, 326, 355, 359, 267, 245, 223, 377,
	220, 395, 416, 417, 418, 420, 323, 240, 358, 421,
	0, 306, 422, 423, 280, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 356,
	0, 193, 0, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 0, 301, 0,
	0, 406, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 339, 407, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1074, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 425, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 328,
	231, 0, 0, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	338, 379, 385, 0, 0, 0, 229, 0, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 0, 0,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	0, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 0, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 0, 0, 351, 384, 219, 445, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 313, 396,
	442, 0, 187, 202, 299, 0, 373, 261, 473, 453,
	449, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 421, 0, 306, 422, 423, 280, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 356, 0, 193, 0, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 0, 301, 0, 0, 406, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 339, 407, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	425, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 328, 231, 0, 0, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 338, 379, 385, 0, 0, 0,
	229, 0, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 0, 0, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 0, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 0,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 0, 0, 351, 384,
	219, 445, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 313, 396, 442, 0, 187, 202, 299, 0,
	373, 261, 473, 453, 449, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 702, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 421, 0, 306,
	422, 423, 280, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 356, 0, 193,
	0, 397, 228, 307, 304, 428, 255, 247, 243, 227,
	281, 314, 354, 415, 348, 0, 301, 0, 0, 406,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 339,
	407, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 425, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 551, 0, 268, 0, 328, 231, 0,
	0, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 338, 379,
	385, 0, 0, 0, 229, 0, 383, 352, 443, 213,
	257, 376, 357, 381, 364, 260, 0, 0, 382, 302,
	430, 371, 440, 460, 461, 237, 332, 450, 419, 456,
	472, 206, 234, 346, 412, 446, 403, 325, 426, 427,
	292, 402, 266, 191, 300, 466, 204, 391, 221, 211,
	197, 414, 438, 218, 394, 0, 0, 474, 199, 436,
	411, 321, 289, 290, 198, 0, 375, 242, 264, 232,
	341, 433, 434, 230, 475, 208, 455, 201, 0, 454,
	334, 429, 437, 322, 312, 200, 435, 320, 311, 295,
	253, 275, 369, 305, 370, 276, 330, 329, 331, 194,
	447, 0, 195, 0, 408, 448, 476, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 345,
	368, 366, 372, 0, 424, 441, 451, 458, 464, 465,
	467, 468, 469, 470, 471, 333, 278, 404, 294, 303,
	0, 0, 351, 384, 219, 445, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 313, 396, 442, 0,
	187, 202, 299, 0, 373, 261, 473, 453, 449, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 398,
	399, 400, 401, 409, 413, 431, 432, 444, 457, 462,
	550, 439, 463, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 452, 410, 207, 380, 262, 196, 225, 210,
	233, 248, 251, 288, 319, 326, 355, 359, 267, 245,
	223, 377, 220, 395, 416, 417, 418, 420, 323, 240,
	358, 421, 0, 306, 422, 423, 280, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 356, 0, 193, 0, 397, 228, 307, 304, 428,
	255, 247, 243, 227, 281, 314, 354, 415, 348, 0,
	301, 0, 0, 406, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 339, 407, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 425, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 328, 231, 0, 0, 498, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 443, 213, 257, 376, 357, 381, 364, 260,
	0, 0, 382, 302, 430, 371, 440, 460, 461, 237,
	332, 450, 419, 456, 472, 206, 234, 346, 412, 446,
	403, 325, 426, 427, 292, 402, 266, 191, 300, 466,
	204, 391, 221, 211, 197, 414, 438, 218, 394, 0,
	0, 474, 199, 436, 411, 321, 289, 290, 198, 0,
	375, 242, 264, 232, 341, 433, 434, 230, 475, 208,
	455, 201, 0, 454, 334, 429, 437, 322, 312, 200,
	435, 320, 311, 295, 253, 275, 369, 305, 370, 276,
	330, 329, 331, 194, 447, 0, 195, 0, 408, 448,
	476, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 345, 368, 366, 372, 0, 424, 441,
	451, 458, 464, 465, 467, 468, 469, 470, 471, 333,
	278, 404, 294, 303, 0, 0, 351, 384, 219, 445,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	313, 396, 442, 0, 187, 202, 299, 0, 373, 261,
	473, 453, 449, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 315, 316, 317, 318, 335, 336,
	337, 340, 343, 344, 347, 349, 350, 353, 360, 361,
	362, 363, 365, 367, 374, 378, 386, 387, 388, 389,
	390, 392, 393, 398, 399, 400, 401, 409, 413, 431,
	432, 444, 457, 462, 270, 439, 463, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 452, 410, 207, 380,
	262, 196, 225, 210, 233, 248, 251, 288, 319, 326,
	355, 359, 267, 245, 223, 377, 220, 395, 416, 417,
	418, 420, 323, 240, 358, 421, 0, 306, 422, 423,
	280, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 356, 0, 193, 0, 397,
	228, 307, 304, 428, 255, 247, 243, 227, 281, 314,
	354, 415, 348, 0, 301, 0, 0, 406, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 339, 407, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 425, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 328, 231, 0, 0, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 338, 379, 385, 0,
	0, 0, 229, 0, 383, 352, 443, 213, 257, 376,
	357, 381, 364, 260, 0, 0, 382, 302, 430, 371,
	440, 460, 461, 237, 332, 450, 419, 456, 472, 206,
	234, 346, 412, 446, 403, 325, 426, 427, 292, 402,
	266, 191, 300, 466, 204, 391, 221, 211, 197, 414,
	438, 218, 394, 0, 0, 474, 199, 436, 411, 321,
	289, 290, 198, 0, 375, 242, 264, 232, 341, 433,
	434, 230, 475, 208, 455, 201, 0, 454, 334, 429,
	437, 322, 312, 200, 435, 320, 311, 295, 253, 275,
	369, 305, 370, 276, 330, 329, 331, 194, 447, 0,
	195, 0, 408, 448, 476, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 345, 368, 366,
	372, 0, 424, 441, 451, 458, 464, 465, 467, 468,
	469, 470, 471, 333, 278, 404, 294, 303, 0, 0,
	351, 384, 219, 445, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 313, 396, 442, 0, 187, 202,
	299, 0, 373, 261, 473, 453, 449, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 398, 399, 400,
	401, 409, 413, 431, 432, 444, 457, 462, 270, 439,
	463, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	452, 410, 207, 380, 262, 196, 225, 210, 233, 248,
	251, 288, 319, 326, 355, 359, 267, 245, 223, 377,
	220, 395, 416, 417, 418, 420, 323, 240, 358, 421,
	0, 306, 422, 423, 280, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 356,
	0, 193, 0, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 0, 301, 0,
	0, 406, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 339, 407, 259, 0, 0, 0, 0, 184, 2283,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 425, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 328,
	231, 0, 0, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	338, 379, 385, 0, 0, 0, 229, 0, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 0, 0,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	0, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 0, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 0, 0, 351, 384, 219, 445, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 313, 396,
	442, 0, 187, 202, 299, 0, 373, 261, 473, 453,
	449, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 421, 0, 306, 422, 423, 280, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 356, 0, 193, 0, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 0, 301, 0, 0, 406, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 339, 407, 259, 0, 0,
	0, 0, 184, 1892, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	425, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 328, 231, 0, 0, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 338, 379, 385, 0, 0, 0,
	229, 0, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 0, 0, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 0, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 0,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 0, 0, 351, 384,
	219, 445, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 313, 396, 442, 0, 187, 202, 299, 0,
	373, 261, 473, 453, 449, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 87, 0, 306,
	422, 423, 280, 626, 633, 634, 635, 636, 637, 627,
	629, 0, 0, 0, 628, 0, 0, 0, 0, 0,
	631, 638, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2225, 2226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680,
}

var yyPact = [...]int{
	3427, -1000, -398, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1760, 1831, -1000, -1000,
	-1000, -1000, 1869, -1000, 647, 1496, -1000, 1750, 5022, -1000,
	34528, 443, -1000, 33974, 439, 248, 34528, -1000, 125, -1000,
	89, 34528, 98, 33420, -1000, -1000, -293, 14581, 1682, -6,
	-8, 34528, -1000, -1000, -1000, -1000, 1843, 1524, -1000, 292,
	-1000, -1000, -1000, -1000, -1000, -1000, 32866, -1000, -1000, -1000,
	1758, 1742, 1874, 557, 1669, -1000, 1800, 1524, -1000, 14581,
	1840, 1784, 14027, -1000, 14027, 362, -1000, -1000, 10142, -1000,
	-1000, 19015, 34528, 34528, 226, -1000, 1750, -1000, -1000, 343,
	-1000, 259, 1455, -1000, 1454, -1000, 742, 441, 283, 397,
	396, 280, 279, 278, 272, 269, 268, 267, 266, 275,
	-1000, 612, 612, -184, -189, 2309, 335, 335, 335, 391,
	1697, 1695, -1000, 619, -1000, 612, 612, 329, 612, 612,
	612, 612, 223, 220, 612, 612, 612, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 253,
	1750, 214, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34528, 94, 34528, -1000,
	487, 34528, 708, 708, 5, 708, 708, 708, 708, 111,
	535, -9, -1000, 103, 209, 92, 212, 698, 120, 131,
	-1000, -1000, 210, 698, 1154, 565, 83, -1000, 708, 7894,
	7894, 7894, -1000, 1726, -1000, -1000, -1000, -1000, -1000, -1000,
	1165, -1000, 381, -1000, -1000, -1000, -1000, 34528, 32312, 246,
	624, -1000, -1000, -1000, 27, -1000, -1000, 1274, 743, 14581,
	1044, -1000, 1446, 534, -1000, -1000, -1000, -1000, -1000, 467,
	15135, 15135, 15135, 15135, -1000, -1000, 1465, 1465, 1465, 1465,
	15135, 1465, 15135, 1465, 1465, 1465, 1465, 14581, 1465, 1465,
	1465, -1000, 1465, 1465, 1465, 1465, 1465, 1465, 1465, 1465,
	1465, 1465, 1465, 1465, 485, 1465, 1465, 1465, 1465, 1465,
	-1000, -1000, -1000, -1000, 1465, 1465, 1465, 1465, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	16797, -1000, 12365, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 34528, -1000, 1465, 134, 34528, 34528, 249, 1800,
	1524, -1000, 1843, 1819, 292, -1000, 1686, 1396, 1402, 1006,
	1524, 1442, 34528, -1000, 1468, -1000, -1000, -1000, 1631, 1033,
	1145, -1000, -1000, -1000, -1000, 1076, 14581, -1000, -1000, 1866,
	-1000, 16243, 483, 789, 1865, 31758, -1000, 362, 362, 1453,
	9580, -27, -1000, -1000, -1000, 618, 21785, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1726, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1421, 34528, -1000, -1000,
	3565, 1152, -1000, 1494, -1000, 1404, -1000, 1476, 1506, 438,
	1152, 421, 418, 372, -1000, -107, -1000, -1000, -1000, -1000,
	-1000, 612, 612, -1000, 262, 1839, 5022, 2795, -1000, -1000,
	-1000, 31204, 1492, 1152, -1000, 1488, -1000, 692, 430, 525,
	525, 1152, -1000, -1000, 34528, 1152, 691, 685, 34528, 34528,
	-1000, 30650, -1000, 30096, 29542, 973, 34528, 28988, 28434, 27880,
	27326, 26772, -1000, 1556, -1000, 1507, -1000, -1000, -1000, 34528,
	34528, 34528, 270, -1000, -1000, 34528, 1152, -1000, -1000, 969,
	966, 612, 612, 950, 1137, 1127, 1123, 612, 612, 949,
	1119, 24001, 180, 945, 941, 933, 1001, 1117, 184, 981,
	939, 930, 34528, 1487, 34528, -1000, 199, 597, 370, 617,
	1750, 1671, 1451, 378, 424, 1152, 338, 338, 34528, -1000,
	8456, -1000, -1000, 1116, 14581, -1000, 715, 698, 698, -1000,
	-1000, -1000, -1000, -1000, -1000, 708, 34528, 715, -1000, -1000,
	-1000, 698, 708, 34528, 708, 708, 708, 708, 698, 698,
	698, 708, 34528, 34528, 34528, 34528, 34528, 34528, 34528, 34528,
	34528, 7894, 7894, 7894, 565, 708, -299, -1000, 1113, -1000,
	1570, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	95, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-97, 1450, 26218, -1000, -305, -312, -316, -318, -1000, -1000,
	-1000, -320, -327, -1000, -1000, -1000, 14581, 14581, 14581, 14581,
	-1000, 800, 15135, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	802, 702, 15135, 15135, 15135, 15135, 15135, 15135, 15135, 15135,
	15135, 15135, 15135, 15135, 15135, 15135, 15135, 688, 1110, 1105,
	534, 534, 534, 534, -1000, 14027, 14581, 14581, 534, -1000,
	1152, 25664, 14027, 14027, 14581, 1730, 632, 743, 34528, -1000,
	1006, -1000, -1000, -1000, 916, -1000, 34528, 34528, 30, 14581,
	14581, 14581, 14581, 11256, 10702, 8456, 14027, 14027, 14027, 14027,
	14027, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 480, 1352, 1235, 1384, -1000, 1448, -1000, -175,
	18461, 14581, 1104, 1864, 1544, 34528, -1000, -1000, -1000, 1800,
	-1000, 1800, 1352, 1658, 1489, 14027, -1000, -1000, 1658, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1386, -1000, 34528,
	1442, 1781, 34528, 1629, 1090, 252, -1000, 14581, 14581, 1435,
	-1000, 1082, 34528, -1000, -1000, 25110, -1000, -1000, 7332, -1000,
	34528, 264, 34528, -1000, 23447, 24556, 9018, -27, -1000, 9018,
	1423, -1000, -33, -44, 11810, 538, -1000, -1000, -1000, 2309,
	15689, 1255, 538, 32, -1000, -1000, -1000, 1476, -1000, 1476,
	1476, 1476, 1476, 252, 252, 252, 252, -1000, -1000, -1000,
	-1000, -1000, 1486, 1485, -1000, 1476, 1476, 1476, 1476, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1484, 1484, 1484, 1477,
	1477, 320, -1000, 14581, 222, 34528, 1763, 915, 199, 345,
	1543, 1152, 1152, 1152, 345, -1000, 1277, 1246, -1000, -383,
	1432, -1000, -1000, 1838, -1000, -1000, 645, 747, 722, 573,
	34528, 140, 256, -1000, 310, -1000, 34528, 1152, 683, 525,
	1152, -1000, 1152, -1000, -1000, -1000, -1000, -1000, 1152, 1430,
	-1000, 1443, 776, 721, 728, 704, 1430, -1000, -1000, -129,
	1430, -1000, 1430, -1000, 1430, -1000, 1430, -1000, 1430, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 621, 34528, 140,
	688, -1000, 376, -1000, -1000, 688, 688, -1000, -1000, -1000,
	-1000, 1072, 1069, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-371, 34528, -1000, 187, 616, 230, 271, 231, 34528, 127,
	1786, 191, 219, 34528, 34528, 338, 1569, 34528, 1774, 34528,
	-1000, -1000, -1000, -1000, -1000, 743, 34528, -1000, -1000, 708,
	708, -1000, -1000, 34528, 708, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 708, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 34528, 34528, -1000, -1000, -1000, -1000, -1000, 51, -38,
	240, -1000, -1000, -1000, -1000, -1000, 1797, -1000, 743, 669,
	663, -1000, -1000, -1000, 1013, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 802, 15135, 15135, 15135, 1345, 388, 1501, 1148,
	833, 801, 801, 756, 756, 543, 543, 543, 543, 543,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1346, -1000, 1093,
	1004, 1006, -1000, 1346, 1346, 985, 14027, -1000, -1000, 631,
	-1000, 14581, 1006, -1000, -1000, 1006, 1429, 1427, 1863, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	900, 1064, 1064, 1064, 14581, 934, -1000, -1000, -1000, 1006,
	14027, 14027, 1424, 1465, 479, -1000, 1346, 1006, 1006, 1346,
	1346, 8456, 1006, -1000, 34528, -1000, -289, -1000, -70, 517,
	1465, -1000, 24001, 1006, 1274, -1000, 1022, -1000, 35636, -1000,
	-1000, -1000, -1000, -1000, 21231, 1463, 1658, -1000, -1000, 1465,
	1381, -1000, -1000, 252, 14, 20677, -1000, -1000, 743, 743,
	14581, -1000, -1000, -1000, -1000, -1000, -1000, 476, 1851, 290,
	1465, -1000, 1433, 1597, -1000, -1000, -1000, 1780, 17907, 34528,
	1447, 1434, -1000, 475, -1000, 1423, -27, -58, -1000, -1000,
	-1000, -1000, 743, -1000, 1144, 265, 2949, -1000, 309, -1000,
	-1000, -1000, -1000, 1689, 18, -1000, -1000, -1000, 252, 252,
	-1000, -1000, -1000, -1000, -1000, -1000, 1056, 1056, -1000, -1000,
	-1000, -1000, -1000, 904, -1000, -1000, -1000, 889, -1000, -1000,
	1163, 1558, 222, -1000, -1000, 612, 1046, 1688, 34528, -1000,
	-1000, 1210, 187, 34528, 655, 1568, -1000, 1543, 1543, 1543,
	34528, -1000, -1000, -1000, -1000, -376, 46, 282, -1000, -1000,
	-1000, 284, 34528, 1358, -1000, 137, -1000, 1208, 1647, 34528,
	-1000, 1356, 1483, 1152, 1152, -1000, -1000, -1000, 34528, 1465,
	-1000, -1000, -1000, -1000, 423, 1741, 1734, 140, 137, 538,
	1152, -1000, -1000, -1000, -1000, -1000, -377, 1351, 411, 142,
	237, 34528, 34528, 34528, 34528, 34528, 456, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 217, 371, -1000, 34528, 34528,
	551, -1000, -1000, -1000, 698, -1000, -1000, 698, -1000, -1000,
	-1000, -1000, -1000, 1723, 34528, -41, -349, -1000, -338, -1000,
	-1000, -1000, -1000, 1122, 384, 1501, 15135, 15135, 14027, -123,
	589, 589, 688, -1000, -1000, -1000, 14581, 14581, 1436, 622,
	-1000, 14581, 730, -1000, -1000, 14581, 14581, 14581, 1006, 224,
	-1000, -1000, -1000, 1861, -1000, 14581, -1000, 1346, 1346, 14027,
	8456, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 517, -1000, 525, 525, 525, 34528, -1000, -1000, -1000,
	-1000, -1000, -1000, 1407, 1799, -1000, 1644, 1637, 1857, 1851,
	-1000, 23447, 1658, -1000, -1000, 34528, -284, -1000, 1670, 1652,
	-1000, -1000, -1000, -1000, 6770, 1800, 14581, 1566, 34528, 1465,
	-1000, 17352, 34528, 34528, 23447, 23447, 23447, 23447, 23447, -1000,
	1611, 1610, -1000, 1612, 1609, 1581, 34528, -1000, 1343, 1006,
	1819, 17907, 20123, 1254, 23447, -1000, -1000, 23447, 34528, 6208,
	-1000, -1000, -62, -52, -1000, -1000, -1000, -1000, 2309, -1000,
	-1000, 690, 1779, 1687, -1000, -1000, -1000, -1000, 1341, -1000,
	1336, 1398, 1333, 115, -1000, 1503, 1715, 612, 612, -1000,
	888, -1000, 1152, -1000, -1000, 409, -1000, 1773, 34528, 1565,
	1564, 1560, -1000, -391, 877, 1482, 1502, 14581, 1481, 1837,
	1302, 34528, -1000, -1000, 34528, -1000, -1000, 369, -1000, 222,
	34528, -1000, -1000, -1000, 256, 34528, -1000, 36114, 137, -1000,
	-1000, -1000, -1000, -1000, -1000, 34528, 195, -1000, 1480, 1047,
	-1000, -1000, 1516, -1000, -1000, -1000, -1000, 121, 227, -1000,
	34528, 489, 1558, 34528, -1000, -1000, -1000, 708, 708, -1000,
	-1000, 1700, -1000, 1152, 15135, 15135, -1000, 534, -1000, 1465,
	1006, 1476, 1476, -1000, 1476, 1477, -1000, 1476, 86, 1476,
	63, 1476, -1000, -1000, 1006, 1006, 809, 799, -114, -1000,
	743, 14581, 910, 847, 1064, -1000, 1475, 1474, 14581, 1064,
	-1000, -1000, 1006, -1000, -1000, 1788, 1788, 1788, 1319, 35082,
	34528, -1000, -1000, -1000, -1000, 1851, 1848, 1323, -1000, -1000,
	14, 331, -1000, 1659, 1652, -1000, 1836, 1664, 1835, -1000,
	-1000, -1000, 743, -1000, 1743, 1247, -1000, 590, 1270, -1000,
	-1000, 13473, 1331, 1636, 474, 1319, 1365, 1597, 1534, 1552,
	1546, -1000, -1000, -1000, -1000, 1608, -1000, 1602, -1000, -1000,
	1468, -1000, -1000, 1235, 264, 23447, 1304, 1304, -1000, 466,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 770, 5219, 1873,
	-1000, 1045, -1000, 1138, -1000, 679, 678, -1000, 34528, 1473,
	-1000, 252, 1039, 252, 873, -1000, 871, -1000, -1000, -227,
	-1000, -1000, 1444, 1554, -1000, -1000, 34528, -1000, -1000, 34528,
	34528, 34528, 1472, 1834, -1000, 14581, 1471, 578, 1157, 34528,
	34528, -1000, -1000, 229, 1465, -1000, 1300, 1298, -1000, -186,
	-1000, 14581, -1000, -1000, -1000, 924, 924, -1000, 1468, -1000,
	-1000, -1000, 1199, -1000, -1000, -131, 34528, 34528, 34528, 34528,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 534,
	15135, -1000, -1000, 252, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 14581, -1000, 14581, -1000, 1800, 1012, 743,
	14581, 14581, -1000, 851, 849, 1064, -1000, -1000, 1465, 1679,
	1465, 1465, 20123, -1000, -1000, 1848, 1846, 1833, 1654, 1660,
	1660, 1659, -1000, 1828, 1822, -1000, 1007, 1815, 1000, 675,
	-1000, 34528, 14581, 1465, -1000, 257, 34528, 1465, 34528, -1000,
	1844, -1000, -1000, 14581, 1470, -1000, 14581, -1000, -1000, -1000,
	-1000, -1000, 1851, 1304, -1000, -1000, 550, -1000, 14581, -1000,
	-1000, -1000, 1989, -1000, -1000, -1000, -1000, -1000, 1469, 14581,
	-1000, -1000, -1000, 1179, 1175, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1468, -1000, -1000, -1000, -1000, 256, -387,
	1130, 34528, 824, -1000, 1289, 1302, 436, -1000, 14581, 289,
	-1000, 256, -1000, -191, -193, 1064, -1000, -1000, 1778, -1000,
	-1000, 8456, -1000, -1000, 1467, 1531, -1000, 251, -1000, 1064,
	1064, 1006, -1000, 1064, 1064, 1172, 1168, -1000, 19569, -1000,
	1805, 1804, 22893, 22893, 517, 1846, -1000, 14581, 14581, 1651,
	812, -1000, -1000, -1000, -1000, 994, 988, -1000, 978, -1000,
	1872, -1000, 743, -1000, 1465, -1000, 459, 1270, -1000, 1800,
	743, 34528, 743, 1844, -1000, 1064, -1000, 1465, 1465, 1465,
	1465, 34528, 970, -1000, -1000, 1776, 1276, 44, -1000, 1265,
	-1000, -1000, -1000, -1000, 12919, -1000, -1000, -1000, -1000, -1000,
	-1000, 292, 1296, -1000, 575, 34528, 34528, 1006, 235, -135,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1259, -1000, -1000,
	-1000, -1000, -1000, 1259, 1259, -1000, -1000, 743, 1274, -1000,
	796, -1000, -1000, -1000, -1000, -1000, 34528, 1270, 34528, -1000,
	1241, 1800, -1000, 1224, -1000, 292, -1000, 1458, 1502, -1000,
	1006, -130, 8456, 5646, 1203, -1000, -1000, 1628, -127, -179,
	22339, -1000, -1000, -1000, -1000, -1000, 1268, -1000, -1000, -1000,
	1551, 664, -130, 14581, 1457, -1000, -1000, -37, -1000, -1000,
	-1000, -1000, -1000, 1516, -1000, 1624, -1000, -1000, -1000, 1550,
	-1000, 1855, -1000, -1000, -1000, 738, 976, -1000, -1000, -1000,
	-1000, 876, 34528, 312, -1000, -1000, -131, -132, -1000, 1871,
	513, 513, -1000, -1000, -394, 1183, 181, -1000, -146, -1000,
	-1000, -1000, 317, 897, -1000, -1000, 797, -394, -1000, -181,
	-1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2243, 2242, 13, 1, 2235, 17, 76, 161, 11,
	164, 82, 2234, 2232, 2231, 2230, 2229, 2228, 2226, 199,
	194, 191, 2225, 2217, 2216, 2215, 2214, 2208, 2207, 2206,
	2199, 2198, 188, 142, 154, 2196, 2193, 2191, 94, 172,
	69, 73, 159, 2189, 2188, 55, 2186, 2181, 2180, 177,
	176, 699, 2178, 149, 96, 27, 2177, 2176, 2175, 2173,
	2169, 2167, 2166, 2165, 2164, 2163, 2162, 2157, 2154, 2153,
	151, 2152, 2150, 6, 2145, 60, 2144, 2143, 2141, 2140,
	104, 2139, 2138, 2137, 2136, 2135, 2134, 123, 2133, 2132,
	2131, 2130, 160, 2129, 2128, 175, 101, 80, 2127, 2125,
	81, 158, 2124, 93, 2123, 2122, 2120, 134, 2119, 2459,
	2118, 44, 58, 2115, 48, 65, 52, 39, 2114, 2113,
	2112, 43, 53, 2110, 86, 49, 2109, 75, 83, 2107,
	41, 2106, 2105, 89, 2104, 2103, 2097, 77, 2095, 2085,
	3085, 2084, 74, 121, 85, 50, 2083, 25, 66, 2082,
	2081, 2075, 2074, 2073, 30, 2072, 2069, 2055, 126, 22,
	2053, 19, 26, 31, 118, 2052, 63, 59, 2051, 127,
	120, 2050, 35, 20, 14, 2048, 21, 116, 138, 16,
	79, 119, 2045, 2043, 33, 47, 2042, 2039, 2038, 2036,
	2035, 2034, 46, 2033, 36, 2032, 165, 2031, 8, 2030,
	32, 24, 2028, 40, 203, 42, 12, 2027, 152, 2025,
	34, 140, 105, 131, 2017, 2015, 2014, 150, 240, 2007,
	2005, 68, 146, 136, 133, 2001, 242, 1999, 1996, 71,
	1013, 2037, 15, 141, 1993, 1992, 1991, 3016, 130, 110,
	37, 1990, 99, 1988, 1986, 1981, 163, 145, 88, 868,
	91, 1978, 1977, 1976, 1974, 1973, 1972, 1956, 1954, 122,
	166, 38, 92, 153, 45, 1947, 1944, 1941, 107, 78,
	1940, 139, 137, 111, 84, 1938, 148, 128, 103, 1934,
	108, 1924, 1921, 1920, 1918, 70, 1916, 1913, 1912, 1911,
	144, 129, 100, 61, 1910, 67, 102, 132, 135, 29,
	1909, 23, 1908, 1907, 155, 7, 1905, 3, 0, 1904,
	5, 147, 241, 143, 1900, 1899, 2, 1897, 4, 1896,
	1895, 125, 1894, 1893, 1892, 10, 28, 9, 1891, 1889,
	1888, 3161, 220, 106, 1885, 167,
}

//line sql.y:6270
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 329, 330, 330, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 308, 308,
	308, 311, 311, 30, 65, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 78, 78, 20, 21, 21, 21, 21,
	333, 333, 135, 135, 133, 133, 134, 134, 203, 203,
	22, 23, 23, 213, 213, 212, 212, 212, 214, 214,
	214, 214, 249, 249, 24, 24, 24, 24, 24, 93,
	93, 310, 310, 309, 307, 307, 306, 306, 305, 36,
	37, 46, 46, 46, 46, 47, 48, 312, 312, 281,
	52, 52, 51, 51, 51, 51, 53, 53, 50, 50,
	49, 49, 283, 283, 270, 270, 282, 282, 282, 282,
	282, 282, 282, 269, 269, 104, 104, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 324, 324,
	183, 183, 183, 183, 183, 183, 113, 113, 121, 121,
	121, 121, 111, 111, 112, 110, 110, 110, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 120, 120, 117, 117, 117, 118, 118, 118, 325,
	325, 325, 325, 252, 252, 252, 252, 255, 255, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 254, 254,
	254, 254, 254, 256, 256, 256, 256, 256, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 258, 258, 258, 258, 258, 258, 258,
	258, 268, 268, 259, 259, 263, 263, 264, 264, 264,
	265, 265, 265, 266, 266, 261, 261, 261, 261, 261,
	261, 262, 262, 262, 271, 295, 295, 294, 294, 292,
	292, 292, 292, 280, 280, 289, 289, 289, 289, 289,
	279, 279, 275, 275, 275, 276, 276, 277, 277, 274,
	274, 278, 278, 291, 291, 290, 272, 272, 273, 273,
	297, 326, 326, 326, 326, 327, 327, 298, 317, 318,
	316, 316, 316, 316, 316, 75, 75, 75, 225, 225,
	225, 287, 287, 286, 286, 286, 288, 288, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 220, 220, 220, 315,
	315, 315, 315, 315, 315, 314, 314, 314, 284, 284,
	284, 313, 313, 54, 54, 167, 167, 43, 43, 43,
	43, 43, 43, 42, 42, 42, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 44,
	44, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	80, 80, 81, 81, 81, 81, 82, 82, 82, 300,
	300, 55, 55, 3, 3, 1, 1, 2, 2, 4,
	4, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 267, 267, 267, 299, 299, 301, 303,
	303, 303, 303, 302, 89, 89, 26, 35, 35, 27,
	27, 27, 27, 28, 28, 56, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 319, 319, 219, 219, 227, 227,
	218, 218, 242, 242, 242, 221, 221, 221, 222, 222,
	323, 323, 323, 58, 58, 58, 60, 60, 61, 62,
	62, 244, 244, 245, 245, 63, 64, 76, 76, 76,
	76, 76, 76, 79, 79, 79, 13, 13, 13, 13,
	72, 72, 72, 12, 12, 59, 59, 66, 320, 320,
	321, 322, 322, 322, 322, 67, 69, 29, 29, 29,
	29, 29, 29, 99, 99, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 94, 94, 94,
	88, 88, 334, 70, 71, 71, 92, 92, 92, 85,
	85, 85, 91, 91, 91, 14, 14, 15, 202, 202,
	16, 16, 96, 96, 98, 98, 98, 98, 98, 100,
	100, 100, 100, 100, 100, 100, 95, 95, 97, 97,
	97, 97, 234, 234, 234, 233, 233, 124, 124, 126,
	125, 125, 127, 127, 128, 128, 128, 165, 143, 143,
	200, 200, 198, 198, 199, 199, 201, 201, 201, 201,
	204, 204, 129, 129, 129, 129, 130, 130, 131, 131,
	132, 132, 243, 243, 240, 240, 240, 239, 239, 136,
	136, 136, 138, 137, 137, 137, 137, 139, 139, 141,
	141, 140, 140, 142, 147, 147, 146, 146, 144, 144,
	144, 144, 145, 145, 145, 145, 148, 148, 109, 109,
	109, 109, 109, 109, 119, 119, 119, 119, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 77, 77, 77, 216, 216,
	149, 149, 157, 157, 157, 157, 150, 150, 150, 150,
	150, 150, 150, 158, 158, 158, 164, 159, 159, 155,
	155, 155, 155, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 235, 235,
	235, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 335, 335, 260, 260, 260, 156, 156, 156,
	156, 156, 90, 90, 90, 90, 90, 248, 248, 248,
	251, 251, 251, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 170, 170,
	86, 86, 168, 168, 169, 171, 171, 166, 166, 166,
	152, 152, 152, 172, 172, 173, 173, 174, 174, 176,
	175, 175, 177, 178, 178, 178, 179, 179, 180, 180,
	180, 45, 45, 45, 45, 45, 40, 40, 40, 40,
	41, 41, 41, 101, 101, 101, 101, 103, 103, 102,
	102, 73, 73, 74, 74, 74, 107, 107, 108, 108,
	108, 105, 105, 106, 106, 196, 196, 181, 181, 181,
	188, 188, 188, 184, 184, 186, 186, 186, 187, 187,
	187, 185, 193, 193, 195, 195, 194, 194, 190, 190,
	191, 191, 192, 192, 192, 189, 189, 151, 151, 151,
	151, 151, 197, 197, 197, 197, 205, 205, 161, 161,
	163, 163, 162, 123, 206, 206, 210, 207, 207, 211,
	211, 211, 211, 211, 208, 208, 209, 209, 236, 236,
	236, 215, 215, 226, 226, 223, 223, 224, 224, 217,
	217, 228, 228, 228, 68, 160, 160, 296, 296, 293,
	231, 231, 232, 232, 237, 237, 241, 241, 238, 238,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 331, 332, 246, 247, 247, 247,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 2, 2, 0, 1, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 1, 1,
	0, 2, 2, 3, 3, 2, 1, 1, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 5, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 2, 2, 2, 1,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	7, 5, 6, 6, 7, 0, 1, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 0, 1,
	2, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 5, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 1, 1, 0, 2, 0,
	2, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 2, 0,
	4, 4, 3, 2, 1, 3, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 4, 4, 4, 3, 3, 3, 5, 2,
	3, 3, 3, 3, 1, 1, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 3, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 3, 3, 7,
	0, 3, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 6, 6, 6,
	2, 2, 3, 3, 3, 1, 1, 1, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 5, 4, 4, 4, 7, 4, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 2, 2, 0, 3, 0, 2, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -329, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -56, -57, -58, -60,
	-61, -62, -63, -64, -12, -59, -29, -30, -65, -66,
	-67, -68, -69, -14, -15, -16, -7, -6, -11, 7,
	8, -78, -31, 30, -36, -46, 209, -47, -37, 210,
	-48, 212, 211, 248, 213, 241, 72, 290, 291, 293,
	294, 295, 296, -79, 246, 247, 215, 34, 43, 31,
	32, 35, 219, 254, 255, 218, -8, -32, 6, -331,
	9, 416, 243, 242, 26, -10, 433, 83, -330, 567,
	-196, -181, 20, 31, 27, -180, -176, -92, -181, 18,
	16, 5, -70, -334, -70, -70, 10, 11, -70, -281,
	-283, 83, 146, 83, -70, -52, -51, -50, -49, -53,
	29, -43, -44, -304, -42, -39, 214, 211, 258, 110,
	111, 248, 249, 250, 213, 232, 247, 251, 246, 267,
	-38, 78, 31, 433, 436, -288, 210, 216, 217, 417,
	113, 112, 73, 212, -285, 342, 537, -53, 539, 99,
	101, 538, 42, 222, 540, 541, 542, 543, 231, 544,
	545, 546, 547, 553, 554, 555, 556, 114, 5, -70,
	-241, -237, -308, -230, 86, 87, 88, 430, 234, 464,
	465, 283, 78, 39, 339, 342, 537, 290, 304, 298,
	325, 317, 431, 466, 286, 235, 271, 534, 315, 122,
	539, 289, 467, 249, 347, 348, 349, 99, 293, 384,
	552, 288, 468, 550, 101, 538, 77, 49, 42, 244,
	313, 218, 309, 540, 272, 469, 441, 265, 113, 110,
	559, 34, 307, 48, 28, 549, 112, 47, 541, 137,
	470, 542, 351, 330, 528, 46, 352, 250, 471, 81,
	255, 435, 536, 353, 308, 354, 282, 548, 215, 472,
	520, 355, 356, 529, 473, 331, 335, 474, 376, 357,
	566, 50, 475, 476, 530, 111, 477, 76, 543, 302,
	303, 478, 280, 233, 378, 329, 231, 33, 358, 432,
	284, 56, 259, 379, 44, 333, 563, 43, 524, 479,
	527, 328, 324, 426, 51, 480, 481, 482, 483, 544,
	327, 301, 323, 558, 453, 277, 545, 60, 217, 337,
	336, 338, 266, 375, 320, 484, 485, 486, 238, 79,
	487, 310, 19, 488, 489, 359, 273, 490, 54, 491,
	492, 382, 247, 493, 52, 546, 37, 252, 560, 547,
	494, 495, 496, 497, 254, 498, 361, 499, 360, 332,
	334, 261, 362, 434, 500, 306, 251, 551, 501, 239,
	535, 253, 258, 246, 383, 240, 502, 503, 504, 505,
	506, 287, 507, 508, 294, 553, 427, 41, 509, 510,
	511, 512, 281, 276, 377, 386, 59, 80, 344, 513,
	533, 300, 274, 514, 291, 53, 554, 555, 556, 268,
	557, 7, 564, 565, 364, 114, 278, 279, 45, 321,
	260, 515, 516, 311, 312, 326, 299, 322, 292, 521,
	262, 365, 428, 248, 517, 385, 275, 340, 345, 438,
	267, 366, 532, 437, 319, 316, 269, 518, 367, 223,
	263, 264, 519, 522, 368, 369, 285, 370, 371, 372,
	373, 374, 270, 436, 297, 314, 346, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 425, 221, -70, 221, -140,
	-237, 221, -208, 348, -227, 350, 363, 358, 368, 356,
	-219, 359, 361, 261, -323, 376, 221, 365, 209, 163,
	351, 360, 369, 370, 285, 371, 374, 270, -319, -308,
	542, 557, 122, 318, 355, 353, 377, 524, 373, 372,
	-237, 292, -244, 297, -231, -308, -230, 295, -140, -76,
	520, 213, -246, -246, -94, 524, 526, -159, -109, 130,
	-119, -122, -114, -115, -153, -154, -155, -156, -120, -166,
	152, 153, 160, 131, -164, -123, 24, 429, 418, 417,
	163, 29, 205, 66, 67, 420, 421, 133, 55, 393,
	394, -121, 389, 395, 390, 423, 424, 105, 425, -235,
	426, 427, 428, -231, -237, 226, 388, 220, 158, 416,
	-116, -112, -6, -162, 387, 391, 392, 396, 102, 104,
	103, -308, -230, -118, -117, -149, 89, 95, 100, 96,
	-328, 106, -331, 90, 91, 92, 93, 94, 107, 108,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 42, 364, 364, -140, -70, -70, -70, -70, -174,
	-92, -176, -8, -6, -331, 6, -70, -6, -7, -11,
	-32, -34, 460, -33, -237, -181, -196, 10, 148, 40,
	48, -179, -180, -10, -6, -109, 17, 21, 22, -97,
	154, -109, -237, -71, -97, -217, 225, -70, -70, -207,
	-249, 292, -211, 377, 376, -232, -209, -231, -229, -208,
	375, 214, 439, 129, 23, 25, 132, 163, 117, 17,
	133, 35, 216, 318, 232, 162, 228, 417, 209, 70,
	440, 389, 390, 387, 393, 419, 420, 388, 350, 29,
	11, 442, 26, 242, 22, 36, 156, 211, 136, 245,
	24, 243, 105, 108, 445, 20, 73, 237, 12, 230,
	38, 14, 446, 447, 15, 226, 225, 148, 222, 68,
	9, 205, 27, 145, 64, 448, 124, 449, 450, 451,
	452, 118, 66, 146, 18, 561, 391, 392, 31, 525,
	429, 256, 158, 71, 57, 526, 130, 454, 455, 106,
	456, 109, 74, 531, 126, 16, 69, 40, 457, 257,
	458, 227, 562, 459, 380, 460, 147, 212, 416, 67,
	461, 220, 363, 6, 422, 30, 241, 229, 116, 65,
	462, 221, 135, 423, 424, 224, 119, 107, 5, 123,
	32, 10, 72, 75, 394, 395, 396, 55, 115, 433,
	134, 13, 463, 381, 128, 122, -282, 146, -269, -273,
	-231, 236, -298, 232, -140, -291, -290, -231, -93, -226,
	222, 230, 229, 123, -312, 126, 278, 388, 220, -49,
	-50, -208, 162, -80, 253, 257, 84, 84, -273, -272,
	-271, -313, 257, 236, -297, -289, 228, 237, -279, 229,
	230, -274, 222, 124, -313, -274, 227, 237, 257, 257,
	114, 257, 114, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 252, -280, 138, -280, 437, 437, -285, -313,
	-313, -313, 224, 33, 33, -228, -274, 224, 23, -280,
	-280, -208, 162, -280, -280, -280, -280, 265, 265, -280,
	-280, -280, -280, -280, -280, -280, -280, -280, -280, -280,
	-280, -280, -280, -280, 221, -312, -101, 374, 285, 78,
	-51, 267, -35, -140, -226, 222, 223, -312, 254, -140,
	206, -140, -221, 146, 13, -221, -218, 364, 362, 349,
	354, -221, -221, -221, -221, 268, 347, -275, 222, 33,
	233, 364, 268, 347, 268, 269, 268, 269, 357, 367,
	268, -242, 12, 148, 388, 352, 356, 261, 221, 262,
	223, 366, -308, 527, 269, -242, 90, -222, 146, 364,
	264, -221, -247, -331, -232, 318, -247, -247, 30, 87,
	224, -231, -72, -231, 90, -13, -9, -20, -19, -21,
	138, -99, 364, -87, 163, 542, 528, 529, 530, 527,
	361, 535, 533, 531, 268, 532, 84, 126, 128, 129,
	-109, 145, -150, 138, 139, 140, 141, 142, 143, 144,
	148, 130, 132, 146, 147, 127, 149, 150, 151, 152,
	153, 154, 155, 157, 156, 158, 159, 162, 207, 208,
	-115, -115, -115, -115, -164, -331, -331, -331, -115, -216,
	-331, -115, -331, -331, -331, -331, -170, -109, -331, -335,
	-331, -335, -335, -260, -331, -260, -331, -331, -331, -331,
	-331, -331, -331, -331, -331, 206, -331, -331, -331, -331,
	-331, -260, -260, -260, -260, 100, 95, 89, -166, 96,
	90, -231, -237, -6, -7, -159, -246, -320, -321, -143,
	-140, -331, 285, -231, -231, 254, -179, -10, -6, -174,
	-180, -176, -6, -70, -85, -98, 61, 62, -100, 22,
	36, 65, 63, 21, -332, 85, -332, -196, -332, 84,
	-34, -200, 83, 59, 41, 90, 90, 84, 19, -175,
	-177, -109, 12, -234, -233, 23, -231, 90, 206, 98,
	12, -141, 27, -140, -217, -217, 84, 292, -211, -249,
	-213, -212, 378, 380, 138, -236, -231, 90, 29, 85,
	84, -140, -252, -255, -257, -256, -258, -253, -254, 315,
	316, 163, 319, 321, 322, 323, 324, 325, 326, 327,
	328, 329, 330, 30, 244, 311, 312, 313, 314, 331,
	332, 333, 334, 335, 336, 337, 338, 298, 317, 431,
	299, 300, 301, 302, 303, 304, 306, 307, 308, 309,
	310, -311, -308, 83, 85, 84, -259, 83, -101, 221,
	-308, 222, 222, 222, -70, 416, -280, -280, 252, 17,
	-42, -39, -304, 16, -38, -39, 214, 110, 111, 211,
	83, -269, 83, -278, -311, -308, 83, 124, 227, 123,
	-277, -274, -277, -278, -308, -166, -308, 124, 124, -204,
	-231, -204, -204, 21, -204, 21, -204, 21, 92, -231,
	-204, 21, -204, 21, -204, 21, -204, 21, -204, 21,
	29, 76, 77, 29, 79, 80, 81, -166, -166, -269,
	-208, -140, -308, 92, 92, -280, -280, 92, 90, 90,
	90, -280, -280, 92, 90, -239, -237, 90, -314, 238,
	282, 284, 92, 92, 92, 92, 29, 90, -315, 29,
	549, 548, 550, 551, 552, 92, 29, 92, 29, 92,
	-231, 83, -140, -107, 272, 209, 211, 214, 74, 90,
	286, 138, 42, 84, 224, 221, -308, -223, 226, -223,
	-231, -238, -237, -229, 90, -109, -276, 12, 148, -242,
	-242, -221, -140, -276, -242, -221, -140, -221, -221, -221,
	-221, -242, -242, -242, -221, -237, -237, -140, -140, -140,
	-140, -140, -140, -140, -247, -247, -247, -222, -221, 527,
	90, 74, -245, 295, 329, 521, 522, 523, 84, 433,
	-133, -140, 527, 527, 527, 527, 527, 527, -109, -109,
	-109, -109, -157, 106, 130, 107, 108, -122, -158, -162,
	-164, 97, 148, 132, 146, 147, -114, -115, -114, -114,
	-114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
	-114, -248, -308, 90, 163, 90, 90, -95, -97, -109,
	-109, -308, -231, -95, -95, -109, -91, 22, 36, -168,
	-169, 134, -166, -332, -332, 92, -231, -231, -84, -83,
	398, 399, 400, 401, 403, 404, 405, 408, 409, 413,
	414, 397, 415, 402, 407, 410, 411, 412, 406, 314,
	-109, -109, -109, -109, -77, -109, 117, 118, 119, -96,
	22, 36, -95, -232, -238, -229, -95, -96, -96, -95,
	-95, 206, -196, -332, 84, -322, 380, 381, 525, -240,
	257, -239, 23, -160, -159, 90, 12, -202, 75, -231,
	-179, -179, 61, 62, 57, -95, -100, -332, -33, 23,
	-198, -231, 60, 90, -261, -208, 339, 340, -109, -109,
	84, -178, 25, 26, -140, -233, 154, -238, -140, -203,
	257, -140, -125, -127, -128, -129, -143, -165, -331, 12,
	-133, -134, -142, -237, -211, -213, 84, 379, 381, 382,
	74, 109, -109, -262, 162, -287, -286, -285, -269, -271,
	-272, -273, 85, -262, -265, 345, 344, -259, -259, -259,
	-259, -259, -261, -261, -261, -261, 83, 83, -259, -259,
	-259, -259, -263, 83, -263, -263, -264, 83, -264, -298,
	-109, -295, -294, -292, -293, 231, 99, 433, 75, -290,
	-178, 92, -107, -224, 226, -296, -293, -308, -308, -308,
	-224, -308, 90, -308, 90, -81, -55, -1, 561, 562,
	563, 84, 17, -270, -269, -54, 282, -301, -302, 257,
	-297, -291, -278, 124, -277, -278, -278, -308, 84, 27,
	114, 114, 114, 114, 433, 211, 30, -269, -54, -248,
	224, -248, -248, 90, 90, -220, 557, -133, -103, 274,
	138, 263, 263, 221, 221, 276, -140, 287, 289, 288,
	286, 21, 275, 277, 279, 265, -140, -140, -223, 74,
	-135, -140, 24, -237, -140, -221, -221, -140, -221, -221,
	-140, -231, -87, 380, 84, 433, 20, -88, 20, 106,
	107, 108, -158, -114, -115, -114, 129, 245, 84, -332,
	23, 84, 75, -332, -332, -332, 84, 12, -95, -171,
	-169, 136, -109, -332, -332, 84, 84, 12, -251, 23,
	-332, -332, -332, -170, -332, 12, -332, -95, -95, -331,
	206, -332, -332, -332, -332, -332, -232, -321, 524, 381,
	-147, -146, -144, 72, 225, 73, -331, -239, -332, 90,
	87, -199, 87, -198, -152, -231, 92, 96, -181, -124,
	-126, 12, -100, -164, 85, 84, -261, -185, -190, -218,
	-231, 90, 163, -177, 206, -148, 13, -151, 30, 55,
	-9, -331, -331, 30, 84, -136, -138, -137, -139, 64,
	68, 70, 65, 66, 67, 71, -243, 23, -125, -7,
	-6, -331, -140, -133, -333, 12, 75, -333, 84, 206,
	-212, -214, 383, 380, 386, -308, 90, -80, 84, -285,
	-273, -182, -104, 38, -266, 346, -261, -261, -268, 90,
	-268, 92, 92, 85, -45, -40, -41, 31, 78, -292,
	-280, 90, 37, -231, 85, -103, -140, 130, 74, -296,
	-296, -296, -237, -2, 560, 566, 124, 83, 349, 16,
	-198, 84, 85, -167, 283, 85, -303, 55, -231, 85,
	83, -278, -278, -231, -331, 221, 29, 29, -54, -167,
	-262, -308, 559, 558, 85, 223, 281, -108, 393, -105,
	90, 86, -140, -140, -140, -140, -140, 214, 211, 266,
	224, -133, -140, 84, -75, 240, 235, -242, -242, 31,
	-140, 380, 536, 534, 129, 245, -122, -115, -97, 430,
	-250, 163, 315, 244, 313, 309, 329, 320, 344, 311,
	345, 308, 307, 306, -250, -248, -109, -109, -174, 137,
	-109, 135, -109, -109, -109, -332, 163, 315, 12, -109,
	-332, -332, -96, -232, -144, -274, -274, -274, -204, 84,
	-215, 20, 12, 55, 55, -124, -148, -125, -100, -231,
	-188, 520, -193, 44, -191, -192, 45, -189, 46, 54,
	154, -179, -109, -205, 74, -206, -210, -166, -161, -163,
	-162, -331, -197, -332, -231, -204, -206, -127, -128, -128,
	-127, -128, 64, 64, 64, 69, 64, 69, 64, -137,
	-237, -332, -332, -7, -240, 75, -125, -125, -142, -237,
	154, 380, 384, 385, -285, -327, 106, 130, 29, 74,
	342, 99, -325, 162, -326, 227, 123, 124, 239, 23,
	39, 85, 84, 85, 84, 85, 84, -225, 470, 130,
	-41, -40, -280, -280, 92, -308, 223, 24, -140, 74,
	74, 74, -82, 564, 92, 83, -3, 78, -109, 83,
	17, -269, -166, 259, 148, -295, -198, -299, -301, -140,
	-111, -331, -110, -112, -116, 152, 153, -167, -140, -102,
	272, 280, 83, -106, 87, -310, 75, 263, 342, 263,
	-140, -75, -45, -140, -221, -221, 31, -308, -122, -115,
	-331, -332, -259, -259, -259, -264, -259, 303, -259, 303,
	-259, -332, -332, 84, -332, 20, -332, -86, 422, -109,
	84, 84, -332, 83, 83, -109, -332, -332, -145, 20,
	-145, -145, -332, 87, -140, -148, -172, 14, -185, 49,
	321, -195, -194, 53, 45, -192, 17, 47, 17, 28,
	-205, 84, 138, 84, -332, -332, 84, 55, 206, -332,
	-148, -131, -130, 74, 75, -132, 74, -130, 64, 64,
	-200, -332, -203, -125, -148, -148, 206, 106, -331, -113,
	-121, -111, 10, 90, 90, -308, 124, 124, -140, 83,
	-261, 90, -261, 92, 92, 470, 29, 79, 80, 81,
	29, 76, 77, -140, -140, -140, -140, -300, 83, 17,
	-109, 83, 138, 85, -198, -198, 260, -162, -331, 85,
	-332, 84, -267, 433, 436, -109, -117, -117, -200, 85,
	-307, 433, -309, -231, -231, -231, -231, -114, -261, -109,
	-109, -179, 90, -109, -109, 92, 92, -332, -331, 64,
	16, 14, -331, -331, -240, -172, -173, 15, 17, -186,
	51, -184, 50, -184, -194, 17, 17, 90, 17, 90,
	124, -210, -109, -163, 55, -9, -231, -161, -231, -174,
	-109, 83, -109, -148, -148, -109, -154, 425, 426, 427,
	428, 83, -109, 85, 85, -200, -299, -55, 85, -198,
	92, 85, -162, -89, -331, 256, -326, -301, 437, 437,
	-332, 23, -306, -305, -232, 83, 75, -90, 148, 433,
	-332, -332, -332, -332, -332, 85, 85, -201, -332, -231,
	227, 17, 17, -201, -201, -147, -173, -109, -159, -187,
	52, 74, 109, 90, 90, 90, 10, -161, 206, -179,
	-198, -174, -332, -198, 85, 23, 85, 566, 124, 85,
	256, -9, 84, 138, -198, -140, -332, 431, 71, 434,
	84, -332, -332, -332, 74, 109, -206, -231, 85, -179,
	85, -183, -9, 83, -3, -332, -73, 433, -305, -284,
	-232, 90, 92, 85, 60, 432, 435, -231, 227, -317,
	-318, 74, -327, -324, 106, 130, 99, -325, 115, 116,
	-73, -109, 83, -74, 271, 524, -310, 60, -318, 74,
	11, 10, 106, 90, 85, -198, 232, -307, 433, -316,
	240, 235, 238, 30, -316, -4, 565, 85, 273, 434,
	234, 29, 106, 92, -4, 435,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 712,
	712, 712, 0, 712, 0, 0, 712, -2, -2, 712,
	1156, 0, 712, 0, 0, -2, 644, 646, 0, 648,
	-2, 0, 0, 657, 1615, 1615, 707, 0, 0, 0,
	0, 0, 712, 712, 712, 712, 1017, 48, 712, 0,
	83, 84, 663, 664, 665, 63, 0, 1613, 1, 3,
	69, 73, 0, 0, 0, 56, 1026, 0, 76, 0,
	0, 716, 0, 714, 0, 1139, 712, 712, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 142, 143, 0,
	147, 510, 450, 493, 448, 479, -2, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 343, 343, 0, 0, -2, 441, 441, 441, 0,
	0, 0, 476, 1141, 396, 343, 343, 0, 343, 343,
	343, 343, 0, 0, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 1043,
	146, 1157, 1154, 1155, 38, 39, 40, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 0, 1133, 0, 574,
	811, 0, 635, 635, 0, 635, 635, 635, 635, 0,
	0, 0, 586, 0, 0, 0, 0, 632, 0, 0,
	605, 607, 0, 632, 0, 638, 0, 619, 635, 1616,
	1616, 1616, 1124, 0, 629, 627, 641, 642, 624, 625,
	643, 647, 0, 652, 655, 1150, 1151, 0, 670, 47,
	1387, 662, 675, 676, 0, 708, 709, 43, 907, 0,
	833, 837, 848, 861, 862, 863, 864, 865, 867, 868,
	0, 0, 0, 0, 873, 874, 0, 0, 0, 0,
	0, 888, 0, 0, 0, 0, 0, 998, 0, 962,
	962, 924, 962, 964, 964, 0, 0, 0, 1612, 0,
	1430, 1513, 1559, 1007, 0, 0, 0, 0, 0, 0,
	251, 252, 906, 1113, 964, 964, 964, 964, 938, 939,
	940, -2, -2, 198, 199, 200, 201, 202, 203, 204,
	0, 194, 0, 256, 257, 253, 254, 255, 890, 891,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 1615, 0, 685, 0, 0, 0, 0, 0, 1026,
	0, 1018, 1017, 61, 0, 712, -2, 0, 0, 0,
	0, 45, 0, 50, 770, 75, 74, 1065, 0, 0,
	0, 57, 1027, 65, 67, 1028, 0, 717, 718, 0,
	748, 752, 0, 713, 0, 0, 1140, 1139, 1139, 100,
	0, 1555, 1117, -2, -2, 0, 0, 1152, 1153, 1126,
	-2, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, -2, 0, 0, 156, 157,
	0, 41, 369, 0, 152, 0, 363, 313, 1043, 0,
	0, 0, 0, 0, 712, 0, 1134, 137, 138, 144,
	145, 343, 343, 490, 0, 0, 146, 146, 457, 458,
	459, 0, 0, -2, 367, 0, 442, 0, 0, 357,
	357, 361, 359, 360, 0, 0, 0, 0, 0, 0,
	470, 0, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 0, 344, 0, 488, 489, 397, 0,
	0, 0, 0, 468, 469, 0, 0, 1142, 1143, 0,
	0, 343, 343, 0, 0, 0, 0, 343, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 1056, 0, 0, 0,
	-2, 0, 566, 0, 0, 0, 1135, 1135, 0, 573,
	0, 575, 576, 0, 0, 577, 0, 632, 632, 630,
	631, 579, 580, 581, 582, 635, 0, 0, 352, 353,
	354, 632, 635, 0, 635, 635, 635, 635, 632, 632,
	632, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1616, 1616, 1616, 638, 635, 0, 615, 0, 616,
	617, 620, 621, 1617, 1618, 1172, 622, 623, 1125, 645,
	653, 656, 673, 671, 672, 674, 666, 667, 668, 669,
	0, 687, 688, 693, 0, 0, 0, 0, 699, 700,
	701, 0, 0, 704, 705, 706, 0, 0, 0, 0,
	831, 0, 0, 896, 897, 898, 899, 900, 901, 902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	869, 870, 871, 872, 875, 0, 0, 0, 880, 881,
	0, 0, 0, 0, 0, 722, 0, 999, 0, 922,
	0, 923, 925, 926, 0, 927, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 732, 732, 0,
	0, 188, 189, 190, 191, 205, 206, 207, 208, 209,
	258, 1007, 0, 906, 0, 0, 44, 677, 678, 0,
	794, 1145, 0, 0, 728, 0, 55, 64, 66, 1026,
	59, 1026, 0, 734, 0, 0, -2, -2, 735, 741,
	742, 743, 744, 745, 52, 1614, 53, 0, 72, 0,
	46, 0, 0, 0, 0, 325, 1068, 0, 0, 1019,
	1020, 1023, 0, 749, 753, 0, 755, 756, 0, 715,
	0, 98, 0, 810, 0, 0, 0, 1555, 1123, 0,
	102, 103, 0, 0, 0, 331, 1128, 1129, 1130, -2,
	350, 0, 331, 320, 264, 265, 266, 313, 268, 313,
	313, 313, 313, 325, 325, 325, 325, 296, 297, 298,
	299, 300, 0, 0, 283, 313, 313, 313, 313, 303,
	304, 305, 306, 307, 308, 309, 310, 269, 270, 271,
	272, 273, 274, 275, 276, 277, 315, 315, 315, 317,
	317, 0, 42, 0, 335, 0, 1023, 0, 1056, 1137,
	1147, 0, 0, 0, 1137, 120, 0, 0, 491, 521,
	451, 480, 492, 0, 454, 455, -2, 0, 0, 441,
	0, 443, 0, 351, 0, -2, 0, 361, 0, 357,
	361, 358, 361, 349, 362, 472, 473, 474, 0, 532,
	780, 0, 0, 0, 0, 0, 538, 539, 540, 0,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	481, 482, 483, 484, 485, 486, 487, 0, 0, 443,
	0, 477, 0, 398, 399, 0, 0, 402, 403, 404,
	405, 0, 0, 408, 409, 410, 797, 798, 411, 435,
	436, 437, 412, 413, 414, 415, 416, 417, 418, 429,
	430, 431, 432, 433, 434, 419, 420, 421, 422, 423,
	426, 0, 130, 1047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1135, 0, 0, 0, 0,
	731, 812, 1158, 1159, 636, 637, 0, 355, 356, 635,
	635, 583, 606, 0, 635, 587, 608, 588, 590, 589,
	591, 610, 611, 635, 594, 633, 634, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 612, 613, 614,
	639, 0, 0, 654, 658, 659, 660, 661, 0, 0,
	690, 94, 695, 696, 697, 698, 710, 703, 908, 828,
	829, 830, 832, 834, 0, 892, 894, 836, 838, 903,
	904, 905, 0, 0, 0, 0, 0, 842, 846, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 866, 977, 978, 979, 883, 884, 0, 746, 0,
	0, 0, 882, 0, 0, 0, 0, 723, 724, 1005,
	1002, 0, 0, 963, 965, 0, 0, 0, 0, 941,
	942, 943, 944, 945, 946, 947, 948, 949, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	980, 0, 0, 0, 998, 0, 885, 886, 887, 0,
	0, 0, 733, 1008, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 1112, 0, 680, 681, 683, 0, 814,
	0, 795, 0, 0, 1146, 686, 0, 727, 0, 730,
	58, 60, 739, 740, 0, 757, 736, 54, 49, 0,
	0, 772, 1066, 325, 1088, 0, 329, 330, 1029, 1030,
	0, 1022, 1024, 1025, 77, 754, 750, 0, 826, 0,
	0, 809, 0, 760, 762, 763, 764, 792, 0, 0,
	0, 0, 96, 811, 1118, 101, 0, 0, 106, 107,
	1119, 1120, 1121, 1122, 0, 510, -2, 393, 158, 160,
	161, 162, 153, -2, 323, 321, 322, 267, 325, 325,
	290, 291, 292, 293, 294, 295, 0, 0, 284, 285,
	286, 287, 278, 0, 279, 280, 281, 0, 282, 368,
	0, 1031, 336, 337, 339, 343, 0, 0, 0, 364,
	365, 0, 1047, 0, 0, 0, 1148, 1147, 1147, 1147,
	0, 148, 149, 150, 151, 527, 0, 0, 522, 525,
	526, 146, 0, 0, 154, 445, 444, 0, 559, 0,
	366, 0, 0, 361, 361, 346, 347, 475, 0, 0,
	534, 535, 536, 537, 0, 0, 0, 443, 445, 331,
	0, 400, 401, 406, 407, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 505, 506, 507,
	508, 509, 1044, 1045, 1046, 0, 0, 567, 0, 0,
	385, 92, 1136, 572, 632, 593, 609, 632, 585, 592,
	618, 650, 694, 0, 0, 0, 0, 702, 0, 835,
	893, 895, 839, 0, 843, 847, 0, 0, 0, 0,
	0, 0, 0, 889, 913, 914, 0, 0, 1017, 0,
	1003, 0, 0, 921, 966, 0, 0, 0, 0, 0,
	932, 933, 934, 0, 936, 0, 909, 0, 0, 732,
	0, 967, 968, 969, 970, 971, 1008, 679, 682, 684,
	768, 815, 816, 0, 0, 0, 0, 796, 1144, 725,
	726, 729, -2, 0, 0, 1010, 0, 0, 757, 826,
	758, 0, 737, 51, 771, 0, 1070, 1069, 1082, 1095,
	326, 327, 328, 1021, 0, 1026, 0, 1106, 0, 0,
	1098, 0, 0, 0, 0, 0, 0, 0, 0, 799,
	0, 0, 802, 0, 0, 0, 0, 793, 0, 0,
	0, 0, -2, 0, 0, 90, 91, 0, 0, 0,
	104, 105, 0, 0, 111, 332, 333, 139, 146, 395,
	159, 375, 0, 0, 263, 324, 288, 289, 0, 311,
	0, 0, 0, 388, 116, 1035, 1034, 343, 343, 338,
	0, 341, 0, 1149, 314, 0, 129, 0, 0, 0,
	0, 0, 135, 516, 0, 0, 523, 0, 0, 0,
	449, 0, 460, 461, 0, 531, 558, 0, 563, 335,
	0, 345, 348, 781, 0, 0, 462, 0, 445, 466,
	467, 478, 427, 428, 425, 0, 0, 1057, 1058, 1063,
	1061, 1062, 121, 498, 500, 499, 503, 0, 0, 496,
	0, 385, 1031, 0, 571, 386, 387, 635, 635, 689,
	95, 0, 692, 0, 0, 0, 840, 844, 747, 0,
	0, 313, 313, 985, 313, 317, 988, 313, 990, 313,
	993, 313, 996, 997, 0, 0, 0, 0, 1000, 920,
	1006, 0, 0, 0, 0, 931, 0, 0, 0, 0,
	910, 911, 0, 1009, 817, 822, 822, 822, 0, 0,
	0, 1131, 1132, 1011, 1012, 826, 1013, 759, 738, 773,
	1088, 0, 1081, 0, -2, 1090, 0, 0, 0, 1096,
	751, 78, 827, 81, 0, 1106, 1114, 0, 1097, 1108,
	1110, 0, 0, 0, 1102, 0, 826, 761, 788, 790,
	0, 785, 800, 801, 803, 0, 805, 0, 807, 808,
	770, 766, 767, 0, 98, 0, 826, 826, 97, 0,
	813, 108, 109, 110, 394, 163, 168, 0, 0, 0,
	173, 0, 175, 0, 376, 0, 260, 262, 0, 0,
	166, 325, 0, 325, 0, 318, 0, 377, 389, 0,
	1032, 1033, 0, 0, 340, 342, 0, 1138, 131, 0,
	0, 0, 519, 0, 528, 0, 0, 0, 0, 0,
	0, 155, 446, 0, 0, 334, 0, 0, 556, 553,
	463, 0, 192, 193, 195, 0, 0, 465, 770, 1048,
	1049, 1050, 0, 1060, 1064, 124, 0, 0, 0, 0,
	568, 569, 570, 93, 578, 584, 691, 711, 841, 845,
	0, 877, 983, 325, 986, 987, 989, 991, 992, 994,
	995, 878, 879, 0, 916, 0, 918, 1026, 0, 1004,
	0, 0, 930, 0, 0, 0, 937, 912, 0, 0,
	0, 0, 794, -2, 62, 1013, 1015, 0, 1075, 1073,
	1073, 1083, 1084, 0, 0, 1091, 0, 0, 0, 0,
	82, 0, 0, 0, 1111, 0, 0, 0, 0, 99,
	1017, 782, 789, 0, 0, 783, 0, 784, 804, 806,
	765, -2, 826, 826, 88, 89, 0, 169, 0, 171,
	186, 187, 0, 174, 176, 177, 259, 261, 0, 0,
	301, 312, 302, 0, 0, 390, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 770, 132, 133, 134, 511, 0, 521,
	0, 0, 0, 514, 0, 452, 0, 562, 0, 0,
	533, 0, 541, 0, 0, 0, 196, 197, 0, 1059,
	497, 0, 122, 123, 0, 0, 502, 972, 984, 0,
	0, 0, 1001, 0, 0, 0, 0, 935, 0, 823,
	0, 0, 0, 0, 814, 1015, 80, 0, 0, 1078,
	0, 1071, 1074, 1072, 1085, 0, 0, 1092, 0, 1094,
	0, 1115, 1116, 1109, 0, 1101, 1104, 1100, 1103, 1026,
	786, 0, 791, 1017, 87, 0, 172, 0, 0, 0,
	0, 0, 0, 316, 319, 0, 0, 0, 512, 0,
	524, 515, 560, 561, 0, 564, 370, 557, 554, 555,
	464, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	915, 917, 919, 928, 929, 981, 982, 0, 819, 776,
	777, 824, 825, 0, 0, 769, 79, 1016, 1014, 1067,
	0, 1076, 1077, 1086, 1087, 1093, 0, 1099, 0, 85,
	0, 1026, 170, 0, 180, 0, 520, 0, 523, 513,
	0, 1051, 0, 0, 0, 504, 876, 0, 0, 0,
	0, 818, 820, 821, 1079, 1080, 1107, 1105, 787, 86,
	371, 375, 1051, 0, 0, 565, 494, 1053, 127, 128,
	438, 439, 440, 121, 973, 0, 976, 778, 779, 372,
	373, 0, 164, 181, 182, 0, 0, 185, 178, 179,
	117, 0, 0, 0, 1054, 1055, 124, 974, 374, 0,
	0, 0, 183, 184, 529, 0, 0, 501, 0, 378,
	380, 381, 0, 0, 379, 517, 0, 529, 1052, 0,
	382, 383, 384, 530, 518, 975,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 131, 3, 3, 3, 157, 149, 3,
	83, 85, 154, 152, 84, 153, 206, 155, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 567,
	139, 138, 140, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 159, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 160,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 128, 129, 130, 132, 133, 134, 135, 136,
	137, 141, 142, 143, 144, 145, 146, 147, 148, 150,
	151, 156, 158, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:480
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:485
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:486
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:490
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:526
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:532
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:536
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:540
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:545
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:555
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:561
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:567
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:571
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:576
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:580
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:586
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:590
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:596
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:602
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:606
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:610
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:633
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:644
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:650
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:663
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:670
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:749
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:755
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:775
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:787
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:799
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:803
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:815
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:819
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:823
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:827
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:833
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:837
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:841
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:847
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:857
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:861
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:870
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:882
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:886
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:892
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:896
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:902
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:906
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:910
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:916
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:920
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:924
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:928
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:934
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:938
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:944
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:957
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:966
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:977
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:981
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:986
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:990
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1001
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1006
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1012
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1017
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1023
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1029
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1036
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1043
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1048
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1053
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1058
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1065
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1072
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1083
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1094
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1100
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1104
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1118
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1122
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1128
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1132
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1138
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1142
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1149
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1153
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1159
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1169
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1174
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1179
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1183
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1188
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1192
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1207
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1216
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1225
		{
			yyVAL.str = ""
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1229
		{
			yyVAL.str = ""
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1238
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1242
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1248
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1254
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1259
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1264
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1269
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1274
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1279
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1288
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1295
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1299
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1308
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1313
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1319
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1325
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1330
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1337
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1344
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1348
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1352
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1356
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1367
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1374
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1378
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1384
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1404
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1413
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1425
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1429
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1436
		{
			yyVAL.str = Armscii8Str
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.str = ASCIIStr
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = Big5Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = UBinaryStr
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = Cp1250Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1456
		{
			yyVAL.str = Cp1251Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = Cp1256Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = Cp1257Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = Cp850Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = Cp852Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1476
		{
			yyVAL.str = Cp866Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = Cp932Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = Dec8Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = EucjpmsStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = EuckrStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = Gb18030Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = Gb2312Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = GbkStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = Geostd8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = GreekStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = HebrewStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = Hp8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Keybcs2Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Koi8rStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Koi8uStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Latin1Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Latin2Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Latin5Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = Latin7Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = MacceStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = MacromanStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = SjisStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = Swe7Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = Tis620Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = Ucs2Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = UjisStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = Utf16Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = Utf16leStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Utf32Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Utf8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = Utf8mb4Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1606
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1610
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1625
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1635
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1639
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1643
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1647
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1653
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1664
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1719
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1869
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1878
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1883
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1887
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1895
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1899
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1905
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1913
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1917
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1921
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1926
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1930
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1935
		{
			yyVAL.str = ""
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1962
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1977
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1982
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1986
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1992
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1996
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2002
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2006
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2011
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2015
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2021
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2031
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2035
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2039
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2043
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2047
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2052
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.str = yyDollar[2].str
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2086
		{
			yyVAL.str = "key"
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.str = yyDollar[1].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2105
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2115
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2119
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2125
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2131
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2135
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2141
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2145
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2151
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2157
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2161
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2165
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2169
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2174
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2178
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2184
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2190
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2196
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2202
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2206
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2210
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2214
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2218
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2236
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2240
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2244
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2249
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2253
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2259
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2263
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2273
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2277
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2283
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2287
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2291
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2295
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2299
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2303
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2307
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2311
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2315
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2319
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2323
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2327
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2331
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2335
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2339
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2343
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2347
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2351
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2355
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2359
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2363
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2367
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2371
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2375
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2379
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2383
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2387
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2391
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2396
		{
			yyVAL.str = ""
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2400
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2404
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2436
		{
			yyVAL.str = ""
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2442
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2446
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2451
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2455
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2460
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2464
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2468
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2472
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2476
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2480
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2486
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2490
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2494
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2500
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2504
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2508
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2512
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2516
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2520
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2524
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2528
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2532
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2536
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2540
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2544
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2548
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2552
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2556
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2560
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2564
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2568
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2572
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2576
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2580
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2584
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2588
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2594
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2598
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2604
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2608
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2632
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2636
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2642
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2649
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2656
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2663
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2669
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2673
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2680
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2687
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2709
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2713
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2730
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2744
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2755
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2762
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2769
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2776
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2783
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2794
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2803
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2811
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2820
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2827
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2839
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2848
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2863
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2868
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2872
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2877
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2881
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2887
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2891
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2896
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2900
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2905
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2909
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2915
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2919
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2923
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2927
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2931
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2935
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2939
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2943
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2947
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2951
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2955
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2959
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2963
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2967
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2971
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2975
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2979
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2983
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2987
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2991
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2995
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2999
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3008
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3012
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3019
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3023
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3029
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3034
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3038
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3045
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3052
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3061
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3067
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3071
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3077
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3083
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3087
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3093
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3106
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3110
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3116
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3120
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3125
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3131
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3187
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3284
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3310
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3324
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3328
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3332
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3348
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3352
		{
			yyVAL.str = "extended "
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3358
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3362
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3368
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3372
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3378
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3382
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3386
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3396
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3400
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3406
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3410
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3416
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3420
		{
			yyVAL.empty = struct{}{}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3424
		{
			yyVAL.empty = struct{}{}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3430
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3434
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3444
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3448
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3460
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3464
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3469
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3471
		{
			yyVAL.empty = struct{}{}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3474
		{
			yyVAL.empty = struct{}{}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3476
		{
			yyVAL.empty = struct{}{}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3481
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3487
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3492
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3496
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3500
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3504
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3508
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3512
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.str = yyDollar[1].str
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.str = yyDollar[1].str
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.str = yyDollar[1].str
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3532
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3536
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3540
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3544
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3549
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3553
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3563
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3583
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3589
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3593
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3599
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3605
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3609
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3613
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3617
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3623
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3629
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3635
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3639
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3643
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3661
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3665
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3671
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3720
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3724
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3733
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3737
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3742
		{
			setAllowComments(yylex, true)
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3746
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3752
		{
			yyVAL.strs = nil
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3756
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3762
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3766
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3770
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3775
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.str = SQLCacheStr
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3788
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3792
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3796
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3802
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, StatementIdentifier: NewColIdentWithAt(string(yyDollar[5].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3821
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3836
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3840
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3845
		{
			yyVAL.strs = nil
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3853
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3857
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3861
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = SQLCacheStr
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = DistinctStr
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = DistinctStr
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.str = StraightJoinHint
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3887
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3891
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3897
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3901
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3907
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3911
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3915
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3919
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3924
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3932
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3939
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3944
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3948
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3954
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3960
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3964
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3974
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3978
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3982
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3988
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3994
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3998
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4007
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4013
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4017
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4023
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4027
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4033
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4037
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4041
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4045
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4051
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4055
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4068
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4072
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4076
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4080
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4086
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4088
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4092
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4094
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4098
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4100
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4103
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4105
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4108
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4112
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4116
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4129
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4133
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4137
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4143
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4149
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4153
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4157
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4161
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4167
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4171
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4181
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4195
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4201
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4210
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4216
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4220
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4226
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4230
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4234
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4238
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4243
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4247
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4251
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4255
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4265
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4272
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4276
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4280
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4284
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4288
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4292
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4299
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4303
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4307
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4311
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4317
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4321
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4325
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4329
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4333
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4337
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4341
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4345
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4349
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4353
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4357
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4363
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4367
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4371
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4375
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4379
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4383
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4387
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4391
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4395
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4399
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4403
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4407
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4411
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4417
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4421
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4425
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4429
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4433
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4437
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4441
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4445
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4449
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4453
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4457
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4461
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4465
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4469
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4473
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4477
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4481
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4485
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4489
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4497
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4501
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4509
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4513
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4519
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4523
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4527
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4533
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4537
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4543
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4547
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4554
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4558
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4562
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4566
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4572
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4576
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4580
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4584
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4588
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4592
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4596
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4602
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4606
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4610
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4617
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4623
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4627
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4637
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4659
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4663
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4671
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4675
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4679
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4683
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4687
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4691
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4695
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4706
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4710
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4716
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4720
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4725
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4729
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4733
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4737
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4741
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4745
		{
			yyLOCAL = &JSONUtilityExpr{Name: yyDollar[1].colIdent, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4749
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4753
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4757
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4761
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4765
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4771
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4779
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4786
		{
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4788
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4792
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4796
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4800
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4804
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4808
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4812
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4816
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4820
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4824
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4828
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4834
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4838
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4842
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4846
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4850
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4854
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4858
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4862
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4866
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4884
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4894
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4898
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4902
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4906
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4910
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4916
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4920
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4924
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4928
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4932
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4938
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4942
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4946
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4956
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4960
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4966
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4970
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4974
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4978
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4982
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4988
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4992
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4996
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5000
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5004
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5008
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5012
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5016
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5020
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5024
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5039
		{
			yyVAL.str = string("")
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5043
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5049
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5053
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5059
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5074
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5078
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5082
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5111
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5125
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5129
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5135
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5141
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5145
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5151
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5156
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5160
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5164
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5173
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5179
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5183
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5187
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5196
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5200
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5204
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5208
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5215
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5219
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5223
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5227
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5233
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5237
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5241
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5246
		{
			yyVAL.str = ""
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5250
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5254
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5258
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5263
		{
			yyVAL.str = ""
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5267
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5273
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5282
		{
			yyVAL.str = ""
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5286
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5291
		{
			yyVAL.str = "cascaded"
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5304
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5308
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5314
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5320
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5326
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5335
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5339
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5344
		{
			yyVAL.str = ""
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5348
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5354
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5358
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5364
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5368
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5372
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5377
		{
			yyVAL.str = ""
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5381
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5385
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5390
		{
			yyVAL.str = ""
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5394
		{
			yyVAL.str = " header"
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5399
		{
			yyVAL.str = ""
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5403
		{
			yyVAL.str = " manifest on"
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5407
		{
			yyVAL.str = " manifest off"
		}
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5412
		{
			yyVAL.str = ""
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5416
		{
			yyVAL.str = " overwrite on"
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5420
		{
			yyVAL.str = " overwrite off"
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5426
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5431
		{
			yyVAL.str = ""
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5435
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5441
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5445
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5451
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5455
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5460
		{
			yyVAL.str = ""
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5464
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5470
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5474
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5480
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5484
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5488
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5493
		{
			yyVAL.str = ""
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5497
		{
			yyVAL.str = " optionally"
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5510
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5514
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5518
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5522
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5526
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5532
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5536
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5540
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5544
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5549
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5553
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5559
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5563
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5569
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5573
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5579
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5594
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5598
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5604
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5610
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5614
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5620
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5624
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5628
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5632
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5636
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5644
		{
			yyVAL.str = "charset"
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5654
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5658
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5662
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5671
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5673
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5676
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5678
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5681
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5683
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5686
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5688
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5691
		{
			yyVAL.empty = struct{}{}
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5693
		{
			yyVAL.empty = struct{}{}
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5695
		{
			yyVAL.empty = struct{}{}
		}
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5699
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5704
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5708
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5715
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5719
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5729
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5736
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5742
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5746
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5752
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5756
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5763
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6241
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6250
		{
			decNesting(yylex)
		}
	case 1615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6255
		{
			skipToEnd(yylex)
		}
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6260
		{
			skipToEnd(yylex)
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6264
		{
			skipToEnd(yylex)
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6268
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
