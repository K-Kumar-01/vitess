// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const BOTH = 57453
const LEADING = 57454
const TRAILING = 57455
const EMPTY_FROM_CLAUSE = 57456
const LOWER_THAN_CHARSET = 57457
const CHARSET = 57458
const UNIQUE = 57459
const KEY = 57460
const EXPRESSION_PREC_SETTER = 57461
const OR = 57462
const XOR = 57463
const AND = 57464
const NOT = 57465
const BETWEEN = 57466
const CASE = 57467
const WHEN = 57468
const THEN = 57469
const ELSE = 57470
const END = 57471
const LE = 57472
const GE = 57473
const NE = 57474
const NULL_SAFE_EQUAL = 57475
const IS = 57476
const LIKE = 57477
const REGEXP = 57478
const IN = 57479
const SHIFT_LEFT = 57480
const SHIFT_RIGHT = 57481
const DIV = 57482
const MOD = 57483
const UNARY = 57484
const COLLATE = 57485
const BINARY = 57486
const UNDERSCORE_ARMSCII8 = 57487
const UNDERSCORE_ASCII = 57488
const UNDERSCORE_BIG5 = 57489
const UNDERSCORE_BINARY = 57490
const UNDERSCORE_CP1250 = 57491
const UNDERSCORE_CP1251 = 57492
const UNDERSCORE_CP1256 = 57493
const UNDERSCORE_CP1257 = 57494
const UNDERSCORE_CP850 = 57495
const UNDERSCORE_CP852 = 57496
const UNDERSCORE_CP866 = 57497
const UNDERSCORE_CP932 = 57498
const UNDERSCORE_DEC8 = 57499
const UNDERSCORE_EUCJPMS = 57500
const UNDERSCORE_EUCKR = 57501
const UNDERSCORE_GB18030 = 57502
const UNDERSCORE_GB2312 = 57503
const UNDERSCORE_GBK = 57504
const UNDERSCORE_GEOSTD8 = 57505
const UNDERSCORE_GREEK = 57506
const UNDERSCORE_HEBREW = 57507
const UNDERSCORE_HP8 = 57508
const UNDERSCORE_KEYBCS2 = 57509
const UNDERSCORE_KOI8R = 57510
const UNDERSCORE_KOI8U = 57511
const UNDERSCORE_LATIN1 = 57512
const UNDERSCORE_LATIN2 = 57513
const UNDERSCORE_LATIN5 = 57514
const UNDERSCORE_LATIN7 = 57515
const UNDERSCORE_MACCE = 57516
const UNDERSCORE_MACROMAN = 57517
const UNDERSCORE_SJIS = 57518
const UNDERSCORE_SWE7 = 57519
const UNDERSCORE_TIS620 = 57520
const UNDERSCORE_UCS2 = 57521
const UNDERSCORE_UJIS = 57522
const UNDERSCORE_UTF16 = 57523
const UNDERSCORE_UTF16LE = 57524
const UNDERSCORE_UTF32 = 57525
const UNDERSCORE_UTF8 = 57526
const UNDERSCORE_UTF8MB4 = 57527
const INTERVAL = 57528
const JSON_EXTRACT_OP = 57529
const JSON_UNQUOTE_EXTRACT_OP = 57530
const CREATE = 57531
const ALTER = 57532
const DROP = 57533
const RENAME = 57534
const ANALYZE = 57535
const ADD = 57536
const FLUSH = 57537
const CHANGE = 57538
const MODIFY = 57539
const DEALLOCATE = 57540
const REVERT = 57541
const SCHEMA = 57542
const TABLE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const SPATIAL = 57551
const FULLTEXT = 57552
const KEY_BLOCK_SIZE = 57553
const CHECK = 57554
const INDEXES = 57555
const ACTION = 57556
const CASCADE = 57557
const CONSTRAINT = 57558
const FOREIGN = 57559
const NO = 57560
const REFERENCES = 57561
const RESTRICT = 57562
const SHOW = 57563
const DESCRIBE = 57564
const EXPLAIN = 57565
const DATE = 57566
const ESCAPE = 57567
const REPAIR = 57568
const OPTIMIZE = 57569
const TRUNCATE = 57570
const COALESCE = 57571
const EXCHANGE = 57572
const REBUILD = 57573
const PARTITIONING = 57574
const REMOVE = 57575
const PREPARE = 57576
const EXECUTE = 57577
const MAXVALUE = 57578
const PARTITION = 57579
const REORGANIZE = 57580
const LESS = 57581
const THAN = 57582
const PROCEDURE = 57583
const TRIGGER = 57584
const VINDEX = 57585
const VINDEXES = 57586
const DIRECTORY = 57587
const NAME = 57588
const UPGRADE = 57589
const STATUS = 57590
const VARIABLES = 57591
const WARNINGS = 57592
const CASCADED = 57593
const DEFINER = 57594
const OPTION = 57595
const SQL = 57596
const UNDEFINED = 57597
const SEQUENCE = 57598
const MERGE = 57599
const TEMPORARY = 57600
const TEMPTABLE = 57601
const INVOKER = 57602
const SECURITY = 57603
const FIRST = 57604
const AFTER = 57605
const LAST = 57606
const VITESS_MIGRATION = 57607
const CANCEL = 57608
const RETRY = 57609
const COMPLETE = 57610
const CLEANUP = 57611
const BEGIN = 57612
const START = 57613
const TRANSACTION = 57614
const COMMIT = 57615
const ROLLBACK = 57616
const SAVEPOINT = 57617
const RELEASE = 57618
const WORK = 57619
const BIT = 57620
const TINYINT = 57621
const SMALLINT = 57622
const MEDIUMINT = 57623
const INT = 57624
const INTEGER = 57625
const BIGINT = 57626
const INTNUM = 57627
const REAL = 57628
const DOUBLE = 57629
const FLOAT_TYPE = 57630
const DECIMAL_TYPE = 57631
const NUMERIC = 57632
const TIME = 57633
const TIMESTAMP = 57634
const DATETIME = 57635
const YEAR = 57636
const CHAR = 57637
const VARCHAR = 57638
const BOOL = 57639
const CHARACTER = 57640
const VARBINARY = 57641
const NCHAR = 57642
const TEXT = 57643
const TINYTEXT = 57644
const MEDIUMTEXT = 57645
const LONGTEXT = 57646
const BLOB = 57647
const TINYBLOB = 57648
const MEDIUMBLOB = 57649
const LONGBLOB = 57650
const JSON = 57651
const JSON_SCHEMA_VALID = 57652
const JSON_SCHEMA_VALIDATION_REPORT = 57653
const ENUM = 57654
const GEOMETRY = 57655
const POINT = 57656
const LINESTRING = 57657
const POLYGON = 57658
const GEOMETRYCOLLECTION = 57659
const MULTIPOINT = 57660
const MULTILINESTRING = 57661
const MULTIPOLYGON = 57662
const ASCII = 57663
const UNICODE = 57664
const NULLX = 57665
const AUTO_INCREMENT = 57666
const APPROXNUM = 57667
const SIGNED = 57668
const UNSIGNED = 57669
const ZEROFILL = 57670
const CODE = 57671
const COLLATION = 57672
const COLUMNS = 57673
const DATABASES = 57674
const ENGINES = 57675
const EVENT = 57676
const EXTENDED = 57677
const FIELDS = 57678
const FULL = 57679
const FUNCTION = 57680
const GTID_EXECUTED = 57681
const KEYSPACES = 57682
const OPEN = 57683
const PLUGINS = 57684
const PRIVILEGES = 57685
const PROCESSLIST = 57686
const SCHEMAS = 57687
const TABLES = 57688
const TRIGGERS = 57689
const USER = 57690
const VGTID_EXECUTED = 57691
const VITESS_KEYSPACES = 57692
const VITESS_METADATA = 57693
const VITESS_MIGRATIONS = 57694
const VITESS_REPLICATION_STATUS = 57695
const VITESS_SHARDS = 57696
const VITESS_TABLETS = 57697
const VSCHEMA = 57698
const NAMES = 57699
const GLOBAL = 57700
const SESSION = 57701
const ISOLATION = 57702
const LEVEL = 57703
const READ = 57704
const WRITE = 57705
const ONLY = 57706
const REPEATABLE = 57707
const COMMITTED = 57708
const UNCOMMITTED = 57709
const SERIALIZABLE = 57710
const CURRENT_TIMESTAMP = 57711
const DATABASE = 57712
const CURRENT_DATE = 57713
const CURRENT_TIME = 57714
const LOCALTIME = 57715
const LOCALTIMESTAMP = 57716
const CURRENT_USER = 57717
const UTC_DATE = 57718
const UTC_TIME = 57719
const UTC_TIMESTAMP = 57720
const DAY = 57721
const DAY_HOUR = 57722
const DAY_MICROSECOND = 57723
const DAY_MINUTE = 57724
const DAY_SECOND = 57725
const HOUR = 57726
const HOUR_MICROSECOND = 57727
const HOUR_MINUTE = 57728
const HOUR_SECOND = 57729
const MICROSECOND = 57730
const MINUTE = 57731
const MINUTE_MICROSECOND = 57732
const MINUTE_SECOND = 57733
const MONTH = 57734
const QUARTER = 57735
const SECOND = 57736
const SECOND_MICROSECOND = 57737
const YEAR_MONTH = 57738
const WEEK = 57739
const REPLACE = 57740
const CONVERT = 57741
const CAST = 57742
const SUBSTR = 57743
const SUBSTRING = 57744
const GROUP_CONCAT = 57745
const SEPARATOR = 57746
const TIMESTAMPADD = 57747
const TIMESTAMPDIFF = 57748
const WEIGHT_STRING = 57749
const LTRIM = 57750
const RTRIM = 57751
const TRIM = 57752
const MATCH = 57753
const AGAINST = 57754
const BOOLEAN = 57755
const LANGUAGE = 57756
const WITH = 57757
const QUERY = 57758
const EXPANSION = 57759
const WITHOUT = 57760
const VALIDATION = 57761
const UNUSED = 57762
const ARRAY = 57763
const CUME_DIST = 57764
const DESCRIPTION = 57765
const DENSE_RANK = 57766
const EMPTY = 57767
const EXCEPT = 57768
const FIRST_VALUE = 57769
const GROUPING = 57770
const GROUPS = 57771
const JSON_TABLE = 57772
const LAG = 57773
const LAST_VALUE = 57774
const LATERAL = 57775
const LEAD = 57776
const MEMBER = 57777
const NTH_VALUE = 57778
const NTILE = 57779
const OF = 57780
const OVER = 57781
const PERCENT_RANK = 57782
const RANK = 57783
const RECURSIVE = 57784
const ROW_NUMBER = 57785
const SYSTEM = 57786
const WINDOW = 57787
const ACTIVE = 57788
const ADMIN = 57789
const BUCKETS = 57790
const CLONE = 57791
const COMPONENT = 57792
const DEFINITION = 57793
const ENFORCED = 57794
const EXCLUDE = 57795
const FOLLOWING = 57796
const GEOMCOLLECTION = 57797
const GET_MASTER_PUBLIC_KEY = 57798
const HISTOGRAM = 57799
const HISTORY = 57800
const INACTIVE = 57801
const INVISIBLE = 57802
const LOCKED = 57803
const MASTER_COMPRESSION_ALGORITHMS = 57804
const MASTER_PUBLIC_KEY_PATH = 57805
const MASTER_TLS_CIPHERSUITES = 57806
const MASTER_ZSTD_COMPRESSION_LEVEL = 57807
const NESTED = 57808
const NETWORK_NAMESPACE = 57809
const NOWAIT = 57810
const NULLS = 57811
const OJ = 57812
const OLD = 57813
const OPTIONAL = 57814
const ORDINALITY = 57815
const ORGANIZATION = 57816
const OTHERS = 57817
const PATH = 57818
const PERSIST = 57819
const PERSIST_ONLY = 57820
const PRECEDING = 57821
const PRIVILEGE_CHECKS_USER = 57822
const PROCESS = 57823
const RANDOM = 57824
const REFERENCE = 57825
const REQUIRE_ROW_FORMAT = 57826
const RESOURCE = 57827
const RESPECT = 57828
const RESTART = 57829
const RETAIN = 57830
const REUSE = 57831
const ROLE = 57832
const SECONDARY = 57833
const SECONDARY_ENGINE = 57834
const SECONDARY_LOAD = 57835
const SECONDARY_UNLOAD = 57836
const SKIP = 57837
const SRID = 57838
const THREAD_PRIORITY = 57839
const TIES = 57840
const UNBOUNDED = 57841
const VCPU = 57842
const VISIBLE = 57843
const FORMAT = 57844
const TREE = 57845
const VITESS = 57846
const TRADITIONAL = 57847
const LOCAL = 57848
const LOW_PRIORITY = 57849
const NO_WRITE_TO_BINLOG = 57850
const LOGS = 57851
const ERROR = 57852
const GENERAL = 57853
const HOSTS = 57854
const OPTIMIZER_COSTS = 57855
const USER_RESOURCES = 57856
const SLOW = 57857
const CHANNEL = 57858
const RELAY = 57859
const EXPORT = 57860
const AVG_ROW_LENGTH = 57861
const CONNECTION = 57862
const CHECKSUM = 57863
const DELAY_KEY_WRITE = 57864
const ENCRYPTION = 57865
const ENGINE = 57866
const INSERT_METHOD = 57867
const MAX_ROWS = 57868
const MIN_ROWS = 57869
const PACK_KEYS = 57870
const PASSWORD = 57871
const FIXED = 57872
const DYNAMIC = 57873
const COMPRESSED = 57874
const REDUNDANT = 57875
const COMPACT = 57876
const ROW_FORMAT = 57877
const STATS_AUTO_RECALC = 57878
const STATS_PERSISTENT = 57879
const STATS_SAMPLE_PAGES = 57880
const STORAGE = 57881
const MEMORY = 57882
const DISK = 57883
const PARTITIONS = 57884
const LINEAR = 57885
const RANGE = 57886
const LIST = 57887
const SUBPARTITION = 57888
const SUBPARTITIONS = 57889
const HASH = 57890

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 140,
	566, 140,
	-2, 146,
	-1, 48,
	119, 146,
	159, 146,
	315, 146,
	-2, 447,
	-1, 55,
	33, 626,
	219, 626,
	230, 626,
	265, 640,
	266, 640,
	-2, 628,
	-1, 60,
	221, 651,
	-2, 649,
	-1, 114,
	218, 1132,
	-2, 119,
	-1, 116,
	1, 141,
	566, 141,
	-2, 146,
	-1, 126,
	120, 350,
	224, 350,
	-2, 441,
	-1, 145,
	119, 146,
	159, 146,
	315, 146,
	-2, 456,
	-1, 621,
	203, 1153,
	-2, 1149,
	-1, 622,
	203, 1154,
	-2, 1150,
	-1, 696,
	57, 719,
	-2, 734,
	-1, 733,
	135, 1522,
	-2, 112,
	-1, 734,
	135, 1394,
	-2, 113,
	-1, 740,
	135, 1451,
	-2, 1126,
	-1, 885,
	135, 1325,
	-2, 1123,
	-1, 923,
	229, 41,
	234, 41,
	-2, 361,
	-1, 1000,
	1, 495,
	566, 495,
	-2, 146,
	-1, 1207,
	57, 720,
	-2, 739,
	-1, 1208,
	57, 721,
	-2, 740,
	-1, 1260,
	119, 146,
	159, 146,
	315, 146,
	-2, 391,
	-1, 1337,
	120, 350,
	224, 350,
	-2, 441,
	-1, 1346,
	229, 42,
	234, 42,
	-2, 362,
	-1, 1607,
	203, 1158,
	-2, 1152,
	-1, 1689,
	119, 146,
	159, 146,
	315, 146,
	-2, 392,
	-1, 1696,
	23, 165,
	-2, 167,
	-1, 1896,
	84, 39,
	-2, 775,
	-1, 1947,
	75, 94,
	84, 94,
	-2, 795,
	-1, 2121,
	47, 1094,
	-2, 1088,
	-1, 2293,
	84, 39,
	-2, 776,
	-1, 2331,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 767,
}

const yyPrivate = 57344

const yyLast = 36664

var yyAct = [...]int{
	621, 2598, 2592, 2391, 2243, 2563, 2549, 2476, 1642, 2173,
	2180, 2417, 2132, 615, 37, 1064, 3, 2214, 2135, 571,
	689, 1186, 2490, 1884, 96, 1749, 2182, 567, 616, 711,
	2225, 2302, 2133, 2226, 2136, 1621, 1222, 2422, 2296, 1661,
	624, 1919, 2322, 613, 614, 593, 2130, 2228, 2122, 1911,
	1719, 182, 565, 1979, 182, 2288, 531, 182, 563, 2049,
	2008, 1942, 547, 1012, 182, 1724, 1980, 1739, 738, 888,
	1981, 154, 182, 1675, 1360, 1931, 38, 1665, 1903, 36,
	1886, 1549, 1542, 1601, 1758, 953, 1686, 182, 1738, 559,
	1209, 693, 2065, 697, 1041, 1726, 1973, 1501, 1791, 140,
	913, 691, 918, 1666, 1949, 1252, 1231, 91, 1623, 547,
	712, 714, 547, 182, 547, 1146, 576, 1668, 1189, 1561,
	1519, 1083, 1448, 895, 735, 1351, 1452, 924, 1736, 1344,
	1646, 892, 1434, 896, 919, 1653, 1251, 920, 1715, 1249,
	703, 1057, 1235, 1457, 1312, 98, 1062, 921, 95, 157,
	117, 725, 118, 1336, 123, 931, 699, 124, 701, 698,
	996, 76, 1604, 97, 1647, 564, 554, 1153, 1149, 2521,
	2001, 89, 85, 1614, 2599, 1751, 1752, 1753, 1751, 2211,
	2028, 2027, 1789, 1999, 719, 2057, 724, 2058, 1508, 184,
	185, 186, 700, 77, 1507, 8, 7, 119, 705, 6,
	1506, 1505, 125, 1618, 1619, 1504, 1503, 1490, 2577, 557,
	90, 558, 1882, 1317, 889, 2118, 1913, 958, 1495, 2197,
	504, 1420, 2356, 2472, 904, 899, 2471, 2384, 955, 1084,
	2385, 2608, 555, 78, 957, 956, 80, 2559, 102, 692,
	690, 969, 970, 78, 973, 974, 975, 976, 732, 78,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 706, 119, 910, 2602, 909,
	713, 2532, 1829, 739, 1731, 934, 2591, 2392, 2550, 104,
	105, 1777, 108, 935, 911, 114, 1084, 2558, 179, 2531,
	2064, 499, 2435, 2276, 959, 960, 961, 1326, 1729, 2036,
	2170, 2171, 1883, 2035, 908, 178, 1005, 1006, 2169, 966,
	87, 685, 686, 687, 688, 1958, 2056, 696, 1957, 78,
	87, 1959, 971, 1048, 1826, 1050, 87, 1680, 1115, 120,
	119, 142, 1681, 1682, 1094, 1253, 1827, 1254, 1008, 1036,
	1037, 1060, 162, 1922, 1031, 727, 728, 683, 1620, 2481,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1123, 1125,
	1126, 682, 906, 1047, 1049, 1019, 1970, 1019, 1923, 2002,
	1020, 2299, 1020, 152, 1032, 2267, 999, 1025, 141, 178,
	1018, 2245, 1017, 1699, 1698, 2091, 2265, 545, 534, 1494,
	2004, 1094, 549, 534, 534, 534, 87, 2176, 1193, 159,
	543, 160, 1410, 120, 995, 142, 1759, 129, 130, 151,
	150, 177, 1496, 1497, 1498, 2009, 162, 1803, 1800, 1802,
	1801, 2031, 1440, 2238, 1805, 1797, 1806, 1728, 1807, 1090,
	1038, 2239, 1082, 972, 912, 1792, 2601, 1435, 1034, 1035,
	1039, 1054, 2177, 1059, 1040, 1001, 1411, 152, 1412, 2044,
	1808, 978, 141, 977, 1796, 1033, 1045, 2247, 1026, 2377,
	1046, 1794, 2246, 2578, 2222, 914, 942, 2179, 940, 915,
	1051, 2174, 1196, 159, 907, 160, 1762, 87, 1662, 1329,
	1798, 1338, 1339, 151, 150, 177, 1090, 915, 2184, 2185,
	952, 1827, 1044, 951, 950, 2175, 1795, 2186, 949, 182,
	948, 182, 947, 946, 182, 945, 2589, 146, 127, 153,
	134, 126, 944, 147, 148, 908, 994, 939, 2603, 163,
	2048, 893, 1052, 1127, 1029, 893, 927, 2181, 168, 135,
	926, 2596, 547, 547, 547, 1127, 893, 2092, 1449, 1350,
	891, 1737, 726, 138, 136, 131, 132, 133, 137, 2045,
	547, 547, 1887, 1889, 1783, 128, 1445, 1070, 962, 2204,
	2030, 2196, 721, 933, 139, 37, 1324, 1323, 1076, 1015,
	1322, 1021, 1022, 1023, 1024, 2221, 2020, 1446, 933, 1320,
	998, 146, 1340, 153, 535, 1337, 2511, 147, 148, 535,
	535, 535, 2183, 163, 1061, 1089, 1086, 1087, 1088, 1093,
	1095, 1092, 168, 1091, 2186, 2033, 2060, 1648, 1649, 943,
	1085, 941, 2337, 2520, 2000, 1441, 503, 498, 1840, 2043,
	1055, 1439, 2042, 1779, 2318, 1130, 1131, 1132, 1133, 1053,
	560, 1730, 1128, 1129, 2003, 1138, 2482, 1141, 1954, 2051,
	2300, 155, 81, 1349, 2050, 1127, 1184, 2468, 2530, 1918,
	1179, 968, 1089, 1086, 1087, 1088, 1093, 1095, 1092, 86,
	1091, 932, 715, 1874, 933, 1613, 1239, 1085, 2051, 86,
	1166, 997, 1010, 2050, 1687, 86, 932, 116, 1126, 1066,
	1067, 936, 926, 182, 1828, 907, 2168, 547, 547, 708,
	111, 937, 1058, 2526, 2373, 1134, 903, 2312, 954, 905,
	1793, 1042, 1888, 182, 1199, 1442, 1255, 1080, 1203, 2178,
	1028, 938, 1185, 1200, 693, 155, 149, 691, 1202, 1197,
	1014, 1030, 547, 1016, 1007, 1004, 182, 1590, 2084, 1562,
	1992, 547, 143, 2594, 1099, 144, 2595, 547, 2593, 1422,
	1421, 1423, 1424, 1425, 77, 86, 735, 1079, 1077, 933,
	112, 1078, 1458, 1436, 1562, 1437, 1854, 1097, 1438, 1098,
	1099, 1151, 932, 1152, 1155, 1524, 2086, 2431, 926, 929,
	930, 2348, 893, 2347, 1185, 1862, 923, 927, 933, 1525,
	1526, 1523, 1766, 1098, 1099, 1172, 1173, 1174, 1175, 1097,
	149, 1098, 1099, 908, 1359, 900, 933, 922, 1358, 1348,
	1190, 1778, 902, 901, 1201, 98, 143, 1776, 95, 144,
	1774, 942, 1582, 1571, 1572, 1573, 1574, 1584, 1575, 1576,
	1577, 1589, 1585, 1578, 1579, 1586, 1587, 1588, 1580, 1581,
	1583, 184, 185, 186, 1043, 1544, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 932, 1187, 967,
	1013, 906, 173, 174, 175, 176, 690, 940, 1000, 2604,
	1771, 1221, 692, 1198, 1119, 1120, 1121, 1122, 1124, 1123,
	1125, 1126, 1218, 2585, 2537, 1097, 932, 1098, 1099, 1245,
	1246, 2273, 926, 929, 930, 1459, 893, 1775, 182, 1850,
	923, 927, 1313, 2338, 932, 739, 2271, 1216, 1771, 936,
	926, 1321, 1240, 2606, 1250, 1545, 2538, 1654, 1655, 937,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 2504, 547, 1216, 1346, 1773, 173, 174, 175, 176,
	1566, 1429, 1355, 2605, 1204, 1097, 1357, 1098, 1099, 547,
	547, 1427, 547, 2463, 547, 547, 1216, 547, 547, 547,
	547, 547, 547, 2505, 1356, 2569, 1832, 1833, 1834, 2567,
	2407, 1849, 547, 907, 87, 1417, 182, 1393, 2571, 2572,
	1121, 1122, 1124, 1123, 1125, 1126, 2184, 2185, 1522, 1388,
	1389, 2406, 182, 2568, 1097, 2355, 1098, 1099, 1514, 1516,
	1517, 1342, 2587, 547, 1428, 182, 1867, 1327, 1328, 1216,
	1097, 2354, 1098, 1099, 1426, 1097, 1447, 1098, 1099, 547,
	2212, 182, 1515, 730, 1362, 2202, 1363, 1335, 1365, 1367,
	1977, 1976, 1371, 1373, 1375, 1377, 1379, 182, 1416, 1734,
	1097, 1390, 1098, 1099, 182, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1101, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 547, 547, 547, 1430, 1353, 1396, 1397, 1319,
	1415, 1354, 1414, 1402, 1403, 1413, 1845, 1843, 1345, 1216,
	1332, 1333, 1404, 1398, 1331, 1844, 1225, 1395, 1394, 1454,
	2183, 1229, 2517, 182, 1369, 1352, 1352, 2242, 2586, 1462,
	1406, 1216, 2186, 635, 636, 637, 1466, 2508, 1468, 1469,
	1470, 1471, 2507, 2506, 2430, 1475, 2279, 1097, 1894, 1098,
	1099, 1893, 1460, 1461, 1097, 2428, 1098, 1099, 2403, 1489,
	1097, 2278, 1098, 1099, 1100, 1226, 1465, 1391, 1543, 1097,
	1450, 1098, 1099, 1472, 1473, 1474, 2461, 2352, 2344, 1520,
	1986, 1552, 547, 1325, 1974, 1097, 1228, 1098, 1099, 1787,
	119, 910, 1147, 909, 184, 185, 186, 547, 547, 1786,
	1097, 1518, 1098, 1099, 1645, 1627, 1528, 1097, 1563, 1098,
	1099, 1464, 1547, 1546, 1097, 2374, 1098, 1099, 1869, 1115,
	2489, 2059, 1605, 1491, 1868, 1097, 1455, 1098, 1099, 184,
	185, 186, 182, 2345, 1418, 560, 1488, 547, 1485, 1486,
	1487, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1123,
	1125, 1126, 1405, 1097, 1626, 1098, 1099, 1097, 1978, 1098,
	1099, 182, 1401, 1097, 547, 1098, 1099, 1521, 1400, 1399,
	1632, 1227, 1633, 1056, 182, 1607, 1069, 547, 92, 184,
	185, 186, 182, 1961, 182, 94, 182, 182, 547, 93,
	2488, 547, 1609, 1610, 92, 1605, 1097, 2457, 1098, 1099,
	1909, 2600, 547, 735, 94, 93, 735, 184, 185, 186,
	2456, 1747, 599, 184, 185, 186, 1920, 1745, 1527, 1232,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1606, 2390, 95, 1909, 2556, 1548, 2010,
	1638, 1989, 101, 1216, 1927, 1554, 1555, 1664, 1607, 1909,
	2543, 1909, 2541, 100, 95, 99, 622, 547, 2163, 1216,
	2533, 1216, 1216, 1740, 1741, 1742, 705, 1827, 1744, 1746,
	1608, 1691, 1690, 1611, 1612, 1909, 2522, 2382, 2519, 1909,
	2464, 2131, 547, 1695, 1673, 1772, 101, 1928, 547, 1355,
	1696, 2311, 1355, 1920, 1355, 2382, 1216, 100, 1928, 99,
	1770, 1640, 1721, 2311, 1694, 2313, 1659, 183, 94, 1637,
	183, 1909, 2380, 183, 1771, 1216, 1096, 1760, 548, 1657,
	183, 2575, 1216, 1727, 2525, 1678, 1909, 1677, 183, 2066,
	547, 1928, 1543, 2316, 1216, 100, 1693, 1543, 1543, 1692,
	2194, 2193, 1771, 183, 2192, 1705, 1706, 1707, 1708, 2190,
	2191, 1757, 739, 2190, 2189, 739, 1928, 1216, 1841, 1216,
	1827, 2029, 1316, 2014, 2311, 548, 1216, 1950, 548, 183,
	548, 2006, 2007, 182, 1909, 1908, 1096, 1216, 1316, 1315,
	182, 1261, 1260, 2106, 1722, 182, 182, 1717, 1718, 182,
	1732, 182, 1735, 1733, 1743, 1679, 1841, 2357, 182, 1780,
	1859, 1858, 1771, 1841, 1950, 182, 1754, 1652, 1220, 1616,
	2068, 1764, 1499, 1763, 1782, 1781, 1767, 1722, 1765, 1784,
	1785, 1768, 1700, 1769, 1701, 1702, 1703, 1704, 934, 1115,
	1951, 1839, 1444, 182, 547, 1905, 935, 2452, 2453, 1953,
	1711, 1712, 1713, 1714, 1247, 917, 1352, 2358, 2359, 2360,
	94, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1123,
	1125, 1126, 916, 2546, 1818, 1819, 87, 1951, 2478, 1821,
	1790, 1223, 2078, 2077, 2076, 2070, 1827, 2074, 1822, 2069,
	2454, 2067, 695, 2442, 2372, 2369, 2072, 2350, 2282, 2281,
	1318, 1720, 1520, 2240, 2217, 2071, 617, 2213, 594, 596,
	618, 619, 1384, 592, 595, 620, 2580, 1841, 2015, 1811,
	1716, 1710, 2073, 2075, 1709, 1432, 1347, 1456, 1837, 1115,
	1343, 1314, 1111, 113, 1112, 2361, 2215, 1983, 1982, 999,
	2323, 2324, 597, 598, 2448, 2449, 2450, 2451, 1113, 1114,
	1110, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1123,
	1125, 1126, 1385, 1386, 1387, 2244, 1381, 182, 2479, 87,
	1731, 1825, 1630, 2582, 2564, 182, 2326, 2209, 2208, 1880,
	2329, 547, 2362, 2363, 2207, 1983, 2131, 547, 1993, 1897,
	1521, 1812, 1492, 2155, 1835, 1937, 1938, 2328, 547, 1117,
	1118, 1119, 1120, 1121, 1122, 1124, 1123, 1125, 1126, 1509,
	1510, 1511, 1512, 1382, 1383, 2153, 606, 2151, 2150, 2149,
	2154, 182, 2152, 182, 2557, 37, 1644, 1224, 1924, 1636,
	1853, 2412, 1607, 2411, 1944, 2123, 2125, 2317, 1960, 2111,
	1836, 2110, 1838, 2304, 2126, 2503, 2012, 2421, 2307, 1550,
	1551, 2303, 1933, 1936, 1937, 1938, 1934, 1556, 1935, 1939,
	1865, 2423, 2323, 2324, 2120, 1443, 681, 2188, 1968, 1987,
	1851, 964, 1591, 1592, 1593, 1595, 1599, 1600, 546, 1906,
	709, 2410, 547, 1891, 1190, 1881, 963, 182, 710, 1558,
	1606, 92, 2254, 92, 182, 1902, 1982, 2054, 94, 1068,
	1943, 2022, 93, 1559, 93, 560, 547, 2021, 1907, 1917,
	101, 1964, 120, 547, 2005, 1871, 1872, 1355, 1355, 2309,
	1948, 100, 547, 99, 94, 737, 1910, 2205, 890, 1952,
	897, 1815, 94, 2518, 2026, 1955, 1654, 1655, 2474, 1962,
	2187, 1650, 1651, 1727, 1965, 182, 182, 182, 182, 182,
	1941, 1641, 1933, 1936, 1937, 1938, 1934, 1975, 1935, 1939,
	717, 718, 182, 182, 1985, 183, 2109, 183, 1685, 1804,
	183, 1984, 2289, 1831, 2108, 101, 99, 2495, 182, 1994,
	1995, 1996, 1971, 1972, 1990, 2494, 100, 100, 99, 2297,
	2429, 2427, 2024, 2426, 2419, 2370, 1543, 2308, 548, 548,
	548, 2306, 2218, 1755, 1335, 1920, 1115, 1330, 716, 1214,
	1210, 2418, 101, 2584, 2583, 2023, 548, 548, 1905, 2025,
	2093, 1860, 2083, 100, 1211, 547, 691, 1723, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1124, 1123, 1125, 1126, 1628,
	2100, 547, 1241, 2062, 1233, 2584, 2016, 2017, 2061, 1634,
	1635, 1213, 2509, 1212, 106, 107, 182, 2343, 707, 2046,
	547, 103, 2052, 88, 1, 2053, 630, 2566, 516, 547,
	1617, 1188, 530, 2063, 2562, 1419, 547, 547, 2080, 182,
	182, 182, 182, 182, 2100, 1409, 2393, 2079, 2475, 697,
	2143, 182, 2134, 2011, 1761, 2113, 182, 2134, 182, 2128,
	182, 2368, 2137, 182, 182, 182, 1725, 2099, 925, 1203,
	1944, 145, 1688, 1689, 2552, 2105, 2101, 2114, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1124, 1123, 1125, 1126, 110,
	886, 2112, 109, 2162, 928, 1027, 1756, 2383, 2203, 1969,
	1697, 1267, 1265, 1266, 182, 1264, 1269, 2115, 1268, 183,
	1263, 2142, 699, 548, 548, 698, 2144, 547, 1861, 2147,
	1493, 2164, 544, 1940, 2165, 2156, 547, 180, 1256, 183,
	1234, 182, 965, 1454, 2224, 2160, 2161, 2166, 506, 2220,
	2195, 182, 1788, 2145, 2146, 2172, 2148, 512, 548, 1139,
	2107, 1956, 183, 2102, 2103, 2104, 182, 548, 2199, 182,
	736, 2198, 729, 548, 1629, 95, 1214, 1210, 1895, 2255,
	2139, 2301, 2119, 2121, 1912, 2124, 2232, 2231, 2200, 2201,
	2117, 1211, 2502, 2420, 2544, 1966, 2219, 1230, 1852, 1560,
	2223, 1669, 1727, 1625, 2235, 1513, 569, 568, 566, 1898,
	1921, 1102, 625, 1885, 1242, 1932, 1207, 1208, 1213, 1930,
	1212, 2250, 1929, 1813, 1674, 2325, 2249, 547, 182, 2321,
	1667, 1904, 577, 2257, 570, 562, 2252, 2253, 2256, 623,
	2340, 2263, 2230, 2032, 2241, 1855, 2034, 1967, 2237, 1081,
	1206, 556, 898, 1557, 2480, 2466, 1830, 2275, 1205, 1569,
	1570, 2210, 1748, 63, 41, 1594, 551, 2576, 1072, 723,
	32, 31, 30, 29, 2295, 28, 23, 1147, 22, 2290,
	2291, 21, 20, 19, 182, 25, 18, 2298, 17, 16,
	2305, 115, 50, 47, 45, 122, 121, 48, 44, 2310,
	1002, 42, 2346, 27, 26, 2320, 15, 182, 14, 13,
	2327, 12, 11, 10, 2330, 9, 5, 4, 737, 737,
	737, 35, 2333, 34, 183, 182, 2335, 2336, 182, 182,
	182, 33, 1075, 24, 2, 1232, 1071, 1073, 547, 547,
	2232, 2231, 2341, 1215, 2342, 2334, 2375, 2376, 1998, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 0, 0, 547, 547, 547, 547, 0,
	0, 2378, 0, 0, 0, 548, 548, 0, 548, 0,
	548, 548, 0, 548, 548, 548, 548, 548, 548, 0,
	0, 0, 0, 2389, 2387, 2388, 0, 0, 548, 0,
	2260, 2261, 183, 2262, 0, 0, 2264, 0, 2266, 0,
	2268, 0, 0, 182, 0, 0, 0, 1182, 183, 0,
	0, 0, 0, 0, 0, 2402, 0, 0, 0, 548,
	0, 183, 0, 0, 0, 0, 0, 547, 0, 547,
	2351, 0, 2353, 0, 0, 548, 0, 183, 2415, 37,
	0, 2134, 2436, 2425, 2416, 0, 2438, 0, 2424, 0,
	0, 2440, 2137, 183, 2432, 691, 2137, 0, 2434, 0,
	183, 0, 0, 1194, 1195, 0, 0, 0, 0, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 548, 548,
	548, 2447, 0, 547, 0, 2444, 2445, 0, 0, 0,
	0, 2462, 0, 0, 0, 0, 0, 0, 1237, 0,
	0, 0, 2399, 547, 0, 0, 2460, 737, 0, 183,
	2459, 2458, 0, 1257, 0, 0, 2465, 2469, 2477, 0,
	547, 0, 2081, 2082, 547, 547, 2470, 2085, 0, 0,
	0, 2087, 2088, 2089, 2398, 0, 0, 0, 2499, 0,
	2094, 2095, 2096, 0, 0, 0, 2496, 2497, 0, 2498,
	0, 2501, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 2513, 0, 0, 2510, 547, 0, 0, 548, 0,
	0, 0, 0, 2516, 2137, 2514, 0, 0, 0, 691,
	2512, 0, 0, 548, 548, 0, 0, 0, 0, 547,
	182, 0, 0, 2129, 0, 0, 0, 2527, 37, 0,
	0, 2524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 2539, 0, 0, 0, 547, 547, 0, 2134,
	0, 0, 37, 2551, 547, 2545, 0, 183, 0, 2547,
	548, 2477, 2553, 0, 2542, 0, 0, 0, 0, 0,
	183, 0, 2573, 548, 2565, 2570, 0, 0, 183, 0,
	183, 2579, 183, 183, 548, 2216, 0, 548, 2581, 0,
	0, 0, 0, 0, 0, 0, 547, 0, 548, 0,
	0, 0, 0, 2590, 2588, 0, 0, 2597, 890, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 1182, 2607, 0, 0, 1361, 1361, 0, 1361, 0,
	1361, 1361, 0, 1370, 1361, 1361, 1361, 1361, 1361, 0,
	0, 0, 0, 120, 0, 0, 1182, 1182, 890, 0,
	0, 0, 0, 548, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2277,
	0, 0, 0, 0, 0, 0, 2283, 0, 548, 1431,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1451, 0, 0, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 160, 0, 0, 0, 0,
	0, 560, 0, 0, 0, 177, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 737,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 183, 183, 0, 0, 183, 0, 183, 0, 0,
	0, 0, 0, 0, 183, 0, 2371, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2386, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1553, 183,
	548, 0, 0, 163, 0, 1182, 0, 0, 0, 0,
	0, 0, 168, 1567, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 2400, 0, 2401, 0, 0, 0,
	0, 2404, 2405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2433, 0, 0, 120, 0,
	0, 0, 0, 0, 0, 0, 2441, 0, 0, 2443,
	1643, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2446, 1237, 0, 0, 737, 0, 0, 0,
	0, 0, 0, 2455, 737, 0, 0, 737, 0, 0,
	0, 0, 1217, 1219, 0, 0, 0, 0, 890, 0,
	0, 0, 0, 183, 0, 155, 0, 0, 0, 0,
	0, 183, 560, 0, 0, 0, 0, 548, 159, 0,
	160, 0, 0, 548, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 548, 0, 0, 0, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2500, 560, 897, 0, 0, 0, 183, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 890, 0,
	0, 0, 0, 0, 897, 0, 0, 0, 0, 181,
	0, 0, 502, 0, 0, 542, 0, 0, 0, 0,
	560, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	502, 0, 0, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 183, 0, 704, 890, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 722, 548, 722, 0, 0, 0, 168, 0, 548,
	0, 502, 178, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 0, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 0, 142, 2574,
	0, 183, 183, 183, 183, 183, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 183,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 0, 0, 0, 183, 0, 173, 174, 175, 176,
	152, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 160, 0,
	0, 0, 0, 0, 1338, 1339, 151, 150, 177, 0,
	155, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 548, 0, 0, 0, 0,
	0, 0, 548, 548, 0, 183, 183, 183, 183, 183,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 183, 0, 183, 0, 183, 0, 0, 183,
	183, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 0, 0, 146, 1340, 153, 0, 1337, 0,
	147, 148, 0, 0, 0, 0, 163, 1643, 0, 0,
	0, 0, 0, 1899, 0, 168, 0, 0, 0, 0,
	183, 0, 0, 0, 1914, 0, 0, 0, 0, 0,
	0, 0, 0, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 1564, 0, 0, 0, 1565, 0,
	0, 0, 0, 0, 0, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 0, 0, 1988, 0,
	0, 173, 174, 175, 176, 0, 0, 0, 0, 1217,
	1615, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	1191, 0, 1643, 548, 183, 0, 0, 0, 0, 2013,
	0, 0, 0, 0, 0, 0, 0, 0, 2018, 0,
	0, 0, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 39, 40, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 502, 0, 502,
	0, 0, 502, 84, 501, 0, 0, 43, 69, 70,
	183, 67, 71, 0, 550, 0, 0, 0, 0, 0,
	68, 0, 684, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 143,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 56,
	0, 183, 0, 0, 183, 183, 183, 0, 0, 0,
	87, 0, 0, 894, 548, 548, 0, 0, 0, 0,
	0, 737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 0, 0,
	0, 548, 548, 548, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2116, 0, 0, 0,
	0, 0, 0, 0, 0, 737, 0, 0, 0, 1182,
	0, 0, 2141, 1361, 1182, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 0, 0, 0, 0, 0, 173,
	174, 175, 176, 548, 0, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 502, 0, 46, 49, 52, 51, 54, 0, 66,
	0, 0, 75, 72, 632, 79, 0, 0, 0, 0,
	0, 704, 0, 890, 0, 0, 1182, 0, 0, 0,
	0, 0, 1643, 0, 0, 55, 83, 82, 0, 548,
	64, 65, 53, 0, 502, 0, 0, 0, 73, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 548, 0, 0, 0,
	548, 548, 0, 0, 57, 58, 0, 59, 60, 61,
	62, 0, 694, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 548,
	0, 0, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 1842, 2116, 0, 0, 1846, 0, 1847, 1848,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 0,
	1857, 0, 0, 0, 0, 548, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 1864, 0, 1866,
	0, 0, 0, 0, 0, 1870, 0, 0, 548, 0,
	0, 0, 1875, 1876, 1877, 1878, 1879, 0, 1639, 0,
	0, 0, 548, 548, 0, 0, 0, 0, 0, 1892,
	548, 0, 0, 0, 0, 0, 502, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 0, 0, 0, 1643, 1643, 0, 0, 0, 0,
	0, 0, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1183, 0, 0, 0, 0, 0, 0,
	0, 2394, 2395, 2396, 2397, 0, 0, 0, 0, 1003,
	0, 1009, 0, 0, 1011, 0, 0, 0, 1183, 1183,
	0, 0, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1182, 1453,
	0, 0, 0, 2437, 0, 2439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 1476, 1477, 502, 502, 502, 502, 502, 502, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 502, 0, 0, 0, 0, 0, 0, 0, 737,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2492, 0, 0, 0,
	2492, 2492, 0, 0, 0, 2090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2097, 2098, 0, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 0, 0, 1643,
	0, 722, 722, 0, 0, 0, 0, 1183, 0, 0,
	0, 1643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 1453, 722, 722, 722, 722,
	722, 0, 0, 0, 0, 1643, 1244, 0, 0, 2140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 0, 2158, 2159, 0, 0,
	0, 0, 0, 0, 0, 722, 1182, 0, 2540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 0, 737, 737, 0, 0, 1063, 1063, 1063, 0,
	2560, 0, 502, 0, 0, 0, 0, 0, 1453, 0,
	502, 0, 502, 0, 502, 1676, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 694, 1135, 1136, 1137, 0, 1140, 0,
	1142, 1143, 1144, 1145, 0, 1148, 1150, 1150, 0, 1150,
	1154, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 0, 1167, 1168, 1169, 1170, 1171, 0, 0,
	0, 0, 1154, 1154, 1154, 1154, 0, 0, 0, 2259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2269, 2270, 2272, 2274, 0, 1262, 0,
	0, 0, 0, 2280, 0, 0, 0, 0, 2284, 2285,
	2286, 0, 0, 2287, 0, 0, 0, 0, 0, 2292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 0, 0, 0, 0, 694, 0, 0, 0, 694,
	0, 0, 2314, 2315, 0, 694, 2319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2331, 2332, 1392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 502, 0, 0, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 502, 502, 1433, 0, 502, 0, 1816,
	0, 0, 0, 0, 0, 0, 502, 0, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1463, 0, 2381,
	0, 0, 0, 0, 1467, 0, 0, 0, 0, 0,
	0, 502, 0, 0, 0, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 0, 0, 0, 2408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 722, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 1453, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2473, 0, 0, 0, 0, 0, 0, 521, 0, 0,
	0, 0, 0, 0, 2483, 2484, 2485, 0, 2486, 2487,
	0, 0, 0, 2491, 0, 0, 0, 0, 0, 502,
	0, 502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1656, 0, 0, 0, 0, 0,
	0, 0, 1660, 520, 1663, 1284, 0, 1502, 0, 0,
	2515, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2529, 502, 0, 0, 0, 0,
	0, 0, 1997, 0, 2534, 515, 1063, 1063, 1063, 0,
	2535, 2536, 0, 0, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 2548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 502, 502, 502, 502, 502, 0, 0,
	0, 0, 535, 0, 0, 0, 0, 0, 0, 0,
	502, 502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1272, 502, 0, 0, 0,
	0, 0, 0, 0, 505, 0, 507, 522, 0, 537,
	722, 536, 511, 0, 509, 513, 523, 514, 0, 508,
	0, 519, 0, 0, 510, 524, 525, 527, 541, 540,
	528, 0, 517, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 0, 0, 0, 0, 0, 0,
	1799, 0, 0, 0, 0, 1809, 1810, 0, 0, 1814,
	0, 0, 0, 0, 502, 0, 1285, 0, 1817, 0,
	0, 0, 0, 0, 0, 1820, 0, 0, 0, 0,
	0, 1183, 0, 0, 0, 0, 1183, 502, 502, 502,
	502, 502, 0, 0, 0, 0, 0, 0, 0, 2157,
	1670, 0, 0, 1823, 502, 0, 1407, 0, 502, 0,
	0, 502, 2167, 1453, 0, 0, 0, 0, 0, 0,
	1298, 1301, 1302, 1303, 1304, 1305, 1306, 0, 1307, 1308,
	1309, 1310, 1311, 1286, 1287, 1288, 1289, 1270, 1271, 1299,
	0, 1273, 0, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 502, 0, 1283, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 0, 0, 0, 0, 0, 1183, 0,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 502, 0, 0, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 502, 0, 0, 502, 502, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2037, 2038, 2039, 2040, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1502, 2047, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1183, 0, 87, 0, 0, 0, 0, 1890, 626, 633,
	634, 635, 636, 637, 627, 629, 0, 0, 0, 628,
	0, 0, 631, 638, 639, 0, 694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1925, 1926, 0, 0,
	0, 0, 0, 0, 0, 1945, 1946, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2233, 2234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 2206, 626, 633, 634, 635, 636,
	637, 627, 629, 0, 0, 0, 628, 0, 0, 631,
	638, 639, 0, 0, 0, 0, 0, 2019, 0, 0,
	0, 2227, 0, 0, 0, 0, 0, 0, 502, 0,
	0, 2236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2248, 0, 0, 2251,
	0, 0, 0, 0, 0, 2233, 2234, 0, 1183, 0,
	0, 0, 0, 0, 0, 0, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 2294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2138, 0,
	79, 0, 0, 1670, 1670, 1670, 1670, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2349, 0, 0,
	1945, 694, 0, 0, 1670, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 2364, 0, 0, 2365, 2366,
	2367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 618, 619, 0, 0,
	0, 620, 0, 0, 0, 0, 0, 0, 0, 2258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2409, 0, 2413, 2414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2138, 0,
	79, 0, 2138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1159, 1160, 1161, 1162, 1163, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 868, 853, 423,
	0, 800, 871, 770, 788, 881, 791, 794, 835, 749,
	814, 344, 785, 79, 774, 744, 780, 745, 772, 802,
	244, 769, 855, 818, 870, 299, 241, 751, 775, 358,
	790, 193, 837, 399, 228, 309, 306, 430, 255, 247,
	243, 227, 281, 316, 356, 417, 350, 877, 303, 824,
	0, 408, 329, 0, 0, 0, 804, 859, 812, 849,
	799, 836, 759, 823, 872, 786, 832, 873, 287, 226,
	192, 341, 409, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 2554, 0, 2555, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 782, 829, 867, 783, 831, 239,
	285, 246, 238, 427, 878, 858, 748, 811, 866, 0,
	0, 209, 869, 806, 0, 834, 0, 884, 743, 826,
	0, 746, 750, 880, 862, 778, 249, 0, 0, 0,
	0, 0, 0, 0, 803, 813, 846, 797, 0, 0,
	0, 0, 0, 0, 0, 776, 0, 822, 0, 0,
	0, 755, 747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 801, 0, 0, 0, 758, 0,
	777, 847, 0, 741, 268, 752, 330, 231, 0, 851,
	861, 798, 461, 865, 796, 795, 841, 756, 857, 789,
	298, 754, 293, 188, 205, 0, 787, 340, 381, 387,
	856, 773, 781, 229, 779, 385, 354, 445, 213, 257,
	378, 359, 383, 366, 260, 821, 839, 384, 304, 432,
	373, 442, 462, 463, 237, 334, 452, 421, 458, 474,
	206, 234, 348, 414, 448, 405, 327, 428, 429, 292,
	404, 266, 191, 302, 468, 204, 393, 221, 211, 197,
	416, 440, 218, 396, 0, 0, 476, 199, 438, 413,
	323, 289, 290, 198, 0, 377, 242, 264, 232, 343,
	435, 436, 230, 477, 208, 457, 201, 1065, 456, 336,
	431, 439, 324, 314, 200, 437, 322, 313, 295, 296,
	297, 253, 275, 371, 307, 372, 276, 332, 331, 333,
	194, 449, 0, 195, 0, 410, 450, 478, 214, 215,
	216, 768, 252, 256, 263, 265, 271, 272, 279, 300,
	347, 370, 368, 374, 852, 426, 443, 453, 460, 466,
	467, 469, 470, 471, 472, 473, 335, 278, 406, 294,
	305, 844, 883, 353, 386, 219, 447, 407, 763, 767,
	761, 762, 816, 817, 764, 874, 875, 876, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 848, 757, 0,
	765, 766, 0, 854, 863, 864, 497, 315, 398, 444,
	820, 187, 202, 301, 879, 375, 261, 475, 455, 451,
	742, 760, 236, 771, 0, 0, 784, 792, 793, 805,
	807, 808, 809, 810, 326, 827, 828, 830, 838, 840,
	843, 845, 850, 860, 882, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	311, 317, 318, 319, 320, 337, 338, 339, 342, 345,
	346, 349, 351, 352, 355, 362, 363, 364, 365, 367,
	369, 376, 380, 388, 389, 390, 391, 392, 394, 395,
	400, 401, 402, 403, 411, 415, 433, 434, 446, 459,
	464, 270, 441, 465, 0, 310, 819, 825, 312, 254,
	273, 284, 833, 454, 412, 207, 382, 262, 196, 225,
	210, 233, 248, 251, 288, 321, 328, 357, 361, 267,
	245, 223, 379, 220, 397, 418, 419, 420, 422, 325,
	240, 360, 815, 842, 308, 424, 425, 280, 868, 853,
	423, 0, 800, 871, 770, 788, 881, 791, 794, 835,
	749, 814, 344, 785, 0, 774, 744, 780, 745, 772,
	802, 244, 769, 855, 818, 870, 299, 241, 751, 775,
	358, 790, 193, 837, 399, 228, 309, 306, 430, 255,
	247, 243, 227, 281, 316, 356, 417, 350, 877, 303,
	824, 0, 408, 329, 0, 0, 0, 804, 859, 812,
	849, 799, 836, 759, 823, 872, 786, 832, 873, 287,
	226, 192, 341, 409, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 782, 829, 867, 783, 831,
	239, 285, 246, 238, 427, 878, 858, 748, 811, 866,
	0, 0, 209, 869, 806, 0, 834, 0, 884, 743,
	826, 0, 746, 750, 880, 862, 778, 249, 0, 0,
	0, 0, 0, 0, 0, 803, 813, 846, 797, 0,
	0, 0, 0, 0, 2168, 0, 776, 0, 822, 0,
	0, 0, 755, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 801, 0, 0, 0, 758,
	0, 777, 847, 0, 741, 268, 752, 330, 231, 0,
	851, 861, 798, 461, 865, 796, 795, 841, 756, 857,
	789, 298, 754, 293, 188, 205, 0, 787, 340, 381,
	387, 856, 773, 781, 229, 779, 385, 354, 445, 213,
	257, 378, 359, 383, 366, 260, 821, 839, 384, 304,
	432, 373, 442, 462, 463, 237, 334, 452, 421, 458,
	474, 206, 234, 348, 414, 448, 405, 327, 428, 429,
	292, 404, 266, 191, 302, 468, 204, 393, 221, 211,
	197, 416, 440, 218, 396, 0, 0, 476, 199, 438,
	413, 323, 289, 290, 198, 0, 377, 242, 264, 232,
	343, 435, 436, 230, 477, 208, 457, 201, 1065, 456,
	336, 431, 439, 324, 314, 200, 437, 322, 313, 295,
	296, 297, 253, 275, 371, 307, 372, 276, 332, 331,
	333, 194, 449, 0, 195, 0, 410, 450, 478, 214,
	215, 216, 768, 252, 256, 263, 265, 271, 272, 279,
	300, 347, 370, 368, 374, 852, 426, 443, 453, 460,
	466, 467, 469, 470, 471, 472, 473, 335, 278, 406,
	294, 305, 844, 883, 353, 386, 219, 447, 407, 763,
	767, 761, 762, 816, 817, 764, 874, 875, 876, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 848, 757,
	0, 765, 766, 0, 854, 863, 864, 497, 315, 398,
	444, 820, 187, 202, 301, 879, 375, 261, 475, 455,
	451, 742, 760, 236, 771, 0, 0, 784, 792, 793,
	805, 807, 808, 809, 810, 326, 827, 828, 830, 838,
	840, 843, 845, 850, 860, 882, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 311, 317, 318, 319, 320, 337, 338, 339, 342,
	345, 346, 349, 351, 352, 355, 362, 363, 364, 365,
	367, 369, 376, 380, 388, 389, 390, 391, 392, 394,
	395, 400, 401, 402, 403, 411, 415, 433, 434, 446,
	459, 464, 270, 441, 465, 0, 310, 819, 825, 312,
	254, 273, 284, 833, 454, 412, 207, 382, 262, 196,
	225, 210, 233, 248, 251, 288, 321, 328, 357, 361,
	267, 245, 223, 379, 220, 397, 418, 419, 420, 422,
	325, 240, 360, 815, 842, 308, 424, 425, 280, 868,
	853, 423, 0, 800, 871, 770, 788, 881, 791, 794,
	835, 749, 814, 344, 785, 0, 774, 744, 780, 745,
	772, 802, 244, 769, 855, 818, 870, 299, 241, 751,
	775, 358, 790, 193, 837, 399, 228, 309, 306, 430,
	255, 247, 243, 227, 281, 316, 356, 417, 350, 877,
	303, 824, 0, 408, 329, 0, 0, 0, 804, 859,
	812, 849, 799, 836, 759, 823, 872, 786, 832, 873,
	287, 226, 192, 341, 409, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 782, 829, 867, 783,
	831, 239, 285, 246, 238, 427, 878, 858, 748, 811,
	866, 0, 0, 209, 869, 806, 0, 834, 0, 884,
	743, 826, 0, 746, 750, 880, 862, 778, 249, 0,
	0, 0, 0, 0, 0, 0, 803, 813, 846, 797,
	0, 0, 0, 0, 0, 2127, 0, 776, 0, 822,
	0, 0, 0, 755, 747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 801, 0, 0, 0,
	758, 0, 777, 847, 0, 741, 268, 752, 330, 231,
	0, 851, 861, 798, 461, 865, 796, 795, 841, 756,
	857, 789, 298, 754, 293, 188, 205, 0, 787, 340,
	381, 387, 856, 773, 781, 229, 779, 385, 354, 445,
	213, 257, 378, 359, 383, 366, 260, 821, 839, 384,
	304, 432, 373, 442, 462, 463, 237, 334, 452, 421,
	458, 474, 206, 234, 348, 414, 448, 405, 327, 428,
	429, 292, 404, 266, 191, 302, 468, 204, 393, 221,
	211, 197, 416, 440, 218, 396, 0, 0, 476, 199,
	438, 413, 323, 289, 290, 198, 0, 377, 242, 264,
	232, 343, 435, 436, 230, 477, 208, 457, 201, 1065,
	456, 336, 431, 439, 324, 314, 200, 437, 322, 313,
	295, 296, 297, 253, 275, 371, 307, 372, 276, 332,
	331, 333, 194, 449, 0, 195, 0, 410, 450, 478,
	214, 215, 216, 768, 252, 256, 263, 265, 271, 272,
	279, 300, 347, 370, 368, 374, 852, 426, 443, 453,
	460, 466, 467, 469, 470, 471, 472, 473, 335, 278,
	406, 294, 305, 844, 883, 353, 386, 219, 447, 407,
	763, 767, 761, 762, 816, 817, 764, 874, 875, 876,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 848,
	757, 0, 765, 766, 0, 854, 863, 864, 497, 315,
	398, 444, 820, 187, 202, 301, 879, 375, 261, 475,
	455, 451, 742, 760, 236, 771, 0, 0, 784, 792,
	793, 805, 807, 808, 809, 810, 326, 827, 828, 830,
	838, 840, 843, 845, 850, 860, 882, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 311, 317, 318, 319, 320, 337, 338, 339,
	342, 345, 346, 349, 351, 352, 355, 362, 363, 364,
	365, 367, 369, 376, 380, 388, 389, 390, 391, 392,
	394, 395, 400, 401, 402, 403, 411, 415, 433, 434,
	446, 459, 464, 270, 441, 465, 0, 310, 819, 825,
	312, 254, 273, 284, 833, 454, 412, 207, 382, 262,
	196, 225, 210, 233, 248, 251, 288, 321, 328, 357,
	361, 267, 245, 223, 379, 220, 397, 418, 419, 420,
	422, 325, 240, 360, 815, 842, 308, 424, 425, 280,
	868, 853, 423, 0, 800, 871, 770, 788, 881, 791,
	794, 835, 749, 814, 344, 785, 0, 774, 744, 780,
	745, 772, 802, 244, 769, 855, 818, 870, 299, 241,
	751, 775, 358, 790, 193, 837, 399, 228, 309, 306,
	430, 255, 247, 243, 227, 281, 316, 356, 417, 350,
	877, 303, 824, 0, 408, 329, 0, 0, 0, 804,
	859, 812, 849, 799, 836, 759, 823, 872, 786, 832,
	873, 287, 226, 192, 341, 409, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 782, 829, 867,
	783, 831, 239, 285, 246, 238, 427, 878, 858, 748,
	811, 866, 0, 0, 209, 869, 806, 0, 834, 0,
	884, 743, 826, 0, 746, 750, 880, 862, 778, 249,
	0, 0, 0, 0, 0, 0, 0, 803, 813, 846,
	797, 0, 0, 0, 0, 0, 1658, 0, 776, 0,
	822, 0, 0, 0, 755, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 801, 0, 0,
	0, 758, 0, 777, 847, 0, 741, 268, 752, 330,
	231, 0, 851, 861, 798, 461, 865, 796, 795, 841,
	756, 857, 789, 298, 754, 293, 188, 205, 0, 787,
	340, 381, 387, 856, 773, 781, 229, 779, 385, 354,
	445, 213, 257, 378, 359, 383, 366, 260, 821, 839,
	384, 304, 432, 373, 442, 462, 463, 237, 334, 452,
	421, 458, 474, 206, 234, 348, 414, 448, 405, 327,
	428, 429, 292, 404, 266, 191, 302, 468, 204, 393,
	221, 211, 197, 416, 440, 218, 396, 0, 0, 476,
	199, 438, 413, 323, 289, 290, 198, 0, 377, 242,
	264, 232, 343, 435, 436, 230, 477, 208, 457, 201,
	1065, 456, 336, 431, 439, 324, 314, 200, 437, 322,
	313, 295, 296, 297, 253, 275, 371, 307, 372, 276,
	332, 331, 333, 194, 449, 0, 195, 0, 410, 450,
	478, 214, 215, 216, 768, 252, 256, 263, 265, 271,
	272, 279, 300, 347, 370, 368, 374, 852, 426, 443,
	453, 460, 466, 467, 469, 470, 471, 472, 473, 335,
	278, 406, 294, 305, 844, 883, 353, 386, 219, 447,
	407, 763, 767, 761, 762, 816, 817, 764, 874, 875,
	876, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	848, 757, 0, 765, 766, 0, 854, 863, 864, 497,
	315, 398, 444, 820, 187, 202, 301, 879, 375, 261,
	475, 455, 451, 742, 760, 236, 771, 0, 0, 784,
	792, 793, 805, 807, 808, 809, 810, 326, 827, 828,
	830, 838, 840, 843, 845, 850, 860, 882, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 311, 317, 318, 319, 320, 337, 338,
	339, 342, 345, 346, 349, 351, 352, 355, 362, 363,
	364, 365, 367, 369, 376, 380, 388, 389, 390, 391,
	392, 394, 395, 400, 401, 402, 403, 411, 415, 433,
	434, 446, 459, 464, 270, 441, 465, 0, 310, 819,
	825, 312, 254, 273, 284, 833, 454, 412, 207, 382,
	262, 196, 225, 210, 233, 248, 251, 288, 321, 328,
	357, 361, 267, 245, 223, 379, 220, 397, 418, 419,
	420, 422, 325, 240, 360, 815, 842, 308, 424, 425,
	280, 868, 853, 423, 0, 800, 871, 770, 788, 881,
	791, 794, 835, 749, 814, 344, 785, 0, 774, 744,
	780, 745, 772, 802, 244, 769, 855, 818, 870, 299,
	241, 751, 775, 358, 790, 193, 837, 399, 228, 309,
	306, 430, 255, 247, 243, 227, 281, 316, 356, 417,
	350, 877, 303, 824, 0, 408, 329, 0, 0, 0,
	804, 859, 812, 849, 799, 836, 759, 823, 872, 786,
	832, 873, 287, 226, 192, 341, 409, 259, 0, 87,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 782, 829,
	867, 783, 831, 239, 285, 246, 238, 427, 878, 858,
	748, 811, 866, 0, 0, 209, 869, 806, 0, 834,
	0, 884, 743, 826, 0, 746, 750, 880, 862, 778,
	249, 0, 0, 0, 0, 0, 0, 0, 803, 813,
	846, 797, 0, 0, 0, 0, 0, 0, 0, 776,
	0, 822, 0, 0, 0, 755, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 801, 0,
	0, 0, 758, 0, 777, 847, 0, 741, 268, 752,
	330, 231, 0, 851, 861, 798, 461, 865, 796, 795,
	841, 756, 857, 789, 298, 754, 293, 188, 205, 0,
	787, 340, 381, 387, 856, 773, 781, 229, 779, 385,
	354, 445, 213, 257, 378, 359, 383, 366, 260, 821,
	839, 384, 304, 432, 373, 442, 462, 463, 237, 334,
	452, 421, 458, 474, 206, 234, 348, 414, 448, 405,
	327, 428, 429, 292, 404, 266, 191, 302, 468, 204,
	393, 221, 211, 197, 416, 440, 218, 396, 0, 0,
	476, 199, 438, 413, 323, 289, 290, 198, 0, 377,
	242, 264, 232, 343, 435, 436, 230, 477, 208, 457,
	201, 1065, 456, 336, 431, 439, 324, 314, 200, 437,
	322, 313, 295, 296, 297, 253, 275, 371, 307, 372,
	276, 332, 331, 333, 194, 449, 0, 195, 0, 410,
	450, 478, 214, 215, 216, 768, 252, 256, 263, 265,
	271, 272, 279, 300, 347, 370, 368, 374, 852, 426,
	443, 453, 460, 466, 467, 469, 470, 471, 472, 473,
	335, 278, 406, 294, 305, 844, 883, 353, 386, 219,
	447, 407, 763, 767, 761, 762, 816, 817, 764, 874,
	875, 876, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 848, 757, 0, 765, 766, 0, 854, 863, 864,
	497, 315, 398, 444, 820, 187, 202, 301, 879, 375,
	261, 475, 455, 451, 742, 760, 236, 771, 0, 0,
	784, 792, 793, 805, 807, 808, 809, 810, 326, 827,
	828, 830, 838, 840, 843, 845, 850, 860, 882, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 311, 317, 318, 319, 320, 337,
	338, 339, 342, 345, 346, 349, 351, 352, 355, 362,
	363, 364, 365, 367, 369, 376, 380, 388, 389, 390,
	391, 392, 394, 395, 400, 401, 402, 403, 411, 415,
	433, 434, 446, 459, 464, 270, 441, 465, 0, 310,
	819, 825, 312, 254, 273, 284, 833, 454, 412, 207,
	382, 262, 196, 225, 210, 233, 248, 251, 288, 321,
	328, 357, 361, 267, 245, 223, 379, 220, 397, 418,
	419, 420, 422, 325, 240, 360, 815, 842, 308, 424,
	425, 280, 868, 853, 423, 0, 800, 871, 770, 788,
	881, 791, 794, 835, 749, 814, 344, 785, 0, 774,
	744, 780, 745, 772, 802, 244, 769, 855, 818, 870,
	299, 241, 751, 775, 358, 790, 193, 837, 399, 228,
	309, 306, 430, 255, 247, 243, 227, 281, 316, 356,
	417, 350, 877, 303, 824, 0, 408, 329, 0, 0,
	0, 804, 859, 812, 849, 799, 836, 759, 823, 872,
	786, 832, 873, 287, 226, 192, 341, 409, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 782,
	829, 867, 783, 831, 239, 285, 246, 238, 427, 878,
	858, 748, 811, 866, 0, 0, 209, 869, 806, 0,
	834, 0, 884, 743, 826, 0, 746, 750, 880, 862,
	778, 249, 0, 0, 0, 0, 0, 0, 0, 803,
	813, 846, 797, 0, 0, 0, 0, 0, 0, 0,
	776, 0, 822, 0, 0, 0, 755, 747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 801,
	0, 0, 0, 758, 0, 777, 847, 0, 741, 268,
	752, 330, 231, 0, 851, 861, 798, 461, 865, 796,
	795, 841, 756, 857, 789, 298, 754, 293, 188, 205,
	0, 787, 340, 381, 387, 856, 773, 781, 229, 779,
	385, 354, 445, 213, 257, 378, 359, 383, 366, 260,
	821, 839, 384, 304, 432, 373, 442, 462, 463, 237,
	334, 452, 421, 458, 474, 206, 234, 348, 414, 448,
	405, 327, 428, 429, 292, 404, 266, 191, 302, 468,
	204, 393, 221, 211, 197, 416, 440, 218, 396, 0,
	0, 476, 199, 438, 413, 323, 289, 290, 198, 0,
	377, 242, 264, 232, 343, 435, 436, 230, 477, 208,
	457, 201, 1065, 456, 336, 431, 439, 324, 314, 200,
	437, 322, 313, 295, 296, 297, 253, 275, 371, 307,
	372, 276, 332, 331, 333, 194, 449, 0, 195, 0,
	410, 450, 478, 214, 215, 216, 768, 252, 256, 263,
	265, 271, 272, 279, 300, 347, 370, 368, 374, 852,
	426, 443, 453, 460, 466, 467, 469, 470, 471, 472,
	473, 335, 278, 406, 294, 305, 844, 883, 353, 386,
	219, 447, 407, 763, 767, 761, 762, 816, 817, 764,
	874, 875, 876, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 848, 757, 0, 765, 766, 0, 854, 863,
	864, 497, 315, 398, 444, 820, 187, 202, 301, 879,
	375, 261, 475, 455, 451, 742, 760, 236, 771, 0,
	0, 784, 792, 793, 805, 807, 808, 809, 810, 326,
	827, 828, 830, 838, 840, 843, 845, 850, 860, 882,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 311, 317, 318, 319, 320,
	337, 338, 339, 342, 345, 346, 349, 351, 352, 355,
	362, 363, 364, 365, 367, 369, 376, 380, 388, 389,
	390, 391, 392, 394, 395, 400, 401, 402, 403, 411,
	415, 433, 434, 446, 459, 464, 270, 441, 465, 0,
	310, 819, 825, 312, 254, 273, 284, 833, 454, 412,
	207, 382, 262, 196, 225, 210, 233, 248, 251, 288,
	321, 328, 357, 361, 267, 245, 223, 379, 220, 397,
	418, 419, 420, 422, 325, 240, 360, 815, 842, 308,
	424, 425, 280, 868, 853, 423, 0, 800, 871, 770,
	788, 881, 791, 794, 835, 749, 814, 344, 785, 0,
	774, 744, 780, 745, 772, 802, 244, 769, 855, 818,
	870, 299, 241, 751, 775, 358, 790, 193, 837, 399,
	228, 309, 306, 430, 255, 247, 243, 227, 281, 316,
	356, 417, 350, 877, 303, 824, 0, 408, 329, 0,
	0, 0, 804, 859, 812, 849, 799, 836, 759, 823,
	872, 786, 832, 873, 287, 226, 192, 341, 409, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	782, 829, 867, 783, 831, 239, 285, 246, 238, 427,
	878, 858, 748, 811, 866, 0, 0, 885, 869, 806,
	0, 834, 0, 884, 743, 826, 0, 746, 750, 880,
	862, 778, 249, 0, 0, 0, 0, 0, 0, 0,
	803, 813, 846, 797, 0, 0, 0, 0, 0, 0,
	0, 776, 0, 822, 0, 0, 0, 755, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	801, 0, 0, 0, 758, 0, 777, 847, 0, 741,
	268, 752, 330, 231, 0, 851, 861, 798, 461, 865,
	796, 795, 841, 756, 857, 789, 298, 754, 293, 188,
	205, 0, 787, 340, 381, 387, 856, 773, 781, 229,
	779, 385, 354, 445, 213, 257, 378, 359, 383, 366,
	260, 821, 839, 384, 304, 432, 373, 442, 462, 463,
	237, 334, 452, 421, 458, 474, 206, 234, 348, 414,
	448, 405, 327, 428, 429, 292, 404, 266, 191, 302,
	468, 204, 393, 221, 211, 197, 416, 440, 218, 396,
	0, 0, 476, 199, 438, 413, 323, 289, 290, 198,
	0, 377, 242, 264, 232, 343, 435, 436, 230, 477,
	208, 457, 201, 753, 456, 336, 431, 439, 324, 314,
	200, 437, 322, 313, 295, 296, 297, 253, 275, 371,
	307, 372, 276, 332, 331, 333, 194, 449, 0, 195,
	0, 410, 450, 478, 214, 215, 216, 768, 252, 256,
	263, 265, 271, 272, 279, 300, 347, 370, 368, 374,
	852, 426, 443, 453, 460, 466, 467, 469, 470, 471,
	472, 473, 740, 734, 733, 294, 305, 844, 883, 353,
	386, 219, 447, 407, 763, 767, 761, 762, 816, 817,
	764, 874, 875, 876, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 848, 757, 0, 765, 766, 0, 854,
	863, 864, 497, 315, 398, 444, 820, 187, 202, 301,
	879, 375, 261, 475, 455, 451, 742, 760, 236, 771,
	0, 0, 784, 792, 793, 805, 807, 808, 809, 810,
	326, 827, 828, 830, 838, 840, 843, 845, 850, 860,
	882, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 311, 317, 318, 319,
	320, 337, 338, 339, 342, 345, 346, 349, 351, 352,
	355, 362, 363, 364, 365, 367, 369, 376, 380, 388,
	389, 390, 391, 392, 394, 395, 400, 401, 402, 403,
	411, 415, 433, 434, 446, 459, 464, 270, 441, 465,
	0, 310, 819, 825, 312, 254, 273, 284, 833, 454,
	412, 207, 382, 262, 196, 225, 210, 233, 248, 251,
	288, 321, 328, 357, 361, 267, 245, 223, 379, 220,
	397, 418, 419, 420, 422, 325, 240, 360, 815, 842,
	308, 424, 425, 280, 868, 853, 423, 0, 800, 871,
	770, 788, 881, 791, 794, 835, 749, 814, 344, 785,
	0, 774, 744, 780, 745, 772, 802, 244, 769, 855,
	818, 870, 299, 241, 751, 775, 358, 790, 193, 837,
	399, 228, 309, 306, 430, 255, 247, 243, 227, 281,
	316, 356, 417, 350, 877, 303, 824, 0, 408, 329,
	0, 0, 0, 804, 859, 812, 849, 799, 836, 759,
	823, 872, 786, 832, 873, 287, 226, 192, 341, 409,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 782, 829, 867, 783, 831, 239, 285, 246, 238,
	427, 878, 858, 748, 811, 866, 0, 0, 885, 869,
	806, 0, 834, 0, 884, 743, 826, 0, 746, 750,
	880, 862, 778, 249, 0, 0, 0, 0, 0, 0,
	0, 803, 813, 846, 797, 0, 0, 0, 0, 0,
	0, 0, 776, 0, 822, 0, 0, 0, 755, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 801, 0, 0, 0, 758, 0, 777, 847, 0,
	741, 268, 752, 330, 231, 0, 851, 861, 798, 461,
	865, 796, 795, 841, 756, 857, 789, 298, 754, 293,
	188, 205, 0, 787, 340, 381, 387, 856, 773, 781,
	229, 779, 385, 354, 445, 213, 257, 378, 359, 383,
	366, 260, 821, 839, 384, 304, 432, 373, 442, 462,
	463, 237, 334, 452, 421, 458, 474, 206, 234, 348,
	414, 448, 405, 327, 428, 429, 292, 404, 266, 191,
	302, 468, 204, 393, 221, 211, 197, 416, 1248, 218,
	396, 0, 0, 476, 199, 438, 413, 323, 289, 290,
	198, 0, 377, 242, 264, 232, 343, 435, 436, 230,
	477, 208, 457, 201, 753, 456, 336, 431, 439, 324,
	314, 200, 437, 322, 313, 295, 296, 297, 253, 275,
	371, 307, 372, 276, 332, 331, 333, 194, 449, 0,
	195, 0, 410, 450, 478, 214, 215, 216, 768, 252,
	256, 263, 265, 271, 272, 279, 300, 347, 370, 368,
	374, 852, 426, 443, 453, 460, 466, 467, 469, 470,
	471, 472, 473, 740, 734, 733, 294, 305, 844, 883,
	353, 386, 219, 447, 407, 763, 767, 761, 762, 816,
	817, 764, 874, 875, 876, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 848, 757, 0, 765, 766, 0,
	854, 863, 864, 497, 315, 398, 444, 820, 187, 202,
	301, 879, 375, 261, 475, 455, 451, 742, 760, 236,
	771, 0, 0, 784, 792, 793, 805, 807, 808, 809,
	810, 326, 827, 828, 830, 838, 840, 843, 845, 850,
	860, 882, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 311, 317, 318,
	319, 320, 337, 338, 339, 342, 345, 346, 349, 351,
	352, 355, 362, 363, 364, 365, 367, 369, 376, 380,
	388, 389, 390, 391, 392, 394, 395, 400, 401, 402,
	403, 411, 415, 433, 434, 446, 459, 464, 270, 441,
	465, 0, 310, 819, 825, 312, 254, 273, 284, 833,
	454, 412, 207, 382, 262, 196, 225, 210, 233, 248,
	251, 288, 321, 328, 357, 361, 267, 245, 223, 379,
	220, 397, 418, 419, 420, 422, 325, 240, 360, 815,
	842, 308, 424, 425, 280, 868, 853, 423, 0, 800,
	871, 770, 788, 881, 791, 794, 835, 749, 814, 344,
	785, 0, 774, 744, 780, 745, 772, 802, 244, 769,
	855, 818, 870, 299, 241, 751, 775, 358, 790, 193,
	837, 399, 228, 309, 306, 430, 255, 247, 243, 227,
	281, 316, 356, 417, 350, 877, 303, 824, 0, 408,
	329, 0, 0, 0, 804, 859, 812, 849, 799, 836,
	759, 823, 872, 786, 832, 873, 287, 226, 192, 341,
	409, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 782, 829, 867, 783, 831, 239, 285, 246,
	238, 427, 878, 858, 748, 811, 866, 0, 0, 885,
	869, 806, 0, 834, 0, 884, 743, 826, 0, 746,
	750, 880, 862, 778, 249, 0, 0, 0, 0, 0,
	0, 0, 803, 813, 846, 797, 0, 0, 0, 0,
	0, 0, 0, 776, 0, 822, 0, 0, 0, 755,
	747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 801, 0, 0, 0, 758, 0, 777, 847,
	0, 741, 268, 752, 330, 231, 0, 851, 861, 798,
	461, 865, 796, 795, 841, 756, 857, 789, 298, 754,
	293, 188, 205, 0, 787, 340, 381, 387, 856, 773,
	781, 229, 779, 385, 354, 445, 213, 257, 378, 359,
	383, 366, 260, 821, 839, 384, 304, 432, 373, 442,
	462, 463, 237, 334, 452, 421, 458, 474, 206, 234,
	348, 414, 448, 405, 327, 428, 429, 292, 404, 266,
	191, 302, 468, 204, 393, 221, 211, 197, 416, 731,
	218, 396, 0, 0, 476, 199, 438, 413, 323, 289,
	290, 198, 0, 377, 242, 264, 232, 343, 435, 436,
	230, 477, 208, 457, 201, 753, 456, 336, 431, 439,
	324, 314, 200, 437, 322, 313, 295, 296, 297, 253,
	275, 371, 307, 372, 276, 332, 331, 333, 194, 449,
	0, 195, 0, 410, 450, 478, 214, 215, 216, 768,
	252, 256, 263, 265, 271, 272, 279, 300, 347, 370,
	368, 374, 852, 426, 443, 453, 460, 466, 467, 469,
	470, 471, 472, 473, 740, 734, 733, 294, 305, 844,
	883, 353, 386, 219, 447, 407, 763, 767, 761, 762,
	816, 817, 764, 874, 875, 876, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 848, 757, 0, 765, 766,
	0, 854, 863, 864, 497, 315, 398, 444, 820, 187,
	202, 301, 879, 375, 261, 475, 455, 451, 742, 760,
	236, 771, 0, 0, 784, 792, 793, 805, 807, 808,
	809, 810, 326, 827, 828, 830, 838, 840, 843, 845,
	850, 860, 882, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 311, 317,
	318, 319, 320, 337, 338, 339, 342, 345, 346, 349,
	351, 352, 355, 362, 363, 364, 365, 367, 369, 376,
	380, 388, 389, 390, 391, 392, 394, 395, 400, 401,
	402, 403, 411, 415, 433, 434, 446, 459, 464, 270,
	441, 465, 0, 310, 819, 825, 312, 254, 273, 284,
	833, 454, 412, 207, 382, 262, 196, 225, 210, 233,
	248, 251, 288, 321, 328, 357, 361, 267, 245, 223,
	379, 220, 397, 418, 419, 420, 422, 325, 240, 360,
	815, 842, 308, 424, 425, 280, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 1602, 0, 578, 0, 0, 0, 244, 583, 0,
	0, 0, 299, 241, 0, 1603, 358, 0, 193, 0,
	399, 228, 309, 306, 430, 255, 247, 243, 227, 281,
	316, 356, 417, 350, 590, 303, 0, 0, 408, 329,
	0, 0, 0, 0, 0, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 341, 409,
	259, 0, 87, 0, 0, 184, 185, 186, 626, 633,
	634, 635, 636, 637, 627, 629, 0, 0, 217, 628,
	224, 599, 631, 638, 639, 0, 239, 285, 246, 238,
	427, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 561, 575, 0, 589,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 573,
	720, 0, 0, 0, 611, 0, 574, 0, 0, 582,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 330, 231, 0, 610, 0, 0, 461,
	0, 0, 608, 0, 0, 0, 0, 298, 0, 293,
	188, 205, 0, 0, 340, 381, 387, 0, 0, 0,
	229, 0, 385, 354, 445, 213, 257, 378, 359, 383,
	366, 260, 0, 0, 384, 304, 432, 373, 442, 462,
	463, 237, 334, 452, 421, 458, 474, 206, 234, 348,
	414, 448, 405, 327, 428, 429, 292, 404, 266, 191,
	302, 468, 204, 393, 221, 211, 197, 416, 440, 218,
	396, 0, 0, 476, 199, 438, 413, 323, 289, 290,
	198, 0, 377, 242, 264, 232, 343, 435, 436, 230,
	477, 208, 457, 201, 0, 456, 336, 431, 439, 324,
	314, 200, 437, 322, 313, 295, 604, 605, 253, 275,
	371, 307, 372, 276, 332, 331, 333, 194, 449, 0,
	195, 0, 410, 450, 478, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 300, 347, 370, 368,
	374, 0, 426, 443, 453, 460, 466, 467, 469, 470,
	471, 472, 473, 335, 278, 406, 294, 305, 0, 0,
	353, 386, 219, 447, 407, 617, 609, 594, 596, 618,
	619, 591, 592, 595, 620, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 612, 581, 580, 0, 587, 588,
	0, 597, 598, 600, 601, 602, 603, 579, 187, 202,
	301, 0, 375, 261, 475, 455, 451, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 311, 317, 318,
	319, 320, 337, 338, 339, 342, 345, 346, 349, 351,
	352, 355, 362, 363, 364, 365, 367, 369, 376, 380,
	388, 389, 390, 391, 392, 394, 395, 400, 401, 402,
	403, 411, 415, 433, 434, 446, 459, 464, 270, 441,
	465, 0, 310, 0, 0, 312, 254, 273, 284, 0,
	454, 412, 207, 382, 262, 196, 225, 210, 233, 248,
	251, 288, 321, 328, 357, 361, 267, 245, 223, 379,
	220, 397, 418, 419, 420, 422, 325, 240, 360, 423,
	0, 308, 424, 425, 280, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 578, 0, 0, 0,
	244, 583, 0, 0, 0, 299, 241, 0, 0, 358,
	0, 193, 0, 399, 228, 309, 306, 430, 255, 247,
	243, 227, 281, 316, 356, 417, 350, 590, 303, 0,
	0, 408, 329, 0, 0, 0, 0, 0, 585, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 341, 409, 259, 0, 87, 0, 0, 184, 185,
	186, 626, 633, 634, 635, 636, 637, 627, 629, 0,
	0, 217, 628, 224, 599, 631, 638, 639, 0, 239,
	285, 246, 238, 427, 0, 0, 1596, 1597, 1598, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 561,
	575, 0, 589, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 573, 0, 0, 0, 0, 611, 0, 574,
	0, 0, 582, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 330, 231, 0, 610,
	0, 0, 461, 0, 0, 608, 0, 0, 0, 0,
	298, 0, 293, 188, 205, 0, 0, 340, 381, 387,
	0, 0, 0, 229, 0, 385, 354, 445, 213, 257,
	378, 359, 383, 366, 260, 0, 0, 384, 304, 432,
	373, 442, 462, 463, 237, 334, 452, 421, 458, 474,
	206, 234, 348, 414, 448, 405, 327, 428, 429, 292,
	404, 266, 191, 302, 468, 204, 393, 221, 211, 197,
	416, 440, 218, 396, 0, 0, 476, 199, 438, 413,
	323, 289, 290, 198, 0, 377, 242, 264, 232, 343,
	435, 436, 230, 477, 208, 457, 201, 0, 456, 336,
	431, 439, 324, 314, 200, 437, 322, 313, 295, 604,
	605, 253, 275, 371, 307, 372, 276, 332, 331, 333,
	194, 449, 0, 195, 0, 410, 450, 478, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 300,
	347, 370, 368, 374, 0, 426, 443, 453, 460, 466,
	467, 469, 470, 471, 472, 473, 335, 278, 406, 294,
	305, 0, 0, 353, 386, 219, 447, 407, 617, 609,
	594, 596, 618, 619, 591, 592, 595, 620, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 612, 581, 580,
	0, 587, 588, 0, 597, 598, 600, 601, 602, 603,
	579, 187, 202, 301, 0, 375, 261, 475, 455, 451,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	311, 317, 318, 319, 320, 337, 338, 339, 342, 345,
	346, 349, 351, 352, 355, 362, 363, 364, 365, 367,
	369, 376, 380, 388, 389, 390, 391, 392, 394, 395,
	400, 401, 402, 403, 411, 415, 433, 434, 446, 459,
	464, 270, 441, 465, 0, 310, 0, 0, 312, 254,
	273, 284, 0, 454, 412, 207, 382, 262, 196, 225,
	210, 233, 248, 251, 288, 321, 328, 357, 361, 267,
	245, 223, 379, 220, 397, 418, 419, 420, 422, 325,
	240, 360, 423, 0, 308, 424, 425, 280, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 578,
	0, 0, 0, 244, 583, 0, 0, 0, 299, 241,
	0, 0, 358, 0, 193, 0, 399, 228, 309, 306,
	430, 255, 247, 243, 227, 281, 316, 356, 417, 350,
	590, 303, 0, 0, 408, 329, 0, 0, 0, 0,
	0, 585, 586, 0, 0, 0, 0, 0, 0, 1683,
	0, 287, 226, 192, 341, 409, 259, 0, 87, 0,
	0, 184, 185, 186, 626, 633, 634, 635, 636, 637,
	627, 629, 0, 0, 217, 628, 224, 599, 631, 638,
	639, 1684, 239, 285, 246, 238, 427, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 561, 575, 0, 589, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 573, 0, 0, 0, 0,
	611, 0, 574, 0, 0, 582, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 330,
	231, 0, 610, 0, 0, 461, 0, 0, 608, 0,
	0, 0, 0, 298, 0, 293, 188, 205, 0, 0,
	340, 381, 387, 0, 0, 0, 229, 0, 385, 354,
	445, 213, 257, 378, 359, 383, 366, 260, 0, 0,
	384, 304, 432, 373, 442, 462, 463, 237, 334, 452,
	421, 458, 474, 206, 234, 348, 414, 448, 405, 327,
	428, 429, 292, 404, 266, 191, 302, 468, 204, 393,
	221, 211, 197, 416, 440, 218, 396, 0, 0, 476,
	199, 438, 413, 323, 289, 290, 198, 0, 377, 242,
	264, 232, 343, 435, 436, 230, 477, 208, 457, 201,
	0, 456, 336, 431, 439, 324, 314, 200, 437, 322,
	313, 295, 604, 605, 253, 275, 371, 307, 372, 276,
	332, 331, 333, 194, 449, 0, 195, 0, 410, 450,
	478, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 300, 347, 370, 368, 374, 0, 426, 443,
	453, 460, 466, 467, 469, 470, 471, 472, 473, 335,
	278, 406, 294, 305, 0, 0, 353, 386, 219, 447,
	407, 617, 609, 594, 596, 618, 619, 591, 592, 595,
	620, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	612, 581, 580, 0, 587, 588, 0, 597, 598, 600,
	601, 602, 603, 579, 187, 202, 301, 0, 375, 261,
	475, 455, 451, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 311, 317, 318, 319, 320, 337, 338,
	339, 342, 345, 346, 349, 351, 352, 355, 362, 363,
	364, 365, 367, 369, 376, 380, 388, 389, 390, 391,
	392, 394, 395, 400, 401, 402, 403, 411, 415, 433,
	434, 446, 459, 464, 270, 441, 465, 0, 310, 0,
	0, 312, 254, 273, 284, 0, 454, 412, 207, 382,
	262, 196, 225, 210, 233, 248, 251, 288, 321, 328,
	357, 361, 267, 245, 223, 379, 220, 397, 418, 419,
	420, 422, 325, 240, 360, 78, 423, 308, 424, 425,
	280, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 578, 0, 0, 0, 244, 583, 0,
	0, 0, 299, 241, 0, 0, 358, 0, 193, 0,
	399, 228, 309, 306, 430, 255, 247, 243, 227, 281,
	316, 356, 417, 350, 590, 303, 0, 0, 408, 329,
	0, 0, 0, 0, 0, 585, 586, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 341, 409,
	259, 0, 87, 0, 0, 184, 185, 186, 626, 633,
	634, 635, 636, 637, 627, 629, 0, 0, 217, 628,
	224, 599, 631, 638, 639, 0, 239, 285, 246, 238,
	427, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 561, 575, 0, 589,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 572, 573,
	0, 0, 0, 0, 611, 0, 574, 0, 0, 582,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 330, 231, 0, 610, 0, 0, 461,
	0, 0, 608, 0, 0, 0, 0, 298, 0, 293,
	188, 205, 0, 0, 340, 381, 387, 0, 0, 0,
	229, 0, 385, 354, 445, 213, 257, 378, 359, 383,
	366, 260, 0, 0, 384, 304, 432, 373, 442, 462,
	463, 237, 334, 452, 421, 458, 474, 206, 234, 348,
	414, 448, 405, 327, 428, 429, 292, 404, 266, 191,
	302, 468, 204, 393, 221, 211, 197, 416, 440, 218,
	396, 0, 0, 476, 199, 438, 413, 323, 289, 290,
	198, 0, 377, 242, 264, 232, 343, 435, 436, 230,
	477, 208, 457, 201, 0, 456, 336, 431, 439, 324,
	314, 200, 437, 322, 313, 295, 604, 605, 253, 275,
	371, 307, 372, 276, 332, 331, 333, 194, 449, 0,
	195, 0, 410, 450, 478, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 300, 347, 370, 368,
	374, 0, 426, 443, 453, 460, 466, 467, 469, 470,
	471, 472, 473, 335, 278, 406, 294, 305, 0, 0,
	353, 386, 219, 447, 407, 617, 609, 594, 596, 618,
	619, 591, 592, 595, 620, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 612, 581, 580, 0, 587, 588,
	0, 597, 598, 600, 601, 602, 603, 579, 187, 202,
	301, 86, 375, 261, 475, 455, 451, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 311, 317, 318,
	319, 320, 337, 338, 339, 342, 345, 346, 349, 351,
	352, 355, 362, 363, 364, 365, 367, 369, 376, 380,
	388, 389, 390, 391, 392, 394, 395, 400, 401, 402,
	403, 411, 415, 433, 434, 446, 459, 464, 270, 441,
	465, 0, 310, 0, 0, 312, 254, 273, 284, 0,
	454, 412, 207, 382, 262, 196, 225, 210, 233, 248,
	251, 288, 321, 328, 357, 361, 267, 245, 223, 379,
	220, 397, 418, 419, 420, 422, 325, 240, 360, 423,
	0, 308, 424, 425, 280, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 578, 0, 0, 0,
	244, 583, 0, 0, 0, 299, 241, 0, 0, 358,
	0, 193, 0, 399, 228, 309, 306, 430, 255, 247,
	243, 227, 281, 316, 356, 417, 350, 590, 303, 0,
	0, 408, 329, 0, 0, 0, 0, 0, 585, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 341, 409, 259, 0, 87, 0, 0, 184, 185,
	186, 626, 633, 634, 635, 636, 637, 627, 629, 0,
	0, 217, 628, 224, 599, 631, 638, 639, 0, 239,
	285, 246, 238, 427, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 561,
	575, 0, 589, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 572, 573, 0, 0, 0, 0, 611, 0, 574,
	0, 0, 582, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 330, 231, 0, 610,
	0, 0, 461, 0, 0, 608, 0, 0, 0, 0,
	298, 0, 293, 188, 205, 0, 0, 340, 381, 387,
	0, 0, 0, 229, 0, 385, 354, 445, 213, 257,
	378, 359, 383, 366, 260, 2523, 0, 384, 304, 432,
	373, 442, 462, 463, 237, 334, 452, 421, 458, 474,
	206, 234, 348, 414, 448, 405, 327, 428, 429, 292,
	404, 266, 191, 302, 468, 204, 393, 221, 211, 197,
	416, 440, 218, 396, 0, 0, 476, 199, 438, 413,
	323, 289, 290, 198, 0, 377, 242, 264, 232, 343,
	435, 436, 230, 477, 208, 457, 201, 0, 456, 336,
	431, 439, 324, 314, 200, 437, 322, 313, 295, 604,
	605, 253, 275, 371, 307, 372, 276, 332, 331, 333,
	194, 449, 0, 195, 0, 410, 450, 478, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 300,
	347, 370, 368, 374, 0, 426, 443, 453, 460, 466,
	467, 469, 470, 471, 472, 473, 335, 278, 406, 294,
	305, 0, 0, 353, 386, 219, 447, 407, 617, 609,
	594, 596, 618, 619, 591, 592, 595, 620, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 612, 581, 580,
	0, 587, 588, 0, 597, 598, 600, 601, 602, 603,
	579, 187, 202, 301, 0, 375, 261, 475, 455, 451,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	311, 317, 318, 319, 320, 337, 338, 339, 342, 345,
	346, 349, 351, 352, 355, 362, 363, 364, 365, 367,
	369, 376, 380, 388, 389, 390, 391, 392, 394, 395,
	400, 401, 402, 403, 411, 415, 433, 434, 446, 459,
	464, 270, 441, 465, 0, 310, 0, 0, 312, 254,
	273, 284, 0, 454, 412, 207, 382, 262, 196, 225,
	210, 233, 248, 251, 288, 321, 328, 357, 361, 267,
	245, 223, 379, 220, 397, 418, 419, 420, 422, 325,
	240, 360, 423, 0, 308, 424, 425, 280, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 578,
	0, 0, 0, 244, 583, 0, 0, 0, 299, 241,
	0, 0, 358, 0, 193, 0, 399, 228, 309, 306,
	430, 255, 247, 243, 227, 281, 316, 356, 417, 350,
	590, 303, 0, 0, 408, 329, 0, 0, 0, 0,
	0, 585, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 341, 409, 259, 0, 87, 0,
	1216, 184, 185, 186, 626, 633, 634, 635, 636, 637,
	627, 629, 0, 0, 217, 628, 224, 599, 631, 638,
	639, 0, 239, 285, 246, 238, 427, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 561, 575, 0, 589, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 572, 573, 0, 0, 0, 0,
	611, 0, 574, 0, 0, 582, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 330,
	231, 0, 610, 0, 0, 461, 0, 0, 608, 0,
	0, 0, 0, 298, 0, 293, 188, 205, 0, 0,
	340, 381, 387, 0, 0, 0, 229, 0, 385, 354,
	445, 213, 257, 378, 359, 383, 366, 260, 0, 0,
	384, 304, 432, 373, 442, 462, 463, 237, 334, 452,
	421, 458, 474, 206, 234, 348, 414, 448, 405, 327,
	428, 429, 292, 404, 266, 191, 302, 468, 204, 393,
	221, 211, 197, 416, 440, 218, 396, 0, 0, 476,
	199, 438, 413, 323, 289, 290, 198, 0, 377, 242,
	264, 232, 343, 435, 436, 230, 477, 208, 457, 201,
	0, 456, 336, 431, 439, 324, 314, 200, 437, 322,
	313, 295, 604, 605, 253, 275, 371, 307, 372, 276,
	332, 331, 333, 194, 449, 0, 195, 0, 410, 450,
	478, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 300, 347, 370, 368, 374, 0, 426, 443,
	453, 460, 466, 467, 469, 470, 471, 472, 473, 335,
	278, 406, 294, 305, 0, 0, 353, 386, 219, 447,
	407, 617, 609, 594, 596, 618, 619, 591, 592, 595,
	620, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	612, 581, 580, 0, 587, 588, 0, 597, 598, 600,
	601, 602, 603, 579, 187, 202, 301, 0, 375, 261,
	475, 455, 451, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 311, 317, 318, 319, 320, 337, 338,
	339, 342, 345, 346, 349, 351, 352, 355, 362, 363,
	364, 365, 367, 369, 376, 380, 388, 389, 390, 391,
	392, 394, 395, 400, 401, 402, 403, 411, 415, 433,
	434, 446, 459, 464, 270, 441, 465, 0, 310, 0,
	0, 312, 254, 273, 284, 0, 454, 412, 207, 382,
	262, 196, 225, 210, 233, 248, 251, 288, 321, 328,
	357, 361, 267, 245, 223, 379, 220, 397, 418, 419,
	420, 422, 325, 240, 360, 423, 0, 308, 424, 425,
	280, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 0, 578, 0, 0, 0, 244, 583, 0, 0,
	0, 299, 241, 0, 0, 358, 0, 193, 0, 399,
	228, 309, 306, 430, 255, 247, 243, 227, 281, 316,
	356, 417, 350, 590, 303, 0, 0, 408, 329, 0,
	0, 0, 0, 0, 585, 586, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 341, 409, 259,
	0, 87, 0, 0, 184, 185, 186, 626, 633, 634,
	635, 636, 637, 627, 629, 0, 0, 217, 628, 224,
	599, 631, 638, 639, 0, 239, 285, 246, 238, 427,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 561, 575, 0, 589, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 572, 573, 720,
	0, 0, 0, 611, 0, 574, 0, 0, 582, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 330, 231, 0, 610, 0, 0, 461, 0,
	0, 608, 0, 0, 0, 0, 298, 0, 293, 188,
	205, 0, 0, 340, 381, 387, 0, 0, 0, 229,
	0, 385, 354, 445, 213, 257, 378, 359, 383, 366,
	260, 0, 0, 384, 304, 432, 373, 442, 462, 463,
	237, 334, 452, 421, 458, 474, 206, 234, 348, 414,
	448, 405, 327, 428, 429, 292, 404, 266, 191, 302,
	468, 204, 393, 221, 211, 197, 416, 440, 218, 396,
	0, 0, 476, 199, 438, 413, 323, 289, 290, 198,
	0, 377, 242, 264, 232, 343, 435, 436, 230, 477,
	208, 457, 201, 0, 456, 336, 431, 439, 324, 314,
	200, 437, 322, 313, 295, 604, 605, 253, 275, 371,
	307, 372, 276, 332, 331, 333, 194, 449, 0, 195,
	0, 410, 450, 478, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 300, 347, 370, 368, 374,
	0, 426, 443, 453, 460, 466, 467, 469, 470, 471,
	472, 473, 335, 278, 406, 294, 305, 0, 0, 353,
	386, 219, 447, 407, 617, 609, 594, 596, 618, 619,
	591, 592, 595, 620, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 612, 581, 580, 0, 587, 588, 0,
	597, 598, 600, 601, 602, 603, 579, 187, 202, 301,
	0, 375, 261, 475, 455, 451, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 311, 317, 318, 319,
	320, 337, 338, 339, 342, 345, 346, 349, 351, 352,
	355, 362, 363, 364, 365, 367, 369, 376, 380, 388,
	389, 390, 391, 392, 394, 395, 400, 401, 402, 403,
	411, 415, 433, 434, 446, 459, 464, 270, 441, 465,
	0, 310, 0, 0, 312, 254, 273, 284, 0, 454,
	412, 207, 382, 262, 196, 225, 210, 233, 248, 251,
	288, 321, 328, 357, 361, 267, 245, 223, 379, 220,
	397, 418, 419, 420, 422, 325, 240, 360, 423, 0,
	308, 424, 425, 280, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 578, 0, 0, 0, 244,
	583, 0, 0, 0, 299, 241, 0, 0, 358, 0,
	193, 0, 399, 228, 309, 306, 430, 255, 247, 243,
	227, 281, 316, 356, 417, 350, 590, 303, 0, 0,
	408, 329, 0, 0, 0, 0, 0, 585, 586, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	341, 409, 259, 0, 87, 0, 0, 184, 185, 186,
	626, 633, 634, 635, 636, 637, 627, 629, 0, 0,
	217, 628, 224, 599, 631, 638, 639, 0, 239, 285,
	246, 238, 427, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 561, 575,
	0, 589, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	572, 573, 0, 0, 0, 0, 611, 0, 574, 0,
	0, 582, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 330, 231, 0, 610, 0,
	0, 461, 0, 0, 608, 0, 0, 0, 0, 298,
	0, 293, 188, 205, 0, 0, 340, 381, 387, 0,
	0, 0, 229, 0, 385, 354, 445, 213, 257, 378,
	359, 383, 366, 260, 0, 0, 384, 304, 432, 373,
	442, 462, 463, 237, 334, 452, 421, 458, 474, 206,
	234, 348, 414, 448, 405, 327, 428, 429, 292, 404,
	266, 191, 302, 468, 204, 393, 221, 211, 197, 416,
	440, 218, 396, 0, 0, 476, 199, 438, 413, 323,
	289, 290, 198, 0, 377, 242, 264, 232, 343, 435,
	436, 230, 477, 208, 457, 201, 0, 456, 336, 431,
	439, 324, 314, 200, 437, 322, 313, 295, 604, 605,
	253, 275, 371, 307, 372, 276, 332, 331, 333, 194,
	449, 0, 195, 0, 410, 450, 478, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 300, 347,
	370, 368, 374, 0, 426, 443, 453, 460, 466, 467,
	469, 470, 471, 472, 473, 335, 278, 406, 294, 305,
	0, 0, 353, 386, 219, 447, 407, 617, 609, 594,
	596, 618, 619, 591, 592, 595, 620, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 612, 581, 580, 0,
	587, 588, 0, 597, 598, 600, 601, 602, 603, 579,
	187, 202, 301, 0, 375, 261, 475, 455, 451, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 311,
	317, 318, 319, 320, 337, 338, 339, 342, 345, 346,
	349, 351, 352, 355, 362, 363, 364, 365, 367, 369,
	376, 380, 388, 389, 390, 391, 392, 394, 395, 400,
	401, 402, 403, 411, 415, 433, 434, 446, 459, 464,
	270, 441, 465, 0, 310, 0, 0, 312, 254, 273,
	284, 0, 454, 412, 207, 382, 262, 196, 225, 210,
	233, 248, 251, 288, 321, 328, 357, 361, 267, 245,
	223, 379, 220, 397, 418, 419, 420, 422, 325, 240,
	360, 423, 0, 308, 424, 425, 280, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 578, 0,
	0, 0, 244, 583, 0, 0, 0, 299, 241, 0,
	0, 358, 0, 193, 0, 399, 228, 309, 306, 430,
	255, 247, 243, 227, 281, 316, 356, 417, 350, 590,
	303, 0, 0, 408, 329, 0, 0, 0, 0, 0,
	585, 586, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 341, 409, 259, 0, 87, 0, 0,
	184, 185, 186, 626, 633, 634, 635, 636, 637, 627,
	629, 0, 0, 217, 628, 224, 599, 631, 638, 639,
	0, 239, 285, 246, 238, 427, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 0, 589, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 573, 0, 0, 0, 0, 611,
	0, 574, 0, 0, 582, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 330, 231,
	0, 610, 0, 0, 461, 0, 0, 608, 0, 0,
	0, 0, 298, 0, 293, 188, 205, 0, 0, 340,
	381, 387, 0, 0, 0, 229, 0, 385, 354, 445,
	213, 257, 378, 359, 383, 366, 260, 0, 0, 384,
	304, 432, 373, 442, 462, 463, 237, 334, 452, 421,
	458, 474, 206, 234, 348, 414, 448, 405, 327, 428,
	429, 292, 404, 266, 191, 302, 468, 204, 393, 221,
	211, 197, 416, 440, 218, 396, 0, 0, 476, 199,
	438, 413, 323, 289, 290, 198, 0, 377, 242, 264,
	232, 343, 435, 436, 230, 477, 208, 457, 201, 0,
	456, 336, 431, 439, 324, 314, 200, 437, 322, 313,
	295, 604, 605, 253, 275, 371, 307, 372, 276, 332,
	331, 333, 194, 449, 0, 195, 0, 410, 450, 478,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 300, 347, 370, 368, 374, 0, 426, 443, 453,
	460, 466, 467, 469, 470, 471, 472, 473, 335, 278,
	406, 294, 305, 0, 0, 353, 386, 219, 447, 407,
	617, 609, 594, 596, 618, 619, 591, 592, 595, 620,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 612,
	581, 580, 0, 587, 588, 0, 597, 598, 600, 601,
	602, 603, 579, 187, 202, 301, 0, 375, 261, 475,
	455, 451, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 311, 317, 318, 319, 320, 337, 338, 339,
	342, 345, 346, 349, 351, 352, 355, 362, 363, 364,
	365, 367, 369, 376, 380, 388, 389, 390, 391, 392,
	394, 395, 400, 401, 402, 403, 411, 415, 433, 434,
	446, 459, 464, 270, 441, 465, 0, 310, 0, 0,
	312, 254, 273, 284, 0, 454, 412, 207, 382, 262,
	196, 225, 210, 233, 248, 251, 288, 321, 328, 357,
	361, 267, 245, 223, 379, 220, 397, 418, 419, 420,
	422, 325, 240, 360, 423, 0, 308, 424, 425, 280,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	299, 241, 0, 0, 358, 0, 193, 0, 399, 228,
	309, 306, 430, 255, 247, 243, 227, 281, 316, 356,
	417, 350, 0, 303, 0, 0, 408, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 341, 409, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 427, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 330, 231, 0, 0, 0, 932, 461, 0, 0,
	0, 0, 0, 929, 930, 298, 893, 293, 188, 205,
	923, 927, 340, 381, 387, 0, 0, 0, 229, 0,
	385, 354, 445, 213, 257, 378, 359, 383, 366, 260,
	0, 0, 384, 304, 432, 373, 442, 462, 463, 237,
	334, 452, 421, 458, 474, 206, 234, 348, 414, 448,
	405, 327, 428, 429, 292, 404, 266, 191, 302, 468,
	204, 393, 221, 211, 197, 416, 440, 218, 396, 0,
	0, 476, 199, 438, 413, 323, 289, 290, 198, 0,
	377, 242, 264, 232, 343, 435, 436, 230, 477, 208,
	457, 201, 0, 456, 336, 431, 439, 324, 314, 200,
	437, 322, 313, 295, 296, 297, 253, 275, 371, 307,
	372, 276, 332, 331, 333, 194, 449, 0, 195, 0,
	410, 450, 478, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 300, 347, 370, 368, 374, 0,
	426, 443, 453, 460, 466, 467, 469, 470, 471, 472,
	473, 335, 278, 406, 294, 305, 0, 0, 353, 386,
	219, 447, 407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 315, 398, 444, 0, 187, 202, 301, 0,
	375, 261, 475, 455, 451, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 311, 317, 318, 319, 320,
	337, 338, 339, 342, 345, 346, 349, 351, 352, 355,
	362, 363, 364, 365, 367, 369, 376, 380, 388, 389,
	390, 391, 392, 394, 395, 400, 401, 402, 403, 411,
	415, 433, 434, 446, 459, 464, 270, 441, 465, 0,
	310, 0, 0, 312, 254, 273, 284, 0, 454, 412,
	207, 382, 262, 196, 225, 210, 233, 248, 251, 288,
	321, 328, 357, 361, 267, 245, 223, 379, 220, 397,
	418, 419, 420, 422, 325, 240, 360, 423, 0, 308,
	424, 425, 280, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 1236, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 299, 241, 0, 0, 358, 0, 193,
	0, 399, 228, 309, 306, 430, 255, 247, 243, 227,
	281, 316, 356, 417, 350, 0, 303, 0, 0, 408,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 341,
	409, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 427, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 1097, 0, 1098, 1099, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 330, 231, 0, 0, 0, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	293, 188, 205, 0, 0, 340, 381, 387, 0, 0,
	0, 229, 0, 385, 354, 445, 213, 257, 378, 359,
	383, 366, 260, 0, 0, 384, 304, 432, 373, 442,
	462, 463, 237, 334, 452, 421, 458, 474, 206, 234,
	348, 414, 448, 405, 327, 428, 429, 292, 404, 266,
	191, 302, 468, 204, 393, 221, 211, 197, 416, 440,
	218, 396, 0, 0, 476, 199, 438, 413, 323, 289,
	290, 198, 0, 377, 242, 264, 232, 343, 435, 436,
	230, 477, 208, 457, 201, 0, 456, 336, 431, 439,
	324, 314, 200, 437, 322, 313, 295, 296, 297, 253,
	275, 371, 307, 372, 276, 332, 331, 333, 194, 449,
	0, 195, 0, 410, 450, 478, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 300, 347, 370,
	368, 374, 0, 426, 443, 453, 460, 466, 467, 469,
	470, 471, 472, 473, 335, 278, 406, 294, 305, 0,
	0, 353, 386, 219, 447, 407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 497, 315, 398, 444, 0, 187,
	202, 301, 0, 375, 261, 475, 455, 451, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 311, 317,
	318, 319, 320, 337, 338, 339, 342, 345, 346, 349,
	351, 352, 355, 362, 363, 364, 365, 367, 369, 376,
	380, 388, 389, 390, 391, 392, 394, 395, 400, 401,
	402, 403, 411, 415, 433, 434, 446, 459, 464, 270,
	441, 465, 0, 310, 0, 0, 312, 254, 273, 284,
	0, 454, 412, 207, 382, 262, 196, 225, 210, 233,
	248, 251, 288, 321, 328, 357, 361, 267, 245, 223,
	379, 220, 397, 418, 419, 420, 422, 325, 240, 360,
	423, 0, 308, 424, 425, 280, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 299, 241, 0, 0,
	358, 0, 193, 0, 399, 228, 309, 306, 430, 255,
	247, 243, 227, 281, 316, 356, 417, 350, 0, 303,
	0, 0, 408, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 341, 409, 259, 0, 0, 0, 0, 184,
	185, 186, 1178, 1181, 0, 0, 0, 0, 1177, 1180,
	0, 0, 217, 1176, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 427, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 330, 231, 0,
	0, 0, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 293, 188, 205, 0, 0, 340, 381,
	387, 0, 0, 0, 229, 0, 385, 354, 445, 213,
	257, 378, 359, 383, 366, 260, 0, 0, 384, 304,
	432, 373, 442, 462, 463, 237, 334, 452, 421, 458,
	474, 206, 234, 348, 414, 448, 405, 327, 428, 429,
	292, 404, 266, 191, 302, 468, 204, 393, 221, 211,
	197, 416, 440, 218, 396, 0, 0, 476, 199, 438,
	413, 323, 289, 290, 198, 0, 377, 242, 264, 232,
	343, 435, 436, 230, 477, 208, 457, 201, 0, 456,
	336, 431, 439, 324, 314, 200, 437, 322, 313, 295,
	296, 297, 253, 275, 371, 307, 372, 276, 332, 331,
	333, 194, 449, 0, 195, 0, 410, 450, 478, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	300, 347, 370, 368, 374, 0, 426, 443, 453, 460,
	466, 467, 469, 470, 471, 472, 473, 335, 278, 406,
	294, 305, 0, 0, 353, 386, 219, 447, 407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 315, 398,
	444, 0, 187, 202, 301, 0, 375, 261, 475, 455,
	451, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 311, 317, 318, 319, 320, 337, 338, 339, 342,
	345, 346, 349, 351, 352, 355, 362, 363, 364, 365,
	367, 369, 376, 380, 388, 389, 390, 391, 392, 394,
	395, 400, 401, 402, 403, 411, 415, 433, 434, 446,
	459, 464, 270, 441, 465, 0, 310, 0, 0, 312,
	254, 273, 284, 0, 454, 412, 207, 382, 262, 196,
	225, 210, 233, 248, 251, 288, 321, 328, 357, 361,
	267, 245, 223, 379, 220, 397, 418, 419, 420, 422,
	325, 240, 360, 78, 423, 308, 424, 425, 280, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	299, 241, 0, 0, 358, 0, 193, 0, 399, 228,
	309, 306, 430, 255, 247, 243, 227, 281, 316, 356,
	417, 350, 0, 303, 0, 0, 408, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 341, 409, 259, 0,
	87, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 427, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 330, 231, 0, 0, 0, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 293, 188, 205,
	0, 0, 340, 381, 387, 0, 0, 0, 229, 0,
	385, 354, 445, 213, 257, 378, 359, 383, 366, 260,
	0, 0, 384, 304, 432, 373, 442, 462, 463, 237,
	334, 452, 421, 458, 474, 206, 234, 348, 414, 448,
	405, 327, 428, 429, 292, 404, 266, 191, 302, 468,
	204, 393, 221, 211, 197, 416, 440, 218, 396, 0,
	0, 476, 199, 438, 413, 323, 289, 290, 198, 0,
	377, 242, 264, 232, 343, 435, 436, 230, 477, 208,
	457, 201, 0, 456, 336, 431, 439, 324, 314, 200,
	437, 322, 313, 295, 296, 297, 253, 275, 371, 307,
	372, 276, 332, 331, 333, 194, 449, 0, 195, 0,
	410, 450, 478, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 300, 347, 370, 368, 374, 0,
	426, 443, 453, 460, 466, 467, 469, 470, 471, 472,
	473, 335, 278, 406, 294, 305, 0, 0, 353, 386,
	219, 447, 407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 315, 398, 444, 0, 187, 202, 301, 86,
	375, 261, 475, 455, 451, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1671, 0, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 311, 317, 318, 319, 320,
	337, 338, 339, 342, 345, 346, 349, 351, 352, 355,
	362, 363, 364, 365, 367, 369, 376, 380, 388, 389,
	390, 391, 392, 394, 395, 400, 401, 402, 403, 411,
	415, 433, 434, 446, 459, 464, 270, 441, 465, 0,
	310, 0, 0, 312, 254, 273, 284, 0, 454, 412,
	207, 382, 262, 196, 225, 210, 233, 248, 251, 288,
	321, 328, 357, 361, 267, 245, 223, 379, 220, 397,
	418, 419, 420, 422, 325, 240, 360, 78, 423, 308,
	424, 425, 280, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 299, 241, 0, 0, 358, 0,
	193, 0, 399, 228, 309, 306, 430, 255, 247, 243,
	227, 281, 316, 356, 417, 350, 0, 303, 0, 0,
	408, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	341, 409, 259, 0, 87, 0, 1216, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 427, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 330, 231, 0, 0, 0,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 293, 188, 205, 0, 0, 340, 381, 387, 0,
	0, 0, 229, 0, 385, 354, 445, 213, 257, 378,
	359, 383, 366, 260, 0, 0, 384, 304, 432, 373,
	442, 462, 463, 237, 334, 452, 421, 458, 474, 206,
	234, 348, 414, 448, 405, 327, 428, 429, 292, 404,
	266, 191, 302, 468, 204, 393, 221, 211, 197, 416,
	440, 218, 396, 0, 0, 476, 199, 438, 413, 323,
	289, 290, 198, 0, 377, 242, 264, 232, 343, 435,
	436, 230, 477, 208, 457, 201, 0, 456, 336, 431,
	439, 324, 314, 200, 437, 322, 313, 295, 296, 297,
	253, 275, 371, 307, 372, 276, 332, 331, 333, 194,
	449, 0, 195, 0, 410, 450, 478, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 300, 347,
	370, 368, 374, 0, 426, 443, 453, 460, 466, 467,
	469, 470, 471, 472, 473, 335, 278, 406, 294, 305,
	0, 0, 353, 386, 219, 447, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 315, 398, 444, 0,
	187, 202, 301, 86, 375, 261, 475, 455, 451, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 311,
	317, 318, 319, 320, 337, 338, 339, 342, 345, 346,
	349, 351, 352, 355, 362, 363, 364, 365, 367, 369,
	376, 380, 388, 389, 390, 391, 392, 394, 395, 400,
	401, 402, 403, 411, 415, 433, 434, 446, 459, 464,
	270, 441, 465, 0, 310, 0, 0, 312, 254, 273,
	284, 0, 454, 412, 207, 382, 262, 196, 225, 210,
	233, 248, 251, 288, 321, 328, 357, 361, 267, 245,
	223, 379, 220, 397, 418, 419, 420, 422, 325, 240,
	360, 423, 0, 308, 424, 425, 280, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 1624, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 299, 241, 0,
	0, 358, 0, 193, 0, 399, 228, 309, 306, 430,
	255, 247, 243, 227, 281, 316, 356, 417, 350, 0,
	303, 0, 0, 408, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 341, 409, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 427, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 330, 231,
	0, 0, 0, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 293, 188, 205, 0, 0, 340,
	381, 387, 0, 0, 0, 229, 0, 385, 354, 445,
	213, 257, 378, 359, 383, 366, 260, 0, 1622, 384,
	304, 432, 373, 442, 462, 463, 237, 334, 452, 421,
	458, 474, 206, 234, 348, 414, 448, 405, 327, 428,
	429, 292, 404, 266, 191, 302, 468, 204, 393, 221,
	211, 197, 416, 440, 218, 396, 0, 0, 476, 199,
	438, 413, 323, 289, 290, 198, 0, 377, 242, 264,
	232, 343, 435, 436, 230, 477, 208, 457, 201, 0,
	456, 336, 431, 439, 324, 314, 200, 437, 322, 313,
	295, 296, 297, 253, 275, 371, 307, 372, 276, 332,
	331, 333, 194, 449, 0, 195, 0, 410, 450, 478,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 300, 347, 370, 368, 374, 0, 426, 443, 453,
	460, 466, 467, 469, 470, 471, 472, 473, 335, 278,
	406, 294, 305, 0, 0, 353, 386, 219, 447, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 497, 315,
	398, 444, 0, 187, 202, 301, 0, 375, 261, 475,
	455, 451, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 311, 317, 318, 319, 320, 337, 338, 339,
	342, 345, 346, 349, 351, 352, 355, 362, 363, 364,
	365, 367, 369, 376, 380, 388, 389, 390, 391, 392,
	394, 395, 400, 401, 402, 403, 411, 415, 433, 434,
	446, 459, 464, 270, 441, 465, 0, 310, 0, 0,
	312, 254, 273, 284, 0, 454, 412, 207, 382, 262,
	196, 225, 210, 233, 248, 251, 288, 321, 328, 357,
	361, 267, 245, 223, 379, 220, 397, 418, 419, 420,
	422, 325, 240, 360, 423, 0, 308, 424, 425, 280,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	299, 241, 0, 0, 358, 0, 193, 0, 399, 228,
	309, 306, 430, 255, 247, 243, 227, 281, 316, 356,
	417, 350, 0, 303, 0, 0, 408, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 341, 409, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 427, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	887, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 330, 231, 0, 0, 0, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 298, 893, 293, 188, 205,
	891, 0, 340, 381, 387, 0, 0, 0, 229, 0,
	385, 354, 445, 213, 257, 378, 359, 383, 366, 260,
	0, 0, 384, 304, 432, 373, 442, 462, 463, 237,
	334, 452, 421, 458, 474, 206, 234, 348, 414, 448,
	405, 327, 428, 429, 292, 404, 266, 191, 302, 468,
	204, 393, 221, 211, 197, 416, 440, 218, 396, 0,
	0, 476, 199, 438, 413, 323, 289, 290, 198, 0,
	377, 242, 264, 232, 343, 435, 436, 230, 477, 208,
	457, 201, 0, 456, 336, 431, 439, 324, 314, 200,
	437, 322, 313, 295, 296, 297, 253, 275, 371, 307,
	372, 276, 332, 331, 333, 194, 449, 0, 195, 0,
	410, 450, 478, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 300, 347, 370, 368, 374, 0,
	426, 443, 453, 460, 466, 467, 469, 470, 471, 472,
	473, 335, 278, 406, 294, 305, 0, 0, 353, 386,
	219, 447, 407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 315, 398, 444, 0, 187, 202, 301, 0,
	375, 261, 475, 455, 451, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 311, 317, 318, 319, 320,
	337, 338, 339, 342, 345, 346, 349, 351, 352, 355,
	362, 363, 364, 365, 367, 369, 376, 380, 388, 389,
	390, 391, 392, 394, 395, 400, 401, 402, 403, 411,
	415, 433, 434, 446, 459, 464, 270, 441, 465, 0,
	310, 0, 0, 312, 254, 273, 284, 0, 454, 412,
	207, 382, 262, 196, 225, 210, 233, 248, 251, 288,
	321, 328, 357, 361, 267, 245, 223, 379, 220, 397,
	418, 419, 420, 422, 325, 240, 360, 423, 0, 308,
	424, 425, 280, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 299, 241, 0, 0, 358, 0, 193,
	0, 399, 228, 309, 306, 430, 255, 247, 243, 227,
	281, 316, 356, 417, 350, 0, 303, 0, 0, 408,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 341,
	409, 259, 0, 0, 0, 1216, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 427, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 330, 231, 0, 0, 0, 0,
	461, 0, 0, 0, 2493, 0, 0, 0, 298, 0,
	293, 188, 205, 0, 0, 340, 381, 387, 0, 0,
	0, 229, 0, 385, 354, 445, 213, 257, 378, 359,
	383, 366, 260, 0, 0, 384, 304, 432, 373, 442,
	462, 463, 237, 334, 452, 421, 458, 474, 206, 234,
	348, 414, 448, 405, 327, 428, 429, 292, 404, 266,
	191, 302, 468, 204, 393, 221, 211, 197, 416, 440,
	218, 396, 0, 0, 476, 199, 438, 413, 323, 289,
	290, 198, 0, 377, 242, 264, 232, 343, 435, 436,
	230, 477, 208, 457, 201, 0, 456, 336, 431, 439,
	324, 314, 200, 437, 322, 313, 295, 296, 297, 253,
	275, 371, 307, 372, 276, 332, 331, 333, 194, 449,
	0, 195, 0, 410, 450, 478, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 300, 347, 370,
	368, 374, 0, 426, 443, 453, 460, 466, 467, 469,
	470, 471, 472, 473, 335, 278, 406, 294, 305, 0,
	0, 353, 386, 219, 447, 407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 497, 315, 398, 444, 0, 187,
	202, 301, 0, 375, 261, 475, 455, 451, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 311, 317,
	318, 319, 320, 337, 338, 339, 342, 345, 346, 349,
	351, 352, 355, 362, 363, 364, 365, 367, 369, 376,
	380, 388, 389, 390, 391, 392, 394, 395, 400, 401,
	402, 403, 411, 415, 433, 434, 446, 459, 464, 270,
	441, 465, 0, 310, 0, 0, 312, 254, 273, 284,
	0, 454, 412, 207, 382, 262, 196, 225, 210, 233,
	248, 251, 288, 321, 328, 357, 361, 267, 245, 223,
	379, 220, 397, 418, 419, 420, 422, 325, 240, 360,
	423, 0, 308, 424, 425, 280, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 1624, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 299, 241, 0, 0,
	358, 0, 193, 0, 399, 228, 309, 306, 430, 255,
	247, 243, 227, 281, 316, 356, 417, 350, 0, 303,
	0, 0, 408, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 341, 409, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 427, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 330, 231, 0,
	0, 0, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 293, 188, 205, 0, 0, 340, 381,
	387, 0, 0, 0, 229, 0, 385, 354, 445, 213,
	257, 378, 359, 383, 366, 260, 0, 0, 384, 304,
	432, 373, 442, 462, 463, 237, 334, 452, 421, 458,
	474, 206, 234, 348, 414, 448, 405, 327, 428, 429,
	292, 404, 266, 191, 302, 468, 204, 393, 221, 211,
	197, 416, 440, 218, 396, 0, 0, 476, 199, 438,
	413, 323, 289, 290, 198, 0, 377, 242, 264, 232,
	343, 435, 436, 230, 477, 208, 457, 201, 0, 456,
	336, 431, 439, 324, 314, 200, 437, 322, 313, 295,
	296, 297, 253, 275, 371, 307, 372, 276, 332, 331,
	333, 194, 449, 0, 195, 0, 410, 450, 478, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	300, 347, 370, 368, 374, 0, 426, 443, 453, 460,
	466, 467, 469, 470, 471, 472, 473, 335, 278, 406,
	294, 305, 0, 0, 353, 386, 219, 447, 407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 315, 398,
	444, 0, 187, 202, 301, 0, 375, 261, 475, 455,
	451, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 311, 317, 318, 319, 320, 337, 338, 339, 342,
	345, 346, 349, 351, 352, 355, 362, 363, 364, 365,
	367, 369, 376, 380, 388, 389, 390, 391, 392, 394,
	395, 400, 401, 402, 403, 411, 415, 433, 434, 446,
	459, 464, 270, 441, 465, 0, 310, 0, 0, 312,
	254, 273, 284, 0, 454, 412, 207, 382, 262, 196,
	225, 210, 233, 248, 251, 288, 321, 328, 357, 361,
	267, 245, 223, 379, 220, 397, 418, 419, 420, 422,
	325, 240, 360, 423, 0, 308, 424, 425, 280, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 299,
	241, 0, 0, 358, 0, 193, 0, 399, 228, 309,
	306, 430, 255, 247, 243, 227, 281, 316, 356, 417,
	350, 0, 303, 0, 0, 408, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 341, 409, 259, 0, 87,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 427, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	330, 231, 0, 0, 0, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 293, 188, 205, 0,
	0, 340, 381, 387, 0, 0, 0, 229, 0, 385,
	354, 445, 213, 257, 378, 359, 383, 366, 260, 0,
	0, 384, 304, 432, 373, 442, 462, 463, 237, 334,
	452, 421, 458, 474, 206, 234, 348, 414, 448, 405,
	327, 428, 429, 292, 404, 266, 191, 302, 468, 204,
	393, 221, 211, 197, 416, 440, 218, 396, 0, 0,
	476, 199, 438, 413, 323, 289, 290, 198, 0, 377,
	242, 264, 232, 343, 435, 436, 230, 477, 208, 457,
	201, 0, 456, 336, 431, 439, 324, 314, 200, 437,
	322, 313, 295, 296, 297, 253, 275, 371, 307, 372,
	276, 332, 331, 333, 194, 449, 0, 195, 0, 410,
	450, 478, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 300, 347, 370, 368, 374, 0, 426,
	443, 453, 460, 466, 467, 469, 470, 471, 472, 473,
	335, 278, 406, 294, 305, 0, 0, 353, 386, 219,
	447, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	497, 315, 398, 444, 0, 187, 202, 301, 0, 375,
	261, 475, 455, 451, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1671, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 311, 317, 318, 319, 320, 337,
	338, 339, 342, 345, 346, 349, 351, 352, 355, 362,
	363, 364, 365, 367, 369, 376, 380, 388, 389, 390,
	391, 392, 394, 395, 400, 401, 402, 403, 411, 415,
	433, 434, 446, 459, 464, 270, 441, 465, 0, 310,
	0, 0, 312, 254, 273, 284, 0, 454, 412, 207,
	382, 262, 196, 225, 210, 233, 248, 251, 288, 321,
	328, 357, 361, 267, 245, 223, 379, 220, 397, 418,
	419, 420, 422, 325, 240, 360, 423, 0, 308, 424,
	425, 280, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 299, 241, 0, 0, 358, 0, 193, 0,
	399, 228, 309, 306, 430, 255, 247, 243, 227, 281,
	316, 356, 417, 350, 0, 303, 0, 0, 408, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 341, 409,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1915,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	427, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1916,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 330, 231, 0, 0, 0, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 293,
	188, 205, 0, 0, 340, 381, 387, 0, 0, 0,
	229, 0, 385, 354, 445, 213, 257, 378, 359, 383,
	366, 260, 0, 0, 384, 304, 432, 373, 442, 462,
	463, 237, 334, 452, 421, 458, 474, 206, 234, 348,
	414, 448, 405, 327, 428, 429, 292, 404, 266, 191,
	302, 468, 204, 393, 221, 211, 197, 416, 440, 218,
	396, 0, 0, 476, 199, 438, 413, 323, 289, 290,
	198, 0, 377, 242, 264, 232, 343, 435, 436, 230,
	477, 208, 457, 201, 0, 456, 336, 431, 439, 324,
	314, 200, 437, 322, 313, 295, 296, 297, 253, 275,
	371, 307, 372, 276, 332, 331, 333, 194, 449, 0,
	195, 0, 410, 450, 478, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 300, 347, 370, 368,
	374, 0, 426, 443, 453, 460, 466, 467, 469, 470,
	471, 472, 473, 335, 278, 406, 294, 305, 0, 0,
	353, 386, 219, 447, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 497, 315, 398, 444, 0, 187, 202,
	301, 0, 375, 261, 475, 455, 451, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 311, 317, 318,
	319, 320, 337, 338, 339, 342, 345, 346, 349, 351,
	352, 355, 362, 363, 364, 365, 367, 369, 376, 380,
	388, 389, 390, 391, 392, 394, 395, 400, 401, 402,
	403, 411, 415, 433, 434, 446, 459, 464, 270, 441,
	465, 0, 310, 0, 0, 312, 254, 273, 284, 0,
	454, 412, 207, 382, 262, 196, 225, 210, 233, 248,
	251, 288, 321, 328, 357, 361, 267, 245, 223, 379,
	220, 397, 418, 419, 420, 422, 325, 240, 360, 423,
	0, 308, 424, 425, 280, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 299, 241, 0, 0, 358,
	0, 193, 0, 399, 228, 309, 306, 430, 255, 247,
	243, 227, 281, 316, 356, 417, 350, 0, 303, 0,
	0, 408, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 341, 409, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 1900, 0, 0, 0, 1901, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 427, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 330, 231, 0, 0,
	0, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 293, 188, 205, 0, 0, 340, 381, 387,
	0, 0, 0, 229, 0, 385, 354, 445, 213, 257,
	378, 359, 383, 366, 260, 0, 0, 384, 304, 432,
	373, 442, 462, 463, 237, 334, 452, 421, 458, 474,
	206, 234, 348, 414, 448, 405, 327, 428, 429, 292,
	404, 266, 191, 302, 468, 204, 393, 221, 211, 197,
	416, 440, 218, 396, 0, 0, 476, 199, 438, 413,
	323, 289, 290, 198, 0, 377, 242, 264, 232, 343,
	435, 436, 230, 477, 208, 457, 201, 0, 456, 336,
	431, 439, 324, 314, 200, 437, 322, 313, 295, 296,
	297, 253, 275, 371, 307, 372, 276, 332, 331, 333,
	194, 449, 0, 195, 0, 410, 450, 478, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 300,
	347, 370, 368, 374, 0, 426, 443, 453, 460, 466,
	467, 469, 470, 471, 472, 473, 335, 278, 406, 294,
	305, 0, 0, 353, 386, 219, 447, 407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 315, 398, 444,
	0, 187, 202, 301, 0, 375, 261, 475, 455, 451,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	311, 317, 318, 319, 320, 337, 338, 339, 342, 345,
	346, 349, 351, 352, 355, 362, 363, 364, 365, 367,
	369, 376, 380, 388, 389, 390, 391, 392, 394, 395,
	400, 401, 402, 403, 411, 415, 433, 434, 446, 459,
	464, 270, 441, 465, 0, 310, 0, 0, 312, 254,
	273, 284, 0, 454, 412, 207, 382, 262, 196, 225,
	210, 233, 248, 251, 288, 321, 328, 357, 361, 267,
	245, 223, 379, 220, 397, 418, 419, 420, 422, 325,
	240, 360, 423, 0, 308, 424, 425, 280, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 1259, 0, 0, 0, 299, 241,
	0, 0, 358, 0, 193, 0, 399, 228, 309, 306,
	430, 255, 247, 243, 227, 281, 316, 356, 417, 350,
	0, 303, 0, 0, 408, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 341, 409, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1258, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 427, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 330,
	231, 0, 0, 0, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 293, 188, 205, 0, 0,
	340, 381, 387, 0, 0, 0, 229, 0, 385, 354,
	445, 213, 257, 378, 359, 383, 366, 260, 0, 0,
	384, 304, 432, 373, 442, 462, 463, 237, 334, 452,
	421, 458, 474, 206, 234, 348, 414, 448, 405, 327,
	428, 429, 292, 404, 266, 191, 302, 468, 204, 393,
	221, 211, 197, 416, 440, 218, 396, 0, 0, 476,
	199, 438, 413, 323, 289, 290, 198, 0, 377, 242,
	264, 232, 343, 435, 436, 230, 477, 208, 457, 201,
	0, 456, 336, 431, 439, 324, 314, 200, 437, 322,
	313, 295, 296, 297, 253, 275, 371, 307, 372, 276,
	332, 331, 333, 194, 449, 0, 195, 0, 410, 450,
	478, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 300, 347, 370, 368, 374, 0, 426, 443,
	453, 460, 466, 467, 469, 470, 471, 472, 473, 335,
	278, 406, 294, 305, 0, 0, 353, 386, 219, 447,
	407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	315, 398, 444, 0, 187, 202, 301, 0, 375, 261,
	475, 455, 451, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 311, 317, 318, 319, 320, 337, 338,
	339, 342, 345, 346, 349, 351, 352, 355, 362, 363,
	364, 365, 367, 369, 376, 380, 388, 389, 390, 391,
	392, 394, 395, 400, 401, 402, 403, 411, 415, 433,
	434, 446, 459, 464, 270, 441, 465, 0, 310, 0,
	0, 312, 254, 273, 284, 0, 454, 412, 207, 382,
	262, 196, 225, 210, 233, 248, 251, 288, 321, 328,
	357, 361, 267, 245, 223, 379, 220, 397, 418, 419,
	420, 422, 325, 240, 360, 423, 0, 308, 424, 425,
	280, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 299, 241, 0, 0, 358, 0, 193, 0, 399,
	228, 309, 306, 430, 255, 247, 243, 227, 281, 316,
	356, 417, 350, 0, 303, 0, 0, 408, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 341, 409, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 427,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 330, 231, 0, 0, 0, 0, 461, 0,
	0, 0, 2561, 0, 0, 0, 298, 0, 293, 188,
	205, 0, 0, 340, 381, 387, 0, 0, 0, 229,
	0, 385, 354, 445, 213, 257, 378, 359, 383, 366,
	260, 0, 0, 384, 304, 432, 373, 442, 462, 463,
	237, 334, 452, 421, 458, 474, 206, 234, 348, 414,
	448, 405, 327, 428, 429, 292, 404, 266, 191, 302,
	468, 204, 393, 221, 211, 197, 416, 440, 218, 396,
	0, 0, 476, 199, 438, 413, 323, 289, 290, 198,
	0, 377, 242, 264, 232, 343, 435, 436, 230, 477,
	208, 457, 201, 0, 456, 336, 431, 439, 324, 314,
	200, 437, 322, 313, 295, 296, 297, 253, 275, 371,
	307, 372, 276, 332, 331, 333, 194, 449, 0, 195,
	0, 410, 450, 478, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 300, 347, 370, 368, 374,
	0, 426, 443, 453, 460, 466, 467, 469, 470, 471,
	472, 473, 335, 278, 406, 294, 305, 0, 0, 353,
	386, 219, 447, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 497, 315, 398, 444, 0, 187, 202, 301,
	0, 375, 261, 475, 455, 451, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 311, 317, 318, 319,
	320, 337, 338, 339, 342, 345, 346, 349, 351, 352,
	355, 362, 363, 364, 365, 367, 369, 376, 380, 388,
	389, 390, 391, 392, 394, 395, 400, 401, 402, 403,
	411, 415, 433, 434, 446, 459, 464, 270, 441, 465,
	0, 310, 0, 0, 312, 254, 273, 284, 0, 454,
	412, 207, 382, 262, 196, 225, 210, 233, 248, 251,
	288, 321, 328, 357, 361, 267, 245, 223, 379, 220,
	397, 418, 419, 420, 422, 325, 240, 360, 423, 0,
	308, 424, 425, 280, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 299, 241, 0, 0, 358, 0,
	193, 0, 399, 228, 309, 306, 430, 255, 247, 243,
	227, 281, 316, 356, 417, 350, 0, 303, 0, 0,
	408, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	341, 409, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 427, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 330, 231, 0, 0, 0,
	0, 461, 0, 0, 0, 2493, 0, 0, 0, 298,
	0, 293, 188, 205, 0, 0, 340, 381, 387, 0,
	0, 0, 229, 0, 385, 354, 445, 213, 257, 378,
	359, 383, 366, 260, 0, 0, 384, 304, 432, 373,
	442, 462, 463, 237, 334, 452, 421, 458, 474, 206,
	234, 348, 414, 448, 405, 327, 428, 429, 292, 404,
	266, 191, 302, 468, 204, 393, 221, 211, 197, 416,
	440, 218, 396, 0, 0, 476, 199, 438, 413, 323,
	289, 290, 198, 0, 377, 242, 264, 232, 343, 435,
	436, 230, 477, 208, 457, 201, 0, 456, 336, 431,
	439, 324, 314, 200, 437, 322, 313, 295, 296, 297,
	253, 275, 371, 307, 372, 276, 332, 331, 333, 194,
	449, 0, 195, 0, 410, 450, 478, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 300, 347,
	370, 368, 374, 0, 426, 443, 453, 460, 466, 467,
	469, 470, 471, 472, 473, 335, 278, 406, 294, 305,
	0, 0, 353, 386, 219, 447, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 315, 398, 444, 0,
	187, 202, 301, 0, 375, 261, 475, 455, 451, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 311,
	317, 318, 319, 320, 337, 338, 339, 342, 345, 346,
	349, 351, 352, 355, 362, 363, 364, 365, 367, 369,
	376, 380, 388, 389, 390, 391, 392, 394, 395, 400,
	401, 402, 403, 411, 415, 433, 434, 446, 459, 464,
	270, 441, 465, 0, 310, 0, 0, 312, 254, 273,
	284, 0, 454, 412, 207, 382, 262, 196, 225, 210,
	233, 248, 251, 288, 321, 328, 357, 361, 267, 245,
	223, 379, 220, 397, 418, 419, 420, 422, 325, 240,
	360, 423, 0, 308, 424, 425, 280, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 299, 241, 0,
	0, 358, 0, 193, 0, 399, 228, 309, 306, 430,
	255, 247, 243, 227, 281, 316, 356, 417, 350, 0,
	303, 0, 0, 408, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 341, 409, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 427, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 330, 231,
	0, 0, 0, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 293, 188, 205, 0, 0, 340,
	381, 387, 0, 0, 0, 229, 0, 385, 354, 445,
	213, 257, 378, 359, 383, 366, 260, 0, 0, 384,
	304, 432, 373, 442, 462, 463, 237, 334, 452, 421,
	458, 474, 206, 234, 348, 414, 448, 405, 327, 428,
	429, 292, 404, 266, 191, 302, 468, 204, 393, 221,
	211, 197, 416, 440, 218, 396, 0, 0, 476, 199,
	438, 413, 323, 289, 290, 198, 0, 377, 242, 264,
	232, 343, 435, 436, 230, 477, 208, 457, 201, 0,
	456, 336, 431, 439, 324, 314, 200, 437, 322, 313,
	295, 296, 297, 253, 275, 371, 307, 372, 276, 332,
	331, 333, 194, 449, 0, 195, 0, 410, 450, 478,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 300, 347, 370, 368, 374, 0, 426, 443, 453,
	460, 466, 467, 469, 470, 471, 472, 473, 335, 278,
	406, 294, 305, 0, 0, 353, 386, 219, 447, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 497, 315,
	398, 444, 0, 187, 202, 301, 0, 375, 261, 475,
	455, 451, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 311, 317, 318, 319, 320, 337, 338, 339,
	342, 345, 346, 349, 351, 352, 355, 362, 363, 364,
	365, 367, 369, 376, 380, 388, 389, 390, 391, 392,
	394, 395, 400, 401, 402, 403, 411, 415, 433, 434,
	446, 459, 464, 270, 441, 465, 0, 310, 0, 0,
	312, 254, 273, 284, 0, 454, 412, 207, 382, 262,
	196, 225, 210, 233, 248, 251, 288, 321, 328, 357,
	361, 267, 245, 223, 379, 220, 397, 418, 419, 420,
	422, 325, 240, 360, 0, 423, 308, 424, 425, 280,
	1672, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 299, 241, 0, 0, 358, 0, 193, 0, 399,
	228, 309, 306, 430, 255, 247, 243, 227, 281, 316,
	356, 417, 350, 0, 303, 0, 0, 408, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 341, 409, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 427,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 330, 231, 0, 0, 0, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 293, 188,
	205, 0, 0, 340, 381, 387, 0, 0, 0, 229,
	0, 385, 354, 445, 213, 257, 378, 359, 383, 366,
	260, 0, 0, 384, 304, 432, 373, 442, 462, 463,
	237, 334, 452, 421, 458, 474, 206, 234, 348, 414,
	448, 405, 327, 428, 429, 292, 404, 266, 191, 302,
	468, 204, 393, 221, 211, 197, 416, 440, 218, 396,
	0, 0, 476, 199, 438, 413, 323, 289, 290, 198,
	0, 377, 242, 264, 232, 343, 435, 436, 230, 477,
	208, 457, 201, 0, 456, 336, 431, 439, 324, 314,
	200, 437, 322, 313, 295, 296, 297, 253, 275, 371,
	307, 372, 276, 332, 331, 333, 194, 449, 0, 195,
	0, 410, 450, 478, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 300, 347, 370, 368, 374,
	0, 426, 443, 453, 460, 466, 467, 469, 470, 471,
	472, 473, 335, 278, 406, 294, 305, 0, 0, 353,
	386, 219, 447, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 497, 315, 398, 444, 0, 187, 202, 301,
	0, 375, 261, 475, 455, 451, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 311, 317, 318, 319,
	320, 337, 338, 339, 342, 345, 346, 349, 351, 352,
	355, 362, 363, 364, 365, 367, 369, 376, 380, 388,
	389, 390, 391, 392, 394, 395, 400, 401, 402, 403,
	411, 415, 433, 434, 446, 459, 464, 270, 441, 465,
	0, 310, 0, 0, 312, 254, 273, 284, 0, 454,
	412, 207, 382, 262, 196, 225, 210, 233, 248, 251,
	288, 321, 328, 357, 361, 267, 245, 223, 379, 220,
	397, 418, 419, 420, 422, 325, 240, 360, 423, 0,
	308, 424, 425, 280, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 299, 241, 0, 0, 358, 0,
	193, 0, 399, 228, 309, 306, 430, 255, 247, 243,
	227, 281, 316, 356, 417, 350, 0, 303, 0, 0,
	408, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	341, 409, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 427, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 330, 231, 0, 0, 0,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 293, 188, 205, 0, 0, 340, 381, 387, 0,
	0, 0, 229, 0, 385, 354, 445, 213, 257, 378,
	359, 383, 366, 260, 0, 0, 384, 304, 432, 373,
	442, 462, 463, 237, 334, 452, 421, 458, 474, 206,
	234, 348, 414, 448, 405, 327, 428, 429, 292, 404,
	266, 191, 302, 468, 204, 393, 221, 211, 197, 416,
	440, 218, 396, 0, 0, 476, 199, 438, 413, 323,
	289, 290, 198, 0, 377, 242, 264, 232, 343, 435,
	436, 230, 477, 208, 457, 201, 0, 456, 336, 431,
	439, 324, 314, 200, 437, 322, 313, 295, 296, 297,
	253, 275, 371, 307, 372, 276, 332, 331, 333, 194,
	449, 0, 195, 0, 410, 450, 478, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 300, 347,
	370, 368, 374, 0, 426, 443, 453, 460, 466, 467,
	469, 470, 471, 472, 473, 335, 278, 406, 294, 305,
	0, 0, 353, 386, 219, 447, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 315, 398, 444, 0,
	187, 202, 301, 0, 375, 261, 475, 455, 451, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 311,
	317, 318, 319, 320, 337, 338, 339, 342, 345, 346,
	349, 351, 352, 355, 362, 363, 364, 365, 367, 369,
	376, 380, 388, 389, 390, 391, 392, 394, 395, 400,
	401, 402, 403, 411, 415, 433, 434, 446, 459, 464,
	270, 441, 465, 0, 310, 0, 0, 312, 254, 273,
	284, 0, 454, 412, 207, 382, 262, 196, 225, 210,
	233, 248, 251, 288, 321, 328, 357, 361, 267, 245,
	223, 379, 220, 397, 418, 419, 420, 422, 325, 240,
	360, 423, 0, 308, 424, 425, 280, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 299, 241, 0,
	0, 358, 0, 193, 0, 399, 228, 309, 306, 430,
	255, 247, 243, 227, 281, 316, 356, 417, 350, 0,
	303, 0, 0, 408, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 341, 409, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 427, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 330, 231,
	0, 0, 0, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 293, 188, 205, 0, 0, 340,
	381, 387, 0, 0, 0, 229, 0, 385, 354, 445,
	213, 257, 378, 359, 383, 366, 260, 0, 0, 384,
	304, 432, 373, 442, 462, 463, 237, 334, 452, 421,
	458, 474, 206, 234, 348, 414, 448, 405, 327, 428,
	429, 292, 404, 266, 191, 302, 468, 204, 393, 221,
	211, 197, 416, 440, 218, 396, 0, 0, 476, 199,
	438, 413, 323, 289, 290, 198, 0, 377, 242, 264,
	232, 343, 435, 436, 230, 477, 208, 457, 201, 0,
	456, 336, 431, 439, 324, 314, 200, 437, 322, 313,
	295, 296, 297, 253, 275, 371, 307, 372, 276, 332,
	331, 333, 194, 449, 0, 195, 0, 410, 450, 478,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 300, 347, 370, 368, 374, 0, 426, 443, 453,
	460, 466, 467, 469, 470, 471, 472, 473, 335, 278,
	406, 294, 305, 0, 0, 353, 386, 219, 447, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 497, 315,
	398, 444, 0, 187, 202, 301, 0, 375, 261, 475,
	455, 451, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 311, 317, 318, 319, 320, 337, 338, 339,
	342, 345, 346, 349, 351, 352, 355, 362, 363, 364,
	365, 367, 369, 376, 380, 388, 389, 390, 391, 392,
	394, 395, 400, 401, 402, 403, 411, 415, 433, 434,
	446, 459, 464, 270, 441, 465, 0, 310, 0, 0,
	312, 254, 273, 284, 0, 454, 412, 207, 382, 262,
	196, 225, 210, 233, 248, 251, 288, 321, 328, 357,
	361, 267, 245, 223, 379, 220, 397, 418, 419, 420,
	422, 325, 240, 360, 423, 0, 308, 424, 425, 280,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	299, 241, 0, 0, 358, 0, 193, 0, 399, 228,
	309, 306, 430, 255, 247, 243, 227, 281, 316, 356,
	417, 350, 0, 303, 0, 0, 408, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 341, 409, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 427, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 330, 231, 0, 0, 0, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 293, 188, 205,
	0, 0, 340, 381, 387, 0, 0, 0, 229, 0,
	385, 354, 445, 213, 257, 378, 359, 383, 366, 260,
	0, 0, 384, 304, 432, 373, 442, 462, 463, 237,
	334, 452, 421, 458, 474, 206, 234, 348, 414, 448,
	405, 327, 428, 429, 292, 404, 266, 191, 302, 468,
	204, 393, 221, 211, 197, 416, 440, 218, 396, 0,
	0, 476, 199, 438, 413, 323, 289, 290, 198, 0,
	377, 242, 264, 232, 343, 435, 436, 230, 477, 208,
	457, 201, 0, 456, 336, 431, 439, 324, 314, 200,
	437, 322, 313, 295, 296, 297, 253, 275, 371, 307,
	372, 276, 332, 331, 333, 194, 449, 0, 195, 0,
	410, 450, 478, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 300, 347, 370, 368, 374, 0,
	426, 443, 453, 460, 466, 467, 469, 470, 471, 472,
	473, 335, 278, 406, 294, 305, 0, 0, 353, 386,
	219, 447, 407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 315, 398, 444, 0, 187, 202, 301, 1500,
	375, 261, 475, 455, 451, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 311, 317, 318, 319, 320,
	337, 338, 339, 342, 345, 346, 349, 351, 352, 355,
	362, 363, 364, 365, 367, 369, 376, 380, 388, 389,
	390, 391, 392, 394, 395, 400, 401, 402, 403, 411,
	415, 433, 434, 446, 459, 464, 270, 441, 465, 0,
	310, 0, 0, 312, 254, 273, 284, 0, 454, 412,
	207, 382, 262, 196, 225, 210, 233, 248, 251, 288,
	321, 328, 357, 361, 267, 245, 223, 379, 220, 397,
	418, 419, 420, 422, 325, 240, 360, 423, 0, 308,
	424, 425, 280, 0, 0, 0, 0, 0, 0, 344,
	0, 1380, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 299, 241, 0, 0, 358, 0, 193,
	0, 399, 228, 309, 306, 430, 255, 247, 243, 227,
	281, 316, 356, 417, 350, 0, 303, 0, 0, 408,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 341,
	409, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 427, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 330, 231, 0, 0, 0, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	293, 188, 205, 0, 0, 340, 381, 387, 0, 0,
	0, 229, 0, 385, 354, 445, 213, 257, 378, 359,
	383, 366, 260, 0, 0, 384, 304, 432, 373, 442,
	462, 463, 237, 334, 452, 421, 458, 474, 206, 234,
	348, 414, 448, 405, 327, 428, 429, 292, 404, 266,
	191, 302, 468, 204, 393, 221, 211, 197, 416, 440,
	218, 396, 0, 0, 476, 199, 438, 413, 323, 289,
	290, 198, 0, 377, 242, 264, 232, 343, 435, 436,
	230, 477, 208, 457, 201, 0, 456, 336, 431, 439,
	324, 314, 200, 437, 322, 313, 295, 296, 297, 253,
	275, 371, 307, 372, 276, 332, 331, 333, 194, 449,
	0, 195, 0, 410, 450, 478, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 300, 347, 370,
	368, 374, 0, 426, 443, 453, 460, 466, 467, 469,
	470, 471, 472, 473, 335, 278, 406, 294, 305, 0,
	0, 353, 386, 219, 447, 407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 497, 315, 398, 444, 0, 187,
	202, 301, 0, 375, 261, 475, 455, 451, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 311, 317,
	318, 319, 320, 337, 338, 339, 342, 345, 346, 349,
	351, 352, 355, 362, 363, 364, 365, 367, 369, 376,
	380, 388, 389, 390, 391, 392, 394, 395, 400, 401,
	402, 403, 411, 415, 433, 434, 446, 459, 464, 270,
	441, 465, 0, 310, 0, 0, 312, 254, 273, 284,
	0, 454, 412, 207, 382, 262, 196, 225, 210, 233,
	248, 251, 288, 321, 328, 357, 361, 267, 245, 223,
	379, 220, 397, 418, 419, 420, 422, 325, 240, 360,
	423, 0, 308, 424, 425, 280, 0, 0, 0, 0,
	0, 0, 344, 0, 1378, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 299, 241, 0, 0,
	358, 0, 193, 0, 399, 228, 309, 306, 430, 255,
	247, 243, 227, 281, 316, 356, 417, 350, 0, 303,
	0, 0, 408, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 341, 409, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 427, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 330, 231, 0,
	0, 0, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 293, 188, 205, 0, 0, 340, 381,
	387, 0, 0, 0, 229, 0, 385, 354, 445, 213,
	257, 378, 359, 383, 366, 260, 0, 0, 384, 304,
	432, 373, 442, 462, 463, 237, 334, 452, 421, 458,
	474, 206, 234, 348, 414, 448, 405, 327, 428, 429,
	292, 404, 266, 191, 302, 468, 204, 393, 221, 211,
	197, 416, 440, 218, 396, 0, 0, 476, 199, 438,
	413, 323, 289, 290, 198, 0, 377, 242, 264, 232,
	343, 435, 436, 230, 477, 208, 457, 201, 0, 456,
	336, 431, 439, 324, 314, 200, 437, 322, 313, 295,
	296, 297, 253, 275, 371, 307, 372, 276, 332, 331,
	333, 194, 449, 0, 195, 0, 410, 450, 478, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	300, 347, 370, 368, 374, 0, 426, 443, 453, 460,
	466, 467, 469, 470, 471, 472, 473, 335, 278, 406,
	294, 305, 0, 0, 353, 386, 219, 447, 407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 315, 398,
	444, 0, 187, 202, 301, 0, 375, 261, 475, 455,
	451, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 311, 317, 318, 319, 320, 337, 338, 339, 342,
	345, 346, 349, 351, 352, 355, 362, 363, 364, 365,
	367, 369, 376, 380, 388, 389, 390, 391, 392, 394,
	395, 400, 401, 402, 403, 411, 415, 433, 434, 446,
	459, 464, 270, 441, 465, 0, 310, 0, 0, 312,
	254, 273, 284, 0, 454, 412, 207, 382, 262, 196,
	225, 210, 233, 248, 251, 288, 321, 328, 357, 361,
	267, 245, 223, 379, 220, 397, 418, 419, 420, 422,
	325, 240, 360, 423, 0, 308, 424, 425, 280, 0,
	0, 0, 0, 0, 0, 344, 0, 1376, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 299,
	241, 0, 0, 358, 0, 193, 0, 399, 228, 309,
	306, 430, 255, 247, 243, 227, 281, 316, 356, 417,
	350, 0, 303, 0, 0, 408, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 341, 409, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 427, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	330, 231, 0, 0, 0, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 293, 188, 205, 0,
	0, 340, 381, 387, 0, 0, 0, 229, 0, 385,
	354, 445, 213, 257, 378, 359, 383, 366, 260, 0,
	0, 384, 304, 432, 373, 442, 462, 463, 237, 334,
	452, 421, 458, 474, 206, 234, 348, 414, 448, 405,
	327, 428, 429, 292, 404, 266, 191, 302, 468, 204,
	393, 221, 211, 197, 416, 440, 218, 396, 0, 0,
	476, 199, 438, 413, 323, 289, 290, 198, 0, 377,
	242, 264, 232, 343, 435, 436, 230, 477, 208, 457,
	201, 0, 456, 336, 431, 439, 324, 314, 200, 437,
	322, 313, 295, 296, 297, 253, 275, 371, 307, 372,
	276, 332, 331, 333, 194, 449, 0, 195, 0, 410,
	450, 478, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 300, 347, 370, 368, 374, 0, 426,
	443, 453, 460, 466, 467, 469, 470, 471, 472, 473,
	335, 278, 406, 294, 305, 0, 0, 353, 386, 219,
	447, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	497, 315, 398, 444, 0, 187, 202, 301, 0, 375,
	261, 475, 455, 451, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 311, 317, 318, 319, 320, 337,
	338, 339, 342, 345, 346, 349, 351, 352, 355, 362,
	363, 364, 365, 367, 369, 376, 380, 388, 389, 390,
	391, 392, 394, 395, 400, 401, 402, 403, 411, 415,
	433, 434, 446, 459, 464, 270, 441, 465, 0, 310,
	0, 0, 312, 254, 273, 284, 0, 454, 412, 207,
	382, 262, 196, 225, 210, 233, 248, 251, 288, 321,
	328, 357, 361, 267, 245, 223, 379, 220, 397, 418,
	419, 420, 422, 325, 240, 360, 423, 0, 308, 424,
	425, 280, 0, 0, 0, 0, 0, 0, 344, 0,
	1374, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 299, 241, 0, 0, 358, 0, 193, 0,
	399, 228, 309, 306, 430, 255, 247, 243, 227, 281,
	316, 356, 417, 350, 0, 303, 0, 0, 408, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 341, 409,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	427, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 330, 231, 0, 0, 0, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 293,
	188, 205, 0, 0, 340, 381, 387, 0, 0, 0,
	229, 0, 385, 354, 445, 213, 257, 378, 359, 383,
	366, 260, 0, 0, 384, 304, 432, 373, 442, 462,
	463, 237, 334, 452, 421, 458, 474, 206, 234, 348,
	414, 448, 405, 327, 428, 429, 292, 404, 266, 191,
	302, 468, 204, 393, 221, 211, 197, 416, 440, 218,
	396, 0, 0, 476, 199, 438, 413, 323, 289, 290,
	198, 0, 377, 242, 264, 232, 343, 435, 436, 230,
	477, 208, 457, 201, 0, 456, 336, 431, 439, 324,
	314, 200, 437, 322, 313, 295, 296, 297, 253, 275,
	371, 307, 372, 276, 332, 331, 333, 194, 449, 0,
	195, 0, 410, 450, 478, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 300, 347, 370, 368,
	374, 0, 426, 443, 453, 460, 466, 467, 469, 470,
	471, 472, 473, 335, 278, 406, 294, 305, 0, 0,
	353, 386, 219, 447, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 497, 315, 398, 444, 0, 187, 202,
	301, 0, 375, 261, 475, 455, 451, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 311, 317, 318,
	319, 320, 337, 338, 339, 342, 345, 346, 349, 351,
	352, 355, 362, 363, 364, 365, 367, 369, 376, 380,
	388, 389, 390, 391, 392, 394, 395, 400, 401, 402,
	403, 411, 415, 433, 434, 446, 459, 464, 270, 441,
	465, 0, 310, 0, 0, 312, 254, 273, 284, 0,
	454, 412, 207, 382, 262, 196, 225, 210, 233, 248,
	251, 288, 321, 328, 357, 361, 267, 245, 223, 379,
	220, 397, 418, 419, 420, 422, 325, 240, 360, 423,
	0, 308, 424, 425, 280, 0, 0, 0, 0, 0,
	0, 344, 0, 1372, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 299, 241, 0, 0, 358,
	0, 193, 0, 399, 228, 309, 306, 430, 255, 247,
	243, 227, 281, 316, 356, 417, 350, 0, 303, 0,
	0, 408, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 341, 409, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 427, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 330, 231, 0, 0,
	0, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 293, 188, 205, 0, 0, 340, 381, 387,
	0, 0, 0, 229, 0, 385, 354, 445, 213, 257,
	378, 359, 383, 366, 260, 0, 0, 384, 304, 432,
	373, 442, 462, 463, 237, 334, 452, 421, 458, 474,
	206, 234, 348, 414, 448, 405, 327, 428, 429, 292,
	404, 266, 191, 302, 468, 204, 393, 221, 211, 197,
	416, 440, 218, 396, 0, 0, 476, 199, 438, 413,
	323, 289, 290, 198, 0, 377, 242, 264, 232, 343,
	435, 436, 230, 477, 208, 457, 201, 0, 456, 336,
	431, 439, 324, 314, 200, 437, 322, 313, 295, 296,
	297, 253, 275, 371, 307, 372, 276, 332, 331, 333,
	194, 449, 0, 195, 0, 410, 450, 478, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 300,
	347, 370, 368, 374, 0, 426, 443, 453, 460, 466,
	467, 469, 470, 471, 472, 473, 335, 278, 406, 294,
	305, 0, 0, 353, 386, 219, 447, 407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 315, 398, 444,
	0, 187, 202, 301, 0, 375, 261, 475, 455, 451,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	311, 317, 318, 319, 320, 337, 338, 339, 342, 345,
	346, 349, 351, 352, 355, 362, 363, 364, 365, 367,
	369, 376, 380, 388, 389, 390, 391, 392, 394, 395,
	400, 401, 402, 403, 411, 415, 433, 434, 446, 459,
	464, 270, 441, 465, 0, 310, 0, 0, 312, 254,
	273, 284, 0, 454, 412, 207, 382, 262, 196, 225,
	210, 233, 248, 251, 288, 321, 328, 357, 361, 267,
	245, 223, 379, 220, 397, 418, 419, 420, 422, 325,
	240, 360, 423, 0, 308, 424, 425, 280, 0, 0,
	0, 0, 0, 0, 344, 0, 1368, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 299, 241,
	0, 0, 358, 0, 193, 0, 399, 228, 309, 306,
	430, 255, 247, 243, 227, 281, 316, 356, 417, 350,
	0, 303, 0, 0, 408, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 341, 409, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 427, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 330,
	231, 0, 0, 0, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 293, 188, 205, 0, 0,
	340, 381, 387, 0, 0, 0, 229, 0, 385, 354,
	445, 213, 257, 378, 359, 383, 366, 260, 0, 0,
	384, 304, 432, 373, 442, 462, 463, 237, 334, 452,
	421, 458, 474, 206, 234, 348, 414, 448, 405, 327,
	428, 429, 292, 404, 266, 191, 302, 468, 204, 393,
	221, 211, 197, 416, 440, 218, 396, 0, 0, 476,
	199, 438, 413, 323, 289, 290, 198, 0, 377, 242,
	264, 232, 343, 435, 436, 230, 477, 208, 457, 201,
	0, 456, 336, 431, 439, 324, 314, 200, 437, 322,
	313, 295, 296, 297, 253, 275, 371, 307, 372, 276,
	332, 331, 333, 194, 449, 0, 195, 0, 410, 450,
	478, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 300, 347, 370, 368, 374, 0, 426, 443,
	453, 460, 466, 467, 469, 470, 471, 472, 473, 335,
	278, 406, 294, 305, 0, 0, 353, 386, 219, 447,
	407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	315, 398, 444, 0, 187, 202, 301, 0, 375, 261,
	475, 455, 451, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 311, 317, 318, 319, 320, 337, 338,
	339, 342, 345, 346, 349, 351, 352, 355, 362, 363,
	364, 365, 367, 369, 376, 380, 388, 389, 390, 391,
	392, 394, 395, 400, 401, 402, 403, 411, 415, 433,
	434, 446, 459, 464, 270, 441, 465, 0, 310, 0,
	0, 312, 254, 273, 284, 0, 454, 412, 207, 382,
	262, 196, 225, 210, 233, 248, 251, 288, 321, 328,
	357, 361, 267, 245, 223, 379, 220, 397, 418, 419,
	420, 422, 325, 240, 360, 423, 0, 308, 424, 425,
	280, 0, 0, 0, 0, 0, 0, 344, 0, 1366,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 299, 241, 0, 0, 358, 0, 193, 0, 399,
	228, 309, 306, 430, 255, 247, 243, 227, 281, 316,
	356, 417, 350, 0, 303, 0, 0, 408, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 341, 409, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 427,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 330, 231, 0, 0, 0, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 293, 188,
	205, 0, 0, 340, 381, 387, 0, 0, 0, 229,
	0, 385, 354, 445, 213, 257, 378, 359, 383, 366,
	260, 0, 0, 384, 304, 432, 373, 442, 462, 463,
	237, 334, 452, 421, 458, 474, 206, 234, 348, 414,
	448, 405, 327, 428, 429, 292, 404, 266, 191, 302,
	468, 204, 393, 221, 211, 197, 416, 440, 218, 396,
	0, 0, 476, 199, 438, 413, 323, 289, 290, 198,
	0, 377, 242, 264, 232, 343, 435, 436, 230, 477,
	208, 457, 201, 0, 456, 336, 431, 439, 324, 314,
	200, 437, 322, 313, 295, 296, 297, 253, 275, 371,
	307, 372, 276, 332, 331, 333, 194, 449, 0, 195,
	0, 410, 450, 478, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 300, 347, 370, 368, 374,
	0, 426, 443, 453, 460, 466, 467, 469, 470, 471,
	472, 473, 335, 278, 406, 294, 305, 0, 0, 353,
	386, 219, 447, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 497, 315, 398, 444, 0, 187, 202, 301,
	0, 375, 261, 475, 455, 451, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 311, 317, 318, 319,
	320, 337, 338, 339, 342, 345, 346, 349, 351, 352,
	355, 362, 363, 364, 365, 367, 369, 376, 380, 388,
	389, 390, 391, 392, 394, 395, 400, 401, 402, 403,
	411, 415, 433, 434, 446, 459, 464, 270, 441, 465,
	0, 310, 0, 0, 312, 254, 273, 284, 0, 454,
	412, 207, 382, 262, 196, 225, 210, 233, 248, 251,
	288, 321, 328, 357, 361, 267, 245, 223, 379, 220,
	397, 418, 419, 420, 422, 325, 240, 360, 423, 0,
	308, 424, 425, 280, 0, 0, 0, 0, 0, 0,
	344, 0, 1364, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 299, 241, 0, 0, 358, 0,
	193, 0, 399, 228, 309, 306, 430, 255, 247, 243,
	227, 281, 316, 356, 417, 350, 0, 303, 0, 0,
	408, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	341, 409, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 427, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 330, 231, 0, 0, 0,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 293, 188, 205, 0, 0, 340, 381, 387, 0,
	0, 0, 229, 0, 385, 354, 445, 213, 257, 378,
	359, 383, 366, 260, 0, 0, 384, 304, 432, 373,
	442, 462, 463, 237, 334, 452, 421, 458, 474, 206,
	234, 348, 414, 448, 405, 327, 428, 429, 292, 404,
	266, 191, 302, 468, 204, 393, 221, 211, 197, 416,
	440, 218, 396, 0, 0, 476, 199, 438, 413, 323,
	289, 290, 198, 0, 377, 242, 264, 232, 343, 435,
	436, 230, 477, 208, 457, 201, 0, 456, 336, 431,
	439, 324, 314, 200, 437, 322, 313, 295, 296, 297,
	253, 275, 371, 307, 372, 276, 332, 331, 333, 194,
	449, 0, 195, 0, 410, 450, 478, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 300, 347,
	370, 368, 374, 0, 426, 443, 453, 460, 466, 467,
	469, 470, 471, 472, 473, 335, 278, 406, 294, 305,
	0, 0, 353, 386, 219, 447, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 495, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 497, 315, 398, 444, 0,
	187, 202, 301, 0, 375, 261, 475, 455, 451, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 311,
	317, 318, 319, 320, 337, 338, 339, 342, 345, 346,
	349, 351, 352, 355, 362, 363, 364, 365, 367, 369,
	376, 380, 388, 389, 390, 391, 392, 394, 395, 400,
	401, 402, 403, 411, 415, 433, 434, 446, 459, 464,
	270, 441, 465, 0, 310, 0, 0, 312, 254, 273,
	284, 0, 454, 412, 207, 382, 262, 196, 225, 210,
	233, 248, 251, 288, 321, 328, 357, 361, 267, 245,
	223, 379, 220, 397, 418, 419, 420, 422, 325, 240,
	360, 423, 0, 308, 424, 425, 280, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 299, 241, 0,
	0, 358, 0, 193, 0, 399, 228, 309, 306, 430,
	255, 247, 243, 227, 281, 316, 356, 417, 350, 0,
	303, 0, 0, 408, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 341, 409, 259, 0, 1341, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 427, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 330, 231,
	0, 0, 0, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 293, 188, 205, 0, 0, 340,
	381, 387, 0, 0, 0, 229, 0, 385, 354, 445,
	213, 257, 378, 359, 383, 366, 260, 0, 0, 384,
	304, 432, 373, 442, 462, 463, 237, 334, 452, 421,
	458, 474, 206, 234, 348, 414, 448, 405, 327, 428,
	429, 292, 404, 266, 191, 302, 468, 204, 393, 221,
	211, 197, 416, 440, 218, 396, 0, 0, 476, 199,
	438, 413, 323, 289, 290, 198, 0, 377, 242, 264,
	232, 343, 435, 436, 230, 477, 208, 457, 201, 0,
	456, 336, 431, 439, 324, 314, 200, 437, 322, 313,
	295, 296, 297, 253, 275, 371, 307, 372, 276, 332,
	331, 333, 194, 449, 0, 195, 0, 410, 450, 478,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 300, 347, 370, 368, 374, 0, 426, 443, 453,
	460, 466, 467, 469, 470, 471, 472, 473, 335, 278,
	406, 294, 305, 0, 0, 353, 386, 219, 447, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 497, 315,
	398, 444, 0, 187, 202, 301, 0, 375, 261, 475,
	455, 451, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 311, 317, 318, 319, 320, 337, 338, 339,
	342, 345, 346, 349, 351, 352, 355, 362, 363, 364,
	365, 367, 369, 376, 380, 388, 389, 390, 391, 392,
	394, 395, 400, 401, 402, 403, 411, 415, 433, 434,
	446, 459, 464, 270, 441, 465, 0, 310, 0, 0,
	312, 254, 273, 284, 0, 454, 412, 207, 382, 262,
	196, 225, 210, 233, 248, 251, 288, 321, 328, 357,
	361, 267, 245, 223, 379, 220, 397, 418, 419, 420,
	422, 325, 240, 360, 423, 0, 308, 424, 425, 280,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 1243, 244, 0, 0, 0, 0,
	299, 241, 0, 0, 358, 0, 193, 0, 399, 228,
	309, 306, 430, 255, 247, 243, 227, 281, 316, 356,
	417, 350, 0, 303, 0, 0, 408, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 341, 409, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 427, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 330, 231, 0, 0, 0, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 293, 188, 205,
	0, 0, 340, 381, 387, 0, 0, 0, 229, 0,
	385, 354, 445, 213, 257, 378, 359, 383, 366, 260,
	0, 0, 384, 304, 432, 373, 442, 462, 463, 237,
	334, 452, 421, 458, 474, 206, 234, 348, 414, 448,
	405, 327, 428, 429, 292, 404, 266, 191, 302, 468,
	204, 393, 221, 211, 197, 416, 440, 218, 396, 0,
	0, 476, 199, 438, 413, 323, 289, 290, 198, 0,
	377, 242, 264, 232, 343, 435, 436, 230, 477, 208,
	457, 201, 0, 456, 336, 431, 439, 324, 314, 200,
	437, 322, 313, 295, 296, 297, 253, 275, 371, 307,
	372, 276, 332, 331, 333, 194, 449, 0, 195, 0,
	410, 450, 478, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 300, 347, 370, 368, 374, 0,
	426, 443, 453, 460, 466, 467, 469, 470, 471, 472,
	473, 335, 278, 406, 294, 305, 0, 0, 353, 386,
	219, 447, 407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 495,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 497, 315, 398, 444, 0, 187, 202, 301, 0,
	375, 261, 475, 455, 451, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 311, 317, 318, 319, 320,
	337, 338, 339, 342, 345, 346, 349, 351, 352, 355,
	362, 363, 364, 365, 367, 369, 376, 380, 388, 389,
	390, 391, 392, 394, 395, 400, 401, 402, 403, 411,
	415, 433, 434, 446, 459, 464, 270, 441, 465, 0,
	310, 0, 0, 312, 254, 273, 284, 0, 454, 412,
	207, 382, 262, 196, 225, 210, 233, 248, 251, 288,
	321, 328, 357, 361, 267, 245, 223, 379, 220, 397,
	418, 419, 420, 422, 325, 240, 360, 423, 0, 308,
	424, 425, 280, 0, 0, 0, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 299, 241, 0, 0, 358, 0, 193,
	0, 399, 228, 309, 306, 430, 255, 247, 243, 227,
	281, 316, 356, 417, 350, 0, 303, 0, 0, 408,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 341,
	409, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 427, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 330, 231, 0, 0, 0, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	293, 188, 205, 0, 0, 340, 381, 387, 0, 0,
	0, 229, 0, 385, 354, 445, 213, 257, 378, 359,
	383, 366, 260, 0, 0, 384, 304, 432, 373, 442,
	462, 463, 237, 334, 452, 421, 458, 474, 206, 234,
	348, 414, 448, 405, 327, 428, 429, 292, 404, 266,
	191, 302, 468, 204, 393, 221, 211, 197, 416, 440,
	218, 396, 0, 0, 476, 199, 438, 413, 323, 289,
	290, 198, 0, 377, 242, 264, 232, 343, 435, 436,
	230, 477, 208, 457, 201, 0, 456, 336, 431, 439,
	324, 314, 200, 437, 322, 313, 295, 296, 297, 253,
	275, 371, 307, 372, 276, 332, 331, 333, 194, 449,
	0, 195, 0, 410, 450, 478, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 300, 347, 370,
	368, 374, 0, 426, 443, 453, 460, 466, 467, 469,
	470, 471, 472, 473, 335, 278, 406, 294, 305, 0,
	0, 353, 386, 219, 447, 407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 495, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 497, 315, 398, 444, 0, 187,
	202, 301, 0, 375, 261, 475, 455, 451, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 311, 317,
	318, 319, 320, 337, 338, 339, 342, 345, 346, 349,
	351, 352, 355, 362, 363, 364, 365, 367, 369, 376,
	380, 388, 389, 390, 391, 392, 394, 395, 400, 401,
	402, 403, 411, 415, 433, 434, 446, 459, 464, 270,
	441, 465, 0, 310, 0, 0, 312, 254, 273, 284,
	0, 454, 412, 207, 382, 262, 196, 225, 210, 233,
	248, 251, 288, 321, 328, 357, 361, 267, 245, 223,
	379, 220, 397, 418, 419, 420, 422, 325, 240, 360,
	423, 0, 308, 424, 425, 280, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 299, 241, 0, 0,
	358, 0, 193, 0, 399, 228, 309, 306, 430, 255,
	247, 243, 227, 281, 316, 356, 417, 350, 0, 303,
	0, 0, 408, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 341, 409, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 427, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 330, 231, 0,
	0, 0, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 293, 188, 205, 0, 0, 340, 381,
	387, 0, 0, 0, 229, 0, 385, 354, 445, 213,
	257, 378, 359, 383, 366, 260, 0, 0, 384, 304,
	432, 373, 442, 462, 463, 237, 334, 452, 421, 458,
	474, 206, 234, 348, 414, 448, 405, 327, 428, 429,
	292, 404, 266, 191, 302, 468, 204, 393, 221, 211,
	197, 416, 440, 218, 396, 0, 0, 476, 199, 438,
	413, 323, 289, 290, 198, 0, 377, 242, 264, 232,
	343, 435, 436, 230, 477, 208, 457, 201, 0, 456,
	336, 431, 439, 324, 314, 200, 437, 322, 313, 295,
	296, 297, 253, 275, 371, 307, 372, 276, 332, 331,
	333, 194, 449, 0, 195, 0, 410, 450, 478, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	300, 347, 370, 368, 374, 0, 426, 443, 453, 460,
	466, 467, 469, 470, 471, 472, 473, 335, 278, 406,
	294, 305, 0, 0, 353, 386, 219, 447, 407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 495, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 315, 398,
	444, 0, 187, 202, 301, 0, 375, 261, 475, 455,
	451, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 326, 0, 0, 0, 0,
	0, 0, 702, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 311, 317, 318, 319, 320, 337, 338, 339, 342,
	345, 346, 349, 351, 352, 355, 362, 363, 364, 365,
	367, 369, 376, 380, 388, 389, 390, 391, 392, 394,
	395, 400, 401, 402, 403, 411, 415, 433, 434, 446,
	459, 464, 270, 441, 465, 0, 310, 0, 0, 312,
	254, 273, 284, 0, 454, 412, 207, 382, 262, 196,
	225, 210, 233, 248, 251, 288, 321, 328, 357, 361,
	267, 245, 223, 379, 220, 397, 418, 419, 420, 422,
	325, 240, 360, 423, 0, 308, 424, 425, 280, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 299,
	241, 0, 0, 358, 0, 193, 0, 399, 228, 309,
	306, 430, 255, 247, 243, 227, 281, 316, 356, 417,
	350, 0, 303, 0, 0, 408, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 341, 409, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 427, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 0, 268, 0,
	330, 231, 0, 0, 0, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 293, 188, 205, 0,
	0, 340, 381, 387, 0, 0, 0, 229, 0, 385,
	354, 445, 213, 257, 378, 359, 383, 366, 260, 0,
	0, 384, 304, 432, 373, 442, 462, 463, 237, 334,
	452, 421, 458, 474, 206, 234, 348, 414, 448, 405,
	327, 428, 429, 292, 404, 266, 191, 302, 468, 204,
	393, 221, 211, 197, 416, 440, 218, 396, 0, 0,
	476, 199, 438, 413, 323, 289, 290, 198, 0, 377,
	242, 264, 232, 343, 435, 436, 230, 477, 208, 457,
	201, 0, 456, 336, 431, 439, 324, 314, 200, 437,
	322, 313, 295, 296, 297, 253, 275, 371, 307, 372,
	276, 332, 331, 333, 194, 449, 0, 195, 0, 410,
	450, 478, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 300, 347, 370, 368, 374, 0, 426,
	443, 453, 460, 466, 467, 469, 470, 471, 472, 473,
	335, 278, 406, 294, 305, 0, 0, 353, 386, 219,
	447, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	497, 315, 398, 444, 0, 187, 202, 301, 0, 375,
	261, 475, 455, 451, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 311, 317, 318, 319, 320, 337,
	338, 339, 342, 345, 346, 349, 351, 352, 355, 362,
	363, 364, 365, 367, 369, 376, 380, 388, 389, 390,
	391, 392, 394, 395, 400, 401, 402, 403, 411, 415,
	433, 434, 446, 459, 464, 552, 441, 465, 0, 310,
	0, 0, 312, 254, 273, 284, 0, 454, 412, 207,
	382, 262, 196, 225, 210, 233, 248, 251, 288, 321,
	328, 357, 361, 267, 245, 223, 379, 220, 397, 418,
	419, 420, 422, 325, 240, 360, 423, 0, 308, 424,
	425, 280, 0, 0, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 299, 241, 0, 0, 358, 0, 193, 0,
	399, 228, 309, 306, 430, 255, 247, 243, 227, 281,
	316, 356, 417, 350, 0, 303, 0, 0, 408, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 341, 409,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	427, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 330, 231, 0, 0, 500, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 293,
	188, 205, 0, 0, 340, 381, 387, 0, 0, 0,
	229, 0, 385, 354, 445, 213, 257, 378, 359, 383,
	366, 260, 0, 0, 384, 304, 432, 373, 442, 462,
	463, 237, 334, 452, 421, 458, 474, 206, 234, 348,
	414, 448, 405, 327, 428, 429, 292, 404, 266, 191,
	302, 468, 204, 393, 221, 211, 197, 416, 440, 218,
	396, 0, 0, 476, 199, 438, 413, 323, 289, 290,
	198, 0, 377, 242, 264, 232, 343, 435, 436, 230,
	477, 208, 457, 201, 0, 456, 336, 431, 439, 324,
	314, 200, 437, 322, 313, 295, 296, 297, 253, 275,
	371, 307, 372, 276, 332, 331, 333, 194, 449, 0,
	195, 0, 410, 450, 478, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 300, 347, 370, 368,
	374, 0, 426, 443, 453, 460, 466, 467, 469, 470,
	471, 472, 473, 335, 278, 406, 294, 305, 0, 0,
	353, 386, 219, 447, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 497, 315, 398, 444, 0, 187, 202,
	301, 0, 375, 261, 475, 455, 451, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 311, 317, 318,
	319, 320, 337, 338, 339, 342, 345, 346, 349, 351,
	352, 355, 362, 363, 364, 365, 367, 369, 376, 380,
	388, 389, 390, 391, 392, 394, 395, 400, 401, 402,
	403, 411, 415, 433, 434, 446, 459, 464, 270, 441,
	465, 0, 310, 0, 0, 312, 254, 273, 284, 0,
	454, 412, 207, 382, 262, 196, 225, 210, 233, 248,
	251, 288, 321, 328, 357, 361, 267, 245, 223, 379,
	220, 397, 418, 419, 420, 422, 325, 240, 360, 423,
	0, 308, 424, 425, 280, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 299, 241, 0, 0, 358,
	0, 193, 0, 399, 228, 309, 306, 430, 255, 247,
	243, 227, 281, 316, 356, 417, 350, 0, 303, 0,
	0, 408, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 341, 409, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 427, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 330, 231, 0, 0,
	0, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 293, 188, 205, 0, 0, 340, 381, 387,
	0, 0, 0, 229, 0, 385, 354, 445, 213, 257,
	378, 359, 383, 366, 260, 0, 0, 384, 304, 432,
	373, 442, 462, 463, 237, 334, 452, 421, 458, 474,
	206, 234, 348, 414, 448, 405, 327, 428, 429, 292,
	404, 266, 191, 302, 468, 204, 393, 221, 211, 197,
	416, 440, 218, 396, 0, 0, 476, 199, 438, 413,
	323, 289, 290, 198, 0, 377, 242, 264, 232, 343,
	435, 436, 230, 477, 208, 457, 201, 0, 456, 336,
	431, 439, 324, 314, 200, 437, 322, 313, 295, 296,
	297, 253, 275, 371, 307, 372, 276, 332, 331, 333,
	194, 449, 0, 195, 0, 410, 450, 478, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 300,
	347, 370, 368, 374, 0, 426, 443, 453, 460, 466,
	467, 469, 470, 471, 472, 473, 335, 278, 406, 294,
	305, 0, 0, 353, 386, 219, 447, 407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 315, 398, 444,
	0, 187, 202, 301, 0, 375, 261, 475, 455, 451,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	311, 317, 318, 319, 320, 337, 338, 339, 342, 345,
	346, 349, 351, 352, 355, 362, 363, 364, 365, 367,
	369, 376, 380, 388, 389, 390, 391, 392, 394, 395,
	400, 401, 402, 403, 411, 415, 433, 434, 446, 459,
	464, 270, 441, 465, 0, 310, 0, 0, 312, 254,
	273, 284, 0, 454, 412, 207, 382, 262, 196, 225,
	210, 233, 248, 251, 288, 321, 328, 357, 361, 267,
	245, 223, 379, 220, 397, 418, 419, 420, 422, 325,
	240, 360, 423, 0, 308, 424, 425, 280, 0, 0,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 299, 241,
	0, 0, 358, 0, 193, 0, 399, 228, 309, 306,
	430, 255, 247, 243, 227, 281, 316, 356, 417, 350,
	0, 303, 0, 0, 408, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 341, 409, 259, 0, 0, 0,
	0, 184, 2293, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 427, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 330,
	231, 0, 0, 0, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 293, 188, 205, 0, 0,
	340, 381, 387, 0, 0, 0, 229, 0, 385, 354,
	445, 213, 257, 378, 359, 383, 366, 260, 0, 0,
	384, 304, 432, 373, 442, 462, 463, 237, 334, 452,
	421, 458, 474, 206, 234, 348, 414, 448, 405, 327,
	428, 429, 292, 404, 266, 191, 302, 468, 204, 393,
	221, 211, 197, 416, 440, 218, 396, 0, 0, 476,
	199, 438, 413, 323, 289, 290, 198, 0, 377, 242,
	264, 232, 343, 435, 436, 230, 477, 208, 457, 201,
	0, 456, 336, 431, 439, 324, 314, 200, 437, 322,
	313, 295, 296, 297, 253, 275, 371, 307, 372, 276,
	332, 331, 333, 194, 449, 0, 195, 0, 410, 450,
	478, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 300, 347, 370, 368, 374, 0, 426, 443,
	453, 460, 466, 467, 469, 470, 471, 472, 473, 335,
	278, 406, 294, 305, 0, 0, 353, 386, 219, 447,
	407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 495, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	315, 398, 444, 0, 187, 202, 301, 0, 375, 261,
	475, 455, 451, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 311, 317, 318, 319, 320, 337, 338,
	339, 342, 345, 346, 349, 351, 352, 355, 362, 363,
	364, 365, 367, 369, 376, 380, 388, 389, 390, 391,
	392, 394, 395, 400, 401, 402, 403, 411, 415, 433,
	434, 446, 459, 464, 270, 441, 465, 0, 310, 0,
	0, 312, 254, 273, 284, 0, 454, 412, 207, 382,
	262, 196, 225, 210, 233, 248, 251, 288, 321, 328,
	357, 361, 267, 245, 223, 379, 220, 397, 418, 419,
	420, 422, 325, 240, 360, 423, 0, 308, 424, 425,
	280, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 299, 241, 0, 0, 358, 0, 193, 0, 399,
	228, 309, 306, 430, 255, 247, 243, 227, 281, 316,
	356, 417, 350, 0, 303, 0, 0, 408, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 341, 409, 259,
	0, 0, 0, 0, 184, 1896, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 427,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 330, 231, 0, 0, 0, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 293, 188,
	205, 0, 0, 340, 381, 387, 0, 0, 0, 229,
	0, 385, 354, 445, 213, 257, 378, 359, 383, 366,
	260, 0, 0, 384, 304, 432, 373, 442, 462, 463,
	237, 334, 452, 421, 458, 474, 206, 234, 348, 414,
	448, 405, 327, 428, 429, 292, 404, 266, 191, 302,
	468, 204, 393, 221, 211, 197, 416, 440, 218, 396,
	0, 0, 476, 199, 438, 413, 323, 289, 290, 198,
	0, 377, 242, 264, 232, 343, 435, 436, 230, 477,
	208, 457, 201, 0, 456, 336, 431, 439, 324, 314,
	200, 437, 322, 313, 295, 296, 297, 253, 275, 371,
	307, 372, 276, 332, 331, 333, 194, 449, 0, 195,
	0, 410, 450, 478, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 300, 347, 370, 368, 374,
	0, 426, 443, 453, 460, 466, 467, 469, 470, 471,
	472, 473, 335, 278, 406, 294, 305, 0, 0, 353,
	386, 219, 447, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	495, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 497, 315, 398, 444, 0, 187, 202, 301,
	0, 375, 261, 475, 455, 451, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 311, 317, 318, 319,
	320, 337, 338, 339, 342, 345, 346, 349, 351, 352,
	355, 362, 363, 364, 365, 367, 369, 376, 380, 388,
	389, 390, 391, 392, 394, 395, 400, 401, 402, 403,
	411, 415, 433, 434, 446, 459, 464, 270, 441, 465,
	0, 310, 0, 0, 312, 254, 273, 284, 0, 454,
	412, 207, 382, 262, 196, 225, 210, 233, 248, 251,
	288, 321, 328, 357, 361, 267, 245, 223, 379, 220,
	397, 418, 419, 420, 422, 325, 240, 360, 0, 0,
	308, 424, 425, 280,
}

var yyPact = [...]int{
	3447, -1000, -395, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1721, 1755, -1000, -1000,
	-1000, -1000, 1894, -1000, 607, 1500, -1000, 1733, 300, -1000,
	34992, 399, -1000, 34439, 398, 4457, 34992, -1000, 111, -1000,
	93, 34992, 100, 33886, -1000, -1000, -314, 15081, 1674, -2,
	-16, 34992, -1000, -1000, -1000, -1000, 1857, 1536, -1000, 243,
	-1000, -1000, -1000, -1000, -1000, -1000, 33333, -1000, -1000, -1000,
	1747, 1723, 1898, 544, 1690, -1000, 1808, 1536, -1000, 15081,
	1841, 1789, 14528, -1000, 14528, 320, -1000, -1000, 10650, -1000,
	-1000, 19507, 34992, 34992, 576, -1000, 1733, -1000, -1000, 275,
	-1000, 215, 1438, -1000, 1421, -1000, 543, 457, 263, 357,
	355, 258, 251, 249, 248, 246, 244, 240, 239, 241,
	-1000, 563, 563, -201, -202, 2849, 305, 305, 305, 337,
	1703, 1688, -1000, 628, -1000, 563, 563, 274, 563, 563,
	563, 563, 191, 189, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 298,
	1733, 181, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34992, 87,
	34992, -1000, 469, 34992, 707, 707, 19, 707, 707, 707,
	707, 112, 491, -19, -1000, 109, 173, 74, 179, 689,
	105, 103, -1000, -1000, 175, 689, 1143, 549, 80, -1000,
	707, 8406, 8406, 8406, -1000, 1719, -1000, -1000, -1000, -1000,
	-1000, -1000, 1149, -1000, 336, -1000, -1000, -1000, -1000, 34992,
	32780, 227, 572, -1000, -1000, -1000, 69, -1000, -1000, 1292,
	666, 15081, 900, -1000, 1455, 486, -1000, -1000, -1000, -1000,
	-1000, 428, 15634, 15634, 15634, 15634, -1000, -1000, 1443, 1443,
	1443, 1443, 15634, 1443, 15634, 1443, 1443, 1443, 1443, 15081,
	1443, 1443, 1443, -1000, 1443, 1443, 1443, 1443, 1443, 1443,
	1443, 1443, 1443, 1443, 1443, 1443, 1443, 467, 1443, 1443,
	1443, 1443, 1443, -1000, -1000, -1000, -1000, 1443, 1443, 1443,
	1443, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	17293, -1000, 12869, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 34992, -1000, 1443, 116, 34992, 34992, 221, 1808,
	1536, -1000, 1857, 1820, 243, -1000, 2035, 1341, 1218, 914,
	1536, 1384, 34992, -1000, 1448, -1000, -1000, -1000, 1618, 1035,
	1141, -1000, -1000, -1000, -1000, 1062, 15081, -1000, -1000, 1882,
	-1000, 16740, 463, 804, 1880, 32227, -1000, 320, 320, 1420,
	10089, -42, -1000, -1000, -1000, 571, 22825, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1719, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1357, 34992, -1000, -1000,
	4635, 1068, -1000, 1498, -1000, 1354, -1000, 1467, 1511, 361,
	1068, 351, 348, 347, -1000, -118, -1000, -1000, -1000, -1000,
	-1000, 563, 563, -1000, 230, 1840, 300, 3077, -1000, -1000,
	-1000, 31674, 1497, 1068, -1000, 1493, -1000, 678, 419, 442,
	442, 1068, -1000, -1000, 34992, 1068, 677, 673, 34992, 34992,
	-1000, 31121, -1000, 30568, 30015, 992, 34992, 29462, 28909, 28356,
	27803, 27250, -1000, 1587, -1000, 1533, -1000, -1000, -1000, 34992,
	34992, 34992, 276, -1000, -1000, 34992, 1068, -1000, -1000, 986,
	985, 563, 563, 981, 1139, 1138, 1132, 563, 563, 980,
	1122, 24484, 167, 973, 970, 968, 936, 1104, 192, 912,
	902, 963, 34992, 1492, 34992, -1000, 168, 547, 332, 570,
	1733, 1673, 1408, 335, 359, 1068, 315, 315, 34992, -1000,
	8967, -1000, -1000, 1096, 15081, -1000, 740, 689, 689, -1000,
	-1000, -1000, -1000, -1000, -1000, 707, 34992, 740, -1000, -1000,
	-1000, 689, 707, 34992, 707, 707, 707, 707, 689, 689,
	689, 707, 34992, 34992, 34992, 34992, 34992, 34992, 34992, 34992,
	34992, 8406, 8406, 8406, 549, 707, -319, -1000, 1093, -1000,
	1568, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	97, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-108, 1388, 26697, -1000, -320, -321, -325, -326, -1000, -1000,
	-1000, -332, -338, -1000, -1000, -1000, 15081, 15081, 15081, 15081,
	-1000, 885, 15634, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	881, 636, 15634, 15634, 15634, 15634, 15634, 15634, 15634, 15634,
	15634, 15634, 15634, 15634, 15634, 15634, 15634, 745, 1083, 1082,
	486, 486, 486, 486, -1000, 14528, 15081, 15081, 486, -1000,
	1068, 26144, 14528, 14528, 15081, 1717, 598, 666, 34992, -1000,
	914, -1000, -1000, -1000, 838, -1000, 34992, 34992, 416, 15081,
	15081, 15081, 11762, 15081, 15081, 11209, 8967, 14528, 14528, 14528,
	14528, 14528, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 462, 1297, 1234, 1352, -1000, 1385, -1000,
	-176, 18954, 15081, 1075, 1877, 1547, 34992, -1000, -1000, -1000,
	1808, -1000, 1808, 1297, 1838, 1622, 14528, -1000, -1000, 1838,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1237, -1000,
	34992, 1384, 1778, 34992, 1616, 1074, 269, -1000, 15081, 15081,
	1383, -1000, 882, 34992, -1000, -1000, 25591, -1000, -1000, 7845,
	-1000, 34992, 224, 34992, -1000, 21166, 25038, 9528, -42, -1000,
	9528, 1371, -1000, -51, -48, 12315, 515, -1000, -1000, -1000,
	2849, 16187, 1258, 515, 40, -1000, -1000, -1000, 1467, -1000,
	1467, 1467, 1467, 1467, 269, 269, 269, 269, -1000, -1000,
	-1000, -1000, -1000, 1491, 1488, -1000, 1467, 1467, 1467, 1467,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1487, 1487, 1487,
	1468, 1468, 296, -1000, 15081, 199, 34992, 1761, 937, 168,
	318, 1545, 1068, 1068, 1068, 318, -1000, 1187, 1181, -1000,
	-385, 1382, -1000, -1000, 1836, -1000, -1000, 657, 746, 700,
	675, 34992, 127, 222, -1000, 292, -1000, 34992, 1068, 661,
	442, 1068, -1000, 1068, -1000, -1000, -1000, -1000, -1000, 1068,
	1378, -1000, 1318, 814, 699, 776, 696, 1378, -1000, -1000,
	-151, 1378, -1000, 1378, -1000, 1378, -1000, 1378, -1000, 1378,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 593, 34992,
	127, 745, -1000, 333, -1000, -1000, 745, 745, -1000, -1000,
	-1000, -1000, 1069, 1059, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -374, 34992, -1000, 164, 565, 201, 236, 207, 34992,
	134, 1798, 152, 188, 34992, 34992, 315, 1567, 34992, 1757,
	34992, -1000, -1000, -1000, -1000, -1000, 666, 34992, -1000, -1000,
	707, 707, -1000, -1000, 34992, 707, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 707, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 34992, 34992, -1000, -1000, -1000, -1000, -1000, 126,
	-55, 252, -1000, -1000, -1000, -1000, -1000, 1803, -1000, 666,
	658, 608, -1000, -1000, -1000, 853, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 881, 15634, 15634, 15634, 1365, 376, 1732,
	1822, 1502, 715, 715, 819, 819, 522, 522, 522, 522,
	522, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1334, -1000,
	1044, 991, 914, -1000, 1334, 1334, 877, 14528, -1000, -1000,
	623, -1000, 15081, 914, -1000, -1000, 914, 1377, 1376, 1859,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 752, 1006, 1006, 15081, 984, -1000, -1000, -1000, 1100,
	1094, 914, 14528, 14528, 1372, 1443, 460, -1000, 1334, 914,
	914, 1334, 1334, 8967, 914, -1000, 34992, -1000, -311, -1000,
	-78, 480, 1443, -1000, 24484, 914, 1292, -1000, 1021, -1000,
	36098, -1000, -1000, -1000, -1000, -1000, 22272, 1483, 1838, -1000,
	-1000, 1443, 1350, -1000, -1000, 269, 17, 21719, -1000, -1000,
	666, 666, 15081, -1000, -1000, -1000, -1000, -1000, -1000, 446,
	1842, 313, 1443, -1000, 1274, 1738, -1000, -1000, -1000, 1777,
	17847, 1443, 34992, 1452, 1415, -1000, 435, -1000, 1371, -42,
	-64, -1000, -1000, -1000, -1000, 666, -1000, 1153, 233, 2594,
	-1000, 307, -1000, -1000, -1000, -1000, 1680, 21, -1000, -1000,
	-1000, 269, 269, -1000, -1000, -1000, -1000, -1000, -1000, 1054,
	1054, -1000, -1000, -1000, -1000, -1000, 929, -1000, -1000, -1000,
	928, -1000, -1000, 1133, 1557, 199, -1000, -1000, 563, 1050,
	1682, 34992, -1000, -1000, 1216, 164, 34992, 603, 1564, -1000,
	1545, 1545, 1545, 34992, -1000, -1000, -1000, -1000, -376, 49,
	286, -1000, -1000, -1000, 374, 34992, 1347, -1000, 135, -1000,
	1214, 1641, 34992, -1000, 1338, 1485, 1068, 1068, -1000, -1000,
	-1000, 34992, 1443, -1000, -1000, -1000, -1000, 358, 1728, 1722,
	127, 135, 515, 1068, -1000, -1000, -1000, -1000, -1000, -377,
	1336, 340, 143, 213, 34992, 34992, 34992, 34992, 34992, 411,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 186, 328,
	-1000, 34992, 34992, 436, -1000, -1000, -1000, 689, -1000, -1000,
	689, -1000, -1000, -1000, -1000, -1000, 1716, 34992, -63, -350,
	-1000, -346, -1000, -1000, -1000, -1000, 1055, 364, 1732, 15634,
	15634, 14528, -139, 1229, 1229, 745, -1000, -1000, -1000, 15081,
	15081, 1379, 594, -1000, 15081, 634, -1000, -1000, 15081, 15081,
	15081, 914, 225, -1000, -1000, 1858, -1000, 15081, 15081, 15081,
	-1000, 1334, 1334, 14528, 8967, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 480, -1000, 442, 442, 442,
	34992, -1000, -1000, -1000, -1000, -1000, -1000, 1359, 1804, -1000,
	1636, 1634, 1856, 1842, -1000, 21166, 1838, -1000, -1000, 34992,
	-304, -1000, 1670, 1640, -1000, -1000, -1000, -1000, 7284, 1808,
	15081, 1562, 34992, 1443, -1000, 18401, 34992, 34992, 21166, 21166,
	21166, 21166, 21166, -1000, 1605, 1604, -1000, 1603, 1601, 1579,
	34992, -1000, 1332, 914, 1820, 17847, 243, 20613, 1243, 21166,
	-1000, -1000, 21166, 34992, 6723, -1000, -1000, -71, -83, -1000,
	-1000, -1000, -1000, 2849, -1000, -1000, 368, 1767, 1678, -1000,
	-1000, -1000, -1000, 1329, -1000, 1325, 1320, 1316, 92, -1000,
	1509, 1715, 563, 563, -1000, 923, -1000, 1068, -1000, -1000,
	339, -1000, 1753, 34992, 1560, 1554, 1553, -1000, -384, 918,
	1474, 1508, 15081, 1471, 1835, 1302, 34992, -1000, -1000, 34992,
	-1000, -1000, 319, -1000, 199, 34992, -1000, -1000, -1000, 222,
	34992, -1000, 5199, 135, -1000, -1000, -1000, -1000, -1000, -1000,
	34992, 154, -1000, 1470, 1000, -1000, -1000, 1540, -1000, -1000,
	-1000, -1000, 121, 197, -1000, 34992, 407, 1557, 34992, -1000,
	-1000, -1000, 707, 707, -1000, -1000, 1711, -1000, 1068, 15634,
	15634, -1000, 486, -1000, 1443, 914, 1467, 1467, -1000, 1467,
	1468, -1000, 1467, 86, 1467, 75, 1467, -1000, -1000, 914,
	914, 812, 861, -128, -1000, 666, 15081, 1037, 1022, 1006,
	-1000, 1466, 1465, 15081, 1006, 1006, 1006, -1000, -1000, 914,
	-1000, -1000, 1802, 1802, 1802, 1290, 35545, 34992, -1000, -1000,
	-1000, -1000, 1842, 1825, 1307, -1000, -1000, 17, 322, -1000,
	1648, 1640, -1000, 1834, 1651, 1830, -1000, -1000, -1000, 666,
	-1000, 1741, 1267, -1000, 562, 1281, -1000, -1000, 13975, 1309,
	1632, 421, 1290, 1340, 1738, 1516, 1552, 1638, -1000, -1000,
	-1000, -1000, 1583, -1000, 1566, -1000, -1000, 1448, -1000, -1000,
	1234, 914, 224, 21166, 1263, 1263, -1000, 409, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 790, 5326, 1897, -1000, 1048,
	-1000, 1103, -1000, 652, 650, -1000, 34992, 1464, -1000, 269,
	1047, 269, 909, -1000, 893, -1000, -1000, -247, -1000, -1000,
	1428, 1556, -1000, -1000, 34992, -1000, -1000, 34992, 34992, 34992,
	1462, 1828, -1000, 15081, 1461, 559, 1090, 34992, 34992, -1000,
	-1000, 202, 1443, -1000, 1287, 1271, -1000, -205, -1000, 15081,
	-1000, -1000, -1000, 1001, 1001, -1000, 1448, -1000, -1000, -1000,
	1209, -1000, -1000, -155, 34992, 34992, 34992, 34992, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 486, 15634, -1000,
	-1000, 269, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15081, -1000, 15081, -1000, 1808, 1028, 666, 15081, 15081,
	-1000, 889, 868, 1006, -1000, -1000, -1000, -1000, 1443, 1667,
	1443, 1443, 20613, -1000, -1000, 1825, 1846, 1827, 1646, 1661,
	1661, 1648, -1000, 1826, 1824, -1000, 1025, 1823, 1014, 646,
	-1000, 34992, 15081, 1443, -1000, 237, 34992, 1443, 34992, -1000,
	1821, -1000, -1000, 15081, 1460, -1000, 15081, -1000, -1000, -1000,
	-1000, -1000, -1000, 1842, 1263, -1000, -1000, 535, -1000, 15081,
	-1000, -1000, -1000, 1170, -1000, -1000, -1000, -1000, -1000, 1457,
	15081, -1000, -1000, -1000, 1185, 1172, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1448, -1000, -1000, -1000, -1000, 222,
	-382, 1051, 34992, 851, -1000, 1255, 1302, 394, -1000, 15081,
	261, -1000, 222, -1000, -210, -213, 1006, -1000, -1000, 1765,
	-1000, -1000, 8967, -1000, -1000, 1445, 1543, -1000, 204, -1000,
	1006, 1006, 914, -1000, 1006, 1006, 1165, 1095, -1000, 20060,
	-1000, 1818, 1810, 23931, 23931, 480, 1846, -1000, 15081, 15081,
	1643, 847, -1000, -1000, -1000, -1000, 1013, 1012, -1000, 1007,
	-1000, 1892, -1000, 666, -1000, 1443, -1000, 383, 1281, -1000,
	1808, 666, 34992, 666, 1821, -1000, 1006, -1000, 1443, 1443,
	1443, 1443, 1443, 1443, 34992, 997, -1000, -1000, 1760, 1253,
	48, -1000, 1251, -1000, -1000, -1000, -1000, 13422, -1000, -1000,
	-1000, -1000, -1000, -1000, 243, 1300, -1000, 558, 34992, 34992,
	914, 218, -162, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1236, -1000, -1000, -1000, -1000, -1000, 1236, 1236, -1000, -1000,
	666, 1292, -1000, 800, -1000, -1000, -1000, -1000, -1000, 34992,
	1281, 34992, -1000, 1227, 1808, -1000, 1225, -1000, 243, -1000,
	1440, 1508, -1000, 914, -154, 8967, 6162, 1212, -1000, -1000,
	1614, -144, -197, 23378, -1000, -1000, -1000, -1000, -1000, 1279,
	-1000, -1000, -1000, 1550, 856, -154, 15081, 1298, -1000, -1000,
	-60, -1000, -1000, -1000, -1000, -1000, 1540, -1000, 1506, -1000,
	-1000, -1000, 1549, -1000, 1853, -1000, -1000, -1000, 770, 998,
	-1000, -1000, -1000, -1000, 907, 34992, 277, -1000, -1000, -155,
	-156, -1000, 1885, 501, 501, -1000, -1000, -390, 1176, 166,
	-1000, -165, -1000, -1000, -1000, 287, 830, -1000, -1000, 811,
	-390, -1000, -203, -1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2229, 2228, 17, 1, 2214, 13, 79, 161, 16,
	172, 76, 2213, 2212, 2211, 2203, 2201, 2197, 2196, 199,
	196, 195, 2195, 2193, 2192, 2191, 2189, 2188, 2186, 2184,
	2183, 2181, 192, 140, 158, 2180, 2178, 2177, 99, 153,
	66, 70, 157, 2176, 2175, 53, 2174, 2173, 2172, 152,
	150, 677, 2171, 149, 84, 25, 2169, 2168, 2166, 2165,
	2163, 2162, 2161, 2158, 2156, 2155, 2153, 2152, 2151, 2150,
	238, 2149, 2148, 6, 2147, 59, 2146, 2145, 2144, 2143,
	100, 2142, 2141, 2140, 2139, 2138, 2137, 121, 2136, 2135,
	2134, 2133, 163, 2132, 2131, 162, 83, 81, 2130, 2129,
	90, 160, 2128, 98, 2127, 2126, 2124, 132, 2123, 562,
	2122, 47, 44, 2120, 165, 52, 43, 40, 2119, 2115,
	2114, 45, 58, 2112, 78, 61, 2111, 77, 103, 2110,
	42, 2109, 2105, 97, 2104, 2103, 2102, 75, 2099, 2095,
	3420, 2094, 73, 117, 80, 55, 2093, 23, 41, 2092,
	2091, 2090, 2089, 2088, 27, 2087, 2086, 2085, 120, 21,
	2083, 18, 28, 34, 116, 2081, 19, 60, 2079, 119,
	115, 2078, 38, 11, 20, 2077, 24, 106, 135, 29,
	110, 107, 2075, 2074, 37, 49, 2073, 2072, 2070, 2065,
	2064, 2063, 48, 2062, 31, 2061, 173, 2060, 8, 2058,
	36, 22, 2054, 39, 74, 46, 12, 2052, 164, 2050,
	32, 139, 105, 136, 2041, 2040, 2039, 151, 216, 2037,
	2032, 63, 141, 122, 128, 2030, 225, 2028, 2022, 68,
	1316, 1666, 15, 142, 2020, 2018, 2968, 126, 108, 35,
	2017, 94, 2013, 2012, 2010, 166, 146, 82, 904, 92,
	2008, 2000, 1998, 1996, 1995, 1993, 1992, 1991, 213, 167,
	130, 86, 138, 50, 1990, 1989, 1987, 96, 69, 1986,
	137, 134, 102, 155, 1985, 143, 125, 129, 1984, 85,
	1982, 1980, 1979, 1964, 71, 1963, 1962, 1961, 1958, 133,
	123, 95, 67, 1956, 65, 88, 127, 131, 30, 1951,
	33, 1944, 1943, 154, 7, 1938, 3, 0, 1936, 4,
	144, 224, 147, 1935, 1925, 2, 1924, 5, 1922, 1921,
	118, 1920, 1918, 1917, 10, 26, 9, 1916, 1914, 1913,
	3664, 2223, 104, 1911, 168,
}

//line sql.y:6264
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 328, 329, 329, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 307, 307,
	307, 310, 310, 30, 65, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 78, 78, 20, 21, 21, 21, 21,
	332, 332, 135, 135, 133, 133, 134, 134, 203, 203,
	22, 23, 23, 213, 213, 212, 212, 212, 214, 214,
	214, 214, 248, 248, 24, 24, 24, 24, 24, 93,
	93, 309, 309, 308, 306, 306, 305, 305, 304, 36,
	37, 46, 46, 46, 46, 47, 48, 311, 311, 280,
	52, 52, 51, 51, 51, 51, 53, 53, 50, 50,
	49, 49, 282, 282, 269, 269, 281, 281, 281, 281,
	281, 281, 281, 268, 268, 104, 104, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 323, 323,
	183, 183, 183, 183, 183, 183, 113, 113, 121, 121,
	121, 121, 111, 111, 112, 110, 110, 110, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 120, 120, 117, 117, 117, 118, 118, 118, 324,
	324, 324, 324, 251, 251, 251, 251, 254, 254, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 253, 253,
	253, 253, 253, 255, 255, 255, 255, 255, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 257, 257, 257, 257, 257, 257, 257,
	257, 267, 267, 258, 258, 262, 262, 263, 263, 263,
	264, 264, 264, 265, 265, 260, 260, 260, 260, 260,
	260, 261, 261, 261, 270, 294, 294, 293, 293, 291,
	291, 291, 291, 279, 279, 288, 288, 288, 288, 288,
	278, 278, 274, 274, 274, 275, 275, 276, 276, 273,
	273, 277, 277, 290, 290, 289, 271, 271, 272, 272,
	296, 325, 325, 325, 325, 326, 326, 297, 316, 317,
	315, 315, 315, 315, 315, 75, 75, 75, 225, 225,
	225, 286, 286, 285, 285, 285, 287, 287, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 220, 220, 220, 314,
	314, 314, 314, 314, 314, 313, 313, 313, 283, 283,
	283, 312, 312, 54, 54, 167, 167, 43, 43, 43,
	43, 43, 43, 42, 42, 42, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 44,
	44, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	80, 80, 81, 81, 81, 81, 82, 82, 82, 299,
	299, 55, 55, 3, 3, 1, 1, 2, 2, 4,
	4, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 266, 266, 266, 298, 298, 300, 302,
	302, 302, 302, 301, 89, 89, 26, 35, 35, 27,
	27, 27, 27, 28, 28, 56, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 318, 318, 219, 219, 227, 227,
	218, 218, 241, 241, 241, 221, 221, 221, 222, 222,
	322, 322, 322, 58, 58, 58, 60, 60, 61, 62,
	62, 243, 243, 244, 244, 63, 64, 76, 76, 76,
	76, 76, 76, 79, 79, 79, 13, 13, 13, 13,
	72, 72, 72, 12, 12, 59, 59, 66, 319, 319,
	320, 321, 321, 321, 321, 67, 69, 29, 29, 29,
	29, 29, 29, 99, 99, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 94, 94, 94,
	88, 88, 333, 70, 71, 71, 92, 92, 92, 85,
	85, 85, 91, 91, 91, 14, 14, 15, 202, 202,
	16, 16, 96, 96, 98, 98, 98, 98, 98, 100,
	100, 100, 100, 100, 100, 100, 95, 95, 97, 97,
	97, 97, 234, 234, 234, 233, 233, 124, 124, 126,
	125, 125, 127, 127, 128, 128, 128, 165, 165, 143,
	143, 200, 200, 198, 198, 199, 199, 201, 201, 201,
	201, 204, 204, 129, 129, 129, 129, 130, 130, 131,
	131, 132, 132, 242, 242, 239, 239, 239, 238, 238,
	136, 136, 136, 138, 137, 137, 137, 137, 139, 139,
	141, 141, 140, 140, 142, 147, 147, 146, 146, 144,
	144, 144, 144, 145, 145, 145, 145, 148, 148, 109,
	109, 109, 109, 109, 109, 119, 119, 119, 119, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 77, 77, 77, 216,
	216, 149, 149, 157, 157, 157, 157, 150, 150, 150,
	150, 150, 150, 150, 158, 158, 158, 164, 159, 159,
	155, 155, 155, 155, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 334, 334, 259, 259, 259, 156, 156, 156, 156,
	156, 90, 90, 90, 90, 90, 247, 247, 247, 250,
	250, 250, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 170, 170, 86,
	86, 168, 168, 169, 171, 171, 166, 166, 166, 152,
	152, 152, 172, 172, 173, 173, 174, 174, 176, 175,
	175, 177, 178, 178, 178, 179, 179, 180, 180, 180,
	45, 45, 45, 45, 45, 40, 40, 40, 40, 41,
	41, 41, 101, 101, 101, 101, 103, 103, 102, 102,
	73, 73, 74, 74, 74, 107, 107, 108, 108, 108,
	105, 105, 106, 106, 196, 196, 181, 181, 181, 188,
	188, 188, 184, 184, 186, 186, 186, 187, 187, 187,
	185, 193, 193, 195, 195, 194, 194, 190, 190, 191,
	191, 192, 192, 192, 189, 189, 151, 151, 151, 151,
	151, 197, 197, 197, 197, 205, 205, 161, 161, 163,
	163, 162, 123, 206, 206, 210, 207, 207, 211, 211,
	211, 211, 211, 208, 208, 209, 209, 235, 235, 235,
	215, 215, 226, 226, 223, 223, 224, 224, 217, 217,
	228, 228, 228, 68, 160, 160, 295, 295, 292, 231,
	231, 232, 232, 236, 236, 240, 240, 237, 237, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 330, 331, 245, 246, 246, 246,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 2, 2, 0, 1, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 1, 1,
	0, 2, 2, 3, 3, 2, 1, 1, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 5, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 2, 2, 2, 1,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	7, 5, 6, 6, 7, 0, 1, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 0, 1,
	2, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 5, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 1, 1, 0, 2, 0,
	2, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 2, 0,
	4, 4, 3, 2, 1, 3, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 4, 4, 4, 3, 3, 3, 5, 2,
	3, 3, 3, 3, 1, 1, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 3, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 3, 4, 3,
	7, 0, 3, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 9, 6, 6,
	6, 2, 2, 3, 3, 3, 1, 1, 1, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 5, 5, 6, 4, 4, 8, 6, 8, 6,
	8, 5, 4, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 5, 4, 4, 7, 4, 6, 6, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 0,
	5, 5, 2, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	2, 2, 0, 3, 0, 2, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -328, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -56, -57, -58, -60,
	-61, -62, -63, -64, -12, -59, -29, -30, -65, -66,
	-67, -68, -69, -14, -15, -16, -7, -6, -11, 7,
	8, -78, -31, 30, -36, -46, 206, -47, -37, 207,
	-48, 209, 208, 245, 210, 238, 72, 287, 288, 290,
	291, 292, 293, -79, 243, 244, 212, 34, 43, 31,
	32, 35, 216, 251, 252, 215, -8, -32, 6, -330,
	9, 415, 240, 239, 26, -10, 432, 83, -329, 566,
	-196, -181, 20, 31, 27, -180, -176, -92, -181, 18,
	16, 5, -70, -333, -70, -70, 10, 11, -70, -280,
	-282, 83, 143, 83, -70, -52, -51, -50, -49, -53,
	29, -43, -44, -303, -42, -39, 211, 208, 255, 107,
	108, 245, 246, 247, 210, 229, 244, 248, 243, 264,
	-38, 78, 31, 432, 435, -287, 207, 213, 214, 416,
	110, 109, 73, 209, -284, 341, 536, -53, 538, 99,
	101, 537, 42, 219, 539, 540, 541, 542, 228, 543,
	544, 545, 546, 552, 553, 554, 555, 111, 5, -70,
	-240, -236, -307, -230, 86, 87, 88, 429, 231, 463,
	464, 280, 78, 39, 338, 341, 536, 287, 301, 295,
	322, 314, 430, 465, 283, 232, 268, 533, 312, 119,
	538, 286, 466, 246, 346, 347, 348, 99, 290, 383,
	551, 285, 467, 549, 101, 537, 77, 49, 42, 241,
	310, 215, 306, 539, 269, 468, 440, 262, 110, 107,
	558, 34, 304, 48, 28, 548, 109, 47, 540, 134,
	469, 541, 350, 329, 527, 46, 351, 247, 470, 81,
	252, 434, 535, 352, 305, 353, 279, 547, 212, 471,
	519, 354, 355, 528, 472, 330, 334, 473, 375, 356,
	565, 50, 474, 475, 529, 108, 476, 76, 542, 299,
	300, 477, 277, 230, 377, 326, 327, 328, 228, 33,
	357, 431, 281, 56, 256, 378, 44, 332, 562, 43,
	523, 478, 526, 325, 321, 425, 51, 479, 480, 481,
	482, 543, 324, 298, 320, 557, 452, 274, 544, 60,
	214, 336, 335, 337, 263, 374, 317, 483, 484, 485,
	235, 79, 486, 307, 19, 487, 488, 358, 270, 489,
	54, 490, 491, 381, 244, 492, 52, 545, 37, 249,
	559, 546, 493, 494, 495, 496, 251, 497, 360, 498,
	359, 331, 333, 258, 361, 433, 499, 303, 248, 550,
	500, 236, 534, 250, 255, 243, 382, 237, 501, 502,
	503, 504, 505, 284, 506, 507, 291, 552, 426, 41,
	508, 509, 510, 511, 278, 273, 376, 385, 59, 80,
	343, 512, 532, 297, 271, 513, 288, 53, 553, 554,
	555, 265, 556, 7, 563, 564, 363, 111, 275, 276,
	45, 318, 257, 514, 515, 308, 309, 323, 296, 319,
	289, 520, 259, 364, 427, 245, 516, 384, 272, 339,
	344, 437, 264, 365, 531, 436, 316, 313, 266, 517,
	366, 220, 260, 261, 518, 521, 367, 368, 282, 369,
	370, 371, 372, 373, 267, 435, 294, 311, 345, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 424, 218, -70,
	218, -140, -236, 218, -208, 347, -227, 349, 362, 357,
	367, 355, -219, 358, 360, 258, -322, 375, 218, 364,
	206, 160, 350, 359, 368, 369, 282, 370, 373, 267,
	-318, -307, 541, 556, 119, 315, 354, 352, 376, 523,
	372, 371, -236, 289, -243, 294, -231, -307, -230, 292,
	-140, -76, 519, 210, -245, -245, -94, 523, 525, -159,
	-109, 127, -119, -122, -114, -115, -153, -154, -155, -156,
	-120, -166, 149, 150, 157, 128, -164, -123, 24, 428,
	417, 416, 160, 29, 202, 66, 67, 419, 420, 130,
	55, 392, 393, -121, 388, 394, 389, 422, 423, 102,
	424, 425, 426, 427, 327, 328, -231, -236, 223, 387,
	217, 155, 415, -116, -112, -6, -162, 386, 390, 391,
	395, -307, -230, -118, -117, -149, 89, 95, 100, 96,
	-327, 103, -330, 90, 91, 92, 93, 94, 104, 105,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 42, 363, 363, -140, -70, -70, -70, -70, -174,
	-92, -176, -8, -6, -330, 6, -70, -6, -7, -11,
	-32, -34, 459, -33, -236, -181, -196, 10, 145, 40,
	48, -179, -180, -10, -6, -109, 17, 21, 22, -97,
	151, -109, -236, -71, -97, -217, 222, -70, -70, -207,
	-248, 289, -211, 376, 375, -232, -209, -231, -229, -208,
	374, 211, 438, 126, 23, 25, 129, 160, 114, 17,
	130, 35, 213, 315, 229, 159, 225, 416, 206, 70,
	439, 388, 389, 386, 392, 418, 419, 387, 349, 29,
	11, 441, 26, 239, 22, 36, 153, 208, 133, 242,
	24, 240, 102, 105, 444, 20, 73, 234, 12, 227,
	38, 14, 445, 446, 15, 223, 222, 145, 219, 68,
	9, 202, 27, 142, 64, 447, 121, 448, 449, 450,
	451, 115, 66, 143, 18, 560, 390, 391, 31, 524,
	428, 253, 155, 71, 57, 525, 127, 453, 454, 103,
	455, 106, 74, 530, 123, 16, 69, 40, 456, 254,
	457, 224, 561, 458, 379, 459, 144, 209, 415, 67,
	460, 217, 362, 6, 421, 30, 238, 226, 113, 65,
	461, 218, 132, 422, 423, 221, 116, 104, 5, 120,
	32, 10, 72, 75, 393, 394, 395, 55, 112, 432,
	131, 13, 462, 380, 125, 119, -281, 143, -268, -272,
	-231, 233, -297, 229, -140, -290, -289, -231, -93, -226,
	219, 227, 226, 120, -311, 123, 275, 387, 217, -49,
	-50, -208, 159, -80, 250, 254, 84, 84, -272, -271,
	-270, -312, 254, 233, -296, -288, 225, 234, -278, 226,
	227, -273, 219, 121, -312, -273, 224, 234, 254, 254,
	111, 254, 111, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 249, -279, 135, -279, 436, 436, -284, -312,
	-312, -312, 221, 33, 33, -228, -273, 221, 23, -279,
	-279, -208, 159, -279, -279, -279, -279, 262, 262, -279,
	-279, -279, -279, -279, -279, -279, -279, -279, -279, -279,
	-279, -279, -279, -279, 218, -311, -101, 373, 282, 78,
	-51, 264, -35, -140, -226, 219, 220, -311, 251, -140,
	203, -140, -221, 143, 13, -221, -218, 363, 361, 348,
	353, -221, -221, -221, -221, 265, 346, -274, 219, 33,
	230, 363, 265, 346, 265, 266, 265, 266, 356, 366,
	265, -241, 12, 145, 387, 351, 355, 258, 218, 259,
	220, 365, -307, 526, 266, -241, 90, -222, 143, 363,
	261, -221, -246, -330, -232, 315, -246, -246, 30, 87,
	221, -231, -72, -231, 90, -13, -9, -20, -19, -21,
	135, -99, 363, -87, 160, 541, 527, 528, 529, 526,
	360, 534, 532, 530, 265, 531, 84, 123, 125, 126,
	-109, 142, -150, 135, 136, 137, 138, 139, 140, 141,
	145, 127, 129, 143, 144, 124, 146, 147, 148, 149,
	150, 151, 152, 154, 153, 155, 156, 159, 204, 205,
	-115, -115, -115, -115, -164, -330, -330, -330, -115, -216,
	-330, -115, -330, -330, -330, -330, -170, -109, -330, -334,
	-330, -334, -334, -259, -330, -259, -330, -330, -330, -330,
	-330, -330, -330, -330, -330, -330, 203, -330, -330, -330,
	-330, -330, -259, -259, -259, -259, 100, 95, 89, -166,
	96, 90, -231, -236, -6, -7, -159, -245, -319, -320,
	-143, -140, -330, 282, -231, -231, 251, -179, -10, -6,
	-174, -180, -176, -6, -70, -85, -98, 61, 62, -100,
	22, 36, 65, 63, 21, -331, 85, -331, -196, -331,
	84, -34, -200, 83, 59, 41, 90, 90, 84, 19,
	-175, -177, -109, 12, -234, -233, 23, -231, 90, 203,
	98, 12, -141, 27, -140, -217, -217, 84, 289, -211,
	-248, -213, -212, 377, 379, 135, -235, -231, 90, 29,
	85, 84, -140, -251, -254, -256, -255, -257, -252, -253,
	312, 313, 160, 316, 318, 319, 320, 321, 322, 323,
	324, 325, 326, 329, 30, 241, 308, 309, 310, 311,
	330, 331, 332, 333, 334, 335, 336, 337, 295, 314,
	430, 296, 297, 298, 299, 300, 301, 303, 304, 305,
	306, 307, -310, -307, 83, 85, 84, -258, 83, -101,
	218, -307, 219, 219, 219, -70, 415, -279, -279, 249,
	17, -42, -39, -303, 16, -38, -39, 211, 107, 108,
	208, 83, -268, 83, -277, -310, -307, 83, 121, 224,
	120, -276, -273, -276, -277, -307, -166, -307, 121, 121,
	-204, -231, -204, -204, 21, -204, 21, -204, 21, 92,
	-231, -204, 21, -204, 21, -204, 21, -204, 21, -204,
	21, 29, 76, 77, 29, 79, 80, 81, -166, -166,
	-268, -208, -140, -307, 92, 92, -279, -279, 92, 90,
	90, 90, -279, -279, 92, 90, -238, -236, 90, -313,
	235, 279, 281, 92, 92, 92, 92, 29, 90, -314,
	29, 548, 547, 549, 550, 551, 92, 29, 92, 29,
	92, -231, 83, -140, -107, 269, 206, 208, 211, 74,
	90, 283, 135, 42, 84, 221, 218, -307, -223, 223,
	-223, -231, -237, -236, -229, 90, -109, -275, 12, 145,
	-241, -241, -221, -140, -275, -241, -221, -140, -221, -221,
	-221, -221, -241, -241, -241, -221, -236, -236, -140, -140,
	-140, -140, -140, -140, -140, -246, -246, -246, -222, -221,
	526, 90, 74, -244, 292, 326, 520, 521, 522, 84,
	432, -133, -140, 526, 526, 526, 526, 526, 526, -109,
	-109, -109, -109, -157, 103, 127, 104, 105, -122, -158,
	-162, -164, 97, 145, 129, 143, 144, -114, -115, -114,
	-114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
	-114, -114, -247, -307, 90, 160, 90, 90, -95, -97,
	-109, -109, -307, -231, -95, -95, -109, -91, 22, 36,
	-168, -169, 131, -166, -331, -331, 92, -231, -231, -84,
	-83, 397, 398, 399, 400, 402, 403, 404, 407, 408,
	412, 413, 396, 414, 401, 406, 409, 410, 411, 405,
	311, -109, -109, -109, -77, -109, 114, 115, 116, -109,
	-109, -96, 22, 36, -95, -232, -237, -229, -95, -96,
	-96, -95, -95, 203, -196, -331, 84, -321, 379, 380,
	524, -239, 254, -238, 23, -160, -159, 90, 12, -202,
	75, -231, -179, -179, 61, 62, 57, -95, -100, -331,
	-33, 23, -198, -231, 60, 90, -260, -208, 338, 339,
	-109, -109, 84, -178, 25, 26, -140, -233, 151, -237,
	-140, -203, 254, -140, -125, -127, -128, -129, -143, -165,
	-330, 450, 12, -133, -134, -142, -236, -211, -213, 84,
	378, 380, 381, 74, 106, -109, -261, 159, -286, -285,
	-284, -268, -270, -271, -272, 85, -261, -264, 344, 343,
	-258, -258, -258, -258, -258, -260, -260, -260, -260, 83,
	83, -258, -258, -258, -258, -262, 83, -262, -262, -263,
	83, -263, -297, -109, -294, -293, -291, -292, 228, 99,
	432, 75, -289, -178, 92, -107, -224, 223, -295, -292,
	-307, -307, -307, -224, -307, 90, -307, 90, -81, -55,
	-1, 560, 561, 562, 84, 17, -269, -268, -54, 279,
	-300, -301, 254, -296, -290, -277, 121, -276, -277, -277,
	-307, 84, 27, 111, 111, 111, 111, 432, 208, 30,
	-268, -54, -247, 221, -247, -247, 90, 90, -220, 556,
	-133, -103, 271, 135, 260, 260, 218, 218, 273, -140,
	284, 286, 285, 283, 21, 272, 274, 276, 262, -140,
	-140, -223, 74, -135, -140, 24, -236, -140, -221, -221,
	-140, -221, -221, -140, -231, -87, 379, 84, 432, 20,
	-88, 20, 103, 104, 105, -158, -114, -115, -114, 126,
	242, 84, -331, 23, 84, 75, -331, -331, -331, 84,
	12, -95, -171, -169, 133, -109, -331, -331, 84, 84,
	12, -250, 23, -331, -331, -170, -331, 12, 84, 84,
	-331, -95, -95, -330, 203, -331, -331, -331, -331, -331,
	-232, -320, 523, 380, -147, -146, -144, 72, 222, 73,
	-330, -238, -331, 90, 87, -199, 87, -198, -152, -231,
	92, 96, -181, -124, -126, 12, -100, -164, 85, 84,
	-260, -185, -190, -218, -231, 90, 160, -177, 203, -148,
	13, -151, 30, 55, -9, -330, -330, 30, 84, -136,
	-138, -137, -139, 64, 68, 70, 65, 66, 67, 71,
	-242, 23, -125, -7, -6, -330, -330, -140, -133, -332,
	12, 75, -332, 84, 203, -212, -214, 382, 379, 385,
	-307, 90, -80, 84, -284, -272, -182, -104, 38, -265,
	345, -260, -260, -267, 90, -267, 92, 92, 85, -45,
	-40, -41, 31, 78, -291, -279, 90, 37, -231, 85,
	-103, -140, 127, 74, -295, -295, -295, -236, -2, 559,
	565, 121, 83, 348, 16, -198, 84, 85, -167, 280,
	85, -302, 55, -231, 85, 83, -277, -277, -231, -330,
	218, 29, 29, -54, -167, -261, -307, 558, 557, 85,
	220, 278, -108, 392, -105, 90, 86, -140, -140, -140,
	-140, -140, 211, 208, 263, 221, -133, -140, 84, -75,
	237, 232, -241, -241, 31, -140, 379, 535, 533, 126,
	242, -122, -115, -97, 429, -249, 160, 312, 241, 310,
	306, 326, 317, 343, 308, 344, 305, 304, 303, -249,
	-247, -109, -109, -174, 134, -109, 132, -109, -109, -109,
	-331, 160, 312, 12, -109, -109, -109, -331, -331, -96,
	-232, -144, -273, -273, -273, -204, 84, -215, 20, 12,
	55, 55, -124, -148, -125, -100, -231, -188, 519, -193,
	44, -191, -192, 45, -189, 46, 54, 151, -179, -109,
	-205, 74, -206, -210, -166, -161, -163, -162, -330, -197,
	-331, -231, -204, -206, -127, -128, -128, -127, -128, 64,
	64, 64, 69, 64, 69, 64, -137, -236, -331, -331,
	-7, -7, -239, 75, -125, -125, -142, -236, 151, 379,
	383, 384, -284, -326, 103, 127, 29, 74, 341, 99,
	-324, 159, -325, 224, 120, 121, 236, 23, 39, 85,
	84, 85, 84, 85, 84, -225, 469, 127, -41, -40,
	-279, -279, 92, -307, 220, 24, -140, 74, 74, 74,
	-82, 563, 92, 83, -3, 78, -109, 83, 17, -268,
	-166, 256, 145, -294, -198, -298, -300, -140, -111, -330,
	-110, -112, -116, 149, 150, -167, -140, -102, 269, 277,
	83, -106, 87, -309, 75, 260, 341, 260, -140, -75,
	-45, -140, -221, -221, 31, -307, -122, -115, -330, -331,
	-258, -258, -258, -263, -258, 300, -258, 300, -258, -331,
	-331, 84, -331, 20, -331, -86, 421, -109, 84, 84,
	-331, 83, 83, -109, -331, -331, -331, -331, -145, 20,
	-145, -145, -331, 87, -140, -148, -172, 14, -185, 49,
	318, -195, -194, 53, 45, -192, 17, 47, 17, 28,
	-205, 84, 135, 84, -331, -331, 84, 55, 203, -331,
	-148, -131, -130, 74, 75, -132, 74, -130, 64, 64,
	-200, -331, -331, -203, -125, -148, -148, 203, 103, -330,
	-113, -121, -111, 10, 90, 90, -307, 121, 121, -140,
	83, -260, 90, -260, 92, 92, 469, 29, 79, 80,
	81, 29, 76, 77, -140, -140, -140, -140, -299, 83,
	17, -109, 83, 135, 85, -198, -198, 257, -162, -330,
	85, -331, 84, -266, 432, 435, -109, -117, -117, -200,
	85, -306, 432, -308, -231, -231, -231, -231, -114, -260,
	-109, -109, -179, 90, -109, -109, 92, 92, -331, -330,
	64, 16, 14, -330, -330, -239, -172, -173, 15, 17,
	-186, 51, -184, 50, -184, -194, 17, 17, 90, 17,
	90, 121, -210, -109, -163, 55, -9, -231, -161, -231,
	-174, -109, 83, -109, -148, -148, -109, -154, 424, 425,
	426, 427, 327, 328, 83, -109, 85, 85, -200, -298,
	-55, 85, -198, 92, 85, -162, -89, -330, 253, -325,
	-300, 436, 436, -331, 23, -305, -304, -232, 83, 75,
	-90, 145, 432, -331, -331, -331, -331, -331, 85, 85,
	-201, -331, -231, 224, 17, 17, -201, -201, -147, -173,
	-109, -159, -187, 52, 74, 106, 90, 90, 90, 10,
	-161, 203, -179, -198, -174, -331, -198, 85, 23, 85,
	565, 121, 85, 253, -9, 84, 135, -198, -140, -331,
	430, 71, 433, 84, -331, -331, -331, 74, 106, -206,
	-231, 85, -179, 85, -183, -9, 83, -3, -331, -73,
	432, -304, -283, -232, 90, 92, 85, 60, 431, 434,
	-231, 224, -316, -317, 74, -326, -323, 103, 127, 99,
	-324, 112, 113, -73, -109, 83, -74, 268, 523, -309,
	60, -317, 74, 11, 10, 103, 90, 85, -198, 229,
	-306, 432, -315, 237, 232, 235, 30, -315, -4, 564,
	85, 270, 433, 231, 29, 103, 92, -4, 434,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 712,
	712, 712, 0, 712, 0, 0, 712, -2, -2, 712,
	1155, 0, 712, 0, 0, -2, 644, 646, 0, 648,
	-2, 0, 0, 657, 1616, 1616, 707, 0, 0, 0,
	0, 0, 712, 712, 712, 712, 1016, 48, 712, 0,
	83, 84, 663, 664, 665, 63, 0, 1614, 1, 3,
	69, 73, 0, 0, 0, 56, 1025, 0, 76, 0,
	0, 716, 0, 714, 0, 1138, 712, 712, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 142, 143, 0,
	147, 510, 450, 493, 448, 479, -2, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 343, 343, 0, 0, -2, 441, 441, 441, 0,
	0, 0, 476, 1140, 396, 343, 343, 0, 343, 343,
	343, 343, 0, 0, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 1042,
	146, 1156, 1153, 1154, 38, 39, 40, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 0, 1132,
	0, 574, 812, 0, 635, 635, 0, 635, 635, 635,
	635, 0, 0, 0, 586, 0, 0, 0, 0, 632,
	0, 0, 605, 607, 0, 632, 0, 638, 0, 619,
	635, 1617, 1617, 1617, 1123, 0, 629, 627, 641, 642,
	624, 625, 643, 647, 0, 652, 655, 1149, 1150, 0,
	670, 47, 1386, 662, 675, 676, 0, 708, 709, 43,
	908, 0, 834, 838, 849, 862, 863, 864, 865, 866,
	868, 869, 0, 0, 0, 0, 874, 875, 0, 0,
	0, 0, 0, 889, 0, 0, 0, 0, 0, 997,
	0, 961, 961, 925, 961, 963, 963, 0, 0, 0,
	1613, 1431, 1514, 1560, 1412, 1413, 1006, 0, 0, 0,
	0, 0, 0, 251, 252, 907, 1112, 963, 963, 963,
	963, -2, -2, 198, 199, 200, 201, 202, 203, 204,
	0, 194, 0, 256, 257, 253, 254, 255, 891, 892,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 1616, 0, 685, 0, 0, 0, 0, 0, 1025,
	0, 1017, 1016, 61, 0, 712, -2, 0, 0, 0,
	0, 45, 0, 50, 771, 75, 74, 1064, 0, 0,
	0, 57, 1026, 65, 67, 1027, 0, 717, 718, 0,
	748, 752, 0, 713, 0, 0, 1139, 1138, 1138, 100,
	0, 1556, 1116, -2, -2, 0, 0, 1151, 1152, 1125,
	-2, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, -2, 0, 0, 156, 157,
	0, 41, 369, 0, 152, 0, 363, 313, 1042, 0,
	0, 0, 0, 0, 712, 0, 1133, 137, 138, 144,
	145, 343, 343, 490, 0, 0, 146, 146, 457, 458,
	459, 0, 0, -2, 367, 0, 442, 0, 0, 357,
	357, 361, 359, 360, 0, 0, 0, 0, 0, 0,
	470, 0, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 0, 344, 0, 488, 489, 397, 0,
	0, 0, 0, 468, 469, 0, 0, 1141, 1142, 0,
	0, 343, 343, 0, 0, 0, 0, 343, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 1055, 0, 0, 0,
	-2, 0, 566, 0, 0, 0, 1134, 1134, 0, 573,
	0, 575, 576, 0, 0, 577, 0, 632, 632, 630,
	631, 579, 580, 581, 582, 635, 0, 0, 352, 353,
	354, 632, 635, 0, 635, 635, 635, 635, 632, 632,
	632, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1617, 1617, 1617, 638, 635, 0, 615, 0, 616,
	617, 620, 621, 1618, 1619, 1171, 622, 623, 1124, 645,
	653, 656, 673, 671, 672, 674, 666, 667, 668, 669,
	0, 687, 688, 693, 0, 0, 0, 0, 699, 700,
	701, 0, 0, 704, 705, 706, 0, 0, 0, 0,
	832, 0, 0, 897, 898, 899, 900, 901, 902, 903,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	870, 871, 872, 873, 876, 0, 0, 0, 881, 882,
	0, 0, 0, 0, 0, 722, 0, 998, 0, 923,
	0, 924, 926, 927, 0, 928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 0, 0, 732, 732,
	0, 0, 188, 189, 190, 191, 205, 206, 207, 208,
	209, 258, 1006, 0, 907, 0, 0, 44, 677, 678,
	0, 795, 1144, 0, 0, 728, 0, 55, 64, 66,
	1025, 59, 1025, 0, 734, 0, 0, -2, -2, 735,
	741, 742, 743, 744, 745, 52, 1615, 53, 0, 72,
	0, 46, 0, 0, 0, 0, 325, 1067, 0, 0,
	1018, 1019, 1022, 0, 749, 753, 0, 755, 756, 0,
	715, 0, 98, 0, 811, 0, 0, 0, 1556, 1122,
	0, 102, 103, 0, 0, 0, 331, 1127, 1128, 1129,
	-2, 350, 0, 331, 320, 264, 265, 266, 313, 268,
	313, 313, 313, 313, 325, 325, 325, 325, 296, 297,
	298, 299, 300, 0, 0, 283, 313, 313, 313, 313,
	303, 304, 305, 306, 307, 308, 309, 310, 269, 270,
	271, 272, 273, 274, 275, 276, 277, 315, 315, 315,
	317, 317, 0, 42, 0, 335, 0, 1022, 0, 1055,
	1136, 1146, 0, 0, 0, 1136, 120, 0, 0, 491,
	521, 451, 480, 492, 0, 454, 455, -2, 0, 0,
	441, 0, 443, 0, 351, 0, -2, 0, 361, 0,
	357, 361, 358, 361, 349, 362, 472, 473, 474, 0,
	532, 781, 0, 0, 0, 0, 0, 538, 539, 540,
	0, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 481, 482, 483, 484, 485, 486, 487, 0, 0,
	443, 0, 477, 0, 398, 399, 0, 0, 402, 403,
	404, 405, 0, 0, 408, 409, 410, 798, 799, 411,
	435, 436, 437, 412, 413, 414, 415, 416, 417, 418,
	429, 430, 431, 432, 433, 434, 419, 420, 421, 422,
	423, 426, 0, 130, 1046, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1134, 0, 0, 0,
	0, 731, 813, 1157, 1158, 636, 637, 0, 355, 356,
	635, 635, 583, 606, 0, 635, 587, 608, 588, 590,
	589, 591, 610, 611, 635, 594, 633, 634, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 612, 613,
	614, 639, 0, 0, 654, 658, 659, 660, 661, 0,
	0, 690, 94, 695, 696, 697, 698, 710, 703, 909,
	829, 830, 831, 833, 835, 0, 893, 895, 837, 839,
	904, 905, 906, 0, 0, 0, 0, 0, 843, 847,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 867, 976, 977, 978, 884, 885, 0, 746,
	0, 0, 0, 883, 0, 0, 0, 0, 723, 724,
	1004, 1001, 0, 0, 962, 964, 0, 0, 0, 0,
	940, 941, 942, 943, 944, 945, 946, 947, 948, 949,
	950, 951, 952, 953, 954, 955, 956, 957, 958, 959,
	960, 979, 0, 0, 997, 0, 886, 887, 888, 0,
	0, 0, 0, 0, 733, 1007, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 1111, 0, 680, 681, 683,
	0, 815, 0, 796, 0, 0, 1145, 686, 0, 727,
	0, 730, 58, 60, 739, 740, 0, 757, 736, 54,
	49, 0, 0, 773, 1065, 325, 1087, 0, 329, 330,
	1028, 1029, 0, 1021, 1023, 1024, 77, 754, 750, 0,
	827, 0, 0, 810, 0, 760, 762, 763, 764, 793,
	0, 0, 0, 0, 0, 96, 812, 1117, 101, 0,
	0, 106, 107, 1118, 1119, 1120, 1121, 0, 510, -2,
	393, 158, 160, 161, 162, 153, -2, 323, 321, 322,
	267, 325, 325, 290, 291, 292, 293, 294, 295, 0,
	0, 284, 285, 286, 287, 278, 0, 279, 280, 281,
	0, 282, 368, 0, 1030, 336, 337, 339, 343, 0,
	0, 0, 364, 365, 0, 1046, 0, 0, 0, 1147,
	1146, 1146, 1146, 0, 148, 149, 150, 151, 527, 0,
	0, 522, 525, 526, 146, 0, 0, 154, 445, 444,
	0, 559, 0, 366, 0, 0, 361, 361, 346, 347,
	475, 0, 0, 534, 535, 536, 537, 0, 0, 0,
	443, 445, 331, 0, 400, 401, 406, 407, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	505, 506, 507, 508, 509, 1043, 1044, 1045, 0, 0,
	567, 0, 0, 385, 92, 1135, 572, 632, 593, 609,
	632, 585, 592, 618, 650, 694, 0, 0, 0, 0,
	702, 0, 836, 894, 896, 840, 0, 844, 848, 0,
	0, 0, 0, 0, 0, 0, 890, 914, 915, 0,
	0, 1016, 0, 1002, 0, 0, 922, 965, 0, 0,
	0, 0, 0, 933, 934, 0, 936, 0, 0, 0,
	910, 0, 0, 732, 0, 966, 967, 968, 969, 970,
	1007, 679, 682, 684, 769, 816, 817, 0, 0, 0,
	0, 797, 1143, 725, 726, 729, -2, 0, 0, 1009,
	0, 0, 757, 827, 758, 0, 737, 51, 772, 0,
	1069, 1068, 1081, 1094, 326, 327, 328, 1020, 0, 1025,
	0, 1105, 0, 0, 1097, 0, 0, 0, 0, 0,
	0, 0, 0, 800, 0, 0, 803, 0, 0, 0,
	0, 794, 0, 0, 0, 0, 0, -2, 0, 0,
	90, 91, 0, 0, 0, 104, 105, 0, 0, 111,
	332, 333, 139, 146, 395, 159, 375, 0, 0, 263,
	324, 288, 289, 0, 311, 0, 0, 0, 388, 116,
	1034, 1033, 343, 343, 338, 0, 341, 0, 1148, 314,
	0, 129, 0, 0, 0, 0, 0, 135, 516, 0,
	0, 523, 0, 0, 0, 449, 0, 460, 461, 0,
	531, 558, 0, 563, 335, 0, 345, 348, 782, 0,
	0, 462, 0, 445, 466, 467, 478, 427, 428, 425,
	0, 0, 1056, 1057, 1062, 1060, 1061, 121, 498, 500,
	499, 503, 0, 0, 496, 0, 385, 1030, 0, 571,
	386, 387, 635, 635, 689, 95, 0, 692, 0, 0,
	0, 841, 845, 747, 0, 0, 313, 313, 984, 313,
	317, 987, 313, 989, 313, 992, 313, 995, 996, 0,
	0, 0, 0, 999, 921, 1005, 0, 0, 0, 0,
	932, 0, 0, 0, 0, 0, 0, 911, 912, 0,
	1008, 818, 823, 823, 823, 0, 0, 0, 1130, 1131,
	1010, 1011, 827, 1012, 759, 738, 774, 1087, 0, 1080,
	0, -2, 1089, 0, 0, 0, 1095, 751, 78, 828,
	81, 0, 1105, 1113, 0, 1096, 1107, 1109, 0, 0,
	0, 1101, 0, 827, 761, 789, 791, 0, 786, 801,
	802, 804, 0, 806, 0, 808, 809, 771, 766, 767,
	0, 0, 98, 0, 827, 827, 97, 0, 814, 108,
	109, 110, 394, 163, 168, 0, 0, 0, 173, 0,
	175, 0, 376, 0, 260, 262, 0, 0, 166, 325,
	0, 325, 0, 318, 0, 377, 389, 0, 1031, 1032,
	0, 0, 340, 342, 0, 1137, 131, 0, 0, 0,
	519, 0, 528, 0, 0, 0, 0, 0, 0, 155,
	446, 0, 0, 334, 0, 0, 556, 553, 463, 0,
	192, 193, 195, 0, 0, 465, 771, 1047, 1048, 1049,
	0, 1059, 1063, 124, 0, 0, 0, 0, 568, 569,
	570, 93, 578, 584, 691, 711, 842, 846, 0, 878,
	982, 325, 985, 986, 988, 990, 991, 993, 994, 879,
	880, 0, 917, 0, 919, 1025, 0, 1003, 0, 0,
	931, 0, 0, 0, 937, 938, 939, 913, 0, 0,
	0, 0, 795, -2, 62, 1012, 1014, 0, 1074, 1072,
	1072, 1082, 1083, 0, 0, 1090, 0, 0, 0, 0,
	82, 0, 0, 0, 1110, 0, 0, 0, 0, 99,
	1016, 783, 790, 0, 0, 784, 0, 785, 805, 807,
	765, -2, 768, 827, 827, 88, 89, 0, 169, 0,
	171, 186, 187, 0, 174, 176, 177, 259, 261, 0,
	0, 301, 312, 302, 0, 0, 390, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 771, 132, 133, 134, 511, 0,
	521, 0, 0, 0, 514, 0, 452, 0, 562, 0,
	0, 533, 0, 541, 0, 0, 0, 196, 197, 0,
	1058, 497, 0, 122, 123, 0, 0, 502, 971, 983,
	0, 0, 0, 1000, 0, 0, 0, 0, 935, 0,
	824, 0, 0, 0, 0, 815, 1014, 80, 0, 0,
	1077, 0, 1070, 1073, 1071, 1084, 0, 0, 1091, 0,
	1093, 0, 1114, 1115, 1108, 0, 1100, 1103, 1099, 1102,
	1025, 787, 0, 792, 1016, 87, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 316, 319, 0, 0,
	0, 512, 0, 524, 515, 560, 561, 0, 564, 370,
	557, 554, 555, 464, 0, 125, 126, 0, 0, 0,
	0, 0, 0, 916, 918, 920, 929, 930, 980, 981,
	0, 820, 777, 778, 825, 826, 0, 0, 770, 79,
	1015, 1013, 1066, 0, 1075, 1076, 1085, 1086, 1092, 0,
	1098, 0, 85, 0, 1025, 170, 0, 180, 0, 520,
	0, 523, 513, 0, 1050, 0, 0, 0, 504, 877,
	0, 0, 0, 0, 819, 821, 822, 1078, 1079, 1106,
	1104, 788, 86, 371, 375, 1050, 0, 0, 565, 494,
	1052, 127, 128, 438, 439, 440, 121, 972, 0, 975,
	779, 780, 372, 373, 0, 164, 181, 182, 0, 0,
	185, 178, 179, 117, 0, 0, 0, 1053, 1054, 124,
	973, 374, 0, 0, 0, 183, 184, 529, 0, 0,
	501, 0, 378, 380, 381, 0, 0, 379, 517, 0,
	529, 1051, 0, 382, 383, 384, 530, 518, 974,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 128, 3, 3, 3, 154, 146, 3,
	83, 85, 151, 149, 84, 150, 203, 152, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 566,
	136, 135, 137, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 156, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 124, 3, 157,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 125,
	126, 127, 129, 130, 131, 132, 133, 134, 138, 139,
	140, 141, 142, 143, 144, 145, 147, 148, 153, 155,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:479
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:484
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:485
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:489
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:525
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:531
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:535
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:539
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:544
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:548
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:554
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:560
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:566
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:570
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:575
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:579
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:585
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:589
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:595
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:601
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:605
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:609
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:632
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:638
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:649
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:656
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:662
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:669
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:673
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:679
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:695
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:714
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:720
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:724
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:748
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:754
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:774
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:798
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:802
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:808
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:814
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:818
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:822
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:826
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:831
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:836
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:840
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:846
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:856
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:860
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:869
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:875
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:881
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:885
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:891
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:901
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:905
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:909
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:915
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:919
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:923
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:927
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:933
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:937
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:943
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:949
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:965
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:969
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:976
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:980
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:985
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:989
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:995
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1000
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1005
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1011
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1016
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1028
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1035
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1042
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1047
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1052
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1057
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1064
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1071
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1082
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1089
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1093
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1099
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1103
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1111
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1117
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1121
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1127
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1131
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1137
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1141
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1148
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1152
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1158
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1162
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1168
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1173
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1178
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1182
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1187
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1195
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1206
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1215
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1224
		{
			yyVAL.str = ""
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			yyVAL.str = ""
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1237
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1241
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1247
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1253
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1258
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1263
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1268
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1273
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1278
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1287
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1294
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1298
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1303
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1307
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1312
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1318
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1324
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1329
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1336
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1343
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1347
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1351
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1355
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1366
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1373
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1377
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1383
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1387
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1391
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1395
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1399
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1403
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1407
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1420
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1424
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1428
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = Armscii8Str
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = ASCIIStr
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = Big5Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.str = UBinaryStr
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.str = Cp1250Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.str = Cp1251Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = Cp1256Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = Cp1257Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = Cp850Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = Cp852Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = Cp866Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = Cp932Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = Dec8Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = EucjpmsStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = EuckrStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = Gb18030Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = Gb2312Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = GbkStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = Geostd8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = GreekStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = HebrewStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Hp8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = Keybcs2Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Koi8rStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = Koi8uStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Latin1Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Latin2Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Latin5Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = Latin7Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = MacceStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = MacromanStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = SjisStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Swe7Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = Tis620Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = Ucs2Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = UjisStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = Utf16Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Utf16leStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Utf32Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Utf8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = Utf8mb4Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1605
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1609
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1620
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1634
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1638
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1642
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1646
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1652
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1663
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1712
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1718
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1724
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1730
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1766
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1770
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1782
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1794
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1868
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1873
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1877
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1882
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1886
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1894
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1904
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1912
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1916
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1920
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1925
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1929
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = ""
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1946
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1950
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1961
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1976
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1985
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1991
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2001
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2005
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2010
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2014
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2020
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2030
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2034
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2038
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2042
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2046
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2051
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.str = yyDollar[2].str
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = "key"
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.str = yyDollar[1].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2114
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2124
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2130
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2134
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2140
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2144
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2150
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2156
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2160
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2164
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2168
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2173
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2177
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2183
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2189
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2195
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2201
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2205
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2209
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2213
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2217
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2235
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2239
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2243
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2252
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2258
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2266
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2272
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2282
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2286
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2290
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2294
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2298
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2302
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2306
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2310
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2314
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2318
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2322
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2326
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2330
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2334
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2338
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2342
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2346
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2350
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2354
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2358
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2362
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2366
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2370
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2374
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2378
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2382
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2386
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2390
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2395
		{
			yyVAL.str = ""
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2399
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2435
		{
			yyVAL.str = ""
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2441
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2445
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2450
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2454
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2463
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2467
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2471
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2475
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2479
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2485
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2489
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2493
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2499
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2503
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2507
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2511
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2515
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2519
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2523
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2527
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2531
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2535
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2539
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2543
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2547
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2551
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2555
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2559
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2563
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2567
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2571
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2575
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2579
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2583
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2587
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2593
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2597
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2603
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2607
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2611
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2615
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2619
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2623
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2627
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2631
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2635
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2641
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2648
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2655
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2662
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2668
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2672
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2679
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2686
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2698
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2708
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2712
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2716
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2729
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2739
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2743
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2754
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2775
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2782
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2793
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2802
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2810
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2819
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2826
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2838
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2847
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2862
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2867
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2871
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2876
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2880
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2886
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2890
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2895
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2899
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2904
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2908
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2914
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2918
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2922
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2926
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2930
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2934
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2938
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2942
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2946
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2950
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2954
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2958
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2962
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2966
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2970
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2974
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2978
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2982
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2986
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2990
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2994
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2998
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3003
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3007
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3011
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3018
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3022
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3028
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3037
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3044
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3051
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3060
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3070
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3076
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3082
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3086
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3092
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3096
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3105
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3109
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3115
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3119
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3124
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3130
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3134
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3142
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3150
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3178
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3202
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3234
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3246
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3304
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3323
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3331
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3337
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3341
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3347
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3351
		{
			yyVAL.str = "extended "
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3357
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3367
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3371
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3377
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3381
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3385
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3391
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3395
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3399
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3405
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3409
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3415
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
			yyVAL.empty = struct{}{}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3423
		{
			yyVAL.empty = struct{}{}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3433
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3437
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3447
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3453
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3468
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3470
		{
			yyVAL.empty = struct{}{}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3473
		{
			yyVAL.empty = struct{}{}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3475
		{
			yyVAL.empty = struct{}{}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3480
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3491
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3495
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3499
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3503
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3507
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3511
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3517
		{
			yyVAL.str = yyDollar[1].str
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3521
		{
			yyVAL.str = yyDollar[1].str
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3525
		{
			yyVAL.str = yyDollar[1].str
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3531
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3535
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3539
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3543
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3548
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3552
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3556
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3562
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3566
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3576
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3582
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3588
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3592
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3598
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3604
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3608
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3612
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3616
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3622
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3628
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3634
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3638
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3642
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3646
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3650
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3654
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3660
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3664
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3674
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3682
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3698
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3706
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3710
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3714
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3719
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3723
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3727
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3732
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3736
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3741
		{
			setAllowComments(yylex, true)
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3745
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3751
		{
			yyVAL.strs = nil
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3755
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3761
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3765
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3769
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3774
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3778
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3782
		{
			yyVAL.str = SQLCacheStr
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3787
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3791
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3795
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, StatementIdentifier: NewColIdentWithAt(string(yyDollar[5].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3820
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3826
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3830
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3839
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3844
		{
			yyVAL.strs = nil
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3852
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3856
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3860
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3866
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
			yyVAL.str = SQLCacheStr
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3874
		{
			yyVAL.str = DistinctStr
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3878
		{
			yyVAL.str = DistinctStr
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3882
		{
			yyVAL.str = StraightJoinHint
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3886
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3890
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3896
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3900
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3906
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3910
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3914
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3918
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3923
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3931
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3938
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3943
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3947
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3953
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3959
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3963
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3973
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3977
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3981
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3987
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3991
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3997
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4001
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4010
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4016
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4020
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4026
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4030
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4036
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4040
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4044
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4048
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4054
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4058
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4071
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4075
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4079
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4083
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4089
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4091
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4095
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4101
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4103
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4106
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4108
		{
			yyVAL.empty = struct{}{}
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4111
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4119
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4132
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4136
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4140
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4146
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4152
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4156
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4160
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4164
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4170
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4174
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4184
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4198
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4204
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4213
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4219
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4223
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 819:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4229
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4233
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4237
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4241
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4246
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4250
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4254
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4258
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4264
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4268
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4275
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4279
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4283
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4287
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4291
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4295
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4302
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4306
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4310
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4314
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4320
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4324
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4328
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4332
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4336
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4340
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4344
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4348
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4352
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4356
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4360
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4366
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4370
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4374
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4378
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4382
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4386
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4390
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4394
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4398
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4402
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4406
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4410
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4414
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4420
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4424
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4428
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4432
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4436
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4440
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4444
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4448
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4452
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4456
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4460
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4464
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4468
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4472
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4476
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4480
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4484
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4488
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4492
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4500
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4504
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4512
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4516
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4522
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4526
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4530
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4540
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4546
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4550
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4557
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4561
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4565
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4569
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4575
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4579
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4583
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4587
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4591
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4595
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4599
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4605
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4609
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4613
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4620
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4626
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4630
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4640
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4644
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4648
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4652
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4662
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4666
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4670
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4674
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4682
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4686
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4690
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4694
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4698
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4709
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4713
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4719
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4723
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4728
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4732
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4736
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4740
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4752
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4756
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4760
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4764
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4768
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4772
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4778
		{
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4780
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4784
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4788
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4792
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4796
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4800
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4804
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4808
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4812
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4816
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4820
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4826
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4830
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4834
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4838
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4842
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4846
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4850
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4854
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4858
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4872
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4876
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4886
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4890
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4894
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4898
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4902
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4908
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4912
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4916
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4920
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4924
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4930
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4934
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4938
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4948
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4952
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4958
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4962
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4966
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4970
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4974
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4980
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4984
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4988
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4992
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4996
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5000
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5004
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5008
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5012
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5016
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5031
		{
			yyVAL.str = string("")
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5035
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5041
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5045
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5051
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5066
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5070
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5074
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5089
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5099
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5103
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5117
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5121
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5127
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5133
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5137
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5143
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5148
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5152
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5156
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5165
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5171
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5175
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5179
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5184
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5188
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5192
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5196
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5200
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5207
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5211
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5215
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5219
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5225
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5229
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5233
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5238
		{
			yyVAL.str = ""
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5242
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5246
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5250
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5255
		{
			yyVAL.str = ""
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5259
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5265
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5274
		{
			yyVAL.str = ""
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5278
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5283
		{
			yyVAL.str = "cascaded"
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5287
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5291
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5300
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5306
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5312
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5318
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5327
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5336
		{
			yyVAL.str = ""
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5340
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5346
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5350
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5356
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5360
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5364
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5369
		{
			yyVAL.str = ""
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5373
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5377
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5382
		{
			yyVAL.str = ""
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5386
		{
			yyVAL.str = " header"
		}
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5391
		{
			yyVAL.str = ""
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5395
		{
			yyVAL.str = " manifest on"
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5399
		{
			yyVAL.str = " manifest off"
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5404
		{
			yyVAL.str = ""
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5408
		{
			yyVAL.str = " overwrite on"
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5412
		{
			yyVAL.str = " overwrite off"
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5418
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5423
		{
			yyVAL.str = ""
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5427
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5433
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5437
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5443
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5447
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5452
		{
			yyVAL.str = ""
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5456
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5462
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5466
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5472
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5476
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5480
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5485
		{
			yyVAL.str = ""
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5489
		{
			yyVAL.str = " optionally"
		}
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5502
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5506
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5510
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5514
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5518
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5524
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5528
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5532
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5536
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5541
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5545
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5551
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5555
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5561
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5565
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5571
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5576
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5586
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5590
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5596
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5602
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5606
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5612
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5616
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5620
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5624
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5628
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5636
		{
			yyVAL.str = "charset"
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5650
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5654
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5663
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5665
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5668
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5670
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5673
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5675
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5683
		{
			yyVAL.empty = struct{}{}
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5685
		{
			yyVAL.empty = struct{}{}
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5687
		{
			yyVAL.empty = struct{}{}
		}
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5691
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5696
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5700
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5707
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5711
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5717
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5728
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5738
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5744
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5748
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5755
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6235
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6244
		{
			decNesting(yylex)
		}
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6249
		{
			skipToEnd(yylex)
		}
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6254
		{
			skipToEnd(yylex)
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6258
		{
			skipToEnd(yylex)
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6262
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
