// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const NOW = 57727
const CURRENT_TIME = 57728
const LOCALTIME = 57729
const LOCALTIMESTAMP = 57730
const CURRENT_USER = 57731
const UTC_DATE = 57732
const UTC_TIME = 57733
const UTC_TIMESTAMP = 57734
const DAY = 57735
const DAY_HOUR = 57736
const DAY_MICROSECOND = 57737
const DAY_MINUTE = 57738
const DAY_SECOND = 57739
const HOUR = 57740
const HOUR_MICROSECOND = 57741
const HOUR_MINUTE = 57742
const HOUR_SECOND = 57743
const MICROSECOND = 57744
const MINUTE = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const MONTH = 57748
const QUARTER = 57749
const SECOND = 57750
const SECOND_MICROSECOND = 57751
const YEAR_MONTH = 57752
const WEEK = 57753
const REPLACE = 57754
const CONVERT = 57755
const CAST = 57756
const SUBSTR = 57757
const SUBSTRING = 57758
const GROUP_CONCAT = 57759
const SEPARATOR = 57760
const TIMESTAMPADD = 57761
const TIMESTAMPDIFF = 57762
const WEIGHT_STRING = 57763
const LTRIM = 57764
const RTRIM = 57765
const TRIM = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const CUME_DIST = 57795
const DESCRIPTION = 57796
const DENSE_RANK = 57797
const EMPTY = 57798
const EXCEPT = 57799
const FIRST_VALUE = 57800
const GROUPING = 57801
const GROUPS = 57802
const JSON_TABLE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LATERAL = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const OF = 57810
const OVER = 57811
const PERCENT_RANK = 57812
const RANK = 57813
const RECURSIVE = 57814
const ROW_NUMBER = 57815
const SYSTEM = 57816
const WINDOW = 57817
const ACTIVE = 57818
const ADMIN = 57819
const BUCKETS = 57820
const CLONE = 57821
const COMPONENT = 57822
const DEFINITION = 57823
const ENFORCED = 57824
const EXCLUDE = 57825
const FOLLOWING = 57826
const GEOMCOLLECTION = 57827
const GET_MASTER_PUBLIC_KEY = 57828
const HISTOGRAM = 57829
const HISTORY = 57830
const INACTIVE = 57831
const INVISIBLE = 57832
const LOCKED = 57833
const MASTER_COMPRESSION_ALGORITHMS = 57834
const MASTER_PUBLIC_KEY_PATH = 57835
const MASTER_TLS_CIPHERSUITES = 57836
const MASTER_ZSTD_COMPRESSION_LEVEL = 57837
const NESTED = 57838
const NETWORK_NAMESPACE = 57839
const NOWAIT = 57840
const NULLS = 57841
const OJ = 57842
const OLD = 57843
const OPTIONAL = 57844
const ORDINALITY = 57845
const ORGANIZATION = 57846
const OTHERS = 57847
const PATH = 57848
const PERSIST = 57849
const PERSIST_ONLY = 57850
const PRECEDING = 57851
const PRIVILEGE_CHECKS_USER = 57852
const PROCESS = 57853
const RANDOM = 57854
const REFERENCE = 57855
const REQUIRE_ROW_FORMAT = 57856
const RESOURCE = 57857
const RESPECT = 57858
const RESTART = 57859
const RETAIN = 57860
const REUSE = 57861
const ROLE = 57862
const SECONDARY = 57863
const SECONDARY_ENGINE = 57864
const SECONDARY_LOAD = 57865
const SECONDARY_UNLOAD = 57866
const SKIP = 57867
const SRID = 57868
const THREAD_PRIORITY = 57869
const TIES = 57870
const UNBOUNDED = 57871
const VCPU = 57872
const VISIBLE = 57873
const RETURNING = 57874
const FORMAT = 57875
const TREE = 57876
const VITESS = 57877
const TRADITIONAL = 57878
const LOCAL = 57879
const LOW_PRIORITY = 57880
const NO_WRITE_TO_BINLOG = 57881
const LOGS = 57882
const ERROR = 57883
const GENERAL = 57884
const HOSTS = 57885
const OPTIMIZER_COSTS = 57886
const USER_RESOURCES = 57887
const SLOW = 57888
const CHANNEL = 57889
const RELAY = 57890
const EXPORT = 57891
const AVG_ROW_LENGTH = 57892
const CONNECTION = 57893
const CHECKSUM = 57894
const DELAY_KEY_WRITE = 57895
const ENCRYPTION = 57896
const ENGINE = 57897
const INSERT_METHOD = 57898
const MAX_ROWS = 57899
const MIN_ROWS = 57900
const PACK_KEYS = 57901
const PASSWORD = 57902
const FIXED = 57903
const DYNAMIC = 57904
const COMPRESSED = 57905
const REDUNDANT = 57906
const COMPACT = 57907
const ROW_FORMAT = 57908
const STATS_AUTO_RECALC = 57909
const STATS_PERSISTENT = 57910
const STATS_SAMPLE_PAGES = 57911
const STORAGE = 57912
const MEMORY = 57913
const DISK = 57914
const PARTITIONS = 57915
const LINEAR = 57916
const RANGE = 57917
const LIST = 57918
const SUBPARTITION = 57919
const SUBPARTITIONS = 57920
const HASH = 57921

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	597, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	327, 151,
	-2, 456,
	-1, 55,
	35, 671,
	231, 671,
	242, 671,
	277, 685,
	278, 685,
	-2, 673,
	-1, 60,
	233, 698,
	-2, 696,
	-1, 114,
	230, 1222,
	-2, 119,
	-1, 116,
	1, 146,
	597, 146,
	-2, 151,
	-1, 126,
	132, 358,
	236, 358,
	-2, 450,
	-1, 145,
	131, 151,
	171, 151,
	327, 151,
	-2, 465,
	-1, 677,
	215, 1243,
	-2, 1239,
	-1, 678,
	215, 1244,
	-2, 1240,
	-1, 752,
	59, 766,
	-2, 781,
	-1, 789,
	147, 1642,
	-2, 112,
	-1, 790,
	147, 1487,
	-2, 113,
	-1, 796,
	147, 1570,
	-2, 1216,
	-1, 944,
	147, 1418,
	-2, 1213,
	-1, 982,
	241, 41,
	246, 41,
	-2, 369,
	-1, 1059,
	1, 504,
	597, 504,
	-2, 151,
	-1, 1296,
	59, 767,
	-2, 786,
	-1, 1297,
	59, 768,
	-2, 787,
	-1, 1350,
	131, 151,
	171, 151,
	327, 151,
	-2, 400,
	-1, 1427,
	132, 358,
	236, 358,
	-2, 450,
	-1, 1436,
	241, 42,
	246, 42,
	-2, 370,
	-1, 1735,
	215, 1248,
	-2, 1242,
	-1, 1818,
	131, 151,
	171, 151,
	327, 151,
	-2, 401,
	-1, 1825,
	25, 170,
	-2, 172,
	-1, 2058,
	86, 39,
	-2, 823,
	-1, 2110,
	77, 94,
	86, 94,
	-2, 843,
	-1, 2174,
	572, 599,
	-2, 586,
	-1, 2307,
	49, 1184,
	-2, 1178,
	-1, 2514,
	86, 39,
	-2, 824,
	-1, 2552,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 815,
	-1, 2864,
	22, 1572,
	32, 1572,
	172, 1572,
	253, 1572,
	307, 1572,
	308, 1572,
	309, 1572,
	310, 1572,
	311, 1572,
	312, 1572,
	313, 1572,
	315, 1572,
	316, 1572,
	317, 1572,
	318, 1572,
	319, 1572,
	320, 1572,
	321, 1572,
	322, 1572,
	323, 1572,
	324, 1572,
	325, 1572,
	326, 1572,
	328, 1572,
	330, 1572,
	331, 1572,
	332, 1572,
	333, 1572,
	334, 1572,
	335, 1572,
	336, 1572,
	337, 1572,
	338, 1572,
	341, 1572,
	342, 1572,
	343, 1572,
	344, 1572,
	345, 1572,
	346, 1572,
	347, 1572,
	348, 1572,
	349, 1572,
	461, 1572,
	-2, 544,
}

const yyPrivate = 57344

const yyLast = 40934

var yyAct = [...]int{
	677, 2643, 2644, 2915, 2796, 2642, 2909, 1815, 2619, 2865,
	2862, 2866, 2445, 2846, 686, 2360, 2266, 1353, 679, 2367,
	2749, 1749, 2012, 1769, 2401, 1751, 96, 2657, 2321, 2318,
	745, 2772, 2428, 2046, 1878, 1311, 2427, 670, 37, 2369,
	3, 595, 2319, 2322, 2264, 2228, 2081, 1122, 1275, 680,
	668, 182, 767, 2523, 182, 1773, 560, 182, 2265, 669,
	2662, 621, 575, 2430, 182, 1788, 671, 2517, 2316, 2104,
	2543, 2073, 182, 2308, 2509, 1848, 2142, 1868, 2211, 591,
	2171, 2143, 1853, 593, 2144, 1071, 154, 182, 1804, 768,
	2093, 38, 2048, 1729, 947, 1793, 2065, 1704, 794, 1705,
	1867, 36, 1645, 747, 1298, 1434, 1792, 1635, 140, 575,
	1012, 1855, 575, 182, 575, 749, 587, 753, 1920, 1887,
	1593, 2136, 977, 1100, 1342, 2112, 972, 95, 1450, 1320,
	1795, 604, 1278, 1657, 1612, 770, 983, 91, 1143, 1207,
	954, 1865, 1524, 1538, 1441, 1780, 599, 951, 978, 1542,
	979, 955, 1341, 759, 1774, 1339, 791, 1325, 1701, 1120,
	1114, 1844, 980, 1402, 1547, 1055, 757, 76, 990, 1426,
	781, 755, 97, 123, 117, 98, 157, 118, 124, 1210,
	1214, 754, 582, 2805, 2164, 89, 2916, 1880, 1881, 1882,
	1880, 2398, 2190, 2189, 1918, 2162, 2602, 8, 1510, 85,
	2219, 756, 77, 7, 2220, 775, 1742, 780, 1144, 6,
	532, 2827, 1600, 592, 1599, 2647, 2826, 1598, 125, 184,
	185, 186, 1746, 1747, 119, 1144, 1597, 1596, 761, 1595,
	1578, 585, 1017, 586, 948, 1587, 2647, 2881, 2044, 2304,
	2497, 963, 958, 90, 2929, 748, 661, 2891, 583, 746,
	2075, 1407, 2906, 1014, 2578, 1605, 2745, 2744, 2612, 1016,
	1015, 2613, 2928, 795, 788, 2856, 1028, 1029, 2384, 1032,
	1033, 1034, 1035, 78, 970, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	993, 969, 1305, 119, 968, 102, 994, 769, 762, 2646,
	1958, 2827, 78, 78, 1860, 2419, 80, 2919, 574, 1018,
	1019, 1020, 1030, 1154, 2822, 2904, 2620, 2847, 2416, 1906,
	2646, 2855, 1025, 2821, 2227, 2479, 2084, 1416, 1858, 2045,
	1154, 2357, 2358, 2356, 2198, 178, 104, 105, 2197, 108,
	2218, 967, 114, 1064, 1065, 179, 1810, 1811, 527, 78,
	87, 2085, 1058, 1955, 1343, 793, 1344, 119, 949, 120,
	956, 1809, 2417, 962, 1956, 1176, 964, 1090, 741, 742,
	743, 744, 162, 739, 752, 1067, 738, 1095, 1096, 87,
	87, 1117, 2165, 2797, 2423, 1748, 2754, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1185, 1184, 1186, 1187, 2675, 965,
	1078, 2121, 783, 784, 2120, 1079, 2133, 2122, 1150, 178,
	1091, 1142, 1078, 1077, 2126, 1076, 1084, 1079, 1828, 1827,
	2520, 1054, 2470, 2447, 2254, 1150, 87, 2468, 573, 159,
	564, 160, 1586, 120, 1107, 571, 1109, 1530, 564, 564,
	564, 577, 1932, 1929, 1931, 1930, 162, 1687, 1588, 1589,
	1590, 177, 1282, 2172, 1500, 1888, 2440, 1934, 2193, 1935,
	967, 1936, 959, 1921, 2441, 1926, 1525, 1857, 1097, 961,
	960, 2918, 1732, 1111, 1106, 1108, 1093, 1094, 1098, 1031,
	971, 1925, 1060, 1116, 2206, 1099, 2604, 2603, 1937, 1037,
	1036, 1092, 2420, 2449, 1923, 2732, 2600, 1085, 1501, 87,
	1502, 967, 1053, 159, 2448, 160, 1891, 1789, 1001, 973,
	999, 2882, 966, 974, 974, 1010, 2373, 1285, 965, 1009,
	1927, 1008, 1007, 1924, 1006, 177, 1005, 182, 1004, 182,
	1003, 1419, 182, 998, 1679, 1668, 1669, 1670, 1671, 1681,
	1672, 1673, 1674, 1686, 1682, 1675, 1676, 1683, 1684, 1685,
	1677, 1678, 1680, 1011, 1188, 1188, 992, 1088, 2923, 163,
	952, 575, 1124, 575, 575, 986, 1057, 1104, 168, 1956,
	952, 1105, 2210, 2902, 950, 952, 2255, 985, 575, 575,
	782, 1110, 1539, 1866, 2913, 2207, 1912, 1440, 1535, 184,
	185, 186, 1130, 1149, 1146, 1147, 1148, 1153, 1155, 1152,
	992, 1151, 2049, 2051, 1103, 1021, 2391, 2599, 1145, 1027,
	1149, 1146, 1147, 1148, 1153, 1155, 1152, 37, 1151, 1074,
	1136, 1080, 1081, 1082, 1083, 1145, 565, 992, 2383, 2192,
	1414, 966, 564, 163, 565, 565, 565, 2223, 1970, 1413,
	1531, 1412, 168, 1118, 1119, 2182, 2804, 2163, 1536, 1775,
	1776, 1002, 2195, 1000, 991, 1410, 531, 2166, 1056, 526,
	985, 988, 989, 2205, 952, 2793, 2204, 2559, 982, 986,
	1908, 2539, 966, 561, 1189, 1190, 1112, 2117, 2080, 2810,
	2036, 155, 1816, 2872, 1191, 1192, 1193, 1194, 1125, 981,
	1859, 1439, 2755, 1741, 1199, 1329, 1202, 2870, 991, 2521,
	1254, 1188, 1529, 995, 985, 1069, 2874, 2875, 992, 1187,
	2355, 2820, 116, 996, 2371, 2372, 1101, 992, 1548, 548,
	764, 2871, 1126, 1127, 81, 991, 1273, 2213, 86, 1115,
	2213, 546, 2212, 997, 992, 2212, 1617, 2816, 1195, 182,
	1013, 1957, 2645, 575, 575, 1512, 1511, 1513, 1514, 1515,
	1618, 1619, 1616, 1087, 1073, 155, 111, 86, 86, 182,
	2595, 2533, 2050, 2645, 1089, 1922, 1532, 1345, 1140, 1066,
	1063, 543, 1658, 2247, 1984, 747, 1291, 1139, 575, 1289,
	556, 77, 182, 1137, 1288, 1075, 1658, 575, 1292, 1138,
	1274, 2155, 1159, 575, 749, 553, 2911, 2671, 1286, 2912,
	1212, 2910, 1213, 2570, 86, 1216, 991, 793, 2569, 793,
	793, 1895, 985, 988, 989, 991, 952, 1026, 2370, 1160,
	982, 986, 1158, 1159, 1131, 1133, 112, 1449, 565, 1448,
	2373, 1160, 991, 1268, 791, 2421, 2422, 995, 985, 1290,
	1607, 1609, 1610, 95, 1526, 1438, 1527, 996, 2424, 1528,
	1905, 1900, 1274, 1260, 1261, 1262, 1263, 1264, 1907, 1102,
	533, 1549, 535, 549, 1608, 567, 1903, 566, 539, 1279,
	537, 541, 550, 542, 1001, 536, 999, 547, 1900, 2924,
	538, 551, 552, 554, 557, 558, 559, 555, 1904, 545,
	568, 98, 2898, 1059, 1072, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 2832, 2786, 2560, 1160,
	1330, 173, 174, 175, 176, 1902, 1962, 1963, 1964, 1519,
	1276, 746, 1340, 2926, 748, 1310, 87, 2476, 184, 185,
	186, 1517, 1637, 1271, 1182, 1183, 1185, 1184, 1186, 1187,
	1615, 795, 1507, 2740, 2739, 1160, 1287, 182, 2833, 2787,
	1157, 1403, 1158, 1159, 1335, 1336, 1160, 2730, 2635, 2249,
	1411, 1307, 1157, 2925, 1158, 1159, 1160, 2634, 2577, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	2576, 575, 1518, 1436, 2399, 173, 174, 175, 176, 1283,
	1284, 1445, 1305, 2389, 1516, 1447, 2140, 2139, 575, 575,
	1863, 575, 1520, 575, 575, 1506, 575, 575, 575, 575,
	575, 575, 1638, 1180, 1181, 1182, 1183, 1185, 1184, 1186,
	1187, 575, 1160, 1505, 1327, 182, 1483, 2765, 1305, 1975,
	1160, 786, 1504, 793, 691, 692, 693, 1503, 1974, 1347,
	1157, 182, 1158, 1159, 1494, 1781, 1782, 1293, 2474, 1305,
	1488, 1485, 575, 1484, 182, 569, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1162, 1459, 1537, 1496, 2899, 575, 2813,
	182, 1314, 2812, 562, 2790, 1432, 1157, 2789, 1158, 1159,
	2788, 1417, 1418, 2735, 2670, 1425, 182, 1157, 563, 1158,
	1159, 2668, 2631, 182, 2574, 1160, 1444, 1157, 2566, 1158,
	1159, 2149, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 575, 2021, 1305, 2137, 1480, 1993, 1305, 1305, 1270,
	1315, 1916, 2444, 1409, 1662, 575, 575, 1452, 1663, 1453,
	1915, 1455, 1457, 1772, 1443, 1461, 1463, 1465, 1467, 1469,
	1446, 1486, 1487, 182, 1754, 1422, 1435, 1492, 1493, 1423,
	184, 185, 186, 1157, 1421, 1158, 1159, 1442, 1442, 1579,
	1545, 1157, 1508, 1158, 1159, 1478, 1479, 1495, 1544, 1491,
	1552, 1490, 1489, 1160, 1316, 1113, 1481, 1556, 1160, 1558,
	1559, 1560, 1561, 1129, 2071, 2917, 1565, 1160, 2001, 1636,
	94, 1160, 2887, 1305, 1973, 1160, 2762, 1980, 1577, 2761,
	1550, 1551, 1648, 575, 1642, 1642, 1639, 1643, 1640, 1640,
	1540, 2724, 1318, 2723, 1555, 2618, 2071, 2853, 575, 575,
	2173, 1562, 1563, 1564, 2071, 2840, 1157, 949, 1158, 1159,
	2071, 2836, 2152, 1160, 969, 1824, 119, 968, 1613, 2532,
	1271, 2828, 1305, 1611, 1451, 1451, 2534, 1451, 1305, 1451,
	1451, 1554, 1460, 1451, 1451, 1451, 1451, 1451, 1621, 1415,
	101, 1305, 2071, 2806, 2082, 1271, 1271, 949, 92, 1979,
	1575, 100, 1576, 99, 2900, 1160, 2113, 1317, 1702, 93,
	1156, 182, 94, 2815, 1583, 1584, 575, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1185, 1184, 1186, 1187, 1521, 2082,
	1160, 2071, 1733, 1614, 1157, 2090, 1158, 1159, 2493, 1157,
	182, 1158, 1159, 575, 1541, 2013, 2610, 2803, 1157, 2379,
	1158, 1159, 1157, 182, 1158, 1159, 1157, 575, 1158, 1159,
	1702, 2292, 182, 1305, 182, 2090, 182, 182, 575, 2114,
	1305, 575, 1759, 2878, 1760, 184, 185, 186, 2116, 2567,
	1737, 1738, 575, 1735, 2493, 1305, 1659, 793, 2801, 2071,
	2731, 1825, 100, 95, 1157, 1160, 1158, 1159, 2610, 1305,
	2532, 793, 793, 101, 184, 185, 186, 1733, 2124, 1808,
	1160, 1971, 95, 1305, 100, 791, 99, 1620, 791, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 2006, 1765, 1734, 1791, 1157, 575, 1158, 1159,
	2071, 2608, 1160, 1869, 1870, 1871, 1900, 1305, 1873, 1875,
	1834, 1835, 1836, 1837, 2089, 184, 185, 186, 1735, 1876,
	1971, 1157, 575, 1158, 1159, 2537, 1305, 1819, 575, 1445,
	1753, 1990, 1445, 1989, 1445, 761, 1820, 2843, 2728, 1649,
	1899, 1156, 1305, 1305, 1900, 678, 1271, 1802, 2006, 1305,
	2381, 2380, 2554, 1767, 1664, 1665, 1889, 1883, 184, 185,
	186, 1160, 1874, 1779, 1823, 2377, 2378, 1850, 2090, 1786,
	575, 1309, 1636, 1856, 1784, 2377, 2376, 1636, 1636, 2090,
	1305, 1807, 795, 1806, 2495, 795, 1157, 1744, 1158, 1159,
	1822, 793, 1821, 1971, 1305, 1591, 183, 1956, 2191, 183,
	1534, 1157, 183, 1158, 1159, 2229, 1337, 576, 1160, 183,
	1406, 2176, 2350, 182, 2169, 2170, 1886, 183, 2071, 2070,
	182, 1956, 1758, 976, 2113, 182, 182, 1406, 1405, 182,
	975, 182, 183, 1157, 1894, 1158, 1159, 1897, 182, 1898,
	1851, 1901, 1864, 1862, 2596, 182, 751, 1872, 1861, 1770,
	1846, 1847, 1160, 87, 576, 1351, 1350, 576, 183, 576,
	2317, 2751, 1892, 1327, 1909, 2067, 793, 1312, 1893, 2402,
	2532, 182, 2721, 1851, 793, 1896, 575, 793, 1160, 1911,
	94, 2682, 2594, 993, 1913, 1914, 2231, 2114, 949, 994,
	1910, 2141, 1157, 2591, 1158, 1159, 1956, 1160, 1900, 1442,
	1829, 2572, 1830, 1831, 1832, 1833, 1178, 1179, 1180, 1181,
	1182, 1183, 1185, 1184, 1186, 1187, 2485, 92, 1840, 1841,
	1842, 1843, 2484, 87, 94, 1408, 1947, 1948, 93, 1849,
	2442, 1950, 2404, 1919, 2491, 2400, 2146, 1971, 2177, 1157,
	1951, 1158, 1159, 956, 1160, 2363, 1845, 1839, 2241, 2240,
	2239, 2233, 1838, 2237, 1522, 2232, 1437, 2230, 1433, 1644,
	2482, 1404, 2235, 113, 1058, 2446, 1650, 1651, 949, 2752,
	1940, 2234, 1581, 1613, 956, 1176, 2145, 1860, 1172, 2481,
	1173, 1160, 1305, 1157, 1757, 1158, 1159, 2895, 2236, 2238,
	2364, 2893, 1967, 2867, 1174, 1175, 1171, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1185, 1184, 1186, 1187, 2825, 1157,
	2770, 1158, 1159, 2544, 2545, 2366, 949, 2547, 1736, 2583,
	1954, 1739, 1740, 2146, 1160, 2396, 2030, 2395, 1157, 2361,
	1158, 1159, 2579, 2394, 1582, 182, 2317, 2156, 1614, 1474,
	1941, 1965, 2550, 182, 2339, 2337, 2371, 2372, 575, 2340,
	2338, 2549, 2336, 2362, 575, 2652, 2335, 2651, 1764, 2884,
	1642, 2854, 2055, 2029, 1640, 575, 2584, 2585, 2053, 1771,
	1313, 2059, 1176, 1763, 2222, 1157, 2538, 1158, 1159, 2042,
	1983, 1471, 2580, 2581, 2582, 2368, 2297, 2296, 182, 1475,
	1476, 1477, 182, 2661, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1185, 1184, 1186, 1187, 2650, 2028, 2123, 2785, 1176,
	2663, 1969, 1157, 2528, 1158, 1159, 37, 2306, 2072, 2086,
	2375, 1966, 1953, 1968, 1999, 2106, 1533, 737, 1472, 1473,
	1735, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1184,
	1186, 1187, 2095, 2098, 2099, 2100, 2096, 2131, 2097, 2101,
	2370, 575, 2544, 2545, 2150, 1157, 182, 1158, 1159, 1654,
	2068, 1023, 2373, 182, 1022, 1279, 2341, 2043, 2099, 2100,
	1160, 2309, 2311, 1655, 2456, 575, 2134, 2135, 2145, 1128,
	2312, 1734, 575, 92, 2216, 2525, 1445, 1445, 765, 2105,
	2069, 575, 2064, 2524, 93, 2127, 766, 92, 2168, 2079,
	2184, 1160, 2183, 2188, 94, 120, 2530, 1160, 93, 2187,
	1781, 1782, 2111, 1176, 182, 182, 182, 182, 182, 2115,
	94, 2921, 1856, 2118, 2392, 1944, 2802, 2747, 2510, 2374,
	2103, 182, 182, 2128, 2125, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1185, 1184, 1186, 1187, 101, 182, 1768, 773,
	774, 2138, 2027, 1933, 1960, 1160, 2147, 100, 2148, 99,
	2157, 2158, 2159, 2295, 99, 2777, 1636, 2365, 94, 2776,
	100, 2294, 183, 2153, 183, 101, 2669, 183, 793, 2667,
	2666, 2186, 1425, 2026, 2659, 2592, 100, 2658, 99, 2025,
	2529, 2178, 2179, 2527, 1770, 2405, 1884, 1420, 747, 772,
	2061, 1157, 2246, 1158, 1159, 2518, 576, 2082, 576, 576,
	2242, 2076, 1160, 1303, 1299, 2067, 1642, 2256, 1642, 2185,
	1640, 1642, 1640, 576, 576, 1640, 1642, 575, 1300, 1991,
	1640, 101, 1157, 1755, 1158, 1159, 1331, 2024, 1157, 2224,
	1158, 1159, 100, 575, 2225, 2897, 2896, 2896, 2269, 1322,
	2897, 2208, 2791, 1761, 1762, 1302, 2565, 1301, 182, 763,
	2214, 103, 575, 2215, 2226, 2272, 2279, 2280, 2281, 2282,
	2273, 575, 88, 2243, 2286, 106, 107, 1, 575, 575,
	2869, 182, 182, 182, 182, 182, 1157, 544, 1158, 1159,
	1745, 1277, 1509, 182, 2023, 1499, 2260, 2151, 182, 2621,
	1703, 182, 2299, 182, 2748, 2410, 182, 182, 182, 2329,
	2274, 2275, 2276, 2277, 2278, 753, 1981, 2408, 2286, 2285,
	1890, 1770, 2349, 2590, 2314, 1854, 984, 2300, 2175, 145,
	2287, 1160, 1817, 1818, 2849, 1292, 2106, 2180, 1160, 110,
	945, 2390, 2323, 1157, 109, 1158, 1159, 182, 2267, 2415,
	2267, 2298, 987, 2267, 1160, 1086, 1885, 2611, 2267, 2132,
	575, 1826, 2412, 2301, 2411, 2409, 1357, 1355, 575, 755,
	1160, 2291, 2351, 182, 1356, 2352, 1354, 2331, 2332, 754,
	2334, 1160, 2342, 182, 183, 1160, 95, 2330, 576, 576,
	2333, 2426, 1359, 2033, 2034, 2353, 1160, 1358, 182, 2346,
	2347, 182, 1992, 2359, 183, 2496, 1544, 2328, 2288, 2289,
	2290, 2457, 1160, 2022, 1585, 572, 2386, 2102, 2385, 180,
	2016, 2320, 1346, 576, 1323, 2434, 2320, 183, 1024, 1160,
	534, 2382, 576, 1917, 2433, 540, 2015, 1200, 576, 1580,
	2293, 1160, 2119, 792, 1856, 785, 2387, 2388, 1271, 2425,
	1271, 1756, 2014, 1271, 2406, 2057, 2437, 2325, 1271, 2522,
	2305, 2307, 1157, 2011, 1158, 1159, 2074, 2010, 2310, 1157,
	2303, 1158, 1159, 793, 2784, 2490, 2452, 2451, 2009, 2660,
	2841, 2129, 1319, 575, 182, 1157, 1982, 1158, 1159, 1451,
	2454, 2455, 2459, 1656, 2007, 1796, 1606, 2460, 597, 2466,
	596, 1157, 594, 1158, 1159, 2060, 2083, 1163, 2302, 2407,
	681, 2003, 1157, 2047, 1158, 1159, 1157, 793, 1158, 1159,
	1332, 1271, 2094, 2002, 2327, 1451, 1271, 1157, 2092, 1158,
	1159, 2091, 1942, 1803, 2546, 2516, 2542, 2861, 1798, 1794,
	2066, 182, 605, 1157, 598, 1158, 1159, 590, 2562, 2432,
	2194, 2443, 2196, 2130, 2511, 2512, 2439, 1141, 1295, 2568,
	1157, 584, 1158, 1159, 182, 2519, 2541, 957, 1653, 2551,
	2753, 2526, 1157, 2808, 1158, 1159, 1959, 2531, 2478, 1294,
	1666, 1667, 182, 2397, 2174, 182, 182, 182, 2557, 2558,
	1877, 63, 183, 41, 2548, 575, 575, 1694, 579, 2880,
	1132, 779, 32, 31, 2434, 2555, 949, 30, 29, 1271,
	2556, 28, 23, 2433, 1770, 2563, 22, 2564, 2597, 2598,
	21, 20, 2573, 19, 2575, 25, 576, 2095, 2098, 2099,
	2100, 2096, 18, 2097, 2101, 17, 16, 575, 575, 575,
	575, 2418, 2890, 576, 576, 2920, 576, 115, 576, 576,
	50, 576, 576, 576, 576, 576, 576, 47, 45, 122,
	121, 48, 44, 1061, 2617, 42, 576, 1303, 1299, 27,
	183, 2463, 2464, 26, 2465, 2615, 2616, 2467, 15, 2469,
	14, 2471, 1300, 13, 12, 11, 183, 10, 9, 5,
	4, 35, 34, 33, 1135, 24, 1642, 576, 1642, 183,
	1640, 2, 1640, 2414, 182, 2413, 2161, 1296, 1297, 1302,
	2627, 1301, 1879, 576, 0, 183, 0, 1304, 2601, 0,
	0, 2630, 2605, 2606, 2607, 2655, 2638, 0, 575, 2302,
	575, 183, 0, 2648, 0, 0, 0, 0, 183, 0,
	0, 0, 2639, 0, 0, 0, 0, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 576, 2678, 747, 1642,
	0, 2684, 2680, 1640, 37, 2672, 2665, 2676, 2674, 0,
	576, 576, 2664, 0, 2656, 662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 183, 0,
	0, 2323, 2685, 2686, 0, 2323, 0, 2688, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2729, 0,
	0, 575, 2725, 0, 0, 0, 0, 2727, 2726, 0,
	0, 0, 0, 2741, 0, 0, 181, 0, 2267, 530,
	2267, 0, 570, 2743, 2767, 2768, 0, 0, 2742, 530,
	575, 1770, 1770, 0, 575, 575, 0, 530, 576, 0,
	0, 0, 1642, 0, 2771, 0, 1640, 2733, 2750, 0,
	0, 0, 760, 576, 576, 2626, 0, 0, 0, 2320,
	0, 0, 0, 575, 2781, 2778, 2779, 0, 778, 2780,
	778, 0, 0, 2622, 2623, 2624, 2625, 0, 530, 0,
	0, 0, 0, 0, 2792, 0, 2795, 0, 2783, 0,
	0, 0, 747, 2736, 2737, 2738, 2798, 0, 0, 0,
	0, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2794, 0, 0, 183, 182, 1271, 0,
	1271, 576, 2323, 0, 0, 2800, 0, 0, 0, 0,
	0, 0, 575, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 2811, 0, 0, 183, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 2817, 0, 0, 183, 1271,
	0, 0, 576, 0, 2677, 37, 2679, 183, 2814, 183,
	0, 183, 183, 576, 575, 0, 576, 0, 0, 2807,
	0, 0, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 575, 575, 0, 0,
	0, 2834, 0, 0, 0, 0, 0, 0, 0, 575,
	2844, 0, 0, 0, 0, 0, 2848, 0, 182, 575,
	37, 1770, 0, 2842, 0, 0, 2857, 0, 0, 0,
	0, 2839, 0, 0, 0, 0, 2876, 2868, 178, 2860,
	0, 2873, 576, 2750, 2850, 0, 2883, 793, 2888, 0,
	0, 0, 0, 0, 0, 0, 2894, 2892, 1374, 575,
	0, 2889, 120, 0, 142, 0, 0, 576, 575, 0,
	0, 0, 2903, 576, 0, 162, 2774, 2907, 2905, 0,
	2774, 2774, 2901, 0, 2914, 1642, 0, 2908, 0, 1640,
	0, 0, 0, 2922, 0, 0, 0, 0, 0, 178,
	0, 2927, 0, 0, 0, 0, 152, 0, 0, 1770,
	2167, 141, 2932, 2933, 2768, 576, 2931, 0, 2320, 0,
	0, 0, 0, 120, 1642, 142, 2930, 0, 1640, 0,
	0, 0, 159, 0, 160, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 0,
	129, 130, 151, 150, 177, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 183, 0, 152, 0, 0,
	183, 183, 141, 0, 183, 0, 183, 0, 1770, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 159, 0, 160, 0, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1428, 1429, 151, 150, 177, 183, 0, 1271, 0,
	2835, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 793, 793, 0, 0, 0, 0, 0, 0,
	146, 127, 153, 134, 126, 2858, 147, 148, 0, 0,
	0, 0, 163, 0, 0, 2863, 0, 0, 0, 0,
	0, 168, 135, 0, 0, 0, 0, 0, 0, 1375,
	0, 0, 0, 0, 0, 0, 138, 136, 131, 132,
	133, 137, 530, 0, 530, 0, 0, 530, 128, 0,
	0, 0, 0, 0, 0, 1770, 0, 139, 0, 0,
	0, 146, 1430, 153, 2863, 1427, 0, 147, 148, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 1388, 1391, 1392, 1393, 1394, 1395, 1396,
	0, 1397, 1398, 1399, 1400, 1401, 1376, 1377, 1378, 1379,
	1360, 1361, 1389, 0, 1363, 0, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 0, 0, 1373, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 0, 0, 0, 0,
	183, 0, 0, 0, 155, 0, 0, 0, 183, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 1306, 1308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1390, 0, 0,
	0, 0, 0, 0, 143, 0, 576, 144, 0, 0,
	0, 183, 0, 0, 530, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 0, 149, 0, 760, 0, 0, 576, 0, 0,
	0, 0, 0, 0, 2056, 0, 576, 689, 690, 0,
	0, 0, 0, 1641, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 144, 183,
	183, 183, 183, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 0,
	0, 0, 0, 0, 173, 174, 175, 176, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	0, 0, 576, 0, 0, 173, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 576, 0, 0,
	0, 0, 530, 0, 0, 0, 576, 0, 0, 0,
	0, 0, 0, 576, 576, 0, 183, 183, 183, 183,
	183, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 183, 0, 0, 183, 0, 183, 0,
	0, 183, 183, 183, 0, 0, 0, 0, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 1272, 0, 0, 0, 0,
	530, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 1497, 0, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 183, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 1543, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 183, 0, 0, 0,
	777, 530, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 1566, 1567, 530,
	530, 530, 530, 530, 530, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1374, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 1660,
	0, 0, 178, 1661, 0, 0, 0, 0, 576, 183,
	0, 0, 0, 1424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 0, 142, 0,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 778, 0, 0, 0, 0, 0, 0, 778,
	778, 0, 0, 0, 0, 1272, 0, 0, 0, 0,
	0, 0, 1306, 1743, 0, 0, 183, 0, 0, 0,
	152, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 1766, 159, 0, 160, 778,
	1543, 778, 778, 778, 778, 778, 0, 183, 0, 0,
	183, 183, 183, 0, 1428, 1429, 151, 150, 177, 0,
	576, 576, 1362, 0, 0, 0, 1497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 760, 0, 0, 0, 0,
	0, 0, 576, 576, 576, 576, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 1543, 0, 530, 0, 530,
	0, 530, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 1430, 153, 0, 1427, 0,
	147, 148, 0, 0, 0, 0, 163, 0, 0, 183,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 576, 0, 576, 0, 1388, 1391, 1392,
	1393, 1394, 1395, 1396, 0, 1397, 1398, 1399, 1400, 1401,
	1376, 1377, 1378, 1379, 1360, 1361, 1389, 0, 1363, 0,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 0,
	0, 1373, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 2690, 2692, 2691, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 627, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	1280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 0, 0, 530, 576,
	576, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	530, 530, 0, 0, 530, 0, 1945, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 576, 0,
	530, 0, 0, 0, 529, 0, 0, 0, 0, 0,
	0, 1390, 0, 0, 578, 0, 0, 0, 0, 0,
	0, 0, 740, 0, 0, 149, 530, 0, 0, 0,
	0, 0, 1972, 0, 0, 0, 1976, 576, 1977, 1978,
	0, 0, 0, 0, 0, 0, 0, 1986, 0, 0,
	1987, 1988, 183, 0, 0, 0, 0, 0, 143, 0,
	0, 144, 0, 953, 0, 0, 0, 576, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 1995, 1996,
	1997, 1998, 0, 2000, 0, 0, 0, 0, 0, 2004,
	0, 2005, 0, 0, 0, 2008, 0, 0, 0, 778,
	0, 0, 0, 2017, 2018, 2019, 2020, 0, 0, 576,
	0, 0, 0, 0, 0, 0, 2031, 2032, 0, 0,
	1161, 0, 0, 0, 2037, 2038, 2039, 2040, 2041, 0,
	1766, 576, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 2054, 0, 0, 576, 0, 0, 0, 1208, 0,
	0, 0, 0, 183, 576, 0, 0, 0, 0, 0,
	2696, 2697, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 0, 0, 0, 778, 778, 173, 174,
	175, 176, 0, 0, 0, 0, 0, 1543, 0, 0,
	530, 0, 0, 0, 576, 0, 0, 0, 1497, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	672, 0, 622, 676, 624, 673, 674, 0, 620, 623,
	675, 0, 0, 0, 0, 0, 0, 0, 689, 690,
	0, 0, 0, 530, 1641, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 625, 626, 2689,
	2693, 2694, 2695, 2698, 2699, 2700, 2708, 2710, 650, 2709,
	2711, 2712, 2713, 2716, 2717, 2718, 2719, 2714, 2715, 2720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 2160, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	530, 530, 530, 530, 0, 0, 0, 0, 0, 0,
	2253, 0, 0, 0, 0, 0, 530, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2268, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 0, 0,
	0, 2283, 2284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1272, 0, 1272,
	0, 0, 1272, 0, 0, 0, 0, 1272, 0, 0,
	0, 688, 79, 0, 0, 2326, 0, 1062, 0, 1068,
	0, 778, 1070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2344, 2345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 1272, 530, 530, 530, 530,
	530, 0, 0, 0, 0, 0, 0, 0, 2343, 750,
	0, 79, 0, 530, 0, 0, 1497, 0, 530, 0,
	0, 530, 2354, 1543, 0, 0, 0, 0, 0, 750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 0, 1546, 0, 0, 0, 0, 2458,
	0, 0, 0, 0, 0, 0, 2462, 0, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	2472, 2473, 2475, 2477, 0, 0, 0, 0, 530, 0,
	2483, 0, 0, 0, 0, 2487, 2488, 2489, 0, 0,
	0, 0, 2492, 530, 0, 0, 530, 0, 2494, 0,
	0, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 0, 0, 2508, 0, 0, 0, 0, 0, 2513,
	0, 0, 0, 0, 0, 0, 0, 1601, 1602, 1603,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2535, 2536, 0, 0, 2540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 1647,
	0, 0, 1334, 0, 2552, 2553, 1652, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1688, 1689, 1690, 1691, 1692, 1693, 1695, 1699, 1700,
	588, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 2609, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	530, 530, 530, 0, 0, 0, 0, 0, 1777, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2636, 0, 1814, 0, 2637, 0,
	0, 0, 0, 0, 2641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 1272, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	0, 78, 39, 40, 80, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1482, 0, 0, 1272, 0,
	0, 84, 0, 0, 0, 43, 69, 70, 0, 67,
	71, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 2746, 0, 1523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2756, 2757, 2758, 0,
	2759, 2760, 0, 0, 0, 0, 2763, 56, 2764, 0,
	2766, 2769, 1121, 0, 1121, 1121, 1553, 2773, 87, 0,
	0, 0, 0, 1557, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 1497, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2799, 0, 0, 750, 1196,
	1197, 1198, 0, 1201, 0, 1203, 1204, 1205, 1206, 0,
	1209, 1211, 1211, 1594, 1211, 1215, 1215, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 0, 1255, 1256, 1257, 1258, 1259,
	0, 2819, 0, 0, 1215, 1215, 1215, 1215, 1215, 0,
	0, 0, 0, 0, 0, 2824, 0, 0, 0, 0,
	2829, 0, 0, 0, 0, 0, 2830, 2831, 0, 0,
	0, 46, 49, 52, 51, 54, 0, 66, 0, 0,
	75, 72, 1497, 0, 2837, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 55, 83, 82, 0, 0, 64, 65,
	53, 0, 1281, 0, 0, 0, 73, 74, 750, 0,
	0, 0, 750, 0, 0, 1208, 0, 0, 750, 0,
	0, 0, 0, 2879, 0, 0, 0, 1272, 0, 0,
	0, 0, 0, 0, 0, 2885, 0, 0, 0, 2886,
	0, 0, 57, 58, 0, 59, 60, 61, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 1497, 1790, 0, 0, 1594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 682, 689, 690, 691, 692,
	693, 683, 685, 0, 0, 0, 684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 687,
	694, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2435, 2436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1594, 0, 0, 0, 0, 0, 0,
	1928, 0, 0, 0, 0, 1938, 1939, 0, 0, 1943,
	0, 0, 2221, 0, 0, 0, 0, 0, 1946, 0,
	0, 0, 0, 0, 0, 1949, 0, 0, 0, 0,
	2244, 2245, 0, 0, 0, 2248, 0, 0, 0, 0,
	2250, 2251, 2252, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 2257, 2258, 2259, 0, 0, 1706, 2261, 0,
	2262, 2263, 0, 0, 0, 2270, 2271, 0, 0, 0,
	0, 0, 0, 1706, 1706, 1706, 1706, 1706, 588, 588,
	588, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1121, 1121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2348, 0, 0, 672, 0, 0, 676, 0, 673, 674,
	0, 0, 0, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2110, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2480, 0, 0, 0, 0, 0, 0, 2486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 2154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2199, 2200, 2201, 2202, 2203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1594, 2209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2628, 0, 2629, 0, 0,
	0, 0, 2632, 2633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2681, 0, 1961, 2683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2722, 0, 0, 0, 2393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2429, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2450, 0,
	0, 2453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2782,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	750, 0, 0, 0, 2515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2087, 2088, 0, 0, 0, 588, 0, 0, 0, 2107,
	0, 2108, 2109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 2823, 682, 689, 690,
	691, 692, 693, 683, 685, 0, 0, 0, 684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 687, 694, 695, 2571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 2586, 0, 0, 2587, 2588, 2589, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2435, 2436, 0,
	0, 0, 0, 2181, 2877, 0, 0, 0, 0, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2324, 0, 79,
	0, 0, 1797, 1797, 1797, 1797, 1797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2107,
	750, 0, 0, 0, 1797, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2461,
	0, 0, 0, 2818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2649, 0, 2653, 2654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2324, 0, 79, 0,
	2324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2809, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 0, 0, 927, 912, 450, 79,
	858, 930, 827, 846, 940, 849, 852, 894, 806, 872,
	370, 843, 798, 831, 801, 838, 802, 829, 860, 244,
	826, 914, 876, 929, 325, 241, 808, 832, 384, 848,
	193, 896, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 936, 329, 882, 2838,
	435, 355, 0, 0, 79, 862, 918, 870, 908, 857,
	895, 816, 881, 931, 844, 891, 932, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 2851, 0, 2852, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 840, 888, 926, 841, 890, 239, 285,
	246, 238, 454, 937, 917, 805, 869, 925, 0, 0,
	209, 928, 864, 0, 893, 0, 943, 800, 884, 0,
	803, 807, 939, 921, 835, 249, 0, 0, 0, 0,
	0, 0, 0, 861, 871, 905, 855, 0, 0, 0,
	0, 0, 0, 0, 833, 0, 880, 0, 0, 0,
	812, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 859, 0, 0, 0, 815, 0, 834,
	906, 0, 797, 268, 809, 356, 231, 0, 910, 920,
	856, 488, 924, 854, 853, 900, 813, 916, 847, 324,
	811, 293, 188, 205, 0, 845, 366, 407, 413, 915,
	830, 839, 229, 837, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 879, 898, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 1123, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	825, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 911, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 903, 942, 379, 412, 219, 474, 434, 820, 824,
	818, 885, 819, 874, 875, 821, 933, 934, 935, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 907, 814,
	0, 822, 823, 0, 913, 922, 923, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 878, 187,
	202, 327, 938, 401, 261, 503, 482, 478, 799, 817,
	236, 828, 836, 0, 842, 850, 851, 863, 865, 866,
	867, 868, 886, 887, 889, 897, 899, 902, 904, 909,
	919, 941, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 877, 883, 338, 254, 273, 284,
	892, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	873, 901, 334, 451, 452, 280, 352, 0, 0, 927,
	912, 450, 0, 858, 930, 827, 846, 940, 849, 852,
	894, 806, 872, 370, 843, 798, 831, 801, 838, 802,
	829, 860, 244, 826, 914, 876, 929, 325, 241, 808,
	832, 384, 848, 193, 896, 426, 228, 335, 332, 457,
	255, 247, 243, 227, 281, 342, 382, 444, 376, 936,
	329, 882, 0, 435, 355, 0, 0, 0, 862, 918,
	870, 908, 857, 895, 816, 881, 931, 844, 891, 932,
	287, 226, 192, 367, 436, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 840, 888, 926, 841,
	890, 239, 285, 246, 238, 454, 937, 917, 805, 869,
	925, 0, 0, 209, 928, 864, 0, 893, 0, 943,
	800, 884, 0, 803, 807, 939, 921, 835, 249, 0,
	0, 0, 0, 0, 0, 0, 861, 871, 905, 855,
	0, 0, 0, 0, 0, 2355, 0, 833, 0, 880,
	0, 0, 0, 812, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 859, 0, 0, 0,
	815, 0, 834, 906, 0, 797, 268, 809, 356, 231,
	0, 910, 920, 856, 488, 924, 854, 853, 900, 813,
	916, 847, 324, 811, 293, 188, 205, 0, 845, 366,
	407, 413, 915, 830, 839, 229, 837, 411, 380, 472,
	213, 257, 404, 385, 409, 392, 260, 879, 898, 410,
	330, 459, 399, 469, 489, 490, 237, 360, 479, 448,
	485, 502, 206, 234, 374, 441, 475, 432, 353, 455,
	456, 292, 431, 266, 191, 328, 495, 204, 419, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 349, 289, 290, 198, 0, 403, 242, 264,
	232, 369, 462, 463, 230, 505, 208, 484, 201, 1123,
	483, 362, 458, 466, 350, 340, 200, 464, 348, 339,
	295, 314, 315, 253, 275, 397, 333, 398, 276, 358,
	357, 359, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 825, 252, 256, 263, 265, 271, 272,
	279, 326, 373, 396, 394, 400, 911, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 361,
	278, 433, 294, 331, 903, 942, 379, 412, 219, 474,
	434, 820, 824, 818, 885, 819, 874, 875, 821, 933,
	934, 935, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 907, 814, 0, 822, 823, 0, 913, 922, 923,
	525, 341, 425, 471, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 878, 187, 202, 327, 938, 401, 261, 503, 482,
	478, 799, 817, 236, 828, 836, 0, 842, 850, 851,
	863, 865, 866, 867, 868, 886, 887, 889, 897, 899,
	902, 904, 909, 919, 941, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 420, 270, 468, 492, 0, 336, 877, 883, 338,
	254, 273, 284, 892, 481, 439, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 424, 445, 446, 447, 449,
	351, 240, 386, 873, 901, 334, 451, 452, 280, 352,
	0, 0, 927, 912, 450, 0, 858, 930, 827, 846,
	940, 849, 852, 894, 806, 872, 370, 843, 798, 831,
	801, 838, 802, 829, 860, 244, 826, 914, 876, 929,
	325, 241, 808, 832, 384, 848, 193, 896, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 936, 329, 882, 0, 435, 355, 0, 0,
	0, 862, 918, 870, 908, 857, 895, 816, 881, 931,
	844, 891, 932, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 840,
	888, 926, 841, 890, 239, 285, 246, 238, 454, 937,
	917, 805, 869, 925, 0, 0, 209, 928, 864, 0,
	893, 0, 943, 800, 884, 0, 803, 807, 939, 921,
	835, 249, 0, 0, 0, 0, 0, 0, 0, 861,
	871, 905, 855, 0, 0, 0, 0, 0, 2313, 0,
	833, 0, 880, 0, 0, 0, 812, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 859,
	0, 0, 0, 815, 0, 834, 906, 0, 797, 268,
	809, 356, 231, 0, 910, 920, 856, 488, 924, 854,
	853, 900, 813, 916, 847, 324, 811, 293, 188, 205,
	0, 845, 366, 407, 413, 915, 830, 839, 229, 837,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	879, 898, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 1123, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 825, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 911,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 903, 942, 379,
	412, 219, 474, 434, 820, 824, 818, 885, 819, 874,
	875, 821, 933, 934, 935, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 907, 814, 0, 822, 823, 0,
	913, 922, 923, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 878, 187, 202, 327, 938, 401,
	261, 503, 482, 478, 799, 817, 236, 828, 836, 0,
	842, 850, 851, 863, 865, 866, 867, 868, 886, 887,
	889, 897, 899, 902, 904, 909, 919, 941, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	877, 883, 338, 254, 273, 284, 892, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 873, 901, 334, 451,
	452, 280, 352, 0, 0, 927, 912, 450, 0, 858,
	930, 827, 846, 940, 849, 852, 894, 806, 872, 370,
	843, 798, 831, 801, 838, 802, 829, 860, 244, 826,
	914, 876, 929, 325, 241, 808, 832, 384, 848, 193,
	896, 426, 228, 335, 332, 457, 255, 247, 243, 227,
	281, 342, 382, 444, 376, 936, 329, 882, 0, 435,
	355, 0, 0, 0, 862, 918, 870, 908, 857, 895,
	816, 881, 931, 844, 891, 932, 287, 226, 192, 367,
	436, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 310, 319, 318, 299, 300, 302, 304, 309,
	316, 322, 840, 888, 926, 841, 890, 239, 285, 246,
	238, 454, 937, 917, 805, 869, 925, 0, 0, 209,
	928, 864, 0, 893, 0, 943, 800, 884, 0, 803,
	807, 939, 921, 835, 249, 0, 0, 0, 0, 0,
	0, 0, 861, 871, 905, 855, 0, 0, 0, 0,
	0, 1785, 0, 833, 0, 880, 0, 0, 0, 812,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 859, 0, 0, 0, 815, 0, 834, 906,
	0, 797, 268, 809, 356, 231, 0, 910, 920, 856,
	488, 924, 854, 853, 900, 813, 916, 847, 324, 811,
	293, 188, 205, 0, 845, 366, 407, 413, 915, 830,
	839, 229, 837, 411, 380, 472, 213, 257, 404, 385,
	409, 392, 260, 879, 898, 410, 330, 459, 399, 469,
	489, 490, 237, 360, 479, 448, 485, 502, 206, 234,
	374, 441, 475, 432, 353, 455, 456, 292, 431, 266,
	191, 328, 495, 204, 419, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 349, 289,
	290, 198, 0, 403, 242, 264, 232, 369, 462, 463,
	230, 505, 208, 484, 201, 1123, 483, 362, 458, 466,
	350, 340, 200, 464, 348, 339, 295, 314, 315, 253,
	275, 397, 333, 398, 276, 358, 357, 359, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 825,
	252, 256, 263, 265, 271, 272, 279, 326, 373, 396,
	394, 400, 911, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 361, 278, 433, 294, 331,
	903, 942, 379, 412, 219, 474, 434, 820, 824, 818,
	885, 819, 874, 875, 821, 933, 934, 935, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 907, 814, 0,
	822, 823, 0, 913, 922, 923, 525, 341, 425, 471,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 878, 187, 202,
	327, 938, 401, 261, 503, 482, 478, 799, 817, 236,
	828, 836, 0, 842, 850, 851, 863, 865, 866, 867,
	868, 886, 887, 889, 897, 899, 902, 904, 909, 919,
	941, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 420, 270, 468,
	492, 0, 336, 877, 883, 338, 254, 273, 284, 892,
	481, 439, 207, 408, 262, 196, 225, 210, 233, 248,
	251, 288, 347, 354, 383, 387, 267, 245, 223, 405,
	220, 424, 445, 446, 447, 449, 351, 240, 386, 873,
	901, 334, 451, 452, 280, 352, 0, 0, 927, 912,
	450, 0, 858, 930, 827, 846, 940, 849, 852, 894,
	806, 872, 370, 843, 798, 831, 801, 838, 802, 829,
	860, 244, 826, 914, 876, 929, 325, 241, 808, 832,
	384, 848, 193, 896, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 936, 329,
	882, 0, 435, 355, 0, 0, 0, 862, 918, 870,
	908, 857, 895, 816, 881, 931, 844, 891, 932, 287,
	226, 192, 367, 436, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 840, 888, 926, 841, 890,
	239, 285, 246, 238, 454, 937, 917, 805, 869, 925,
	0, 0, 209, 928, 864, 0, 893, 0, 943, 800,
	884, 0, 803, 807, 939, 921, 835, 249, 0, 0,
	0, 0, 0, 0, 0, 861, 871, 905, 855, 0,
	0, 0, 0, 0, 0, 0, 833, 0, 880, 0,
	0, 0, 812, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 859, 0, 0, 0, 815,
	0, 834, 906, 0, 797, 268, 809, 356, 231, 0,
	910, 920, 856, 488, 924, 854, 853, 900, 813, 916,
	847, 324, 811, 293, 188, 205, 0, 845, 366, 407,
	413, 915, 830, 839, 229, 837, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 879, 898, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 1123, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 825, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 911, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 903, 942, 379, 412, 219, 474, 434,
	820, 824, 818, 885, 819, 874, 875, 821, 933, 934,
	935, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	907, 814, 0, 822, 823, 0, 913, 922, 923, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	878, 187, 202, 327, 938, 401, 261, 503, 482, 478,
	799, 817, 236, 828, 836, 0, 842, 850, 851, 863,
	865, 866, 867, 868, 886, 887, 889, 897, 899, 902,
	904, 909, 919, 941, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 877, 883, 338, 254,
	273, 284, 892, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 873, 901, 334, 451, 452, 280, 352, 0,
	0, 927, 912, 450, 0, 858, 930, 827, 846, 940,
	849, 852, 894, 806, 872, 370, 843, 798, 831, 801,
	838, 802, 829, 860, 244, 826, 914, 876, 929, 325,
	241, 808, 832, 384, 848, 193, 896, 426, 228, 335,
	332, 457, 255, 247, 243, 227, 281, 342, 382, 444,
	376, 936, 329, 882, 0, 435, 355, 0, 0, 0,
	862, 918, 870, 908, 857, 895, 816, 881, 931, 844,
	891, 932, 287, 226, 192, 367, 436, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 840, 888,
	926, 841, 890, 239, 285, 246, 238, 454, 937, 917,
	805, 869, 925, 0, 0, 209, 928, 864, 0, 893,
	0, 943, 800, 884, 0, 803, 807, 939, 921, 835,
	249, 0, 0, 0, 0, 0, 0, 0, 861, 871,
	905, 855, 0, 0, 0, 0, 0, 0, 0, 833,
	0, 880, 0, 0, 0, 812, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 859, 0,
	0, 0, 815, 0, 834, 906, 0, 797, 268, 809,
	356, 231, 0, 910, 920, 856, 488, 924, 854, 853,
	900, 813, 916, 847, 324, 811, 293, 188, 205, 0,
	845, 366, 407, 413, 915, 830, 839, 229, 837, 411,
	380, 472, 213, 257, 404, 385, 409, 392, 260, 879,
	898, 410, 330, 459, 399, 469, 489, 490, 237, 360,
	479, 448, 485, 502, 206, 234, 374, 441, 475, 432,
	353, 455, 456, 292, 431, 266, 191, 328, 495, 204,
	419, 221, 211, 197, 443, 467, 218, 423, 0, 0,
	504, 199, 465, 440, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 462, 463, 230, 505, 208, 484,
	201, 1123, 483, 362, 458, 466, 350, 340, 200, 464,
	348, 339, 295, 314, 315, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 476, 0, 195, 0, 437,
	477, 506, 214, 215, 216, 825, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 911, 453,
	470, 480, 487, 493, 494, 496, 497, 498, 499, 500,
	501, 361, 278, 433, 294, 331, 903, 942, 379, 412,
	219, 474, 434, 820, 824, 818, 885, 819, 874, 875,
	821, 933, 934, 935, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 907, 814, 0, 822, 823, 0, 913,
	922, 923, 525, 341, 425, 471, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 878, 187, 202, 327, 938, 401, 261,
	503, 482, 478, 799, 817, 236, 828, 836, 0, 842,
	850, 851, 863, 865, 866, 867, 868, 886, 887, 889,
	897, 899, 902, 904, 909, 919, 941, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	421, 422, 427, 428, 429, 430, 438, 442, 460, 461,
	473, 486, 491, 420, 270, 468, 492, 0, 336, 877,
	883, 338, 254, 273, 284, 892, 481, 439, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 424, 445, 446,
	447, 449, 351, 240, 386, 873, 901, 334, 451, 452,
	280, 352, 0, 0, 927, 912, 450, 0, 858, 930,
	827, 846, 940, 849, 852, 894, 806, 872, 370, 843,
	798, 831, 801, 838, 802, 829, 860, 244, 826, 914,
	876, 929, 325, 241, 808, 832, 384, 848, 193, 896,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 936, 329, 882, 0, 435, 355,
	0, 0, 0, 862, 918, 870, 908, 857, 895, 816,
	881, 931, 844, 891, 932, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 840, 888, 926, 841, 890, 239, 285, 246, 238,
	454, 937, 917, 805, 869, 925, 0, 0, 944, 928,
	864, 0, 893, 0, 943, 800, 884, 0, 803, 807,
	939, 921, 835, 249, 0, 0, 0, 0, 0, 0,
	0, 861, 871, 905, 855, 0, 0, 0, 0, 0,
	0, 0, 833, 0, 880, 0, 0, 0, 812, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 859, 0, 0, 0, 815, 0, 834, 906, 0,
	797, 268, 809, 356, 231, 0, 910, 920, 856, 488,
	924, 854, 853, 900, 813, 916, 847, 324, 811, 293,
	188, 205, 0, 845, 366, 407, 413, 915, 830, 839,
	229, 837, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 879, 898, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 810, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 825, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 911, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 796, 790, 789, 294, 331, 903,
	942, 379, 412, 219, 474, 434, 820, 824, 818, 885,
	819, 874, 875, 821, 933, 934, 935, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 907, 814, 0, 822,
	823, 0, 913, 922, 923, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 878, 187, 202, 327,
	938, 401, 261, 503, 482, 478, 799, 817, 236, 828,
	836, 0, 842, 850, 851, 863, 865, 866, 867, 868,
	886, 887, 889, 897, 899, 902, 904, 909, 919, 941,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 877, 883, 338, 254, 273, 284, 892, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 873, 901,
	334, 451, 452, 280, 352, 0, 0, 927, 912, 450,
	0, 858, 930, 827, 846, 940, 849, 852, 894, 806,
	872, 370, 843, 798, 831, 801, 838, 802, 829, 860,
	244, 826, 914, 876, 929, 325, 241, 808, 832, 384,
	848, 193, 896, 426, 228, 335, 332, 457, 255, 247,
	243, 227, 281, 342, 382, 444, 376, 936, 329, 882,
	0, 435, 355, 0, 0, 0, 862, 918, 870, 908,
	857, 895, 816, 881, 931, 844, 891, 932, 287, 226,
	192, 367, 436, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 840, 888, 926, 841, 890, 239,
	285, 246, 238, 454, 937, 917, 805, 869, 925, 0,
	0, 944, 928, 864, 0, 893, 0, 943, 800, 884,
	0, 803, 807, 939, 921, 835, 249, 0, 0, 0,
	0, 0, 0, 0, 861, 871, 905, 855, 0, 0,
	0, 0, 0, 0, 0, 833, 0, 880, 0, 0,
	0, 812, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 859, 0, 0, 0, 815, 0,
	834, 906, 0, 797, 268, 809, 356, 231, 0, 910,
	920, 856, 488, 924, 854, 853, 900, 813, 916, 847,
	324, 811, 293, 188, 205, 0, 845, 366, 407, 413,
	915, 830, 839, 229, 837, 411, 380, 472, 213, 257,
	404, 385, 409, 392, 260, 879, 898, 410, 330, 459,
	399, 469, 489, 490, 237, 360, 479, 448, 485, 502,
	206, 234, 374, 441, 475, 432, 353, 455, 456, 292,
	431, 266, 191, 328, 495, 204, 419, 221, 211, 197,
	443, 1338, 218, 423, 0, 0, 504, 199, 465, 440,
	349, 289, 290, 198, 0, 403, 242, 264, 232, 369,
	462, 463, 230, 505, 208, 484, 201, 810, 483, 362,
	458, 466, 350, 340, 200, 464, 348, 339, 295, 314,
	315, 253, 275, 397, 333, 398, 276, 358, 357, 359,
	194, 476, 0, 195, 0, 437, 477, 506, 214, 215,
	216, 825, 252, 256, 263, 265, 271, 272, 279, 326,
	373, 396, 394, 400, 911, 453, 470, 480, 487, 493,
	494, 496, 497, 498, 499, 500, 501, 796, 790, 789,
	294, 331, 903, 942, 379, 412, 219, 474, 434, 820,
	824, 818, 885, 819, 874, 875, 821, 933, 934, 935,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 907,
	814, 0, 822, 823, 0, 913, 922, 923, 525, 341,
	425, 471, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 878,
	187, 202, 327, 938, 401, 261, 503, 482, 478, 799,
	817, 236, 828, 836, 0, 842, 850, 851, 863, 865,
	866, 867, 868, 886, 887, 889, 897, 899, 902, 904,
	909, 919, 941, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 421, 422, 427, 428,
	429, 430, 438, 442, 460, 461, 473, 486, 491, 420,
	270, 468, 492, 0, 336, 877, 883, 338, 254, 273,
	284, 892, 481, 439, 207, 408, 262, 196, 225, 210,
	233, 248, 251, 288, 347, 354, 383, 387, 267, 245,
	223, 405, 220, 424, 445, 446, 447, 449, 351, 240,
	386, 873, 901, 334, 451, 452, 280, 352, 0, 0,
	927, 912, 450, 0, 858, 930, 827, 846, 940, 849,
	852, 894, 806, 872, 370, 843, 798, 831, 801, 838,
	802, 829, 860, 244, 826, 914, 876, 929, 325, 241,
	808, 832, 384, 848, 193, 896, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	936, 329, 882, 0, 435, 355, 0, 0, 0, 862,
	918, 870, 908, 857, 895, 816, 881, 931, 844, 891,
	932, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 840, 888, 926,
	841, 890, 239, 285, 246, 238, 454, 937, 917, 805,
	869, 925, 0, 0, 944, 928, 864, 0, 893, 0,
	943, 800, 884, 0, 803, 807, 939, 921, 835, 249,
	0, 0, 0, 0, 0, 0, 0, 861, 871, 905,
	855, 0, 0, 0, 0, 0, 0, 0, 833, 0,
	880, 0, 0, 0, 812, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 859, 0, 0,
	0, 815, 0, 834, 906, 0, 797, 268, 809, 356,
	231, 0, 910, 920, 856, 488, 924, 854, 853, 900,
	813, 916, 847, 324, 811, 293, 188, 205, 0, 845,
	366, 407, 413, 915, 830, 839, 229, 837, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 879, 898,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 787, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	810, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 825, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 911, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	796, 790, 789, 294, 331, 903, 942, 379, 412, 219,
	474, 434, 820, 824, 818, 885, 819, 874, 875, 821,
	933, 934, 935, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 907, 814, 0, 822, 823, 0, 913, 922,
	923, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 878, 187, 202, 327, 938, 401, 261, 503,
	482, 478, 799, 817, 236, 828, 836, 0, 842, 850,
	851, 863, 865, 866, 867, 868, 886, 887, 889, 897,
	899, 902, 904, 909, 919, 941, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 877, 883,
	338, 254, 273, 284, 892, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 873, 901, 334, 451, 452, 280,
	352, 0, 0, 0, 0, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	1730, 0, 606, 0, 0, 0, 244, 611, 0, 0,
	0, 325, 241, 0, 1731, 384, 0, 193, 0, 426,
	228, 335, 332, 457, 255, 247, 243, 227, 281, 342,
	382, 444, 376, 618, 329, 0, 0, 435, 355, 0,
	0, 0, 0, 0, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 367, 436, 259,
	0, 87, 0, 0, 184, 185, 186, 682, 689, 690,
	691, 692, 693, 683, 685, 0, 0, 217, 684, 224,
	629, 631, 630, 640, 641, 642, 643, 644, 645, 646,
	627, 687, 694, 695, 0, 239, 285, 246, 238, 454,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 589, 603, 0, 617, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 601, 776,
	0, 0, 0, 666, 0, 602, 0, 0, 610, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 356, 231, 0, 665, 0, 0, 488, 0,
	0, 663, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 366, 407, 413, 0, 0, 0, 229,
	0, 411, 380, 472, 213, 257, 404, 385, 409, 392,
	260, 0, 0, 410, 330, 459, 399, 469, 489, 490,
	237, 360, 479, 448, 485, 502, 206, 234, 374, 441,
	475, 432, 353, 455, 456, 292, 431, 266, 191, 328,
	495, 204, 419, 221, 211, 197, 443, 467, 218, 423,
	0, 0, 504, 199, 465, 440, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 462, 463, 230, 505,
	208, 484, 201, 0, 483, 362, 458, 466, 350, 340,
	200, 464, 348, 339, 295, 635, 636, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 476, 0, 195,
	0, 437, 477, 506, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	0, 453, 470, 480, 487, 493, 494, 496, 497, 498,
	499, 500, 501, 361, 278, 433, 294, 331, 0, 0,
	379, 412, 219, 474, 434, 672, 664, 622, 676, 624,
	673, 674, 619, 620, 623, 675, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 667, 609, 608, 0, 615,
	616, 0, 625, 626, 628, 632, 633, 634, 637, 638,
	639, 647, 649, 650, 648, 651, 652, 653, 656, 657,
	658, 659, 654, 655, 660, 607, 187, 202, 327, 0,
	401, 261, 503, 482, 478, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 421, 422, 427, 428, 429, 430, 438, 442,
	460, 461, 473, 486, 491, 420, 270, 468, 492, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 481, 439,
	207, 408, 262, 196, 225, 210, 233, 248, 251, 288,
	347, 354, 383, 387, 267, 245, 223, 405, 220, 424,
	445, 446, 447, 449, 351, 240, 386, 0, 352, 334,
	451, 452, 280, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	606, 0, 0, 0, 244, 611, 0, 0, 0, 325,
	241, 0, 0, 384, 0, 193, 0, 426, 228, 335,
	332, 457, 255, 247, 243, 227, 281, 342, 382, 444,
	376, 618, 329, 0, 0, 435, 355, 0, 0, 0,
	0, 0, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 367, 436, 259, 0, 87,
	0, 0, 184, 185, 186, 682, 689, 690, 691, 692,
	693, 683, 685, 0, 0, 217, 684, 224, 629, 631,
	630, 640, 641, 642, 643, 644, 645, 646, 627, 687,
	694, 695, 0, 239, 285, 246, 238, 454, 0, 0,
	1696, 1697, 1698, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 589, 603, 0, 617, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 601, 0, 0, 0,
	0, 666, 0, 602, 0, 0, 610, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	356, 231, 0, 665, 0, 0, 488, 0, 0, 663,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 366, 407, 413, 0, 0, 0, 229, 0, 411,
	380, 472, 213, 257, 404, 385, 409, 392, 260, 0,
	0, 410, 330, 459, 399, 469, 489, 490, 237, 360,
	479, 448, 485, 502, 206, 234, 374, 441, 475, 432,
	353, 455, 456, 292, 431, 266, 191, 328, 495, 204,
	419, 221, 211, 197, 443, 467, 218, 423, 0, 0,
	504, 199, 465, 440, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 462, 463, 230, 505, 208, 484,
	201, 0, 483, 362, 458, 466, 350, 340, 200, 464,
	348, 339, 295, 635, 636, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 476, 0, 195, 0, 437,
	477, 506, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 0, 453,
	470, 480, 487, 493, 494, 496, 497, 498, 499, 500,
	501, 361, 278, 433, 294, 331, 0, 0, 379, 412,
	219, 474, 434, 672, 664, 622, 676, 624, 673, 674,
	619, 620, 623, 675, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 667, 609, 608, 0, 615, 616, 0,
	625, 626, 628, 632, 633, 634, 637, 638, 639, 647,
	649, 650, 648, 651, 652, 653, 656, 657, 658, 659,
	654, 655, 660, 607, 187, 202, 327, 0, 401, 261,
	503, 482, 478, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	421, 422, 427, 428, 429, 430, 438, 442, 460, 461,
	473, 486, 491, 420, 270, 468, 492, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 481, 439, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 424, 445, 446,
	447, 449, 351, 240, 386, 0, 352, 334, 451, 452,
	280, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 606, 0,
	0, 0, 244, 611, 0, 0, 0, 325, 241, 0,
	0, 384, 0, 193, 0, 426, 228, 335, 332, 457,
	255, 247, 243, 227, 281, 342, 382, 444, 376, 618,
	329, 0, 0, 435, 355, 0, 0, 0, 0, 0,
	613, 614, 0, 0, 0, 0, 0, 0, 1812, 0,
	287, 226, 192, 367, 436, 259, 0, 87, 0, 0,
	184, 185, 186, 682, 689, 690, 691, 692, 693, 683,
	685, 0, 0, 217, 684, 224, 629, 631, 630, 640,
	641, 642, 643, 644, 645, 646, 627, 687, 694, 695,
	1813, 239, 285, 246, 238, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 589, 603, 0, 617, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 0, 0, 0, 0, 666,
	0, 602, 0, 0, 610, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 356, 231,
	0, 665, 0, 0, 488, 0, 0, 663, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 366,
	407, 413, 0, 0, 0, 229, 0, 411, 380, 472,
	213, 257, 404, 385, 409, 392, 260, 0, 0, 410,
	330, 459, 399, 469, 489, 490, 237, 360, 479, 448,
	485, 502, 206, 234, 374, 441, 475, 432, 353, 455,
	456, 292, 431, 266, 191, 328, 495, 204, 419, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 349, 289, 290, 198, 0, 403, 242, 264,
	232, 369, 462, 463, 230, 505, 208, 484, 201, 0,
	483, 362, 458, 466, 350, 340, 200, 464, 348, 339,
	295, 635, 636, 253, 275, 397, 333, 398, 276, 358,
	357, 359, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 373, 396, 394, 400, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 361,
	278, 433, 294, 331, 0, 0, 379, 412, 219, 474,
	434, 672, 664, 622, 676, 624, 673, 674, 619, 620,
	623, 675, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 667, 609, 608, 0, 615, 616, 0, 625, 626,
	628, 632, 633, 634, 637, 638, 639, 647, 649, 650,
	648, 651, 652, 653, 656, 657, 658, 659, 654, 655,
	660, 607, 187, 202, 327, 0, 401, 261, 503, 482,
	478, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 420, 270, 468, 492, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 481, 439, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 424, 445, 446, 447, 449,
	351, 240, 386, 0, 0, 334, 451, 452, 280, 352,
	0, 0, 0, 78, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 606, 0, 0, 0, 244, 611, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 618, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	87, 0, 0, 184, 185, 186, 682, 689, 690, 691,
	692, 693, 683, 685, 0, 0, 217, 684, 224, 629,
	631, 630, 640, 641, 642, 643, 644, 645, 646, 627,
	687, 694, 695, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 589, 603, 0, 617, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 601, 0, 0,
	0, 0, 666, 0, 602, 0, 0, 610, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 612,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 665, 0, 0, 488, 0, 0,
	663, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 635, 636, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 672, 664, 622, 676, 624, 673,
	674, 619, 620, 623, 675, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 667, 609, 608, 0, 615, 616,
	0, 625, 626, 628, 632, 633, 634, 637, 638, 639,
	647, 649, 650, 648, 651, 652, 653, 656, 657, 658,
	659, 654, 655, 660, 607, 187, 202, 327, 86, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 606,
	0, 0, 0, 244, 611, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	618, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 87, 0,
	0, 184, 185, 186, 682, 689, 690, 691, 692, 693,
	683, 685, 0, 0, 217, 684, 224, 629, 631, 630,
	640, 641, 642, 643, 644, 645, 646, 627, 687, 694,
	695, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 589, 603, 0, 617, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 0, 0, 0, 0,
	666, 0, 602, 0, 0, 610, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 665, 0, 0, 488, 0, 0, 663, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 2845, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 635, 636, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 672, 664, 622, 676, 624, 673, 674, 619,
	620, 623, 675, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 667, 609, 608, 0, 615, 616, 0, 625,
	626, 628, 632, 633, 634, 637, 638, 639, 647, 649,
	650, 648, 651, 652, 653, 656, 657, 658, 659, 654,
	655, 660, 607, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 606, 0, 0,
	0, 244, 611, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 618, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 613,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 87, 0, 1305, 184,
	185, 186, 682, 689, 690, 691, 692, 693, 683, 685,
	0, 0, 217, 684, 224, 629, 631, 630, 640, 641,
	642, 643, 644, 645, 646, 627, 687, 694, 695, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	589, 603, 0, 617, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 601, 0, 0, 0, 0, 666, 0,
	602, 0, 0, 610, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	665, 0, 0, 488, 0, 0, 663, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	635, 636, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	672, 664, 622, 676, 624, 673, 674, 619, 620, 623,
	675, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	667, 609, 608, 0, 615, 616, 0, 625, 626, 628,
	632, 633, 634, 637, 638, 639, 647, 649, 650, 648,
	651, 652, 653, 656, 657, 658, 659, 654, 655, 660,
	607, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 606, 0, 0, 0, 244,
	611, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 618, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 87, 0, 0, 184, 185, 186,
	682, 689, 690, 691, 692, 693, 683, 685, 0, 0,
	217, 684, 224, 629, 631, 630, 640, 641, 642, 643,
	644, 645, 646, 627, 687, 694, 695, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 589, 603,
	0, 617, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 601, 776, 0, 0, 0, 666, 0, 602, 0,
	0, 610, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 665, 0,
	0, 488, 0, 0, 663, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 635, 636,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 672, 664,
	622, 676, 624, 673, 674, 619, 620, 623, 675, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 667, 609,
	608, 0, 615, 616, 0, 625, 626, 628, 632, 633,
	634, 637, 638, 639, 647, 649, 650, 648, 651, 652,
	653, 656, 657, 658, 659, 654, 655, 660, 607, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 606, 0, 0, 0, 244, 611, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 618, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 87, 0, 0, 184, 185, 186, 682, 689,
	690, 691, 692, 693, 683, 685, 0, 0, 217, 684,
	224, 629, 631, 630, 640, 641, 642, 643, 644, 645,
	646, 627, 687, 694, 695, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 589, 603, 0, 617,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 601,
	0, 0, 0, 0, 666, 0, 602, 0, 0, 610,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 665, 0, 0, 488,
	0, 0, 663, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 635, 636, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 672, 664, 622, 676,
	624, 673, 674, 619, 620, 623, 675, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 667, 609, 608, 0,
	615, 616, 0, 625, 626, 628, 632, 633, 634, 637,
	638, 639, 647, 649, 650, 648, 651, 652, 653, 656,
	657, 658, 659, 654, 655, 660, 607, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 606, 0, 0, 0, 244, 611, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 618, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	87, 0, 0, 184, 185, 186, 682, 689, 690, 691,
	692, 693, 683, 685, 0, 0, 217, 684, 224, 629,
	631, 630, 640, 641, 642, 643, 644, 645, 646, 627,
	687, 694, 695, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 603, 0, 617, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 601, 0, 0,
	0, 0, 666, 0, 602, 0, 0, 610, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 612,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 665, 0, 0, 488, 0, 0,
	663, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 635, 636, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 672, 664, 622, 676, 624, 673,
	674, 619, 620, 623, 675, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 667, 609, 608, 0, 615, 616,
	0, 625, 626, 628, 632, 633, 634, 637, 638, 639,
	647, 649, 650, 648, 651, 652, 653, 656, 657, 658,
	659, 654, 655, 660, 607, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 689, 690, 0, 0, 0,
	0, 1641, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 991, 488, 0, 0, 0, 0, 0, 988,
	989, 324, 952, 293, 188, 205, 982, 986, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 0, 334, 451, 452, 280, 352, 0,
	0, 0, 78, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 384, 0, 193, 0, 426, 228, 335,
	332, 457, 255, 247, 243, 227, 281, 342, 382, 444,
	376, 0, 329, 0, 0, 435, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 367, 436, 259, 0, 87,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 454, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	356, 231, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 366, 407, 413, 0, 0, 0, 229, 0, 411,
	380, 472, 213, 257, 404, 385, 409, 392, 260, 0,
	0, 410, 330, 459, 399, 469, 489, 490, 237, 360,
	479, 448, 485, 502, 206, 234, 374, 441, 475, 432,
	353, 455, 456, 292, 431, 266, 191, 328, 495, 204,
	419, 221, 211, 197, 443, 467, 218, 423, 0, 0,
	504, 199, 465, 440, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 462, 463, 230, 505, 208, 484,
	201, 0, 483, 362, 458, 466, 350, 340, 200, 464,
	348, 339, 295, 314, 315, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 476, 0, 195, 0, 437,
	477, 506, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 0, 453,
	470, 480, 487, 493, 494, 496, 497, 498, 499, 500,
	501, 361, 278, 433, 294, 331, 0, 0, 379, 412,
	219, 474, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 341, 425, 471, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 86, 401, 261,
	503, 482, 478, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 1800, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	421, 422, 427, 428, 429, 430, 438, 442, 460, 461,
	473, 486, 491, 420, 270, 468, 492, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 481, 439, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 424, 445, 446,
	447, 449, 351, 240, 386, 0, 1324, 334, 451, 452,
	280, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 0, 1326, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 325, 241, 0,
	0, 384, 0, 193, 0, 426, 228, 335, 332, 457,
	255, 247, 243, 227, 281, 342, 382, 444, 376, 0,
	329, 0, 0, 435, 355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 367, 436, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 1157, 0, 1158,
	1159, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 356, 231,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 293, 188, 205, 0, 0, 366,
	407, 413, 0, 0, 0, 229, 0, 411, 380, 472,
	213, 257, 404, 385, 409, 392, 260, 0, 0, 410,
	330, 459, 399, 469, 489, 490, 237, 360, 479, 448,
	485, 502, 206, 234, 374, 441, 475, 432, 353, 455,
	456, 292, 431, 266, 191, 328, 495, 204, 419, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 349, 289, 290, 198, 0, 403, 242, 264,
	232, 369, 462, 463, 230, 505, 208, 484, 201, 0,
	483, 362, 458, 466, 350, 340, 200, 464, 348, 339,
	295, 314, 315, 253, 275, 397, 333, 398, 276, 358,
	357, 359, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 326, 373, 396, 394, 400, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 361,
	278, 433, 294, 331, 0, 0, 379, 412, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 341, 425, 471, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 503, 482,
	478, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 420, 270, 468, 492, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 481, 439, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 424, 445, 446, 447, 449,
	351, 240, 386, 0, 352, 334, 451, 452, 280, 450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 384,
	0, 193, 0, 426, 228, 335, 332, 457, 255, 247,
	243, 227, 281, 342, 382, 444, 376, 0, 329, 0,
	0, 435, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 367, 436, 259, 0, 0, 0, 0, 184, 185,
	186, 1267, 1270, 0, 0, 0, 0, 1266, 1269, 0,
	0, 217, 1265, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 454, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 356, 231, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 366, 407, 413,
	0, 0, 0, 229, 0, 411, 380, 472, 213, 257,
	404, 385, 409, 392, 260, 0, 0, 410, 330, 459,
	399, 469, 489, 490, 237, 360, 479, 448, 485, 502,
	206, 234, 374, 441, 475, 432, 353, 455, 456, 292,
	431, 266, 191, 328, 495, 204, 419, 221, 211, 197,
	443, 467, 218, 423, 0, 0, 504, 199, 465, 440,
	349, 289, 290, 198, 0, 403, 242, 264, 232, 369,
	462, 463, 230, 505, 208, 484, 201, 0, 483, 362,
	458, 466, 350, 340, 200, 464, 348, 339, 295, 314,
	315, 253, 275, 397, 333, 398, 276, 358, 357, 359,
	194, 476, 0, 195, 0, 437, 477, 506, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	373, 396, 394, 400, 0, 453, 470, 480, 487, 493,
	494, 496, 497, 498, 499, 500, 501, 361, 278, 433,
	294, 331, 0, 0, 379, 412, 219, 474, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 341,
	425, 471, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 401, 261, 503, 482, 478, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 421, 422, 427, 428,
	429, 430, 438, 442, 460, 461, 473, 486, 491, 420,
	270, 468, 492, 0, 336, 0, 0, 338, 254, 273,
	284, 0, 481, 439, 207, 408, 262, 196, 225, 210,
	233, 248, 251, 288, 347, 354, 383, 387, 267, 245,
	223, 405, 220, 424, 445, 446, 447, 449, 351, 240,
	386, 0, 0, 334, 451, 452, 280, 352, 0, 0,
	0, 78, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 87, 0,
	1305, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 86, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 1800,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 1752, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 1750, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 952, 293,
	188, 205, 950, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	1752, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	1305, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 2775,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 2062, 0, 0, 0, 2063, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 1349, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1348,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 488, 0, 0,
	0, 2859, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 2775, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 1592, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 1470, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 1468, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	1466, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 1464, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 1462, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 1458, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 1456, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	1454, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	1431, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 1333, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1134, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 758, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 581,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 580, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 352,
	334, 451, 452, 280, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 426, 228,
	335, 332, 457, 255, 247, 243, 227, 281, 342, 382,
	444, 376, 0, 329, 0, 0, 435, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 436, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 528, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 472, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 459, 399, 469, 489, 490, 237,
	360, 479, 448, 485, 502, 206, 234, 374, 441, 475,
	432, 353, 455, 456, 292, 431, 266, 191, 328, 495,
	204, 419, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 462, 463, 230, 505, 208,
	484, 201, 0, 483, 362, 458, 466, 350, 340, 200,
	464, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 361, 278, 433, 294, 331, 0, 0, 379,
	412, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 341, 425, 471, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 503, 482, 478, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 420, 270, 468, 492, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 481, 439, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 424, 445,
	446, 447, 449, 351, 240, 386, 0, 352, 334, 451,
	452, 280, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 426, 228, 335, 332,
	457, 255, 247, 243, 227, 281, 342, 382, 444, 376,
	0, 329, 0, 0, 435, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 436, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	472, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 459, 399, 469, 489, 490, 237, 360, 479,
	448, 485, 502, 206, 234, 374, 441, 475, 432, 353,
	455, 456, 292, 431, 266, 191, 328, 495, 204, 419,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 462, 463, 230, 505, 208, 484, 201,
	0, 483, 362, 458, 466, 350, 340, 200, 464, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	361, 278, 433, 294, 331, 0, 0, 379, 412, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 341, 425, 471, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 0, 401, 261, 503,
	482, 478, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 2864, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 420, 270, 468, 492, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 481, 439, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 424, 445, 446, 447,
	449, 351, 240, 386, 0, 352, 334, 451, 452, 280,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 426, 228, 335, 332, 457, 255,
	247, 243, 227, 281, 342, 382, 444, 376, 0, 329,
	0, 0, 435, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 436, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 472, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	459, 399, 469, 489, 490, 237, 360, 479, 448, 485,
	502, 206, 234, 374, 441, 475, 432, 353, 455, 456,
	292, 431, 266, 191, 328, 495, 204, 419, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 462, 463, 230, 505, 208, 484, 201, 0, 483,
	362, 458, 466, 350, 340, 200, 464, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 361, 278,
	433, 294, 331, 0, 0, 379, 412, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	341, 425, 471, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	0, 187, 202, 327, 0, 401, 261, 503, 482, 478,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	420, 270, 468, 492, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 481, 439, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 424, 445, 446, 447, 449, 351,
	240, 386, 0, 352, 334, 451, 452, 280, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 426, 228, 335, 332, 457, 255, 247, 243,
	227, 281, 342, 382, 444, 376, 0, 329, 0, 0,
	435, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 436, 259, 0, 0, 0, 0, 184, 2514, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 472, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 459, 399,
	469, 489, 490, 237, 360, 479, 448, 485, 502, 206,
	234, 374, 441, 475, 432, 353, 455, 456, 292, 431,
	266, 191, 328, 495, 204, 419, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 462,
	463, 230, 505, 208, 484, 201, 0, 483, 362, 458,
	466, 350, 340, 200, 464, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 361, 278, 433, 294,
	331, 0, 0, 379, 412, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 341, 425,
	471, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 503, 482, 478, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 420, 270,
	468, 492, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 481, 439, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 424, 445, 446, 447, 449, 351, 240, 386,
	0, 352, 334, 451, 452, 280, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	426, 228, 335, 332, 457, 255, 247, 243, 227, 281,
	342, 382, 444, 376, 0, 329, 0, 0, 435, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 436,
	259, 0, 0, 0, 0, 184, 2058, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 472, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 459, 399, 469, 489,
	490, 237, 360, 479, 448, 485, 502, 206, 234, 374,
	441, 475, 432, 353, 455, 456, 292, 431, 266, 191,
	328, 495, 204, 419, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 462, 463, 230,
	505, 208, 484, 201, 0, 483, 362, 458, 466, 350,
	340, 200, 464, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 361, 278, 433, 294, 331, 0,
	0, 379, 412, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 341, 425, 471, 296,
	308, 311, 301, 320, 0, 321, 297, 298, 303, 305,
	306, 307, 312, 313, 317, 323, 0, 187, 202, 327,
	0, 401, 261, 503, 482, 478, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 420, 270, 468, 492,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 481,
	439, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	424, 445, 446, 447, 449, 351, 240, 386, 0, 0,
	334, 451, 452, 280,
}

var yyPact = [...]int{
	5093, -1000, -412, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1885, 1949, -1000, -1000,
	-1000, -1000, 2073, -1000, 671, 1588, -1000, 1884, 2851, -1000,
	39161, 429, -1000, 37985, 426, 501, 39161, -1000, 134, -1000,
	122, 39161, 137, 37397, -1000, -1000, -323, 16807, 1793, 1,
	-2, 39161, -1000, -1000, -1000, -1000, 2034, 1548, -1000, 265,
	-1000, -1000, -1000, -1000, -1000, -1000, 36809, -1000, -1000, -1000,
	1901, 1871, 2057, 563, 1856, -1000, 1954, 1548, -1000, 16807,
	1990, 1936, 16219, -1000, 16219, 346, -1000, -1000, 12093, -1000,
	-1000, 22697, 39161, 39161, 231, -1000, 1884, -1000, -1000, 309,
	-1000, 247, 1454, -1000, 1447, -1000, 423, 467, 267, 387,
	385, 264, 262, 260, 258, 256, 255, 253, 249, 292,
	-1000, 593, 593, -207, -208, 402, 340, 340, 340, 372,
	1839, 1836, -1000, 584, -1000, 593, 593, 308, 593, 593,
	593, 593, 216, 215, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 272,
	1884, 206, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 39161, 112, 39161, -1000,
	490, 39161, 739, 739, 40, 739, 739, 739, 739, 139,
	522, -8, -1000, 133, 199, 100, 208, 702, 204, -1000,
	-1000, 195, 702, 1083, 574, 108, -1000, 739, 739, -1000,
	9721, 131, 9721, 9721, -1000, 1857, -1000, -1000, -1000, -1000,
	1094, -1000, 359, -1000, -1000, -1000, -1000, 39161, 36221, 295,
	621, -1000, -1000, -1000, 36, -1000, -1000, 1194, 827, 16807,
	909, -1000, 1549, 530, -1000, -1000, -1000, -1000, -1000, 458,
	17395, 17395, 17395, 17395, -1000, -1000, 1478, 1478, 1478, 1478,
	17395, 1478, 17395, 1478, 1478, 1478, 1478, 16807, 1478, 1478,
	1478, -1000, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 485, 1478, 1478, 1478, 1478, 1478, -1000, -1000,
	-1000, -1000, 1478, 1478, 1478, 1478, 1478, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 20340, -1000, 14455, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39161, -1000,
	1478, 158, 39161, 39161, 254, 1954, 1548, -1000, 2034, 1978,
	265, -1000, 2454, 1253, 1605, 1031, 1548, 1395, 39161, -1000,
	1492, -1000, -1000, -1000, 1719, 1028, 1082, -1000, -1000, -1000,
	-1000, 1191, 16807, -1000, -1000, 2045, -1000, 19752, 480, 810,
	2032, 35633, -1000, 346, 346, 1430, 11500, -36, -1000, -1000,
	-1000, 620, 25637, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1857, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1479, 39161, -1000, -1000, 3690,
	1062, -1000, 1586, -1000, 1451, -1000, 1550, 1594, 425, 1062,
	410, 408, 399, -1000, -102, -1000, -1000, -1000, -1000, -1000,
	593, 593, -1000, 270, 1988, 2851, 3735, -1000, -1000, -1000,
	35045, 1583, 1062, -1000, 1581, -1000, 712, 455, 494, 494,
	1062, -1000, -1000, 39161, 1062, 696, 694, 39161, 39161, -1000,
	34457, -1000, 33869, 33281, 970, 39161, 32693, 32105, 31517, 30929,
	30341, -1000, 1760, -1000, 1718, -1000, -1000, -1000, 39161, 39161,
	39161, 307, -1000, -1000, 39161, 1062, -1000, -1000, 959, 957,
	593, 593, 956, 1080, 1079, 1077, 593, 593, 950, 1075,
	26813, 207, 943, 938, 929, 911, 1070, 167, 900, 888,
	908, 39161, 1579, 39161, -1000, 185, 626, 345, 619, 1884,
	1792, 1424, 355, 418, 1062, 347, 347, 39161, -1000, 10314,
	-1000, -1000, 1068, 16807, -1000, 704, 702, 702, -1000, -1000,
	-1000, -1000, -1000, -1000, 739, 39161, 704, -1000, -1000, -1000,
	702, 739, 39161, 739, 739, 739, 739, 702, 702, 702,
	739, 39161, 39161, 39161, 39161, 39161, 39161, 39161, 39161, 39161,
	9721, 574, 739, -327, -1000, 1067, -1000, 1668, -1000, -1000,
	-1000, -1000, -1000, -1000, 9721, 9721, -1000, -1000, -1000, -1000,
	128, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-103, 1419, 29753, -1000, -328, -330, -331, -340, -1000, -1000,
	-1000, -343, -345, -1000, -1000, -1000, 16807, 16807, 16807, 16807,
	-230, -1000, 725, 17395, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 841, 595, 17395, 17395, 17395, 17395, 17395, 17395, 17395,
	17395, 17395, 17395, 17395, 17395, 17395, 17395, 17395, 840, 4286,
	4286, 530, 530, 530, 530, -1000, 16219, 16807, 16807, 530,
	-1000, 1062, 29165, 16219, 16219, 16807, 1845, 643, 827, 39161,
	-1000, 1031, -1000, -1000, -1000, 1030, -1000, 39161, 39161, 124,
	16807, 16807, 16807, 16807, 16807, 16807, 13274, 16807, 16807, 16807,
	16807, 16807, 16807, 16807, 16807, 16807, 16807, 16807, 16807, 16807,
	16807, 16807, 16807, 16807, 16807, 16807, 16807, 16807, 16807, 16807,
	16807, 16807, 16807, 12686, 10314, 16219, 16219, 16219, 16219, 16219,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 478, 1366, 1246, 1365, -1000, 1411, -1000, -170,
	22109, 16807, 1052, 2029, 1617, 39161, -1000, -1000, -1000, 1954,
	-1000, 1954, 1366, 2000, 1724, 16219, -1000, -1000, 2000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1161, -1000, 39161,
	1395, 1933, 39161, 1717, 1041, 299, -1000, 16807, 16807, 1387,
	-1000, 1018, 39161, -1000, -230, -1000, 28577, -1000, -1000, 9128,
	-1000, 39161, 241, 39161, -1000, 21521, 27989, 10907, -36, -1000,
	10907, 1293, -1000, -30, -47, 13862, 511, -1000, -1000, -1000,
	402, 18571, 1148, 511, 63, -1000, -1000, -1000, 1550, -1000,
	1550, 1550, 1550, 1550, 299, 299, 299, 299, -1000, -1000,
	-1000, -1000, -1000, 1577, 1572, -1000, 1550, 1550, 1550, 1550,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1571, 1571, 1571,
	1554, 1554, 334, -1000, 16807, 227, 39161, 1893, 906, 185,
	348, 1610, 1062, 1062, 1062, 348, -1000, 1380, 1337, -1000,
	-404, 1381, -1000, -1000, 1987, -1000, -1000, 575, 753, 751,
	601, 39161, 164, 240, -1000, 319, -1000, 39161, 1062, 678,
	494, 1062, -1000, 1062, -1000, -1000, -1000, -1000, -1000, 1062,
	1368, -1000, 1522, 792, 743, 765, 727, 1368, -1000, -1000,
	-144, 1368, -1000, 1368, -1000, 1368, -1000, 1368, -1000, 1368,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 638, 39161,
	164, 840, -1000, 353, -1000, -1000, 840, 840, -1000, -1000,
	-1000, -1000, 1038, 1029, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -393, 39161, -1000, 180, 618, 222, 251, 235, 39161,
	147, 1940, 173, 214, 39161, 39161, 347, 1674, 39161, 1909,
	39161, -1000, -1000, -1000, -1000, -1000, 827, 39161, -1000, -1000,
	739, 739, -1000, -1000, 39161, 739, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 739, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	39161, -1000, -1000, -1000, -1000, 39161, -1000, -1000, -1000, -1000,
	-1000, 53, -39, 278, -1000, -1000, -1000, -1000, -1000, 1942,
	-1000, 827, 685, 654, -1000, 1478, -1000, -1000, 801, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 841, 17395, 17395, 17395,
	1683, 384, 1787, 1129, 1457, 852, 852, 771, 771, 541,
	541, 541, 541, 541, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1027, -1000, 1417, -1000, 1169, 952, 1031, -1000,
	1417, 1417, 1183, 16219, -1000, -1000, 629, -1000, 16807, 1031,
	-1000, -1000, 1031, 1031, 1357, 1355, 2025, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1091, 1296,
	1296, 1296, 1296, 1296, 16807, 1174, -1000, -1000, -1000, 2247,
	2235, 1031, 1194, 1031, 1316, -1000, 2218, 1296, 2202, 2191,
	2187, 1229, 2176, 2160, 2144, 1296, 1296, 1296, 1026, 2137,
	2018, 1961, 1913, 1907, 1876, 1730, 1687, 1650, 1296, 1031,
	16219, 16219, 1295, 1478, 465, -1000, 1417, 1031, 1031, 1417,
	1417, 10314, 1031, -1000, 39161, -1000, -316, -1000, -64, 528,
	1478, -1000, 26813, 1031, -1000, 3265, -1000, 40337, -1000, -1000,
	-1000, -1000, -1000, 25049, 1561, 2000, -1000, -1000, 1478, 1442,
	-1000, -1000, 299, 52, 24461, -1000, -1000, 827, 827, 16807,
	-1000, -1000, -1000, -1000, -1000, -1000, 463, 2002, 294, 1478,
	-1000, 1392, 2371, -1000, -1000, -1000, 1915, 19164, -1000, 1478,
	1478, 39161, 1520, 1262, -1000, 462, -1000, 1293, -36, 9,
	-1000, -1000, -1000, -1000, 827, -1000, 1286, 248, 328, -1000,
	329, -1000, -1000, -1000, -1000, 1817, 49, -1000, -1000, -1000,
	299, 299, -1000, -1000, -1000, -1000, -1000, -1000, 1022, 1022,
	-1000, -1000, -1000, -1000, -1000, 903, -1000, -1000, -1000, 902,
	-1000, -1000, 1514, 1653, 227, -1000, -1000, 593, 1009, 1825,
	39161, -1000, -1000, 1145, 180, 39161, 652, 1671, -1000, 1610,
	1610, 1610, 39161, -1000, -1000, -1000, -1000, -395, 51, 297,
	-1000, -1000, -1000, 2912, 39161, 1438, -1000, 161, -1000, 1133,
	-1000, 39161, -1000, 1434, 1563, 1062, 1062, -1000, -1000, -1000,
	39161, 1478, -1000, -1000, -1000, -1000, 415, 1881, 1879, 164,
	161, 511, 1062, -1000, -1000, -1000, -1000, -1000, -396, 1421,
	397, 168, 246, 39161, 39161, 39161, 39161, 39161, 443, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 209, 352, -1000,
	39161, 39161, 486, -1000, -1000, -1000, 702, -1000, -1000, 702,
	-1000, -1000, -1000, -1000, -1000, 1861, 39161, -52, -366, -1000,
	-360, 16807, -1000, -1000, -1000, -1000, 1646, 383, 1787, 17395,
	17395, 16219, -136, 1343, 1343, 840, -1000, -1000, -1000, 16807,
	16807, 1344, 627, -1000, 16807, 815, -1000, -1000, -1000, 16807,
	16807, 16807, 1031, 252, -1000, -1000, -1000, -1000, -1000, 2013,
	-1000, 16807, 16807, 16807, -1000, -1000, 16807, 16807, -1000, 16807,
	16807, 17983, 1031, 17983, 16807, 16807, 17983, -1000, -1000, -1000,
	-1000, 17983, 16807, 16807, 16807, 16807, 16807, 16807, 16807, 16807,
	16807, -1000, -1000, 1417, 1417, 16219, 10314, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 528, -1000, 494,
	494, 494, 39161, -1000, -1000, -1000, -1000, -1000, -1000, 1245,
	1959, -1000, 1740, 1739, 2011, 2002, -1000, 21521, 2000, -1000,
	-1000, 39161, -311, -1000, 1781, 1834, -1000, -1000, -1000, -1000,
	8535, 1954, 16807, 1670, 39161, 1478, -1000, 20933, 39161, 39161,
	21521, 21521, 21521, 21521, 21521, -1000, 1700, 1696, -1000, 1689,
	1688, 1810, 39161, -1000, 1403, 1031, 1978, 19164, 265, 16807,
	23285, 1445, 21521, -1000, -1000, 21521, 39161, 7942, -1000, -1000,
	-59, -65, -1000, -1000, -1000, -1000, 402, -1000, -1000, 1624,
	1914, 1789, -1000, -1000, -1000, -1000, 1399, -1000, 1389, 1233,
	1374, 129, -1000, 1566, 1855, 593, 593, -1000, 899, -1000,
	1062, -1000, -1000, 374, -1000, 1908, 39161, 1667, 1661, 1659,
	-1000, -403, 890, 1560, 1499, 16807, 1557, 1986, 1215, 39161,
	-1000, -1000, 39161, -1000, 261, -1000, 227, 39161, -1000, -1000,
	-1000, 240, 39161, -1000, 6346, 161, -1000, -1000, -1000, -1000,
	-1000, -1000, 39161, 175, -1000, 1555, 1033, -1000, -1000, 1598,
	-1000, -1000, -1000, -1000, 151, 221, -1000, 39161, 483, 1653,
	39161, -1000, -1000, -1000, 739, 739, -1000, -1000, 1851, -1000,
	1062, 1296, 17395, 17395, -1000, 530, -1000, 1478, 1031, 1550,
	1550, -1000, 1550, 1554, -1000, 1550, 115, 1550, 110, 1550,
	-1000, -1000, 1031, 1031, 962, 905, -110, -1000, 827, 16807,
	1603, 1584, 1296, -1000, 1547, 1541, 16807, 1296, 1296, 1296,
	-1000, 827, 1229, 1558, 1268, -1000, -1000, -1000, -1000, 1222,
	1296, 1408, -309, 1031, 1372, 1372, 1372, 1372, 1372, 1365,
	1365, 1365, 1365, -1000, -1000, 1031, -1000, -1000, 1916, 1916,
	1916, 1330, 39749, 39161, -1000, -1000, -1000, -1000, 2002, 1999,
	1219, -1000, -1000, 52, 369, -1000, 1848, 1834, -1000, 1984,
	1774, 1981, -1000, -1000, -1000, 827, -1000, 1886, 1494, -1000,
	614, 1160, -1000, -1000, 15631, 1349, 1729, 456, 1330, 1284,
	2371, 1647, 1651, 1786, -1000, -1000, -1000, -1000, 1695, -1000,
	1686, -1000, -1000, 1492, -1000, -1000, 1246, 1031, 1376, 241,
	21521, 1249, 1249, -1000, 452, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 793, 5384, 2054, -1000, 1006, -1000, 1257, -1000,
	675, 670, -1000, 39161, 1526, -1000, 299, 1002, 299, 886,
	-1000, 874, -1000, -1000, -245, -1000, -1000, 1711, 1698, -1000,
	-1000, 39161, -1000, -1000, 39161, 39161, 39161, 1518, 1976, -1000,
	16807, 1507, 613, 1467, 39161, 39161, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 339, 593, -376, 213,
	212, 593, 593, 593, -1000, -1000, 1324, 1282, -1000, -205,
	-1000, 16807, -1000, -1000, -1000, 940, 940, -1000, 1492, -1000,
	-1000, -1000, 1128, -1000, -1000, -147, 39161, 39161, 39161, 39161,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	530, 17395, -1000, -1000, 299, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 16807, -1000, 16807, -1000, 1954, 1000,
	827, 16807, 16807, -1000, 873, 864, 1296, -1000, -1000, -1000,
	1031, 17983, -1000, 17983, -1000, 16807, 205, 1343, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1478,
	1749, 1478, 1478, 23285, -1000, -1000, 1999, 1980, 1975, 1750,
	1768, 1768, 1848, -1000, 1971, 1970, -1000, 999, 1967, 992,
	664, -1000, 39161, 16807, 1478, -1000, 341, 39161, 1478, 39161,
	-1000, 1962, -1000, -1000, 16807, 1506, -1000, 16807, -1000, -1000,
	-1000, -1000, -1000, -1000, 4286, 2002, 1249, -1000, -1000, 547,
	-1000, 16807, -1000, -1000, -1000, 3961, -1000, -1000, -1000, -1000,
	-1000, 1497, 16807, -1000, -1000, -1000, 1126, 1124, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1492, -1000, -1000, -1000,
	-1000, 240, -401, 1361, 39161, 863, -1000, 1273, 1215, 226,
	1478, 991, 593, 593, 593, 850, 849, 26813, 268, -1000,
	240, -1000, -210, -211, 1296, -1000, -1000, 1912, -1000, -1000,
	10314, -1000, -1000, 1486, 1602, -1000, 229, -1000, 1296, 1296,
	1031, -1000, 1296, 1296, 1112, 1109, -1000, -1000, 1268, -1000,
	941, -1000, 205, 1031, 1644, -1000, -1000, 4286, -1000, 23873,
	-1000, 1960, 1956, 27401, 27401, 528, 1980, -1000, 16807, 16807,
	1764, 831, -1000, -1000, -1000, -1000, 988, 985, -1000, 982,
	-1000, 2050, -1000, 827, -1000, 1478, -1000, 450, 1160, -1000,
	1954, 827, 39161, 827, 23, 1962, -1000, 1296, -1000, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478, 1478,
	1478, 39161, 1271, -1000, -1000, 1911, 1230, 50, -1000, 1176,
	-1000, -1000, 414, -1000, 16807, -1000, 26813, 980, 977, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 265, 1197, -1000,
	590, 39161, 39161, 1031, 250, -150, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 16807, -1000, 1031, 1642, -1000,
	-257, -1000, 1155, -1000, -1000, -1000, -1000, -1000, 1155, 1155,
	-1000, -1000, 827, 1194, -1000, 830, -1000, -1000, -1000, -1000,
	-1000, 39161, 1160, 39161, -1000, 1144, 1031, 1478, 1954, -1000,
	1138, -1000, 265, -1000, 1362, 1499, -1000, -1000, -1000, 15043,
	-1000, -1000, -1000, -1000, -146, 10314, 7349, 1130, -1000, -1000,
	1709, -141, -200, 1229, -1000, -347, -1000, -1000, 26225, -1000,
	-1000, -1000, -1000, -1000, 1153, -1000, -1000, 23285, 38573, -1000,
	1627, 582, -146, 16807, 1258, 1031, -1000, -43, -1000, -1000,
	-1000, -1000, -1000, 1598, -1000, 1707, -1000, 1031, -1000, -1000,
	-1000, 1106, -1000, 2846, -276, 1625, 1621, 2043, -1000, -1000,
	-1000, 777, 975, -1000, -1000, -1000, -1000, 1187, 39161, -1000,
	332, -1000, -1000, -147, -148, -1000, -1000, 38573, -268, 511,
	4286, -1000, -1000, 2048, -1000, 2044, 552, 552, -1000, -1000,
	-409, 1098, 189, -1000, -157, -1000, -1000, 1905, 23, -1000,
	-1000, -1000, 315, 848, -1000, -1000, 829, -409, -1000, -203,
	-279, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4286,
	184, 184, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2522, 2516, 24, 3, 2515, 2513, 2511, 37, 101,
	167, 40, 199, 91, 2505, 2504, 2503, 2502, 2501, 2500,
	2499, 209, 203, 197, 2498, 2497, 2495, 2494, 2493, 2490,
	2488, 2483, 2479, 2475, 201, 153, 166, 2473, 2472, 2471,
	108, 169, 81, 84, 178, 2470, 2469, 76, 2468, 2467,
	2460, 177, 174, 712, 2457, 176, 119, 34, 2455, 2452,
	2451, 2446, 2445, 2442, 2435, 2433, 2431, 2430, 2426, 2422,
	2421, 2418, 2417, 2413, 2412, 295, 2411, 2410, 13, 2409,
	78, 2408, 2407, 2403, 2401, 126, 2400, 2394, 2393, 2391,
	2390, 2389, 2388, 138, 2386, 2383, 2380, 2378, 172, 2377,
	2371, 472, 93, 102, 2368, 2367, 104, 165, 2366, 118,
	2363, 2362, 2361, 142, 2360, 3670, 2359, 63, 59, 2358,
	213, 83, 50, 49, 18, 16, 2357, 2354, 61, 79,
	2352, 96, 69, 2350, 106, 95, 2349, 2348, 10, 4,
	2347, 1, 5, 2, 70, 2346, 2344, 120, 2343, 2342,
	2341, 90, 2338, 2332, 4090, 2330, 88, 130, 92, 74,
	2323, 33, 46, 2320, 2317, 2316, 2315, 2312, 41, 2310,
	2308, 2306, 134, 48, 158, 28, 66, 43, 131, 2305,
	146, 80, 2303, 133, 139, 2296, 67, 27, 30, 2292,
	26, 129, 145, 52, 89, 137, 2291, 2290, 60, 71,
	2289, 2284, 2280, 2278, 2276, 2271, 73, 2270, 53, 2269,
	206, 2267, 23, 2265, 35, 31, 2261, 65, 128, 68,
	29, 2255, 154, 2253, 42, 155, 124, 152, 2252, 2250,
	2249, 2247, 170, 250, 2245, 2243, 85, 160, 143, 141,
	2241, 242, 2240, 2238, 98, 1455, 246, 47, 157, 2234,
	2232, 2585, 149, 25, 21, 2229, 123, 2227, 2225, 2224,
	182, 159, 107, 922, 45, 2215, 2212, 17, 2207, 2202,
	2186, 2184, 2177, 2176, 251, 2175, 2174, 2172, 180, 55,
	7, 161, 75, 2171, 2169, 2167, 121, 94, 2166, 150,
	148, 122, 168, 2165, 164, 144, 105, 2162, 110, 2159,
	2154, 2150, 2149, 2144, 86, 2143, 2142, 2139, 2136, 151,
	140, 111, 77, 2135, 82, 100, 136, 147, 36, 2133,
	32, 2130, 2127, 2115, 173, 20, 2114, 8, 58, 44,
	22, 99, 97, 2110, 0, 2109, 12, 163, 241, 162,
	2105, 2102, 6, 9, 11, 2101, 132, 2100, 2097, 2090,
	19, 39, 15, 14, 2087, 2082, 4611, 2527, 125, 2071,
	179,
}

//line sql.y:6755
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 354, 355, 355, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 334, 334,
	334, 337, 337, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 83, 83, 22, 23, 23, 23, 23,
	358, 358, 149, 149, 147, 147, 148, 148, 217, 217,
	24, 25, 25, 227, 227, 226, 226, 226, 228, 228,
	228, 228, 263, 263, 26, 26, 26, 26, 26, 99,
	99, 336, 336, 335, 327, 327, 326, 326, 325, 333,
	333, 332, 332, 331, 38, 39, 48, 48, 48, 48,
	49, 50, 338, 338, 300, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 302, 302, 288,
	288, 301, 301, 301, 301, 301, 301, 301, 287, 287,
	110, 110, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 349, 349, 197, 197, 197, 197, 197,
	197, 119, 119, 128, 128, 128, 128, 128, 117, 117,
	118, 116, 116, 116, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 127, 127, 123,
	123, 123, 124, 124, 124, 125, 125, 350, 350, 350,
	350, 267, 267, 267, 267, 270, 270, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 269, 269, 269, 269,
	269, 271, 271, 271, 271, 271, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 273, 273, 273, 273, 273, 273, 273, 273, 286,
	286, 274, 274, 281, 281, 282, 282, 282, 283, 283,
	283, 284, 284, 279, 279, 279, 279, 279, 279, 280,
	280, 280, 289, 314, 314, 313, 313, 311, 311, 311,
	311, 298, 298, 308, 308, 308, 308, 308, 297, 297,
	293, 293, 293, 294, 294, 295, 295, 292, 292, 296,
	296, 310, 310, 309, 290, 290, 291, 291, 316, 351,
	351, 351, 351, 351, 352, 352, 317, 343, 344, 342,
	342, 342, 342, 342, 80, 80, 80, 240, 240, 240,
	306, 306, 305, 305, 305, 307, 307, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 235, 235, 235, 341, 341,
	341, 341, 341, 341, 340, 340, 340, 303, 303, 303,
	339, 339, 56, 56, 181, 181, 45, 45, 45, 45,
	45, 45, 44, 44, 44, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 46, 46,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 85,
	85, 86, 86, 86, 86, 88, 88, 88, 319, 319,
	57, 57, 3, 3, 137, 139, 140, 140, 138, 138,
	138, 138, 138, 138, 59, 59, 58, 58, 142, 141,
	143, 143, 143, 1, 1, 2, 2, 4, 4, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 285, 285, 285, 318, 318, 320, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 322, 322, 322, 60,
	60, 323, 275, 276, 277, 5, 6, 299, 321, 95,
	95, 28, 37, 37, 29, 29, 29, 29, 30, 30,
	61, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 234, 234, 242, 242, 233, 233, 256, 256, 256,
	236, 236, 236, 237, 237, 348, 348, 348, 230, 230,
	63, 63, 63, 65, 65, 66, 67, 67, 258, 258,
	259, 259, 68, 69, 81, 81, 81, 81, 81, 81,
	84, 84, 84, 15, 15, 15, 15, 77, 77, 77,
	14, 14, 64, 64, 71, 345, 345, 346, 347, 347,
	347, 347, 72, 74, 31, 31, 31, 31, 31, 31,
	105, 105, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 100, 100, 100, 94, 94, 359,
	75, 76, 76, 98, 98, 98, 91, 91, 91, 97,
	97, 97, 16, 16, 17, 216, 216, 18, 18, 102,
	102, 104, 104, 104, 104, 104, 106, 106, 106, 106,
	106, 106, 106, 101, 101, 103, 103, 103, 103, 249,
	249, 249, 248, 248, 131, 131, 133, 132, 132, 134,
	134, 135, 135, 135, 135, 179, 179, 157, 157, 214,
	214, 212, 212, 213, 213, 215, 215, 215, 215, 218,
	218, 136, 136, 136, 136, 144, 144, 145, 145, 146,
	146, 257, 257, 254, 254, 254, 253, 253, 150, 150,
	150, 152, 151, 151, 151, 151, 153, 153, 155, 155,
	154, 154, 156, 161, 161, 160, 160, 158, 158, 158,
	158, 159, 159, 159, 159, 162, 162, 115, 115, 115,
	115, 115, 115, 115, 126, 126, 126, 126, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 82, 82, 82, 231, 231,
	163, 163, 171, 171, 171, 171, 164, 164, 164, 164,
	164, 164, 164, 172, 172, 172, 178, 173, 173, 169,
	169, 169, 169, 167, 167, 167, 167, 167, 167, 167,
	167, 167, 167, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 265, 265, 330, 330, 329, 329, 328, 328, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	360, 360, 278, 278, 278, 278, 170, 170, 170, 170,
	170, 96, 96, 96, 96, 96, 262, 262, 262, 266,
	266, 266, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 184, 184, 92,
	92, 182, 182, 183, 185, 185, 180, 180, 180, 166,
	166, 166, 186, 186, 187, 187, 188, 188, 190, 189,
	189, 191, 192, 192, 192, 193, 193, 194, 194, 194,
	47, 47, 47, 47, 47, 42, 42, 42, 42, 43,
	43, 43, 107, 107, 107, 107, 109, 109, 108, 108,
	78, 78, 79, 79, 79, 113, 113, 114, 114, 114,
	111, 111, 112, 112, 210, 210, 195, 195, 195, 202,
	202, 202, 198, 198, 200, 200, 200, 201, 201, 201,
	199, 207, 207, 209, 209, 208, 208, 204, 204, 205,
	205, 206, 206, 206, 203, 203, 165, 165, 165, 165,
	165, 211, 211, 211, 211, 219, 219, 175, 175, 177,
	177, 176, 130, 220, 220, 224, 221, 221, 225, 225,
	225, 225, 225, 222, 222, 223, 223, 250, 250, 250,
	229, 229, 241, 241, 238, 238, 239, 239, 232, 232,
	243, 243, 243, 73, 174, 174, 315, 315, 312, 246,
	246, 247, 247, 251, 251, 255, 255, 252, 252, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 356, 357, 260, 261, 261,
	261,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 7, 5,
	6, 6, 7, 7, 0, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 1, 2,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 6, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 1, 3, 5, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 8, 4, 1, 3, 3, 6,
	7, 7, 8, 4, 0, 1, 0, 1, 3, 3,
	1, 1, 2, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 3, 3, 3, 5, 2, 3,
	3, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 3, 4, 3, 7, 0,
	3, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 6, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 6, 6, 6,
	2, 2, 3, 3, 3, 1, 1, 1, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 5, 4, 4, 4, 4, 4, 7, 4, 6,
	6, 6, 4, 4, 4, 7, 8, 6, 5, 6,
	8, 11, 7, 8, 8, 9, 4, 4, 4, 4,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	4, 0, 2, 0, 2, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 0,
	5, 5, 2, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	2, 2, 0, 3, 0, 2, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -354, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -83, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -84, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -356,
	11, 429, 252, 251, 28, -12, 463, 85, -355, 597,
	-210, -195, 22, 33, 29, -194, -190, -98, -195, 20,
	18, 7, -75, -359, -75, -75, 12, 13, -75, -300,
	-302, 85, 155, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -324, -44, -41, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-40, 80, 33, 463, 466, -307, 219, 225, 226, 430,
	122, 121, 75, 221, -304, 353, 567, -55, 569, 101,
	103, 568, 44, 231, 570, 571, 572, 573, 240, 574,
	575, 576, 577, 583, 584, 585, 586, 123, 7, -75,
	-255, -251, -334, -245, 88, 89, 90, 460, 243, 493,
	494, 292, 80, 41, 350, 353, 567, 299, 313, 307,
	334, 326, 461, 495, 295, 244, 280, 564, 324, 131,
	569, 298, 496, 258, 358, 359, 360, 101, 302, 396,
	582, 297, 497, 580, 103, 568, 79, 51, 44, 253,
	322, 227, 318, 570, 281, 498, 471, 274, 122, 119,
	589, 36, 316, 50, 30, 579, 121, 49, 571, 146,
	499, 572, 362, 341, 558, 48, 363, 259, 500, 83,
	264, 465, 566, 364, 317, 365, 291, 578, 224, 501,
	550, 366, 367, 559, 502, 342, 346, 503, 388, 368,
	596, 52, 504, 505, 560, 120, 506, 78, 573, 311,
	312, 507, 289, 242, 390, 338, 442, 449, 450, 107,
	108, 445, 109, 451, 110, 452, 453, 454, 443, 111,
	104, 444, 455, 456, 339, 340, 112, 457, 106, 105,
	446, 448, 113, 458, 240, 35, 369, 462, 293, 58,
	268, 391, 46, 344, 593, 45, 554, 508, 557, 337,
	333, 439, 53, 509, 510, 511, 512, 574, 336, 310,
	332, 588, 4, 286, 575, 62, 226, 348, 347, 349,
	275, 387, 329, 513, 514, 515, 247, 81, 516, 319,
	21, 517, 518, 370, 282, 519, 56, 520, 521, 394,
	256, 522, 54, 576, 39, 261, 590, 577, 523, 524,
	525, 526, 263, 527, 372, 528, 371, 343, 345, 270,
	373, 464, 529, 315, 260, 581, 530, 248, 565, 262,
	267, 255, 395, 249, 531, 532, 533, 534, 535, 296,
	549, 536, 537, 303, 583, 440, 43, 538, 539, 540,
	541, 290, 285, 389, 398, 61, 82, 355, 542, 563,
	309, 283, 543, 300, 55, 584, 585, 586, 277, 587,
	9, 594, 595, 375, 123, 287, 288, 47, 330, 269,
	544, 545, 320, 321, 335, 308, 331, 301, 551, 271,
	376, 441, 257, 546, 397, 284, 351, 356, 468, 276,
	377, 562, 467, 328, 325, 278, 547, 378, 232, 272,
	273, 548, 552, 379, 380, 294, 381, 382, 383, 384,
	385, 386, 279, 466, 306, 323, 357, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 438, 230, -75, 230, -154,
	-251, 230, -222, 359, -242, 361, 374, 369, 379, 367,
	-234, 370, 372, 270, -348, 388, 230, 376, 218, 362,
	371, 380, 381, 294, 382, 386, 279, 383, 384, 385,
	-334, 172, 572, 587, 131, 327, 366, 364, 389, 554,
	-251, 301, -258, 306, -246, -334, -245, 304, -154, -81,
	550, 222, -260, -260, -100, 554, 556, -173, -115, 139,
	-126, -129, -120, -121, -167, -168, -169, -170, -127, -180,
	161, 162, 169, 140, -178, -130, 26, 459, 431, 430,
	172, 31, 214, 68, 69, 433, 434, 142, 57, 406,
	407, -128, 401, 408, 403, 436, 437, 114, 438, 104,
	106, 105, 439, 440, 441, 339, 340, 442, 443, 444,
	107, 108, 109, 110, 111, 112, 113, 445, 448, 446,
	447, 449, 450, 451, 456, 457, 452, 453, 454, 455,
	458, -246, -251, 235, 400, 229, 167, 429, -122, -118,
	-8, -176, 399, 404, 405, 409, 402, -334, -245, -124,
	-123, -163, 91, 97, 102, 98, -353, 115, -356, 92,
	93, 94, 95, 96, 116, 117, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 44, 375, 375,
	-154, -75, -75, -75, -75, -188, -98, -190, -10, -8,
	-356, 8, -75, -8, -9, -13, -34, -36, 489, -35,
	-251, -195, -210, 12, 157, 42, 50, -193, -194, -12,
	-8, -115, 19, 23, 24, -103, 163, -115, -251, -76,
	-103, -232, 234, -75, -75, -221, -263, 301, -225, 389,
	388, -247, -223, -246, -244, -222, 387, 223, 23, 469,
	138, 25, 27, 141, 172, 126, 19, 142, 37, 225,
	327, 241, 171, 237, 430, 218, 72, 470, 401, 403,
	399, 406, 432, 433, 400, 361, 31, 13, 472, 28,
	251, 24, 38, 165, 220, 145, 473, 254, 26, 252,
	114, 117, 475, 22, 75, 246, 14, 239, 40, 16,
	476, 477, 17, 235, 234, 157, 231, 70, 11, 214,
	29, 154, 66, 478, 133, 479, 480, 481, 482, 127,
	68, 155, 20, 591, 404, 405, 33, 555, 459, 265,
	167, 73, 59, 556, 139, 402, 483, 484, 115, 485,
	118, 76, 561, 135, 18, 71, 42, 486, 266, 487,
	236, 592, 488, 392, 489, 156, 221, 429, 69, 490,
	229, 374, 8, 435, 32, 250, 238, 125, 67, 491,
	230, 144, 436, 437, 233, 128, 116, 7, 132, 34,
	12, 74, 77, 407, 408, 409, 57, 124, 463, 143,
	15, 492, 393, 137, 131, -301, 155, -287, -291, -246,
	245, -317, 241, -154, -310, -309, -246, -99, -241, 231,
	239, 238, 132, -338, 135, 287, 400, 229, -51, -52,
	-222, 171, -85, 262, 266, 86, 86, -291, -290, -289,
	-339, 266, 245, -316, -308, 237, 246, -297, 238, 239,
	-292, 231, 133, -339, -292, 236, 246, 266, 266, 123,
	266, 123, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 261, -298, 147, -298, 467, 467, -304, -339, -339,
	-339, 233, 35, 35, -243, -292, 233, 25, -298, -298,
	-222, 171, -298, -298, -298, -298, 274, 274, -298, -298,
	-298, -298, -298, -298, -298, -298, -298, -298, -298, -298,
	-298, -298, -298, 230, -338, -107, 386, 294, 80, -53,
	276, -37, -154, -241, 231, 232, -338, 263, -154, 215,
	-154, -236, 155, 15, -236, -233, 375, 373, 360, 365,
	-236, -236, -236, -236, 277, 358, -293, 231, 35, 242,
	375, 277, 358, 277, 278, 277, 278, 368, 378, 277,
	-256, 14, 157, 400, 363, 367, 270, 230, 271, 232,
	377, 278, -256, 92, -237, 155, 375, 273, -236, -236,
	-261, -356, -247, 327, -334, 557, -261, -261, 32, 89,
	233, -246, -77, -246, 92, -15, -11, -22, -21, -23,
	147, -105, 375, -93, 172, 572, 558, 559, 560, 557,
	372, 565, 563, 561, 277, 562, 86, 135, 137, 138,
	4, -115, 154, -164, 147, 148, 149, 150, 151, 152,
	153, 157, 139, 141, 155, 156, 136, 158, 159, 160,
	161, 162, 163, 164, 166, 165, 167, 168, 171, 216,
	217, -121, -121, -121, -121, -178, -356, -356, -356, -121,
	-231, -356, -121, -356, -356, -356, -356, -184, -115, -356,
	-360, -356, -360, -360, -278, -356, -278, -356, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, -356, 215, -356, -356, -356, -356, -356,
	-278, -278, -278, -278, -278, 102, 97, 91, -180, 98,
	92, -246, -251, -8, -9, -173, -260, -345, -346, -157,
	-154, -356, 294, -246, -246, 263, -193, -12, -8, -188,
	-194, -190, -8, -75, -91, -104, 63, 64, -106, 24,
	38, 67, 65, 23, -357, 87, -357, -210, -357, 86,
	-36, -214, 85, 61, 43, 92, 92, 86, 21, -189,
	-191, -115, 14, -249, 4, -248, 25, -246, 92, 215,
	100, 14, -155, 29, -154, -232, -232, 86, 301, -225,
	-263, -227, -226, 390, 392, 147, -250, -246, 92, 31,
	87, 86, -154, -267, -270, -272, -271, -273, -268, -269,
	324, 325, 172, 328, 330, 331, 332, 333, 334, 335,
	336, 337, 338, 341, 32, 253, 320, 321, 322, 323,
	342, 343, 344, 345, 346, 347, 348, 349, 307, 326,
	461, 308, 309, 310, 311, 312, 313, 315, 316, 317,
	318, 319, -337, -334, 85, 87, 86, -274, 85, -107,
	230, -334, 231, 231, 231, -75, 429, -298, -298, 261,
	19, -44, -41, -324, 18, -40, -41, 223, 119, 120,
	220, 85, -287, 85, -296, -337, -334, 85, 133, 236,
	132, -295, -292, -295, -296, -334, -180, -334, 133, 133,
	-218, -246, -218, -218, 23, -218, 23, -218, 23, 94,
	-246, -218, 23, -218, 23, -218, 23, -218, 23, -218,
	23, 31, 78, 79, 31, 81, 82, 83, -180, -180,
	-287, -222, -154, -334, 94, 94, -298, -298, 94, 92,
	92, 92, -298, -298, 94, 92, -253, -251, 92, -340,
	247, 291, 293, 94, 94, 94, 94, 31, 92, -341,
	31, 579, 578, 580, 581, 582, 94, 31, 94, 31,
	94, -246, 85, -154, -113, 281, 218, 220, 223, 76,
	92, 295, 147, 44, 86, 233, 230, -334, -238, 235,
	-238, -246, -252, -251, -244, 92, -115, -294, 14, 157,
	-256, -256, -236, -154, -294, -256, -236, -154, -236, -236,
	-236, -236, -256, -256, -256, -236, -251, -251, -154, -154,
	-154, -154, -154, -154, -154, -261, -237, -236, 557, 92,
	-230, 14, 76, -261, -261, -259, 304, 338, 551, 552,
	553, 86, 463, -147, -154, 557, 557, 557, 557, 557,
	557, -115, -115, -115, -115, 485, -171, 115, 139, 116,
	117, -129, -172, -176, -178, 99, 157, 141, 155, 156,
	-120, -121, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -262, -334, 92, 172, -125,
	-124, 98, -353, -125, -101, -103, -115, -115, -334, -246,
	-101, -101, -115, -97, 24, 38, -182, -183, 143, -180,
	-357, -357, 94, 98, -246, -246, -90, -89, 411, 412,
	413, 414, 416, 417, 418, 421, 422, 426, 427, 410,
	428, 415, 420, 423, 424, 425, 419, 323, -115, -115,
	-115, -115, -115, -115, -82, -115, 126, 127, 128, -115,
	-115, -174, -173, -333, -332, -331, -115, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -115,
	-115, -115, -115, -115, -115, -115, -115, -115, -115, -102,
	24, 38, -101, -247, -252, -244, -101, -102, -102, -101,
	-101, 215, -210, -357, 86, -347, 392, 393, 555, -254,
	266, -253, 25, -174, 92, 14, -216, 77, -246, -193,
	-193, 63, 64, 59, -101, -106, -357, -35, 25, -212,
	-246, 62, 92, -279, -222, 350, 351, -115, -115, 86,
	-192, 27, 28, -154, -248, 163, -252, -154, -217, 266,
	-154, -132, -134, -135, -136, -157, -179, -356, -137, 481,
	478, 14, -147, -148, -156, -251, -225, -227, 86, 391,
	393, 394, 76, 118, -115, -280, 171, -306, -305, -304,
	-287, -289, -290, -291, 87, -280, -283, 356, 355, -274,
	-274, -274, -274, -274, -279, -279, -279, -279, 85, 85,
	-274, -274, -274, -274, -281, 85, -281, -281, -282, 85,
	-282, -317, -115, -314, -313, -311, -312, 240, 101, 463,
	77, -309, -192, 94, -113, -239, 235, -315, -312, -334,
	-334, -334, -239, -334, 92, -334, 92, -86, -57, -1,
	591, 592, 593, 86, 19, -288, -287, -56, 291, -320,
	-321, 266, -316, -310, -296, 133, -295, -296, -296, -334,
	86, 29, 123, 123, 123, 123, 463, 220, 32, -287,
	-56, -262, 233, -262, -262, 92, 92, -235, 587, -147,
	-109, 283, 147, 272, 272, 230, 230, 285, -154, 296,
	298, 297, 295, 23, 284, 286, 288, 274, -154, -154,
	-238, 76, -149, -154, 26, -251, -154, -236, -236, -154,
	-236, -236, -154, -246, -93, 392, 86, 463, 22, -94,
	22, -356, 115, 116, 117, -172, -120, -121, -120, 138,
	254, 86, -357, 25, 86, 77, -357, -357, -357, 86,
	14, -101, -185, -183, 145, -115, -357, -357, -357, 86,
	86, 14, -266, 25, -357, -357, -357, -357, -357, -184,
	-357, 14, 86, 86, -357, -357, 86, 86, -357, 86,
	86, 86, -330, 86, 86, 86, 86, -357, -357, -357,
	-357, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, -357, -357, -101, -101, -356, 215, -357, -357, -357,
	-357, -357, -247, -346, 554, 393, -161, -160, -158, 74,
	234, 75, -356, -253, -357, -125, 89, -213, 89, -212,
	-166, -246, 94, 98, -195, -131, -133, 14, -106, -178,
	87, 86, -279, -199, -204, -233, -246, 92, 172, -191,
	215, -162, 15, -165, 32, 57, -11, -356, -356, 32,
	86, -150, -152, -151, -153, 66, 70, 72, 67, 68,
	69, 73, -257, 25, -132, -9, -8, -356, -356, -356,
	-154, -147, -358, 14, 77, -358, 86, 215, -226, -228,
	395, 392, 398, -334, 92, -85, 86, -304, -291, -196,
	-110, 40, -284, 357, -279, -279, -286, 92, -286, 94,
	94, 87, -47, -42, -43, 33, 80, -311, -298, 92,
	39, -246, 87, -109, -154, 139, 76, -315, -315, -315,
	-251, -2, 590, 596, 133, 85, 360, 18, -212, 86,
	87, -181, 292, 87, -87, -246, 87, 85, -296, -296,
	-246, -356, 230, 31, 31, -56, -181, -280, -334, 589,
	588, 87, 232, 290, -114, 406, -111, 92, 88, -154,
	-154, -154, -154, -154, 223, 220, 275, 233, -147, -154,
	86, -80, 249, 244, -256, -256, 33, -154, 392, 566,
	564, -115, 138, 254, -129, -121, -103, 460, -264, 172,
	324, 253, 322, 318, 338, 329, 355, 320, 356, 317,
	316, 315, -264, -262, -115, -115, -188, 146, -115, 144,
	-115, -115, -115, -357, 172, 324, 14, -115, -115, -115,
	-331, -115, -115, -115, -329, -328, -125, -180, -357, -329,
	-115, -115, -328, -328, -332, -332, -332, -332, -332, -173,
	-173, -173, -173, -357, -357, -102, -247, -158, -292, -292,
	-292, -218, 86, -229, 22, 14, 57, 57, -131, -162,
	-132, -106, -246, -202, 550, -207, 46, -205, -206, 47,
	-203, 48, 56, 163, -193, -115, -219, 76, -220, -224,
	-180, -175, -177, -176, -356, -211, -357, -246, -218, -220,
	-134, -135, -135, -134, -135, 66, 66, 66, 71, 66,
	71, 66, -151, -251, -357, -357, -9, -9, -115, -254,
	77, -132, -132, -156, -251, 163, 392, 396, 397, -304,
	-352, 115, 139, 31, 76, 353, 101, -350, 171, -351,
	236, 132, 133, 248, 25, 41, 87, 86, 87, 86,
	87, 86, -240, 499, 139, -43, -42, -298, -298, 94,
	-334, 232, 26, -154, 76, 76, 76, -88, 594, 94,
	85, -3, 80, -115, 85, 19, -287, -180, -322, -275,
	-323, -276, -277, -5, -6, -299, 57, 101, -60, 44,
	231, 574, 575, 123, 587, -314, -212, -318, -320, -154,
	-117, -356, -116, -118, -122, 161, 162, -181, -154, -108,
	281, 289, 85, -112, 89, -336, 77, 272, 353, 272,
	-154, -80, -47, -154, -236, -236, 33, -334, -357, -129,
	-121, -356, -357, -274, -274, -274, -282, -274, 312, -274,
	312, -274, -357, -357, 86, -357, 22, -357, -92, 435,
	-115, 86, 86, -357, 85, 85, -115, -357, -357, -357,
	-330, 86, -357, 86, -357, 86, -265, 549, -357, -357,
	-357, -357, -357, -357, -357, -357, -357, -357, -357, -159,
	22, -159, -159, -357, 89, -154, -162, -186, 16, -199,
	51, 330, -209, -208, 55, 47, -206, 19, 49, 19,
	30, -219, 86, 147, 86, -357, -357, 86, 57, 215,
	-357, -162, -145, -144, 76, 77, -146, 76, -144, 66,
	66, -214, -357, -357, 86, -217, -132, -162, -162, 215,
	115, -356, -119, -128, -117, 12, 92, 92, -334, 133,
	133, -154, 85, -279, 92, -279, 94, 94, 499, 31,
	81, 82, 83, 31, 78, 79, -154, -154, -154, -154,
	-319, 85, 19, -115, 85, 147, 87, -212, -212, 268,
	157, -298, 572, 274, 274, -298, -298, -298, 87, -357,
	86, -285, 463, 466, -115, -123, -123, -214, 87, -327,
	463, -335, -246, -246, -246, -246, -120, -279, -115, -115,
	-193, 92, -115, -115, 94, 94, -357, -357, -329, -328,
	-115, -357, -142, -141, -143, 558, 115, 31, -264, -356,
	66, 18, 16, -356, -356, -254, -186, -187, 17, 19,
	-200, 53, -198, 52, -198, -208, 19, 19, 92, 19,
	92, 133, -224, -115, -177, 57, -11, -246, -175, -246,
	-188, -115, 85, -115, -125, -162, -162, -115, -168, 438,
	104, 106, 105, 439, 440, 441, 339, 340, 442, 443,
	444, 107, 108, 109, 110, 111, 112, 113, 445, 448,
	446, 449, 450, 451, 456, 457, 452, 453, 454, 455,
	458, 85, -115, 87, 87, -214, -318, -57, 87, -212,
	94, 87, 269, -176, -356, 92, -298, -298, -298, 94,
	94, -253, -351, -320, 467, 467, -357, 25, -326, -325,
	-247, 85, 77, -96, 157, 463, -357, -357, -357, -357,
	-357, 87, 87, -357, -357, 86, -357, -141, -143, -357,
	76, -125, -215, -357, -246, 236, 19, 19, -215, -215,
	-161, -187, -115, -173, -201, 54, 76, 118, 92, 92,
	92, 12, -175, 215, -193, -212, -139, 360, -188, -357,
	-212, 87, 25, 87, 596, 133, 87, -176, -95, -356,
	265, -253, 92, 92, -11, 86, 147, -212, -154, -357,
	461, 73, 464, -115, -357, 76, 473, 558, 86, -357,
	-357, -357, 76, 118, -220, -246, 87, -357, -356, -193,
	87, -197, -11, 85, -3, 265, -78, 463, -325, -303,
	-247, 92, 94, 87, 62, 462, 465, -330, -246, 236,
	-254, -140, -138, -246, 513, -343, -344, 76, -352, -349,
	115, 139, 101, -350, 124, 125, -78, -115, 85, -357,
	-79, 280, 554, -336, 62, -357, -357, 86, 22, -267,
	-59, 523, -344, 76, -343, 76, 13, 12, 115, 92,
	87, -212, 241, -327, 463, -138, 520, -280, -125, -342,
	249, 244, 247, 32, -342, -4, 595, 87, 282, 464,
	-58, 26, -139, 243, 31, 115, 94, -4, 465, 523,
	-125, -142, -141, -141,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 759,
	759, 759, 0, 759, 0, 0, 759, -2, -2, 759,
	1245, 0, 759, 0, 0, -2, 691, 693, 0, 695,
	-2, 0, 0, 704, 1737, 1737, 754, 0, 0, 0,
	0, 0, 759, 759, 759, 759, 1106, 48, 759, 0,
	83, 84, 710, 711, 712, 63, 0, 1735, 1, 3,
	69, 73, 0, 0, 0, 56, 1115, 0, 76, 0,
	0, 763, 0, 761, 0, 1228, 759, 759, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 519, 459, 502, 457, 488, -2, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	462, 351, 351, 0, 0, -2, 450, 450, 450, 0,
	0, 0, 485, 1230, 405, 351, 351, 0, 351, 351,
	351, 351, 0, 0, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 1132,
	151, 1246, 1243, 1244, 38, 39, 40, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 0, 1222, 0, 619,
	860, 0, 680, 680, 0, 680, 680, 680, 680, 0,
	0, 0, 631, 0, 0, 0, 0, 677, 0, 647,
	648, 0, 677, 0, 683, 0, 658, 680, 680, 661,
	1738, 0, 1738, 1738, 1213, 0, 674, 672, 686, 687,
	690, 694, 0, 699, 702, 1239, 1240, 0, 717, 47,
	1479, 709, 722, 723, 0, 755, 756, 43, 957, 0,
	882, 887, 898, 911, 912, 913, 914, 915, 917, 918,
	0, 0, 0, 0, 923, 924, 0, 0, 0, 0,
	0, 938, 0, 0, 0, 0, 0, 1087, 0, 1050,
	1050, 974, 1050, 1052, 1052, 0, 0, 0, 1734, 1519,
	1527, 1528, 1550, 1634, 1680, 1523, 1524, 1505, 1517, 1520,
	1508, 1509, 1511, 1513, 1518, 1525, 1531, 1510, 1530, 1529,
	0, 1506, 1507, 1512, 1522, 1526, 1514, 1515, 1516, 1521,
	1532, 1096, 0, 0, 0, 0, 0, 0, 257, 258,
	956, 1202, 1052, 1052, 1052, 1052, 1052, -2, -2, 204,
	205, 206, 207, 208, 209, 210, 0, 200, 0, 262,
	263, 259, 260, 261, 940, 941, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 1737, 0, 732,
	0, 0, 0, 0, 0, 1115, 0, 1107, 1106, 61,
	0, 759, -2, 0, 0, 0, 0, 45, 0, 50,
	819, 75, 74, 1154, 0, 0, 0, 57, 1116, 65,
	67, 1117, 0, 764, 765, 0, 795, 799, 0, 760,
	0, 0, 1229, 1228, 1228, 100, 0, 1676, 1206, -2,
	-2, 0, 0, 1241, 1242, 1215, -2, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, -2, 0, 0, 161, 162, 0,
	41, 377, 0, 157, 0, 371, 321, 1132, 0, 0,
	0, 0, 0, 759, 0, 1223, 142, 143, 149, 150,
	351, 351, 499, 0, 0, 151, 151, 466, 467, 468,
	0, 0, -2, 375, 0, 451, 0, 0, 365, 365,
	369, 367, 368, 0, 0, 0, 0, 0, 0, 479,
	0, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 580, 0, 352, 0, 497, 498, 406, 0, 0,
	0, 0, 477, 478, 0, 0, 1231, 1232, 0, 0,
	351, 351, 0, 0, 0, 0, 351, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 1145, 0, 0, 0, -2,
	0, 611, 0, 0, 0, 1224, 1224, 0, 618, 0,
	620, 621, 0, 0, 622, 0, 677, 677, 675, 676,
	624, 625, 626, 627, 680, 0, 0, 360, 361, 362,
	677, 680, 0, 680, 680, 680, 680, 677, 677, 677,
	680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1738, 683, 680, 0, 654, 0, 655, 656, 659, 660,
	662, 1739, 1740, 1262, 1738, 1738, 666, 670, 1214, 692,
	700, 703, 720, 718, 719, 721, 713, 714, 715, 716,
	0, 734, 735, 740, 0, 0, 0, 0, 746, 747,
	748, 0, 0, 751, 752, 753, 0, 0, 0, 0,
	0, 880, 0, 0, 946, 947, 948, 949, 950, 951,
	952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 919, 920, 921, 922, 925, 0, 0, 0, 930,
	931, 0, 0, 0, 0, 0, 769, 0, 1088, 0,
	972, 0, 973, 975, 976, 0, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1234,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 779, 0, 0, 779, 779, 0, 0,
	193, 194, 195, 196, 197, 211, 212, 213, 214, 215,
	264, 1096, 0, 956, 0, 0, 44, 724, 725, 0,
	843, 1234, 0, 0, 775, 0, 55, 64, 66, 1115,
	59, 1115, 0, 781, 0, 0, -2, -2, 782, 788,
	789, 790, 791, 792, 52, 1736, 53, 0, 72, 0,
	46, 0, 0, 0, 0, 333, 1157, 0, 0, 1108,
	1109, 1112, 0, 796, 1561, 800, 0, 802, 803, 0,
	762, 0, 98, 0, 859, 0, 0, 0, 1676, 1212,
	0, 102, 103, 0, 0, 0, 339, 1217, 1218, 1219,
	-2, 358, 0, 339, 328, 272, 273, 274, 321, 276,
	321, 321, 321, 321, 333, 333, 333, 333, 304, 305,
	306, 307, 308, 0, 0, 291, 321, 321, 321, 321,
	311, 312, 313, 314, 315, 316, 317, 318, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 323, 323, 323,
	325, 325, 0, 42, 0, 343, 0, 1112, 0, 1145,
	1226, 1236, 0, 0, 0, 1226, 120, 0, 0, 500,
	530, 460, 489, 501, 0, 463, 464, -2, 0, 0,
	450, 0, 452, 0, 359, 0, -2, 0, 369, 0,
	365, 369, 366, 369, 357, 370, 481, 482, 483, 0,
	560, 829, 0, 0, 0, 0, 0, 566, 567, 568,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 490, 491, 492, 493, 494, 495, 496, 0, 0,
	452, 0, 486, 0, 407, 408, 0, 0, 411, 412,
	413, 414, 0, 0, 417, 418, 419, 846, 847, 420,
	444, 445, 446, 421, 422, 423, 424, 425, 426, 427,
	438, 439, 440, 441, 442, 443, 428, 429, 430, 431,
	432, 435, 0, 135, 1136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1224, 0, 0, 0,
	0, 778, 861, 1247, 1248, 681, 682, 0, 363, 364,
	680, 680, 628, 667, 0, 680, 632, 668, 633, 635,
	634, 636, 649, 650, 680, 639, 678, 679, 640, 641,
	642, 643, 644, 645, 646, 663, 651, 652, 653, 684,
	0, 688, 689, 664, 665, 0, 701, 705, 706, 707,
	708, 0, 0, 737, 94, 742, 743, 744, 745, 757,
	750, 958, 877, 878, 879, 0, 881, 884, 0, 942,
	944, 886, 888, 953, 954, 955, 0, 0, 0, 0,
	0, 892, 896, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 916, 1066, 1067, 1068, 933,
	265, 266, 0, 934, 0, 793, 0, 0, 0, 932,
	0, 0, 0, 0, 770, 771, 1094, 1091, 0, 0,
	1051, 1053, 0, 0, 0, 0, 0, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1069, 0,
	0, 0, 0, 0, 1087, 0, 935, 936, 937, 0,
	0, 0, 1235, 0, 130, 131, 0, 0, 0, 0,
	0, 1023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 780, 1097, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 1201, 0, 727, 728, 730, 0, 863,
	0, 844, 0, 0, 733, 0, 774, 0, 777, 58,
	60, 786, 787, 0, 804, 783, 54, 49, 0, 0,
	821, 1155, 333, 1177, 0, 337, 338, 1118, 1119, 0,
	1111, 1113, 1114, 77, 801, 797, 0, 875, 0, 0,
	858, 0, 807, 809, 810, 811, 841, 0, 814, 0,
	0, 0, 0, 0, 96, 860, 1207, 101, 0, 0,
	106, 107, 1208, 1209, 1210, 1211, 0, 519, -2, 402,
	163, 165, 166, 167, 158, -2, 331, 329, 330, 275,
	333, 333, 298, 299, 300, 301, 302, 303, 0, 0,
	292, 293, 294, 295, 286, 0, 287, 288, 289, 0,
	290, 376, 0, 1120, 344, 345, 347, 351, 0, 0,
	0, 372, 373, 0, 1136, 0, 0, 0, 1237, 1236,
	1236, 1236, 0, 153, 154, 155, 156, 555, 0, 0,
	531, 553, 554, 151, 0, 0, 159, 454, 453, 0,
	587, 0, 374, 0, 0, 369, 369, 354, 355, 484,
	0, 0, 562, 563, 564, 565, 0, 0, 0, 452,
	454, 339, 0, 409, 410, 415, 416, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	515, 516, 517, 518, 1133, 1134, 1135, 0, 0, 612,
	0, 0, 394, 92, 1225, 617, 677, 638, 669, 677,
	630, 637, 657, 697, 741, 0, 0, 0, 0, 749,
	0, 0, 885, 943, 945, 889, 0, 893, 897, 0,
	0, 0, 0, 0, 0, 0, 939, 963, 964, 0,
	0, 1106, 0, 1092, 0, 0, 971, 1054, 1055, 0,
	0, 0, 0, 0, 982, 983, 984, 985, 986, 0,
	988, 0, 0, 0, 992, 993, 0, 0, 994, 0,
	0, 0, 0, 0, 0, 0, 0, 1006, 1007, 1008,
	1009, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1020, 959, 0, 0, 779, 0, 1056, 1057, 1058,
	1059, 1060, 1097, 726, 729, 731, 817, 864, 865, 0,
	0, 0, 0, 845, 1233, 772, 773, 776, -2, 0,
	0, 1099, 0, 0, 804, 875, 805, 0, 784, 51,
	820, 0, 1159, 1158, 1171, 1184, 334, 335, 336, 1110,
	0, 1115, 0, 1195, 0, 0, 1187, 0, 0, 0,
	0, 0, 0, 0, 0, 848, 0, 0, 851, 0,
	0, 0, 0, 842, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 90, 91, 0, 0, 0, 104, 105,
	0, 0, 111, 340, 341, 144, 151, 404, 164, 384,
	0, 0, 271, 332, 296, 297, 0, 319, 0, 0,
	0, 397, 116, 1124, 1123, 351, 351, 346, 0, 349,
	0, 1238, 322, 0, 134, 0, 0, 0, 0, 0,
	140, 525, 0, 0, 532, 0, 0, 0, 458, 0,
	469, 470, 0, 559, -2, 608, 343, 0, 353, 356,
	830, 0, 0, 471, 0, 454, 475, 476, 487, 436,
	437, 434, 0, 0, 1146, 1147, 1152, 1150, 1151, 121,
	507, 509, 508, 512, 0, 0, 505, 0, 394, 1120,
	0, 616, 395, 396, 680, 680, 736, 95, 0, 739,
	0, 0, 0, 0, 890, 894, 794, 0, 0, 321,
	321, 1074, 321, 325, 1077, 321, 1079, 321, 1082, 321,
	1085, 1086, 0, 0, 0, 0, 1089, 970, 1095, 0,
	0, 0, 0, 981, 0, 0, 0, 0, 0, 0,
	132, 133, 1023, 0, 0, 1025, 1027, 1028, 998, 1024,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 960, 961, 0, 1098, 866, 871, 871,
	871, 0, 0, 0, 1220, 1221, 1100, 1101, 875, 1102,
	806, 785, 822, 1177, 0, 1170, 0, -2, 1179, 0,
	0, 0, 1185, 798, 78, 876, 81, 0, 1195, 1203,
	0, 1186, 1197, 1199, 0, 0, 0, 1191, 0, 875,
	808, 837, 839, 0, 834, 849, 850, 852, 0, 854,
	0, 856, 857, 819, 813, 815, 0, 0, 0, 98,
	0, 875, 875, 97, 0, 862, 108, 109, 110, 403,
	168, 173, 0, 0, 0, 178, 0, 180, 0, 385,
	0, 268, 270, 0, 0, 171, 333, 0, 333, 0,
	326, 0, 386, 398, 0, 1121, 1122, 0, 0, 348,
	350, 0, 1227, 136, 0, 0, 0, 528, 0, 556,
	0, 0, 0, 0, 0, 0, 160, 455, 588, 589,
	590, 591, 592, 593, 594, 595, 0, 351, 0, 0,
	0, 351, 351, 351, 600, 342, 0, 0, 584, 581,
	472, 0, 198, 199, 201, 0, 0, 474, 819, 1137,
	1138, 1139, 0, 1149, 1153, 124, 0, 0, 0, 0,
	613, 614, 615, 93, 623, 629, 738, 758, 883, 891,
	895, 0, 927, 1072, 333, 1075, 1076, 1078, 1080, 1081,
	1083, 1084, 928, 929, 0, 966, 0, 968, 1115, 0,
	1093, 0, 0, 980, 0, 0, 0, 989, 990, 991,
	0, 0, 997, 0, 999, 0, 0, 0, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 962, 0,
	0, 0, 0, 843, -2, 62, 1102, 1104, 0, 1164,
	1162, 1162, 1172, 1173, 0, 0, 1180, 0, 0, 0,
	0, 82, 0, 0, 0, 1200, 0, 0, 0, 0,
	99, 1106, 831, 838, 0, 0, 832, 0, 833, 853,
	855, 812, -2, 816, 0, 875, 875, 88, 89, 0,
	174, 0, 176, 191, 192, 0, 179, 181, 182, 267,
	269, 0, 0, 309, 320, 310, 0, 0, 399, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 819, 137, 138, 139,
	520, 0, 530, 0, 0, 0, 523, 0, 461, 0,
	0, 0, 351, 351, 351, 0, 0, 0, 0, 561,
	0, 569, 0, 0, 0, 202, 203, 0, 1148, 506,
	0, 122, 123, 0, 0, 511, 1061, 1073, 0, 0,
	0, 1090, 0, 0, 0, 0, 987, 995, 0, 1026,
	0, 1002, 0, 0, 0, 550, 551, 0, 1022, 0,
	872, 0, 0, 0, 0, 863, 1104, 80, 0, 0,
	1167, 0, 1160, 1163, 1161, 1174, 0, 0, 1181, 0,
	1183, 0, 1204, 1205, 1198, 0, 1190, 1193, 1189, 1192,
	1115, 835, 0, 840, 0, 1106, 87, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 327, 0, 0, 0, 521, 0,
	533, 524, 0, 598, 0, 602, 0, 0, 0, 605,
	606, 607, 378, 585, 582, 583, 473, 0, 125, 126,
	0, 0, 0, 0, 0, 0, 965, 967, 969, 978,
	979, 1070, 1071, 996, 1000, 0, 1003, 0, 0, 1004,
	0, 552, 0, 868, 825, 826, 873, 874, 0, 0,
	818, 79, 1105, 1103, 1156, 0, 1165, 1166, 1175, 1176,
	1182, 0, 1188, 0, 85, 0, 0, 0, 1115, 175,
	0, 185, 0, 529, 0, 532, 522, 596, 597, 0,
	609, 601, 603, 604, 1140, 0, 0, 0, 513, 926,
	0, 0, 0, 1023, 1005, 0, 548, 549, 0, 867,
	869, 870, 1168, 1169, 1196, 1194, 836, 843, 0, 86,
	379, 384, 1140, 0, 0, 0, 503, 1142, 127, 128,
	447, 448, 449, 121, 1062, 0, 1065, 0, 827, 828,
	534, 0, 536, 0, -2, 380, 381, 0, 169, 186,
	187, 0, 0, 190, 183, 184, 117, 0, 0, 610,
	0, 1143, 1144, 124, 1063, 1001, 535, 0, 0, 339,
	0, 545, 382, 0, 383, 0, 0, 0, 188, 189,
	557, 0, 0, 510, 0, 537, 538, 546, 0, 387,
	389, 390, 0, 0, 388, 526, 0, 557, 1141, 0,
	0, 547, 543, 391, 392, 393, 558, 527, 1064, 0,
	539, 540, 541, 542,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 597,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:517
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:522
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:527
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:563
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:569
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:582
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:592
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:598
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:604
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:608
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:617
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:623
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:627
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:633
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:707
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:792
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:812
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:824
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:836
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:840
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:846
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:852
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:864
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:874
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:878
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:884
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:888
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:894
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:898
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:907
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:929
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:933
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:939
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:943
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:947
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:953
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:957
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:961
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:965
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:971
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:975
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:987
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1018
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1023
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1027
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1033
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1038
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1043
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1049
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1054
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1069
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1075
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1091
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1098
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1105
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1110
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1115
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1120
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1127
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1134
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1145
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1152
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1156
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1162
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1166
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1180
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1190
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1194
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1204
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1211
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1215
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1221
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1231
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1236
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1241
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1245
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1269
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1278
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1287
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1291
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1300
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1310
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1316
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1326
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1331
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1336
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1341
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1346
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1357
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1361
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1366
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1375
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1381
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1387
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1392
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1399
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1406
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1410
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1414
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1418
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1422
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1440
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1444
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1450
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1454
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1458
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1462
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1466
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1470
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1474
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1479
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1711
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1715
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1719
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1723
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1740
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1954
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1959
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1963
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1971
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1981
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1989
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1993
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1997
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2002
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2023
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2053
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2062
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2068
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2078
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2082
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2087
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2091
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2107
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2111
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2115
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2119
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2123
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = yyDollar[2].str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = "key"
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = yyDollar[1].str
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2181
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2191
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2195
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2201
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2207
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2211
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2217
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2221
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2227
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2233
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2237
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2241
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2245
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2249
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion(), OnDelete: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2254
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2258
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2264
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2270
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2276
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2282
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2286
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2290
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2294
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2298
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2303
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2307
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2311
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2316
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2320
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2324
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2333
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2339
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2343
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2347
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2353
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2357
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2363
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2367
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2371
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2375
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2379
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2383
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2387
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2391
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2395
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2399
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2403
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2407
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2411
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2415
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2419
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2423
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2427
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2431
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2435
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2439
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2443
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2447
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2451
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2455
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2459
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2463
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2467
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2471
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = ""
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2522
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2526
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2531
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2535
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2544
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2548
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2552
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2556
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 461:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2560
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2566
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2570
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2574
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2580
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2584
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2588
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2592
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2596
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2600
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2604
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2608
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2632
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2636
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2640
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2644
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2648
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2652
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2656
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2660
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2664
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2668
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2674
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2678
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2684
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2688
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2692
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2696
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2700
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2704
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2708
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2712
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2716
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2722
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2729
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2736
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2743
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2749
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2760
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2767
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2779
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2789
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2793
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2797
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2810
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2820
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2824
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2835
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2842
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2849
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2856
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2863
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2874
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2883
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2891
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2900
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2907
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2915
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2919
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2928
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2943
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2948
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2952
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2957
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2961
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2967
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2973
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2979
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2983
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2989
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2993
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2999
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3005
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3011
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3017
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3023
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3027
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3041
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3047
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3053
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3057
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3061
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3067
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3071
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3076
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3080
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3085
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3089
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3095
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3099
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3103
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3107
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3111
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3115
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3119
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3123
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3127
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3131
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3135
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3139
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3143
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3147
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3151
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3155
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3159
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3163
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3167
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3171
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3175
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3179
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3184
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3188
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3192
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3199
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3209
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3214
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3218
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3223
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3228
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3233
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3238
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3243
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3249
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3255
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3262
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3269
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3276
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3284
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3288
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3294
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3300
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3306
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3312
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3318
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3324
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3330
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3336
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.str = ""
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3346
		{
			yyVAL.str = ""
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3352
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3358
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3362
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 614:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3368
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3372
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3391
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3400
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3406
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3414
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3418
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3422
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3426
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3430
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3434
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3462
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3466
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3470
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3474
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3482
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3490
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3494
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3498
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3502
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3506
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3510
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3514
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3518
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3522
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3526
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3530
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3534
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3538
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3542
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3546
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3550
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3554
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3558
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3562
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3566
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3589
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3593
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3597
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3601
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3605
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = ""
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = "extended "
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3621
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3625
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3631
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3641
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3645
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3649
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3659
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3663
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3673
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3679
		{
			yyVAL.empty = struct{}{}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.empty = struct{}{}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.empty = struct{}{}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3707
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3711
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3717
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3721
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3727
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3733
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3742
		{
			yyVAL.empty = struct{}{}
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3744
		{
			yyVAL.empty = struct{}{}
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3747
		{
			yyVAL.empty = struct{}{}
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3749
		{
			yyVAL.empty = struct{}{}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3754
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3760
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3765
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3769
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3773
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3777
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3781
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3785
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = yyDollar[1].str
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3795
		{
			yyVAL.str = yyDollar[1].str
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3799
		{
			yyVAL.str = yyDollar[1].str
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3822
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3846
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3862
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3872
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3878
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3882
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3886
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3890
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3902
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3934
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3938
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3944
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3952
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3972
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3993
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3997
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4001
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = ""
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4015
		{
			setAllowComments(yylex, true)
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4019
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4025
		{
			yyVAL.strs = nil
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4029
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4039
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4043
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4048
		{
			yyVAL.str = ""
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4052
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4056
		{
			yyVAL.str = SQLCacheStr
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4061
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4065
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4100
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4115
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4119
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4124
		{
			yyVAL.strs = nil
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4128
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4132
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4136
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4140
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			yyVAL.str = SQLCacheStr
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.str = DistinctStr
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.str = DistinctStr
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.str = StraightJoinHint
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4176
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4180
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4186
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4190
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4194
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4198
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4203
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4211
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4223
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4227
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4233
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4239
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4243
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4253
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4257
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4261
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4265
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4271
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4275
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4281
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4285
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4294
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4300
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4304
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4310
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4314
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4320
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4324
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4328
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4332
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4338
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4342
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4355
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4359
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4363
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4367
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4373
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4375
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4379
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4385
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4387
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4390
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.empty = struct{}{}
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4395
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4403
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4410
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4416
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4420
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4424
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4430
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4436
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4440
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4444
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4448
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4454
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4458
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4468
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4482
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4488
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4497
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4503
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4507
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4513
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4517
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4521
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4525
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4530
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4534
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4538
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4542
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4552
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4559
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4563
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4567
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4571
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4583
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4590
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4594
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4598
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4602
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4608
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4612
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4616
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4620
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4624
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4628
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4632
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4636
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4640
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4644
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4648
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4654
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4658
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4662
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4666
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4670
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4674
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4682
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4686
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4690
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4694
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4698
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4702
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4708
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4712
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4716
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4720
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4724
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4728
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4732
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4736
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4740
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4752
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4756
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4760
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4764
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4768
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4772
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4776
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4780
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4788
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4792
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4800
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4804
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4810
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4814
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4818
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4824
		{
			yyVAL.str = ""
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4828
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4834
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4838
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4845
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4849
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4853
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4857
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4863
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4867
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4871
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4875
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4879
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4883
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4887
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4893
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4897
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4901
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4908
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4914
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4928
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4936
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4940
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4950
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4958
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4962
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4970
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4974
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4978
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5032
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5036
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5104
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5132
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5140
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5144
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5152
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5164
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5180
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5184
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5197
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5206
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5212
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5216
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5222
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5226
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5232
		{
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5234
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5238
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5242
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5246
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5250
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5254
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5258
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5262
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5266
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5270
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5274
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5280
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5284
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5288
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5292
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5296
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5300
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5304
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5308
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5312
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5367
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5371
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5375
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5379
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5383
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5389
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5397
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5407
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5411
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5417
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5421
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5425
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5429
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5433
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5439
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5443
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5447
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5451
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5455
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5459
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5463
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5467
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5471
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5475
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5490
		{
			yyVAL.str = string("")
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5494
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5500
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5504
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5510
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5515
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5519
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5525
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5529
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5533
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5548
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5552
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5558
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5562
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5576
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5580
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5586
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5592
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5596
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5602
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5607
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5611
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5615
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5620
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5624
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5630
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5634
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5638
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5647
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5651
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5655
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5659
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5666
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5670
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5674
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5678
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5684
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5688
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5692
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5697
		{
			yyVAL.str = ""
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5701
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5705
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5709
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5714
		{
			yyVAL.str = ""
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5718
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5724
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5728
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5733
		{
			yyVAL.str = ""
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5737
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5742
		{
			yyVAL.str = "cascaded"
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5746
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5750
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5759
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5765
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5771
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5777
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5786
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5790
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5795
		{
			yyVAL.str = ""
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5799
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5805
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5809
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5815
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5819
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5823
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5828
		{
			yyVAL.str = ""
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5832
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5836
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5841
		{
			yyVAL.str = ""
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5845
		{
			yyVAL.str = " header"
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5850
		{
			yyVAL.str = ""
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5854
		{
			yyVAL.str = " manifest on"
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5858
		{
			yyVAL.str = " manifest off"
		}
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5863
		{
			yyVAL.str = ""
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5867
		{
			yyVAL.str = " overwrite on"
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5871
		{
			yyVAL.str = " overwrite off"
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5877
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5882
		{
			yyVAL.str = ""
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5886
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5892
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5896
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5902
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5906
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5911
		{
			yyVAL.str = ""
		}
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5915
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5921
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5925
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5931
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5935
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5939
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5944
		{
			yyVAL.str = ""
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5948
		{
			yyVAL.str = " optionally"
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5961
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5965
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5969
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5973
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5977
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5983
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5987
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5991
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5995
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6004
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6010
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6014
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6020
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6024
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6030
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6045
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6049
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6055
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6061
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6065
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6071
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6075
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6079
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6083
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6087
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6095
		{
			yyVAL.str = "charset"
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6122
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6124
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6127
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6129
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6132
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6134
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6137
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6139
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6142
		{
			yyVAL.empty = struct{}{}
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6144
		{
			yyVAL.empty = struct{}{}
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6146
		{
			yyVAL.empty = struct{}{}
		}
	case 1233:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6150
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6159
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6164
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6166
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6170
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6176
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6180
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6187
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6193
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6197
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6203
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6207
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6214
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6725
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6734
		{
			decNesting(yylex)
		}
	case 1737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6739
		{
			skipToEnd(yylex)
		}
	case 1738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6744
		{
			skipToEnd(yylex)
		}
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6748
		{
			skipToEnd(yylex)
		}
	case 1740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6752
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
