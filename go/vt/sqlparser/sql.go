// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const GROUP_CONCAT = 57768
const SEPARATOR = 57769
const TIMESTAMPADD = 57770
const TIMESTAMPDIFF = 57771
const WEIGHT_STRING = 57772
const LTRIM = 57773
const RTRIM = 57774
const TRIM = 57775
const JSON_ARRAY = 57776
const JSON_OBJECT = 57777
const JSON_QUOTE = 57778
const JSON_DEPTH = 57779
const JSON_TYPE = 57780
const JSON_LENGTH = 57781
const JSON_VALID = 57782
const JSON_ARRAY_APPEND = 57783
const JSON_ARRAY_INSERT = 57784
const JSON_INSERT = 57785
const JSON_MERGE = 57786
const JSON_MERGE_PATCH = 57787
const JSON_MERGE_PRESERVE = 57788
const JSON_REMOVE = 57789
const JSON_REPLACE = 57790
const JSON_SET = 57791
const JSON_UNQUOTE = 57792
const REGEXP_INSTR = 57793
const REGEXP_LIKE = 57794
const REGEXP_REPLACE = 57795
const REGEXP_SUBSTR = 57796
const EXTRACTVALUE = 57797
const MATCH = 57798
const AGAINST = 57799
const BOOLEAN = 57800
const LANGUAGE = 57801
const WITH = 57802
const QUERY = 57803
const EXPANSION = 57804
const WITHOUT = 57805
const VALIDATION = 57806
const UNUSED = 57807
const ARRAY = 57808
const BYTE = 57809
const CUME_DIST = 57810
const DESCRIPTION = 57811
const DENSE_RANK = 57812
const EMPTY = 57813
const EXCEPT = 57814
const FIRST_VALUE = 57815
const GROUPING = 57816
const GROUPS = 57817
const JSON_TABLE = 57818
const LAG = 57819
const LAST_VALUE = 57820
const LATERAL = 57821
const LEAD = 57822
const NTH_VALUE = 57823
const NTILE = 57824
const OF = 57825
const OVER = 57826
const PERCENT_RANK = 57827
const RANK = 57828
const RECURSIVE = 57829
const ROW_NUMBER = 57830
const SYSTEM = 57831
const WINDOW = 57832
const ACTIVE = 57833
const ADMIN = 57834
const AUTOEXTEND_SIZE = 57835
const BUCKETS = 57836
const CLONE = 57837
const COLUMN_FORMAT = 57838
const COMPONENT = 57839
const DEFINITION = 57840
const ENFORCED = 57841
const ENGINE_ATTRIBUTE = 57842
const EXCLUDE = 57843
const FOLLOWING = 57844
const GEOMCOLLECTION = 57845
const GET_MASTER_PUBLIC_KEY = 57846
const HISTOGRAM = 57847
const HISTORY = 57848
const INACTIVE = 57849
const INVISIBLE = 57850
const LOCKED = 57851
const MASTER_COMPRESSION_ALGORITHMS = 57852
const MASTER_PUBLIC_KEY_PATH = 57853
const MASTER_TLS_CIPHERSUITES = 57854
const MASTER_ZSTD_COMPRESSION_LEVEL = 57855
const NESTED = 57856
const NETWORK_NAMESPACE = 57857
const NOWAIT = 57858
const NULLS = 57859
const OJ = 57860
const OLD = 57861
const OPTIONAL = 57862
const ORDINALITY = 57863
const ORGANIZATION = 57864
const OTHERS = 57865
const PARTIAL = 57866
const PATH = 57867
const PERSIST = 57868
const PERSIST_ONLY = 57869
const PRECEDING = 57870
const PRIVILEGE_CHECKS_USER = 57871
const PROCESS = 57872
const RANDOM = 57873
const REFERENCE = 57874
const REQUIRE_ROW_FORMAT = 57875
const RESOURCE = 57876
const RESPECT = 57877
const RESTART = 57878
const RETAIN = 57879
const REUSE = 57880
const ROLE = 57881
const SECONDARY = 57882
const SECONDARY_ENGINE = 57883
const SECONDARY_ENGINE_ATTRIBUTE = 57884
const SECONDARY_LOAD = 57885
const SECONDARY_UNLOAD = 57886
const SIMPLE = 57887
const SKIP = 57888
const SRID = 57889
const THREAD_PRIORITY = 57890
const TIES = 57891
const UNBOUNDED = 57892
const VCPU = 57893
const VISIBLE = 57894
const RETURNING = 57895
const FORMAT = 57896
const TREE = 57897
const VITESS = 57898
const TRADITIONAL = 57899
const LOCAL = 57900
const LOW_PRIORITY = 57901
const NO_WRITE_TO_BINLOG = 57902
const LOGS = 57903
const ERROR = 57904
const GENERAL = 57905
const HOSTS = 57906
const OPTIMIZER_COSTS = 57907
const USER_RESOURCES = 57908
const SLOW = 57909
const CHANNEL = 57910
const RELAY = 57911
const EXPORT = 57912
const CURRENT = 57913
const ROW = 57914
const ROWS = 57915
const AVG_ROW_LENGTH = 57916
const CONNECTION = 57917
const CHECKSUM = 57918
const DELAY_KEY_WRITE = 57919
const ENCRYPTION = 57920
const ENGINE = 57921
const INSERT_METHOD = 57922
const MAX_ROWS = 57923
const MIN_ROWS = 57924
const PACK_KEYS = 57925
const PASSWORD = 57926
const FIXED = 57927
const DYNAMIC = 57928
const COMPRESSED = 57929
const REDUNDANT = 57930
const COMPACT = 57931
const ROW_FORMAT = 57932
const STATS_AUTO_RECALC = 57933
const STATS_PERSISTENT = 57934
const STATS_SAMPLE_PAGES = 57935
const STORAGE = 57936
const MEMORY = 57937
const DISK = 57938
const PARTITIONS = 57939
const LINEAR = 57940
const RANGE = 57941
const LIST = 57942
const SUBPARTITION = 57943
const SUBPARTITIONS = 57944
const HASH = 57945

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"EXTRACTVALUE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	621, 145,
	-2, 153,
	-1, 48,
	132, 153,
	173, 153,
	335, 153,
	-2, 498,
	-1, 55,
	35, 739,
	235, 739,
	246, 739,
	281, 753,
	282, 753,
	-2, 741,
	-1, 60,
	237, 766,
	-2, 764,
	-1, 114,
	234, 1374,
	-2, 119,
	-1, 116,
	1, 146,
	621, 146,
	-2, 153,
	-1, 127,
	133, 384,
	240, 384,
	-2, 487,
	-1, 146,
	132, 153,
	173, 153,
	335, 153,
	-2, 507,
	-1, 724,
	218, 1395,
	-2, 1391,
	-1, 725,
	218, 1396,
	-2, 1392,
	-1, 801,
	59, 834,
	-2, 849,
	-1, 838,
	148, 1812,
	-2, 112,
	-1, 839,
	148, 1649,
	-2, 113,
	-1, 845,
	148, 1733,
	-2, 1368,
	-1, 995,
	148, 1575,
	-2, 1365,
	-1, 1036,
	245, 41,
	250, 41,
	-2, 395,
	-1, 1120,
	1, 554,
	621, 554,
	-2, 153,
	-1, 1370,
	59, 835,
	-2, 854,
	-1, 1371,
	59, 836,
	-2, 855,
	-1, 1424,
	132, 153,
	173, 153,
	335, 153,
	-2, 434,
	-1, 1503,
	133, 384,
	240, 384,
	-2, 487,
	-1, 1512,
	245, 42,
	250, 42,
	-2, 396,
	-1, 1829,
	218, 1400,
	-2, 1394,
	-1, 1920,
	132, 153,
	173, 153,
	335, 153,
	-2, 435,
	-1, 1927,
	25, 174,
	-2, 176,
	-1, 2189,
	87, 39,
	-2, 891,
	-1, 2246,
	77, 94,
	87, 94,
	-2, 911,
	-1, 2314,
	596, 666,
	-2, 640,
	-1, 2469,
	49, 1335,
	-2, 1329,
	-1, 2710,
	87, 39,
	-2, 892,
	-1, 2748,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 883,
	-1, 3065,
	596, 666,
	-2, 654,
	-1, 3155,
	22, 1735,
	32, 1735,
	174, 1735,
	257, 1735,
	315, 1735,
	316, 1735,
	317, 1735,
	318, 1735,
	319, 1735,
	320, 1735,
	321, 1735,
	323, 1735,
	324, 1735,
	325, 1735,
	326, 1735,
	327, 1735,
	328, 1735,
	329, 1735,
	330, 1735,
	331, 1735,
	332, 1735,
	333, 1735,
	334, 1735,
	336, 1735,
	338, 1735,
	339, 1735,
	340, 1735,
	341, 1735,
	342, 1735,
	343, 1735,
	344, 1735,
	345, 1735,
	346, 1735,
	349, 1735,
	350, 1735,
	351, 1735,
	352, 1735,
	353, 1735,
	354, 1735,
	355, 1735,
	356, 1735,
	357, 1735,
	475, 1735,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 45634

var yyAct = [...]int{
	724, 733, 2852, 3227, 2853, 2854, 3046, 3239, 727, 3133,
	637, 3196, 3153, 3197, 1427, 3098, 726, 2686, 2825, 1870,
	1917, 3121, 2412, 2524, 2618, 2531, 3030, 2130, 1183, 2581,
	1850, 3, 2982, 2572, 2482, 2586, 2583, 702, 37, 816,
	1348, 2812, 2582, 2580, 2585, 2584, 3028, 2150, 2485, 1852,
	703, 186, 2880, 794, 186, 2177, 585, 186, 2601, 2431,
	3018, 2539, 600, 1385, 186, 2486, 1987, 2217, 2600, 2719,
	620, 2483, 186, 2713, 2885, 2374, 2411, 2410, 700, 646,
	701, 2603, 1874, 1890, 2739, 2470, 2240, 186, 2204, 2480,
	2705, 2639, 2279, 618, 2357, 616, 617, 1950, 2623, 1481,
	2311, 998, 1955, 2018, 1975, 2280, 1906, 2281, 612, 600,
	2229, 2210, 600, 186, 600, 798, 1895, 802, 36, 1894,
	2196, 2179, 1823, 1816, 1372, 817, 38, 843, 1721, 1731,
	155, 796, 1044, 1528, 1790, 819, 1974, 840, 1882, 1161,
	2349, 1957, 141, 1679, 2034, 1996, 2273, 1026, 1132, 2248,
	1031, 1416, 1394, 629, 1897, 1628, 91, 1352, 1269, 624,
	1789, 1510, 1204, 95, 1742, 1698, 1517, 1034, 1624, 96,
	1005, 1608, 1415, 1002, 1037, 1972, 1006, 1032, 1946, 1399,
	1033, 1875, 1413, 808, 1786, 1236, 1181, 159, 1175, 1476,
	119, 117, 118, 1502, 98, 124, 830, 125, 803, 1633,
	806, 1116, 1842, 76, 607, 97, 804, 1276, 85, 89,
	1272, 3228, 1989, 1990, 1991, 2591, 2813, 2569, 3083, 1989,
	2302, 3055, 2333, 2332, 2032, 2768, 2304, 8, 2588, 2805,
	1593, 3180, 824, 7, 829, 120, 6, 556, 87, 90,
	805, 77, 126, 2365, 3084, 2591, 87, 810, 2366, 3078,
	3079, 589, 739, 740, 741, 1847, 1848, 87, 739, 740,
	741, 1048, 999, 2857, 87, 2857, 1686, 1685, 1684, 1683,
	608, 1682, 1681, 2589, 188, 189, 190, 1073, 1701, 102,
	1664, 797, 795, 610, 1673, 611, 3174, 1083, 2175, 2466,
	844, 837, 1024, 2675, 811, 2595, 1047, 2324, 2022, 3134,
	1015, 2206, 1023, 2589, 120, 3200, 818, 1022, 1021, 1020,
	2435, 3184, 3250, 3182, 1010, 1074, 1077, 1078, 3195, 3218,
	104, 105, 1379, 108, 2691, 2595, 114, 2690, 2327, 183,
	1205, 3031, 551, 2151, 1691, 2640, 2978, 3183, 1826, 3181,
	3079, 1089, 2021, 2977, 1072, 78, 1071, 2020, 2856, 1205,
	2856, 3247, 790, 791, 792, 793, 2818, 78, 801, 2819,
	80, 3131, 3231, 3074, 3209, 2826, 2076, 3122, 2015, 2220,
	78, 3130, 120, 589, 704, 78, 3073, 1966, 2373, 3158,
	704, 2657, 1491, 2521, 2522, 2176, 832, 833, 1912, 1913,
	2520, 2341, 182, 2364, 2221, 2340, 3163, 2257, 2073, 1417,
	2256, 1418, 1960, 2258, 1911, 1019, 2592, 1125, 1126, 1178,
	3161, 1151, 788, 787, 3047, 1878, 121, 2527, 143, 3167,
	3168, 3060, 2269, 87, 2898, 1930, 1929, 2541, 2542, 164,
	1849, 2074, 1156, 1157, 3162, 87, 2592, 1215, 1139, 1128,
	1152, 2716, 1168, 1140, 1170, 1145, 1139, 2400, 87, 589,
	2620, 1140, 589, 87, 590, 589, 1215, 2213, 2214, 1138,
	153, 1137, 2528, 1017, 2648, 2646, 142, 598, 2305, 2312,
	1672, 596, 3201, 602, 2624, 2046, 2043, 2045, 2044, 2047,
	2048, 1356, 1167, 1169, 1115, 2350, 1997, 161, 2530, 162,
	2336, 1878, 1014, 3202, 2040, 1016, 1090, 1583, 3008, 2052,
	3009, 2053, 2525, 2054, 2035, 130, 131, 152, 151, 181,
	1674, 1675, 1676, 2613, 1609, 1177, 3230, 1154, 1155, 2541,
	2542, 2614, 1068, 1121, 1172, 1153, 2526, 1158, 1160, 2352,
	1146, 2807, 2806, 2055, 2540, 2621, 1211, 1159, 1237, 1203,
	1096, 1584, 1095, 1585, 1959, 2622, 2543, 2037, 2039, 2041,
	2962, 186, 1046, 186, 1027, 1211, 186, 2803, 1028, 2532,
	2987, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1245,
	1247, 1248, 1057, 1614, 2000, 2861, 590, 3175, 1891, 1165,
	1055, 1018, 1028, 1166, 1495, 1066, 600, 1185, 600, 600,
	2038, 1065, 1019, 1171, 1011, 1064, 1063, 1062, 1061, 1876,
	1877, 1013, 1012, 600, 600, 2401, 1060, 1359, 147, 128,
	154, 135, 127, 1119, 148, 149, 1059, 1164, 1054, 1067,
	165, 2543, 1003, 3251, 2434, 3207, 2540, 1040, 1251, 171,
	136, 1625, 1003, 1003, 1039, 1973, 1197, 1001, 2543, 2562,
	831, 1516, 37, 2353, 139, 137, 132, 133, 134, 138,
	1017, 3243, 590, 1045, 2074, 590, 129, 2356, 590, 1039,
	1042, 1043, 2026, 1003, 1621, 140, 1070, 1036, 1040, 1191,
	2802, 1079, 1076, 2322, 2335, 1876, 1877, 1251, 1039, 1086,
	1087, 1088, 1075, 1091, 1092, 1093, 1094, 1489, 1035, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1135, 3054, 1141, 1142,
	1143, 1144, 2303, 2369, 1025, 1622, 1173, 2338, 1058, 1254,
	1255, 1256, 1257, 2019, 3136, 2271, 1056, 1046, 2717, 1262,
	3136, 1179, 1180, 2375, 1210, 1207, 1208, 1209, 1214, 1216,
	1213, 736, 1212, 2180, 2182, 3135, 156, 2529, 1515, 736,
	2306, 3135, 1206, 1210, 1207, 1208, 1209, 1214, 1216, 1213,
	1488, 1212, 2088, 1186, 1487, 1019, 1114, 736, 1018, 2593,
	2594, 1206, 1485, 1346, 1187, 1188, 555, 1963, 3072, 1615,
	550, 2017, 2597, 1616, 1617, 1258, 3043, 81, 186, 1149,
	2755, 2326, 600, 600, 1252, 1253, 2766, 2767, 1327, 2593,
	2594, 1595, 1594, 1596, 1597, 1598, 2348, 2735, 186, 2347,
	2253, 2855, 2597, 2855, 86, 2359, 2377, 1964, 2359, 3166,
	2358, 2075, 2216, 2358, 150, 1962, 86, 600, 1045, 1085,
	1118, 186, 1200, 1362, 1360, 2325, 600, 1366, 1198, 86,
	2161, 1199, 600, 798, 86, 77, 1841, 1403, 1321, 1130,
	2211, 1363, 1127, 1046, 1347, 1918, 1274, 1278, 1275, 1965,
	1136, 116, 144, 3165, 840, 145, 1124, 3241, 1251, 1961,
	3242, 1248, 3240, 2519, 813, 1613, 1176, 1162, 2988, 1634,
	3068, 111, 2387, 2386, 2385, 2379, 1134, 2383, 1069, 2378,
	2798, 2376, 2729, 1341, 2036, 157, 2381, 2295, 1618, 2533,
	1419, 1201, 169, 2537, 1046, 2380, 2393, 2181, 1743, 1743,
	2102, 2536, 3210, 1328, 1329, 1330, 1331, 1332, 1347, 1693,
	1695, 1696, 2382, 2384, 1364, 1220, 1117, 1046, 95, 2009,
	1365, 2014, 1703, 2009, 96, 1219, 1220, 2012, 1046, 2894,
	2773, 1018, 1353, 1694, 177, 2538, 1704, 1249, 1250, 1702,
	2534, 112, 2772, 2004, 1045, 2535, 1525, 1524, 1514, 98,
	1039, 1042, 1043, 1057, 1003, 1055, 2013, 3203, 1036, 1040,
	2011, 3100, 2756, 2016, 1404, 3036, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 1414, 3245, 1148,
	1379, 1350, 176, 178, 179, 180, 3252, 1747, 186, 2970,
	1150, 1748, 1477, 795, 1361, 1045, 1381, 2969, 1384, 797,
	1049, 1039, 1486, 2960, 3101, 1051, 1221, 844, 3037, 1052,
	1050, 1610, 1163, 1611, 1635, 2845, 1612, 1133, 1045, 1409,
	1410, 2844, 2780, 1049, 1039, 600, 3204, 1512, 1051, 1045,
	1053, 1084, 1052, 1050, 2779, 1521, 1120, 2769, 2570, 1523,
	1221, 2558, 1526, 1527, 600, 600, 2832, 600, 2833, 600,
	600, 2277, 600, 600, 600, 600, 600, 600, 1241, 1242,
	1243, 1244, 1246, 1245, 1247, 1248, 1558, 1559, 1237, 600,
	1367, 3253, 1603, 186, 1564, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1246, 1245, 1247, 1248, 835, 2276, 1221, 2131,
	186, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1245,
	1247, 1248, 1221, 600, 1969, 186, 1239, 1240, 1241, 1242,
	1243, 1244, 1246, 1245, 1247, 1248, 1623, 1604, 1221, 600,
	1601, 186, 1588, 3214, 1379, 1587, 1508, 1243, 1244, 1246,
	1245, 1247, 1248, 2080, 2081, 2082, 1602, 186, 1218, 1578,
	1219, 1220, 1221, 1586, 186, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1223, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 600, 1501, 1590, 1518, 1518, 739, 740, 741,
	1561, 1576, 1218, 1570, 1219, 1220, 600, 600, 1530, 1237,
	1531, 2368, 1533, 1535, 1600, 2750, 1539, 1541, 1543, 1545,
	1547, 188, 189, 190, 186, 2763, 1520, 1522, 1567, 1566,
	1519, 1484, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246,
	1245, 1247, 1248, 1498, 1565, 1499, 1511, 1497, 1537, 182,
	1218, 1221, 1219, 1220, 1557, 3212, 1379, 1560, 1589, 2395,
	3063, 188, 189, 190, 1218, 2260, 1219, 1220, 1221, 3062,
	3040, 3039, 600, 121, 1728, 1728, 3038, 2965, 1630, 2950,
	1218, 1562, 1219, 1220, 2949, 1734, 164, 1388, 2893, 1726,
	1726, 1883, 1884, 2891, 2841, 1725, 1729, 1636, 1637, 2777,
	600, 600, 2762, 1699, 1218, 2625, 1219, 1220, 188, 189,
	190, 1641, 1985, 1221, 1638, 1490, 1626, 2561, 1648, 1649,
	1650, 1642, 2560, 1644, 1645, 1646, 1647, 1221, 120, 2262,
	1651, 1022, 1021, 1020, 3145, 1379, 2286, 1389, 1819, 2274,
	1697, 1343, 1663, 2030, 161, 2654, 162, 2029, 600, 1707,
	1221, 1706, 1787, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 181, 1640, 1873, 1855,
	1827, 1221, 188, 189, 190, 186, 1983, 1665, 1661, 1631,
	600, 1662, 1599, 1218, 1591, 1219, 1220, 1221, 188, 189,
	190, 1221, 1669, 1670, 1818, 1221, 3143, 1379, 1820, 1581,
	1218, 1577, 1219, 1220, 186, 94, 1700, 600, 1573, 1572,
	1844, 1379, 1571, 1390, 1174, 734, 1787, 186, 1817, 2617,
	1190, 600, 1379, 1860, 2995, 1861, 186, 1221, 186, 2994,
	186, 186, 600, 3141, 1379, 600, 2954, 2119, 92, 1705,
	188, 189, 190, 2953, 1981, 1218, 600, 1219, 1220, 93,
	1221, 1744, 1827, 2824, 3017, 1379, 2202, 3229, 2313, 1218,
	840, 1219, 1220, 840, 1379, 92, 1831, 1832, 1927, 1829,
	3015, 1379, 94, 2218, 3012, 1379, 93, 165, 2998, 1379,
	3191, 1379, 1218, 101, 1219, 1220, 171, 188, 189, 190,
	2202, 3128, 95, 2218, 100, 2291, 99, 1828, 96, 2202,
	3108, 600, 1926, 1218, 1379, 1219, 1220, 2728, 1976, 1977,
	1978, 1379, 95, 1980, 1982, 1984, 1893, 1866, 96, 1218,
	2010, 1219, 1220, 1218, 1217, 1219, 1220, 1218, 600, 1219,
	1220, 1379, 2730, 2701, 600, 1521, 2202, 3104, 1521, 2481,
	1521, 1936, 1937, 1938, 1939, 2226, 2008, 1922, 3091, 1379,
	2728, 1829, 1931, 3096, 1932, 1933, 1934, 1935, 810, 1218,
	1854, 1219, 1220, 87, 1379, 2728, 1492, 1493, 1494, 3067,
	1942, 1943, 1944, 1945, 1904, 1921, 2202, 3056, 2009, 1888,
	1221, 600, 1218, 600, 1219, 1220, 101, 1868, 1998, 600,
	600, 2816, 3053, 1952, 2671, 1379, 1925, 100, 2202, 99,
	1886, 2973, 1379, 156, 1958, 1909, 2226, 1378, 94, 2202,
	2961, 725, 2695, 844, 1908, 2671, 844, 2549, 1730, 1221,
	2816, 1379, 2198, 1924, 1735, 1736, 1923, 186, 100, 1995,
	2202, 2814, 1568, 1569, 186, 2454, 1392, 94, 1574, 1575,
	1968, 186, 186, 1772, 1910, 186, 2089, 186, 2009, 1379,
	2733, 1379, 1217, 1379, 186, 2124, 1379, 2551, 2550, 1048,
	2124, 186, 187, 2703, 1379, 187, 3171, 1379, 187, 1518,
	1953, 1948, 1949, 601, 2225, 187, 1971, 1967, 2547, 2548,
	1221, 1830, 2023, 187, 1833, 1834, 1979, 186, 2547, 2546,
	2226, 1379, 600, 2108, 1047, 2089, 2003, 2089, 187, 2006,
	2107, 2007, 1391, 2005, 2002, 1953, 2001, 2089, 1379, 2074,
	2334, 2025, 1218, 2009, 1219, 1220, 2514, 2027, 2028, 1992,
	601, 1480, 2316, 601, 187, 601, 2074, 2024, 1865, 2226,
	1221, 1764, 1753, 1754, 1755, 1756, 1766, 1757, 1758, 1759,
	1771, 1767, 1760, 1761, 1768, 1769, 1770, 1762, 1763, 1765,
	1881, 1218, 157, 1219, 1220, 1237, 2309, 2310, 1233, 169,
	1234, 2202, 2201, 2700, 1379, 1383, 1237, 1845, 2087, 1677,
	2033, 1221, 1620, 1699, 1235, 1249, 1250, 1232, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1246, 1245, 1247, 1248, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1246, 1245, 1247, 1248,
	1221, 177, 1411, 2093, 2249, 2065, 2066, 1480, 1479, 1221,
	2068, 2058, 1218, 2092, 1219, 1220, 800, 1221, 2085, 2069,
	2084, 1221, 2086, 1030, 2249, 1425, 1424, 1221, 1029, 3111,
	2984, 2098, 1221, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 1386, 1221, 2951, 2905, 2797, 176,
	178, 179, 180, 2619, 2698, 1379, 1221, 2794, 2775, 2663,
	2072, 2781, 1218, 1221, 1219, 1220, 186, 2250, 2662, 1482,
	1221, 1951, 2615, 2575, 186, 2571, 1700, 2252, 1728, 600,
	2317, 1221, 2282, 2652, 1379, 600, 1947, 2250, 2083, 1941,
	2172, 2985, 2673, 1726, 87, 1940, 600, 2074, 2190, 2186,
	2156, 1379, 1606, 1218, 2097, 1219, 1220, 1513, 1509, 1966,
	2139, 1379, 2782, 2783, 2784, 1478, 1379, 113, 1221, 2573,
	186, 2283, 1553, 2184, 186, 1119, 2101, 2740, 2741, 3205,
	2283, 1858, 1218, 3224, 1219, 1220, 3222, 1667, 3198, 2259,
	3051, 1218, 2222, 1219, 1220, 3077, 3003, 2958, 37, 1218,
	2743, 1219, 1220, 1218, 2799, 1219, 1220, 2242, 2117, 1218,
	2567, 1219, 1220, 2566, 1218, 2278, 1219, 1220, 1221, 2565,
	2481, 2296, 1221, 1554, 1555, 1556, 2203, 1218, 2059, 1219,
	1220, 1221, 2875, 2746, 2874, 1221, 2745, 600, 1218, 1829,
	1219, 1220, 2785, 186, 2500, 1218, 2499, 1219, 1220, 1668,
	186, 2669, 1218, 2503, 1219, 1220, 1221, 2501, 2504, 2212,
	3177, 2199, 2502, 1218, 600, 1219, 1220, 1828, 3129, 1872,
	1353, 600, 2734, 2174, 1387, 1521, 1521, 2459, 1864, 1549,
	600, 2458, 2873, 2308, 2886, 2270, 2272, 2721, 2241, 2786,
	2787, 2788, 2195, 2200, 2884, 2720, 2505, 2331, 2235, 2236,
	1218, 2660, 1219, 1220, 2215, 2659, 2471, 2473, 186, 186,
	186, 186, 186, 2724, 2171, 2474, 2330, 2247, 2170, 3035,
	2468, 2263, 1619, 786, 2545, 2251, 1550, 1551, 1552, 186,
	186, 1958, 2254, 814, 2267, 2287, 1081, 2261, 1080, 2169,
	92, 815, 2633, 2264, 2282, 186, 1739, 2099, 1221, 2362,
	1218, 93, 1219, 1220, 1218, 1189, 1219, 1220, 2275, 2323,
	1740, 121, 2726, 1218, 600, 1219, 1220, 1218, 2284, 1219,
	1220, 2231, 2234, 2235, 2236, 2232, 94, 2233, 2237, 2292,
	3237, 2740, 2741, 2297, 2298, 2299, 2293, 92, 1218, 2563,
	1219, 1220, 2062, 3150, 94, 2329, 3052, 101, 93, 1883,
	1884, 1728, 2980, 1728, 2544, 1501, 1728, 2239, 100, 1221,
	99, 1728, 187, 1869, 187, 2051, 1726, 187, 1726, 94,
	2050, 1726, 600, 2392, 2049, 1819, 1726, 1819, 1221, 2706,
	2111, 2168, 600, 2158, 2159, 2457, 2318, 2319, 2388, 2328,
	822, 823, 2078, 2456, 100, 99, 3023, 601, 3022, 601,
	601, 3006, 2371, 2370, 600, 101, 2425, 2426, 2427, 2428,
	2443, 2351, 2892, 1221, 601, 601, 100, 1221, 99, 186,
	2890, 2436, 2354, 600, 2360, 2889, 2882, 2361, 2881, 2415,
	1218, 2418, 1219, 1220, 2795, 2438, 2419, 600, 2091, 2372,
	2725, 2723, 2389, 2576, 600, 600, 1993, 186, 186, 186,
	186, 186, 1496, 821, 2714, 1817, 2218, 1817, 1221, 186,
	101, 2167, 2865, 1221, 186, 2443, 2198, 186, 3225, 186,
	2402, 100, 186, 186, 186, 3226, 3225, 2478, 2109, 2406,
	2493, 802, 1856, 1405, 2461, 1396, 106, 107, 3226, 3041,
	2761, 1218, 2487, 1219, 1220, 812, 2154, 2513, 2437, 103,
	2439, 1366, 2242, 2442, 88, 2462, 1, 2765, 2559, 2413,
	1218, 2413, 1219, 1220, 2413, 3160, 568, 186, 1846, 2413,
	2449, 2420, 2421, 2422, 2423, 2424, 1221, 1351, 3199, 3156,
	600, 1221, 3157, 2450, 2451, 2452, 2460, 2453, 600, 2475,
	2476, 2148, 1592, 186, 2463, 1218, 2147, 1219, 1220, 1218,
	1582, 1219, 1220, 1221, 2827, 2515, 186, 2599, 2516, 1788,
	2981, 2579, 803, 1999, 2495, 2496, 2494, 2498, 2506, 2497,
	804, 2793, 1956, 1038, 186, 146, 1919, 186, 2492, 2517,
	1920, 1221, 2510, 2511, 3124, 110, 996, 2634, 95, 1221,
	1218, 109, 1219, 1220, 96, 1218, 1041, 1219, 1220, 187,
	2484, 1630, 2553, 601, 601, 2484, 1221, 2555, 2554, 2146,
	1221, 1380, 1382, 2523, 2145, 1147, 1994, 2817, 2268, 187,
	1928, 1431, 1429, 2607, 1430, 2606, 1221, 1428, 1433, 1432,
	2110, 2577, 2674, 1671, 1221, 597, 2144, 2238, 601, 2598,
	184, 1958, 187, 1420, 1221, 1397, 2687, 601, 1082, 2610,
	600, 558, 2552, 601, 2031, 564, 2668, 1263, 1218, 1666,
	1219, 1220, 2455, 1218, 2143, 1219, 1220, 2255, 2629, 2628,
	2626, 841, 2142, 1221, 834, 600, 186, 1857, 2188, 2489,
	2718, 2467, 2469, 2637, 2636, 1218, 2205, 1219, 1220, 2141,
	1221, 2472, 2578, 2140, 2465, 2641, 2642, 2644, 2643, 2689,
	2650, 2645, 2285, 2647, 3034, 2649, 2693, 2288, 2289, 2134,
	2883, 3109, 2265, 1218, 1393, 1219, 1220, 2133, 1221, 2694,
	2100, 1218, 1741, 1219, 1220, 1898, 2860, 2132, 1221, 2631,
	2632, 1692, 622, 621, 619, 186, 2191, 2219, 1218, 1224,
	1219, 1220, 1218, 728, 1219, 1220, 2178, 1221, 2712, 1406,
	2230, 1221, 2228, 2764, 2227, 2060, 2129, 1905, 1218, 2742,
	1219, 1220, 2707, 2708, 186, 2738, 1218, 3152, 1219, 1220,
	1900, 1896, 2197, 2128, 2715, 2722, 1218, 630, 1219, 1220,
	623, 2737, 615, 186, 692, 691, 186, 186, 186, 2758,
	2605, 2747, 2727, 3137, 2337, 2616, 600, 600, 2339, 2266,
	2612, 2127, 2744, 2753, 2754, 1218, 1202, 1219, 1220, 187,
	1369, 2125, 609, 1009, 1738, 2800, 2801, 2751, 2986, 3058,
	2077, 2752, 1218, 2656, 1219, 1220, 2607, 2759, 2606, 2760,
	2121, 1368, 1751, 1752, 2120, 3065, 2587, 2821, 2822, 2811,
	600, 600, 600, 600, 2568, 2314, 601, 1986, 63, 2776,
	1218, 2778, 1219, 1220, 41, 3029, 3097, 690, 687, 2862,
	1218, 2863, 1219, 1220, 2864, 601, 601, 2432, 601, 2433,
	601, 601, 3080, 601, 601, 601, 601, 601, 601, 1218,
	3081, 1219, 1220, 1218, 686, 1219, 1220, 3082, 1779, 604,
	601, 1728, 3173, 1728, 187, 2823, 2231, 2234, 2235, 2236,
	2232, 1193, 2233, 2237, 828, 32, 1726, 31, 1726, 30,
	29, 187, 28, 23, 22, 21, 2840, 20, 19, 25,
	18, 17, 1377, 1373, 601, 16, 187, 2590, 3194, 3236,
	186, 115, 50, 47, 45, 123, 122, 1374, 48, 44,
	601, 1122, 187, 42, 27, 2836, 26, 15, 14, 13,
	12, 11, 10, 9, 600, 2834, 600, 5, 187, 4,
	2878, 35, 1862, 1863, 1376, 187, 1375, 2848, 2849, 34,
	33, 2858, 1728, 1196, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 601, 2899, 24, 2, 1726, 2301, 1988,
	37, 0, 0, 2907, 0, 0, 0, 601, 601, 0,
	0, 2487, 0, 2901, 0, 2487, 2879, 0, 2888, 0,
	0, 2903, 2887, 1377, 1373, 187, 2897, 0, 600, 0,
	2895, 0, 0, 0, 0, 2556, 2557, 0, 1374, 0,
	0, 186, 0, 0, 600, 0, 0, 2959, 0, 2908,
	2909, 0, 0, 0, 0, 0, 0, 600, 0, 2413,
	0, 2413, 2911, 1370, 1371, 1376, 0, 1375, 0, 0,
	0, 0, 0, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2955, 2963, 2983, 0, 3000, 3001, 1728,
	2971, 1745, 2957, 2956, 0, 1746, 0, 0, 0, 0,
	0, 601, 601, 600, 1726, 2976, 2975, 600, 600, 0,
	3004, 0, 0, 0, 0, 0, 0, 0, 2484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 3005, 0, 0, 0, 0, 601,
	0, 0, 3007, 3033, 0, 3045, 3010, 0, 0, 0,
	0, 0, 3027, 0, 3026, 1380, 1843, 3024, 3025, 0,
	0, 0, 0, 3044, 0, 0, 187, 3042, 0, 2487,
	0, 601, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3048, 0, 0, 0, 0, 186, 0, 1867,
	0, 3050, 0, 0, 0, 187, 0, 0, 601, 0,
	0, 0, 0, 0, 0, 600, 186, 0, 187, 0,
	0, 0, 601, 0, 0, 0, 0, 187, 0, 187,
	0, 187, 187, 601, 3069, 0, 601, 0, 0, 0,
	0, 0, 3066, 3057, 0, 3064, 3061, 601, 37, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 0, 0, 3085, 0, 0,
	0, 0, 0, 0, 0, 3086, 0, 0, 3087, 0,
	2770, 2771, 0, 0, 0, 0, 0, 0, 600, 600,
	0, 1970, 601, 0, 3095, 0, 3102, 0, 0, 0,
	0, 0, 0, 0, 3110, 0, 0, 0, 3107, 3112,
	37, 3138, 600, 3139, 0, 3115, 2983, 3125, 0, 601,
	3123, 3120, 3117, 3132, 0, 601, 186, 600, 3116, 3114,
	3119, 3118, 2804, 0, 0, 0, 2808, 2809, 2810, 0,
	0, 0, 0, 3148, 0, 0, 0, 0, 0, 0,
	0, 0, 3169, 3159, 0, 3164, 3151, 0, 0, 0,
	0, 0, 0, 3138, 3179, 3139, 0, 0, 0, 0,
	600, 0, 601, 3176, 601, 0, 0, 0, 0, 0,
	601, 601, 0, 0, 0, 3188, 0, 0, 0, 3193,
	0, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 3206, 600, 0, 0, 3208, 1728, 0, 187, 0,
	0, 2484, 0, 0, 3217, 187, 0, 3216, 0, 3223,
	3221, 1726, 187, 187, 3219, 0, 187, 3220, 187, 3138,
	3232, 3139, 0, 0, 0, 187, 0, 3238, 0, 0,
	0, 0, 187, 3246, 3244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1728, 0, 0, 0, 0, 3255, 187, 3256,
	3257, 3001, 0, 601, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 3254, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2090, 164,
	0, 0, 2094, 2095, 2096, 0, 0, 0, 2966, 2967,
	2968, 0, 2104, 0, 0, 2105, 2106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 2112, 2113, 2114, 2115, 2116, 0, 2118, 0,
	0, 0, 0, 0, 2122, 0, 2123, 161, 0, 162,
	2126, 0, 0, 0, 0, 0, 0, 0, 2135, 2136,
	2137, 2138, 0, 0, 0, 1504, 1505, 152, 151, 181,
	0, 2149, 0, 2152, 2153, 0, 0, 0, 0, 0,
	2155, 2157, 0, 0, 0, 0, 0, 0, 2162, 2163,
	2164, 2165, 2166, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 2173, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 2185, 0, 0, 187, 0, 0, 0, 0,
	601, 0, 0, 0, 0, 0, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 187, 121, 0, 147, 1506,
	154, 0, 1503, 0, 148, 149, 0, 0, 0, 164,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 589, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 0,
	0, 0, 0, 586, 187, 0, 0, 161, 0, 162,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 0, 0, 0, 181,
	0, 0, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 0, 0, 0, 0, 0, 0, 613, 0,
	0, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 0, 0, 0, 0, 0, 187,
	187, 187, 187, 187, 0, 0, 156, 0, 0, 0,
	820, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 0, 0, 187, 0, 0, 0,
	0, 0, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 0, 577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2399, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 150, 0, 0, 0, 2414, 0,
	0, 0, 0, 0, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 601, 0, 0, 2440, 2441, 0, 0,
	0, 0, 144, 601, 0, 145, 557, 0, 559, 573,
	0, 592, 0, 591, 563, 0, 561, 565, 574, 566,
	0, 560, 0, 571, 0, 601, 562, 575, 576, 579,
	582, 583, 584, 580, 578, 157, 569, 593, 0, 0,
	187, 0, 169, 0, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 0,
	0, 2490, 0, 0, 0, 601, 601, 0, 187, 187,
	187, 187, 187, 0, 0, 0, 156, 0, 2508, 2509,
	187, 0, 0, 0, 177, 187, 0, 0, 187, 0,
	187, 0, 0, 187, 187, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 0,
	0, 0, 176, 178, 179, 180, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 0, 0, 0, 0, 0, 0, 0, 601,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 2635, 0, 0, 0, 0,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 2651, 2653, 2655,
	0, 0, 169, 0, 0, 587, 2661, 0, 0, 0,
	0, 2665, 2666, 2667, 0, 0, 0, 0, 2670, 0,
	588, 0, 0, 0, 2672, 0, 0, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 0, 0, 0,
	0, 601, 1448, 0, 177, 2692, 0, 0, 0, 0,
	2696, 0, 2697, 2699, 0, 2702, 2704, 0, 0, 0,
	0, 2709, 0, 0, 0, 0, 601, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 0,
	0, 0, 176, 178, 179, 180, 2731, 2732, 0, 0,
	2736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2748, 2749,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 1222, 0, 187, 187, 187,
	0, 0, 0, 0, 1436, 0, 0, 601, 601, 0,
	2913, 2915, 2914, 2924, 2925, 2926, 2927, 2928, 2929, 2930,
	652, 0, 0, 1270, 0, 0, 0, 0, 2815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 601, 601, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2837, 0,
	0, 0, 0, 0, 0, 0, 0, 1449, 0, 0,
	0, 0, 2846, 0, 0, 0, 2847, 0, 0, 0,
	0, 0, 2851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2859, 0, 613, 0, 0, 0,
	0, 0, 2866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 1462, 1465, 1466, 1467, 1468,
	1469, 1470, 0, 1471, 1472, 1473, 1474, 1475, 1450, 1451,
	1452, 1453, 1434, 1435, 1463, 601, 1437, 601, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 0, 0, 1447,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 601,
	0, 1354, 0, 0, 735, 79, 0, 0, 0, 2972,
	0, 0, 187, 0, 0, 601, 0, 0, 2979, 0,
	0, 0, 2919, 2920, 0, 0, 0, 0, 601, 0,
	0, 0, 0, 0, 0, 0, 2989, 2990, 2991, 0,
	2992, 2993, 0, 0, 0, 0, 2996, 0, 2997, 0,
	2999, 3002, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 603, 3011, 3013, 3014, 3016,
	3019, 0, 0, 789, 601, 1464, 0, 0, 601, 601,
	0, 0, 799, 705, 79, 647, 709, 649, 706, 707,
	0, 645, 648, 708, 0, 0, 0, 0, 0, 0,
	0, 0, 799, 0, 0, 0, 0, 601, 3049, 0,
	0, 0, 0, 0, 1004, 0, 0, 0, 1008, 0,
	650, 651, 2912, 2916, 2917, 2918, 2921, 2922, 2923, 2931,
	2933, 675, 2932, 2934, 2935, 2936, 2939, 2940, 2941, 2942,
	2937, 2938, 2943, 2944, 2945, 2946, 2947, 2948, 0, 0,
	0, 0, 0, 601, 0, 0, 0, 0, 0, 1483,
	710, 0, 711, 0, 0, 715, 0, 0, 187, 717,
	716, 0, 718, 689, 688, 0, 0, 712, 713, 0,
	714, 0, 0, 0, 3071, 0, 601, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3092, 0, 0, 0,
	0, 0, 3093, 3094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3105, 601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 601,
	601, 0, 0, 0, 0, 78, 39, 40, 80, 0,
	0, 0, 0, 0, 0, 1632, 3140, 3142, 3144, 0,
	0, 0, 0, 601, 0, 84, 0, 0, 0, 43,
	69, 70, 0, 67, 71, 0, 0, 187, 601, 0,
	0, 3172, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 0, 0, 0, 0, 0, 0, 0, 0,
	3190, 601, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1687, 1688,
	1689, 1690, 0, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3211, 3213, 3215, 0, 0, 0, 0,
	0, 601, 0, 601, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 1733, 0, 3235, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3248, 3249, 1773, 1774, 1775, 1776, 1777, 1778, 1780,
	1784, 1785, 613, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 0, 1815, 0, 1821,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 1837, 1838, 1839, 1840, 46,
	49, 52, 51, 54, 0, 66, 0, 0, 75, 72,
	613, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 83, 82, 0, 0, 64, 65, 53, 0,
	0, 0, 0, 0, 73, 74, 0, 0, 0, 0,
	0, 0, 1879, 1880, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 0, 1129, 0, 0, 1131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1916, 0, 0, 0, 57, 58, 0, 59, 60, 61,
	62, 3192, 0, 0, 0, 0, 0, 0, 0, 0,
	1182, 1448, 1182, 1182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 799, 1259, 1260, 1261,
	0, 1264, 0, 1265, 1266, 1267, 1268, 0, 1271, 1273,
	1273, 0, 1273, 1277, 1277, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 0, 0, 1320, 0,
	1322, 1323, 1324, 1325, 1326, 81, 0, 0, 0, 0,
	1277, 1277, 1277, 1277, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 1334, 1335, 1336, 1337, 0,
	0, 0, 0, 1436, 0, 0, 0, 0, 0, 0,
	0, 1349, 0, 0, 86, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	799, 0, 0, 0, 799, 0, 0, 0, 0, 0,
	799, 0, 0, 0, 0, 0, 1449, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 693, 1504, 1505, 152, 151,
	181, 0, 0, 0, 1462, 1465, 1466, 1467, 1468, 1469,
	1470, 0, 1471, 1472, 1473, 1474, 1475, 1450, 1451, 1452,
	1453, 1434, 1435, 1463, 2103, 1437, 0, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 0, 0, 1447, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2187, 0, 0, 737, 738, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	1506, 154, 0, 1503, 842, 148, 149, 1000, 0, 1007,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1395, 0, 1464, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 0, 0, 0,
	0, 0, 0, 0, 1563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 1607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 0, 0, 0, 1182, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	1182, 1182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 145, 0, 0, 0,
	2367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2390, 2391,
	0, 0, 0, 2394, 0, 0, 157, 0, 2396, 2397,
	2398, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	2403, 2404, 2405, 0, 0, 1791, 2407, 0, 2408, 2409,
	0, 0, 0, 2416, 2417, 0, 0, 0, 0, 0,
	0, 1791, 1791, 1791, 1791, 1791, 613, 613, 613, 613,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2444, 2445,
	2446, 2447, 2448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	0, 0, 0, 176, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2512, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 1889, 0, 1892,
	0, 0, 1680, 0, 1899, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 842, 0, 842, 842, 0, 2574, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 1192, 1194,
	0, 729, 737, 738, 739, 740, 741, 730, 732, 0,
	0, 0, 731, 0, 0, 1008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 734, 742, 743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1008, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2608, 2609, 0, 0, 2658, 0, 0, 0,
	0, 0, 0, 2664, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 1680, 0,
	0, 0, 0, 0, 0, 2042, 0, 0, 0, 0,
	0, 0, 2056, 2057, 0, 0, 2061, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 613,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1357, 1358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2070, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1401, 0, 0, 0, 2079, 0, 0, 0,
	0, 842, 0, 0, 0, 0, 0, 1421, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2820, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 705, 0, 0,
	709, 0, 706, 707, 0, 0, 0, 708, 0, 0,
	0, 0, 0, 2838, 0, 2839, 0, 0, 0, 0,
	2842, 2843, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2850, 0, 0, 0, 0, 0,
	0, 0, 2160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2867, 0, 0, 2868,
	0, 2869, 2870, 0, 2871, 0, 2183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 799, 0, 0, 0, 0, 0,
	2896, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2904, 0, 0, 2906, 2223, 2224, 0, 0, 0,
	1000, 0, 0, 0, 2243, 2246, 2244, 2245, 2910, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 1529,
	1529, 0, 1529, 0, 1529, 1529, 2952, 1538, 1529, 1529,
	1529, 1529, 1529, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 1344, 1000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2294, 0, 0, 0, 1605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 694, 0, 0, 0,
	0, 0, 3032, 613, 0, 0, 0, 842, 0, 2342,
	2343, 2344, 2345, 2346, 0, 0, 0, 0, 0, 0,
	0, 842, 842, 0, 0, 0, 0, 0, 0, 0,
	1680, 2355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2363, 185, 0, 0,
	554, 0, 0, 595, 0, 0, 0, 0, 0, 0,
	554, 0, 0, 0, 0, 0, 0, 0, 554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 809, 0, 613, 0, 1722, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 827,
	0, 827, 0, 0, 0, 0, 0, 1344, 0, 554,
	0, 0, 0, 0, 0, 1749, 1750, 0, 0, 3075,
	0, 0, 0, 0, 0, 0, 2429, 613, 0, 0,
	0, 0, 0, 3088, 0, 0, 3089, 0, 3090, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 842, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1899, 0, 0, 0, 0, 0, 0,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 2488, 0, 79, 0,
	0, 1899, 1899, 1899, 1899, 1899, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2243, 799,
	0, 0, 1871, 1899, 0, 0, 1899, 0, 0, 0,
	0, 0, 3170, 0, 0, 0, 1401, 0, 0, 842,
	0, 0, 0, 0, 0, 0, 0, 842, 0, 0,
	842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1000, 3185, 0, 3186, 0, 3187, 0, 2564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2596,
	0, 0, 0, 0, 2602, 0, 0, 0, 0, 2604,
	0, 0, 0, 0, 0, 0, 0, 2611, 0, 0,
	0, 0, 0, 0, 0, 0, 1007, 0, 0, 0,
	0, 0, 0, 0, 0, 2627, 0, 0, 2630, 0,
	0, 0, 0, 3233, 0, 3234, 0, 0, 0, 0,
	0, 0, 0, 1000, 87, 0, 0, 0, 2638, 1007,
	729, 737, 738, 739, 740, 741, 730, 732, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 734, 742, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1000, 0, 1722, 0,
	0, 0, 0, 0, 1722, 1722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2608, 2609, 0, 0, 0, 0, 2711, 0, 0,
	0, 0, 0, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 737, 738, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 0, 0, 1899,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2757, 0, 0, 0, 0, 2071, 0, 0,
	0, 0, 0, 0, 0, 2774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2789, 0, 0, 2790, 2791, 2792,
	0, 0, 0, 0, 0, 0, 0, 554, 0, 554,
	0, 0, 554, 0, 0, 0, 0, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 842, 0, 0,
	2872, 0, 2876, 2877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	2192, 0, 0, 0, 0, 2488, 0, 79, 0, 2488,
	0, 2207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2964, 0,
	0, 0, 0, 0, 554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2290, 0, 809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 0, 1871,
	0, 0, 0, 0, 0, 0, 2315, 0, 0, 0,
	0, 0, 0, 0, 0, 2320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1333,
	1334, 1335, 1336, 1337, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 0, 0, 0, 3059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 3070, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 1344, 0, 0,
	1344, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2430, 0, 0,
	0, 0, 0, 0, 554, 0, 0, 842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1529,
	0, 0, 3106, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2464, 0,
	0, 0, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 842, 0, 0, 0, 1344, 0, 0, 2491,
	1529, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1345, 0, 0, 1345, 0, 0, 0, 0, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3189, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 0, 1000, 0, 0, 1344, 0,
	554, 0, 0, 1871, 0, 0, 0, 0, 0, 1652,
	1653, 554, 554, 554, 554, 554, 554, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 827, 0, 0, 0,
	0, 0, 827, 827, 0, 2688, 0, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2464, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 827, 1629, 827,
	827, 827, 827, 827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 0, 0, 0, 0, 0, 0,
	1629, 0, 554, 0, 554, 0, 554, 1907, 0, 0,
	0, 1871, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2828, 2829, 2830, 2831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 2900,
	0, 2902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 0, 0, 0, 0, 0, 0,
	554, 0, 0, 0, 0, 0, 0, 554, 554, 0,
	0, 554, 0, 2063, 0, 0, 0, 0, 0, 0,
	554, 0, 0, 1871, 0, 0, 0, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 842, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3020, 0,
	0, 0, 3020, 3020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 827, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 827, 827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 554, 0, 0, 0, 0, 0, 0, 0,
	1579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3099, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 0, 3103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 554, 0, 0, 0,
	554, 0, 0, 842, 842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	0, 0, 0, 0, 0, 0, 2300, 0, 0, 0,
	0, 0, 0, 0, 0, 3099, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2688, 0, 3154, 0, 0,
	0, 0, 0, 0, 554, 554, 554, 554, 554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 1345, 0,
	0, 1345, 0, 0, 0, 0, 1345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1345, 0, 0,
	0, 0, 1345, 554, 554, 554, 554, 554, 0, 0,
	0, 0, 0, 0, 0, 2507, 0, 0, 0, 0,
	554, 0, 0, 1579, 0, 554, 0, 0, 554, 2518,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 0, 0, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	0, 0, 554, 554, 554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 0, 1345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1345, 0,
	0, 365, 0, 0, 978, 963, 471, 0, 906, 981,
	875, 894, 991, 897, 900, 942, 854, 920, 383, 891,
	847, 879, 849, 886, 850, 877, 908, 253, 874, 965,
	924, 980, 338, 250, 856, 880, 397, 896, 197, 944,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 987, 342, 930, 0, 455, 368,
	0, 0, 1579, 910, 969, 918, 956, 905, 943, 864,
	929, 982, 892, 939, 983, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	3126, 0, 3127, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 888, 936, 977, 889, 938, 248, 297, 255,
	247, 475, 988, 968, 853, 917, 976, 0, 0, 216,
	979, 912, 0, 941, 0, 994, 848, 932, 0, 851,
	855, 990, 972, 883, 258, 0, 0, 0, 0, 0,
	0, 0, 909, 919, 953, 957, 903, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 928, 0, 0, 0,
	860, 852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 907, 0, 0, 0, 0, 863,
	0, 882, 954, 0, 846, 280, 857, 369, 240, 0,
	961, 971, 904, 511, 975, 902, 901, 948, 861, 967,
	895, 337, 859, 306, 192, 212, 0, 893, 379, 422,
	432, 966, 878, 887, 238, 885, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 927, 946, 429, 343,
	480, 413, 491, 512, 513, 246, 373, 502, 469, 508,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 518, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	507, 207, 1184, 506, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 873, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 962,
	474, 492, 503, 510, 516, 517, 519, 520, 521, 522,
	523, 525, 524, 374, 290, 453, 307, 344, 951, 993,
	392, 431, 227, 496, 454, 868, 872, 866, 933, 867,
	922, 923, 869, 984, 985, 986, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 0, 955, 862, 0, 870, 871,
	0, 964, 973, 974, 549, 354, 444, 493, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 423, 424, 425, 426, 275,
	926, 191, 208, 340, 989, 415, 271, 527, 505, 501,
	198, 210, 865, 245, 876, 884, 0, 890, 898, 899,
	911, 913, 914, 915, 916, 934, 935, 937, 945, 947,
	950, 952, 959, 970, 992, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 509, 514, 439, 282, 490,
	515, 0, 349, 925, 931, 351, 264, 285, 296, 940,
	504, 460, 214, 427, 273, 236, 958, 960, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 921, 949, 347, 472, 473, 292, 365, 0,
	0, 978, 963, 471, 0, 906, 981, 875, 894, 991,
	897, 900, 942, 854, 920, 383, 891, 847, 879, 849,
	886, 850, 877, 908, 253, 874, 965, 924, 980, 338,
	250, 856, 880, 397, 896, 197, 944, 445, 237, 348,
	345, 478, 265, 256, 252, 235, 293, 355, 395, 465,
	389, 987, 342, 930, 0, 455, 368, 0, 0, 0,
	910, 969, 918, 956, 905, 943, 864, 929, 982, 892,
	939, 983, 299, 234, 301, 196, 380, 456, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 888,
	936, 977, 889, 938, 248, 297, 255, 247, 475, 988,
	968, 853, 917, 976, 0, 0, 216, 979, 912, 0,
	941, 0, 994, 848, 932, 0, 851, 855, 990, 972,
	883, 258, 0, 0, 0, 0, 0, 0, 0, 909,
	919, 953, 957, 903, 0, 0, 0, 0, 0, 2519,
	0, 881, 0, 928, 0, 0, 0, 860, 852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 907, 0, 0, 0, 0, 863, 0, 882, 954,
	0, 846, 280, 857, 369, 240, 0, 961, 971, 904,
	511, 975, 902, 901, 948, 861, 967, 895, 337, 859,
	306, 192, 212, 0, 893, 379, 422, 432, 966, 878,
	887, 238, 885, 430, 393, 494, 220, 267, 419, 399,
	428, 406, 270, 927, 946, 429, 343, 480, 413, 491,
	512, 513, 246, 373, 502, 469, 508, 526, 213, 243,
	387, 462, 497, 452, 366, 476, 477, 305, 451, 278,
	195, 341, 518, 211, 438, 229, 218, 482, 500, 272,
	417, 203, 464, 489, 226, 442, 0, 0, 528, 205,
	487, 461, 362, 302, 303, 204, 0, 418, 251, 276,
	241, 382, 484, 485, 239, 529, 215, 507, 207, 1184,
	506, 375, 479, 488, 363, 353, 206, 486, 361, 352,
	308, 327, 328, 263, 287, 411, 346, 412, 288, 371,
	370, 372, 199, 498, 0, 200, 0, 457, 499, 530,
	221, 222, 224, 873, 262, 266, 274, 277, 283, 284,
	291, 339, 386, 410, 408, 414, 962, 474, 492, 503,
	510, 516, 517, 519, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 951, 993, 392, 431, 227,
	496, 454, 868, 872, 866, 933, 867, 922, 923, 869,
	984, 985, 986, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 955, 862, 0, 870, 871, 0, 964, 973,
	974, 549, 354, 444, 493, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 423, 424, 425, 426, 275, 926, 191, 208,
	340, 989, 415, 271, 527, 505, 501, 198, 210, 865,
	245, 876, 884, 0, 890, 898, 899, 911, 913, 914,
	915, 916, 934, 935, 937, 945, 947, 950, 952, 959,
	970, 992, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 376, 377, 378, 381, 384,
	385, 388, 390, 391, 394, 398, 402, 403, 404, 405,
	407, 409, 416, 421, 433, 434, 435, 436, 437, 440,
	441, 446, 447, 448, 449, 450, 458, 459, 463, 481,
	483, 495, 509, 514, 439, 282, 490, 515, 0, 349,
	925, 931, 351, 264, 285, 296, 940, 504, 460, 214,
	427, 273, 236, 958, 960, 202, 233, 217, 242, 257,
	260, 300, 360, 367, 396, 401, 279, 254, 231, 420,
	228, 443, 466, 467, 468, 470, 364, 249, 400, 921,
	949, 347, 472, 473, 292, 365, 0, 0, 978, 963,
	471, 0, 906, 981, 875, 894, 991, 897, 900, 942,
	854, 920, 383, 891, 847, 879, 849, 886, 850, 877,
	908, 253, 874, 965, 924, 980, 338, 250, 856, 880,
	397, 896, 197, 944, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 987, 342,
	930, 0, 455, 368, 0, 0, 0, 910, 969, 918,
	956, 905, 943, 864, 929, 982, 892, 939, 983, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 888, 936, 977, 889,
	938, 248, 297, 255, 247, 475, 988, 968, 853, 917,
	976, 0, 0, 216, 979, 912, 0, 941, 0, 994,
	848, 932, 0, 851, 855, 990, 972, 883, 258, 0,
	0, 0, 0, 0, 0, 0, 909, 919, 953, 957,
	903, 0, 0, 0, 0, 0, 2477, 0, 881, 0,
	928, 0, 0, 0, 860, 852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 907, 0,
	0, 0, 0, 863, 0, 882, 954, 0, 846, 280,
	857, 369, 240, 0, 961, 971, 904, 511, 975, 902,
	901, 948, 861, 967, 895, 337, 859, 306, 192, 212,
	0, 893, 379, 422, 432, 966, 878, 887, 238, 885,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	927, 946, 429, 343, 480, 413, 491, 512, 513, 246,
	373, 502, 469, 508, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 518,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 507, 207, 1184, 506, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	873, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 962, 474, 492, 503, 510, 516, 517,
	519, 520, 521, 522, 523, 525, 524, 374, 290, 453,
	307, 344, 951, 993, 392, 431, 227, 496, 454, 868,
	872, 866, 933, 867, 922, 923, 869, 984, 985, 986,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 0, 955,
	862, 0, 870, 871, 0, 964, 973, 974, 549, 354,
	444, 493, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 423,
	424, 425, 426, 275, 926, 191, 208, 340, 989, 415,
	271, 527, 505, 501, 198, 210, 865, 245, 876, 884,
	0, 890, 898, 899, 911, 913, 914, 915, 916, 934,
	935, 937, 945, 947, 950, 952, 959, 970, 992, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 509,
	514, 439, 282, 490, 515, 0, 349, 925, 931, 351,
	264, 285, 296, 940, 504, 460, 214, 427, 273, 236,
	958, 960, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 921, 949, 347, 472,
	473, 292, 365, 0, 0, 978, 963, 471, 0, 906,
	981, 875, 894, 991, 897, 900, 942, 854, 920, 383,
	891, 847, 879, 849, 886, 850, 877, 908, 253, 874,
	965, 924, 980, 338, 250, 856, 880, 397, 896, 197,
	944, 445, 237, 348, 345, 478, 265, 256, 252, 235,
	293, 355, 395, 465, 389, 987, 342, 930, 0, 455,
	368, 0, 0, 0, 910, 969, 918, 956, 905, 943,
	864, 929, 982, 892, 939, 983, 299, 234, 301, 196,
	380, 456, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 323, 332, 331, 312, 313, 315, 317,
	322, 329, 335, 888, 936, 977, 889, 938, 248, 297,
	255, 247, 475, 988, 968, 853, 917, 976, 0, 0,
	216, 979, 912, 0, 941, 0, 994, 848, 932, 0,
	851, 855, 990, 972, 883, 258, 0, 0, 0, 0,
	0, 0, 0, 909, 919, 953, 957, 903, 0, 0,
	0, 0, 0, 1887, 0, 881, 0, 928, 0, 0,
	0, 860, 852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 907, 0, 0, 0, 0,
	863, 0, 882, 954, 0, 846, 280, 857, 369, 240,
	0, 961, 971, 904, 511, 975, 902, 901, 948, 861,
	967, 895, 337, 859, 306, 192, 212, 0, 893, 379,
	422, 432, 966, 878, 887, 238, 885, 430, 393, 494,
	220, 267, 419, 399, 428, 406, 270, 927, 946, 429,
	343, 480, 413, 491, 512, 513, 246, 373, 502, 469,
	508, 526, 213, 243, 387, 462, 497, 452, 366, 476,
	477, 305, 451, 278, 195, 341, 518, 211, 438, 229,
	218, 482, 500, 272, 417, 203, 464, 489, 226, 442,
	0, 0, 528, 205, 487, 461, 362, 302, 303, 204,
	0, 418, 251, 276, 241, 382, 484, 485, 239, 529,
	215, 507, 207, 1184, 506, 375, 479, 488, 363, 353,
	206, 486, 361, 352, 308, 327, 328, 263, 287, 411,
	346, 412, 288, 371, 370, 372, 199, 498, 0, 200,
	0, 457, 499, 530, 221, 222, 224, 873, 262, 266,
	274, 277, 283, 284, 291, 339, 386, 410, 408, 414,
	962, 474, 492, 503, 510, 516, 517, 519, 520, 521,
	522, 523, 525, 524, 374, 290, 453, 307, 344, 951,
	993, 392, 431, 227, 496, 454, 868, 872, 866, 933,
	867, 922, 923, 869, 984, 985, 986, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 0, 955, 862, 0, 870,
	871, 0, 964, 973, 974, 549, 354, 444, 493, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 423, 424, 425, 426,
	275, 926, 191, 208, 340, 989, 415, 271, 527, 505,
	501, 198, 210, 865, 245, 876, 884, 0, 890, 898,
	899, 911, 913, 914, 915, 916, 934, 935, 937, 945,
	947, 950, 952, 959, 970, 992, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 289,
	294, 295, 298, 304, 350, 356, 357, 358, 359, 376,
	377, 378, 381, 384, 385, 388, 390, 391, 394, 398,
	402, 403, 404, 405, 407, 409, 416, 421, 433, 434,
	435, 436, 437, 440, 441, 446, 447, 448, 449, 450,
	458, 459, 463, 481, 483, 495, 509, 514, 439, 282,
	490, 515, 0, 349, 925, 931, 351, 264, 285, 296,
	940, 504, 460, 214, 427, 273, 236, 958, 960, 202,
	233, 217, 242, 257, 260, 300, 360, 367, 396, 401,
	279, 254, 231, 420, 228, 443, 466, 467, 468, 470,
	364, 249, 400, 921, 949, 347, 472, 473, 292, 365,
	0, 0, 978, 963, 471, 0, 906, 981, 875, 894,
	991, 897, 900, 942, 854, 920, 383, 891, 847, 879,
	849, 886, 850, 877, 908, 253, 874, 965, 924, 980,
	338, 250, 856, 880, 397, 896, 197, 944, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 987, 342, 930, 0, 455, 368, 0, 0,
	0, 910, 969, 918, 956, 905, 943, 864, 929, 982,
	892, 939, 983, 299, 234, 301, 196, 380, 456, 269,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	888, 936, 977, 889, 938, 248, 297, 255, 247, 475,
	988, 968, 853, 917, 976, 0, 0, 216, 979, 912,
	0, 941, 0, 994, 848, 932, 0, 851, 855, 990,
	972, 883, 258, 0, 0, 0, 0, 0, 0, 0,
	909, 919, 953, 957, 903, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 928, 0, 0, 0, 860, 852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 907, 0, 0, 0, 0, 863, 0, 882,
	954, 0, 846, 280, 857, 369, 240, 0, 961, 971,
	904, 511, 975, 902, 901, 948, 861, 967, 895, 337,
	859, 306, 192, 212, 0, 893, 379, 422, 432, 966,
	878, 887, 238, 885, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 927, 946, 429, 343, 480, 413,
	491, 512, 513, 246, 373, 502, 469, 508, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 518, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 507, 207,
	1184, 506, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 873, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 962, 474, 492,
	503, 510, 516, 517, 519, 520, 521, 522, 523, 525,
	524, 374, 290, 453, 307, 344, 951, 993, 392, 431,
	227, 496, 454, 868, 872, 866, 933, 867, 922, 923,
	869, 984, 985, 986, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 0, 955, 862, 0, 870, 871, 0, 964,
	973, 974, 549, 354, 444, 493, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 423, 424, 425, 426, 275, 926, 191,
	208, 340, 989, 415, 271, 527, 505, 501, 198, 210,
	865, 245, 876, 884, 0, 890, 898, 899, 911, 913,
	914, 915, 916, 934, 935, 937, 945, 947, 950, 952,
	959, 970, 992, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 509, 514, 439, 282, 490, 515, 0,
	349, 925, 931, 351, 264, 285, 296, 940, 504, 460,
	214, 427, 273, 236, 958, 960, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	921, 949, 347, 472, 473, 292, 365, 0, 0, 978,
	963, 471, 0, 906, 981, 875, 894, 991, 897, 900,
	942, 854, 920, 383, 891, 847, 879, 849, 886, 850,
	877, 908, 253, 874, 965, 924, 980, 338, 250, 856,
	880, 397, 896, 197, 944, 445, 237, 348, 345, 478,
	265, 256, 252, 235, 293, 355, 395, 465, 389, 987,
	342, 930, 0, 455, 368, 0, 0, 0, 910, 969,
	918, 956, 905, 943, 864, 929, 982, 892, 939, 983,
	299, 234, 301, 196, 380, 456, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 888, 936, 977,
	889, 938, 248, 297, 255, 247, 475, 988, 968, 853,
	917, 976, 0, 0, 216, 979, 912, 0, 941, 0,
	994, 848, 932, 0, 851, 855, 990, 972, 883, 258,
	0, 0, 0, 0, 0, 0, 0, 909, 919, 953,
	957, 903, 0, 0, 0, 0, 0, 0, 0, 881,
	0, 928, 0, 0, 0, 860, 852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 907,
	0, 0, 0, 0, 863, 0, 882, 954, 0, 846,
	280, 857, 369, 240, 0, 961, 971, 904, 511, 975,
	902, 901, 948, 861, 967, 895, 337, 859, 306, 192,
	212, 0, 893, 379, 422, 432, 966, 878, 887, 238,
	885, 430, 393, 494, 220, 267, 419, 399, 428, 406,
	270, 927, 946, 429, 343, 480, 413, 491, 512, 513,
	246, 373, 502, 469, 508, 526, 213, 243, 387, 462,
	497, 452, 366, 476, 477, 305, 451, 278, 195, 341,
	518, 211, 438, 229, 218, 482, 500, 272, 417, 203,
	464, 489, 226, 442, 0, 0, 528, 205, 487, 461,
	362, 302, 303, 204, 0, 418, 251, 276, 241, 382,
	484, 485, 239, 529, 215, 507, 207, 1184, 506, 375,
	479, 488, 363, 353, 206, 486, 361, 352, 308, 327,
	328, 263, 287, 411, 346, 412, 288, 371, 370, 372,
	199, 498, 0, 200, 0, 457, 499, 530, 221, 222,
	224, 873, 262, 266, 274, 277, 283, 284, 291, 339,
	386, 410, 408, 414, 962, 474, 492, 503, 510, 516,
	517, 519, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 951, 993, 392, 431, 227, 496, 454,
	868, 872, 866, 933, 867, 922, 923, 869, 984, 985,
	986, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	955, 862, 0, 870, 871, 0, 964, 973, 974, 549,
	354, 444, 493, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	423, 424, 425, 426, 275, 926, 191, 208, 340, 989,
	415, 271, 527, 505, 501, 198, 210, 865, 245, 876,
	884, 0, 890, 898, 899, 911, 913, 914, 915, 916,
	934, 935, 937, 945, 947, 950, 952, 959, 970, 992,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 376, 377, 378, 381, 384, 385, 388,
	390, 391, 394, 398, 402, 403, 404, 405, 407, 409,
	416, 421, 433, 434, 435, 436, 437, 440, 441, 446,
	447, 448, 449, 450, 458, 459, 463, 481, 483, 495,
	509, 514, 439, 282, 490, 515, 0, 349, 925, 931,
	351, 264, 285, 296, 940, 504, 460, 214, 427, 273,
	236, 958, 960, 202, 233, 217, 242, 257, 260, 300,
	360, 367, 396, 401, 279, 254, 231, 420, 228, 443,
	466, 467, 468, 470, 364, 249, 400, 921, 949, 347,
	472, 473, 292, 365, 0, 0, 978, 963, 471, 0,
	906, 981, 875, 894, 991, 897, 900, 942, 854, 920,
	383, 891, 847, 879, 849, 886, 850, 877, 908, 253,
	874, 965, 924, 980, 338, 250, 856, 880, 397, 896,
	197, 944, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 987, 342, 930, 0,
	455, 368, 0, 0, 0, 910, 969, 918, 956, 905,
	943, 864, 929, 982, 892, 939, 983, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 888, 936, 977, 889, 938, 248,
	297, 255, 247, 475, 988, 968, 853, 917, 976, 0,
	0, 995, 979, 912, 0, 941, 0, 994, 848, 932,
	0, 851, 855, 990, 972, 883, 258, 0, 0, 0,
	0, 0, 0, 0, 909, 919, 953, 957, 903, 0,
	0, 0, 0, 0, 0, 0, 881, 0, 928, 0,
	0, 0, 860, 852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 907, 0, 0, 0,
	0, 863, 0, 882, 954, 0, 846, 280, 857, 369,
	240, 0, 961, 971, 904, 511, 975, 902, 901, 948,
	861, 967, 895, 337, 859, 306, 192, 212, 0, 893,
	379, 422, 432, 966, 878, 887, 238, 885, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 927, 946,
	429, 343, 480, 413, 491, 512, 513, 246, 373, 502,
	469, 508, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 518, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 507, 207, 858, 506, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 873, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 962, 474, 492, 503, 510, 516, 517, 519, 520,
	521, 522, 523, 525, 524, 845, 839, 838, 307, 344,
	951, 993, 392, 431, 227, 496, 454, 868, 872, 866,
	933, 867, 922, 923, 869, 984, 985, 986, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 0, 955, 862, 0,
	870, 871, 0, 964, 973, 974, 549, 354, 444, 493,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 423, 424, 425,
	426, 275, 926, 191, 208, 340, 989, 415, 271, 527,
	505, 501, 198, 210, 865, 245, 876, 884, 0, 890,
	898, 899, 911, 913, 914, 915, 916, 934, 935, 937,
	945, 947, 950, 952, 959, 970, 992, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 509, 514, 439,
	282, 490, 515, 0, 349, 925, 931, 351, 264, 285,
	296, 940, 504, 460, 214, 427, 273, 236, 958, 960,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 921, 949, 347, 472, 473, 292,
	365, 0, 0, 978, 963, 471, 0, 906, 981, 875,
	894, 991, 897, 900, 942, 854, 920, 383, 891, 847,
	879, 849, 886, 850, 877, 908, 253, 874, 965, 924,
	980, 338, 250, 856, 880, 397, 896, 197, 944, 445,
	237, 348, 345, 478, 265, 256, 252, 235, 293, 355,
	395, 465, 389, 987, 342, 930, 0, 455, 368, 0,
	0, 0, 910, 969, 918, 956, 905, 943, 864, 929,
	982, 892, 939, 983, 299, 234, 301, 196, 380, 456,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 888, 936, 977, 889, 938, 248, 297, 255, 247,
	475, 988, 968, 853, 917, 976, 0, 0, 995, 979,
	912, 0, 941, 0, 994, 848, 932, 0, 851, 855,
	990, 972, 883, 258, 0, 0, 0, 0, 0, 0,
	0, 909, 919, 953, 957, 903, 0, 0, 0, 0,
	0, 0, 0, 881, 0, 928, 0, 0, 0, 860,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 907, 0, 0, 0, 0, 863, 0,
	882, 954, 0, 846, 280, 857, 369, 240, 0, 961,
	971, 904, 511, 975, 902, 901, 948, 861, 967, 895,
	337, 859, 306, 192, 212, 0, 893, 379, 422, 432,
	966, 878, 887, 238, 885, 430, 393, 494, 220, 267,
	419, 399, 428, 406, 270, 927, 946, 429, 343, 480,
	413, 491, 512, 513, 246, 373, 502, 469, 508, 526,
	213, 243, 387, 462, 497, 452, 366, 476, 477, 305,
	451, 278, 195, 341, 518, 211, 438, 229, 218, 482,
	500, 272, 417, 203, 464, 1412, 226, 442, 0, 0,
	528, 205, 487, 461, 362, 302, 303, 204, 0, 418,
	251, 276, 241, 382, 484, 485, 239, 529, 215, 507,
	207, 858, 506, 375, 479, 488, 363, 353, 206, 486,
	361, 352, 308, 327, 328, 263, 287, 411, 346, 412,
	288, 371, 370, 372, 199, 498, 0, 200, 0, 457,
	499, 530, 221, 222, 224, 873, 262, 266, 274, 277,
	283, 284, 291, 339, 386, 410, 408, 414, 962, 474,
	492, 503, 510, 516, 517, 519, 520, 521, 522, 523,
	525, 524, 845, 839, 838, 307, 344, 951, 993, 392,
	431, 227, 496, 454, 868, 872, 866, 933, 867, 922,
	923, 869, 984, 985, 986, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 0, 955, 862, 0, 870, 871, 0,
	964, 973, 974, 549, 354, 444, 493, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 423, 424, 425, 426, 275, 926,
	191, 208, 340, 989, 415, 271, 527, 505, 501, 198,
	210, 865, 245, 876, 884, 0, 890, 898, 899, 911,
	913, 914, 915, 916, 934, 935, 937, 945, 947, 950,
	952, 959, 970, 992, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 376, 377, 378,
	381, 384, 385, 388, 390, 391, 394, 398, 402, 403,
	404, 405, 407, 409, 416, 421, 433, 434, 435, 436,
	437, 440, 441, 446, 447, 448, 449, 450, 458, 459,
	463, 481, 483, 495, 509, 514, 439, 282, 490, 515,
	0, 349, 925, 931, 351, 264, 285, 296, 940, 504,
	460, 214, 427, 273, 236, 958, 960, 202, 233, 217,
	242, 257, 260, 300, 360, 367, 396, 401, 279, 254,
	231, 420, 228, 443, 466, 467, 468, 470, 364, 249,
	400, 921, 949, 347, 472, 473, 292, 365, 0, 0,
	978, 963, 471, 0, 906, 981, 875, 894, 991, 897,
	900, 942, 854, 920, 383, 891, 847, 879, 849, 886,
	850, 877, 908, 253, 874, 965, 924, 980, 338, 250,
	856, 880, 397, 896, 197, 944, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	987, 342, 930, 0, 455, 368, 0, 0, 0, 910,
	969, 918, 956, 905, 943, 864, 929, 982, 892, 939,
	983, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 888, 936,
	977, 889, 938, 248, 297, 255, 247, 475, 988, 968,
	853, 917, 976, 0, 0, 995, 979, 912, 0, 941,
	0, 994, 848, 932, 0, 851, 855, 990, 972, 883,
	258, 0, 0, 0, 0, 0, 0, 0, 909, 919,
	953, 957, 903, 0, 0, 0, 0, 0, 0, 0,
	881, 0, 928, 0, 0, 0, 860, 852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	907, 0, 0, 0, 0, 863, 0, 882, 954, 0,
	846, 280, 857, 369, 240, 0, 961, 971, 904, 511,
	975, 902, 901, 948, 861, 967, 895, 337, 859, 306,
	192, 212, 0, 893, 379, 422, 432, 966, 878, 887,
	238, 885, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 927, 946, 429, 343, 480, 413, 491, 512,
	513, 246, 373, 502, 469, 508, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 518, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 836, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 507, 207, 858, 506,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 873, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 962, 474, 492, 503, 510,
	516, 517, 519, 520, 521, 522, 523, 525, 524, 845,
	839, 838, 307, 344, 951, 993, 392, 431, 227, 496,
	454, 868, 872, 866, 933, 867, 922, 923, 869, 984,
	985, 986, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 955, 862, 0, 870, 871, 0, 964, 973, 974,
	549, 354, 444, 493, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 423, 424, 425, 426, 275, 926, 191, 208, 340,
	989, 415, 271, 527, 505, 501, 198, 210, 865, 245,
	876, 884, 0, 890, 898, 899, 911, 913, 914, 915,
	916, 934, 935, 937, 945, 947, 950, 952, 959, 970,
	992, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 509, 514, 439, 282, 490, 515, 0, 349, 925,
	931, 351, 264, 285, 296, 940, 504, 460, 214, 427,
	273, 236, 958, 960, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 921, 949,
	347, 472, 473, 292, 365, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 1824, 0, 631, 0, 0, 0,
	253, 636, 0, 0, 0, 338, 250, 0, 1825, 397,
	0, 197, 0, 445, 237, 348, 345, 478, 265, 256,
	252, 235, 293, 355, 395, 465, 389, 643, 342, 0,
	0, 455, 368, 0, 0, 0, 0, 0, 638, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 234,
	301, 196, 380, 456, 269, 0, 87, 0, 0, 188,
	189, 190, 729, 737, 738, 739, 740, 741, 730, 732,
	0, 0, 225, 731, 232, 654, 656, 655, 665, 666,
	667, 668, 669, 670, 671, 652, 734, 742, 743, 0,
	248, 297, 255, 247, 475, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	614, 628, 0, 642, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 625, 626, 825, 0, 0, 0, 698,
	0, 627, 0, 0, 635, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 704, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	369, 240, 0, 697, 0, 0, 511, 0, 0, 695,
	0, 0, 0, 0, 337, 0, 306, 192, 212, 0,
	0, 379, 422, 432, 0, 0, 0, 238, 0, 430,
	393, 494, 220, 267, 419, 399, 428, 406, 270, 0,
	0, 429, 343, 480, 413, 491, 512, 513, 246, 373,
	502, 469, 508, 526, 213, 243, 387, 462, 497, 452,
	366, 476, 477, 305, 451, 278, 195, 341, 518, 211,
	438, 229, 218, 482, 500, 272, 417, 203, 464, 489,
	226, 442, 0, 0, 528, 205, 487, 461, 362, 302,
	303, 204, 0, 418, 251, 276, 241, 382, 484, 485,
	239, 529, 215, 507, 207, 0, 506, 375, 479, 488,
	363, 353, 206, 486, 361, 352, 308, 660, 661, 263,
	287, 411, 346, 412, 288, 371, 370, 372, 199, 498,
	0, 200, 0, 457, 499, 530, 221, 222, 224, 0,
	262, 266, 274, 277, 283, 284, 291, 339, 386, 410,
	408, 414, 0, 474, 492, 503, 510, 516, 517, 519,
	520, 521, 522, 523, 525, 524, 374, 290, 453, 307,
	344, 0, 0, 392, 431, 227, 496, 454, 705, 696,
	647, 709, 649, 706, 707, 644, 645, 648, 708, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 0, 699, 634,
	633, 0, 640, 641, 0, 650, 651, 653, 657, 658,
	659, 662, 663, 664, 672, 674, 675, 673, 676, 677,
	678, 681, 682, 683, 684, 679, 680, 685, 719, 720,
	721, 722, 723, 632, 191, 208, 340, 0, 415, 271,
	527, 505, 501, 198, 210, 710, 245, 711, 0, 0,
	715, 0, 0, 0, 717, 716, 0, 718, 689, 688,
	0, 0, 712, 713, 0, 714, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 350, 356, 357, 358,
	359, 376, 377, 378, 381, 384, 385, 388, 390, 391,
	394, 398, 402, 403, 404, 405, 407, 409, 416, 421,
	433, 434, 435, 436, 437, 440, 441, 446, 447, 448,
	449, 450, 458, 459, 463, 481, 483, 495, 509, 514,
	439, 282, 490, 515, 0, 349, 0, 0, 351, 264,
	285, 296, 0, 504, 460, 214, 427, 273, 236, 736,
	0, 202, 233, 217, 242, 257, 260, 300, 360, 367,
	396, 401, 279, 254, 231, 420, 228, 443, 466, 467,
	468, 470, 364, 249, 400, 0, 365, 347, 472, 473,
	292, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 631, 0,
	0, 0, 253, 636, 0, 0, 0, 338, 250, 0,
	0, 397, 0, 197, 0, 445, 237, 348, 345, 478,
	265, 256, 252, 235, 293, 355, 395, 465, 389, 643,
	342, 0, 0, 455, 368, 0, 0, 0, 0, 0,
	638, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 234, 301, 196, 380, 456, 269, 0, 87, 0,
	0, 188, 189, 190, 729, 737, 738, 739, 740, 741,
	730, 732, 0, 0, 225, 731, 232, 654, 656, 655,
	665, 666, 667, 668, 669, 670, 671, 652, 734, 742,
	743, 0, 248, 297, 255, 247, 475, 0, 0, 1781,
	1782, 1783, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 614, 628, 0, 642, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 625, 626, 0, 0, 0,
	0, 698, 0, 627, 0, 0, 635, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 369, 240, 0, 697, 0, 0, 511, 0,
	0, 695, 0, 0, 0, 0, 337, 0, 306, 192,
	212, 0, 0, 379, 422, 432, 0, 0, 0, 238,
	0, 430, 393, 494, 220, 267, 419, 399, 428, 406,
	270, 0, 0, 429, 343, 480, 413, 491, 512, 513,
	246, 373, 502, 469, 508, 526, 213, 243, 387, 462,
	497, 452, 366, 476, 477, 305, 451, 278, 195, 341,
	518, 211, 438, 229, 218, 482, 500, 272, 417, 203,
	464, 489, 226, 442, 0, 0, 528, 205, 487, 461,
	362, 302, 303, 204, 0, 418, 251, 276, 241, 382,
	484, 485, 239, 529, 215, 507, 207, 0, 506, 375,
	479, 488, 363, 353, 206, 486, 361, 352, 308, 660,
	661, 263, 287, 411, 346, 412, 288, 371, 370, 372,
	199, 498, 0, 200, 0, 457, 499, 530, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 291, 339,
	386, 410, 408, 414, 0, 474, 492, 503, 510, 516,
	517, 519, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 0, 0, 392, 431, 227, 496, 454,
	705, 696, 647, 709, 649, 706, 707, 644, 645, 648,
	708, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	699, 634, 633, 0, 640, 641, 0, 650, 651, 653,
	657, 658, 659, 662, 663, 664, 672, 674, 675, 673,
	676, 677, 678, 681, 682, 683, 684, 679, 680, 685,
	719, 720, 721, 722, 723, 632, 191, 208, 340, 0,
	415, 271, 527, 505, 501, 198, 210, 710, 245, 711,
	0, 0, 715, 0, 0, 0, 717, 716, 0, 718,
	689, 688, 0, 0, 712, 713, 0, 714, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 376, 377, 378, 381, 384, 385, 388,
	390, 391, 394, 398, 402, 403, 404, 405, 407, 409,
	416, 421, 433, 434, 435, 436, 437, 440, 441, 446,
	447, 448, 449, 450, 458, 459, 463, 481, 483, 495,
	509, 514, 439, 282, 490, 515, 0, 349, 0, 0,
	351, 264, 285, 296, 0, 504, 460, 214, 427, 273,
	236, 736, 0, 202, 233, 217, 242, 257, 260, 300,
	360, 367, 396, 401, 279, 254, 231, 420, 228, 443,
	466, 467, 468, 470, 364, 249, 400, 0, 365, 347,
	472, 473, 292, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 0, 0,
	631, 0, 0, 0, 253, 636, 0, 0, 0, 338,
	250, 0, 0, 397, 0, 197, 0, 445, 237, 348,
	345, 478, 265, 256, 252, 235, 293, 355, 395, 465,
	389, 643, 342, 0, 0, 455, 368, 0, 0, 0,
	0, 0, 638, 639, 0, 0, 0, 0, 0, 0,
	1914, 0, 299, 234, 301, 196, 380, 456, 269, 0,
	87, 0, 0, 188, 189, 190, 729, 737, 738, 739,
	740, 741, 730, 732, 0, 0, 225, 731, 232, 654,
	656, 655, 665, 666, 667, 668, 669, 670, 671, 652,
	734, 742, 743, 1915, 248, 297, 255, 247, 475, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 614, 628, 0, 642, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 625, 626, 0,
	0, 0, 0, 698, 0, 627, 0, 0, 635, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 369, 240, 0, 697, 0, 0,
	511, 0, 0, 695, 0, 0, 0, 0, 337, 0,
	306, 192, 212, 0, 0, 379, 422, 432, 0, 0,
	0, 238, 0, 430, 393, 494, 220, 267, 419, 399,
	428, 406, 270, 0, 0, 429, 343, 480, 413, 491,
	512, 513, 246, 373, 502, 469, 508, 526, 213, 243,
	387, 462, 497, 452, 366, 476, 477, 305, 451, 278,
	195, 341, 518, 211, 438, 229, 218, 482, 500, 272,
	417, 203, 464, 489, 226, 442, 0, 0, 528, 205,
	487, 461, 362, 302, 303, 204, 0, 418, 251, 276,
	241, 382, 484, 485, 239, 529, 215, 507, 207, 0,
	506, 375, 479, 488, 363, 353, 206, 486, 361, 352,
	308, 660, 661, 263, 287, 411, 346, 412, 288, 371,
	370, 372, 199, 498, 0, 200, 0, 457, 499, 530,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	291, 339, 386, 410, 408, 414, 0, 474, 492, 503,
	510, 516, 517, 519, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 0, 0, 392, 431, 227,
	496, 454, 705, 696, 647, 709, 649, 706, 707, 644,
	645, 648, 708, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 699, 634, 633, 0, 640, 641, 0, 650,
	651, 653, 657, 658, 659, 662, 663, 664, 672, 674,
	675, 673, 676, 677, 678, 681, 682, 683, 684, 679,
	680, 685, 719, 720, 721, 722, 723, 632, 191, 208,
	340, 0, 415, 271, 527, 505, 501, 198, 210, 710,
	245, 711, 0, 0, 715, 0, 0, 0, 717, 716,
	0, 718, 689, 688, 0, 0, 712, 713, 0, 714,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 376, 377, 378, 381, 384,
	385, 388, 390, 391, 394, 398, 402, 403, 404, 405,
	407, 409, 416, 421, 433, 434, 435, 436, 437, 440,
	441, 446, 447, 448, 449, 450, 458, 459, 463, 481,
	483, 495, 509, 514, 439, 282, 490, 515, 0, 349,
	0, 0, 351, 264, 285, 296, 0, 504, 460, 214,
	427, 273, 236, 736, 0, 202, 233, 217, 242, 257,
	260, 300, 360, 367, 396, 401, 279, 254, 231, 420,
	228, 443, 466, 467, 468, 470, 364, 249, 400, 0,
	0, 347, 472, 473, 292, 365, 0, 0, 0, 78,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 631, 0, 0,
	0, 253, 636, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 643, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 638,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 87, 0, 0,
	188, 189, 190, 729, 737, 738, 739, 740, 741, 730,
	732, 0, 0, 225, 731, 232, 654, 656, 655, 665,
	666, 667, 668, 669, 670, 671, 652, 734, 742, 743,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 614, 628, 0, 642, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 626, 0, 0, 0, 0,
	698, 0, 627, 0, 0, 635, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 697, 0, 0, 511, 0, 0,
	695, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 512, 513, 246,
	373, 502, 469, 508, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 518,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 507, 207, 0, 506, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 660, 661,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 503, 510, 516, 517,
	519, 520, 521, 522, 523, 525, 524, 374, 290, 453,
	307, 344, 0, 0, 392, 431, 227, 496, 454, 705,
	696, 647, 709, 649, 706, 707, 644, 645, 648, 708,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 0, 699,
	634, 633, 0, 640, 641, 0, 650, 651, 653, 657,
	658, 659, 662, 663, 664, 672, 674, 675, 673, 676,
	677, 678, 681, 682, 683, 684, 679, 680, 685, 719,
	720, 721, 722, 723, 632, 191, 208, 340, 86, 415,
	271, 527, 505, 501, 198, 210, 710, 245, 711, 0,
	0, 715, 0, 0, 0, 717, 716, 0, 718, 689,
	688, 0, 0, 712, 713, 0, 714, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 509,
	514, 439, 282, 490, 515, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 504, 460, 214, 427, 273, 236,
	736, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 631,
	0, 0, 0, 253, 636, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	643, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 638, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 87,
	0, 0, 188, 189, 190, 729, 737, 738, 739, 740,
	741, 730, 732, 0, 0, 225, 731, 232, 654, 656,
	655, 665, 666, 667, 668, 669, 670, 671, 652, 734,
	742, 743, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 614, 628, 0, 642, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 625, 626, 0, 0,
	0, 0, 698, 0, 627, 0, 0, 635, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 697, 0, 0, 511,
	0, 0, 695, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 3113, 0, 429, 343, 480, 413, 491, 512,
	513, 246, 373, 502, 469, 508, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 518, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 507, 207, 0, 506,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	660, 661, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 503, 510,
	516, 517, 519, 520, 521, 522, 523, 525, 524, 374,
	290, 453, 307, 344, 0, 0, 392, 431, 227, 496,
	454, 705, 696, 647, 709, 649, 706, 707, 644, 645,
	648, 708, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 699, 634, 633, 0, 640, 641, 0, 650, 651,
	653, 657, 658, 659, 662, 663, 664, 672, 674, 675,
	673, 676, 677, 678, 681, 682, 683, 684, 679, 680,
	685, 719, 720, 721, 722, 723, 632, 191, 208, 340,
	0, 415, 271, 527, 505, 501, 198, 210, 710, 245,
	711, 0, 0, 715, 0, 0, 0, 717, 716, 0,
	718, 689, 688, 0, 0, 712, 713, 0, 714, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 509, 514, 439, 282, 490, 515, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 504, 460, 214, 427,
	273, 236, 736, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 631, 0, 0, 0, 253, 636, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 643, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 638, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 87, 0, 1379, 188, 189, 190, 729, 737, 738,
	739, 740, 741, 730, 732, 0, 0, 225, 731, 232,
	654, 656, 655, 665, 666, 667, 668, 669, 670, 671,
	652, 734, 742, 743, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 614, 628, 0, 642, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 625, 626,
	0, 0, 0, 0, 698, 0, 627, 0, 0, 635,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 697, 0,
	0, 511, 0, 0, 695, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 512, 513, 246, 373, 502, 469, 508, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 518, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 507, 207,
	0, 506, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 660, 661, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	503, 510, 516, 517, 519, 520, 521, 522, 523, 525,
	524, 374, 290, 453, 307, 344, 0, 0, 392, 431,
	227, 496, 454, 705, 696, 647, 709, 649, 706, 707,
	644, 645, 648, 708, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 0, 699, 634, 633, 0, 640, 641, 0,
	650, 651, 653, 657, 658, 659, 662, 663, 664, 672,
	674, 675, 673, 676, 677, 678, 681, 682, 683, 684,
	679, 680, 685, 719, 720, 721, 722, 723, 632, 191,
	208, 340, 0, 415, 271, 527, 505, 501, 198, 210,
	710, 245, 711, 0, 0, 715, 0, 0, 0, 717,
	716, 0, 718, 689, 688, 0, 0, 712, 713, 0,
	714, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 509, 514, 439, 282, 490, 515, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 504, 460,
	214, 427, 273, 236, 736, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 631, 0, 0, 0, 253, 636, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 643, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 638, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 87, 0, 0, 188, 189, 190, 729,
	737, 738, 739, 740, 741, 730, 732, 0, 0, 225,
	731, 232, 654, 656, 655, 665, 666, 667, 668, 669,
	670, 671, 652, 734, 742, 743, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 614, 628, 0,
	642, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	625, 626, 825, 0, 0, 0, 698, 0, 627, 0,
	0, 635, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	697, 0, 0, 511, 0, 0, 695, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 512, 513, 246, 373, 502, 469, 508,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 518, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	507, 207, 0, 506, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 660, 661, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 503, 510, 516, 517, 519, 520, 521, 522,
	523, 525, 524, 374, 290, 453, 307, 344, 0, 0,
	392, 431, 227, 496, 454, 705, 696, 647, 709, 649,
	706, 707, 644, 645, 648, 708, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 0, 699, 634, 633, 0, 640,
	641, 0, 650, 651, 653, 657, 658, 659, 662, 663,
	664, 672, 674, 675, 673, 676, 677, 678, 681, 682,
	683, 684, 679, 680, 685, 719, 720, 721, 722, 723,
	632, 191, 208, 340, 0, 415, 271, 527, 505, 501,
	198, 210, 710, 245, 711, 0, 0, 715, 0, 0,
	0, 717, 716, 0, 718, 689, 688, 0, 0, 712,
	713, 0, 714, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 509, 514, 439, 282, 490,
	515, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	504, 460, 214, 427, 273, 236, 736, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 631, 0, 0, 0, 253,
	636, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 643, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 638, 639, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 87, 0, 0, 188, 189,
	190, 729, 737, 738, 739, 740, 741, 730, 732, 0,
	0, 225, 731, 232, 654, 656, 655, 665, 666, 667,
	668, 669, 670, 671, 652, 734, 742, 743, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 614,
	628, 0, 642, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 625, 626, 0, 0, 0, 0, 698, 0,
	627, 0, 0, 635, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 697, 0, 0, 511, 0, 0, 695, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 512, 513, 246, 373, 502,
	469, 508, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 518, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 507, 207, 0, 506, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 660, 661, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 503, 510, 516, 517, 519, 520,
	521, 522, 523, 525, 524, 374, 290, 453, 307, 344,
	0, 0, 392, 431, 227, 496, 454, 705, 696, 647,
	709, 649, 706, 707, 644, 645, 648, 708, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 0, 699, 634, 633,
	0, 640, 641, 0, 650, 651, 653, 657, 658, 659,
	662, 663, 664, 672, 674, 675, 673, 676, 677, 678,
	681, 682, 683, 684, 679, 680, 685, 719, 720, 721,
	722, 723, 632, 191, 208, 340, 0, 415, 271, 527,
	505, 501, 198, 210, 710, 245, 711, 0, 0, 715,
	0, 0, 0, 717, 716, 0, 718, 689, 688, 0,
	0, 712, 713, 0, 714, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 509, 514, 439,
	282, 490, 515, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 504, 460, 214, 427, 273, 236, 736, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 631, 0, 0,
	0, 253, 636, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 643, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 638,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 87, 0, 0,
	188, 189, 190, 729, 737, 738, 739, 740, 741, 730,
	732, 0, 0, 225, 731, 232, 654, 656, 655, 665,
	666, 667, 668, 669, 670, 671, 652, 734, 742, 743,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 0, 642, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 626, 0, 0, 0, 0,
	698, 0, 627, 0, 0, 635, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 697, 0, 0, 511, 0, 0,
	695, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 512, 513, 246,
	373, 502, 469, 508, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 518,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 507, 207, 0, 506, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 660, 661,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 503, 510, 516, 517,
	519, 520, 521, 522, 523, 525, 524, 374, 290, 453,
	307, 344, 0, 0, 392, 431, 227, 496, 454, 705,
	696, 647, 709, 649, 706, 707, 644, 645, 648, 708,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 0, 699,
	634, 633, 0, 640, 641, 0, 650, 651, 653, 657,
	658, 659, 662, 663, 664, 672, 674, 675, 673, 676,
	677, 678, 681, 682, 683, 684, 679, 680, 685, 719,
	720, 721, 722, 723, 632, 191, 208, 340, 0, 415,
	271, 527, 505, 501, 198, 210, 710, 245, 711, 0,
	0, 715, 0, 0, 0, 717, 716, 0, 718, 689,
	688, 0, 0, 712, 713, 0, 714, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 509,
	514, 439, 282, 490, 515, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 504, 460, 214, 427, 273, 236,
	736, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 737, 738, 0, 0,
	0, 0, 1727, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 511,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 512,
	513, 246, 373, 502, 469, 508, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 518, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 507, 207, 0, 506,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 503, 510,
	516, 517, 519, 520, 521, 522, 523, 525, 524, 374,
	290, 453, 307, 344, 0, 0, 392, 431, 227, 496,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 354, 444, 493, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 423, 424, 425, 426, 275, 0, 191, 208, 340,
	0, 415, 271, 527, 505, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 509, 514, 439, 282, 490, 515, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 504, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 1046,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	1045, 511, 0, 0, 0, 0, 0, 1042, 1043, 337,
	1003, 306, 192, 212, 1036, 1040, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 512, 513, 246, 373, 502, 469, 508, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 518, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 507, 207,
	0, 506, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	503, 510, 516, 517, 519, 520, 521, 522, 523, 525,
	524, 374, 290, 453, 307, 344, 0, 0, 392, 431,
	227, 496, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 354, 444, 493, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 423, 424, 425, 426, 275, 0, 191,
	208, 340, 0, 415, 271, 527, 505, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 509, 514, 439, 282, 490, 515, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 504, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 0, 347, 472, 473, 292, 365, 0, 0, 0,
	78, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 338, 250, 0,
	0, 397, 0, 197, 0, 445, 237, 348, 345, 478,
	265, 256, 252, 235, 293, 355, 395, 465, 389, 0,
	342, 0, 0, 455, 368, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 234, 301, 196, 380, 456, 269, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 0, 0, 0,
	0, 0, 248, 297, 255, 247, 475, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 369, 240, 0, 0, 0, 0, 511, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	212, 0, 0, 379, 422, 432, 0, 0, 0, 238,
	0, 430, 393, 494, 220, 267, 419, 399, 428, 406,
	270, 0, 0, 429, 343, 480, 413, 491, 512, 513,
	246, 373, 502, 469, 508, 526, 213, 243, 387, 462,
	497, 452, 366, 476, 477, 305, 451, 278, 195, 341,
	518, 211, 438, 229, 218, 482, 500, 272, 417, 203,
	464, 489, 226, 442, 0, 0, 528, 205, 487, 461,
	362, 302, 303, 204, 0, 418, 251, 276, 241, 382,
	484, 485, 239, 529, 215, 507, 207, 0, 506, 375,
	479, 488, 363, 353, 206, 486, 361, 352, 308, 327,
	328, 263, 287, 411, 346, 412, 288, 371, 370, 372,
	199, 498, 0, 200, 0, 457, 499, 530, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 291, 339,
	386, 410, 408, 414, 0, 474, 492, 503, 510, 516,
	517, 519, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 0, 0, 392, 431, 227, 496, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	354, 444, 493, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	423, 424, 425, 426, 275, 0, 191, 208, 340, 86,
	415, 271, 527, 505, 501, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 1902, 0, 0, 1901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 376, 377, 378, 381, 384, 385, 388,
	390, 391, 394, 398, 402, 403, 404, 405, 407, 409,
	416, 421, 433, 434, 435, 436, 437, 440, 441, 446,
	447, 448, 449, 450, 458, 459, 463, 481, 483, 495,
	509, 514, 439, 282, 490, 515, 0, 349, 0, 0,
	351, 264, 285, 296, 0, 504, 460, 214, 427, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 300,
	360, 367, 396, 401, 279, 254, 231, 420, 228, 443,
	466, 467, 468, 470, 364, 249, 400, 0, 1398, 347,
	472, 473, 292, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 0, 1400,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 338,
	250, 0, 0, 397, 0, 197, 0, 445, 237, 348,
	345, 478, 265, 256, 252, 235, 293, 355, 395, 465,
	389, 0, 342, 0, 0, 455, 368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 234, 301, 196, 380, 456, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 1402, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 0,
	0, 0, 0, 0, 248, 297, 255, 247, 475, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	1218, 0, 1219, 1220, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 369, 240, 0, 0, 0, 0,
	511, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 212, 0, 0, 379, 422, 432, 0, 0,
	0, 238, 0, 430, 393, 494, 220, 267, 419, 399,
	428, 406, 270, 0, 0, 429, 343, 480, 413, 491,
	512, 513, 246, 373, 502, 469, 508, 526, 213, 243,
	387, 462, 497, 452, 366, 476, 477, 305, 451, 278,
	195, 341, 518, 211, 438, 229, 218, 482, 500, 272,
	417, 203, 464, 489, 226, 442, 0, 0, 528, 205,
	487, 461, 362, 302, 303, 204, 0, 418, 251, 276,
	241, 382, 484, 485, 239, 529, 215, 507, 207, 0,
	506, 375, 479, 488, 363, 353, 206, 486, 361, 352,
	308, 327, 328, 263, 287, 411, 346, 412, 288, 371,
	370, 372, 199, 498, 0, 200, 0, 457, 499, 530,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	291, 339, 386, 410, 408, 414, 0, 474, 492, 503,
	510, 516, 517, 519, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 0, 0, 392, 431, 227,
	496, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 354, 444, 493, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 423, 424, 425, 426, 275, 0, 191, 208,
	340, 0, 415, 271, 527, 505, 501, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 376, 377, 378, 381, 384,
	385, 388, 390, 391, 394, 398, 402, 403, 404, 405,
	407, 409, 416, 421, 433, 434, 435, 436, 437, 440,
	441, 446, 447, 448, 449, 450, 458, 459, 463, 481,
	483, 495, 509, 514, 439, 282, 490, 515, 0, 349,
	0, 0, 351, 264, 285, 296, 0, 504, 460, 214,
	427, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 300, 360, 367, 396, 401, 279, 254, 231, 420,
	228, 443, 466, 467, 468, 470, 364, 249, 400, 0,
	365, 347, 472, 473, 292, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 338, 250, 0, 0, 397, 0, 197, 0, 445,
	237, 348, 345, 478, 265, 256, 252, 235, 293, 355,
	395, 465, 389, 0, 342, 0, 0, 455, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 234, 301, 196, 380, 456,
	269, 0, 0, 0, 0, 188, 189, 190, 1340, 1343,
	0, 0, 0, 0, 1339, 1342, 0, 0, 225, 1338,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 0, 0, 0, 0, 0, 248, 297, 255, 247,
	475, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 369, 240, 0, 0,
	0, 0, 511, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 212, 0, 0, 379, 422, 432,
	0, 0, 0, 238, 0, 430, 393, 494, 220, 267,
	419, 399, 428, 406, 270, 0, 0, 429, 343, 480,
	413, 491, 512, 513, 246, 373, 502, 469, 508, 526,
	213, 243, 387, 462, 497, 452, 366, 476, 477, 305,
	451, 278, 195, 341, 518, 211, 438, 229, 218, 482,
	500, 272, 417, 203, 464, 489, 226, 442, 0, 0,
	528, 205, 487, 461, 362, 302, 303, 204, 0, 418,
	251, 276, 241, 382, 484, 485, 239, 529, 215, 507,
	207, 0, 506, 375, 479, 488, 363, 353, 206, 486,
	361, 352, 308, 327, 328, 263, 287, 411, 346, 412,
	288, 371, 370, 372, 199, 498, 0, 200, 0, 457,
	499, 530, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 291, 339, 386, 410, 408, 414, 0, 474,
	492, 503, 510, 516, 517, 519, 520, 521, 522, 523,
	525, 524, 374, 290, 453, 307, 344, 0, 0, 392,
	431, 227, 496, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 354, 444, 493, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 423, 424, 425, 426, 275, 0,
	191, 208, 340, 0, 415, 271, 527, 505, 501, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 376, 377, 378,
	381, 384, 385, 388, 390, 391, 394, 398, 402, 403,
	404, 405, 407, 409, 416, 421, 433, 434, 435, 436,
	437, 440, 441, 446, 447, 448, 449, 450, 458, 459,
	463, 481, 483, 495, 509, 514, 439, 282, 490, 515,
	0, 349, 0, 0, 351, 264, 285, 296, 0, 504,
	460, 214, 427, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 300, 360, 367, 396, 401, 279, 254,
	231, 420, 228, 443, 466, 467, 468, 470, 364, 249,
	400, 0, 0, 347, 472, 473, 292, 365, 0, 0,
	0, 78, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 87,
	0, 1379, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 511,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 512,
	513, 246, 373, 502, 469, 508, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 518, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 507, 207, 0, 506,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 503, 510,
	516, 517, 519, 520, 521, 522, 523, 525, 524, 374,
	290, 453, 307, 344, 0, 0, 392, 431, 227, 496,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 354, 444, 493, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 423, 424, 425, 426, 275, 0, 191, 208, 340,
	86, 415, 271, 527, 505, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 509, 514, 439, 282, 490, 515, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 504, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 512, 513, 246, 373, 502, 469, 508, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 518, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 507, 207,
	0, 506, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	503, 510, 516, 517, 519, 520, 521, 522, 523, 525,
	524, 374, 290, 453, 307, 344, 0, 0, 392, 431,
	227, 496, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 354, 444, 493, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 423, 424, 425, 426, 275, 0, 191,
	208, 340, 0, 415, 271, 527, 505, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 1902, 0,
	0, 1901, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 509, 514, 439, 282, 490, 515, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 504, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 1853, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	1580, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 511, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 1851, 429, 343,
	480, 413, 491, 512, 513, 246, 373, 502, 469, 508,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 518, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	507, 207, 0, 506, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 503, 510, 516, 517, 519, 520, 521, 522,
	523, 525, 524, 374, 290, 453, 307, 344, 0, 0,
	392, 431, 227, 496, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 354, 444, 493, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 423, 424, 425, 426, 275,
	0, 191, 208, 340, 0, 415, 271, 527, 505, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 509, 514, 439, 282, 490,
	515, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	504, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 511, 0, 0, 0, 0,
	0, 0, 0, 337, 1003, 306, 192, 212, 1001, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 512, 513, 246, 373, 502,
	469, 508, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 518, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 507, 207, 0, 506, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 503, 510, 516, 517, 519, 520,
	521, 522, 523, 525, 524, 374, 290, 453, 307, 344,
	0, 0, 392, 431, 227, 496, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 354, 444, 493,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 423, 424, 425,
	426, 275, 0, 191, 208, 340, 0, 415, 271, 527,
	505, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 509, 514, 439,
	282, 490, 515, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 504, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 1853, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 1580, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 511, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 512, 513, 246,
	373, 502, 469, 508, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 518,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 507, 207, 0, 506, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 503, 510, 516, 517,
	519, 520, 521, 522, 523, 525, 524, 374, 290, 453,
	307, 344, 0, 0, 392, 431, 227, 496, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 354,
	444, 493, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 423,
	424, 425, 426, 275, 0, 191, 208, 340, 0, 415,
	271, 527, 505, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 509,
	514, 439, 282, 490, 515, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 504, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 1379, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 511,
	0, 0, 0, 3021, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 512,
	513, 246, 373, 502, 469, 508, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 518, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 507, 207, 0, 506,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 503, 510,
	516, 517, 519, 520, 521, 522, 523, 525, 524, 374,
	290, 453, 307, 344, 0, 0, 392, 431, 227, 496,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 354, 444, 493, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 423, 424, 425, 426, 275, 0, 191, 208, 340,
	0, 415, 271, 527, 505, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 509, 514, 439, 282, 490, 515, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 504, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 1723, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 512, 513, 246, 373, 502, 469, 508, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 518, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 507, 207,
	0, 506, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	503, 510, 516, 517, 519, 520, 521, 522, 523, 525,
	524, 374, 290, 453, 307, 344, 0, 0, 392, 431,
	227, 496, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 354, 444, 493, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 423, 424, 425, 426, 275, 0, 191,
	208, 340, 0, 415, 271, 527, 505, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 509, 514, 439, 282, 490, 515, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 504, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	2208, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 511, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 512, 513, 246, 373, 502, 469, 508,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 518, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	507, 207, 0, 506, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 503, 510, 516, 517, 519, 520, 521, 522,
	523, 525, 524, 374, 290, 453, 307, 344, 0, 0,
	392, 431, 227, 496, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 354, 444, 493, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 423, 424, 425, 426, 275,
	0, 191, 208, 340, 0, 415, 271, 527, 505, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 509, 514, 439, 282, 490,
	515, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	504, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 2193, 0, 0, 0, 2194, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 511, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 512, 513, 246, 373, 502,
	469, 508, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 518, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 507, 207, 0, 506, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 503, 510, 516, 517, 519, 520,
	521, 522, 523, 525, 524, 374, 290, 453, 307, 344,
	0, 0, 392, 431, 227, 496, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 354, 444, 493,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 423, 424, 425,
	426, 275, 0, 191, 208, 340, 0, 415, 271, 527,
	505, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 509, 514, 439,
	282, 490, 515, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 504, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 1423, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 1422, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 511, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 512, 513, 246,
	373, 502, 469, 508, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 518,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 507, 207, 0, 506, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 503, 510, 516, 517,
	519, 520, 521, 522, 523, 525, 524, 374, 290, 453,
	307, 344, 0, 0, 392, 431, 227, 496, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 354,
	444, 493, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 423,
	424, 425, 426, 275, 0, 191, 208, 340, 0, 415,
	271, 527, 505, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 509,
	514, 439, 282, 490, 515, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 504, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 511,
	0, 0, 0, 3147, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 512,
	513, 246, 373, 502, 469, 508, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 518, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 507, 207, 0, 506,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 503, 510,
	516, 517, 519, 520, 521, 522, 523, 525, 524, 374,
	290, 453, 307, 344, 0, 0, 392, 431, 227, 496,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 354, 444, 493, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 423, 424, 425, 426, 275, 0, 191, 208, 340,
	0, 415, 271, 527, 505, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 509, 514, 439, 282, 490, 515, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 504, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 1580, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 512, 513, 246, 373, 502, 469, 508, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 518, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 507, 207,
	0, 506, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	503, 510, 516, 517, 519, 520, 521, 522, 523, 525,
	524, 374, 290, 453, 307, 344, 0, 0, 392, 431,
	227, 496, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 354, 444, 493, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 423, 424, 425, 426, 275, 0, 191,
	208, 340, 0, 415, 271, 527, 505, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 509, 514, 439, 282, 490, 515, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 504, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 511, 0, 0, 0, 3021, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 512, 513, 246, 373, 502, 469, 508,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 518, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	507, 207, 0, 506, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 503, 510, 516, 517, 519, 520, 521, 522,
	523, 525, 524, 374, 290, 453, 307, 344, 0, 0,
	392, 431, 227, 496, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 354, 444, 493, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 423, 424, 425, 426, 275,
	0, 191, 208, 340, 0, 415, 271, 527, 505, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 509, 514, 439, 282, 490,
	515, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	504, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 511, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 512, 513, 246, 373, 502,
	469, 508, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 518, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 507, 207, 0, 506, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 503, 510, 516, 517, 519, 520,
	521, 522, 523, 525, 524, 374, 290, 453, 307, 344,
	0, 0, 392, 431, 227, 496, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 354, 444, 493,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 423, 424, 425,
	426, 275, 0, 191, 208, 340, 0, 415, 271, 527,
	505, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 509, 514, 439,
	282, 490, 515, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 504, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 1903, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 511, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 512, 513, 246,
	373, 502, 469, 508, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 518,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 507, 207, 0, 506, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 503, 510, 516, 517,
	519, 520, 521, 522, 523, 525, 524, 374, 290, 453,
	307, 344, 0, 0, 392, 431, 227, 496, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 354,
	444, 493, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 423,
	424, 425, 426, 275, 0, 191, 208, 340, 0, 415,
	271, 527, 505, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 509,
	514, 439, 282, 490, 515, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 504, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 1402, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 511,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 512,
	513, 246, 373, 502, 469, 508, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 518, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 507, 207, 0, 506,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 503, 510,
	516, 517, 519, 520, 521, 522, 523, 525, 524, 374,
	290, 453, 307, 344, 0, 0, 392, 431, 227, 496,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 354, 444, 493, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 423, 424, 425, 426, 275, 0, 191, 208, 340,
	0, 415, 271, 527, 505, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 509, 514, 439, 282, 490, 515, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 504, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 512, 513, 246, 373, 502, 469, 508, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 518, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 507, 207,
	0, 506, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	503, 510, 516, 517, 519, 520, 521, 522, 523, 525,
	524, 374, 290, 453, 307, 344, 0, 0, 392, 431,
	227, 496, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 354, 444, 493, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 423, 424, 425, 426, 275, 0, 191,
	208, 340, 0, 415, 271, 527, 505, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 509, 514, 439, 282, 490, 515, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 504, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 511, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 512, 513, 246, 373, 502, 469, 508,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 518, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	507, 207, 0, 506, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 503, 510, 516, 517, 519, 520, 521, 522,
	523, 525, 524, 374, 290, 453, 307, 344, 0, 0,
	392, 431, 227, 496, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 354, 444, 493, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 423, 424, 425, 426, 275,
	0, 191, 208, 340, 1678, 415, 271, 527, 505, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 509, 514, 439, 282, 490,
	515, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	504, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 1548, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 511, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 512, 513, 246, 373, 502,
	469, 508, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 518, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 507, 207, 0, 506, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 503, 510, 516, 517, 519, 520,
	521, 522, 523, 525, 524, 374, 290, 453, 307, 344,
	0, 0, 392, 431, 227, 496, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 354, 444, 493,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 423, 424, 425,
	426, 275, 0, 191, 208, 340, 0, 415, 271, 527,
	505, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 509, 514, 439,
	282, 490, 515, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 504, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 1546, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 511, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 512, 513, 246,
	373, 502, 469, 508, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 518,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 507, 207, 0, 506, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 503, 510, 516, 517,
	519, 520, 521, 522, 523, 525, 524, 374, 290, 453,
	307, 344, 0, 0, 392, 431, 227, 496, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 354,
	444, 493, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 423,
	424, 425, 426, 275, 0, 191, 208, 340, 0, 415,
	271, 527, 505, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 509,
	514, 439, 282, 490, 515, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 504, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 1544, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 511,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 512,
	513, 246, 373, 502, 469, 508, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 518, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 507, 207, 0, 506,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 503, 510,
	516, 517, 519, 520, 521, 522, 523, 525, 524, 374,
	290, 453, 307, 344, 0, 0, 392, 431, 227, 496,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 354, 444, 493, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 423, 424, 425, 426, 275, 0, 191, 208, 340,
	0, 415, 271, 527, 505, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 509, 514, 439, 282, 490, 515, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 504, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 1542, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 512, 513, 246, 373, 502, 469, 508, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 518, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 507, 207,
	0, 506, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	503, 510, 516, 517, 519, 520, 521, 522, 523, 525,
	524, 374, 290, 453, 307, 344, 0, 0, 392, 431,
	227, 496, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 354, 444, 493, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 423, 424, 425, 426, 275, 0, 191,
	208, 340, 0, 415, 271, 527, 505, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 509, 514, 439, 282, 490, 515, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 504, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	1540, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 511, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 512, 513, 246, 373, 502, 469, 508,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 518, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	507, 207, 0, 506, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 503, 510, 516, 517, 519, 520, 521, 522,
	523, 525, 524, 374, 290, 453, 307, 344, 0, 0,
	392, 431, 227, 496, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 354, 444, 493, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 423, 424, 425, 426, 275,
	0, 191, 208, 340, 0, 415, 271, 527, 505, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 509, 514, 439, 282, 490,
	515, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	504, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 1536, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 511, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 512, 513, 246, 373, 502,
	469, 508, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 518, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 507, 207, 0, 506, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 503, 510, 516, 517, 519, 520,
	521, 522, 523, 525, 524, 374, 290, 453, 307, 344,
	0, 0, 392, 431, 227, 496, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 354, 444, 493,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 423, 424, 425,
	426, 275, 0, 191, 208, 340, 0, 415, 271, 527,
	505, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 509, 514, 439,
	282, 490, 515, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 504, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 1534, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 511, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 512, 513, 246,
	373, 502, 469, 508, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 518,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 507, 207, 0, 506, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 503, 510, 516, 517,
	519, 520, 521, 522, 523, 525, 524, 374, 290, 453,
	307, 344, 0, 0, 392, 431, 227, 496, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 354,
	444, 493, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 423,
	424, 425, 426, 275, 0, 191, 208, 340, 0, 415,
	271, 527, 505, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 509,
	514, 439, 282, 490, 515, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 504, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 1532, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 511,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 512,
	513, 246, 373, 502, 469, 508, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 518, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 507, 207, 0, 506,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 503, 510,
	516, 517, 519, 520, 521, 522, 523, 525, 524, 374,
	290, 453, 307, 344, 0, 0, 392, 431, 227, 496,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 354, 444, 493, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 423, 424, 425, 426, 275, 0, 191, 208, 340,
	0, 415, 271, 527, 505, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 509, 514, 439, 282, 490, 515, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 504, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 1507, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 512, 513, 246, 373, 502, 469, 508, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 518, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 507, 207,
	0, 506, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	503, 510, 516, 517, 519, 520, 521, 522, 523, 525,
	524, 374, 290, 453, 307, 344, 0, 0, 392, 431,
	227, 496, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 354, 444, 493, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 423, 424, 425, 426, 275, 0, 191,
	208, 340, 0, 415, 271, 527, 505, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 509, 514, 439, 282, 490, 515, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 504, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 1407, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 511, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 512, 513, 246, 373, 502, 469, 508,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 518, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	507, 207, 0, 506, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 503, 510, 516, 517, 519, 520, 521, 522,
	523, 525, 524, 374, 290, 453, 307, 344, 0, 0,
	392, 431, 227, 496, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 354, 444, 493, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 423, 424, 425, 426, 275,
	0, 191, 208, 340, 0, 415, 271, 527, 505, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 509, 514, 439, 282, 490,
	515, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	504, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 511, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 512, 513, 246, 373, 502,
	469, 508, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 518, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 507, 207, 0, 506, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 503, 510, 516, 517, 519, 520,
	521, 522, 523, 525, 524, 374, 290, 453, 307, 344,
	0, 0, 392, 431, 227, 496, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 354, 444, 493,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 423, 424, 425,
	426, 275, 0, 191, 208, 340, 0, 415, 271, 527,
	505, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 509, 514, 439,
	282, 490, 515, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 504, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 511, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 512, 513, 246,
	373, 502, 469, 508, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 518,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 507, 207, 0, 506, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 503, 510, 516, 517,
	519, 520, 521, 522, 523, 525, 524, 374, 290, 453,
	307, 344, 0, 0, 392, 431, 227, 496, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 354,
	444, 493, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 423,
	424, 425, 426, 275, 0, 191, 208, 340, 0, 415,
	271, 527, 505, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 807, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 509,
	514, 439, 282, 490, 515, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 504, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 511,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 512,
	513, 246, 373, 502, 469, 508, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 518, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 507, 207, 0, 506,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 503, 510,
	516, 517, 519, 520, 521, 522, 523, 525, 524, 374,
	290, 453, 307, 344, 0, 0, 392, 431, 227, 496,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 354, 444, 493, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 423, 424, 425, 426, 275, 0, 191, 208, 340,
	0, 415, 271, 527, 505, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 509, 514, 439, 605, 490, 515, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 504, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 552,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 512, 513, 246, 373, 502, 469, 508, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 518, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 507, 207,
	0, 506, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	503, 510, 516, 517, 519, 520, 521, 522, 523, 525,
	524, 374, 290, 453, 307, 344, 0, 0, 392, 431,
	227, 496, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 354, 444, 493, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 423, 424, 425, 426, 275, 0, 191,
	208, 340, 0, 415, 271, 527, 505, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 509, 514, 439, 282, 490, 515, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 504, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 511, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 512, 513, 246, 373, 502, 469, 508,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 518, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	507, 207, 0, 506, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 503, 510, 516, 517, 519, 520, 521, 522,
	523, 525, 524, 374, 290, 453, 307, 344, 0, 0,
	392, 431, 227, 496, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 354, 444, 493, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 423, 424, 425, 426, 275,
	0, 191, 208, 340, 0, 415, 271, 527, 505, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 3155, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 509, 514, 439, 282, 490,
	515, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	504, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 511, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 512, 513, 246, 373, 502,
	469, 508, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 518, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 507, 207, 0, 506, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 503, 510, 516, 517, 519, 520,
	521, 522, 523, 525, 524, 374, 290, 453, 307, 344,
	0, 0, 392, 431, 227, 496, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 354, 444, 493,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 423, 424, 425,
	426, 275, 0, 191, 208, 340, 0, 415, 271, 527,
	505, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 509, 514, 439,
	282, 490, 515, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 504, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 2710, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 511, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 512, 513, 246,
	373, 502, 469, 508, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 518,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 507, 207, 0, 506, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 503, 510, 516, 517,
	519, 520, 521, 522, 523, 525, 524, 374, 290, 453,
	307, 344, 0, 0, 392, 431, 227, 496, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 354,
	444, 493, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 423,
	424, 425, 426, 275, 0, 191, 208, 340, 0, 415,
	271, 527, 505, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 509,
	514, 439, 282, 490, 515, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 504, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 2189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 511,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 512,
	513, 246, 373, 502, 469, 508, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 518, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 507, 207, 0, 506,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 503, 510,
	516, 517, 519, 520, 521, 522, 523, 525, 524, 374,
	290, 453, 307, 344, 0, 0, 392, 431, 227, 496,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 354, 444, 493, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 423, 424, 425, 426, 275, 0, 191, 208, 340,
	0, 415, 271, 527, 505, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 509, 514, 439, 282, 490, 515, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 504, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 0,
	347, 472, 473, 292,
}

var yyPact = [...]int{
	4657, -1000, -412, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2095, 2120, -1000, -1000,
	-1000, -1000, 2254, -1000, 795, 1811, -1000, 2060, 385, -1000,
	43789, 546, -1000, 42565, 542, 3389, 43789, -1000, 162, -1000,
	153, 43789, 161, 41953, -1000, -1000, -292, 19299, 2009, 30,
	29, 43789, -1000, -1000, -1000, -1000, 2233, 1788, -1000, 362,
	-1000, -1000, -1000, -1000, -1000, -1000, 41341, -1000, -1000, -1000,
	2077, 2048, 2263, 715, 2021, -1000, 2155, 1788, -1000, 19299,
	2214, 2147, 18687, -1000, 18687, 402, -1000, -1000, 14393, -1000,
	-1000, 25429, 43789, 31549, 359, -1000, 2060, -1000, -1000, -1000,
	119, -1000, 288, 1721, -1000, 1716, -1000, 418, 770, 348,
	456, 448, 346, 336, 328, 327, 326, 325, 321, 315,
	354, -1000, 740, 740, -135, -137, 3465, 437, 393, 393,
	434, 2033, 2031, -1000, 804, -1000, 740, 740, 740, 323,
	740, 740, 740, 740, 264, 262, 740, 740, 740, 740,
	740, 740, 740, 740, 740, 740, 740, 740, 740, 740,
	740, 740, 740, 532, 2060, 243, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	43789, 172, 43789, -1000, 631, 43789, 871, 871, 78, 871,
	871, 871, 871, 164, 754, 28, -1000, 159, 236, 151,
	247, 863, 208, -1000, -1000, 242, 863, 1301, -1000, 720,
	132, -1000, 871, 871, -1000, 11925, 185, 11925, 11925, -1000,
	2053, -1000, -1000, -1000, -1000, 1310, -1000, 432, -1000, -1000,
	-1000, -1000, 43789, 40729, 349, 753, -1000, -1000, -1000, 156,
	-1000, -1000, 1417, 1124, 19299, 1007, -1000, 1598, 695, -1000,
	-1000, -1000, -1000, -1000, 574, 19911, 19911, 19911, 19911, -1000,
	-1000, 1457, 1457, 1457, 1457, 19911, 1457, -1000, 1457, 1457,
	1457, 1457, 19299, 1457, 1457, 1457, -1000, 1457, 1457, 1457,
	1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457,
	1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457,
	1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457,
	1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457,
	1457, -1000, -1000, 1457, 630, 1457, 1457, 1457, 1457, 1457,
	-1000, -1000, -1000, -1000, 19911, 1457, 1457, 1457, 1457, 1457,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1457,
	1457, 1457, 1457, 1457, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 22976, -1000, 16851, 1457, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 43789, -1000, 1457,
	183, 43789, 43789, 340, 2155, 1788, -1000, 2233, 2178, 362,
	-1000, 2770, 1559, 1423, 1314, 1788, 1658, 43789, -1000, 1738,
	-1000, -1000, -1000, 1943, 1224, 1300, -1000, -1000, -1000, -1000,
	1595, 19299, -1000, -1000, 2251, -1000, 22364, 629, 873, 2249,
	40117, -1000, 402, 402, 1695, 13776, 0, -1000, -1000, -1000,
	752, 29101, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2053, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1718, 43789, -1000, -1000,
	3990, 1378, -1000, 1809, -1000, 1700, -1000, 1763, 19299, 1824,
	538, 1378, 529, 525, 452, -1000, -56, -1000, -1000, -1000,
	-1000, -1000, -1000, 740, 740, 740, -1000, 319, 2213, 385,
	5136, -1000, -1000, -1000, 39505, 1802, 1378, -1000, 1801, -1000,
	824, 508, 593, 593, 1378, -1000, -1000, 43789, 1378, 823,
	822, 1378, 1378, 43789, 43789, -1000, 38893, -1000, 38281, 37669,
	1133, 43789, 37057, 36445, 35833, 35221, 34609, -1000, 1978, -1000,
	1871, -1000, -1000, -1000, 43789, 1378, 1378, 43789, 43789, 320,
	-1000, -1000, 43789, 1378, -1000, -1000, 1129, 1114, 1113, 740,
	740, 1088, 1299, 1296, 1295, 740, 740, 1086, 1288, 30325,
	1286, 246, 1058, 1040, 1037, 1143, 1271, 199, 1269, 1099,
	1051, 1032, 43789, 1796, 43789, -1000, 229, 799, 480, 750,
	2060, 2008, 1665, 427, 481, 1378, 392, 392, 43789, -1000,
	12542, -1000, -1000, 1266, 19299, -1000, 865, 863, 863, -1000,
	-1000, -1000, -1000, -1000, -1000, 871, 43789, 865, -1000, -1000,
	-1000, 863, 871, 43789, 871, 871, 871, 871, 863, 863,
	863, 871, 43789, 43789, 43789, 43789, 43789, 43789, 43789, 43789,
	43789, 11925, 720, 871, -298, -1000, 1264, -1000, 1903, -1000,
	-1000, -1000, -1000, -1000, -1000, 11925, 11925, -1000, -1000, -1000,
	-1000, 158, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -62, 1662, 33997, -1000, -306, -307, -309, -310, -1000,
	-1000, -1000, -311, -312, -1000, -1000, -1000, 19299, 19299, 19299,
	19299, -166, -1000, 803, 19911, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 178, 790, 19911, 19911, 19911, 19911, 19911, 19911,
	19911, 19911, 19911, 19911, 19911, 19911, 19911, 19911, 19911, -1000,
	-1000, 27265, 6802, 6802, 695, 695, 695, 695, -1000, 18687,
	19299, 19299, 695, -1000, 1378, 18687, 18687, 19299, 2052, 765,
	1124, 43789, -1000, 1314, -1000, -1000, -1000, 902, -1000, 43789,
	43789, 1292, 19299, 19299, 19299, 19299, 19299, 19299, 15622, 19299,
	19299, 19299, 19299, 19299, 19299, 19299, 19299, 19299, 19299, 19299,
	19299, 19299, 19299, 19299, 19299, 19299, 19299, 19299, 19299, 19299,
	19299, 19299, 19299, 19299, 19299, 1314, 19299, 1279, 19299, 19299,
	15010, 12542, 18687, 18687, 18687, 18687, 18687, 33385, -1000, -1000,
	-1000, -1000, -1000, 19299, 19299, 19299, 19299, 19299, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 628, 1456, 1396, 1545, 19299,
	-1000, 1660, -1000, -146, 24817, 19299, 1256, 2248, 1834, 43789,
	-1000, -1000, -1000, 2155, -1000, 2155, 1456, 2679, 1949, 18687,
	-1000, -1000, 2679, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1356, -1000, 43789, 1658, 2118, 43789, 1937, 1255, 317,
	-1000, 19299, 19299, 1643, -1000, 1244, 43789, -1000, -166, -1000,
	32773, -1000, -1000, 11308, -1000, 43789, 308, 43789, -1000, 24205,
	32161, 13159, 0, -1000, 13159, 1537, -1000, 4, -14, 16234,
	682, -1000, -1000, -1000, 3465, 21135, 1394, 682, 62, -1000,
	-1000, -1000, 1763, -1000, 1763, 1763, 1763, 1763, 317, 317,
	317, 317, -1000, -1000, -1000, -1000, -1000, 1789, 1783, -1000,
	1763, 1763, 1763, 1763, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1780, 1780, 1780, 1765, 1765, 387, -1000, 19299, 300,
	31549, 2102, 1019, 1808, 229, 396, 1812, 1378, 1378, 1378,
	396, -1000, 1331, 1263, 1199, -1000, -403, 1612, -1000, -1000,
	2207, -1000, -1000, 719, 841, 839, 793, 43789, 191, 304,
	-1000, 377, -1000, 31549, 1378, 819, 593, 1378, -1000, 1378,
	-1000, -1000, -1000, -1000, -1000, 1378, -1000, -1000, 1606, -1000,
	1471, 846, 813, 842, 807, 1606, -1000, -1000, -109, 1606,
	-1000, 1606, -1000, 1606, -1000, 1606, -1000, 1606, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 749, 207, -227,
	43789, 191, 27265, -1000, 425, -1000, -1000, -1000, 27265, 27265,
	-1000, -1000, -1000, -1000, 1234, 1230, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -387, 43789, -1000, 217, 746,
	271, 314, 260, 43789, 176, 2131, 2127, 2122, 211, 255,
	43789, 43789, 392, 1882, 43789, 2096, 43789, -1000, -1000, -1000,
	-1000, -1000, 1124, 43789, -1000, -1000, 871, 871, -1000, -1000,
	43789, 871, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	871, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 43789, -1000, -1000, -1000,
	-1000, 43789, -1000, -1000, -1000, -1000, -1000, 175, -3, 344,
	-1000, -1000, -1000, -1000, -1000, 2150, -1000, 1124, 797, 786,
	-1000, 1457, -1000, -1000, 1027, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 178, 19911, 19911, 19911, 1609, 504, 941, 925,
	955, 905, 905, 972, 972, 701, 701, 701, 701, 701,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1228, -1000,
	1600, -1000, 2193, 1706, 1314, 1600, 1600, 1797, 18687, -1000,
	-1000, 764, -1000, 19299, 1314, -1000, -1000, 1314, 1314, 1593,
	1586, 2244, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2135, 1808, 1808, 1808, 1808, 1808, 19299,
	1403, -1000, -1000, -1000, 2527, 2523, 1314, 1417, 1314, 1553,
	-1000, 2504, 1808, 2494, 2466, 2449, 1012, 2420, 2410, 2402,
	1808, 1808, 1808, 1803, 2386, 2382, 2365, 2357, 2329, 2307,
	2302, 2239, 2234, 1808, -168, 1808, 1314, -1000, -1000, -1000,
	-1000, 2189, 1793, 1314, 18687, 18687, 1539, 1457, 622, -1000,
	1600, 1314, 1314, 1600, 1600, -1000, 2154, 2074, 1982, 1961,
	1957, 12542, 1314, -1000, 1545, 43789, -1000, -287, -1000, -17,
	669, 1457, -1000, 30325, 1314, -1000, 5250, -1000, 45013, -1000,
	-1000, -1000, -1000, -1000, 28489, 1588, 2679, -1000, -1000, 1457,
	1654, -1000, -1000, 317, 70, 27877, 676, 676, 99, 1124,
	1124, 19299, -1000, -1000, -1000, -1000, -1000, -1000, 604, 2221,
	337, 1457, -1000, 1622, 2610, -1000, -1000, -1000, 2112, 21752,
	-1000, 1457, 1457, 43789, 1790, 1770, -1000, 592, -1000, 1537,
	0, -4, -1000, -1000, -1000, -1000, 1124, -1000, 1152, 312,
	1222, -1000, 388, -1000, -1000, -1000, -1000, 2024, 57, -1000,
	-1000, -1000, 241, 317, -1000, -1000, -1000, -1000, -1000, -1000,
	1226, 1226, -1000, -1000, -1000, -1000, -1000, 1002, -1000, -1000,
	-1000, 966, -1000, -1000, 1857, 1829, 300, -1000, -1000, 740,
	1223, -1000, -1000, 2026, 740, 740, 43789, -1000, -1000, 1387,
	2102, 217, 43789, 757, 1875, -1000, 1812, 1812, 1812, 43789,
	-1000, -1000, -1000, -1000, -1000, -1000, -394, 92, 382, -1000,
	-1000, -1000, 3275, 43789, 1649, -1000, 173, -1000, 1350, -1000,
	43789, -1000, 1614, 1774, 1378, 1378, -1000, -1000, -1000, 43789,
	1457, -1000, -1000, -1000, -1000, 439, 2058, 266, -1000, -1000,
	-188, -1000, -1000, 191, 173, 682, 1378, -1000, -1000, -1000,
	-1000, -1000, -390, 1602, 438, 196, 302, 43789, 43789, 43789,
	43789, 43789, 582, -1000, -1000, -1000, -1000, 180, -1000, -1000,
	180, -1000, -1000, -1000, -1000, 250, 406, -1000, 43789, 43789,
	570, -1000, -1000, -1000, 863, -1000, -1000, 863, -1000, -1000,
	-1000, -1000, -1000, 2046, 43789, -8, -344, -1000, -337, 19299,
	-1000, -1000, -1000, -1000, 1052, 455, 941, 19911, 19911, 18687,
	-96, 559, 559, 27265, -1000, -1000, -1000, 19299, 19299, 1590,
	759, -1000, 19299, 1094, -1000, -1000, -1000, 19299, 19299, 19299,
	1314, 273, -1000, -1000, -1000, -1000, -1000, 2236, -1000, 19299,
	19299, 19299, -1000, -1000, 19299, 19299, -1000, 19299, 19299, 20523,
	1314, 20523, 19299, 19299, 20523, -1000, -1000, -1000, -1000, 20523,
	19299, 19299, 19299, 19299, 19299, 19299, 19299, 19299, 19299, -1000,
	-1000, 31549, 72, -168, 1279, 72, 1279, -1000, 1600, 1600,
	18687, 12542, -1000, -1000, -1000, -1000, -1000, 19299, 19299, 19299,
	19299, 19299, -1000, -1000, -1000, -1000, -1000, -1000, 669, -1000,
	593, 593, 593, 43789, -1000, -1000, -1000, -1000, -1000, -1000,
	1528, 2151, -1000, 1954, 1950, 2232, 2221, -1000, 24205, 2679,
	-1000, -1000, 43789, -282, -1000, 2004, 1989, 676, 676, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10691, 2155, 19299, 1874,
	43789, 160, -1000, 23593, 43789, 43789, 24205, 24205, 24205, 24205,
	24205, -1000, 1910, 1908, -1000, 1921, 1917, 1960, 43789, -1000,
	1583, 1314, 2178, 21752, 362, 19299, 26041, 1619, 24205, -1000,
	-1000, 24205, 43789, 10074, -1000, -1000, -11, -22, -1000, -1000,
	-1000, -1000, 3465, -1000, -1000, 386, 2109, 2013, -1000, -1000,
	-1000, -1000, -1000, 1581, -1000, 1571, 1510, 1550, 207, -1000,
	1820, 2041, 740, 740, -1000, 956, -1000, 1378, 1209, 1204,
	-1000, -1000, -1000, 403, -1000, 2093, 43789, 1873, 1867, 1864,
	-1000, -401, 953, 1769, 1818, 19299, 1767, 2204, 1491, 43789,
	-1000, -1000, 43789, -1000, 171, -1000, 300, 43789, -1000, -1000,
	-1000, 304, 43789, -1000, 6678, -1000, -1000, -1000, 173, -1000,
	-1000, -1000, -1000, -1000, -1000, 43789, 228, -1000, 1766, 1309,
	-1000, -1000, 1756, -1000, -1000, -1000, -1000, 174, 269, 168,
	1192, 168, -1000, 43789, 567, 1829, 43789, -1000, -1000, -1000,
	871, 871, -1000, -1000, 2039, -1000, 1378, 1808, 19911, 19911,
	-1000, 695, -1000, 1457, -148, 1763, 1763, -1000, 1763, 1765,
	-1000, 1763, 145, 1763, 144, 1763, -1000, -1000, -148, 1314,
	1776, 1303, -63, -1000, 1124, 19299, 1948, 1944, 1808, -1000,
	1762, 1753, 19299, 1808, 1808, 1808, -1000, 1124, 1012, 1894,
	1487, -1000, -1000, -1000, -1000, 1508, 1808, 1785, -277, 1314,
	1548, 1548, 1548, 1548, 1548, 1545, 1545, 1545, 1545, 43789,
	-1000, -168, -1000, -1000, -207, -210, -1000, 1314, -168, 1505,
	-1000, -1000, 1314, -1000, 1747, 1656, 1426, 1556, 1808, -1000,
	2137, 2137, 2137, 1541, 44401, 43789, -1000, -1000, -1000, -1000,
	2221, 2218, 1499, -1000, -1000, 70, 390, -1000, 1970, 1989,
	-1000, 2202, 1994, 2201, -1000, -1000, -1000, -1000, -1000, 1124,
	-1000, 2062, 1443, -1000, 744, 1425, -1000, -1000, 18075, 1543,
	1945, 589, 1541, 1458, 2610, 1831, 1854, 2035, -1000, -1000,
	-1000, -1000, 1900, -1000, 1897, -1000, -1000, 1738, -1000, -1000,
	1396, 1314, 1108, 308, 24205, 1438, 1438, -1000, 572, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 856, 5769, 2258, -1000,
	1189, -1000, 1112, 194, 952, -1000, -1000, 740, 740, -1000,
	818, 806, -1000, 43789, 1752, -1000, 317, 1186, 317, 949,
	-1000, 937, -1000, -1000, -1000, -1000, 1810, 1941, -1000, -1000,
	-1000, -1000, 43789, -1000, -1000, 43789, 43789, 43789, 1751, 2195,
	-1000, 19299, 1742, 742, 1846, 43789, 43789, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 398, 740,
	-367, 254, 253, 740, 740, 740, -402, -1000, -1000, 1523,
	1513, -1000, -121, -1000, 19299, -1000, -1000, -1000, 1082, 1082,
	-1000, 1738, -1000, -1000, -1000, 1345, -1000, -1000, -112, 43789,
	43789, 43789, 43789, -1000, 961, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 695, 19911, 1314,
	-1000, -1000, 317, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1314, -1000, 19299, -1000, 19299, -1000, 2155, 1181, 1124, 19299,
	19299, -1000, 936, 930, 1808, -1000, -1000, -1000, 1314, 20523,
	-1000, 20523, -1000, 19299, 234, 559, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1314, 305, -1000, -1000,
	-1000, -1000, 2228, -1000, 1314, 19299, -1000, -1000, 19299, -1000,
	19299, 19299, -1000, 19299, -1000, 1457, 1946, 1457, 1457, 26041,
	-1000, -1000, 2218, 2191, 2187, 1971, 1962, 1962, 1970, -1000,
	2186, 2181, -1000, 1180, 2173, 1175, 805, -1000, 43789, 19299,
	160, -1000, 367, 43789, 160, 43789, -1000, 2156, -1000, -1000,
	19299, 1741, -1000, 19299, -1000, -1000, -1000, -1000, -1000, -1000,
	6802, 2221, 1438, -1000, -1000, 708, -1000, 19299, -1000, -1000,
	-1000, 4065, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1171, 1166, -1000, -1000, 1740, 19299, -1000, -1000, -1000, 1335,
	1328, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1738,
	-1000, -1000, -1000, -1000, 304, -396, 1839, 43789, 918, -1000,
	1502, 1491, 277, 160, 1164, 740, 740, 740, 912, 904,
	30325, 1494, -1000, 43789, 369, -1000, 304, -1000, -138, -145,
	1808, -1000, -1000, 2107, -1000, -1000, 12542, -1000, -1000, 1724,
	1794, -1000, -1000, -1000, 401, -1000, -1000, -1000, 1808, 1808,
	1314, -1000, 1808, 1808, 1321, 1316, -1000, -1000, 1487, -1000,
	1371, -1000, 234, 1314, 1850, -1000, -1000, 6802, -1000, -1000,
	2156, 2162, 72, -1000, -1000, 203, 72, 1124, 1367, 1808,
	1363, 1347, 26653, -1000, 2159, 2157, 30937, 30937, 669, 2191,
	-176, 19299, 19299, 1995, 899, -1000, -1000, -1000, -1000, 1163,
	1158, -1000, 1157, -1000, 2257, -1000, 1124, -1000, 160, -1000,
	568, 1425, -1000, 2155, 1124, 43789, 1124, 46, 2156, -1000,
	1808, -1000, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457,
	1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457,
	1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457,
	1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, 1457, -1000,
	-1000, 43789, 1832, -1000, -1000, 2101, 1484, 87, -1000, 1469,
	-1000, -1000, 152, -1000, 19299, -1000, 30325, 1156, 1147, -1000,
	-1000, -1000, -1000, -402, -1000, -1000, -1000, -1000, -1000, -1000,
	362, 1462, -1000, 732, 43789, 43789, 1314, 303, -115, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19299, -1000,
	1314, 1849, -1000, -239, -1000, -372, 19299, -168, -1000, -1000,
	-168, -1000, 19299, -1000, -1000, 19299, -1000, 19299, 1441, -1000,
	-1000, -1000, -1000, -1000, 1441, 1441, -1000, -176, -1000, 1446,
	-1000, 43789, 1124, 1417, -1000, 895, -1000, -1000, -1000, -1000,
	-1000, 43789, 1425, 43789, -1000, 1429, 1314, 1457, 2155, -1000,
	1392, -1000, 362, -1000, 1723, 1818, -1000, -1000, -1000, 17463,
	-1000, -1000, -1000, -1000, -1000, 201, -110, 12542, 9457, 1383,
	-1000, -1000, 1936, -105, -118, 1012, -1000, -329, -1000, -1000,
	-1000, -1000, 157, -1000, -1000, 1417, -1000, -1000, 1326, 1289,
	1227, 29713, -1000, -1000, -1000, -1000, -176, -1000, -1000, 2098,
	-1000, -1000, 1400, -1000, -1000, 26041, 43177, -1000, -94, 294,
	-110, 19299, 1560, 1314, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2, -1000, -1000, -1000, -1000, -1000, 1756, -1000,
	1928, -1000, 1314, -1000, 163, -358, -206, -208, -1000, -1000,
	-1000, 19299, -1000, 19299, -1000, 19299, -1000, -1000, -1000, 43789,
	1457, -1000, 1373, -1000, 4949, -224, 1842, -1000, -69, -1000,
	-1000, -1000, 851, 943, -1000, -1000, -1000, -1000, -1000, -1000,
	1821, 43789, -1000, 380, -1000, -1000, -112, -113, -1000, 773,
	-1000, -1000, -1000, -1000, -1000, 1148, 1046, 1808, -1000, 43789,
	-1000, 43177, -219, 682, 6802, -1000, 1840, 1837, 2243, -1000,
	-1000, -1000, -1000, -1000, -1000, -408, 1349, 230, -1000, -116,
	163, -1000, 19299, -1000, 19299, -1000, 1314, -1000, -1000, 2084,
	46, -1000, 2256, -1000, 2235, 619, 619, -1000, 893, -408,
	-1000, -128, -1000, 1808, 1808, -1000, -230, -1000, -1000, -1000,
	-1000, -1000, 376, 965, -1000, -1000, -1000, -1000, -1000, -1000,
	6802, -1000, -1000, -1000, 232, 232, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2769, 2768, 33, 3, 45, 44, 2766, 37, 118,
	203, 31, 208, 126, 2765, 2753, 2750, 2749, 2741, 2739,
	2737, 236, 233, 227, 2733, 2732, 2731, 2730, 2729, 2728,
	2727, 2726, 2724, 2723, 240, 183, 200, 2721, 2719, 2718,
	142, 193, 105, 107, 197, 2716, 2715, 92, 2714, 2713,
	2712, 192, 191, 190, 861, 2711, 187, 145, 66, 2709,
	2708, 2707, 2705, 2701, 2700, 2699, 2698, 2697, 2695, 2694,
	2693, 2692, 2690, 2689, 2687, 2685, 279, 2684, 2681, 21,
	2672, 94, 2669, 2668, 2667, 2664, 9, 2660, 2652, 17,
	47, 2649, 2647, 59, 2644, 2641, 2639, 2638, 2637, 15,
	2636, 26, 2635, 46, 2634, 2628, 147, 2627, 2625, 2624,
	41, 2619, 2616, 2615, 2613, 2612, 2611, 2603, 162, 2600,
	2599, 2598, 2594, 205, 2593, 2592, 338, 122, 129, 2590,
	2586, 124, 201, 2580, 144, 2579, 2578, 2575, 171, 2574,
	3540, 2573, 2570, 81, 80, 2569, 96, 2565, 2564, 10,
	93, 78, 8, 16, 22, 2562, 2560, 79, 95, 2557,
	123, 120, 86, 2552, 119, 116, 2551, 2550, 12, 6,
	2547, 4, 2, 5, 84, 2545, 2539, 143, 2537, 2535,
	2534, 110, 2532, 2530, 4391, 2529, 106, 154, 121, 90,
	2526, 55, 67, 2523, 2519, 2517, 2516, 2514, 70, 2513,
	2512, 2511, 165, 40, 184, 2506, 48, 50, 65, 153,
	2505, 159, 100, 2502, 164, 158, 2500, 2499, 73, 52,
	53, 2494, 131, 152, 138, 39, 125, 156, 2492, 2491,
	74, 88, 2490, 2484, 2474, 2471, 185, 2466, 2462, 85,
	2461, 69, 2460, 202, 2459, 19, 2458, 63, 60, 2457,
	83, 133, 89, 34, 2454, 181, 2451, 71, 182, 151,
	172, 2447, 2442, 2439, 2437, 196, 301, 2435, 2434, 148,
	188, 168, 175, 103, 2432, 314, 2431, 2428, 127, 1591,
	5255, 2426, 28, 179, 2425, 2423, 6416, 155, 49, 30,
	2420, 139, 2417, 2415, 2413, 204, 186, 128, 987, 75,
	2412, 2410, 91, 14, 2409, 2408, 2407, 2404, 2402, 2401,
	99, 43, 42, 36, 207, 82, 20, 111, 178, 97,
	2400, 2398, 2397, 146, 101, 2396, 180, 177, 150, 132,
	2395, 199, 166, 161, 2376, 522, 35, 2371, 2366, 2365,
	2364, 130, 2360, 2356, 2355, 2353, 176, 170, 141, 104,
	2352, 102, 136, 174, 173, 68, 2351, 58, 2343, 2341,
	29, 195, 32, 2340, 18, 76, 77, 27, 134, 160,
	2339, 0, 2334, 24, 189, 300, 167, 2330, 2322, 7,
	11, 13, 2312, 2309, 2308, 2307, 157, 2298, 2296, 2295,
	2287, 25, 61, 23, 1, 140, 98, 2286, 2284, 4394,
	1587, 149, 2279, 210,
}

//line sql.y:7550
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 397, 398, 398, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 371, 371,
	371, 374, 374, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 104, 104, 22, 23, 23, 23, 23,
	401, 401, 179, 179, 177, 177, 178, 178, 250, 250,
	24, 25, 25, 260, 260, 259, 259, 259, 261, 261,
	261, 261, 298, 298, 26, 26, 26, 26, 26, 124,
	124, 373, 373, 372, 364, 364, 363, 363, 362, 370,
	370, 369, 369, 368, 38, 39, 48, 48, 48, 48,
	49, 50, 375, 375, 337, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 339, 339, 325, 325, 338, 338, 338, 338, 338,
	338, 338, 324, 324, 135, 135, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 390, 390, 390, 389, 389, 229, 229,
	229, 229, 229, 229, 229, 229, 145, 145, 157, 157,
	157, 157, 157, 143, 143, 144, 142, 142, 142, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 156, 156, 152, 152, 152, 153, 153,
	153, 154, 154, 391, 391, 391, 391, 303, 303, 303,
	303, 306, 306, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 305, 305, 305, 305, 305, 307, 307, 307,
	307, 307, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 309, 309,
	309, 309, 309, 309, 309, 309, 323, 323, 310, 310,
	318, 318, 319, 319, 319, 320, 320, 320, 321, 321,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 317,
	317, 316, 316, 316, 326, 351, 351, 350, 350, 348,
	348, 348, 348, 348, 348, 348, 348, 335, 335, 345,
	345, 345, 345, 345, 334, 334, 330, 330, 330, 331,
	331, 332, 332, 329, 329, 333, 333, 347, 347, 346,
	346, 327, 327, 328, 328, 353, 392, 392, 392, 392,
	392, 393, 393, 354, 382, 384, 384, 384, 383, 383,
	380, 381, 379, 379, 379, 379, 379, 81, 81, 81,
	273, 273, 274, 274, 343, 343, 342, 342, 342, 344,
	344, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 268, 268, 268, 378, 378, 378, 378, 378,
	378, 377, 377, 377, 340, 340, 340, 376, 376, 57,
	57, 212, 212, 395, 395, 396, 396, 396, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 106, 106, 107, 107, 107, 107, 109,
	109, 109, 356, 356, 58, 58, 3, 3, 167, 169,
	170, 170, 168, 168, 168, 168, 168, 168, 60, 60,
	59, 59, 172, 171, 173, 173, 173, 1, 1, 2,
	2, 4, 4, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 322, 322, 322, 355, 355,
	357, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 112, 111, 111, 110, 113, 113, 113, 113, 113,
	113, 113, 113, 359, 359, 359, 61, 61, 360, 311,
	312, 313, 5, 6, 336, 358, 120, 120, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 267,
	267, 276, 276, 266, 266, 291, 291, 291, 269, 269,
	269, 270, 270, 388, 388, 388, 263, 263, 64, 64,
	64, 66, 66, 67, 68, 68, 293, 293, 294, 294,
	69, 70, 82, 82, 82, 82, 82, 82, 105, 105,
	105, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 385, 385, 386, 387, 387, 387, 387,
	73, 75, 31, 31, 31, 31, 31, 31, 130, 130,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 125, 125, 125, 119, 119, 402, 76, 77,
	77, 123, 123, 123, 116, 116, 116, 122, 122, 122,
	16, 16, 17, 249, 249, 18, 18, 127, 127, 129,
	129, 129, 129, 129, 131, 131, 131, 131, 131, 131,
	131, 126, 126, 128, 128, 128, 128, 284, 284, 284,
	283, 283, 161, 161, 163, 162, 162, 164, 164, 165,
	165, 165, 165, 210, 210, 187, 187, 247, 247, 245,
	245, 246, 246, 248, 248, 248, 248, 251, 251, 166,
	166, 166, 166, 174, 174, 175, 175, 176, 176, 292,
	292, 289, 289, 289, 288, 288, 180, 180, 180, 182,
	181, 181, 181, 181, 183, 183, 185, 185, 184, 184,
	186, 191, 191, 190, 190, 188, 188, 188, 188, 189,
	189, 189, 189, 192, 192, 140, 140, 140, 140, 140,
	140, 140, 155, 155, 155, 155, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 236, 236, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 149, 83, 83, 83, 84,
	84, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	86, 141, 141, 88, 88, 87, 87, 205, 205, 281,
	281, 89, 90, 90, 93, 93, 92, 91, 91, 97,
	97, 94, 94, 96, 96, 95, 98, 98, 99, 100,
	100, 264, 264, 193, 193, 201, 201, 201, 201, 194,
	194, 194, 194, 194, 194, 194, 202, 202, 202, 209,
	203, 203, 199, 199, 199, 199, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 160, 160, 160, 160, 217, 217, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 148, 300, 300, 367, 367, 366, 366,
	365, 365, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 403, 403, 314, 314, 314, 314, 200,
	200, 200, 200, 200, 121, 121, 121, 121, 121, 297,
	297, 297, 301, 301, 301, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	302, 302, 215, 215, 117, 117, 213, 213, 214, 216,
	216, 211, 211, 211, 196, 196, 196, 218, 218, 219,
	219, 101, 102, 102, 103, 103, 220, 220, 222, 221,
	221, 223, 224, 224, 224, 225, 225, 226, 226, 226,
	47, 47, 47, 47, 47, 42, 42, 42, 42, 43,
	43, 43, 43, 132, 132, 132, 132, 134, 134, 133,
	133, 79, 79, 80, 80, 80, 138, 138, 139, 139,
	139, 136, 136, 137, 137, 243, 243, 227, 227, 227,
	234, 234, 234, 230, 230, 232, 232, 232, 233, 233,
	233, 231, 240, 240, 242, 242, 241, 241, 237, 237,
	238, 238, 239, 239, 239, 235, 235, 195, 195, 195,
	195, 195, 244, 244, 244, 244, 252, 252, 206, 206,
	208, 208, 207, 207, 159, 253, 253, 257, 254, 254,
	258, 258, 258, 258, 258, 255, 255, 256, 256, 285,
	285, 285, 262, 262, 275, 275, 271, 271, 272, 272,
	265, 265, 277, 277, 277, 74, 204, 204, 352, 352,
	349, 280, 280, 282, 282, 286, 286, 290, 290, 287,
	287, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 399,
	400, 295, 296, 296, 296,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 7, 7, 6,
	2, 2, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 5, 5, 6, 4, 4, 8, 6,
	8, 6, 8, 5, 4, 2, 2, 1, 2, 2,
	2, 8, 8, 6, 5, 4, 4, 4, 4, 4,
	7, 4, 6, 6, 6, 4, 4, 4, 7, 8,
	6, 5, 6, 8, 11, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 6, 5, 9, 6, 9,
	1, 1, 1, 1, 1, 1, 0, 2, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 6, 0, 2, 0, 2, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 2, 3, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 2, 1, 3, 0, 1, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 4, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -397, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -399,
	11, 438, 256, 255, 28, -12, 477, 86, -398, 621,
	-243, -227, 22, 33, 29, -226, -222, -123, -227, 20,
	18, 7, -76, -402, -76, -76, 12, 13, -76, -337,
	-339, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -361, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 477, 480, -344, 223, 229, 230,
	439, 123, 122, 75, 225, -341, 361, 510, 591, -56,
	593, 102, 104, 592, 44, 235, 594, 595, 596, 517,
	597, 244, 598, 599, 600, 601, 607, 559, 608, 609,
	610, 124, 7, -76, -290, -286, -371, -279, 89, 90,
	91, 474, 247, 508, 509, 296, 81, 41, 483, 358,
	361, 510, 591, 307, 321, 315, 342, 334, 475, 511,
	484, 299, 248, 284, 585, 332, 132, 593, 302, 512,
	262, 366, 367, 513, 368, 102, 310, 405, 606, 301,
	514, 604, 104, 592, 79, 51, 588, 44, 257, 330,
	231, 326, 594, 285, 515, 486, 278, 123, 120, 613,
	36, 324, 50, 30, 603, 122, 49, 595, 147, 516,
	596, 517, 370, 349, 579, 48, 371, 263, 518, 84,
	268, 479, 305, 587, 372, 472, 325, 373, 295, 602,
	228, 519, 571, 374, 375, 580, 520, 350, 354, 521,
	397, 376, 620, 52, 522, 523, 581, 121, 524, 78,
	597, 80, 319, 320, 525, 293, 246, 399, 346, 451,
	458, 459, 108, 109, 454, 110, 460, 111, 461, 462,
	463, 452, 112, 105, 453, 464, 465, 347, 348, 113,
	466, 107, 106, 455, 457, 114, 467, 244, 35, 377,
	476, 297, 58, 272, 400, 46, 352, 617, 45, 575,
	526, 578, 345, 341, 448, 53, 527, 528, 529, 530,
	598, 344, 318, 340, 612, 4, 290, 599, 62, 230,
	356, 355, 357, 279, 396, 337, 531, 532, 533, 251,
	82, 534, 327, 21, 535, 536, 378, 286, 537, 56,
	538, 539, 403, 260, 540, 54, 600, 39, 541, 265,
	614, 601, 542, 543, 544, 545, 267, 546, 380, 547,
	379, 351, 353, 274, 381, 478, 548, 306, 323, 264,
	605, 549, 252, 468, 469, 470, 471, 586, 266, 271,
	259, 404, 253, 550, 551, 552, 553, 554, 300, 570,
	555, 556, 311, 607, 449, 43, 557, 558, 559, 560,
	561, 294, 289, 398, 407, 61, 83, 363, 562, 563,
	584, 317, 287, 564, 308, 55, 608, 609, 610, 281,
	611, 9, 618, 619, 383, 124, 291, 292, 47, 338,
	273, 565, 303, 566, 328, 329, 343, 316, 339, 309,
	572, 275, 384, 450, 261, 567, 406, 288, 359, 364,
	304, 482, 280, 385, 583, 481, 336, 333, 282, 568,
	386, 236, 276, 277, 569, 573, 387, 388, 298, 389,
	390, 391, 392, 393, 395, 394, 283, 480, 314, 331,
	365, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 447,
	234, -76, 234, -184, -286, 234, -255, 367, -276, 369,
	382, 377, 387, 375, -267, 378, 380, 274, -388, 397,
	234, 384, 222, 370, 379, 388, 389, 298, 395, 390,
	394, 283, 391, 392, 393, -371, 174, 596, 611, 132,
	335, 374, 372, 398, 575, -286, 309, -293, 314, -280,
	-371, -279, 312, -184, -82, 571, 226, -295, -295, -125,
	575, 577, -203, -140, 140, -155, -158, -146, -150, -197,
	-198, -199, -200, -156, -211, 163, 164, 171, 141, -209,
	-159, 26, 473, 440, 439, 174, 31, -149, 68, 69,
	442, 443, 143, 57, 415, 416, -157, 410, 417, 412,
	445, 446, 115, 447, 105, 107, 106, 448, 449, 450,
	347, 348, 451, 452, 453, 108, 109, 110, 111, 112,
	113, 114, 454, 457, 455, 456, 458, 459, 460, 465,
	466, 461, 462, 463, 464, 467, -85, -97, 499, 498,
	-98, -147, -148, -280, -286, 239, 409, 233, 169, 438,
	-151, -144, -8, -207, 217, 408, 413, 414, 418, 411,
	485, 487, 502, 503, 505, 490, 495, 494, 497, 468,
	469, 470, 471, 472, -371, -279, -153, -152, -193, 92,
	98, 103, 99, -394, 116, -399, 589, 93, 94, 95,
	96, 97, 117, 118, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 44, 383, 383, -184,
	-76, -76, -76, -76, -220, -123, -222, -10, -8, -399,
	8, -76, -8, -9, -13, -34, -36, 504, -35, -286,
	-227, -243, 12, 159, 42, 50, -225, -226, -12, -8,
	-140, 19, 23, 24, -128, 165, -140, -286, -77, -128,
	-265, 238, -76, -76, -254, -298, 309, -258, 398, 397,
	-282, -256, -280, -278, -255, 396, 227, 23, 139, 25,
	27, 142, 174, 127, 19, 143, 37, 229, 335, 245,
	173, 241, 439, 222, 72, 485, 410, 412, 408, 415,
	441, 442, 409, 369, 31, 13, 487, 28, 255, 24,
	38, 167, 224, 146, 488, 258, 26, 256, 115, 118,
	490, 22, 75, 250, 14, 243, 40, 16, 491, 492,
	17, 239, 238, 159, 235, 70, 11, 217, 29, 155,
	66, 493, 134, 494, 495, 496, 497, 128, 68, 156,
	20, 615, 413, 414, 33, 576, 473, 269, 169, 73,
	59, 577, 140, 411, 498, 499, 116, 500, 119, 76,
	582, 136, 18, 71, 42, 501, 270, 502, 240, 616,
	503, 401, 504, 157, 225, 438, 69, 158, 589, 505,
	590, 233, 382, 8, 444, 32, 254, 242, 126, 67,
	506, 234, 145, 445, 446, 237, 129, 117, 7, 133,
	34, 12, 74, 77, 416, 417, 418, 57, 125, 477,
	144, 15, 507, 402, 138, 132, -338, 156, -324, -328,
	-280, 249, -354, 245, -184, -347, -346, -280, -399, -124,
	-275, 235, 243, 242, 133, -375, 136, 291, 409, 233,
	-51, -52, -53, -255, 173, 595, -106, 266, 270, 87,
	87, -328, -327, -326, -376, 270, 249, -353, -345, 241,
	250, -334, 242, 243, -329, 235, 134, -376, -329, 240,
	250, 245, 249, 270, 270, 124, 270, 124, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 265, -335, 148,
	-335, 481, 481, -341, -376, 245, 235, -376, -376, 237,
	35, 35, -277, -329, 237, 25, -335, -335, -335, -255,
	173, -335, -335, -335, -335, 278, 278, -335, -335, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, 234, -375, -132, 394, 298, 81,
	-54, 280, -37, -184, -275, 235, 236, -375, 267, -184,
	218, -184, -269, 156, 15, -269, -266, 383, 381, 368,
	373, -269, -269, -269, -269, 281, 366, -330, 235, 35,
	246, 383, 281, 366, 281, 282, 281, 282, 376, 386,
	281, -291, 14, 159, 409, 371, 375, 274, 234, 275,
	236, 385, 282, -291, 93, -270, 156, 383, 277, -269,
	-269, -296, -399, -282, 335, -371, 578, -296, -296, 32,
	90, 237, -280, -78, -280, 93, -15, -11, -22, -21,
	-23, 148, -130, 383, -118, 174, 596, 579, 580, 581,
	578, 380, 586, 584, 582, 281, 583, 87, 136, 138,
	139, 4, -140, 155, -194, 148, 149, 150, 151, 152,
	153, 154, 159, 140, 142, 156, -236, 137, 160, 161,
	162, 163, 164, 165, 166, 168, 167, 169, 170, 157,
	158, 173, 220, 221, -150, -150, -150, -150, -209, -399,
	-399, -399, -150, -264, -399, -399, -399, -399, -399, -215,
	-140, -399, -403, -399, -403, -403, -314, -399, -314, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, 218, -399, -399, -399, -399, -399, -150, -314, -314,
	-314, -314, -314, -399, -399, -399, -399, -399, 103, 98,
	92, -211, 99, 93, -280, -286, -8, -9, -203, -399,
	-295, -385, -386, -187, -184, -399, 298, -280, -280, 267,
	-225, -12, -8, -220, -226, -222, -8, -76, -116, -129,
	63, 64, -131, 24, 38, 67, 65, 23, -400, 88,
	-400, -243, -400, 87, -36, -247, 86, 61, 43, 93,
	93, 87, 21, -221, -223, -140, 14, -284, 4, -283,
	25, -280, 93, 218, 101, 14, -185, 29, -184, -265,
	-265, 87, 309, -258, -298, -260, -259, 399, 401, 148,
	-285, -280, 93, 31, 88, 87, -184, -303, -306, -308,
	-307, -309, -304, -305, 332, 333, 174, 336, 338, 339,
	340, 341, 342, 343, 344, 345, 346, 349, 32, 257,
	328, 329, 330, 331, 350, 351, 352, 353, 354, 355,
	356, 357, 315, 334, 475, 316, 317, 318, 319, 320,
	321, 323, 324, 325, 326, 327, -374, -371, 86, 88,
	87, -310, 86, -140, -132, 234, -371, 235, 235, 235,
	-76, 438, -335, -335, -335, 265, 19, -44, -41, -361,
	18, -40, -41, 227, 120, 121, 224, 86, -324, 86,
	-333, -374, -371, 86, 134, 240, 133, -332, -329, -332,
	-333, -371, -211, -371, 134, 134, -371, -371, -251, -280,
	-251, -251, 23, -251, 23, -251, 23, 95, -280, -251,
	23, -251, 23, -251, 23, -251, 23, -251, 23, 31,
	78, 79, 80, 31, 82, 83, 84, -211, -371, -371,
	-211, -324, -255, -184, -371, 95, 95, 95, -335, -335,
	95, 93, 93, 93, -335, -335, 95, 93, -288, -286,
	93, 93, -377, 251, 295, 297, 95, 95, 95, 95,
	31, 93, -378, 31, 603, 602, 604, 605, 606, 93,
	95, 31, 95, 31, 95, -280, 86, -184, -138, 285,
	222, 224, 227, 76, 93, 299, 303, 304, 148, 44,
	87, 237, 234, -371, -271, 239, -271, -280, -287, -286,
	-278, 93, -140, -331, 14, 159, -291, -291, -269, -184,
	-331, -291, -269, -184, -269, -269, -269, -269, -291, -291,
	-291, -269, -286, -286, -184, -184, -184, -184, -184, -184,
	-184, -296, -270, -269, 578, 93, -263, 14, 76, -296,
	-296, -294, 312, 346, 572, 573, 574, 87, 477, -177,
	-184, 578, 578, 578, 578, 578, 578, -140, -140, -140,
	-140, 500, -201, 116, 140, 117, 118, -158, -202, -207,
	-209, 100, 159, 142, 156, -236, -146, -150, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -297, -280, 93, 174, -154, -153, 99, -394, -154,
	-126, -128, -140, -140, -371, -126, -126, -140, -122, 24,
	38, -213, -214, 144, -211, -400, -400, 95, 99, -280,
	-280, -115, -114, 420, 421, 422, 423, 425, 426, 427,
	430, 431, 435, 436, 419, 437, 424, 429, 432, 433,
	434, 428, 331, -140, -140, -140, -140, -140, -140, -83,
	-140, 127, 128, 129, -140, -140, -204, -203, -370, -369,
	-368, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -400, -140, -160, -144, 95, -371,
	99, -140, -140, -127, 24, 38, -126, -282, -287, -278,
	-126, -127, -127, -126, -126, -280, -140, -140, -140, -140,
	-140, 218, -243, -400, -203, 87, -387, 401, 402, 576,
	-289, 270, -288, 25, -204, 93, 14, -249, 77, -280,
	-225, -225, 63, 64, 59, -126, -131, -400, -35, 25,
	-245, -280, 62, 93, -315, -255, 358, 359, 174, -140,
	-140, 87, -224, 27, 28, -184, -283, 165, -287, -184,
	-250, 270, -184, -162, -164, -165, -166, -187, -210, -399,
	-167, 496, 493, 14, -177, -178, -186, -286, -258, -260,
	87, 400, 402, 403, 76, 119, -140, -316, 173, -343,
	-342, -341, -324, -326, -327, -328, 88, -316, -320, 364,
	363, -310, -310, -310, -310, -310, -315, -315, -315, -315,
	86, 86, -310, -310, -310, -310, -318, 86, -318, -318,
	-319, 86, -319, -354, -140, -351, -350, -348, -349, 244,
	102, 569, 525, 477, 517, 559, 77, -346, -224, 95,
	-400, -138, -272, 239, -352, -349, -371, -371, -371, -272,
	-371, 93, -371, 93, -371, 93, -107, -58, -1, 615,
	616, 617, 87, 19, -325, -324, -57, 295, -357, -358,
	270, -353, -347, -333, 134, -332, -333, -333, -371, 87,
	29, 124, 124, 124, 124, 477, 224, 32, -273, 516,
	140, 569, 525, -324, -57, -297, 237, -297, -297, 93,
	93, -268, 611, -177, -134, 287, 148, 276, 276, 234,
	234, 289, -184, 300, 302, 301, 299, 303, 304, 23,
	23, 23, 288, 290, 292, 278, -184, -184, -271, 76,
	-179, -184, 26, -286, -184, -269, -269, -184, -269, -269,
	-184, -280, -118, 401, 87, 477, 22, -119, 22, -399,
	116, 117, 118, -202, -146, -150, -146, 139, 258, 87,
	-400, 25, 87, 77, -400, -400, -400, 87, 14, -126,
	-216, -214, 146, -140, -400, -400, -400, 87, 87, 14,
	-301, 25, -400, -400, -400, -400, -400, -215, -400, 14,
	87, 87, -400, -400, 87, 87, -400, 87, 87, 87,
	-367, 87, 87, 87, 87, -400, -400, -400, -400, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, -400,
	-90, 501, -400, -400, 87, -400, 87, -400, -126, -126,
	-399, 218, -400, -400, -400, -400, -400, 87, 87, 87,
	87, 87, -282, -400, -386, 575, 402, -191, -190, -188,
	74, 238, 75, -399, -288, -400, -154, 90, -246, 90,
	-245, -196, -280, 95, 99, -227, -161, -163, 14, -131,
	-209, 88, 87, -315, -231, -237, -266, -280, 93, 174,
	-317, 174, -317, 358, 359, -223, 218, -192, 15, -195,
	32, 57, -11, -399, -399, 32, 87, -180, -182, -181,
	-183, 66, 70, 72, 67, 68, 69, 73, -292, 25,
	-162, -9, -8, -399, -399, -399, -184, -177, -401, 14,
	77, -401, 87, 218, -259, -261, 404, 401, 407, -371,
	93, -106, 87, -341, -328, -228, -135, 40, -321, 365,
	-315, 484, -315, -323, 93, -323, 95, 95, 88, -47,
	-42, -43, 33, 81, -348, -335, 93, 39, -335, -335,
	-280, 88, -224, -134, -184, 140, 76, -352, -352, -352,
	-286, -2, 614, 620, 134, 86, 368, 18, -245, 87,
	88, -212, 296, 88, -108, -280, 88, 86, -333, -333,
	-280, -399, 234, 31, 31, 569, 525, 516, -57, -212,
	-316, -371, 613, 612, 88, 236, 294, -139, 415, -136,
	93, 89, -184, -184, -184, -184, -184, 227, 224, -395,
	305, -395, 279, 237, -177, -184, 87, -81, 253, 248,
	-291, -291, 33, -184, 401, 587, 585, -140, 139, 258,
	-158, -150, -128, 474, -299, 174, 332, 257, 330, 326,
	346, 337, 363, 328, 364, 325, 324, 323, -299, -297,
	-140, -140, -220, 147, -140, 145, -140, -140, -140, -400,
	174, 332, 14, -140, -140, -140, -368, -140, -140, -140,
	-366, -365, -154, -211, -400, -366, -140, -140, -365, -365,
	-369, -369, -369, -369, -369, -203, -203, -203, -203, -399,
	-280, -93, -92, -91, 552, 238, -90, -160, -93, -160,
	-400, -400, -127, -282, -140, -140, -140, -140, -140, -188,
	-329, -329, -329, -251, 87, -262, 22, 14, 57, 57,
	-161, -192, -162, -131, -280, -234, 571, -240, 46, -238,
	-239, 47, -235, 48, 56, -317, -317, 165, -225, -140,
	-252, 76, -253, -257, -211, -206, -208, -207, -399, -244,
	-400, -280, -251, -253, -164, -165, -165, -164, -165, 66,
	66, 66, 71, 66, 71, 66, -181, -286, -400, -400,
	-9, -9, -140, -289, 77, -162, -162, -186, -286, 165,
	401, 405, 406, -341, -393, 116, 140, 31, 76, 361,
	102, -391, 173, 513, 564, 569, 525, 517, 559, -392,
	240, 133, 134, 252, 25, 41, 88, 87, 88, 87,
	88, 87, -274, -273, -43, -42, -335, -335, 95, -371,
	93, 93, 236, 26, -184, 76, 76, 76, -109, 618,
	95, 86, -3, 81, -140, 86, 19, -324, -211, -359,
	-311, -360, -312, -313, -5, -6, -336, -112, 57, 102,
	-61, 44, 235, 598, 599, 124, -399, 611, -351, -245,
	-355, -357, -184, -143, -399, -142, -144, -151, 163, 164,
	-212, -184, -133, 285, 293, 86, -137, 90, -373, 77,
	276, 361, 276, -396, 306, 93, -396, -184, -81, -47,
	-184, -269, -269, 33, -371, -400, -158, -150, -399, -302,
	483, -310, -310, -310, -319, -310, 320, -310, 320, -310,
	-302, -400, 87, -400, 22, -400, -117, 444, -140, 87,
	87, -400, 86, 86, -140, -400, -400, -400, -367, 87,
	-400, 87, -400, 87, -300, 570, -400, -400, -400, -400,
	-400, -400, -400, -400, -400, -400, -89, -281, -280, -90,
	534, 534, -400, -90, -217, 87, -400, -400, 87, -400,
	87, 87, -400, 87, -400, -189, 22, -189, -189, -400,
	90, -184, -192, -218, 16, -231, 51, 338, -242, -241,
	55, 47, -239, 19, 49, 19, 30, -252, 87, 148,
	87, -400, -400, 87, 57, 218, -400, -192, -175, -174,
	76, 77, -176, 76, -174, 66, 66, -247, -400, -400,
	87, -250, -162, -192, -192, 218, 116, -399, -145, -157,
	-143, 12, 93, 93, -371, -390, 602, 603, 31, 95,
	-335, -335, 134, 134, -184, 86, -315, 93, -315, 95,
	95, 31, 82, 83, 84, 31, 78, 79, 80, -184,
	-184, -184, -184, -356, 86, 19, -140, 86, 148, 88,
	-245, -245, 272, 159, -335, 596, 278, 278, -335, -335,
	-335, -111, -110, 618, 88, -400, 87, -322, 477, 480,
	-140, -152, -152, -247, 88, -364, 477, -372, -280, -280,
	-280, -280, 95, 97, -146, -400, -315, -400, -140, -140,
	-225, 93, -140, -140, 95, 95, -400, -400, -366, -365,
	-140, -400, -172, -171, -173, 579, 116, 31, -299, -400,
	-205, 270, -96, -95, -94, 14, -400, -140, -140, -140,
	-140, -140, -399, 66, 18, 16, -399, -399, -289, -218,
	-219, 17, 19, -232, 53, -230, 52, -230, -241, 19,
	19, 93, 19, 93, 134, -257, -140, -208, 57, -11,
	-280, -206, -280, -220, -140, 86, -140, -154, -192, -192,
	-140, -198, 447, 105, 107, 106, 448, 449, 450, 347,
	348, 451, 452, 453, 108, 109, 110, 111, 112, 113,
	114, 454, 457, 455, 458, 459, 460, 465, 466, 461,
	462, 463, 464, 467, 468, 469, 470, 471, 472, 93,
	93, 86, -140, 88, 88, -247, -355, -58, 88, -245,
	95, 88, 273, -207, -399, 93, -335, -335, -335, 95,
	95, -288, -400, 87, -280, -392, -357, 481, 481, -400,
	25, -363, -362, -282, 86, 77, -121, 159, 477, -400,
	-400, -400, -400, -400, 88, 88, -400, -400, 87, -400,
	-171, -173, -400, 76, -154, -220, 19, -93, 295, 297,
	-93, -400, 87, -400, -400, 87, -400, 87, -248, -400,
	-280, 240, 19, 19, -248, -248, -191, -219, -103, -102,
	-101, 507, -140, -203, -233, 54, 76, 119, 93, 93,
	93, 12, -206, 218, -225, -245, -169, 368, -220, -400,
	-245, 88, 25, 88, 620, 134, 88, -207, -120, -399,
	269, -288, 93, 93, -110, -113, -11, 87, 148, -245,
	-184, -400, 475, 73, 478, -140, -400, 76, 488, 579,
	-88, -87, -84, 590, 616, -203, -90, -90, -140, -140,
	-140, 87, -400, -400, -400, -103, 87, -100, -99, -280,
	76, 119, -253, -280, 88, -400, -399, -225, 88, -229,
	-11, 86, -3, 269, -311, -360, -312, -313, -5, -6,
	-336, -79, 477, -362, -340, -282, 93, 95, 88, 62,
	476, 479, -367, -86, 142, 588, 567, -141, -152, -149,
	-400, 87, -400, 87, -400, 87, -280, 240, -101, 87,
	25, -289, -170, -168, -280, 531, -383, -382, 473, -393,
	-389, 116, 140, 102, -391, 569, 525, 125, 126, -79,
	-140, 86, -400, -80, 284, 575, -373, 62, -400, -86,
	589, 545, 519, 545, 519, -140, -140, -140, -99, -399,
	-400, 87, 22, -303, -60, 542, -380, -381, 76, -384,
	374, 541, 562, 116, 93, 88, -245, 245, -364, 477,
	139, -400, 87, -400, 87, -400, -89, -168, 538, -316,
	-154, -381, 76, -380, 76, 13, 12, -4, 619, 88,
	286, 478, -86, -140, -140, -400, -59, 26, -169, -379,
	253, 248, 251, 32, -379, 95, -4, 479, -400, -400,
	542, 247, 31, 116, -154, -172, -171, -171,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1397, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1911, 1911, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1256, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1909, 1, 3,
	69, 73, 0, 0, 0, 56, 1265, 0, 76, 0,
	0, 831, 0, 829, 0, 1380, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1382, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1283, 153, 1398, 1395, 1396, 38, 39,
	40, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	0, 1374, 0, 686, 928, 0, 748, 748, 0, 748,
	748, 748, 748, 0, 0, 0, 698, 0, 0, 0,
	0, 745, 0, 714, 715, 0, 745, 0, 721, 751,
	0, 726, 748, 748, 729, 1912, 0, 1912, 1912, 1365,
	0, 742, 740, 754, 755, 758, 762, 0, 767, 770,
	1391, 1392, 0, 785, 47, 1641, 777, 790, 791, 0,
	823, 824, 43, 1070, 0, 950, 955, 966, 981, 982,
	983, 984, 985, 987, 988, 0, 0, 0, 0, 993,
	994, 0, 0, 0, 0, 0, 1051, 1002, 0, 0,
	0, 0, 1232, 0, 1193, 1193, 1087, 1193, 1195, 1195,
	0, 0, 0, 1908, 1682, 1690, 1691, 1713, 1803, 1852,
	1686, 1687, 1668, 1680, 1683, 1671, 1672, 1674, 1676, 1681,
	1688, 1694, 1673, 1693, 1692, 0, 1669, 1670, 1675, 1685,
	1689, 1677, 1678, 1679, 1684, 1695, 0, 0, 0, 0,
	0, 1140, 1141, 1241, 0, 0, 0, 0, 0, 0,
	273, 274, 1069, 1354, 0, 1195, 1195, 1195, 1195, 1195,
	1011, 1012, 1013, 1014, 1015, 1039, 1040, 1046, 1047, 1782,
	1783, 1784, 1785, 1634, -2, -2, 219, 220, 221, 222,
	223, 224, 225, 0, 215, 0, 0, 278, 279, 275,
	276, 277, 1053, 1054, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 1911, 0, 800, 0,
	0, 0, 0, 0, 1265, 0, 1257, 1256, 61, 0,
	827, -2, 0, 0, 0, 0, 45, 0, 50, 887,
	75, 74, 1305, 0, 0, 0, 57, 1266, 65, 67,
	1267, 0, 832, 833, 0, 863, 867, 0, 828, 0,
	0, 1381, 1380, 1380, 100, 0, 1848, 1358, -2, -2,
	0, 0, 1393, 1394, 1367, -2, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, -2, 0, 0, 165, 166,
	0, 41, 404, 0, 161, 0, 397, 338, 0, 1283,
	0, 0, 0, 0, 0, 827, 0, 1375, 142, 143,
	150, 151, 152, 377, 377, 377, 549, 0, 0, 153,
	153, 508, 509, 510, 0, 0, -2, 402, 0, 488,
	0, 0, 391, 391, 395, 393, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 0, 378,
	0, 547, 548, 440, 0, 0, 0, 0, 0, 0,
	524, 525, 0, 0, 1383, 1384, 0, 0, 0, 377,
	377, 0, 0, 0, 0, 377, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 1296, 0, 0, 0,
	-2, 0, 678, 0, 0, 0, 1376, 1376, 0, 685,
	0, 687, 688, 0, 0, 689, 0, 745, 745, 743,
	744, 691, 692, 693, 694, 748, 0, 0, 386, 387,
	388, 745, 748, 0, 748, 748, 748, 748, 745, 745,
	745, 748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1912, 751, 748, 0, 722, 0, 723, 724, 727,
	728, 730, 1913, 1914, 1413, 1912, 1912, 734, 738, 1366,
	760, 768, 771, 788, 786, 787, 789, 781, 782, 783,
	784, 0, 802, 803, 808, 0, 0, 0, 0, 814,
	815, 816, 0, 0, 819, 820, 821, 0, 0, 0,
	0, 0, 948, 0, 0, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 967,
	968, 0, 0, 0, 989, 990, 991, 992, 995, 0,
	0, 0, 1000, 1001, 0, 0, 0, 0, 837, 0,
	1233, 0, 1085, 0, 1086, 1088, 1089, 0, 1090, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1386, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	847, 0, 0, 847, 847, 0, 0, 0, 208, 209,
	210, 211, 212, 0, 0, 0, 0, 0, 226, 227,
	228, 229, 230, 280, 1241, 0, 1069, 0, 0, 0,
	44, 792, 793, 0, 911, 1386, 0, 0, 843, 0,
	55, 64, 66, 1265, 59, 1265, 0, 849, 0, 0,
	-2, -2, 850, 856, 857, 858, 859, 860, 52, 1910,
	53, 0, 72, 0, 46, 0, 0, 0, 0, 350,
	1308, 0, 0, 1258, 1259, 1262, 0, 864, 1724, 868,
	0, 870, 871, 0, 830, 0, 98, 0, 927, 0,
	0, 0, 1848, 1364, 0, 102, 103, 0, 0, 0,
	361, 1369, 1370, 1371, -2, 384, 0, 361, 345, 288,
	289, 290, 338, 292, 338, 338, 338, 338, 350, 350,
	350, 350, 321, 322, 323, 324, 325, 0, 0, 307,
	338, 338, 338, 338, 328, 329, 330, 331, 332, 333,
	334, 335, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 340, 340, 340, 342, 342, 0, 42, 0, 365,
	0, 1262, 0, 0, 1296, 1378, 1388, 0, 0, 0,
	1378, 120, 0, 0, 0, 550, 584, 502, 538, 551,
	0, 505, 506, -2, 0, 0, 487, 0, 489, 0,
	385, 0, -2, 0, 395, 0, 391, 395, 392, 395,
	383, 396, 528, 529, 530, 0, 532, 533, 614, 897,
	0, 0, 0, 0, 0, 620, 621, 622, 0, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 489, 0, 535, 0, 441, 442, 443, 0, 0,
	446, 447, 448, 449, 0, 0, 452, 453, 454, 914,
	915, 455, 456, 481, 482, 483, 457, 458, 459, 460,
	461, 462, 463, 475, 476, 477, 478, 479, 480, 464,
	465, 466, 467, 468, 469, 472, 0, 135, 1287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1376, 0, 0, 0, 0, 846, 929, 1399,
	1400, 749, 750, 0, 389, 390, 748, 748, 695, 735,
	0, 748, 699, 736, 700, 702, 701, 703, 716, 717,
	748, 706, 746, 747, 707, 708, 709, 710, 711, 712,
	713, 731, 718, 719, 720, 752, 0, 756, 757, 732,
	733, 0, 769, 773, 774, 775, 776, 0, 0, 805,
	94, 810, 811, 812, 813, 825, 818, 1071, 945, 946,
	947, 0, 949, 952, 0, 1055, 1057, 954, 956, 1066,
	1067, 1068, 0, 0, 0, 0, 0, 960, 964, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 986, 1209, 1210, 1211, 1003, 281, 282, 0, 1004,
	0, 861, 0, 0, 0, 0, 0, 0, 0, 838,
	839, 1239, 1236, 0, 0, 1194, 1196, 0, 0, 0,
	0, 0, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1212, 0, 0, 0, 0, 0, 1232,
	0, 1006, 1007, 1008, 0, 0, 0, 1387, 0, 130,
	131, 0, 0, 0, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1142, 1143, 1144,
	1145, 0, 0, 0, 0, 0, 848, 1242, 0, -2,
	0, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 0, 795, 796, 798, 0,
	931, 0, 912, 0, 0, 801, 0, 842, 0, 845,
	58, 60, 854, 855, 0, 872, 851, 54, 49, 0,
	0, 889, 1306, 350, 1328, 0, 359, 359, 356, 1268,
	1269, 0, 1261, 1263, 1264, 77, 869, 865, 0, 943,
	0, 0, 926, 0, 875, 877, 878, 879, 909, 0,
	882, 0, 0, 0, 0, 0, 96, 928, 1359, 101,
	0, 0, 106, 107, 1360, 1361, 1362, 1363, 0, 573,
	-2, 436, 167, 169, 170, 171, 162, -2, 348, 346,
	347, 291, 350, 350, 315, 316, 317, 318, 319, 320,
	0, 0, 308, 309, 310, 311, 302, 0, 303, 304,
	305, 0, 306, 403, 0, 1270, 366, 367, 369, 377,
	0, 372, 373, 0, 377, 377, 0, 398, 399, 0,
	1262, 1287, 0, 0, 0, 1389, 1388, 1388, 1388, 0,
	155, 156, 157, 158, 159, 160, 609, 0, 0, 585,
	607, 608, 153, 0, 0, 163, 491, 490, 0, 641,
	0, 401, 0, 0, 395, 395, 380, 381, 531, 0,
	0, 616, 617, 618, 619, 0, 0, 0, 518, 430,
	0, 519, 520, 489, 491, 361, 0, 444, 445, 450,
	451, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 565, 566, 567, 493, 571, 568,
	493, 572, 1284, 1285, 1286, 0, 0, 679, 0, 0,
	427, 92, 1377, 684, 745, 705, 737, 745, 697, 704,
	725, 765, 809, 0, 0, 0, 0, 817, 0, 0,
	953, 1056, 1058, 957, 0, 961, 965, 0, 0, 0,
	0, 0, 0, 0, 1052, 1076, 1077, 0, 0, 1256,
	0, 1237, 0, 0, 1084, 1197, 1198, 0, 0, 0,
	0, 0, 1095, 1096, 1097, 1098, 1099, 0, 1101, 0,
	0, 0, 1105, 1106, 0, 0, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 1119, 1120, 1121, 1122, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1133,
	1134, 0, 1034, 0, 0, 1034, 0, 1072, 0, 0,
	847, 0, 1199, 1200, 1201, 1202, 1203, 0, 0, 0,
	0, 0, 1242, 1353, 794, 797, 799, 885, 932, 933,
	0, 0, 0, 0, 913, 1385, 840, 841, 844, -2,
	0, 0, 1244, 0, 0, 872, 943, 873, 0, 852,
	51, 888, 0, 1310, 1309, 1322, 1335, 359, 359, 353,
	354, 360, 355, 357, 358, 1260, 0, 1265, 0, 1346,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 916, 0, 0, 919, 0, 0, 0, 0, 910,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 90,
	91, 0, 0, 0, 104, 105, 0, 0, 111, 362,
	363, 144, 153, 438, 168, 411, 0, 0, 287, 349,
	312, 313, 314, 0, 336, 0, 0, 0, 432, 116,
	1274, 1273, 377, 377, 368, 0, 371, 0, 0, 0,
	1390, 339, 400, 0, 134, 0, 0, 0, 0, 0,
	140, 579, 0, 0, 586, 0, 0, 0, 500, 0,
	511, 512, 0, 613, -2, 675, 365, 0, 379, 382,
	898, 0, 0, 513, 0, 516, 517, 431, 491, 522,
	523, 536, 473, 474, 471, 0, 0, 1297, 1298, 1303,
	1301, 1302, 121, 557, 559, 558, 562, 0, 0, 495,
	0, 495, 555, 0, 427, 1270, 0, 683, 428, 429,
	748, 748, 804, 95, 0, 807, 0, 0, 0, 0,
	958, 962, 862, 0, 1230, 338, 338, 1217, 338, 342,
	1220, 338, 1222, 338, 1225, 338, 1228, 1229, 1230, 0,
	0, 0, 1234, 1083, 1240, 0, 0, 0, 0, 1094,
	0, 0, 0, 0, 0, 0, 132, 133, 1166, 0,
	0, 1168, 1170, 1171, 1111, 1167, 0, 0, 1164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1029,
	1033, 0, 1035, 1036, 0, 0, 1136, 0, 0, 1146,
	1073, 1074, 0, 1243, 0, 0, 0, 0, 0, 934,
	939, 939, 939, 0, 0, 0, 1372, 1373, 1245, 1246,
	943, 1247, 874, 853, 890, 1328, 0, 1321, 0, -2,
	1330, 0, 0, 0, 1336, 351, 352, 866, 78, 944,
	81, 0, 1346, 1355, 0, 1337, 1348, 1350, 0, 0,
	0, 1342, 0, 943, 876, 905, 907, 0, 902, 917,
	918, 920, 0, 922, 0, 924, 925, 887, 881, 883,
	0, 0, 0, 98, 0, 943, 943, 97, 0, 930,
	108, 109, 110, 437, 172, 177, 0, 0, 0, 182,
	0, 184, 0, 0, 0, 189, 190, 377, 377, 412,
	0, 284, 286, 0, 0, 175, 350, 0, 350, 0,
	343, 0, 413, 433, 1271, 1272, 0, 0, 370, 374,
	375, 376, 0, 1379, 136, 0, 0, 0, 582, 0,
	610, 0, 0, 0, 0, 0, 0, 164, 492, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 0, 377,
	0, 0, 0, 377, 377, 377, 0, 667, 364, 0,
	0, 638, 635, 514, 0, 213, 214, 216, 0, 0,
	521, 887, 1288, 1289, 1290, 0, 1300, 1304, 124, 0,
	0, 0, 0, 569, 0, 494, 570, 680, 681, 682,
	93, 690, 696, 806, 826, 951, 959, 963, 0, 0,
	1231, 1215, 350, 1218, 1219, 1221, 1223, 1224, 1226, 1227,
	0, 999, 0, 1079, 0, 1081, 1265, 0, 1238, 0,
	0, 1093, 0, 0, 0, 1102, 1103, 1104, 0, 0,
	1110, 0, 1112, 0, 0, 0, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 0, 1027, 1030, 1135,
	1037, 1038, 1043, 1138, 0, 0, 1075, 1148, 0, 1153,
	0, 0, 1159, 0, 1163, 0, 0, 0, 0, 911,
	-2, 62, 1247, 1249, 0, 1315, 1313, 1313, 1323, 1324,
	0, 0, 1331, 0, 0, 0, 0, 82, 0, 0,
	0, 1351, 0, 0, 0, 0, 99, 1256, 899, 906,
	0, 0, 900, 0, 901, 921, 923, 880, -2, 884,
	0, 943, 943, 88, 89, 0, 178, 0, 180, 206,
	207, 0, 183, 185, 186, 187, 193, 194, 195, 188,
	0, 0, 283, 285, 0, 0, 326, 337, 327, 0,
	0, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 887,
	137, 138, 139, 574, 0, 584, 0, 0, 0, 577,
	0, 503, 0, 0, 0, 377, 377, 377, 0, 0,
	0, 0, 652, 0, 0, 615, 0, 623, 0, 0,
	0, 217, 218, 0, 1299, 556, 0, 122, 123, 0,
	0, 561, 496, 497, 1204, 997, 1216, 998, 0, 0,
	0, 1235, 0, 0, 0, 0, 1100, 1108, 0, 1169,
	0, 1115, 0, 0, 0, 604, 605, 0, 1165, 1032,
	1256, 0, 1034, 1044, 1045, 0, 1034, 1147, 0, 0,
	0, 0, 0, 940, 0, 0, 0, 0, 931, 1249,
	1254, 0, 0, 1318, 0, 1311, 1314, 1312, 1325, 0,
	0, 1332, 0, 1334, 0, 1356, 1357, 1349, 0, 1341,
	1344, 1340, 1343, 1265, 903, 0, 908, 0, 1256, 87,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	192, 0, 0, 341, 344, 0, 0, 0, 575, 0,
	587, 578, 0, 665, 0, 669, 0, 0, 0, 672,
	673, 674, 651, 0, 655, 405, 639, 636, 637, 515,
	0, 125, 126, 0, 0, 0, 0, 0, 0, 1078,
	1080, 1082, 1091, 1092, 1213, 1214, 1109, 1113, 0, 1116,
	0, 0, 1117, 0, 606, 1023, 0, 0, 1041, 1042,
	0, 1149, 0, 1154, 1155, 0, 1160, 0, 0, 936,
	893, 894, 941, 942, 0, 0, 886, 1254, 80, 1255,
	1252, 0, 1250, 1248, 1307, 0, 1316, 1317, 1326, 1327,
	1333, 0, 1339, 0, 85, 0, 0, 0, 1265, 179,
	0, 198, 0, 583, 0, 586, 576, 663, 664, 0,
	676, 668, 670, 671, 653, -2, 1291, 0, 0, 0,
	563, 996, 0, 0, 0, 1166, 1118, 0, 602, 603,
	1031, 1024, 0, 1009, 1010, 1028, 1137, 1139, 0, 0,
	0, 0, 935, 937, 938, 79, 0, 1251, 1049, 0,
	1319, 1320, 1347, 1345, 904, 911, 0, 86, 418, 411,
	1291, 0, 0, 0, 656, 657, 658, 659, 660, 661,
	662, 553, 1293, 127, 128, 484, 485, 486, 121, 1205,
	0, 1208, 0, 1025, 0, 0, 0, 0, 1021, 1022,
	1150, 0, 1156, 0, 1161, 0, 895, 896, 1253, 0,
	0, 588, 0, 590, 0, -2, 406, 419, 0, 173,
	199, 200, 0, 0, 203, 204, 205, 196, 197, 117,
	0, 0, 677, 0, 1294, 1295, 124, 1206, 1114, 0,
	1016, 1017, 1018, 1019, 1020, 0, 0, 0, 1050, 1029,
	589, 0, 0, 361, 0, 599, 407, 408, 0, 414,
	415, 416, 417, 201, 202, 611, 0, 0, 560, 0,
	0, 1151, 0, 1157, 0, 1162, 0, 591, 592, 600,
	0, 409, 0, 410, 0, 0, 0, 580, 0, 611,
	1292, 0, 1026, 0, 0, 1048, 0, 601, 597, 420,
	422, 423, 0, 0, 421, 612, 581, 1207, 1152, 1158,
	0, 424, 425, 426, 593, 594, 595, 596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 621,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:573
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:578
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:583
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:619
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:625
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:629
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:638
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:648
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:654
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:660
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:664
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:673
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:683
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:689
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:695
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:699
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:703
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:763
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:799
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:814
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:842
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:880
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:892
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:896
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:902
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:908
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:912
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:925
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:926
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:930
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:934
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:940
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:944
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:950
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:954
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:963
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:969
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:975
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:979
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:985
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:989
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:995
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:999
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1003
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1009
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1013
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1017
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1021
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1027
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1031
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1037
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1043
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1050
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1059
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1063
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1070
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1074
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1079
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1089
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1094
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1099
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1105
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1110
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1116
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1125
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1131
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1147
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1154
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1161
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1166
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1171
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1176
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1183
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1190
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1201
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1212
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1218
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1222
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1226
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1234
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1238
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1244
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1248
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1254
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1258
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1264
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1268
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1274
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1278
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1284
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1288
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1294
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1298
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1304
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1309
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1318
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1323
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1327
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1331
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1342
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1351
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1360
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1373
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1377
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1394
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1399
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1404
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1409
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1414
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1423
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1432
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1437
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1443
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1449
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1453
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1459
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1463
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1467
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1473
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1477
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1482
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1486
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1491
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1497
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1508
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1519
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1527
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1534
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1561
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1568
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1572
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1578
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1582
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1586
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1590
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1594
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1598
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1602
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1607
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1611
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1615
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1804
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1808
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1812
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1818
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1822
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1826
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1832
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1836
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1843
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1847
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1851
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1855
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2083
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2092
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2101
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2119
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2127
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2131
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2135
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2140
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2144
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2149
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2170
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2180
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2185
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2191
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2195
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2200
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2215
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2224
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2230
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2234
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2240
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2244
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2249
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2253
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2257
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2261
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2265
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2269
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2275
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2285
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2289
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2293
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2297
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2301
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2306
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2316
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2335
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2340
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2350
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2354
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2369
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2373
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2379
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2383
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2389
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2393
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2399
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2403
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2409
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2415
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2419
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2423
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2427
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2431
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2440
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2446
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2452
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2458
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2462
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2466
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2471
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2475
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2481
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2487
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2493
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2497
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2501
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2505
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2509
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2528
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2532
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2537
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2541
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2550
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2556
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2570
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2580
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2584
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2588
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2592
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2604
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2608
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2612
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2616
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2620
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2624
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2628
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2632
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2636
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2640
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2644
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2648
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2652
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2656
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2660
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2664
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2668
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2672
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2676
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2680
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2684
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2688
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2692
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2696
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2700
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2709
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2713
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2745
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2751
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2755
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2764
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2769
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2773
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2782
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2786
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2795
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2799
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2803
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2807
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2811
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2817
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2821
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2825
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2831
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2835
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2839
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2843
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2847
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2851
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2855
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2859
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2863
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2867
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2872
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2877
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2881
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2885
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2889
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2893
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2897
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2901
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2905
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2909
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2913
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2917
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2921
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2925
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2929
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2933
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2937
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2941
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2945
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2949
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2955
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2965
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2969
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2973
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2977
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2981
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2985
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2989
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2993
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3007
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3014
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3021
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3028
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3034
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3051
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3058
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3070
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3080
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3084
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3088
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3115
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3126
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3133
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3140
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3160
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3184
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3191
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3195
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3204
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3212
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3221
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3228
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3240
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3249
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3264
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3269
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3273
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3278
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3282
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3288
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3294
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3300
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3304
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3310
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3314
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3320
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3326
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3332
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3338
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3344
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3348
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3352
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3356
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3362
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3368
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3374
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3378
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3382
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3388
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3392
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3397
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3401
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3406
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3410
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3416
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3420
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3424
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3428
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3432
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3436
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3440
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3444
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3448
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3452
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3456
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3460
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3464
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3468
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3472
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3476
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3480
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3484
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3488
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3492
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3496
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3500
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3505
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3509
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3513
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3520
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3524
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3530
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3535
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3539
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3544
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3549
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3554
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3559
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3564
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3570
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3576
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3581
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3587
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3593
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3597
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3603
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3608
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3612
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3617
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3622
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3627
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3632
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3638
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3644
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3651
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3658
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3665
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3673
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3677
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3683
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3689
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3695
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3701
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3707
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3713
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3719
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3725
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3731
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3735
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3747
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3751
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3757
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3770
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3774
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3784
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3815
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3847
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3851
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3855
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3863
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3883
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3887
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3919
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3931
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3990
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3994
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3998
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4004
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4014
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4018
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4028
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4034
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4042
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4052
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4056
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4066
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4072
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4076
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4080
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4114
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4126
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4130
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4135
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4137
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4140
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4158
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4162
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4166
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4170
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4174
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4178
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4202
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4206
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4210
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4215
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4229
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4233
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4239
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4243
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4249
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4255
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4259
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4265
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4271
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4275
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4279
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4283
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4289
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4295
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4301
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4305
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4309
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4313
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4317
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4321
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4327
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4331
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4337
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4345
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4349
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4357
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4365
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4369
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4386
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4390
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4394
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4399
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4403
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4408
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4412
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4418
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4422
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4428
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4432
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4436
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4454
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4458
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4462
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4468
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4472
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4484
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4493
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4499
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4503
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4508
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4512
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4517
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4525
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4529
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4533
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4539
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4569
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4579
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4583
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4587
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4591
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4596
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4600
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4604
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4611
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4616
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4620
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4626
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4632
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4636
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4646
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4650
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4654
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4658
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4664
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4668
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4674
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4678
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4687
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4693
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4697
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4703
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4707
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4713
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4717
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4721
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4725
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4731
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4735
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4748
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4752
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4756
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4760
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4766
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4768
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4772
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4774
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4778
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4780
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4783
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4785
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4788
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4792
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4796
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4803
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4809
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4813
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4817
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4823
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4829
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4833
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4837
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4841
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4847
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4851
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4861
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4865
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4875
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4881
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4890
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4896
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4900
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4906
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4910
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4914
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4918
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4923
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4927
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4931
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4935
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4941
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4945
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4952
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4956
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4960
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4972
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4976
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5004
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5008
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5012
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5032
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5036
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5040
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5049
		{
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5055
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5059
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5063
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5067
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5075
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5079
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5083
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5087
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5091
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5095
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5103
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5109
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5113
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5117
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5121
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5125
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5129
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5133
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5137
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5141
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5161
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5165
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5169
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5173
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5177
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5217
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5221
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5225
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5231
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5235
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5242
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5246
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5250
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5254
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5258
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5264
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5268
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5272
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5276
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5280
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5295
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5299
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5305
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5309
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5314
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5318
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5323
		{
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5332
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5338
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5342
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5354
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5360
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5364
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5370
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5374
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5380
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5384
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5396
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5402
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5406
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5412
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5418
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5422
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5428
		{
			yyVAL.str = ""
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5432
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5438
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5442
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5449
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5453
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5457
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5461
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5467
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5471
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5475
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5479
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5483
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5487
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5491
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5497
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5501
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5505
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5512
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5518
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5522
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5544
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5554
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5558
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5562
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5566
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5574
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5578
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5582
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5601
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5605
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5611
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5615
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5624
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5628
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5632
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5636
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5640
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5644
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5648
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5652
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5656
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5660
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5664
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5668
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5672
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5676
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5688
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5692
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5696
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5700
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5704
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5708
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5712
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5716
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5720
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5724
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5736
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5740
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5744
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5748
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5752
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5756
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5760
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5764
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5768
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5772
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5776
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5780
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5784
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5788
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5792
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5796
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5800
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5804
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5808
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5812
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5816
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5824
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5828
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5833
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5837
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5847
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5875
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5879
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5883
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5887
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5928
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5933
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5937
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5943
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5947
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5953
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5957
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5963
		{
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5965
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5969
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5973
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5977
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5981
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5985
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5989
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5993
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5997
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6001
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6005
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6011
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6015
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6019
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6023
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6027
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6031
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6035
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6039
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6043
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6098
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6102
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6106
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6110
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6114
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6120
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6124
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6128
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6138
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6142
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6148
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6152
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6156
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6160
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6164
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6170
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6174
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6178
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6182
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6186
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6190
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6194
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6198
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6202
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6206
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6212
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6216
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6230
		{
			yyVAL.str = string("")
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6234
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6240
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6244
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6250
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6259
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6265
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6269
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6273
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6302
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6317
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6323
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6327
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6332
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6336
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6345
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6351
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6357
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6361
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6367
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6372
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6376
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6380
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6389
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6395
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6399
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6403
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6412
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6416
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6420
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6424
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6431
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6435
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6439
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6443
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6449
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6453
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6457
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6461
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6466
		{
			yyVAL.str = ""
		}
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6470
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6474
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6478
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6483
		{
			yyVAL.str = ""
		}
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6487
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6497
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6502
		{
			yyVAL.str = ""
		}
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6506
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6511
		{
			yyVAL.str = "cascaded"
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6519
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6524
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6528
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6534
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6540
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6546
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6555
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6559
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6564
		{
			yyVAL.str = ""
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6568
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6574
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6578
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6584
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6588
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6592
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6597
		{
			yyVAL.str = ""
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6601
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6605
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6610
		{
			yyVAL.str = ""
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6614
		{
			yyVAL.str = " header"
		}
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6619
		{
			yyVAL.str = ""
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6623
		{
			yyVAL.str = " manifest on"
		}
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6627
		{
			yyVAL.str = " manifest off"
		}
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6632
		{
			yyVAL.str = ""
		}
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6636
		{
			yyVAL.str = " overwrite on"
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6640
		{
			yyVAL.str = " overwrite off"
		}
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6646
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6651
		{
			yyVAL.str = ""
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6655
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6661
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6665
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6671
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6675
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6680
		{
			yyVAL.str = ""
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6684
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6690
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6694
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6700
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6704
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6708
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6713
		{
			yyVAL.str = ""
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6717
		{
			yyVAL.str = " optionally"
		}
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6730
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6734
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6738
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6742
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6746
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6752
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6756
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6760
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6764
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6773
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6779
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6783
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6789
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6793
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6799
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6803
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6818
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6822
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6828
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6834
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6838
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6844
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6848
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6852
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6856
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6860
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6868
		{
			yyVAL.str = "charset"
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6878
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6882
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6886
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6895
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6897
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6900
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6902
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6905
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6907
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6910
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6912
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6915
		{
			yyVAL.empty = struct{}{}
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6917
		{
			yyVAL.empty = struct{}{}
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6919
		{
			yyVAL.empty = struct{}{}
		}
	case 1385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6923
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6932
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6939
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6943
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6949
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6953
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6960
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6966
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6970
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6976
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6980
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6987
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7520
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7529
		{
			decNesting(yylex)
		}
	case 1911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7534
		{
			skipToEnd(yylex)
		}
	case 1912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7539
		{
			skipToEnd(yylex)
		}
	case 1913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7543
		{
			skipToEnd(yylex)
		}
	case 1914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7547
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
