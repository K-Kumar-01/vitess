// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const CURRENT_TIME = 57727
const LOCALTIME = 57728
const LOCALTIMESTAMP = 57729
const CURRENT_USER = 57730
const UTC_DATE = 57731
const UTC_TIME = 57732
const UTC_TIMESTAMP = 57733
const DAY = 57734
const DAY_HOUR = 57735
const DAY_MICROSECOND = 57736
const DAY_MINUTE = 57737
const DAY_SECOND = 57738
const HOUR = 57739
const HOUR_MICROSECOND = 57740
const HOUR_MINUTE = 57741
const HOUR_SECOND = 57742
const MICROSECOND = 57743
const MINUTE = 57744
const MINUTE_MICROSECOND = 57745
const MINUTE_SECOND = 57746
const MONTH = 57747
const QUARTER = 57748
const SECOND = 57749
const SECOND_MICROSECOND = 57750
const YEAR_MONTH = 57751
const WEEK = 57752
const REPLACE = 57753
const CONVERT = 57754
const CAST = 57755
const SUBSTR = 57756
const SUBSTRING = 57757
const GROUP_CONCAT = 57758
const SEPARATOR = 57759
const TIMESTAMPADD = 57760
const TIMESTAMPDIFF = 57761
const WEIGHT_STRING = 57762
const LTRIM = 57763
const RTRIM = 57764
const TRIM = 57765
const JSON_ARRAY = 57766
const JSON_OBJECT = 57767
const JSON_QUOTE = 57768
const JSON_DEPTH = 57769
const JSON_TYPE = 57770
const JSON_LENGTH = 57771
const JSON_VALID = 57772
const JSON_ARRAY_APPEND = 57773
const JSON_ARRAY_INSERT = 57774
const JSON_INSERT = 57775
const JSON_MERGE = 57776
const JSON_MERGE_PATCH = 57777
const JSON_MERGE_PRESERVE = 57778
const JSON_REMOVE = 57779
const JSON_REPLACE = 57780
const JSON_SET = 57781
const JSON_UNQUOTE = 57782
const MATCH = 57783
const AGAINST = 57784
const BOOLEAN = 57785
const LANGUAGE = 57786
const WITH = 57787
const QUERY = 57788
const EXPANSION = 57789
const WITHOUT = 57790
const VALIDATION = 57791
const UNUSED = 57792
const ARRAY = 57793
const CUME_DIST = 57794
const DESCRIPTION = 57795
const DENSE_RANK = 57796
const EMPTY = 57797
const EXCEPT = 57798
const FIRST_VALUE = 57799
const GROUPING = 57800
const GROUPS = 57801
const JSON_TABLE = 57802
const LAG = 57803
const LAST_VALUE = 57804
const LATERAL = 57805
const LEAD = 57806
const NTH_VALUE = 57807
const NTILE = 57808
const OF = 57809
const OVER = 57810
const PERCENT_RANK = 57811
const RANK = 57812
const RECURSIVE = 57813
const ROW_NUMBER = 57814
const SYSTEM = 57815
const WINDOW = 57816
const ACTIVE = 57817
const ADMIN = 57818
const BUCKETS = 57819
const CLONE = 57820
const COMPONENT = 57821
const DEFINITION = 57822
const ENFORCED = 57823
const EXCLUDE = 57824
const FOLLOWING = 57825
const GEOMCOLLECTION = 57826
const GET_MASTER_PUBLIC_KEY = 57827
const HISTOGRAM = 57828
const HISTORY = 57829
const INACTIVE = 57830
const INVISIBLE = 57831
const LOCKED = 57832
const MASTER_COMPRESSION_ALGORITHMS = 57833
const MASTER_PUBLIC_KEY_PATH = 57834
const MASTER_TLS_CIPHERSUITES = 57835
const MASTER_ZSTD_COMPRESSION_LEVEL = 57836
const NESTED = 57837
const NETWORK_NAMESPACE = 57838
const NOWAIT = 57839
const NULLS = 57840
const OJ = 57841
const OLD = 57842
const OPTIONAL = 57843
const ORDINALITY = 57844
const ORGANIZATION = 57845
const OTHERS = 57846
const PATH = 57847
const PERSIST = 57848
const PERSIST_ONLY = 57849
const PRECEDING = 57850
const PRIVILEGE_CHECKS_USER = 57851
const PROCESS = 57852
const RANDOM = 57853
const REFERENCE = 57854
const REQUIRE_ROW_FORMAT = 57855
const RESOURCE = 57856
const RESPECT = 57857
const RESTART = 57858
const RETAIN = 57859
const REUSE = 57860
const ROLE = 57861
const SECONDARY = 57862
const SECONDARY_ENGINE = 57863
const SECONDARY_LOAD = 57864
const SECONDARY_UNLOAD = 57865
const SKIP = 57866
const SRID = 57867
const THREAD_PRIORITY = 57868
const TIES = 57869
const UNBOUNDED = 57870
const VCPU = 57871
const VISIBLE = 57872
const FORMAT = 57873
const TREE = 57874
const VITESS = 57875
const TRADITIONAL = 57876
const LOCAL = 57877
const LOW_PRIORITY = 57878
const NO_WRITE_TO_BINLOG = 57879
const LOGS = 57880
const ERROR = 57881
const GENERAL = 57882
const HOSTS = 57883
const OPTIMIZER_COSTS = 57884
const USER_RESOURCES = 57885
const SLOW = 57886
const CHANNEL = 57887
const RELAY = 57888
const EXPORT = 57889
const AVG_ROW_LENGTH = 57890
const CONNECTION = 57891
const CHECKSUM = 57892
const DELAY_KEY_WRITE = 57893
const ENCRYPTION = 57894
const ENGINE = 57895
const INSERT_METHOD = 57896
const MAX_ROWS = 57897
const MIN_ROWS = 57898
const PACK_KEYS = 57899
const PASSWORD = 57900
const FIXED = 57901
const DYNAMIC = 57902
const COMPRESSED = 57903
const REDUNDANT = 57904
const COMPACT = 57905
const ROW_FORMAT = 57906
const STATS_AUTO_RECALC = 57907
const STATS_PERSISTENT = 57908
const STATS_SAMPLE_PAGES = 57909
const STORAGE = 57910
const MEMORY = 57911
const DISK = 57912
const PARTITIONS = 57913
const LINEAR = 57914
const RANGE = 57915
const LIST = 57916
const SUBPARTITION = 57917
const SUBPARTITIONS = 57918
const HASH = 57919

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	595, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	327, 151,
	-2, 454,
	-1, 55,
	35, 652,
	231, 652,
	242, 652,
	277, 666,
	278, 666,
	-2, 654,
	-1, 60,
	233, 679,
	-2, 677,
	-1, 114,
	230, 1198,
	-2, 119,
	-1, 116,
	1, 146,
	595, 146,
	-2, 151,
	-1, 126,
	132, 357,
	236, 357,
	-2, 448,
	-1, 145,
	131, 151,
	171, 151,
	327, 151,
	-2, 463,
	-1, 675,
	215, 1219,
	-2, 1215,
	-1, 676,
	215, 1220,
	-2, 1216,
	-1, 750,
	59, 747,
	-2, 762,
	-1, 787,
	147, 1616,
	-2, 112,
	-1, 788,
	147, 1462,
	-2, 113,
	-1, 794,
	147, 1545,
	-2, 1192,
	-1, 941,
	147, 1393,
	-2, 1189,
	-1, 979,
	241, 41,
	246, 41,
	-2, 368,
	-1, 1056,
	1, 502,
	595, 502,
	-2, 151,
	-1, 1292,
	59, 748,
	-2, 767,
	-1, 1293,
	59, 749,
	-2, 768,
	-1, 1346,
	131, 151,
	171, 151,
	327, 151,
	-2, 398,
	-1, 1423,
	132, 357,
	236, 357,
	-2, 448,
	-1, 1432,
	241, 42,
	246, 42,
	-2, 369,
	-1, 1731,
	215, 1224,
	-2, 1218,
	-1, 1814,
	131, 151,
	171, 151,
	327, 151,
	-2, 399,
	-1, 1821,
	25, 170,
	-2, 172,
	-1, 2054,
	86, 39,
	-2, 804,
	-1, 2106,
	77, 94,
	86, 94,
	-2, 824,
	-1, 2304,
	49, 1160,
	-2, 1154,
	-1, 2495,
	86, 39,
	-2, 805,
	-1, 2533,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 796,
	-1, 2809,
	22, 1547,
	32, 1547,
	172, 1547,
	253, 1547,
	307, 1547,
	308, 1547,
	309, 1547,
	310, 1547,
	311, 1547,
	312, 1547,
	313, 1547,
	315, 1547,
	316, 1547,
	317, 1547,
	318, 1547,
	319, 1547,
	320, 1547,
	321, 1547,
	322, 1547,
	323, 1547,
	324, 1547,
	325, 1547,
	326, 1547,
	328, 1547,
	330, 1547,
	331, 1547,
	332, 1547,
	333, 1547,
	334, 1547,
	335, 1547,
	336, 1547,
	337, 1547,
	338, 1547,
	341, 1547,
	342, 1547,
	343, 1547,
	344, 1547,
	345, 1547,
	346, 1547,
	347, 1547,
	348, 1547,
	349, 1547,
	460, 1547,
	-2, 542,
}

const yyPrivate = 57344

const yyLast = 41070

var yyAct = [...]int{
	675, 684, 2857, 2263, 2875, 677, 2751, 2874, 2851, 1811,
	2807, 2594, 2811, 1349, 2427, 2791, 1745, 2357, 2364, 2008,
	2710, 2042, 3, 1119, 669, 37, 2398, 2318, 2410, 598,
	2315, 1765, 2624, 1271, 1874, 594, 2727, 670, 2409, 765,
	2366, 1307, 2319, 2629, 2504, 2316, 591, 678, 2262, 2077,
	96, 182, 743, 2498, 182, 667, 559, 182, 668, 2261,
	620, 2412, 574, 1769, 182, 1784, 2524, 1276, 2313, 2100,
	2305, 2069, 182, 2490, 1844, 2138, 2167, 590, 2208, 1864,
	1849, 592, 2139, 1800, 2140, 1009, 154, 182, 766, 2089,
	1403, 2061, 38, 792, 944, 36, 1294, 1789, 2044, 1725,
	1701, 586, 747, 2225, 751, 1788, 1631, 1641, 1097, 574,
	1883, 1863, 574, 182, 574, 1700, 2132, 140, 1589, 1916,
	1851, 528, 768, 974, 1316, 2108, 95, 745, 1446, 1430,
	969, 577, 789, 603, 1791, 91, 1338, 1747, 1274, 738,
	1653, 1140, 1538, 1204, 1534, 1608, 951, 948, 1861, 1728,
	1520, 1437, 1068, 980, 977, 1776, 975, 1840, 952, 976,
	1770, 1337, 1321, 757, 1335, 1697, 1117, 1111, 987, 1398,
	1543, 1422, 753, 98, 123, 752, 157, 779, 117, 124,
	950, 755, 118, 581, 1052, 85, 1211, 76, 2760, 97,
	2160, 1207, 89, 1738, 2858, 184, 185, 186, 1876, 1877,
	1878, 1876, 2395, 2187, 2186, 1914, 2158, 754, 77, 8,
	773, 2216, 778, 1506, 7, 6, 531, 2217, 2885, 1596,
	125, 1141, 2878, 1595, 119, 1594, 759, 2884, 1011, 1593,
	90, 1592, 1014, 1591, 102, 945, 1742, 1743, 563, 1141,
	1574, 1025, 1026, 1583, 1029, 1030, 1031, 1032, 2825, 582,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 746, 744, 2040, 584, 793,
	585, 2301, 2071, 786, 955, 104, 105, 960, 108, 560,
	967, 114, 990, 767, 179, 760, 2871, 526, 184, 185,
	186, 2835, 2848, 119, 2381, 966, 991, 2559, 1601, 965,
	2706, 1015, 1016, 1017, 2705, 1013, 2877, 739, 740, 741,
	742, 2885, 2587, 750, 78, 2588, 78, 1012, 1027, 80,
	2870, 78, 1022, 2801, 1954, 547, 1151, 78, 2861, 2771,
	2846, 1856, 178, 2595, 2792, 1902, 2800, 545, 2080, 2770,
	2224, 781, 782, 2163, 1151, 2461, 1412, 2195, 2354, 2355,
	2041, 2194, 1055, 1806, 1807, 1854, 120, 119, 142, 1339,
	1114, 1340, 964, 2081, 1061, 1062, 1104, 2353, 1106, 162,
	2642, 2215, 2117, 1951, 1805, 2116, 1087, 542, 2118, 1092,
	1093, 737, 736, 2752, 1075, 2129, 555, 1173, 1952, 1076,
	2161, 87, 2501, 87, 1088, 563, 1064, 1744, 87, 572,
	152, 552, 2251, 1081, 87, 141, 1103, 1105, 2715, 1174,
	1175, 1176, 1177, 1178, 1179, 1180, 1182, 1181, 1183, 1184,
	962, 1147, 1075, 2429, 1139, 563, 159, 1076, 160, 1824,
	1823, 2452, 2450, 959, 564, 1074, 961, 1073, 563, 1147,
	1526, 1582, 563, 576, 1424, 1425, 151, 150, 177, 1928,
	1925, 1927, 1926, 570, 1584, 1585, 1586, 1051, 1278, 2168,
	1884, 1496, 1113, 2190, 2422, 1028, 532, 1922, 534, 548,
	1094, 566, 2423, 565, 538, 1089, 536, 540, 549, 541,
	1095, 535, 968, 546, 1082, 1917, 537, 550, 551, 553,
	556, 557, 558, 554, 1853, 544, 567, 2860, 1521, 1101,
	1096, 964, 1050, 1102, 2430, 1497, 1930, 1498, 1931, 1108,
	1932, 1090, 1091, 1107, 1057, 2203, 1933, 1034, 1033, 2431,
	2826, 1919, 1923, 998, 2580, 1921, 182, 996, 182, 1887,
	964, 182, 956, 963, 2406, 87, 1100, 970, 2370, 958,
	957, 971, 989, 1785, 146, 1426, 153, 971, 1423, 1007,
	147, 148, 1006, 1005, 2252, 1004, 163, 1003, 1002, 1001,
	574, 1121, 574, 574, 1000, 168, 1054, 1920, 2844, 995,
	1085, 1415, 1281, 1008, 1185, 1952, 949, 574, 574, 1185,
	949, 983, 2207, 2865, 947, 949, 982, 1535, 962, 1862,
	2855, 564, 1436, 1059, 780, 1065, 2045, 2047, 1067, 989,
	2204, 1133, 1908, 37, 1146, 1143, 1144, 1145, 1150, 1152,
	1149, 1531, 1148, 1127, 1771, 1772, 1018, 2388, 2189, 1142,
	989, 564, 1146, 1143, 1144, 1145, 1150, 1152, 1149, 1410,
	1148, 2748, 1409, 1408, 564, 1024, 2179, 1142, 564, 2540,
	988, 1532, 1406, 1527, 530, 2405, 982, 985, 986, 2759,
	949, 2159, 525, 2380, 979, 983, 2520, 2220, 1053, 568,
	1109, 1904, 1966, 2113, 2192, 2162, 999, 1186, 1187, 2076,
	997, 2502, 963, 2202, 2032, 978, 2201, 561, 155, 1737,
	1325, 1188, 1189, 1190, 1191, 1071, 1251, 1077, 1078, 1079,
	1080, 1196, 562, 1199, 1066, 1812, 1435, 988, 1185, 1184,
	116, 963, 992, 982, 2352, 762, 1070, 1112, 1525, 1115,
	1116, 1269, 993, 2716, 1264, 2702, 1855, 2765, 988, 184,
	185, 186, 111, 1633, 1098, 1544, 2769, 2576, 1123, 1124,
	1683, 2514, 994, 2210, 1010, 1918, 81, 182, 2209, 1192,
	2210, 574, 574, 989, 1528, 2209, 1341, 2876, 1137, 2244,
	989, 1654, 1654, 1980, 149, 1122, 2046, 182, 1508, 1507,
	1509, 1510, 1511, 2151, 1953, 1156, 1084, 2638, 86, 1284,
	86, 989, 2551, 1288, 2550, 86, 574, 1086, 1891, 747,
	182, 86, 1270, 1282, 1445, 574, 77, 143, 1136, 1444,
	144, 574, 112, 1134, 1135, 1155, 1156, 745, 1287, 1285,
	1157, 1060, 2853, 1634, 1063, 2854, 1072, 2852, 789, 1434,
	1213, 1209, 1901, 1210, 1896, 1899, 1675, 1664, 1665, 1666,
	1667, 1677, 1668, 1669, 1670, 1682, 1678, 1671, 1672, 1679,
	1680, 1681, 1673, 1674, 1676, 998, 1286, 996, 2840, 2541,
	95, 988, 2817, 1023, 1270, 1326, 1069, 1330, 988, 1903,
	1522, 1900, 1523, 992, 982, 1524, 2815, 2868, 1257, 1258,
	1259, 1260, 2697, 993, 1896, 2819, 2820, 1099, 1545, 988,
	1336, 1275, 2866, 2368, 2369, 982, 985, 986, 1301, 949,
	2816, 1056, 1157, 979, 983, 1658, 2610, 98, 1613, 1659,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 1898, 1614, 1615, 1612, 2609, 173, 174, 175, 176,
	1177, 1178, 1179, 1180, 1182, 1181, 1183, 1184, 87, 1272,
	1175, 1176, 1177, 1178, 1179, 1180, 1182, 1181, 1183, 1184,
	1283, 1154, 1611, 1155, 1156, 2841, 744, 1157, 1306, 1173,
	2246, 2219, 746, 2777, 182, 793, 1303, 1976, 1399, 1179,
	1180, 1182, 1181, 1183, 1184, 2558, 2867, 1407, 1515, 1331,
	1332, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1181,
	1183, 1184, 2741, 1603, 1605, 1606, 2557, 2367, 574, 784,
	1432, 689, 690, 691, 1289, 2778, 2396, 1513, 1441, 2370,
	2745, 2386, 1443, 1503, 2136, 574, 574, 1604, 574, 2135,
	574, 574, 1173, 574, 574, 574, 574, 574, 574, 1859,
	1516, 1348, 1157, 1154, 2742, 1155, 1156, 1501, 574, 1975,
	1442, 1514, 182, 1479, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1182, 1181, 1183, 1184, 1958, 1959, 1960, 182, 184,
	185, 186, 1500, 2548, 1499, 1474, 1475, 1157, 1490, 574,
	1512, 182, 1484, 1413, 1414, 1481, 1502, 1997, 1480, 184,
	185, 186, 1533, 2120, 1455, 574, 1310, 182, 1154, 2744,
	1155, 1156, 1428, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1159, 2743, 2637, 182, 184, 185, 186, 2635, 1872, 1478,
	182, 1421, 2606, 2555, 2726, 1301, 2547, 2145, 2133, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 574, 184,
	185, 186, 1476, 1482, 1483, 1311, 1266, 1440, 1519, 1488,
	1489, 2226, 574, 574, 1448, 1912, 1449, 1911, 1451, 1453,
	1301, 1768, 1457, 1459, 1461, 1463, 1465, 1750, 1439, 1405,
	182, 1575, 1541, 1154, 1418, 1155, 1156, 1419, 1504, 1431,
	1549, 1491, 1417, 1487, 1438, 1438, 1486, 1553, 1485, 1312,
	1540, 184, 185, 186, 1110, 1870, 2426, 1126, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1492, 2067, 2859, 1154, 1477,
	1155, 1156, 1546, 1547, 2831, 1301, 1632, 92, 1638, 1638,
	1635, 1639, 1636, 1636, 94, 1411, 1551, 1301, 93, 1644,
	574, 101, 2228, 1558, 1559, 1560, 1609, 1590, 1536, 2067,
	2798, 2723, 100, 2722, 99, 574, 574, 1616, 2691, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 2690, 119, 1548, 966, 1655, 2593, 1607, 965,
	2169, 1552, 1157, 1554, 1555, 1556, 1557, 92, 2067, 2785,
	1561, 1157, 1301, 1617, 1550, 2067, 2781, 2148, 93, 1157,
	1698, 1820, 1573, 2513, 2238, 2237, 2236, 2230, 1173, 2234,
	1965, 2229, 1989, 2227, 1571, 1729, 1572, 182, 2232, 2773,
	1301, 1301, 574, 2067, 2761, 2585, 2758, 2231, 1579, 1580,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1181, 1183,
	1184, 2078, 1610, 2078, 2233, 2235, 182, 2475, 1301, 574,
	2314, 1698, 1301, 2067, 2698, 1971, 2585, 1301, 101, 182,
	2513, 1157, 2515, 574, 1970, 1755, 1897, 1756, 182, 100,
	182, 99, 182, 182, 574, 2067, 2583, 574, 94, 2458,
	94, 2456, 1301, 1640, 1153, 1731, 1157, 2764, 574, 1729,
	1646, 1647, 2067, 1733, 1734, 100, 1157, 789, 95, 1821,
	789, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1181,
	1183, 1184, 2086, 1154, 2513, 1155, 1156, 95, 1157, 1777,
	1778, 2109, 1154, 1896, 1155, 1156, 1779, 1157, 1896, 1301,
	1154, 1761, 1155, 1156, 1730, 1783, 1301, 1786, 1301, 2086,
	1590, 1787, 1732, 574, 1301, 1735, 1736, 2475, 1157, 1865,
	1866, 1867, 2518, 1301, 1869, 1871, 1157, 1153, 1301, 1731,
	2002, 1301, 2360, 1967, 1830, 1831, 1832, 1833, 574, 2842,
	2378, 2377, 1157, 1815, 574, 1441, 2374, 2375, 1441, 759,
	1441, 1760, 1816, 1749, 2110, 1825, 1895, 1826, 1827, 1828,
	1829, 1798, 1154, 2112, 1155, 1156, 2374, 2373, 1885, 2085,
	2017, 1301, 2376, 1836, 1837, 1838, 1839, 2361, 1782, 1763,
	2756, 1819, 1846, 2086, 1301, 1157, 574, 1154, 1632, 1155,
	1156, 1852, 2289, 1632, 1632, 1780, 1157, 1154, 1804, 1155,
	1156, 1301, 2363, 2347, 793, 1157, 1803, 793, 1802, 2695,
	1967, 1157, 1952, 1314, 1818, 2002, 2358, 1817, 1986, 1154,
	1985, 1155, 1156, 2086, 2009, 1967, 1301, 1896, 1154, 182,
	1155, 1156, 1882, 2368, 2369, 1879, 182, 1952, 2188, 1775,
	2359, 182, 182, 1305, 1157, 182, 1740, 182, 1587, 1154,
	1157, 1155, 1156, 1530, 182, 1333, 1847, 1154, 749, 1155,
	1156, 182, 1842, 1843, 1157, 973, 1860, 2823, 2577, 1858,
	1868, 1857, 2365, 1154, 1890, 1155, 1156, 1893, 1313, 1894,
	1905, 1402, 2173, 2165, 2166, 2109, 972, 182, 2137, 1847,
	1889, 990, 574, 2535, 1907, 1888, 1590, 1906, 1892, 1909,
	1910, 1157, 2063, 1924, 676, 991, 2788, 1157, 1934, 1935,
	87, 1157, 1939, 2067, 2066, 1438, 1154, 94, 1155, 1156,
	2712, 1942, 1969, 1402, 1401, 2399, 2477, 1154, 1945, 1155,
	1156, 2142, 2473, 1347, 1346, 87, 1154, 2367, 1155, 1156,
	1308, 2688, 1154, 1157, 1155, 1156, 2464, 1915, 2110, 2370,
	2649, 1157, 2560, 2575, 1948, 183, 1055, 1952, 183, 2572,
	1609, 183, 2553, 2467, 2466, 1157, 575, 1404, 183, 1470,
	1962, 1845, 1964, 2428, 1967, 1154, 183, 1155, 1156, 1157,
	2424, 1154, 2883, 1155, 1156, 2401, 2397, 1936, 1577, 2463,
	2174, 183, 2881, 2026, 1841, 1154, 1835, 1155, 1156, 1834,
	1518, 1157, 2561, 2562, 2563, 1157, 1963, 1433, 1429, 1943,
	1944, 1400, 113, 575, 1946, 2141, 575, 183, 575, 1471,
	1472, 1473, 2713, 1947, 2837, 2025, 2525, 2526, 1856, 1157,
	1753, 2564, 1154, 2024, 1155, 1156, 2812, 2531, 1154, 1950,
	1155, 1156, 1154, 1157, 1155, 1156, 1467, 2023, 2528, 2393,
	1578, 182, 2392, 2391, 2362, 2314, 1610, 2152, 2530, 182,
	1937, 2022, 2142, 1638, 574, 2051, 2828, 1636, 1961, 2333,
	574, 2038, 2332, 2799, 1154, 2336, 1155, 1156, 2565, 2566,
	2337, 574, 1154, 2021, 1155, 1156, 2334, 2020, 1767, 1309,
	2619, 2335, 2618, 1468, 1469, 2055, 1154, 1759, 1155, 1156,
	2519, 2294, 2293, 1979, 182, 2306, 2308, 2171, 182, 1977,
	1154, 2019, 1155, 1156, 2309, 2740, 2506, 2082, 2338, 37,
	2095, 2096, 1157, 2119, 2505, 2018, 1173, 1157, 2102, 1169,
	2628, 1170, 1154, 1157, 1155, 1156, 1154, 2630, 1155, 1156,
	2617, 1731, 2068, 2509, 1995, 1171, 1172, 1168, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1182, 1181, 1183, 1184, 2303,
	1154, 1157, 1155, 1156, 1529, 735, 2372, 574, 2064, 2146,
	763, 2127, 182, 1020, 1154, 2106, 1155, 1156, 764, 182,
	1650, 1019, 92, 2438, 2141, 1275, 2029, 2030, 2213, 2039,
	1730, 574, 2181, 93, 1651, 1125, 2049, 2180, 574, 2101,
	2130, 2131, 1441, 1441, 2012, 92, 2060, 574, 2065, 2011,
	2075, 2123, 94, 120, 2511, 2010, 93, 1777, 1778, 2185,
	94, 2863, 2164, 2389, 1940, 2757, 2107, 2184, 2708, 1157,
	182, 182, 182, 182, 182, 2111, 2371, 2099, 1764, 2150,
	1852, 771, 772, 2007, 2292, 1929, 2491, 182, 182, 2144,
	2124, 2114, 2291, 1154, 2121, 1155, 1156, 101, 1154, 1157,
	1155, 1156, 2134, 182, 1154, 101, 1155, 1156, 100, 1956,
	99, 99, 1157, 2732, 2625, 2731, 100, 660, 99, 94,
	2636, 2143, 1632, 2634, 2633, 2626, 2573, 2153, 2154, 2155,
	2149, 2510, 1154, 2183, 1155, 1156, 2508, 2196, 2197, 2198,
	2199, 2200, 2091, 2094, 2095, 2096, 2092, 1421, 2093, 2097,
	2402, 2006, 2525, 2526, 1590, 2206, 1880, 1416, 770, 1638,
	1157, 1638, 100, 1636, 1638, 1636, 2182, 2499, 1636, 1638,
	2214, 2175, 2176, 1636, 101, 2078, 2839, 2838, 745, 573,
	2243, 2005, 2063, 574, 2253, 100, 1157, 2264, 1987, 2264,
	1751, 1327, 2264, 2221, 2003, 1318, 2839, 2264, 2222, 574,
	1154, 2211, 1155, 1156, 2212, 2205, 2283, 2276, 2277, 2278,
	2279, 2269, 106, 107, 182, 2746, 2270, 2546, 574, 2266,
	761, 103, 88, 1, 2239, 2223, 791, 574, 2240, 946,
	1154, 953, 1155, 1156, 574, 574, 2814, 182, 182, 182,
	182, 182, 1999, 1154, 543, 1155, 1156, 1741, 1273, 182,
	2283, 2810, 1505, 2257, 182, 1495, 2596, 182, 751, 182,
	2317, 2296, 182, 182, 182, 2317, 2326, 2311, 1998, 2320,
	183, 1699, 183, 2346, 2709, 183, 2170, 1886, 1288, 2102,
	2571, 2282, 1850, 2297, 2271, 2272, 2273, 2274, 2275, 981,
	145, 1154, 2284, 1155, 1156, 1813, 1814, 2387, 2794, 110,
	942, 109, 2295, 182, 575, 984, 575, 575, 1083, 1881,
	2586, 2298, 2128, 1822, 1353, 1351, 574, 1154, 1352, 1155,
	1156, 575, 575, 1350, 1355, 574, 753, 2288, 2348, 752,
	182, 2349, 1354, 1988, 1581, 2328, 2329, 2339, 2331, 571,
	182, 95, 2327, 2098, 180, 2330, 2350, 1342, 2404, 2343,
	2344, 1319, 1299, 1295, 1021, 182, 2408, 1540, 182, 2356,
	533, 2379, 1913, 2325, 2285, 2286, 2287, 1296, 2439, 539,
	2390, 1197, 1576, 2383, 2382, 2290, 2115, 2384, 2385, 2091,
	2094, 2095, 2096, 2092, 790, 2093, 2097, 2416, 783, 1752,
	2415, 2053, 1757, 1758, 1298, 2322, 1297, 2411, 2503, 2302,
	2304, 2070, 2307, 1852, 2407, 2300, 2739, 2420, 2627, 2419,
	2403, 2786, 2125, 1315, 1978, 1652, 1299, 1295, 1792, 1602,
	596, 595, 2432, 593, 2056, 2435, 2079, 1160, 679, 2472,
	2043, 1296, 2434, 1328, 2433, 2090, 2088, 2087, 1938, 1799,
	574, 182, 2527, 2523, 2873, 2806, 1794, 2441, 1790, 2062,
	604, 597, 2442, 589, 2543, 2448, 1292, 1293, 1298, 2414,
	1297, 2191, 2425, 2193, 2126, 2421, 1138, 2445, 2446, 1291,
	2447, 583, 954, 2449, 1649, 2451, 2714, 2453, 2700, 1955,
	178, 183, 2460, 1290, 1662, 575, 575, 1663, 2394, 1873,
	63, 41, 1690, 578, 2824, 2497, 1129, 777, 182, 32,
	31, 183, 30, 29, 120, 28, 23, 22, 2496, 21,
	2492, 2493, 20, 19, 2436, 2437, 2549, 162, 25, 18,
	575, 182, 2500, 17, 183, 2507, 2522, 16, 2834, 575,
	2862, 115, 2532, 50, 2512, 575, 47, 45, 122, 182,
	121, 48, 182, 182, 182, 44, 1058, 2529, 2538, 2539,
	42, 27, 574, 574, 26, 15, 14, 13, 12, 2122,
	11, 10, 2536, 9, 5, 4, 2416, 2537, 35, 2415,
	34, 2544, 2545, 33, 159, 1132, 160, 24, 2, 574,
	574, 574, 574, 2578, 2579, 2157, 1875, 2554, 2552, 2556,
	0, 0, 0, 0, 2581, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2567, 0, 0, 2568,
	2569, 2570, 2592, 0, 0, 2590, 2591, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 0, 1638, 0, 1636,
	0, 1636, 0, 0, 0, 0, 0, 0, 0, 0,
	2601, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	2605, 0, 0, 2264, 0, 2264, 0, 0, 0, 0,
	2602, 2622, 0, 0, 0, 0, 0, 0, 0, 574,
	0, 574, 0, 0, 2614, 0, 0, 791, 0, 791,
	791, 0, 0, 2613, 0, 0, 0, 1638, 183, 2651,
	2643, 1636, 37, 2317, 1128, 1130, 2631, 2645, 2632, 0,
	0, 2623, 0, 2320, 163, 0, 0, 2320, 2641, 2639,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 745, 0, 2647, 574, 0, 0, 0,
	0, 0, 2655, 0, 0, 0, 2652, 2653, 0, 575,
	575, 0, 575, 0, 575, 575, 574, 575, 575, 575,
	575, 575, 575, 0, 0, 0, 0, 2696, 2694, 2692,
	0, 2693, 575, 0, 2704, 0, 183, 574, 2699, 2711,
	0, 574, 574, 0, 2703, 0, 0, 0, 0, 0,
	178, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 2735, 183, 0, 0, 0, 0,
	574, 0, 1267, 0, 120, 0, 2736, 2733, 2734, 575,
	2738, 183, 0, 0, 0, 0, 0, 162, 0, 0,
	2747, 0, 0, 0, 0, 0, 155, 183, 0, 0,
	2320, 2750, 0, 0, 183, 0, 0, 2749, 0, 574,
	0, 0, 0, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 575, 745, 0, 2753, 0, 0, 1279, 1280,
	0, 0, 0, 574, 182, 0, 575, 575, 0, 0,
	2755, 0, 0, 0, 159, 0, 160, 0, 0, 0,
	0, 2763, 0, 37, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 2766, 0, 177, 0, 0, 574,
	0, 0, 791, 0, 0, 0, 0, 0, 1343, 0,
	0, 0, 0, 0, 0, 574, 574, 0, 0, 0,
	0, 0, 0, 0, 574, 0, 2317, 2779, 0, 0,
	2787, 2767, 37, 182, 574, 2793, 0, 2789, 2711, 2795,
	0, 0, 2802, 2784, 575, 0, 0, 0, 0, 2805,
	0, 0, 0, 2821, 2813, 2818, 0, 0, 0, 575,
	575, 0, 0, 2827, 0, 0, 0, 0, 0, 0,
	0, 0, 2833, 2836, 574, 0, 0, 0, 0, 0,
	0, 0, 574, 0, 0, 0, 1638, 0, 2850, 2845,
	1636, 0, 2847, 2849, 0, 0, 0, 0, 2856, 0,
	0, 0, 0, 0, 163, 2843, 0, 2864, 0, 0,
	0, 0, 2869, 168, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 1638, 0, 2872, 575, 1636, 2880, 0,
	1638, 2879, 2882, 0, 1636, 0, 0, 0, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 0,
	183, 0, 0, 575, 173, 174, 175, 176, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 575, 0, 0,
	0, 0, 183, 0, 183, 0, 183, 183, 575, 0,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 0, 2832, 946, 0, 0, 0, 0,
	0, 0, 0, 0, 1370, 0, 0, 0, 1267, 0,
	0, 0, 1447, 1447, 0, 1447, 0, 1447, 1447, 0,
	1456, 1447, 1447, 1447, 1447, 1447, 155, 0, 0, 0,
	0, 0, 0, 1267, 1267, 946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 575, 0, 0, 0, 0, 0, 575, 0,
	0, 0, 1537, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 0, 0, 791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 791,
	791, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 183, 183, 0, 0, 183,
	0, 183, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	0, 183, 0, 0, 1267, 1371, 575, 0, 0, 0,
	0, 0, 1660, 1661, 0, 0, 0, 0, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 0,
	0, 0, 0, 0, 173, 174, 175, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1384,
	1387, 1388, 1389, 1390, 1391, 1392, 0, 1393, 1394, 1395,
	1396, 1397, 1372, 1373, 1374, 1375, 1356, 1357, 1385, 1754,
	1359, 0, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 0, 0, 1369, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 0, 0, 0, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 0, 0, 791, 0, 0, 0, 0, 0, 0,
	0, 791, 0, 0, 791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 946, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 575, 0,
	0, 0, 0, 178, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 575, 0, 0, 0, 0,
	953, 0, 0, 661, 0, 0, 0, 120, 0, 142,
	0, 0, 1386, 0, 0, 0, 0, 0, 183, 0,
	162, 0, 183, 0, 0, 946, 0, 0, 0, 0,
	0, 953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 181, 0, 141, 529, 0, 0,
	569, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 0, 946, 0, 529, 0, 159, 0, 160,
	0, 575, 0, 0, 0, 0, 183, 0, 0, 0,
	758, 0, 0, 183, 0, 129, 130, 151, 150, 177,
	0, 0, 0, 0, 0, 575, 776, 0, 776, 0,
	0, 0, 575, 0, 0, 0, 529, 0, 0, 0,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 183, 183, 183, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 1949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 127, 153, 134, 126,
	0, 147, 148, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 136, 131, 132, 133, 137, 0, 0, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 178, 0,
	0, 0, 139, 0, 0, 0, 0, 575, 0, 1420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 575, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 183, 0,
	0, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 0, 0, 0, 0, 575, 575,
	0, 183, 183, 183, 183, 183, 152, 0, 0, 0,
	0, 141, 0, 183, 0, 0, 0, 0, 183, 155,
	0, 183, 0, 183, 0, 791, 183, 183, 183, 0,
	0, 0, 159, 0, 160, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 0, 2057, 0, 0,
	1424, 1425, 151, 150, 177, 0, 0, 0, 2072, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	0, 0, 0, 0, 183, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 183, 0, 0, 0, 0, 0, 143, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2147, 0, 0, 0, 0, 0,
	146, 1426, 153, 0, 1423, 0, 147, 148, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 1766, 0,
	0, 168, 0, 0, 0, 2172, 0, 0, 0, 0,
	0, 0, 0, 0, 2177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 529, 0, 0, 529, 0, 0, 0, 0, 0,
	0, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 0, 0, 0, 0, 0, 173, 174, 175,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 0, 1267, 0, 0,
	1267, 0, 0, 183, 0, 1267, 183, 183, 183, 0,
	0, 0, 0, 0, 0, 0, 575, 575, 0, 0,
	791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1447, 0, 0, 0,
	0, 0, 0, 575, 575, 575, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 2299, 0, 0, 0, 0,
	149, 0, 0, 0, 791, 0, 0, 0, 1267, 0,
	0, 2324, 1447, 1267, 0, 0, 0, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 1302, 1304, 0,
	0, 0, 0, 143, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 0, 575, 0, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	758, 0, 0, 946, 0, 0, 1267, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	575, 0, 0, 0, 0, 0, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 0, 0, 0,
	575, 0, 173, 174, 175, 176, 686, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 0, 575, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2299, 0, 0,
	0, 0, 2657, 2659, 2658, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 626, 0, 748, 0, 79, 0, 0, 0,
	0, 0, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 575,
	575, 0, 0, 0, 1268, 0, 0, 0, 575, 1766,
	1766, 0, 0, 0, 0, 0, 0, 183, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1268,
	1268, 0, 0, 0, 0, 529, 2597, 2598, 2599, 2600,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1493, 0, 0, 0, 0, 0, 0, 575, 0,
	0, 0, 0, 0, 529, 0, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1539, 1267, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 1562, 1563, 529, 529, 529, 529, 529, 529,
	529, 1267, 0, 0, 0, 0, 2644, 0, 2646, 0,
	0, 0, 0, 0, 0, 0, 0, 2663, 2664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1656, 0, 0, 0, 1657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 671, 0, 621,
	623, 672, 673, 791, 619, 622, 674, 776, 0, 0,
	0, 0, 0, 0, 776, 776, 0, 0, 0, 0,
	1268, 0, 0, 0, 2729, 1302, 1739, 0, 2729, 2729,
	0, 0, 0, 624, 625, 2656, 2660, 2661, 2662, 2665,
	2666, 2667, 2675, 2677, 649, 2676, 2678, 2679, 2680, 2683,
	2684, 2685, 2686, 2681, 2682, 2687, 0, 1766, 1762, 0,
	0, 0, 0, 0, 776, 1539, 776, 776, 776, 776,
	776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 758,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 0, 0, 1539,
	0, 529, 0, 529, 0, 529, 1801, 0, 0, 0,
	0, 0, 0, 0, 1267, 0, 2780, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 791, 791, 0, 0, 0, 0, 0, 0,
	0, 2803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2808, 0, 0, 0, 0, 1118, 0, 1118, 1118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 0, 0, 0, 2808,
	0, 0, 748, 1193, 1194, 1195, 0, 1198, 0, 1200,
	1201, 1202, 1203, 0, 1206, 1208, 1208, 0, 1208, 1212,
	1212, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 0, 1252,
	1253, 1254, 1255, 1256, 0, 0, 0, 0, 1212, 1212,
	1212, 1212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 1370, 0, 529,
	0, 0, 0, 0, 529, 529, 0, 0, 529, 0,
	1941, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 748, 0, 0, 0, 748, 0, 0, 0, 0,
	529, 748, 0, 0, 0, 1968, 0, 775, 0, 1972,
	0, 1973, 1974, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 0, 1983, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 1991, 1992, 1993, 1994, 0, 1996, 0, 0, 0,
	0, 0, 2000, 0, 2001, 0, 0, 0, 2004, 0,
	0, 0, 0, 776, 0, 587, 2013, 2014, 2015, 2016,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 2027,
	2028, 0, 0, 0, 0, 0, 0, 2033, 2034, 2035,
	2036, 2037, 0, 1762, 0, 0, 0, 769, 78, 39,
	40, 80, 0, 0, 2050, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 43, 69, 70, 0, 67, 71, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	776, 776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1539, 0, 0, 529, 0, 0, 0, 1371, 0,
	0, 0, 1493, 0, 56, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 529, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 0,
	1393, 1394, 1395, 1396, 1397, 1372, 1373, 1374, 1375, 1356,
	1357, 1385, 0, 1359, 0, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 0, 0, 1369, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	0, 0, 2156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 46, 49,
	52, 51, 54, 0, 66, 0, 0, 75, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 529, 529, 529, 529, 0, 0,
	55, 83, 82, 2250, 1118, 64, 65, 53, 0, 0,
	529, 529, 0, 73, 74, 0, 0, 0, 1118, 1118,
	0, 0, 0, 2265, 0, 1386, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 776, 0, 0, 2280, 2281, 0, 0, 0, 57,
	58, 0, 59, 60, 61, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1268, 0, 1268, 0, 0, 1268, 0, 0, 0,
	0, 1268, 0, 0, 0, 0, 0, 0, 2323, 0,
	0, 0, 0, 0, 0, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2341, 2342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1268, 0, 0, 0, 0, 1268,
	529, 529, 529, 529, 529, 0, 0, 0, 0, 0,
	0, 0, 2340, 0, 0, 0, 0, 529, 81, 0,
	1493, 0, 529, 0, 0, 529, 2351, 1539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 529, 0, 1793, 0,
	0, 0, 0, 2440, 0, 0, 0, 0, 0, 0,
	2444, 0, 1268, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 529, 2454, 2455, 2457, 2459, 0, 0,
	0, 0, 0, 529, 2465, 0, 0, 0, 0, 2469,
	2470, 2471, 0, 0, 1205, 0, 2474, 0, 529, 0,
	0, 529, 2476, 0, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2052, 0, 2489, 687, 688,
	0, 0, 0, 2494, 1637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2516, 2517, 0, 0,
	2521, 0, 0, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2533, 2534,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	0, 529, 0, 0, 2584, 687, 688, 0, 1317, 0,
	0, 1637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 529, 529, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2611, 0, 0, 0, 2612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 1268, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2717, 2718,
	2719, 0, 2720, 2721, 0, 0, 2031, 0, 2724, 0,
	2725, 2728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2048, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 0, 0, 0, 0, 0, 0, 2754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2083, 2084, 0, 0, 0, 0, 0, 0, 0,
	2103, 0, 2104, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1542, 2768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2774, 0, 0, 0, 0, 0, 2775, 2776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2782, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 0, 0, 2178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1597, 1598, 1599, 1600, 0, 0, 2829, 0, 0,
	1268, 2830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1642, 1643, 0, 0, 1493, 0, 0, 0,
	1648, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1684, 1685, 1686, 1687, 1688,
	1689, 1691, 1695, 1696, 587, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 587, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 1774, 0, 0, 0, 0, 0, 2321, 0,
	79, 0, 0, 1793, 1793, 1793, 1793, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	2103, 748, 0, 0, 0, 1793, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 680, 687, 688, 689, 690, 691, 681, 683, 0,
	0, 0, 682, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 685, 692, 693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 680, 687, 688, 689, 690, 691,
	681, 683, 0, 0, 0, 682, 0, 0, 0, 0,
	0, 2417, 2418, 0, 0, 0, 0, 0, 685, 692,
	693, 2443, 0, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 2417, 2418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2582, 0, 0, 0, 0, 0, 0,
	0, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1205, 671,
	0, 0, 0, 672, 673, 0, 0, 0, 674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2616, 0, 2620,
	2621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2321, 0, 79, 0, 2321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2241, 2242, 0, 0, 0, 2245, 0,
	0, 0, 0, 2247, 2248, 2249, 0, 0, 0, 2783,
	0, 0, 0, 0, 79, 2254, 2255, 2256, 0, 0,
	1702, 2258, 0, 2259, 2260, 0, 0, 0, 2267, 2268,
	0, 0, 0, 0, 0, 0, 1702, 1702, 1702, 1702,
	1702, 587, 587, 587, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2462, 0, 0, 0, 0, 0,
	0, 2468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 587,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2589, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2603, 0, 2604, 0, 0, 0,
	0, 2607, 2608, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2615, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2648, 0, 0, 2650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2737, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 352, 0, 0, 924, 909, 449, 0,
	856, 927, 825, 844, 937, 847, 850, 891, 804, 870,
	370, 841, 796, 829, 799, 836, 800, 827, 858, 244,
	824, 911, 874, 926, 325, 241, 806, 830, 384, 846,
	193, 893, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 933, 329, 880, 587,
	434, 355, 0, 0, 0, 860, 915, 868, 905, 855,
	892, 814, 879, 928, 842, 888, 929, 287, 226, 192,
	367, 435, 259, 0, 2772, 0, 0, 184, 185, 186,
	0, 2796, 0, 2797, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 838, 885, 923, 839, 887, 239, 285,
	246, 238, 453, 934, 914, 803, 867, 922, 0, 0,
	209, 925, 862, 0, 890, 0, 940, 798, 882, 0,
	801, 805, 936, 918, 833, 249, 2822, 0, 0, 0,
	0, 0, 0, 859, 869, 902, 853, 0, 0, 0,
	0, 0, 0, 0, 831, 0, 878, 0, 0, 0,
	810, 802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 857, 0, 0, 0, 813, 0, 832,
	903, 0, 795, 268, 807, 356, 231, 0, 907, 917,
	854, 487, 921, 852, 851, 897, 811, 913, 845, 324,
	809, 293, 188, 205, 0, 843, 366, 407, 413, 912,
	828, 837, 229, 835, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 877, 895, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 1120, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	823, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 908, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 900, 939, 379, 412, 219, 473, 433, 818, 822,
	816, 817, 872, 873, 819, 930, 931, 932, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 904, 812, 0,
	820, 821, 0, 910, 919, 920, 524, 341, 424, 470,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 876, 187, 202,
	327, 935, 401, 261, 502, 481, 477, 797, 815, 236,
	826, 834, 0, 840, 848, 849, 861, 863, 864, 865,
	866, 883, 884, 886, 894, 896, 899, 901, 906, 916,
	938, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 420, 421, 426, 427, 428, 429,
	437, 441, 459, 460, 472, 485, 490, 270, 467, 491,
	0, 336, 875, 881, 338, 254, 273, 284, 889, 480,
	438, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	423, 444, 445, 446, 448, 351, 240, 386, 871, 898,
	334, 450, 451, 280, 352, 0, 0, 924, 909, 449,
	0, 856, 927, 825, 844, 937, 847, 850, 891, 804,
	870, 370, 841, 796, 829, 799, 836, 800, 827, 858,
	244, 824, 911, 874, 926, 325, 241, 806, 830, 384,
	846, 193, 893, 425, 228, 335, 332, 456, 255, 247,
	243, 227, 281, 342, 382, 443, 376, 933, 329, 880,
	0, 434, 355, 0, 0, 0, 860, 915, 868, 905,
	855, 892, 814, 879, 928, 842, 888, 929, 287, 226,
	192, 367, 435, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 838, 885, 923, 839, 887, 239,
	285, 246, 238, 453, 934, 914, 803, 867, 922, 0,
	0, 209, 925, 862, 0, 890, 0, 940, 798, 882,
	0, 801, 805, 936, 918, 833, 249, 0, 0, 0,
	0, 0, 0, 0, 859, 869, 902, 853, 0, 0,
	0, 0, 0, 2352, 0, 831, 0, 878, 0, 0,
	0, 810, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 857, 0, 0, 0, 813, 0,
	832, 903, 0, 795, 268, 807, 356, 231, 0, 907,
	917, 854, 487, 921, 852, 851, 897, 811, 913, 845,
	324, 809, 293, 188, 205, 0, 843, 366, 407, 413,
	912, 828, 837, 229, 835, 411, 380, 471, 213, 257,
	404, 385, 409, 392, 260, 877, 895, 410, 330, 458,
	399, 468, 488, 489, 237, 360, 478, 447, 484, 501,
	206, 234, 374, 440, 474, 431, 353, 454, 455, 292,
	430, 266, 191, 328, 494, 204, 419, 221, 211, 197,
	442, 466, 218, 422, 0, 0, 503, 199, 464, 439,
	349, 289, 290, 198, 0, 403, 242, 264, 232, 369,
	461, 462, 230, 504, 208, 483, 201, 1120, 482, 362,
	457, 465, 350, 340, 200, 463, 348, 339, 295, 314,
	315, 253, 275, 397, 333, 398, 276, 358, 357, 359,
	194, 475, 0, 195, 0, 436, 476, 505, 214, 215,
	216, 823, 252, 256, 263, 265, 271, 272, 279, 326,
	373, 396, 394, 400, 908, 452, 469, 479, 486, 492,
	493, 495, 496, 497, 498, 499, 500, 361, 278, 432,
	294, 331, 900, 939, 379, 412, 219, 473, 433, 818,
	822, 816, 817, 872, 873, 819, 930, 931, 932, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 904, 812,
	0, 820, 821, 0, 910, 919, 920, 524, 341, 424,
	470, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 876, 187,
	202, 327, 935, 401, 261, 502, 481, 477, 797, 815,
	236, 826, 834, 0, 840, 848, 849, 861, 863, 864,
	865, 866, 883, 884, 886, 894, 896, 899, 901, 906,
	916, 938, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 420, 421, 426, 427, 428,
	429, 437, 441, 459, 460, 472, 485, 490, 270, 467,
	491, 0, 336, 875, 881, 338, 254, 273, 284, 889,
	480, 438, 207, 408, 262, 196, 225, 210, 233, 248,
	251, 288, 347, 354, 383, 387, 267, 245, 223, 405,
	220, 423, 444, 445, 446, 448, 351, 240, 386, 871,
	898, 334, 450, 451, 280, 352, 0, 0, 924, 909,
	449, 0, 856, 927, 825, 844, 937, 847, 850, 891,
	804, 870, 370, 841, 796, 829, 799, 836, 800, 827,
	858, 244, 824, 911, 874, 926, 325, 241, 806, 830,
	384, 846, 193, 893, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 933, 329,
	880, 0, 434, 355, 0, 0, 0, 860, 915, 868,
	905, 855, 892, 814, 879, 928, 842, 888, 929, 287,
	226, 192, 367, 435, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 838, 885, 923, 839, 887,
	239, 285, 246, 238, 453, 934, 914, 803, 867, 922,
	0, 0, 209, 925, 862, 0, 890, 0, 940, 798,
	882, 0, 801, 805, 936, 918, 833, 249, 0, 0,
	0, 0, 0, 0, 0, 859, 869, 902, 853, 0,
	0, 0, 0, 0, 2310, 0, 831, 0, 878, 0,
	0, 0, 810, 802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 813,
	0, 832, 903, 0, 795, 268, 807, 356, 231, 0,
	907, 917, 854, 487, 921, 852, 851, 897, 811, 913,
	845, 324, 809, 293, 188, 205, 0, 843, 366, 407,
	413, 912, 828, 837, 229, 835, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 877, 895, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 1120, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 823, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 908, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 900, 939, 379, 412, 219, 473, 433,
	818, 822, 816, 817, 872, 873, 819, 930, 931, 932,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 904,
	812, 0, 820, 821, 0, 910, 919, 920, 524, 341,
	424, 470, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 876,
	187, 202, 327, 935, 401, 261, 502, 481, 477, 797,
	815, 236, 826, 834, 0, 840, 848, 849, 861, 863,
	864, 865, 866, 883, 884, 886, 894, 896, 899, 901,
	906, 916, 938, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 875, 881, 338, 254, 273, 284,
	889, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	871, 898, 334, 450, 451, 280, 352, 0, 0, 924,
	909, 449, 0, 856, 927, 825, 844, 937, 847, 850,
	891, 804, 870, 370, 841, 796, 829, 799, 836, 800,
	827, 858, 244, 824, 911, 874, 926, 325, 241, 806,
	830, 384, 846, 193, 893, 425, 228, 335, 332, 456,
	255, 247, 243, 227, 281, 342, 382, 443, 376, 933,
	329, 880, 0, 434, 355, 0, 0, 0, 860, 915,
	868, 905, 855, 892, 814, 879, 928, 842, 888, 929,
	287, 226, 192, 367, 435, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 310, 319, 318, 299,
	300, 302, 304, 309, 316, 322, 838, 885, 923, 839,
	887, 239, 285, 246, 238, 453, 934, 914, 803, 867,
	922, 0, 0, 209, 925, 862, 0, 890, 0, 940,
	798, 882, 0, 801, 805, 936, 918, 833, 249, 0,
	0, 0, 0, 0, 0, 0, 859, 869, 902, 853,
	0, 0, 0, 0, 0, 1781, 0, 831, 0, 878,
	0, 0, 0, 810, 802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 857, 0, 0, 0,
	813, 0, 832, 903, 0, 795, 268, 807, 356, 231,
	0, 907, 917, 854, 487, 921, 852, 851, 897, 811,
	913, 845, 324, 809, 293, 188, 205, 0, 843, 366,
	407, 413, 912, 828, 837, 229, 835, 411, 380, 471,
	213, 257, 404, 385, 409, 392, 260, 877, 895, 410,
	330, 458, 399, 468, 488, 489, 237, 360, 478, 447,
	484, 501, 206, 234, 374, 440, 474, 431, 353, 454,
	455, 292, 430, 266, 191, 328, 494, 204, 419, 221,
	211, 197, 442, 466, 218, 422, 0, 0, 503, 199,
	464, 439, 349, 289, 290, 198, 0, 403, 242, 264,
	232, 369, 461, 462, 230, 504, 208, 483, 201, 1120,
	482, 362, 457, 465, 350, 340, 200, 463, 348, 339,
	295, 314, 315, 253, 275, 397, 333, 398, 276, 358,
	357, 359, 194, 475, 0, 195, 0, 436, 476, 505,
	214, 215, 216, 823, 252, 256, 263, 265, 271, 272,
	279, 326, 373, 396, 394, 400, 908, 452, 469, 479,
	486, 492, 493, 495, 496, 497, 498, 499, 500, 361,
	278, 432, 294, 331, 900, 939, 379, 412, 219, 473,
	433, 818, 822, 816, 817, 872, 873, 819, 930, 931,
	932, 506, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 0,
	904, 812, 0, 820, 821, 0, 910, 919, 920, 524,
	341, 424, 470, 296, 308, 311, 301, 320, 0, 321,
	297, 298, 303, 305, 306, 307, 312, 313, 317, 323,
	876, 187, 202, 327, 935, 401, 261, 502, 481, 477,
	797, 815, 236, 826, 834, 0, 840, 848, 849, 861,
	863, 864, 865, 866, 883, 884, 886, 894, 896, 899,
	901, 906, 916, 938, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 337,
	343, 344, 345, 346, 363, 364, 365, 368, 371, 372,
	375, 377, 378, 381, 388, 389, 390, 391, 393, 395,
	402, 406, 414, 415, 416, 417, 418, 420, 421, 426,
	427, 428, 429, 437, 441, 459, 460, 472, 485, 490,
	270, 467, 491, 0, 336, 875, 881, 338, 254, 273,
	284, 889, 480, 438, 207, 408, 262, 196, 225, 210,
	233, 248, 251, 288, 347, 354, 383, 387, 267, 245,
	223, 405, 220, 423, 444, 445, 446, 448, 351, 240,
	386, 871, 898, 334, 450, 451, 280, 352, 0, 0,
	924, 909, 449, 0, 856, 927, 825, 844, 937, 847,
	850, 891, 804, 870, 370, 841, 796, 829, 799, 836,
	800, 827, 858, 244, 824, 911, 874, 926, 325, 241,
	806, 830, 384, 846, 193, 893, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	933, 329, 880, 0, 434, 355, 0, 0, 0, 860,
	915, 868, 905, 855, 892, 814, 879, 928, 842, 888,
	929, 287, 226, 192, 367, 435, 259, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 838, 885, 923,
	839, 887, 239, 285, 246, 238, 453, 934, 914, 803,
	867, 922, 0, 0, 209, 925, 862, 0, 890, 0,
	940, 798, 882, 0, 801, 805, 936, 918, 833, 249,
	0, 0, 0, 0, 0, 0, 0, 859, 869, 902,
	853, 0, 0, 0, 0, 0, 0, 0, 831, 0,
	878, 0, 0, 0, 810, 802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 813, 0, 832, 903, 0, 795, 268, 807, 356,
	231, 0, 907, 917, 854, 487, 921, 852, 851, 897,
	811, 913, 845, 324, 809, 293, 188, 205, 0, 843,
	366, 407, 413, 912, 828, 837, 229, 835, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 877, 895,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	1120, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 823, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 908, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 900, 939, 379, 412, 219,
	473, 433, 818, 822, 816, 817, 872, 873, 819, 930,
	931, 932, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 904, 812, 0, 820, 821, 0, 910, 919, 920,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 876, 187, 202, 327, 935, 401, 261, 502, 481,
	477, 797, 815, 236, 826, 834, 0, 840, 848, 849,
	861, 863, 864, 865, 866, 883, 884, 886, 894, 896,
	899, 901, 906, 916, 938, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 875, 881, 338, 254,
	273, 284, 889, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 871, 898, 334, 450, 451, 280, 352, 0,
	0, 924, 909, 449, 0, 856, 927, 825, 844, 937,
	847, 850, 891, 804, 870, 370, 841, 796, 829, 799,
	836, 800, 827, 858, 244, 824, 911, 874, 926, 325,
	241, 806, 830, 384, 846, 193, 893, 425, 228, 335,
	332, 456, 255, 247, 243, 227, 281, 342, 382, 443,
	376, 933, 329, 880, 0, 434, 355, 0, 0, 0,
	860, 915, 868, 905, 855, 892, 814, 879, 928, 842,
	888, 929, 287, 226, 192, 367, 435, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 838, 885,
	923, 839, 887, 239, 285, 246, 238, 453, 934, 914,
	803, 867, 922, 0, 0, 209, 925, 862, 0, 890,
	0, 940, 798, 882, 0, 801, 805, 936, 918, 833,
	249, 0, 0, 0, 0, 0, 0, 0, 859, 869,
	902, 853, 0, 0, 0, 0, 0, 0, 0, 831,
	0, 878, 0, 0, 0, 810, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 857, 0,
	0, 0, 813, 0, 832, 903, 0, 795, 268, 807,
	356, 231, 0, 907, 917, 854, 487, 921, 852, 851,
	897, 811, 913, 845, 324, 809, 293, 188, 205, 0,
	843, 366, 407, 413, 912, 828, 837, 229, 835, 411,
	380, 471, 213, 257, 404, 385, 409, 392, 260, 877,
	895, 410, 330, 458, 399, 468, 488, 489, 237, 360,
	478, 447, 484, 501, 206, 234, 374, 440, 474, 431,
	353, 454, 455, 292, 430, 266, 191, 328, 494, 204,
	419, 221, 211, 197, 442, 466, 218, 422, 0, 0,
	503, 199, 464, 439, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 461, 462, 230, 504, 208, 483,
	201, 1120, 482, 362, 457, 465, 350, 340, 200, 463,
	348, 339, 295, 314, 315, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 475, 0, 195, 0, 436,
	476, 505, 214, 215, 216, 823, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 908, 452,
	469, 479, 486, 492, 493, 495, 496, 497, 498, 499,
	500, 361, 278, 432, 294, 331, 900, 939, 379, 412,
	219, 473, 433, 818, 822, 816, 817, 872, 873, 819,
	930, 931, 932, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 904, 812, 0, 820, 821, 0, 910, 919,
	920, 524, 341, 424, 470, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 876, 187, 202, 327, 935, 401, 261, 502,
	481, 477, 797, 815, 236, 826, 834, 0, 840, 848,
	849, 861, 863, 864, 865, 866, 883, 884, 886, 894,
	896, 899, 901, 906, 916, 938, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 420,
	421, 426, 427, 428, 429, 437, 441, 459, 460, 472,
	485, 490, 270, 467, 491, 0, 336, 875, 881, 338,
	254, 273, 284, 889, 480, 438, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 423, 444, 445, 446, 448,
	351, 240, 386, 871, 898, 334, 450, 451, 280, 352,
	0, 0, 924, 909, 449, 0, 856, 927, 825, 844,
	937, 847, 850, 891, 804, 870, 370, 841, 796, 829,
	799, 836, 800, 827, 858, 244, 824, 911, 874, 926,
	325, 241, 806, 830, 384, 846, 193, 893, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 933, 329, 880, 0, 434, 355, 0, 0,
	0, 860, 915, 868, 905, 855, 892, 814, 879, 928,
	842, 888, 929, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 838,
	885, 923, 839, 887, 239, 285, 246, 238, 453, 934,
	914, 803, 867, 922, 0, 0, 941, 925, 862, 0,
	890, 0, 940, 798, 882, 0, 801, 805, 936, 918,
	833, 249, 0, 0, 0, 0, 0, 0, 0, 859,
	869, 902, 853, 0, 0, 0, 0, 0, 0, 0,
	831, 0, 878, 0, 0, 0, 810, 802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 857,
	0, 0, 0, 813, 0, 832, 903, 0, 795, 268,
	807, 356, 231, 0, 907, 917, 854, 487, 921, 852,
	851, 897, 811, 913, 845, 324, 809, 293, 188, 205,
	0, 843, 366, 407, 413, 912, 828, 837, 229, 835,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	877, 895, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 808, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 823, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 908,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 794, 788, 787, 294, 331, 900, 939, 379,
	412, 219, 473, 433, 818, 822, 816, 817, 872, 873,
	819, 930, 931, 932, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 904, 812, 0, 820, 821, 0, 910,
	919, 920, 524, 341, 424, 470, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 876, 187, 202, 327, 935, 401, 261,
	502, 481, 477, 797, 815, 236, 826, 834, 0, 840,
	848, 849, 861, 863, 864, 865, 866, 883, 884, 886,
	894, 896, 899, 901, 906, 916, 938, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 270, 467, 491, 0, 336, 875, 881,
	338, 254, 273, 284, 889, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 871, 898, 334, 450, 451, 280,
	352, 0, 0, 924, 909, 449, 0, 856, 927, 825,
	844, 937, 847, 850, 891, 804, 870, 370, 841, 796,
	829, 799, 836, 800, 827, 858, 244, 824, 911, 874,
	926, 325, 241, 806, 830, 384, 846, 193, 893, 425,
	228, 335, 332, 456, 255, 247, 243, 227, 281, 342,
	382, 443, 376, 933, 329, 880, 0, 434, 355, 0,
	0, 0, 860, 915, 868, 905, 855, 892, 814, 879,
	928, 842, 888, 929, 287, 226, 192, 367, 435, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	838, 885, 923, 839, 887, 239, 285, 246, 238, 453,
	934, 914, 803, 867, 922, 0, 0, 941, 925, 862,
	0, 890, 0, 940, 798, 882, 0, 801, 805, 936,
	918, 833, 249, 0, 0, 0, 0, 0, 0, 0,
	859, 869, 902, 853, 0, 0, 0, 0, 0, 0,
	0, 831, 0, 878, 0, 0, 0, 810, 802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	857, 0, 0, 0, 813, 0, 832, 903, 0, 795,
	268, 807, 356, 231, 0, 907, 917, 854, 487, 921,
	852, 851, 897, 811, 913, 845, 324, 809, 293, 188,
	205, 0, 843, 366, 407, 413, 912, 828, 837, 229,
	835, 411, 380, 471, 213, 257, 404, 385, 409, 392,
	260, 877, 895, 410, 330, 458, 399, 468, 488, 489,
	237, 360, 478, 447, 484, 501, 206, 234, 374, 440,
	474, 431, 353, 454, 455, 292, 430, 266, 191, 328,
	494, 204, 419, 221, 211, 197, 442, 1334, 218, 422,
	0, 0, 503, 199, 464, 439, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 461, 462, 230, 504,
	208, 483, 201, 808, 482, 362, 457, 465, 350, 340,
	200, 463, 348, 339, 295, 314, 315, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 475, 0, 195,
	0, 436, 476, 505, 214, 215, 216, 823, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	908, 452, 469, 479, 486, 492, 493, 495, 496, 497,
	498, 499, 500, 794, 788, 787, 294, 331, 900, 939,
	379, 412, 219, 473, 433, 818, 822, 816, 817, 872,
	873, 819, 930, 931, 932, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 904, 812, 0, 820, 821, 0,
	910, 919, 920, 524, 341, 424, 470, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 876, 187, 202, 327, 935, 401,
	261, 502, 481, 477, 797, 815, 236, 826, 834, 0,
	840, 848, 849, 861, 863, 864, 865, 866, 883, 884,
	886, 894, 896, 899, 901, 906, 916, 938, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 420, 421, 426, 427, 428, 429, 437, 441, 459,
	460, 472, 485, 490, 270, 467, 491, 0, 336, 875,
	881, 338, 254, 273, 284, 889, 480, 438, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 423, 444, 445,
	446, 448, 351, 240, 386, 871, 898, 334, 450, 451,
	280, 352, 0, 0, 924, 909, 449, 0, 856, 927,
	825, 844, 937, 847, 850, 891, 804, 870, 370, 841,
	796, 829, 799, 836, 800, 827, 858, 244, 824, 911,
	874, 926, 325, 241, 806, 830, 384, 846, 193, 893,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 933, 329, 880, 0, 434, 355,
	0, 0, 0, 860, 915, 868, 905, 855, 892, 814,
	879, 928, 842, 888, 929, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 838, 885, 923, 839, 887, 239, 285, 246, 238,
	453, 934, 914, 803, 867, 922, 0, 0, 941, 925,
	862, 0, 890, 0, 940, 798, 882, 0, 801, 805,
	936, 918, 833, 249, 0, 0, 0, 0, 0, 0,
	0, 859, 869, 902, 853, 0, 0, 0, 0, 0,
	0, 0, 831, 0, 878, 0, 0, 0, 810, 802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 857, 0, 0, 0, 813, 0, 832, 903, 0,
	795, 268, 807, 356, 231, 0, 907, 917, 854, 487,
	921, 852, 851, 897, 811, 913, 845, 324, 809, 293,
	188, 205, 0, 843, 366, 407, 413, 912, 828, 837,
	229, 835, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 877, 895, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 785, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 808, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 823, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 908, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 794, 788, 787, 294, 331, 900,
	939, 379, 412, 219, 473, 433, 818, 822, 816, 817,
	872, 873, 819, 930, 931, 932, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 904, 812, 0, 820, 821,
	0, 910, 919, 920, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 876, 187, 202, 327, 935,
	401, 261, 502, 481, 477, 797, 815, 236, 826, 834,
	0, 840, 848, 849, 861, 863, 864, 865, 866, 883,
	884, 886, 894, 896, 899, 901, 906, 916, 938, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	875, 881, 338, 254, 273, 284, 889, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 871, 898, 334, 450,
	451, 280, 352, 0, 0, 0, 0, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 1726, 0, 605, 0, 0, 0, 244, 610,
	0, 0, 0, 325, 241, 0, 1727, 384, 0, 193,
	0, 425, 228, 335, 332, 456, 255, 247, 243, 227,
	281, 342, 382, 443, 376, 617, 329, 0, 0, 434,
	355, 0, 0, 0, 0, 0, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 367,
	435, 259, 0, 87, 0, 0, 184, 185, 186, 680,
	687, 688, 689, 690, 691, 681, 683, 0, 0, 217,
	682, 224, 628, 630, 629, 639, 640, 641, 642, 643,
	644, 645, 626, 685, 692, 693, 0, 239, 285, 246,
	238, 453, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 588, 602, 0,
	616, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 599,
	600, 774, 0, 0, 0, 665, 0, 601, 0, 0,
	609, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 611, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 356, 231, 0, 664, 0, 0,
	487, 0, 0, 662, 0, 0, 0, 0, 324, 0,
	293, 188, 205, 0, 0, 366, 407, 413, 0, 0,
	0, 229, 0, 411, 380, 471, 213, 257, 404, 385,
	409, 392, 260, 0, 0, 410, 330, 458, 399, 468,
	488, 489, 237, 360, 478, 447, 484, 501, 206, 234,
	374, 440, 474, 431, 353, 454, 455, 292, 430, 266,
	191, 328, 494, 204, 419, 221, 211, 197, 442, 466,
	218, 422, 0, 0, 503, 199, 464, 439, 349, 289,
	290, 198, 0, 403, 242, 264, 232, 369, 461, 462,
	230, 504, 208, 483, 201, 0, 482, 362, 457, 465,
	350, 340, 200, 463, 348, 339, 295, 634, 635, 253,
	275, 397, 333, 398, 276, 358, 357, 359, 194, 475,
	0, 195, 0, 436, 476, 505, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 326, 373, 396,
	394, 400, 0, 452, 469, 479, 486, 492, 493, 495,
	496, 497, 498, 499, 500, 361, 278, 432, 294, 331,
	0, 0, 379, 412, 219, 473, 433, 671, 663, 621,
	623, 672, 673, 618, 619, 622, 674, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 666, 608, 607, 0,
	614, 615, 0, 624, 625, 627, 631, 632, 633, 636,
	637, 638, 646, 648, 649, 647, 650, 651, 652, 655,
	656, 657, 658, 653, 654, 659, 606, 187, 202, 327,
	0, 401, 261, 502, 481, 477, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 337, 343, 344, 345, 346,
	363, 364, 365, 368, 371, 372, 375, 377, 378, 381,
	388, 389, 390, 391, 393, 395, 402, 406, 414, 415,
	416, 417, 418, 420, 421, 426, 427, 428, 429, 437,
	441, 459, 460, 472, 485, 490, 270, 467, 491, 0,
	336, 0, 0, 338, 254, 273, 284, 0, 480, 438,
	207, 408, 262, 196, 225, 210, 233, 248, 251, 288,
	347, 354, 383, 387, 267, 245, 223, 405, 220, 423,
	444, 445, 446, 448, 351, 240, 386, 0, 352, 334,
	450, 451, 280, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	605, 0, 0, 0, 244, 610, 0, 0, 0, 325,
	241, 0, 0, 384, 0, 193, 0, 425, 228, 335,
	332, 456, 255, 247, 243, 227, 281, 342, 382, 443,
	376, 617, 329, 0, 0, 434, 355, 0, 0, 0,
	0, 0, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 367, 435, 259, 0, 87,
	0, 0, 184, 185, 186, 680, 687, 688, 689, 690,
	691, 681, 683, 0, 0, 217, 682, 224, 628, 630,
	629, 639, 640, 641, 642, 643, 644, 645, 626, 685,
	692, 693, 0, 239, 285, 246, 238, 453, 0, 0,
	1692, 1693, 1694, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 588, 602, 0, 616, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 599, 600, 0, 0, 0,
	0, 665, 0, 601, 0, 0, 609, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	356, 231, 0, 664, 0, 0, 487, 0, 0, 662,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 366, 407, 413, 0, 0, 0, 229, 0, 411,
	380, 471, 213, 257, 404, 385, 409, 392, 260, 0,
	0, 410, 330, 458, 399, 468, 488, 489, 237, 360,
	478, 447, 484, 501, 206, 234, 374, 440, 474, 431,
	353, 454, 455, 292, 430, 266, 191, 328, 494, 204,
	419, 221, 211, 197, 442, 466, 218, 422, 0, 0,
	503, 199, 464, 439, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 461, 462, 230, 504, 208, 483,
	201, 0, 482, 362, 457, 465, 350, 340, 200, 463,
	348, 339, 295, 634, 635, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 475, 0, 195, 0, 436,
	476, 505, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 0, 452,
	469, 479, 486, 492, 493, 495, 496, 497, 498, 499,
	500, 361, 278, 432, 294, 331, 0, 0, 379, 412,
	219, 473, 433, 671, 663, 621, 623, 672, 673, 618,
	619, 622, 674, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 666, 608, 607, 0, 614, 615, 0, 624,
	625, 627, 631, 632, 633, 636, 637, 638, 646, 648,
	649, 647, 650, 651, 652, 655, 656, 657, 658, 653,
	654, 659, 606, 187, 202, 327, 0, 401, 261, 502,
	481, 477, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 420,
	421, 426, 427, 428, 429, 437, 441, 459, 460, 472,
	485, 490, 270, 467, 491, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 480, 438, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 423, 444, 445, 446, 448,
	351, 240, 386, 0, 352, 334, 450, 451, 280, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 605, 0, 0, 0,
	244, 610, 0, 0, 0, 325, 241, 0, 0, 384,
	0, 193, 0, 425, 228, 335, 332, 456, 255, 247,
	243, 227, 281, 342, 382, 443, 376, 617, 329, 0,
	0, 434, 355, 0, 0, 0, 0, 0, 612, 613,
	0, 0, 0, 0, 0, 0, 1808, 0, 287, 226,
	192, 367, 435, 259, 0, 87, 0, 0, 184, 185,
	186, 680, 687, 688, 689, 690, 691, 681, 683, 0,
	0, 217, 682, 224, 628, 630, 629, 639, 640, 641,
	642, 643, 644, 645, 626, 685, 692, 693, 1809, 239,
	285, 246, 238, 453, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 588,
	602, 0, 616, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 599, 600, 0, 0, 0, 0, 665, 0, 601,
	0, 0, 609, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 356, 231, 0, 664,
	0, 0, 487, 0, 0, 662, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 366, 407, 413,
	0, 0, 0, 229, 0, 411, 380, 471, 213, 257,
	404, 385, 409, 392, 260, 0, 0, 410, 330, 458,
	399, 468, 488, 489, 237, 360, 478, 447, 484, 501,
	206, 234, 374, 440, 474, 431, 353, 454, 455, 292,
	430, 266, 191, 328, 494, 204, 419, 221, 211, 197,
	442, 466, 218, 422, 0, 0, 503, 199, 464, 439,
	349, 289, 290, 198, 0, 403, 242, 264, 232, 369,
	461, 462, 230, 504, 208, 483, 201, 0, 482, 362,
	457, 465, 350, 340, 200, 463, 348, 339, 295, 634,
	635, 253, 275, 397, 333, 398, 276, 358, 357, 359,
	194, 475, 0, 195, 0, 436, 476, 505, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	373, 396, 394, 400, 0, 452, 469, 479, 486, 492,
	493, 495, 496, 497, 498, 499, 500, 361, 278, 432,
	294, 331, 0, 0, 379, 412, 219, 473, 433, 671,
	663, 621, 623, 672, 673, 618, 619, 622, 674, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 666, 608,
	607, 0, 614, 615, 0, 624, 625, 627, 631, 632,
	633, 636, 637, 638, 646, 648, 649, 647, 650, 651,
	652, 655, 656, 657, 658, 653, 654, 659, 606, 187,
	202, 327, 0, 401, 261, 502, 481, 477, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 420, 421, 426, 427, 428,
	429, 437, 441, 459, 460, 472, 485, 490, 270, 467,
	491, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	480, 438, 207, 408, 262, 196, 225, 210, 233, 248,
	251, 288, 347, 354, 383, 387, 267, 245, 223, 405,
	220, 423, 444, 445, 446, 448, 351, 240, 386, 0,
	0, 334, 450, 451, 280, 352, 0, 0, 0, 78,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 605, 0, 0,
	0, 244, 610, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 617, 329,
	0, 0, 434, 355, 0, 0, 0, 0, 0, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 435, 259, 0, 87, 0, 0, 184,
	185, 186, 680, 687, 688, 689, 690, 691, 681, 683,
	0, 0, 217, 682, 224, 628, 630, 629, 639, 640,
	641, 642, 643, 644, 645, 626, 685, 692, 693, 0,
	239, 285, 246, 238, 453, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	588, 602, 0, 616, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 599, 600, 0, 0, 0, 0, 665, 0,
	601, 0, 0, 609, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	664, 0, 0, 487, 0, 0, 662, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 0, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	634, 635, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 0, 0, 379, 412, 219, 473, 433,
	671, 663, 621, 623, 672, 673, 618, 619, 622, 674,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 666,
	608, 607, 0, 614, 615, 0, 624, 625, 627, 631,
	632, 633, 636, 637, 638, 646, 648, 649, 647, 650,
	651, 652, 655, 656, 657, 658, 653, 654, 659, 606,
	187, 202, 327, 86, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 352, 334, 450, 451, 280, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 605, 0, 0, 0, 244, 610, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 617, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 87, 0, 0, 184, 185, 186, 680, 687,
	688, 689, 690, 691, 681, 683, 0, 0, 217, 682,
	224, 628, 630, 629, 639, 640, 641, 642, 643, 644,
	645, 626, 685, 692, 693, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 588, 602, 0, 616,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 599, 600,
	0, 0, 0, 0, 665, 0, 601, 0, 0, 609,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 664, 0, 0, 487,
	0, 0, 662, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 2762, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 634, 635, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 671, 663, 621, 623,
	672, 673, 618, 619, 622, 674, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 666, 608, 607, 0, 614,
	615, 0, 624, 625, 627, 631, 632, 633, 636, 637,
	638, 646, 648, 649, 647, 650, 651, 652, 655, 656,
	657, 658, 653, 654, 659, 606, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 605,
	0, 0, 0, 244, 610, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	617, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 87, 0,
	1301, 184, 185, 186, 680, 687, 688, 689, 690, 691,
	681, 683, 0, 0, 217, 682, 224, 628, 630, 629,
	639, 640, 641, 642, 643, 644, 645, 626, 685, 692,
	693, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 588, 602, 0, 616, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 599, 600, 0, 0, 0, 0,
	665, 0, 601, 0, 0, 609, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 664, 0, 0, 487, 0, 0, 662, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 634, 635, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 671, 663, 621, 623, 672, 673, 618, 619,
	622, 674, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 666, 608, 607, 0, 614, 615, 0, 624, 625,
	627, 631, 632, 633, 636, 637, 638, 646, 648, 649,
	647, 650, 651, 652, 655, 656, 657, 658, 653, 654,
	659, 606, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 605, 0, 0, 0, 244,
	610, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 617, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 87, 0, 0, 184, 185, 186,
	680, 687, 688, 689, 690, 691, 681, 683, 0, 0,
	217, 682, 224, 628, 630, 629, 639, 640, 641, 642,
	643, 644, 645, 626, 685, 692, 693, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 588, 602,
	0, 616, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	599, 600, 774, 0, 0, 0, 665, 0, 601, 0,
	0, 609, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 664, 0,
	0, 487, 0, 0, 662, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 634, 635,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 671, 663,
	621, 623, 672, 673, 618, 619, 622, 674, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 666, 608, 607,
	0, 614, 615, 0, 624, 625, 627, 631, 632, 633,
	636, 637, 638, 646, 648, 649, 647, 650, 651, 652,
	655, 656, 657, 658, 653, 654, 659, 606, 187, 202,
	327, 0, 401, 261, 502, 481, 477, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 420, 421, 426, 427, 428, 429,
	437, 441, 459, 460, 472, 485, 490, 270, 467, 491,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 480,
	438, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	423, 444, 445, 446, 448, 351, 240, 386, 0, 352,
	334, 450, 451, 280, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 605, 0, 0, 0, 244, 610, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 617, 329, 0, 0, 434, 355, 0, 0,
	0, 0, 0, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 435, 259, 0,
	87, 0, 0, 184, 185, 186, 680, 687, 688, 689,
	690, 691, 681, 683, 0, 0, 217, 682, 224, 628,
	630, 629, 639, 640, 641, 642, 643, 644, 645, 626,
	685, 692, 693, 0, 239, 285, 246, 238, 453, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 588, 602, 0, 616, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 599, 600, 0, 0,
	0, 0, 665, 0, 601, 0, 0, 609, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 664, 0, 0, 487, 0, 0,
	662, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 0, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 634, 635, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 0, 0, 379,
	412, 219, 473, 433, 671, 663, 621, 623, 672, 673,
	618, 619, 622, 674, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 666, 608, 607, 0, 614, 615, 0,
	624, 625, 627, 631, 632, 633, 636, 637, 638, 646,
	648, 649, 647, 650, 651, 652, 655, 656, 657, 658,
	653, 654, 659, 606, 187, 202, 327, 0, 401, 261,
	502, 481, 477, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 270, 467, 491, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 0, 352, 334, 450, 451, 280,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 605, 0, 0,
	0, 244, 610, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 617, 329,
	0, 0, 434, 355, 0, 0, 0, 0, 0, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 435, 259, 0, 87, 0, 0, 184,
	185, 186, 680, 687, 688, 689, 690, 691, 681, 683,
	0, 0, 217, 682, 224, 628, 630, 629, 639, 640,
	641, 642, 643, 644, 645, 626, 685, 692, 693, 0,
	239, 285, 246, 238, 453, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 602, 0, 616, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 599, 600, 0, 0, 0, 0, 665, 0,
	601, 0, 0, 609, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	664, 0, 0, 487, 0, 0, 662, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 0, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	634, 635, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 0, 0, 379, 412, 219, 473, 433,
	671, 663, 621, 623, 672, 673, 618, 619, 622, 674,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 666,
	608, 607, 0, 614, 615, 0, 624, 625, 627, 631,
	632, 633, 636, 637, 638, 646, 648, 649, 647, 650,
	651, 652, 655, 656, 657, 658, 653, 654, 659, 606,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 352, 334, 450, 451, 280, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 0, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 687,
	688, 0, 0, 0, 0, 1637, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 988, 487, 0, 0, 0, 0,
	0, 985, 986, 324, 949, 293, 188, 205, 979, 983,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 0, 334, 450, 451, 280, 352, 0,
	0, 0, 78, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 325,
	241, 0, 0, 384, 0, 193, 0, 425, 228, 335,
	332, 456, 255, 247, 243, 227, 281, 342, 382, 443,
	376, 0, 329, 0, 0, 434, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 367, 435, 259, 0, 87,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 310, 319,
	318, 299, 300, 302, 304, 309, 316, 322, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 453, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	356, 231, 0, 0, 0, 0, 487, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 293, 188, 205, 0,
	0, 366, 407, 413, 0, 0, 0, 229, 0, 411,
	380, 471, 213, 257, 404, 385, 409, 392, 260, 0,
	0, 410, 330, 458, 399, 468, 488, 489, 237, 360,
	478, 447, 484, 501, 206, 234, 374, 440, 474, 431,
	353, 454, 455, 292, 430, 266, 191, 328, 494, 204,
	419, 221, 211, 197, 442, 466, 218, 422, 0, 0,
	503, 199, 464, 439, 349, 289, 290, 198, 0, 403,
	242, 264, 232, 369, 461, 462, 230, 504, 208, 483,
	201, 0, 482, 362, 457, 465, 350, 340, 200, 463,
	348, 339, 295, 314, 315, 253, 275, 397, 333, 398,
	276, 358, 357, 359, 194, 475, 0, 195, 0, 436,
	476, 505, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 326, 373, 396, 394, 400, 0, 452,
	469, 479, 486, 492, 493, 495, 496, 497, 498, 499,
	500, 361, 278, 432, 294, 331, 0, 0, 379, 412,
	219, 473, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 341, 424, 470, 296, 308, 311, 301, 320,
	0, 321, 297, 298, 303, 305, 306, 307, 312, 313,
	317, 323, 0, 187, 202, 327, 86, 401, 261, 502,
	481, 477, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 337, 343, 344, 345, 346, 363, 364, 365, 368,
	371, 372, 375, 377, 378, 381, 388, 389, 390, 391,
	393, 395, 402, 406, 414, 415, 416, 417, 418, 420,
	421, 426, 427, 428, 429, 437, 441, 459, 460, 472,
	485, 490, 270, 467, 491, 0, 336, 0, 0, 338,
	254, 273, 284, 0, 480, 438, 207, 408, 262, 196,
	225, 210, 233, 248, 251, 288, 347, 354, 383, 387,
	267, 245, 223, 405, 220, 423, 444, 445, 446, 448,
	351, 240, 386, 0, 1320, 334, 450, 451, 280, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 0, 1322, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 325, 241, 0, 0, 384,
	0, 193, 0, 425, 228, 335, 332, 456, 255, 247,
	243, 227, 281, 342, 382, 443, 376, 0, 329, 0,
	0, 434, 355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 367, 435, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 310, 319, 318, 299, 300, 302,
	304, 309, 316, 322, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 453, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 1154, 0, 1155, 1156, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 356, 231, 0, 0,
	0, 0, 487, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 293, 188, 205, 0, 0, 366, 407, 413,
	0, 0, 0, 229, 0, 411, 380, 471, 213, 257,
	404, 385, 409, 392, 260, 0, 0, 410, 330, 458,
	399, 468, 488, 489, 237, 360, 478, 447, 484, 501,
	206, 234, 374, 440, 474, 431, 353, 454, 455, 292,
	430, 266, 191, 328, 494, 204, 419, 221, 211, 197,
	442, 466, 218, 422, 0, 0, 503, 199, 464, 439,
	349, 289, 290, 198, 0, 403, 242, 264, 232, 369,
	461, 462, 230, 504, 208, 483, 201, 0, 482, 362,
	457, 465, 350, 340, 200, 463, 348, 339, 295, 314,
	315, 253, 275, 397, 333, 398, 276, 358, 357, 359,
	194, 475, 0, 195, 0, 436, 476, 505, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 326,
	373, 396, 394, 400, 0, 452, 469, 479, 486, 492,
	493, 495, 496, 497, 498, 499, 500, 361, 278, 432,
	294, 331, 0, 0, 379, 412, 219, 473, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 341, 424,
	470, 296, 308, 311, 301, 320, 0, 321, 297, 298,
	303, 305, 306, 307, 312, 313, 317, 323, 0, 187,
	202, 327, 0, 401, 261, 502, 481, 477, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 337, 343, 344,
	345, 346, 363, 364, 365, 368, 371, 372, 375, 377,
	378, 381, 388, 389, 390, 391, 393, 395, 402, 406,
	414, 415, 416, 417, 418, 420, 421, 426, 427, 428,
	429, 437, 441, 459, 460, 472, 485, 490, 270, 467,
	491, 0, 336, 0, 0, 338, 254, 273, 284, 0,
	480, 438, 207, 408, 262, 196, 225, 210, 233, 248,
	251, 288, 347, 354, 383, 387, 267, 245, 223, 405,
	220, 423, 444, 445, 446, 448, 351, 240, 386, 0,
	352, 334, 450, 451, 280, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 325, 241, 0, 0, 384, 0, 193, 0, 425,
	228, 335, 332, 456, 255, 247, 243, 227, 281, 342,
	382, 443, 376, 0, 329, 0, 0, 434, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 367, 435, 259,
	0, 0, 0, 0, 184, 185, 186, 1263, 1266, 0,
	0, 0, 0, 1262, 1265, 0, 0, 217, 1261, 224,
	310, 319, 318, 299, 300, 302, 304, 309, 316, 322,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 453,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 356, 231, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 293, 188,
	205, 0, 0, 366, 407, 413, 0, 0, 0, 229,
	0, 411, 380, 471, 213, 257, 404, 385, 409, 392,
	260, 0, 0, 410, 330, 458, 399, 468, 488, 489,
	237, 360, 478, 447, 484, 501, 206, 234, 374, 440,
	474, 431, 353, 454, 455, 292, 430, 266, 191, 328,
	494, 204, 419, 221, 211, 197, 442, 466, 218, 422,
	0, 0, 503, 199, 464, 439, 349, 289, 290, 198,
	0, 403, 242, 264, 232, 369, 461, 462, 230, 504,
	208, 483, 201, 0, 482, 362, 457, 465, 350, 340,
	200, 463, 348, 339, 295, 314, 315, 253, 275, 397,
	333, 398, 276, 358, 357, 359, 194, 475, 0, 195,
	0, 436, 476, 505, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 326, 373, 396, 394, 400,
	0, 452, 469, 479, 486, 492, 493, 495, 496, 497,
	498, 499, 500, 361, 278, 432, 294, 331, 0, 0,
	379, 412, 219, 473, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 524, 341, 424, 470, 296, 308, 311,
	301, 320, 0, 321, 297, 298, 303, 305, 306, 307,
	312, 313, 317, 323, 0, 187, 202, 327, 0, 401,
	261, 502, 481, 477, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 337, 343, 344, 345, 346, 363, 364,
	365, 368, 371, 372, 375, 377, 378, 381, 388, 389,
	390, 391, 393, 395, 402, 406, 414, 415, 416, 417,
	418, 420, 421, 426, 427, 428, 429, 437, 441, 459,
	460, 472, 485, 490, 270, 467, 491, 0, 336, 0,
	0, 338, 254, 273, 284, 0, 480, 438, 207, 408,
	262, 196, 225, 210, 233, 248, 251, 288, 347, 354,
	383, 387, 267, 245, 223, 405, 220, 423, 444, 445,
	446, 448, 351, 240, 386, 0, 0, 334, 450, 451,
	280, 352, 0, 0, 0, 78, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 0, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 87, 0, 1301, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 86,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 1748, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 0, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1494, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 1746, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 341, 424, 470,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 401, 261, 502, 481, 477, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 420, 421, 426, 427, 428, 429,
	437, 441, 459, 460, 472, 485, 490, 270, 467, 491,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 480,
	438, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	423, 444, 445, 446, 448, 351, 240, 386, 0, 352,
	334, 450, 451, 280, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 0, 329, 0, 0, 434, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 453, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 0, 0, 0, 324, 949, 293, 188, 205,
	947, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 0, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 0, 0, 379,
	412, 219, 473, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 341, 424, 470, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 401, 261,
	502, 481, 477, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 270, 467, 491, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 0, 352, 334, 450, 451, 280,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 1748, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 0, 329,
	0, 0, 434, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 435, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 453, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 0, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 0, 0, 379, 412, 219, 473, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 341,
	424, 470, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 352, 334, 450, 451, 280, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 0, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 1301, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 487,
	0, 0, 0, 2730, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2074, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 0, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 2058, 0, 0, 0, 2059, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 341, 424, 470,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 401, 261, 502, 481, 477, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 420, 421, 426, 427, 428, 429,
	437, 441, 459, 460, 472, 485, 490, 270, 467, 491,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 480,
	438, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	423, 444, 445, 446, 448, 351, 240, 386, 0, 352,
	334, 450, 451, 280, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 1345, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 0, 329, 0, 0, 434, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 453, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 0, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 0, 0, 379,
	412, 219, 473, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 341, 424, 470, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 401, 261,
	502, 481, 477, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 270, 467, 491, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 0, 352, 334, 450, 451, 280,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 0, 329,
	0, 0, 434, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 435, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 453, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 487, 0, 0, 0, 2804, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 0, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 0, 0, 379, 412, 219, 473, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 341,
	424, 470, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 352, 334, 450, 451, 280, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 0, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 487,
	0, 0, 0, 2730, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1494, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 0, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 341, 424, 470,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 401, 261, 502, 481, 477, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 420, 421, 426, 427, 428, 429,
	437, 441, 459, 460, 472, 485, 490, 270, 467, 491,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 480,
	438, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	423, 444, 445, 446, 448, 351, 240, 386, 0, 352,
	334, 450, 451, 280, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 0, 329, 0, 0, 434, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 453, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 0, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 0, 0, 379,
	412, 219, 473, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 341, 424, 470, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 401, 261,
	502, 481, 477, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 270, 467, 491, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 0, 352, 334, 450, 451, 280,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 0, 329,
	0, 0, 434, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 435, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 453, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 0, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 0, 0, 379, 412, 219, 473, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 341,
	424, 470, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 352, 334, 450, 451, 280, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 0, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 1588,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 1466, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 1464, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 0, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 341, 424, 470,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 401, 261, 502, 481, 477, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 420, 421, 426, 427, 428, 429,
	437, 441, 459, 460, 472, 485, 490, 270, 467, 491,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 480,
	438, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	423, 444, 445, 446, 448, 351, 240, 386, 0, 352,
	334, 450, 451, 280, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 1462, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 0, 329, 0, 0, 434, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 453, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 0, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 0, 0, 379,
	412, 219, 473, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 341, 424, 470, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 401, 261,
	502, 481, 477, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 270, 467, 491, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 0, 352, 334, 450, 451, 280,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 1460, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 0, 329,
	0, 0, 434, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 435, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 453, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 0, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 0, 0, 379, 412, 219, 473, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 341,
	424, 470, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 352, 334, 450, 451, 280, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	1458, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 0, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 1454, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 1452, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 0, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 341, 424, 470,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 401, 261, 502, 481, 477, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 420, 421, 426, 427, 428, 429,
	437, 441, 459, 460, 472, 485, 490, 270, 467, 491,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 480,
	438, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	423, 444, 445, 446, 448, 351, 240, 386, 0, 352,
	334, 450, 451, 280, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 1450, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 0, 329, 0, 0, 434, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 453, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 0, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 0, 0, 379,
	412, 219, 473, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 341, 424, 470, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 401, 261,
	502, 481, 477, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 270, 467, 491, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 0, 352, 334, 450, 451, 280,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 0, 329,
	0, 0, 434, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 435, 259, 0, 1427, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 453, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 0, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 0, 0, 379, 412, 219, 473, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 341,
	424, 470, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 352, 334, 450, 451, 280, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 1329, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 0, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 363,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1131, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 0, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 341, 424, 470,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 401, 261, 502, 481, 477, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 756, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 420, 421, 426, 427, 428, 429,
	437, 441, 459, 460, 472, 485, 490, 270, 467, 491,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 480,
	438, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	423, 444, 445, 446, 448, 351, 240, 386, 0, 352,
	334, 450, 451, 280, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 0, 329, 0, 0, 434, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 453, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 0, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 0, 0, 379,
	412, 219, 473, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 341, 424, 470, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 401, 261,
	502, 481, 477, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 579, 467, 491, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 0, 352, 334, 450, 451, 280,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 325, 241, 0, 0,
	384, 0, 193, 0, 425, 228, 335, 332, 456, 255,
	247, 243, 227, 281, 342, 382, 443, 376, 0, 329,
	0, 0, 434, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 367, 435, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 310, 319, 318, 299, 300,
	302, 304, 309, 316, 322, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 453, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 356, 231, 0,
	0, 527, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 293, 188, 205, 0, 0, 366, 407,
	413, 0, 0, 0, 229, 0, 411, 380, 471, 213,
	257, 404, 385, 409, 392, 260, 0, 0, 410, 330,
	458, 399, 468, 488, 489, 237, 360, 478, 447, 484,
	501, 206, 234, 374, 440, 474, 431, 353, 454, 455,
	292, 430, 266, 191, 328, 494, 204, 419, 221, 211,
	197, 442, 466, 218, 422, 0, 0, 503, 199, 464,
	439, 349, 289, 290, 198, 0, 403, 242, 264, 232,
	369, 461, 462, 230, 504, 208, 483, 201, 0, 482,
	362, 457, 465, 350, 340, 200, 463, 348, 339, 295,
	314, 315, 253, 275, 397, 333, 398, 276, 358, 357,
	359, 194, 475, 0, 195, 0, 436, 476, 505, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	326, 373, 396, 394, 400, 0, 452, 469, 479, 486,
	492, 493, 495, 496, 497, 498, 499, 500, 361, 278,
	432, 294, 331, 0, 0, 379, 412, 219, 473, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 341,
	424, 470, 296, 308, 311, 301, 320, 0, 321, 297,
	298, 303, 305, 306, 307, 312, 313, 317, 323, 0,
	187, 202, 327, 0, 401, 261, 502, 481, 477, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 337, 343,
	344, 345, 346, 363, 364, 365, 368, 371, 372, 375,
	377, 378, 381, 388, 389, 390, 391, 393, 395, 402,
	406, 414, 415, 416, 417, 418, 420, 421, 426, 427,
	428, 429, 437, 441, 459, 460, 472, 485, 490, 270,
	467, 491, 0, 336, 0, 0, 338, 254, 273, 284,
	0, 480, 438, 207, 408, 262, 196, 225, 210, 233,
	248, 251, 288, 347, 354, 383, 387, 267, 245, 223,
	405, 220, 423, 444, 445, 446, 448, 351, 240, 386,
	0, 352, 334, 450, 451, 280, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 325, 241, 0, 0, 384, 0, 193, 0,
	425, 228, 335, 332, 456, 255, 247, 243, 227, 281,
	342, 382, 443, 376, 0, 329, 0, 0, 434, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 367, 435,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 310, 319, 318, 299, 300, 302, 304, 309, 316,
	322, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	453, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 356, 231, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 293,
	188, 205, 0, 0, 366, 407, 413, 0, 0, 0,
	229, 0, 411, 380, 471, 213, 257, 404, 385, 409,
	392, 260, 0, 0, 410, 330, 458, 399, 468, 488,
	489, 237, 360, 478, 447, 484, 501, 206, 234, 374,
	440, 474, 431, 353, 454, 455, 292, 430, 266, 191,
	328, 494, 204, 419, 221, 211, 197, 442, 466, 218,
	422, 0, 0, 503, 199, 464, 439, 349, 289, 290,
	198, 0, 403, 242, 264, 232, 369, 461, 462, 230,
	504, 208, 483, 201, 0, 482, 362, 457, 465, 350,
	340, 200, 463, 348, 339, 295, 314, 315, 253, 275,
	397, 333, 398, 276, 358, 357, 359, 194, 475, 0,
	195, 0, 436, 476, 505, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 326, 373, 396, 394,
	400, 0, 452, 469, 479, 486, 492, 493, 495, 496,
	497, 498, 499, 500, 361, 278, 432, 294, 331, 0,
	0, 379, 412, 219, 473, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 341, 424, 470, 296, 308,
	311, 301, 320, 0, 321, 297, 298, 303, 305, 306,
	307, 312, 313, 317, 323, 0, 187, 202, 327, 0,
	401, 261, 502, 481, 477, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 337, 343, 344, 345, 346, 2809,
	364, 365, 368, 371, 372, 375, 377, 378, 381, 388,
	389, 390, 391, 393, 395, 402, 406, 414, 415, 416,
	417, 418, 420, 421, 426, 427, 428, 429, 437, 441,
	459, 460, 472, 485, 490, 270, 467, 491, 0, 336,
	0, 0, 338, 254, 273, 284, 0, 480, 438, 207,
	408, 262, 196, 225, 210, 233, 248, 251, 288, 347,
	354, 383, 387, 267, 245, 223, 405, 220, 423, 444,
	445, 446, 448, 351, 240, 386, 0, 352, 334, 450,
	451, 280, 449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 325, 241,
	0, 0, 384, 0, 193, 0, 425, 228, 335, 332,
	456, 255, 247, 243, 227, 281, 342, 382, 443, 376,
	0, 329, 0, 0, 434, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 367, 435, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 310, 319, 318,
	299, 300, 302, 304, 309, 316, 322, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 453, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 356,
	231, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 293, 188, 205, 0, 0,
	366, 407, 413, 0, 0, 0, 229, 0, 411, 380,
	471, 213, 257, 404, 385, 409, 392, 260, 0, 0,
	410, 330, 458, 399, 468, 488, 489, 237, 360, 478,
	447, 484, 501, 206, 234, 374, 440, 474, 431, 353,
	454, 455, 292, 430, 266, 191, 328, 494, 204, 419,
	221, 211, 197, 442, 466, 218, 422, 0, 0, 503,
	199, 464, 439, 349, 289, 290, 198, 0, 403, 242,
	264, 232, 369, 461, 462, 230, 504, 208, 483, 201,
	0, 482, 362, 457, 465, 350, 340, 200, 463, 348,
	339, 295, 314, 315, 253, 275, 397, 333, 398, 276,
	358, 357, 359, 194, 475, 0, 195, 0, 436, 476,
	505, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 326, 373, 396, 394, 400, 0, 452, 469,
	479, 486, 492, 493, 495, 496, 497, 498, 499, 500,
	361, 278, 432, 294, 331, 0, 0, 379, 412, 219,
	473, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 341, 424, 470, 296, 308, 311, 301, 320, 0,
	321, 297, 298, 303, 305, 306, 307, 312, 313, 317,
	323, 0, 187, 202, 327, 0, 401, 261, 502, 481,
	477, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	337, 343, 344, 345, 346, 363, 364, 365, 368, 371,
	372, 375, 377, 378, 381, 388, 389, 390, 391, 393,
	395, 402, 406, 414, 415, 416, 417, 418, 420, 421,
	426, 427, 428, 429, 437, 441, 459, 460, 472, 485,
	490, 270, 467, 491, 0, 336, 0, 0, 338, 254,
	273, 284, 0, 480, 438, 207, 408, 262, 196, 225,
	210, 233, 248, 251, 288, 347, 354, 383, 387, 267,
	245, 223, 405, 220, 423, 444, 445, 446, 448, 351,
	240, 386, 0, 352, 334, 450, 451, 280, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 325, 241, 0, 0, 384, 0,
	193, 0, 425, 228, 335, 332, 456, 255, 247, 243,
	227, 281, 342, 382, 443, 376, 0, 329, 0, 0,
	434, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	367, 435, 259, 0, 0, 0, 0, 184, 2495, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 310, 319, 318, 299, 300, 302, 304,
	309, 316, 322, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 453, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 356, 231, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 293, 188, 205, 0, 0, 366, 407, 413, 0,
	0, 0, 229, 0, 411, 380, 471, 213, 257, 404,
	385, 409, 392, 260, 0, 0, 410, 330, 458, 399,
	468, 488, 489, 237, 360, 478, 447, 484, 501, 206,
	234, 374, 440, 474, 431, 353, 454, 455, 292, 430,
	266, 191, 328, 494, 204, 419, 221, 211, 197, 442,
	466, 218, 422, 0, 0, 503, 199, 464, 439, 349,
	289, 290, 198, 0, 403, 242, 264, 232, 369, 461,
	462, 230, 504, 208, 483, 201, 0, 482, 362, 457,
	465, 350, 340, 200, 463, 348, 339, 295, 314, 315,
	253, 275, 397, 333, 398, 276, 358, 357, 359, 194,
	475, 0, 195, 0, 436, 476, 505, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 326, 373,
	396, 394, 400, 0, 452, 469, 479, 486, 492, 493,
	495, 496, 497, 498, 499, 500, 361, 278, 432, 294,
	331, 0, 0, 379, 412, 219, 473, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 506, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 524, 341, 424, 470,
	296, 308, 311, 301, 320, 0, 321, 297, 298, 303,
	305, 306, 307, 312, 313, 317, 323, 0, 187, 202,
	327, 0, 401, 261, 502, 481, 477, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 337, 343, 344, 345,
	346, 363, 364, 365, 368, 371, 372, 375, 377, 378,
	381, 388, 389, 390, 391, 393, 395, 402, 406, 414,
	415, 416, 417, 418, 420, 421, 426, 427, 428, 429,
	437, 441, 459, 460, 472, 485, 490, 270, 467, 491,
	0, 336, 0, 0, 338, 254, 273, 284, 0, 480,
	438, 207, 408, 262, 196, 225, 210, 233, 248, 251,
	288, 347, 354, 383, 387, 267, 245, 223, 405, 220,
	423, 444, 445, 446, 448, 351, 240, 386, 0, 352,
	334, 450, 451, 280, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	325, 241, 0, 0, 384, 0, 193, 0, 425, 228,
	335, 332, 456, 255, 247, 243, 227, 281, 342, 382,
	443, 376, 0, 329, 0, 0, 434, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 367, 435, 259, 0,
	0, 0, 0, 184, 2054, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 310,
	319, 318, 299, 300, 302, 304, 309, 316, 322, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 453, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 356, 231, 0, 0, 0, 0, 487, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 293, 188, 205,
	0, 0, 366, 407, 413, 0, 0, 0, 229, 0,
	411, 380, 471, 213, 257, 404, 385, 409, 392, 260,
	0, 0, 410, 330, 458, 399, 468, 488, 489, 237,
	360, 478, 447, 484, 501, 206, 234, 374, 440, 474,
	431, 353, 454, 455, 292, 430, 266, 191, 328, 494,
	204, 419, 221, 211, 197, 442, 466, 218, 422, 0,
	0, 503, 199, 464, 439, 349, 289, 290, 198, 0,
	403, 242, 264, 232, 369, 461, 462, 230, 504, 208,
	483, 201, 0, 482, 362, 457, 465, 350, 340, 200,
	463, 348, 339, 295, 314, 315, 253, 275, 397, 333,
	398, 276, 358, 357, 359, 194, 475, 0, 195, 0,
	436, 476, 505, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 326, 373, 396, 394, 400, 0,
	452, 469, 479, 486, 492, 493, 495, 496, 497, 498,
	499, 500, 361, 278, 432, 294, 331, 0, 0, 379,
	412, 219, 473, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 341, 424, 470, 296, 308, 311, 301,
	320, 0, 321, 297, 298, 303, 305, 306, 307, 312,
	313, 317, 323, 0, 187, 202, 327, 0, 401, 261,
	502, 481, 477, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 337, 343, 344, 345, 346, 363, 364, 365,
	368, 371, 372, 375, 377, 378, 381, 388, 389, 390,
	391, 393, 395, 402, 406, 414, 415, 416, 417, 418,
	420, 421, 426, 427, 428, 429, 437, 441, 459, 460,
	472, 485, 490, 270, 467, 491, 0, 336, 0, 0,
	338, 254, 273, 284, 0, 480, 438, 207, 408, 262,
	196, 225, 210, 233, 248, 251, 288, 347, 354, 383,
	387, 267, 245, 223, 405, 220, 423, 444, 445, 446,
	448, 351, 240, 386, 0, 0, 334, 450, 451, 280,
}

var yyPact = [...]int{
	5050, -1000, -403, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1873, 1940, -1000, -1000,
	-1000, -1000, 2050, -1000, 637, 1617, -1000, 1872, 3346, -1000,
	39303, 422, -1000, 38131, 414, 107, 39303, -1000, 152, -1000,
	93, 39303, 139, 37545, -1000, -1000, -284, 17025, 1811, 7,
	6, 39303, -1000, -1000, -1000, -1000, 2017, 1540, -1000, 319,
	-1000, -1000, -1000, -1000, -1000, -1000, 36959, -1000, -1000, -1000,
	1881, 1850, 2058, 548, 1818, -1000, 1941, 1540, -1000, 17025,
	1989, 1908, 16439, -1000, 16439, 360, -1000, -1000, 12327, -1000,
	-1000, 22895, 39303, 39303, 301, -1000, 1872, -1000, -1000, 311,
	-1000, 275, 1490, -1000, 1469, -1000, 409, 466, 303, 404,
	400, 298, 293, 292, 291, 289, 287, 286, 283, 312,
	-1000, 587, 587, -149, -161, 2623, 349, 349, 349, 383,
	1836, 1828, -1000, 610, -1000, 587, 587, 294, 587, 587,
	587, 587, 244, 243, 587, 587, 587, 587, 587, 587,
	587, 587, 587, 587, 587, 587, 587, 587, 587, 272,
	1872, 238, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 39303, 133, 39303, -1000, 479,
	39303, 691, 691, 62, 691, 691, 691, 691, 126, 535,
	1, -1000, 117, 234, 102, 223, 710, 136, -1000, -1000,
	231, 710, 1072, 552, 87, -1000, 691, 691, -1000, 9963,
	200, 9963, 9963, -1000, 1853, -1000, -1000, -1000, -1000, 1078,
	-1000, 380, -1000, -1000, -1000, -1000, 39303, 36373, 308, 601,
	-1000, -1000, -1000, 49, -1000, -1000, 1258, 878, 17025, 926,
	-1000, 1680, 527, -1000, -1000, -1000, -1000, -1000, 451, 17611,
	17611, 17611, 17611, -1000, -1000, 1515, 1515, 1515, 1515, 17611,
	1515, 17611, 1515, 1515, 1515, 1515, 17025, 1515, 1515, 1515,
	-1000, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515,
	1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515,
	1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515,
	1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515,
	1515, 471, 1515, 1515, 1515, 1515, 1515, -1000, -1000, -1000,
	-1000, 1515, 1515, 1515, 1515, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 20546, -1000, 14681, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 39303, -1000, 1515, 164,
	39303, 39303, 309, 1941, 1540, -1000, 2017, 1948, 319, -1000,
	2243, 1311, 1165, 1110, 1540, 1447, 39303, -1000, 1545, -1000,
	-1000, -1000, 1718, 1023, 1067, -1000, -1000, -1000, -1000, 1482,
	17025, -1000, -1000, 2031, -1000, 19960, 465, 745, 2027, 35787,
	-1000, 360, 360, 1459, 11736, -31, -1000, -1000, -1000, 599,
	25825, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1853, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1537, 39303, -1000, -1000, 4865, 1021, -1000, 1616,
	-1000, 1527, -1000, 1572, 1566, 412, 1021, 402, 401, 398,
	-1000, -82, -1000, -1000, -1000, -1000, -1000, 587, 587, -1000,
	310, 1988, 3346, 3611, -1000, -1000, -1000, 35201, 1613, 1021,
	-1000, 1612, -1000, 676, 460, 487, 487, 1021, -1000, -1000,
	39303, 1021, 656, 651, 39303, 39303, -1000, 34615, -1000, 34029,
	33443, 970, 39303, 32857, 32271, 31685, 31099, 30513, -1000, 1705,
	-1000, 1628, -1000, -1000, -1000, 39303, 39303, 39303, 307, -1000,
	-1000, 39303, 1021, -1000, -1000, 964, 961, 587, 587, 958,
	1066, 1064, 1061, 587, 587, 954, 1059, 27583, 214, 950,
	948, 923, 962, 1056, 182, 956, 927, 916, 39303, 1605,
	39303, -1000, 217, 632, 348, 597, 1872, 1810, 1457, 378,
	411, 1021, 352, 352, 39303, -1000, 10554, -1000, -1000, 1050,
	17025, -1000, 711, 710, 710, -1000, -1000, -1000, -1000, -1000,
	-1000, 691, 39303, 711, -1000, -1000, -1000, 710, 691, 39303,
	691, 691, 691, 691, 710, 710, 710, 691, 39303, 39303,
	39303, 39303, 39303, 39303, 39303, 39303, 39303, 9963, 552, 691,
	-315, -1000, 1049, -1000, 1664, -1000, -1000, -1000, -1000, -1000,
	-1000, 9963, 9963, -1000, -1000, -1000, -1000, 137, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -95, 1452, 29927,
	-1000, -322, -324, -326, -330, -1000, -1000, -1000, -332, -336,
	-1000, -1000, -1000, 17025, 17025, 17025, 17025, -186, -1000, 858,
	17611, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 833, 747,
	17611, 17611, 17611, 17611, 17611, 17611, 17611, 17611, 17611, 17611,
	17611, 17611, 17611, 17611, 17611, 631, 5633, 5633, 527, 527,
	527, 527, -1000, 16439, 17025, 17025, 527, -1000, 1021, 29341,
	16439, 16439, 17025, 1846, 609, 878, 39303, -1000, 1110, -1000,
	-1000, -1000, 791, -1000, 39303, 39303, 407, 17025, 17025, 17025,
	17025, 17025, 17025, 13504, 17025, 17025, 17025, 17025, 17025, 17025,
	17025, 17025, 17025, 17025, 17025, 17025, 17025, 17025, 17025, 17025,
	17025, 17025, 17025, 17025, 17025, 17025, 17025, 17025, 17025, 17025,
	12918, 10554, 16439, 16439, 16439, 16439, 16439, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 464, 1194,
	1225, 1331, -1000, 1450, -1000, -156, 22309, 17025, 1045, 2026,
	1643, 39303, -1000, -1000, -1000, 1941, -1000, 1941, 1194, 2179,
	1728, 16439, -1000, -1000, 2179, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1309, -1000, 39303, 1447, 1903, 39303, 1716,
	1039, 264, -1000, 17025, 17025, 1443, -1000, 1352, 39303, -1000,
	-186, -1000, 28755, -1000, -1000, 9372, -1000, 39303, 277, 39303,
	-1000, 21723, 28169, 11145, -31, -1000, 11145, 1402, -1000, -17,
	-40, 14090, 524, -1000, -1000, -1000, 2623, 18783, 1174, 524,
	74, -1000, -1000, -1000, 1572, -1000, 1572, 1572, 1572, 1572,
	264, 264, 264, 264, -1000, -1000, -1000, -1000, -1000, 1604,
	1601, -1000, 1572, 1572, 1572, 1572, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1599, 1599, 1599, 1576, 1576, 344, -1000,
	17025, 254, 39303, 1880, 915, 217, 354, 1641, 1021, 1021,
	1021, 354, -1000, 1073, 996, -1000, -391, 1439, -1000, -1000,
	1987, -1000, -1000, 638, 714, 712, 617, 39303, 169, 263,
	-1000, 335, -1000, 39303, 1021, 645, 487, 1021, -1000, 1021,
	-1000, -1000, -1000, -1000, -1000, 1021, 1431, -1000, 1297, 778,
	692, 728, 689, 1431, -1000, -1000, -127, 1431, -1000, 1431,
	-1000, 1431, -1000, 1431, -1000, 1431, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 629, 39303, 169, 631, -1000, 369,
	-1000, -1000, 631, 631, -1000, -1000, -1000, -1000, 1035, 1033,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -380, 39303, -1000,
	202, 588, 249, 295, 237, 39303, 154, 1912, 222, 242,
	39303, 39303, 352, 1674, 39303, 1888, 39303, -1000, -1000, -1000,
	-1000, -1000, 878, 39303, -1000, -1000, 691, 691, -1000, -1000,
	39303, 691, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	691, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 39303, -1000, -1000, -1000,
	-1000, 39303, -1000, -1000, -1000, -1000, -1000, 67, -19, 302,
	-1000, -1000, -1000, -1000, -1000, 1937, -1000, 878, 658, 627,
	-1000, 1515, -1000, -1000, 920, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 833, 17611, 17611, 17611, 1132, 408, 866, 1203,
	761, 749, 749, 786, 786, 531, 531, 531, 531, 531,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1024, -1000,
	1429, -1000, 1587, 1238, 1110, -1000, 1429, 1429, 933, 16439,
	-1000, -1000, 608, -1000, 17025, 1110, -1000, -1000, 1110, 1110,
	1424, 1422, 2024, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1247, 1404, 1404, 1404, 1404, 1404,
	17025, 1043, -1000, -1000, -1000, 2032, 2006, 1110, 1258, 1110,
	1419, -1000, 1958, 1404, 1945, 1915, 1847, 1428, 1819, 1813,
	1808, 1404, 1404, 1404, 1374, 1729, 1715, 1691, 1687, 1665,
	1651, 1637, 1629, 1597, 1404, 1110, 16439, 16439, 1414, 1515,
	459, -1000, 1429, 1110, 1110, 1429, 1429, 10554, 1110, -1000,
	39303, -1000, -285, -1000, -43, 522, 1515, -1000, 27583, 1110,
	-1000, 5506, -1000, 40475, -1000, -1000, -1000, -1000, -1000, 25239,
	1578, 2179, -1000, -1000, 1515, 1517, -1000, -1000, 264, 24,
	24653, -1000, -1000, 878, 878, 17025, -1000, -1000, -1000, -1000,
	-1000, -1000, 454, 2010, 306, 1515, -1000, 1427, 2163, -1000,
	-1000, -1000, 1902, 19374, -1000, 1515, 1515, 39303, 1561, 1367,
	-1000, 448, -1000, 1402, -31, -20, -1000, -1000, -1000, -1000,
	878, -1000, 971, 281, 2323, -1000, 339, -1000, -1000, -1000,
	-1000, 1821, 28, -1000, -1000, -1000, 264, 264, -1000, -1000,
	-1000, -1000, -1000, -1000, 1006, 1006, -1000, -1000, -1000, -1000,
	-1000, 905, -1000, -1000, -1000, 900, -1000, -1000, 1491, 1672,
	254, -1000, -1000, 587, 1005, 1820, 39303, -1000, -1000, 1170,
	202, 39303, 624, 1671, -1000, 1641, 1641, 1641, 39303, -1000,
	-1000, -1000, -1000, -382, 57, 305, -1000, -1000, -1000, 325,
	39303, 1487, -1000, 167, -1000, 1153, 1740, 39303, -1000, 1485,
	1595, 1021, 1021, -1000, -1000, -1000, 39303, 1515, -1000, -1000,
	-1000, -1000, 406, 1856, 1851, 169, 167, 524, 1021, -1000,
	-1000, -1000, -1000, -1000, -383, 1441, 386, 173, 259, 39303,
	39303, 39303, 39303, 39303, 453, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 240, 367, -1000, 39303, 39303, 496, -1000,
	-1000, -1000, 710, -1000, -1000, 710, -1000, -1000, -1000, -1000,
	-1000, 1845, 39303, -21, -353, -1000, -345, 17025, -1000, -1000,
	-1000, -1000, 803, 403, 866, 17611, 17611, 16439, -119, 949,
	949, 631, -1000, -1000, -1000, 17025, 17025, 1337, 603, -1000,
	17025, 796, -1000, -1000, -1000, 17025, 17025, 17025, 1110, 230,
	-1000, -1000, -1000, -1000, -1000, 2020, -1000, 17025, 17025, 17025,
	-1000, -1000, 17025, 17025, -1000, 17025, 17025, 18197, 1110, 18197,
	17025, 17025, 18197, -1000, -1000, -1000, -1000, 18197, 17025, 17025,
	17025, 17025, 17025, 17025, 17025, 17025, 17025, -1000, -1000, 1429,
	1429, 16439, 10554, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 522, -1000, 487, 487, 487, 39303, -1000,
	-1000, -1000, -1000, -1000, -1000, 1396, 1920, -1000, 1735, 1734,
	2018, 2010, -1000, 21723, 2179, -1000, -1000, 39303, -277, -1000,
	1803, 1748, -1000, -1000, -1000, -1000, 8781, 1941, 17025, 1669,
	39303, 1515, -1000, 21137, 39303, 39303, 21723, 21723, 21723, 21723,
	21723, -1000, 1696, 1693, -1000, 1710, 1699, 1742, 39303, -1000,
	1387, 1110, 1948, 19374, 319, 17025, 23481, 1416, 21723, -1000,
	-1000, 21723, 39303, 8190, -1000, -1000, -25, -48, -1000, -1000,
	-1000, -1000, 2623, -1000, -1000, 1391, 1901, 1815, -1000, -1000,
	-1000, -1000, 1370, -1000, 1350, 1376, 1344, 155, -1000, 1541,
	1841, 587, 587, -1000, 897, -1000, 1021, -1000, -1000, 385,
	-1000, 1887, 39303, 1667, 1666, 1663, -1000, -390, 892, 1591,
	1535, 17025, 1590, 1981, 1266, 39303, -1000, -1000, 39303, -1000,
	-1000, 377, -1000, 254, 39303, -1000, -1000, -1000, 263, 39303,
	-1000, 6303, 167, -1000, -1000, -1000, -1000, -1000, -1000, 39303,
	183, -1000, 1585, 1077, -1000, -1000, 1586, -1000, -1000, -1000,
	-1000, 151, 247, -1000, 39303, 489, 1672, 39303, -1000, -1000,
	-1000, 691, 691, -1000, -1000, 1840, -1000, 1021, 1404, 17611,
	17611, -1000, 527, -1000, 1515, 1110, 1572, 1572, -1000, 1572,
	1576, -1000, 1572, 120, 1572, 119, 1572, -1000, -1000, 1110,
	1110, 1255, 1317, -89, -1000, 878, 17025, 1593, 1550, 1404,
	-1000, 1569, 1568, 17025, 1404, 1404, 1404, -1000, 878, 1428,
	1536, 1221, -1000, -1000, -1000, -1000, 1321, 1404, 1530, 1110,
	1110, 1334, 1334, 1334, 1334, 1334, 1331, 1331, 1331, 1331,
	-1000, -1000, 1110, -1000, -1000, 1914, 1914, 1914, 1302, 39889,
	39303, -1000, -1000, -1000, -1000, 2010, 2001, 1313, -1000, -1000,
	24, 341, -1000, 1759, 1748, -1000, 1967, 1784, 1962, -1000,
	-1000, -1000, 878, -1000, 1874, 1234, -1000, 584, 1236, -1000,
	-1000, 15853, 1326, 1733, 441, 1302, 1288, 2163, 1640, 1662,
	1926, -1000, -1000, -1000, -1000, 1682, -1000, 1661, -1000, -1000,
	1545, -1000, -1000, 1225, 1110, 1497, 277, 21723, 1286, 1286,
	-1000, 424, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 724,
	6250, 2055, -1000, 1004, -1000, 951, -1000, 641, 639, -1000,
	39303, 1567, -1000, 264, 1001, 264, 882, -1000, 861, -1000,
	-1000, -201, -1000, -1000, 1611, 1690, -1000, -1000, 39303, -1000,
	-1000, 39303, 39303, 39303, 1564, 1957, -1000, 17025, 1558, 580,
	1471, 39303, 39303, -1000, -1000, 255, 1515, -1000, 1249, 1230,
	-1000, -150, -1000, 17025, -1000, -1000, -1000, 887, 887, -1000,
	1545, -1000, -1000, -1000, 1150, -1000, -1000, -129, 39303, 39303,
	39303, 39303, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 527, 17611, -1000, -1000, 264, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 17025, -1000, 17025, -1000,
	1941, 1000, 878, 17025, 17025, -1000, 811, 792, 1404, -1000,
	-1000, -1000, 1110, 18197, -1000, 18197, -1000, 17025, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1515, 1764, 1515, 1515, 23481, -1000, -1000, 2001, 1947, 1956,
	1767, 1775, 1775, 1759, -1000, 1955, 1954, -1000, 995, 1951,
	990, 634, -1000, 39303, 17025, 1515, -1000, 313, 39303, 1515,
	39303, -1000, 1994, -1000, -1000, 17025, 1555, -1000, 17025, -1000,
	-1000, -1000, -1000, -1000, -1000, 5633, 2010, 1286, -1000, -1000,
	541, -1000, 17025, -1000, -1000, -1000, 4158, -1000, -1000, -1000,
	-1000, -1000, 1546, 17025, -1000, -1000, -1000, 1145, 1131, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1545, -1000, -1000,
	-1000, -1000, 263, -388, 1412, 39303, 768, -1000, 1227, 1266,
	450, -1000, 17025, 290, -1000, 263, -1000, -162, -166, 1404,
	-1000, -1000, 1893, -1000, -1000, 10554, -1000, -1000, 1525, 1635,
	-1000, 251, -1000, 1404, 1404, 1110, -1000, 1404, 1404, 1126,
	1124, -1000, -1000, 1221, -1000, 1008, 24067, -1000, 1946, 1944,
	26997, 26997, 522, 1947, -1000, 17025, 17025, 1751, 896, -1000,
	-1000, -1000, -1000, 989, 977, -1000, 898, -1000, 2053, -1000,
	878, -1000, 1515, -1000, 416, 1236, -1000, 1941, 878, 39303,
	878, 23, 1994, -1000, 1404, -1000, 1515, 1515, 1515, 1515,
	1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515,
	1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515,
	1515, 1515, 1515, 1515, 1515, 1515, 1515, 1515, 39303, 1383,
	-1000, -1000, 1890, 1199, 55, -1000, 1197, -1000, -1000, -1000,
	-1000, 15267, -1000, -1000, -1000, -1000, -1000, -1000, 319, 1261,
	-1000, 570, 39303, 39303, 1110, 266, -134, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 17025, 1193, -1000, -1000,
	-1000, -1000, -1000, 1193, 1193, -1000, -1000, 878, 1258, -1000,
	867, -1000, -1000, -1000, -1000, -1000, 39303, 1236, 39303, -1000,
	1169, 1110, 1515, 1941, -1000, 1162, -1000, 319, -1000, 1511,
	1535, -1000, 1110, -128, 10554, 7599, 1123, -1000, -1000, 1701,
	-125, -141, 1428, 26411, -1000, -1000, -1000, -1000, -1000, 1177,
	-1000, -1000, 23481, 38717, -1000, 1650, 741, -128, 17025, 1472,
	-1000, -1000, -32, -1000, -1000, -1000, -1000, -1000, 1586, -1000,
	1694, -1000, 1110, -1000, -1000, -1000, 1098, -1000, 2922, -231,
	1638, -1000, 2014, -1000, -1000, -1000, 723, 843, -1000, -1000,
	-1000, -1000, 1342, 39303, 327, -1000, -1000, -129, -132, -1000,
	-1000, 38717, -227, 524, 5633, -1000, -1000, 2034, 558, 558,
	-1000, -1000, -399, 1090, 215, -1000, -135, -1000, -1000, 1885,
	23, -1000, -1000, -1000, 340, 841, -1000, -1000, 763, -399,
	-1000, -144, -236, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 5633, 191, 191, -1000, 1606, -1000, -1000, 5633, -1000,
	1596, -245, -1000, -338, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2436, 2435, 26, 2, 2428, 24, 95, 187, 22,
	185, 92, 2427, 2425, 2423, 2420, 2418, 2415, 2414, 215,
	214, 209, 2413, 2411, 2410, 2408, 2407, 2406, 2405, 2404,
	2401, 2400, 207, 163, 181, 2396, 2395, 2391, 117, 171,
	82, 84, 179, 2390, 2388, 75, 2387, 2386, 2383, 182,
	178, 700, 2381, 176, 110, 34, 2380, 2378, 2377, 2373,
	2369, 2368, 2363, 2362, 2359, 2357, 2356, 2355, 2353, 2352,
	2350, 2349, 234, 2347, 2346, 15, 2344, 78, 2343, 2342,
	2341, 2340, 130, 2339, 2338, 2337, 2334, 2333, 2332, 141,
	2329, 2328, 2326, 2324, 189, 2322, 2321, 149, 99, 107,
	2319, 2316, 96, 184, 2315, 119, 2314, 2313, 2312, 150,
	2311, 4957, 2309, 61, 58, 2304, 46, 81, 55, 47,
	5, 3, 2303, 2301, 60, 77, 2300, 91, 69, 2299,
	105, 97, 2298, 2296, 10, 6, 2295, 7, 2294, 4,
	66, 2293, 2292, 118, 2289, 2288, 2287, 89, 2286, 2285,
	67, 2283, 83, 134, 98, 73, 2280, 21, 49, 2278,
	2277, 2276, 2274, 2273, 35, 2271, 2270, 2269, 145, 33,
	165, 27, 37, 42, 133, 2268, 29, 76, 2265, 140,
	143, 2264, 53, 32, 52, 2263, 50, 124, 155, 39,
	88, 135, 2262, 2261, 43, 71, 2258, 2256, 2255, 2252,
	2251, 2250, 70, 2249, 44, 2248, 193, 2245, 31, 2241,
	41, 36, 2239, 65, 128, 68, 30, 2238, 160, 2234,
	45, 164, 136, 161, 2226, 2225, 2222, 2221, 177, 272,
	2219, 2212, 152, 167, 144, 148, 2211, 274, 2210, 2204,
	93, 1594, 1967, 23, 162, 2201, 2197, 3373, 142, 137,
	16, 2194, 108, 2193, 2189, 2184, 183, 166, 106, 870,
	103, 2183, 13, 2182, 2174, 2173, 2168, 2165, 2164, 90,
	186, 63, 9, 157, 74, 2163, 2162, 2160, 116, 94,
	2159, 159, 156, 123, 168, 2158, 170, 151, 129, 2155,
	85, 2151, 2150, 2149, 2148, 86, 2146, 2145, 2140, 2139,
	158, 146, 120, 79, 2132, 80, 111, 153, 147, 38,
	2130, 28, 2127, 2126, 174, 20, 2124, 11, 48, 59,
	19, 100, 115, 2121, 0, 2106, 14, 169, 277, 154,
	2105, 2102, 8, 2101, 12, 2098, 138, 2097, 2094, 2086,
	18, 40, 17, 1, 2073, 2072, 4196, 3314, 125, 2071,
	191,
}

//line sql.y:6625
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 344, 345, 345, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 324, 324,
	324, 327, 327, 30, 67, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 80, 80, 20, 21, 21, 21, 21,
	348, 348, 145, 145, 143, 143, 144, 144, 213, 213,
	22, 23, 23, 223, 223, 222, 222, 222, 224, 224,
	224, 224, 259, 259, 24, 24, 24, 24, 24, 95,
	95, 326, 326, 325, 317, 317, 316, 316, 315, 323,
	323, 322, 322, 321, 36, 37, 46, 46, 46, 46,
	47, 48, 328, 328, 291, 52, 52, 51, 51, 51,
	51, 53, 53, 50, 50, 49, 49, 293, 293, 280,
	280, 292, 292, 292, 292, 292, 292, 292, 279, 279,
	106, 106, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 339, 339, 193, 193, 193, 193, 193,
	193, 115, 115, 124, 124, 124, 124, 113, 113, 114,
	112, 112, 112, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 123, 123, 119, 119,
	119, 120, 120, 120, 121, 121, 340, 340, 340, 340,
	262, 262, 262, 262, 265, 265, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 264, 264, 264, 264, 264,
	266, 266, 266, 266, 266, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	268, 268, 268, 268, 268, 268, 268, 268, 278, 278,
	269, 269, 273, 273, 274, 274, 274, 275, 275, 275,
	276, 276, 271, 271, 271, 271, 271, 271, 272, 272,
	272, 281, 305, 305, 304, 304, 302, 302, 302, 302,
	290, 290, 299, 299, 299, 299, 299, 289, 289, 285,
	285, 285, 286, 286, 287, 287, 284, 284, 288, 288,
	301, 301, 300, 282, 282, 283, 283, 307, 341, 341,
	341, 341, 342, 342, 308, 333, 334, 332, 332, 332,
	332, 332, 77, 77, 77, 236, 236, 236, 297, 297,
	296, 296, 296, 298, 298, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 231, 231, 231, 331, 331, 331, 331,
	331, 331, 330, 330, 330, 294, 294, 294, 329, 329,
	54, 54, 177, 177, 43, 43, 43, 43, 43, 43,
	42, 42, 42, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 44, 44, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 82, 82, 83,
	83, 83, 83, 84, 84, 84, 310, 310, 55, 55,
	3, 3, 133, 135, 136, 136, 134, 134, 134, 134,
	134, 134, 57, 57, 56, 56, 138, 137, 139, 139,
	139, 1, 1, 2, 2, 4, 4, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 277,
	277, 277, 309, 309, 311, 313, 313, 313, 313, 312,
	91, 91, 26, 35, 35, 27, 27, 27, 27, 28,
	28, 58, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 230, 230, 238, 238, 229, 229, 252, 252,
	252, 232, 232, 232, 233, 233, 338, 338, 338, 226,
	226, 60, 60, 60, 62, 62, 63, 64, 64, 254,
	254, 255, 255, 65, 66, 78, 78, 78, 78, 78,
	78, 81, 81, 81, 13, 13, 13, 13, 74, 74,
	74, 12, 12, 61, 61, 68, 335, 335, 336, 337,
	337, 337, 337, 69, 71, 29, 29, 29, 29, 29,
	29, 101, 101, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 96, 96, 96, 90, 90,
	349, 72, 73, 73, 94, 94, 94, 87, 87, 87,
	93, 93, 93, 14, 14, 15, 212, 212, 16, 16,
	98, 98, 100, 100, 100, 100, 100, 102, 102, 102,
	102, 102, 102, 102, 97, 97, 99, 99, 99, 99,
	245, 245, 245, 244, 244, 127, 127, 129, 128, 128,
	130, 130, 131, 131, 131, 131, 175, 175, 153, 153,
	210, 210, 208, 208, 209, 209, 211, 211, 211, 211,
	214, 214, 132, 132, 132, 132, 140, 140, 141, 141,
	142, 142, 253, 253, 250, 250, 250, 249, 249, 146,
	146, 146, 148, 147, 147, 147, 147, 149, 149, 151,
	151, 150, 150, 152, 157, 157, 156, 156, 154, 154,
	154, 154, 155, 155, 155, 155, 158, 158, 111, 111,
	111, 111, 111, 111, 111, 122, 122, 122, 122, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 79, 79, 79, 227,
	227, 159, 159, 167, 167, 167, 167, 160, 160, 160,
	160, 160, 160, 160, 168, 168, 168, 174, 169, 169,
	165, 165, 165, 165, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 320,
	320, 319, 319, 318, 318, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 350, 350, 270, 270,
	270, 270, 166, 166, 166, 166, 166, 92, 92, 92,
	92, 92, 258, 258, 258, 261, 261, 261, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 180, 180, 88, 88, 178, 178, 179,
	181, 181, 176, 176, 176, 162, 162, 162, 182, 182,
	183, 183, 184, 184, 186, 185, 185, 187, 188, 188,
	188, 189, 189, 190, 190, 190, 45, 45, 45, 45,
	45, 40, 40, 40, 40, 41, 41, 41, 103, 103,
	103, 103, 105, 105, 104, 104, 75, 75, 76, 76,
	76, 109, 109, 110, 110, 110, 107, 107, 108, 108,
	206, 206, 191, 191, 191, 198, 198, 198, 194, 194,
	196, 196, 196, 197, 197, 197, 195, 203, 203, 205,
	205, 204, 204, 200, 200, 201, 201, 202, 202, 202,
	199, 199, 161, 161, 161, 161, 161, 207, 207, 207,
	207, 215, 215, 171, 171, 173, 173, 172, 126, 216,
	216, 220, 217, 217, 221, 221, 221, 221, 221, 218,
	218, 219, 219, 246, 246, 246, 225, 225, 237, 237,
	234, 234, 235, 235, 228, 228, 239, 239, 239, 70,
	170, 170, 306, 306, 303, 242, 242, 243, 243, 247,
	247, 251, 251, 248, 248, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 346,
	347, 256, 257, 257, 257,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 1, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 4, 4, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 2,
	4, 4, 4, 4, 4, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 3, 4, 3, 7,
	0, 3, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 9, 6, 6,
	6, 2, 2, 3, 3, 3, 1, 1, 1, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 5, 5, 6, 4, 4, 8, 6, 8, 6,
	8, 5, 4, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	6, 6, 6, 4, 4, 4, 7, 8, 6, 5,
	6, 8, 11, 6, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 0,
	2, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 2, 2, 0, 3,
	0, 2, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -344, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -58, -59, -60, -62,
	-63, -64, -65, -66, -12, -61, -29, -30, -67, -68,
	-69, -70, -71, -14, -15, -16, -7, -6, -11, 9,
	10, -80, -31, 32, -36, -46, 218, -47, -37, 219,
	-48, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -81, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -8, -32, 8, -346,
	11, 428, 252, 251, 28, -10, 462, 85, -345, 595,
	-206, -191, 22, 33, 29, -190, -186, -94, -191, 20,
	18, 7, -72, -349, -72, -72, 12, 13, -72, -291,
	-293, 85, 155, 85, -72, -52, -51, -50, -49, -53,
	31, -43, -44, -314, -42, -39, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-38, 80, 33, 462, 465, -298, 219, 225, 226, 429,
	122, 121, 75, 221, -295, 353, 565, -53, 567, 101,
	103, 566, 44, 231, 568, 569, 570, 571, 240, 572,
	573, 574, 575, 581, 582, 583, 584, 123, 7, -72,
	-251, -247, -324, -241, 88, 89, 90, 459, 243, 492,
	493, 292, 80, 41, 350, 353, 565, 299, 313, 307,
	334, 326, 460, 494, 295, 244, 280, 562, 324, 131,
	567, 298, 495, 258, 358, 359, 360, 101, 302, 396,
	580, 297, 496, 578, 103, 566, 79, 51, 44, 253,
	322, 227, 318, 568, 281, 497, 470, 274, 122, 119,
	587, 36, 316, 50, 30, 577, 121, 49, 569, 146,
	498, 570, 362, 341, 556, 48, 363, 259, 499, 83,
	264, 464, 564, 364, 317, 365, 291, 576, 224, 500,
	548, 366, 367, 557, 501, 342, 346, 502, 388, 368,
	594, 52, 503, 504, 558, 120, 505, 78, 571, 311,
	312, 506, 289, 242, 390, 338, 441, 448, 449, 107,
	108, 444, 109, 450, 110, 451, 452, 453, 442, 111,
	104, 443, 454, 455, 339, 340, 112, 456, 106, 105,
	445, 447, 113, 457, 240, 35, 369, 461, 293, 58,
	268, 391, 46, 344, 591, 45, 552, 507, 555, 337,
	333, 438, 53, 508, 509, 510, 511, 572, 336, 310,
	332, 586, 4, 286, 573, 62, 226, 348, 347, 349,
	275, 387, 329, 512, 513, 514, 247, 81, 515, 319,
	21, 516, 517, 370, 282, 518, 56, 519, 520, 394,
	256, 521, 54, 574, 39, 261, 588, 575, 522, 523,
	524, 525, 263, 526, 372, 527, 371, 343, 345, 270,
	373, 463, 528, 315, 260, 579, 529, 248, 563, 262,
	267, 255, 395, 249, 530, 531, 532, 533, 534, 296,
	535, 536, 303, 581, 439, 43, 537, 538, 539, 540,
	290, 285, 389, 398, 61, 82, 355, 541, 561, 309,
	283, 542, 300, 55, 582, 583, 584, 277, 585, 9,
	592, 593, 375, 123, 287, 288, 47, 330, 269, 543,
	544, 320, 321, 335, 308, 331, 301, 549, 271, 376,
	440, 257, 545, 397, 284, 351, 356, 467, 276, 377,
	560, 466, 328, 325, 278, 546, 378, 232, 272, 273,
	547, 550, 379, 380, 294, 381, 382, 383, 384, 385,
	386, 279, 465, 306, 323, 357, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 437, 230, -72, 230, -150, -247,
	230, -218, 359, -238, 361, 374, 369, 379, 367, -230,
	370, 372, 270, -338, 388, 230, 376, 218, 362, 371,
	380, 381, 294, 382, 386, 279, 383, 384, 385, -324,
	172, 570, 585, 131, 327, 366, 364, 389, 552, -247,
	301, -254, 306, -242, -324, -241, 304, -150, -78, 548,
	222, -256, -256, -96, 552, 554, -169, -111, 139, -122,
	-125, -116, -117, -163, -164, -165, -166, -123, -176, 161,
	162, 169, 140, -174, -126, 26, 458, 430, 429, 172,
	31, 214, 68, 69, 432, 433, 142, 57, 405, 406,
	-124, 401, 407, 402, 435, 436, 114, 437, 104, 106,
	105, 438, 439, 440, 339, 340, 441, 442, 443, 107,
	108, 109, 110, 111, 112, 113, 444, 447, 445, 446,
	448, 449, 450, 455, 456, 451, 452, 453, 454, 457,
	-242, -247, 235, 400, 229, 167, 428, -118, -114, -6,
	-172, 399, 403, 404, 408, -324, -241, -120, -119, -159,
	91, 97, 102, 98, -343, 115, -346, 92, 93, 94,
	95, 96, 116, 117, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 44, 375, 375, -150, -72,
	-72, -72, -72, -184, -94, -186, -8, -6, -346, 8,
	-72, -6, -7, -11, -32, -34, 488, -33, -247, -191,
	-206, 12, 157, 42, 50, -189, -190, -10, -6, -111,
	19, 23, 24, -99, 163, -111, -247, -73, -99, -228,
	234, -72, -72, -217, -259, 301, -221, 389, 388, -243,
	-219, -242, -240, -218, 387, 223, 23, 468, 138, 25,
	27, 141, 172, 126, 19, 142, 37, 225, 327, 241,
	171, 237, 429, 218, 72, 469, 401, 402, 399, 405,
	431, 432, 400, 361, 31, 13, 471, 28, 251, 24,
	38, 165, 220, 145, 472, 254, 26, 252, 114, 117,
	474, 22, 75, 246, 14, 239, 40, 16, 475, 476,
	17, 235, 234, 157, 231, 70, 11, 214, 29, 154,
	66, 477, 133, 478, 479, 480, 481, 127, 68, 155,
	20, 589, 403, 404, 33, 553, 458, 265, 167, 73,
	59, 554, 139, 482, 483, 115, 484, 118, 76, 559,
	135, 18, 71, 42, 485, 266, 486, 236, 590, 487,
	392, 488, 156, 221, 428, 69, 489, 229, 374, 8,
	434, 32, 250, 238, 125, 67, 490, 230, 144, 435,
	436, 233, 128, 116, 7, 132, 34, 12, 74, 77,
	406, 407, 408, 57, 124, 462, 143, 15, 491, 393,
	137, 131, -292, 155, -279, -283, -242, 245, -308, 241,
	-150, -301, -300, -242, -95, -237, 231, 239, 238, 132,
	-328, 135, 287, 400, 229, -49, -50, -218, 171, -82,
	262, 266, 86, 86, -283, -282, -281, -329, 266, 245,
	-307, -299, 237, 246, -289, 238, 239, -284, 231, 133,
	-329, -284, 236, 246, 266, 266, 123, 266, 123, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 261, -290,
	147, -290, 466, 466, -295, -329, -329, -329, 233, 35,
	35, -239, -284, 233, 25, -290, -290, -218, 171, -290,
	-290, -290, -290, 274, 274, -290, -290, -290, -290, -290,
	-290, -290, -290, -290, -290, -290, -290, -290, -290, -290,
	230, -328, -103, 386, 294, 80, -51, 276, -35, -150,
	-237, 231, 232, -328, 263, -150, 215, -150, -232, 155,
	15, -232, -229, 375, 373, 360, 365, -232, -232, -232,
	-232, 277, 358, -285, 231, 35, 242, 375, 277, 358,
	277, 278, 277, 278, 368, 378, 277, -252, 14, 157,
	400, 363, 367, 270, 230, 271, 232, 377, 278, -252,
	92, -233, 155, 375, 273, -232, -232, -257, -346, -243,
	327, -324, 555, -257, -257, 32, 89, 233, -242, -74,
	-242, 92, -13, -9, -20, -19, -21, 147, -101, 375,
	-89, 172, 570, 556, 557, 558, 555, 372, 563, 561,
	559, 277, 560, 86, 135, 137, 138, 4, -111, 154,
	-160, 147, 148, 149, 150, 151, 152, 153, 157, 139,
	141, 155, 156, 136, 158, 159, 160, 161, 162, 163,
	164, 166, 165, 167, 168, 171, 216, 217, -117, -117,
	-117, -117, -174, -346, -346, -346, -117, -227, -346, -117,
	-346, -346, -346, -346, -180, -111, -346, -350, -346, -350,
	-350, -270, -346, -270, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, 215, -346, -346, -346, -346, -346, -270, -270, -270,
	-270, 102, 97, 91, -176, 98, 92, -242, -247, -6,
	-7, -169, -256, -335, -336, -153, -150, -346, 294, -242,
	-242, 263, -189, -10, -6, -184, -190, -186, -6, -72,
	-87, -100, 63, 64, -102, 24, 38, 67, 65, 23,
	-347, 87, -347, -206, -347, 86, -34, -210, 85, 61,
	43, 92, 92, 86, 21, -185, -187, -111, 14, -245,
	4, -244, 25, -242, 92, 215, 100, 14, -151, 29,
	-150, -228, -228, 86, 301, -221, -259, -223, -222, 390,
	392, 147, -246, -242, 92, 31, 87, 86, -150, -262,
	-265, -267, -266, -268, -263, -264, 324, 325, 172, 328,
	330, 331, 332, 333, 334, 335, 336, 337, 338, 341,
	32, 253, 320, 321, 322, 323, 342, 343, 344, 345,
	346, 347, 348, 349, 307, 326, 460, 308, 309, 310,
	311, 312, 313, 315, 316, 317, 318, 319, -327, -324,
	85, 87, 86, -269, 85, -103, 230, -324, 231, 231,
	231, -72, 428, -290, -290, 261, 19, -42, -39, -314,
	18, -38, -39, 223, 119, 120, 220, 85, -279, 85,
	-288, -327, -324, 85, 133, 236, 132, -287, -284, -287,
	-288, -324, -176, -324, 133, 133, -214, -242, -214, -214,
	23, -214, 23, -214, 23, 94, -242, -214, 23, -214,
	23, -214, 23, -214, 23, -214, 23, 31, 78, 79,
	31, 81, 82, 83, -176, -176, -279, -218, -150, -324,
	94, 94, -290, -290, 94, 92, 92, 92, -290, -290,
	94, 92, -249, -247, 92, -330, 247, 291, 293, 94,
	94, 94, 94, 31, 92, -331, 31, 577, 576, 578,
	579, 580, 94, 31, 94, 31, 94, -242, 85, -150,
	-109, 281, 218, 220, 223, 76, 92, 295, 147, 44,
	86, 233, 230, -324, -234, 235, -234, -242, -248, -247,
	-240, 92, -111, -286, 14, 157, -252, -252, -232, -150,
	-286, -252, -232, -150, -232, -232, -232, -232, -252, -252,
	-252, -232, -247, -247, -150, -150, -150, -150, -150, -150,
	-150, -257, -233, -232, 555, 92, -226, 14, 76, -257,
	-257, -255, 304, 338, 549, 550, 551, 86, 462, -143,
	-150, 555, 555, 555, 555, 555, 555, -111, -111, -111,
	-111, 484, -167, 115, 139, 116, 117, -125, -168, -172,
	-174, 99, 157, 141, 155, 156, -116, -117, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -258, -324, 92, 172, -121, -120, 98, -343, -121,
	-97, -99, -111, -111, -324, -242, -97, -97, -111, -93,
	24, 38, -178, -179, 143, -176, -347, -347, 94, 98,
	-242, -242, -86, -85, 410, 411, 412, 413, 415, 416,
	417, 420, 421, 425, 426, 409, 427, 414, 419, 422,
	423, 424, 418, 323, -111, -111, -111, -111, -111, -111,
	-79, -111, 126, 127, 128, -111, -111, -170, -169, -323,
	-322, -321, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -111, -111, -111, -111, -98, 24, 38, -97, -243,
	-248, -240, -97, -98, -98, -97, -97, 215, -206, -347,
	86, -337, 392, 393, 553, -250, 266, -249, 25, -170,
	92, 14, -212, 77, -242, -189, -189, 63, 64, 59,
	-97, -102, -347, -33, 25, -208, -242, 62, 92, -271,
	-218, 350, 351, -111, -111, 86, -188, 27, 28, -150,
	-244, 163, -248, -150, -213, 266, -150, -128, -130, -131,
	-132, -153, -175, -346, -133, 480, 477, 14, -143, -144,
	-152, -247, -221, -223, 86, 391, 393, 394, 76, 118,
	-111, -272, 171, -297, -296, -295, -279, -281, -282, -283,
	87, -272, -275, 356, 355, -269, -269, -269, -269, -269,
	-271, -271, -271, -271, 85, 85, -269, -269, -269, -269,
	-273, 85, -273, -273, -274, 85, -274, -308, -111, -305,
	-304, -302, -303, 240, 101, 462, 77, -300, -188, 94,
	-109, -235, 235, -306, -303, -324, -324, -324, -235, -324,
	92, -324, 92, -83, -55, -1, 589, 590, 591, 86,
	19, -280, -279, -54, 291, -311, -312, 266, -307, -301,
	-288, 133, -287, -288, -288, -324, 86, 29, 123, 123,
	123, 123, 462, 220, 32, -279, -54, -258, 233, -258,
	-258, 92, 92, -231, 585, -143, -105, 283, 147, 272,
	272, 230, 230, 285, -150, 296, 298, 297, 295, 23,
	284, 286, 288, 274, -150, -150, -234, 76, -145, -150,
	26, -247, -150, -232, -232, -150, -232, -232, -150, -242,
	-89, 392, 86, 462, 22, -90, 22, -346, 115, 116,
	117, -168, -116, -117, -116, 138, 254, 86, -347, 25,
	86, 77, -347, -347, -347, 86, 14, -97, -181, -179,
	145, -111, -347, -347, -347, 86, 86, 14, -261, 25,
	-347, -347, -347, -347, -347, -180, -347, 14, 86, 86,
	-347, -347, 86, 86, -347, 86, 86, 86, -320, 86,
	86, 86, 86, -347, -347, -347, -347, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, -347, -347, -97,
	-97, -346, 215, -347, -347, -347, -347, -347, -243, -336,
	552, 393, -157, -156, -154, 74, 234, 75, -346, -249,
	-347, -121, 89, -209, 89, -208, -162, -242, 94, 98,
	-191, -127, -129, 14, -102, -174, 87, 86, -271, -195,
	-200, -229, -242, 92, 172, -187, 215, -158, 15, -161,
	32, 57, -9, -346, -346, 32, 86, -146, -148, -147,
	-149, 66, 70, 72, 67, 68, 69, 73, -253, 25,
	-128, -7, -6, -346, -346, -346, -150, -143, -348, 14,
	77, -348, 86, 215, -222, -224, 395, 392, 398, -324,
	92, -82, 86, -295, -283, -192, -106, 40, -276, 357,
	-271, -271, -278, 92, -278, 94, 94, 87, -45, -40,
	-41, 33, 80, -302, -290, 92, 39, -242, 87, -105,
	-150, 139, 76, -306, -306, -306, -247, -2, 588, 594,
	133, 85, 360, 18, -208, 86, 87, -177, 292, 87,
	-313, 57, -242, 87, 85, -288, -288, -242, -346, 230,
	31, 31, -54, -177, -272, -324, 587, 586, 87, 232,
	290, -110, 405, -107, 92, 88, -150, -150, -150, -150,
	-150, 223, 220, 275, 233, -143, -150, 86, -77, 249,
	244, -252, -252, 33, -150, 392, 564, 562, -111, 138,
	254, -125, -117, -99, 459, -260, 172, 324, 253, 322,
	318, 338, 329, 355, 320, 356, 317, 316, 315, -260,
	-258, -111, -111, -184, 146, -111, 144, -111, -111, -111,
	-347, 172, 324, 14, -111, -111, -111, -321, -111, -111,
	-111, -319, -318, -121, -176, -347, -319, -111, -111, -318,
	-318, -322, -322, -322, -322, -322, -169, -169, -169, -169,
	-347, -347, -98, -243, -154, -284, -284, -284, -214, 86,
	-225, 22, 14, 57, 57, -127, -158, -128, -102, -242,
	-198, 548, -203, 46, -201, -202, 47, -199, 48, 56,
	163, -189, -111, -215, 76, -216, -220, -176, -171, -173,
	-172, -346, -207, -347, -242, -214, -216, -130, -131, -131,
	-130, -131, 66, 66, 66, 71, 66, 71, 66, -147,
	-247, -347, -347, -7, -7, -111, -250, 77, -128, -128,
	-152, -247, 163, 392, 396, 397, -295, -342, 115, 139,
	31, 76, 353, 101, -340, 171, -341, 236, 132, 133,
	248, 25, 41, 87, 86, 87, 86, 87, 86, -236,
	498, 139, -41, -40, -290, -290, 94, -324, 232, 26,
	-150, 76, 76, 76, -84, 592, 94, 85, -3, 80,
	-111, 85, 19, -279, -176, 268, 157, -305, -208, -309,
	-311, -150, -113, -346, -112, -114, -118, 161, 162, -177,
	-150, -104, 281, 289, 85, -108, 89, -326, 77, 272,
	353, 272, -150, -77, -45, -150, -232, -232, 33, -324,
	-347, -125, -117, -346, -347, -269, -269, -269, -274, -269,
	312, -269, 312, -269, -347, -347, 86, -347, 22, -347,
	-88, 434, -111, 86, 86, -347, 85, 85, -111, -347,
	-347, -347, -320, 86, -347, 86, -347, 86, -347, -347,
	-347, -347, -347, -347, -347, -347, -347, -347, -347, -347,
	-155, 22, -155, -155, -347, 89, -150, -158, -182, 16,
	-195, 51, 330, -205, -204, 55, 47, -202, 19, 49,
	19, 30, -215, 86, 147, 86, -347, -347, 86, 57,
	215, -347, -158, -141, -140, 76, 77, -142, 76, -140,
	66, 66, -210, -347, -347, 86, -213, -128, -158, -158,
	215, 115, -346, -115, -124, -113, 12, 92, 92, -324,
	133, 133, -150, 85, -271, 92, -271, 94, 94, 498,
	31, 81, 82, 83, 31, 78, 79, -150, -150, -150,
	-150, -310, 85, 19, -111, 85, 147, 87, -208, -208,
	269, -172, -346, 87, -347, 86, -277, 462, 465, -111,
	-119, -119, -210, 87, -317, 462, -325, -242, -242, -242,
	-242, -116, -271, -111, -111, -189, 92, -111, -111, 94,
	94, -347, -347, -319, -318, -111, -346, 66, 18, 16,
	-346, -346, -250, -182, -183, 17, 19, -196, 53, -194,
	52, -194, -204, 19, 19, 92, 19, 92, 133, -220,
	-111, -173, 57, -9, -242, -171, -242, -184, -111, 85,
	-111, -121, -158, -158, -111, -164, 437, 104, 106, 105,
	438, 439, 440, 339, 340, 441, 442, 443, 107, 108,
	109, 110, 111, 112, 113, 444, 447, 445, 448, 449,
	450, 455, 456, 451, 452, 453, 454, 457, 85, -111,
	87, 87, -210, -309, -55, 87, -208, 94, 87, -172,
	-91, -346, 265, -341, -311, 466, 466, -347, 25, -316,
	-315, -243, 85, 77, -92, 157, 462, -347, -347, -347,
	-347, -347, 87, 87, -347, -347, 86, -211, -347, -242,
	236, 19, 19, -211, -211, -157, -183, -111, -169, -197,
	54, 76, 118, 92, 92, 92, 12, -171, 215, -189,
	-208, -135, 360, -184, -347, -208, 87, 25, 87, 594,
	133, 87, 265, -9, 86, 147, -208, -150, -347, 460,
	73, 463, -111, 86, -347, -347, -347, 76, 118, -216,
	-242, 87, -347, -346, -189, 87, -193, -9, 85, -3,
	-347, -75, 462, -315, -294, -243, 92, 94, 87, 62,
	461, 464, -320, -242, 236, -250, -136, -134, -242, 512,
	-333, -334, 76, -342, -339, 115, 139, 101, -340, 124,
	125, -75, -111, 85, -76, 280, 552, -326, 62, -347,
	-347, 86, 22, -262, -57, 522, -334, 76, 13, 12,
	115, 92, 87, -208, 241, -317, 462, -134, 519, -272,
	-121, -332, 249, 244, 247, 32, -332, -4, 593, 87,
	282, 463, -56, 26, -135, 243, 31, 115, 94, -4,
	464, 522, -121, -138, -137, -139, 556, 115, 31, -137,
	-139, 76, -121, 76, 472, 556,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 740,
	740, 740, 0, 740, 0, 0, 740, -2, -2, 740,
	1221, 0, 740, 0, 0, -2, 672, 674, 0, 676,
	-2, 0, 0, 685, 1711, 1711, 735, 0, 0, 0,
	0, 0, 740, 740, 740, 740, 1082, 48, 740, 0,
	83, 84, 691, 692, 693, 63, 0, 1709, 1, 3,
	69, 73, 0, 0, 0, 56, 1091, 0, 76, 0,
	0, 744, 0, 742, 0, 1204, 740, 740, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 517, 457, 500, 455, 486, -2, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 350, 350, 0, 0, -2, 448, 448, 448, 0,
	0, 0, 483, 1206, 403, 350, 350, 0, 350, 350,
	350, 350, 0, 0, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 1108,
	151, 1222, 1219, 1220, 38, 39, 40, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 0, 1198, 0, 600, 841,
	0, 661, 661, 0, 661, 661, 661, 661, 0, 0,
	0, 612, 0, 0, 0, 0, 658, 0, 628, 629,
	0, 658, 0, 664, 0, 639, 661, 661, 642, 1712,
	0, 1712, 1712, 1189, 0, 655, 653, 667, 668, 671,
	675, 0, 680, 683, 1215, 1216, 0, 698, 47, 1454,
	690, 703, 704, 0, 736, 737, 43, 938, 0, 863,
	868, 879, 892, 893, 894, 895, 896, 898, 899, 0,
	0, 0, 0, 904, 905, 0, 0, 0, 0, 0,
	919, 0, 0, 0, 0, 0, 1063, 0, 1026, 1026,
	955, 1026, 1028, 1028, 0, 0, 0, 1708, 1494, 1502,
	1503, 1525, 1608, 1654, 1498, 1499, 1480, 1492, 1495, 1483,
	1484, 1486, 1488, 1493, 1500, 1506, 1485, 1505, 1504, 0,
	1481, 1482, 1487, 1497, 1501, 1489, 1490, 1491, 1496, 1507,
	1072, 0, 0, 0, 0, 0, 0, 256, 257, 937,
	1178, 1028, 1028, 1028, 1028, -2, -2, 203, 204, 205,
	206, 207, 208, 209, 0, 199, 0, 261, 262, 258,
	259, 260, 921, 922, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 1711, 0, 713, 0, 0,
	0, 0, 0, 1091, 0, 1083, 1082, 61, 0, 740,
	-2, 0, 0, 0, 0, 45, 0, 50, 800, 75,
	74, 1130, 0, 0, 0, 57, 1092, 65, 67, 1093,
	0, 745, 746, 0, 776, 780, 0, 741, 0, 0,
	1205, 1204, 1204, 100, 0, 1650, 1182, -2, -2, 0,
	0, 1217, 1218, 1191, -2, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, -2, 0, 0, 161, 162, 0, 41, 376, 0,
	157, 0, 370, 320, 1108, 0, 0, 0, 0, 0,
	740, 0, 1199, 142, 143, 149, 150, 350, 350, 497,
	0, 0, 151, 151, 464, 465, 466, 0, 0, -2,
	374, 0, 449, 0, 0, 364, 364, 368, 366, 367,
	0, 0, 0, 0, 0, 0, 477, 0, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 0,
	351, 0, 495, 496, 404, 0, 0, 0, 0, 475,
	476, 0, 0, 1207, 1208, 0, 0, 350, 350, 0,
	0, 0, 0, 350, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 1121, 0, 0, 0, -2, 0, 592, 0,
	0, 0, 1200, 1200, 0, 599, 0, 601, 602, 0,
	0, 603, 0, 658, 658, 656, 657, 605, 606, 607,
	608, 661, 0, 0, 359, 360, 361, 658, 661, 0,
	661, 661, 661, 661, 658, 658, 658, 661, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1712, 664, 661,
	0, 635, 0, 636, 637, 640, 641, 643, 1713, 1714,
	1238, 1712, 1712, 647, 651, 1190, 673, 681, 684, 701,
	699, 700, 702, 694, 695, 696, 697, 0, 715, 716,
	721, 0, 0, 0, 0, 727, 728, 729, 0, 0,
	732, 733, 734, 0, 0, 0, 0, 0, 861, 0,
	0, 927, 928, 929, 930, 931, 932, 933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 900, 901,
	902, 903, 906, 0, 0, 0, 911, 912, 0, 0,
	0, 0, 0, 750, 0, 1064, 0, 953, 0, 954,
	956, 957, 0, 958, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1210, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	760, 0, 0, 760, 760, 0, 0, 193, 194, 195,
	196, 210, 211, 212, 213, 214, 263, 1072, 0, 937,
	0, 0, 44, 705, 706, 0, 824, 1210, 0, 0,
	756, 0, 55, 64, 66, 1091, 59, 1091, 0, 762,
	0, 0, -2, -2, 763, 769, 770, 771, 772, 773,
	52, 1710, 53, 0, 72, 0, 46, 0, 0, 0,
	0, 332, 1133, 0, 0, 1084, 1085, 1088, 0, 777,
	1536, 781, 0, 783, 784, 0, 743, 0, 98, 0,
	840, 0, 0, 0, 1650, 1188, 0, 102, 103, 0,
	0, 0, 338, 1193, 1194, 1195, -2, 357, 0, 338,
	327, 271, 272, 273, 320, 275, 320, 320, 320, 320,
	332, 332, 332, 332, 303, 304, 305, 306, 307, 0,
	0, 290, 320, 320, 320, 320, 310, 311, 312, 313,
	314, 315, 316, 317, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 322, 322, 322, 324, 324, 0, 42,
	0, 342, 0, 1088, 0, 1121, 1202, 1212, 0, 0,
	0, 1202, 120, 0, 0, 498, 528, 458, 487, 499,
	0, 461, 462, -2, 0, 0, 448, 0, 450, 0,
	358, 0, -2, 0, 368, 0, 364, 368, 365, 368,
	356, 369, 479, 480, 481, 0, 558, 810, 0, 0,
	0, 0, 0, 564, 565, 566, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 488, 489, 490,
	491, 492, 493, 494, 0, 0, 450, 0, 484, 0,
	405, 406, 0, 0, 409, 410, 411, 412, 0, 0,
	415, 416, 417, 827, 828, 418, 442, 443, 444, 419,
	420, 421, 422, 423, 424, 425, 436, 437, 438, 439,
	440, 441, 426, 427, 428, 429, 430, 433, 0, 135,
	1112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1200, 0, 0, 0, 0, 759, 842, 1223,
	1224, 662, 663, 0, 362, 363, 661, 661, 609, 648,
	0, 661, 613, 649, 614, 616, 615, 617, 630, 631,
	661, 620, 659, 660, 621, 622, 623, 624, 625, 626,
	627, 644, 632, 633, 634, 665, 0, 669, 670, 645,
	646, 0, 682, 686, 687, 688, 689, 0, 0, 718,
	94, 723, 724, 725, 726, 738, 731, 939, 858, 859,
	860, 0, 862, 865, 0, 923, 925, 867, 869, 934,
	935, 936, 0, 0, 0, 0, 0, 873, 877, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 897, 1042, 1043, 1044, 914, 264, 265, 0, 915,
	0, 774, 0, 0, 0, 913, 0, 0, 0, 0,
	751, 752, 1070, 1067, 0, 0, 1027, 1029, 0, 0,
	0, 0, 0, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1045, 0, 0, 0, 0, 0,
	1063, 0, 916, 917, 918, 0, 0, 0, 1211, 0,
	130, 131, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 1073,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 1177,
	0, 708, 709, 711, 0, 844, 0, 825, 0, 0,
	714, 0, 755, 0, 758, 58, 60, 767, 768, 0,
	785, 764, 54, 49, 0, 0, 802, 1131, 332, 1153,
	0, 336, 337, 1094, 1095, 0, 1087, 1089, 1090, 77,
	782, 778, 0, 856, 0, 0, 839, 0, 788, 790,
	791, 792, 822, 0, 795, 0, 0, 0, 0, 0,
	96, 841, 1183, 101, 0, 0, 106, 107, 1184, 1185,
	1186, 1187, 0, 517, -2, 400, 163, 165, 166, 167,
	158, -2, 330, 328, 329, 274, 332, 332, 297, 298,
	299, 300, 301, 302, 0, 0, 291, 292, 293, 294,
	285, 0, 286, 287, 288, 0, 289, 375, 0, 1096,
	343, 344, 346, 350, 0, 0, 0, 371, 372, 0,
	1112, 0, 0, 0, 1213, 1212, 1212, 1212, 0, 153,
	154, 155, 156, 553, 0, 0, 529, 551, 552, 151,
	0, 0, 159, 452, 451, 0, 585, 0, 373, 0,
	0, 368, 368, 353, 354, 482, 0, 0, 560, 561,
	562, 563, 0, 0, 0, 450, 452, 338, 0, 407,
	408, 413, 414, 431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 513, 514, 515, 516,
	1109, 1110, 1111, 0, 0, 593, 0, 0, 392, 92,
	1201, 598, 658, 619, 650, 658, 611, 618, 638, 678,
	722, 0, 0, 0, 0, 730, 0, 0, 866, 924,
	926, 870, 0, 874, 878, 0, 0, 0, 0, 0,
	0, 0, 920, 944, 945, 0, 0, 1082, 0, 1068,
	0, 0, 952, 1030, 1031, 0, 0, 0, 0, 0,
	963, 964, 965, 966, 967, 0, 969, 0, 0, 0,
	973, 974, 0, 0, 975, 0, 0, 0, 0, 0,
	0, 0, 0, 984, 985, 986, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 998, 940, 0,
	0, 760, 0, 1032, 1033, 1034, 1035, 1036, 1073, 707,
	710, 712, 798, 845, 846, 0, 0, 0, 0, 826,
	1209, 753, 754, 757, -2, 0, 0, 1075, 0, 0,
	785, 856, 786, 0, 765, 51, 801, 0, 1135, 1134,
	1147, 1160, 333, 334, 335, 1086, 0, 1091, 0, 1171,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 829, 0, 0, 832, 0, 0, 0, 0, 823,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 90,
	91, 0, 0, 0, 104, 105, 0, 0, 111, 339,
	340, 144, 151, 402, 164, 382, 0, 0, 270, 331,
	295, 296, 0, 318, 0, 0, 0, 395, 116, 1100,
	1099, 350, 350, 345, 0, 348, 0, 1214, 321, 0,
	134, 0, 0, 0, 0, 0, 140, 523, 0, 0,
	530, 0, 0, 0, 456, 0, 467, 468, 0, 557,
	584, 0, 589, 342, 0, 352, 355, 811, 0, 0,
	469, 0, 452, 473, 474, 485, 434, 435, 432, 0,
	0, 1122, 1123, 1128, 1126, 1127, 121, 505, 507, 506,
	510, 0, 0, 503, 0, 392, 1096, 0, 597, 393,
	394, 661, 661, 717, 95, 0, 720, 0, 0, 0,
	0, 871, 875, 775, 0, 0, 320, 320, 1050, 320,
	324, 1053, 320, 1055, 320, 1058, 320, 1061, 1062, 0,
	0, 0, 0, 1065, 951, 1071, 0, 0, 0, 0,
	962, 0, 0, 0, 0, 0, 0, 132, 133, 999,
	0, 0, 1001, 1003, 1004, 979, 1000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	941, 942, 0, 1074, 847, 852, 852, 852, 0, 0,
	0, 1196, 1197, 1076, 1077, 856, 1078, 787, 766, 803,
	1153, 0, 1146, 0, -2, 1155, 0, 0, 0, 1161,
	779, 78, 857, 81, 0, 1171, 1179, 0, 1162, 1173,
	1175, 0, 0, 0, 1167, 0, 856, 789, 818, 820,
	0, 815, 830, 831, 833, 0, 835, 0, 837, 838,
	800, 794, 796, 0, 0, 0, 98, 0, 856, 856,
	97, 0, 843, 108, 109, 110, 401, 168, 173, 0,
	0, 0, 178, 0, 180, 0, 383, 0, 267, 269,
	0, 0, 171, 332, 0, 332, 0, 325, 0, 384,
	396, 0, 1097, 1098, 0, 0, 347, 349, 0, 1203,
	136, 0, 0, 0, 526, 0, 554, 0, 0, 0,
	0, 0, 0, 160, 453, 0, 0, 341, 0, 0,
	582, 579, 470, 0, 197, 198, 200, 0, 0, 472,
	800, 1113, 1114, 1115, 0, 1125, 1129, 124, 0, 0,
	0, 0, 594, 595, 596, 93, 604, 610, 719, 739,
	864, 872, 876, 0, 908, 1048, 332, 1051, 1052, 1054,
	1056, 1057, 1059, 1060, 909, 910, 0, 947, 0, 949,
	1091, 0, 1069, 0, 0, 961, 0, 0, 0, 970,
	971, 972, 0, 0, 978, 0, 980, 0, 983, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 943,
	0, 0, 0, 0, 824, -2, 62, 1078, 1080, 0,
	1140, 1138, 1138, 1148, 1149, 0, 0, 1156, 0, 0,
	0, 0, 82, 0, 0, 0, 1176, 0, 0, 0,
	0, 99, 1082, 812, 819, 0, 0, 813, 0, 814,
	834, 836, 793, -2, 797, 0, 856, 856, 88, 89,
	0, 174, 0, 176, 191, 192, 0, 179, 181, 182,
	266, 268, 0, 0, 308, 319, 309, 0, 0, 397,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 800, 137, 138,
	139, 518, 0, 528, 0, 0, 0, 521, 0, 459,
	0, 588, 0, 0, 559, 0, 567, 0, 0, 0,
	201, 202, 0, 1124, 504, 0, 122, 123, 0, 0,
	509, 1037, 1049, 0, 0, 0, 1066, 0, 0, 0,
	0, 968, 976, 0, 1002, 0, 0, 853, 0, 0,
	0, 0, 844, 1080, 80, 0, 0, 1143, 0, 1136,
	1139, 1137, 1150, 0, 0, 1157, 0, 1159, 0, 1180,
	1181, 1174, 0, 1166, 1169, 1165, 1168, 1091, 816, 0,
	821, 0, 1082, 87, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 326, 0, 0, 0, 519, 0, 531, 522, 586,
	587, 0, 590, 377, 583, 580, 581, 471, 0, 125,
	126, 0, 0, 0, 0, 0, 0, 946, 948, 950,
	959, 960, 1046, 1047, 977, 981, 0, 0, 849, 806,
	807, 854, 855, 0, 0, 799, 79, 1081, 1079, 1132,
	0, 1141, 1142, 1151, 1152, 1158, 0, 1164, 0, 85,
	0, 0, 0, 1091, 175, 0, 185, 0, 527, 0,
	530, 520, 0, 1116, 0, 0, 0, 511, 907, 0,
	0, 0, 999, 0, 848, 850, 851, 1144, 1145, 1172,
	1170, 817, 824, 0, 86, 378, 382, 1116, 0, 0,
	591, 501, 1118, 127, 128, 445, 446, 447, 121, 1038,
	0, 1041, 0, 808, 809, 532, 0, 534, 0, -2,
	379, 380, 0, 169, 186, 187, 0, 0, 190, 183,
	184, 117, 0, 0, 0, 1119, 1120, 124, 1039, 982,
	533, 0, 0, 338, 0, 543, 381, 0, 0, 0,
	188, 189, 555, 0, 0, 508, 0, 535, 536, 544,
	0, 385, 387, 388, 0, 0, 386, 524, 0, 555,
	1117, 0, 0, 545, 541, 389, 390, 391, 556, 525,
	1040, 0, 537, 538, 539, 0, 548, 549, 0, 540,
	0, 0, 550, 0, 546, 547,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 595,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:513
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:518
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:519
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:523
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:559
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:565
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:569
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:578
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:582
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:588
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:594
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:600
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:604
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:613
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:619
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:623
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:629
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:635
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:666
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:672
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:690
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:703
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:782
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:788
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:808
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:820
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:832
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:836
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:842
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:848
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:852
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:865
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:870
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:874
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:880
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:884
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:890
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:903
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:925
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:929
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:935
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:939
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:943
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:949
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:953
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:957
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:961
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:967
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:971
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:983
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:990
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:999
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1010
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1014
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1019
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1023
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1029
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1034
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1039
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1045
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1050
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1065
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1071
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1075
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1087
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1094
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1101
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1106
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1111
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1116
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1123
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1130
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1141
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1152
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1158
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1162
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1186
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1190
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1196
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1207
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1211
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1217
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1227
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1232
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1241
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1265
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1274
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1283
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1287
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1296
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1300
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1306
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1312
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1317
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1322
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1327
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1332
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1337
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1346
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1353
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1357
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1362
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1366
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1371
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1377
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1388
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1395
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1402
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1406
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1410
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1414
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1425
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1432
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1436
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1442
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1446
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1450
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1454
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1458
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1462
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1466
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1471
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1475
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1479
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = Armscii8Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = ASCIIStr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = Big5Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = UBinaryStr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = Cp1250Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = Cp1251Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Cp1256Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Cp1257Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = Cp850Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = Cp852Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Cp866Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Cp932Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = Dec8Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = EucjpmsStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = EuckrStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = Gb18030Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = Gb2312Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = GbkStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Geostd8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = GreekStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = HebrewStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = Hp8Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = Keybcs2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Koi8rStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Koi8uStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Latin1Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Latin2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Latin5Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Latin7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = MacceStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = MacromanStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = SjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Swe7Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Tis620Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Ucs2Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = UjisStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Utf16Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = Utf16leStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Utf32Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Utf8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Utf8mb4Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1692
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1696
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1703
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1707
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1711
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1715
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1732
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1937
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1946
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1951
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1955
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1963
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1973
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1981
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1985
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1989
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2003
		{
			yyVAL.str = ""
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = ""
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2045
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2054
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2060
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2070
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2074
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2079
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2083
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2089
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2099
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2103
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2107
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2111
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2115
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2120
		{
			yyVAL.str = ""
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = yyDollar[2].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = "key"
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = yyDollar[1].str
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2173
		{
			yyVAL.str = ""
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2183
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2187
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2193
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2199
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2203
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2209
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2213
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2219
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2225
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2229
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2233
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2237
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2242
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2246
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2252
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2258
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2264
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2270
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2274
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2278
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2282
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2286
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2291
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2304
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2308
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2312
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2321
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2327
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2335
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2341
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2345
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2351
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2355
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2359
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2363
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2367
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2371
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2375
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2379
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2383
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2387
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2391
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2395
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2399
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2403
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2407
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2411
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2415
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2419
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2423
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2427
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2431
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2435
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2439
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2443
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2447
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2451
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2455
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2459
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2464
		{
			yyVAL.str = ""
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2504
		{
			yyVAL.str = ""
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2510
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2514
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2523
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2528
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2532
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2536
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2540
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2544
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2548
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2554
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2558
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2562
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2568
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2572
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2576
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2580
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2584
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2588
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2592
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2596
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2600
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2604
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2608
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2632
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2636
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2640
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2644
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2648
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2652
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2656
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2662
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2666
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2672
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2676
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2680
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2684
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2688
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2692
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2696
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2700
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2704
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2710
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2724
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2737
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2741
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2748
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2755
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2767
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2777
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2781
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2785
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2798
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2808
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2812
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2823
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2830
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2837
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2844
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2851
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2862
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2871
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2879
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2888
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2895
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2907
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2916
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2931
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2940
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2945
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2949
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2955
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2961
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2967
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2971
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2977
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2981
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2987
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2993
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2999
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3005
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3015
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3019
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3023
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3029
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3035
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3041
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3045
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3049
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3055
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3059
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3064
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3068
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3073
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3077
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3083
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3087
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3091
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3095
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3099
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3103
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3107
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3111
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3115
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3119
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3123
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3127
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3131
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3135
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3139
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3143
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3147
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3151
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3155
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3159
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3163
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3167
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3172
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3187
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3197
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3206
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3213
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3220
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3229
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.str = ""
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3239
		{
			yyVAL.str = ""
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3251
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3255
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3284
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3303
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3311
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3323
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3331
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3335
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3339
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3347
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3351
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3355
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3359
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3363
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3367
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3371
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3375
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3379
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3387
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3391
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3399
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3403
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3407
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3411
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3415
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3419
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3423
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3427
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3431
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3435
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3447
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3466
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3470
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3474
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3482
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3490
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3494
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3498
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3504
		{
			yyVAL.str = ""
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3508
		{
			yyVAL.str = "extended "
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3514
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3518
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3534
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3538
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3542
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3552
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3556
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3562
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3566
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3572
		{
			yyVAL.empty = struct{}{}
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3576
		{
			yyVAL.empty = struct{}{}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3580
		{
			yyVAL.empty = struct{}{}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3586
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3590
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3596
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3600
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3604
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3610
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3614
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3620
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3626
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3630
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3635
		{
			yyVAL.empty = struct{}{}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3637
		{
			yyVAL.empty = struct{}{}
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3640
		{
			yyVAL.empty = struct{}{}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3642
		{
			yyVAL.empty = struct{}{}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3653
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3658
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3662
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3666
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3670
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3674
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3678
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3684
		{
			yyVAL.str = yyDollar[1].str
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3688
		{
			yyVAL.str = yyDollar[1].str
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3692
		{
			yyVAL.str = yyDollar[1].str
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3698
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3702
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3706
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3710
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3715
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3729
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3733
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3739
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3743
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3749
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3755
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3759
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3765
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3771
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3775
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3779
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3783
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3831
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3837
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3861
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3865
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3869
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3886
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3890
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3894
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3899
		{
			yyVAL.str = ""
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3903
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3908
		{
			setAllowComments(yylex, true)
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3912
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3918
		{
			yyVAL.strs = nil
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3922
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3928
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3932
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3936
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3941
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3945
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3949
		{
			yyVAL.str = SQLCacheStr
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3954
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3958
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3962
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3989
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3993
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4012
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4017
		{
			yyVAL.strs = nil
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4021
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4025
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4029
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4033
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.str = SQLCacheStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.str = DistinctStr
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = DistinctStr
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.str = StraightJoinHint
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4063
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4069
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4073
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4079
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4083
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4087
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4091
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4096
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4104
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4116
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4120
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4126
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4132
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4136
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4146
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4150
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4154
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4158
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4164
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4168
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4174
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4178
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4183
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4187
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4193
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4197
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4203
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4207
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4213
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4217
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4221
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4225
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4231
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4235
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4248
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4252
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4256
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4260
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4266
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4268
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4272
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4274
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4278
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4280
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4283
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.empty = struct{}{}
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4288
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4309
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4313
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4317
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4323
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4329
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4333
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4337
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4341
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4347
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4351
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4361
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4365
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4375
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4381
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4390
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4396
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4400
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4406
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4410
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4414
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4418
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4423
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4427
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4431
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4435
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4445
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4452
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4456
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4460
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4464
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4468
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4472
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4476
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4483
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4487
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4491
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4495
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4501
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4505
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4509
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4513
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4517
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4521
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4525
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4529
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4533
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4537
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4541
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4547
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4551
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4555
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4559
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4563
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4567
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4571
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4583
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4587
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4591
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4595
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4601
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4605
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4609
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4613
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4617
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4625
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4629
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4633
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4637
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4665
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4681
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4685
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4693
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4697
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4703
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4707
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4711
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4717
		{
			yyVAL.str = ""
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4721
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4727
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4731
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4738
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4742
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4746
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4750
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4756
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4760
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4764
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4768
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4772
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4776
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4780
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4786
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4790
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4794
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4801
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4807
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4811
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4821
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4825
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4829
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4833
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4843
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4847
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4851
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4855
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4859
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4863
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4867
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4871
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4875
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4879
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4890
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4894
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4900
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4904
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4909
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4929
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4941
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4945
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4949
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4953
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4957
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4961
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4965
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4969
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4973
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4977
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5017
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5025
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5029
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5033
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5037
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5041
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5045
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5049
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5053
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5057
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5061
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5065
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5069
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5078
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5084
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5088
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5094
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5104
		{
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5106
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5110
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5114
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5118
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5122
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5126
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5130
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5134
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5138
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5142
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5146
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5152
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5156
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5160
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5164
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5168
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5172
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5176
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5180
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5184
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5202
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5206
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5217
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5221
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5239
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5243
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5247
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5251
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5255
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5261
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5265
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5279
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5283
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5289
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5293
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5297
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5301
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5305
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5311
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5315
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5319
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5323
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5327
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5331
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5335
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5339
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5343
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5347
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5362
		{
			yyVAL.str = string("")
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5366
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5372
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5376
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5382
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5397
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5401
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5405
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5430
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5434
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5452
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5458
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5464
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5468
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5474
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5479
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5483
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5487
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5492
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5496
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5502
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5506
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5510
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5515
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5519
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5523
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5527
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5531
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5538
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5542
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5546
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5550
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5556
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5560
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5564
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5569
		{
			yyVAL.str = ""
		}
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5573
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5577
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5581
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5586
		{
			yyVAL.str = ""
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5590
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5596
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5605
		{
			yyVAL.str = ""
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5609
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5614
		{
			yyVAL.str = "cascaded"
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5618
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5627
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5631
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5637
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5643
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5649
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5658
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5662
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5667
		{
			yyVAL.str = ""
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5677
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5681
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5687
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5691
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5695
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5700
		{
			yyVAL.str = ""
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5704
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5708
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5713
		{
			yyVAL.str = ""
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5717
		{
			yyVAL.str = " header"
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5722
		{
			yyVAL.str = ""
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5726
		{
			yyVAL.str = " manifest on"
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5730
		{
			yyVAL.str = " manifest off"
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5735
		{
			yyVAL.str = ""
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5739
		{
			yyVAL.str = " overwrite on"
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5743
		{
			yyVAL.str = " overwrite off"
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5749
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5754
		{
			yyVAL.str = ""
		}
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5758
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5764
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5768
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5774
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5778
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5783
		{
			yyVAL.str = ""
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5787
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5793
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5797
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5803
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5807
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5811
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5816
		{
			yyVAL.str = ""
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5820
		{
			yyVAL.str = " optionally"
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5833
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5837
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5841
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5845
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5849
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5855
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5859
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5863
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5867
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5872
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5876
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5882
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5886
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5892
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5896
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5902
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5917
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5921
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5927
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5933
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5937
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5943
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5947
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5951
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5955
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5959
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5967
		{
			yyVAL.str = "charset"
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5996
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6001
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6009
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6011
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6014
		{
			yyVAL.empty = struct{}{}
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6016
		{
			yyVAL.empty = struct{}{}
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6018
		{
			yyVAL.empty = struct{}{}
		}
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6022
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6031
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6038
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6042
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6048
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6052
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6059
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6065
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6069
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6075
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6079
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6086
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6595
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6604
		{
			decNesting(yylex)
		}
	case 1711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6609
		{
			skipToEnd(yylex)
		}
	case 1712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6614
		{
			skipToEnd(yylex)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6618
		{
			skipToEnd(yylex)
		}
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6622
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
