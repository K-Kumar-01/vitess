// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const IN = 57492
const SHIFT_LEFT = 57493
const SHIFT_RIGHT = 57494
const DIV = 57495
const MOD = 57496
const UNARY = 57497
const COLLATE = 57498
const BINARY = 57499
const UNDERSCORE_ARMSCII8 = 57500
const UNDERSCORE_ASCII = 57501
const UNDERSCORE_BIG5 = 57502
const UNDERSCORE_BINARY = 57503
const UNDERSCORE_CP1250 = 57504
const UNDERSCORE_CP1251 = 57505
const UNDERSCORE_CP1256 = 57506
const UNDERSCORE_CP1257 = 57507
const UNDERSCORE_CP850 = 57508
const UNDERSCORE_CP852 = 57509
const UNDERSCORE_CP866 = 57510
const UNDERSCORE_CP932 = 57511
const UNDERSCORE_DEC8 = 57512
const UNDERSCORE_EUCJPMS = 57513
const UNDERSCORE_EUCKR = 57514
const UNDERSCORE_GB18030 = 57515
const UNDERSCORE_GB2312 = 57516
const UNDERSCORE_GBK = 57517
const UNDERSCORE_GEOSTD8 = 57518
const UNDERSCORE_GREEK = 57519
const UNDERSCORE_HEBREW = 57520
const UNDERSCORE_HP8 = 57521
const UNDERSCORE_KEYBCS2 = 57522
const UNDERSCORE_KOI8R = 57523
const UNDERSCORE_KOI8U = 57524
const UNDERSCORE_LATIN1 = 57525
const UNDERSCORE_LATIN2 = 57526
const UNDERSCORE_LATIN5 = 57527
const UNDERSCORE_LATIN7 = 57528
const UNDERSCORE_MACCE = 57529
const UNDERSCORE_MACROMAN = 57530
const UNDERSCORE_SJIS = 57531
const UNDERSCORE_SWE7 = 57532
const UNDERSCORE_TIS620 = 57533
const UNDERSCORE_UCS2 = 57534
const UNDERSCORE_UJIS = 57535
const UNDERSCORE_UTF16 = 57536
const UNDERSCORE_UTF16LE = 57537
const UNDERSCORE_UTF32 = 57538
const UNDERSCORE_UTF8 = 57539
const UNDERSCORE_UTF8MB4 = 57540
const UNDERSCORE_UTF8MB3 = 57541
const INTERVAL = 57542
const WINDOW_EXPR = 57543
const JSON_EXTRACT_OP = 57544
const JSON_UNQUOTE_EXTRACT_OP = 57545
const CREATE = 57546
const ALTER = 57547
const DROP = 57548
const RENAME = 57549
const ANALYZE = 57550
const ADD = 57551
const FLUSH = 57552
const CHANGE = 57553
const MODIFY = 57554
const DEALLOCATE = 57555
const REVERT = 57556
const SCHEMA = 57557
const TABLE = 57558
const INDEX = 57559
const VIEW = 57560
const TO = 57561
const IGNORE = 57562
const IF = 57563
const PRIMARY = 57564
const COLUMN = 57565
const SPATIAL = 57566
const FULLTEXT = 57567
const KEY_BLOCK_SIZE = 57568
const CHECK = 57569
const INDEXES = 57570
const ACTION = 57571
const CASCADE = 57572
const CONSTRAINT = 57573
const FOREIGN = 57574
const NO = 57575
const REFERENCES = 57576
const RESTRICT = 57577
const SHOW = 57578
const DESCRIBE = 57579
const EXPLAIN = 57580
const DATE = 57581
const ESCAPE = 57582
const REPAIR = 57583
const OPTIMIZE = 57584
const TRUNCATE = 57585
const COALESCE = 57586
const EXCHANGE = 57587
const REBUILD = 57588
const PARTITIONING = 57589
const REMOVE = 57590
const PREPARE = 57591
const EXECUTE = 57592
const MAXVALUE = 57593
const PARTITION = 57594
const REORGANIZE = 57595
const LESS = 57596
const THAN = 57597
const PROCEDURE = 57598
const TRIGGER = 57599
const VINDEX = 57600
const VINDEXES = 57601
const DIRECTORY = 57602
const NAME = 57603
const UPGRADE = 57604
const STATUS = 57605
const VARIABLES = 57606
const WARNINGS = 57607
const CASCADED = 57608
const DEFINER = 57609
const OPTION = 57610
const SQL = 57611
const UNDEFINED = 57612
const SEQUENCE = 57613
const MERGE = 57614
const TEMPORARY = 57615
const TEMPTABLE = 57616
const INVOKER = 57617
const SECURITY = 57618
const FIRST = 57619
const AFTER = 57620
const LAST = 57621
const VITESS_MIGRATION = 57622
const CANCEL = 57623
const RETRY = 57624
const COMPLETE = 57625
const CLEANUP = 57626
const THROTTLE = 57627
const UNTHROTTLE = 57628
const EXPIRE = 57629
const RATIO = 57630
const BEGIN = 57631
const START = 57632
const TRANSACTION = 57633
const COMMIT = 57634
const ROLLBACK = 57635
const SAVEPOINT = 57636
const RELEASE = 57637
const WORK = 57638
const BIT = 57639
const TINYINT = 57640
const SMALLINT = 57641
const MEDIUMINT = 57642
const INT = 57643
const INTEGER = 57644
const BIGINT = 57645
const INTNUM = 57646
const REAL = 57647
const DOUBLE = 57648
const FLOAT_TYPE = 57649
const DECIMAL_TYPE = 57650
const NUMERIC = 57651
const TIME = 57652
const TIMESTAMP = 57653
const DATETIME = 57654
const YEAR = 57655
const CHAR = 57656
const VARCHAR = 57657
const BOOL = 57658
const CHARACTER = 57659
const VARBINARY = 57660
const NCHAR = 57661
const TEXT = 57662
const TINYTEXT = 57663
const MEDIUMTEXT = 57664
const LONGTEXT = 57665
const BLOB = 57666
const TINYBLOB = 57667
const MEDIUMBLOB = 57668
const LONGBLOB = 57669
const JSON = 57670
const JSON_SCHEMA_VALID = 57671
const JSON_SCHEMA_VALIDATION_REPORT = 57672
const ENUM = 57673
const GEOMETRY = 57674
const POINT = 57675
const LINESTRING = 57676
const POLYGON = 57677
const GEOMETRYCOLLECTION = 57678
const MULTIPOINT = 57679
const MULTILINESTRING = 57680
const MULTIPOLYGON = 57681
const ASCII = 57682
const UNICODE = 57683
const NULLX = 57684
const AUTO_INCREMENT = 57685
const APPROXNUM = 57686
const SIGNED = 57687
const UNSIGNED = 57688
const ZEROFILL = 57689
const CODE = 57690
const COLLATION = 57691
const COLUMNS = 57692
const DATABASES = 57693
const ENGINES = 57694
const EVENT = 57695
const EXTENDED = 57696
const FIELDS = 57697
const FULL = 57698
const FUNCTION = 57699
const GTID_EXECUTED = 57700
const KEYSPACES = 57701
const OPEN = 57702
const PLUGINS = 57703
const PRIVILEGES = 57704
const PROCESSLIST = 57705
const SCHEMAS = 57706
const TABLES = 57707
const TRIGGERS = 57708
const USER = 57709
const VGTID_EXECUTED = 57710
const VITESS_KEYSPACES = 57711
const VITESS_METADATA = 57712
const VITESS_MIGRATIONS = 57713
const VITESS_REPLICATION_STATUS = 57714
const VITESS_SHARDS = 57715
const VITESS_TABLETS = 57716
const VITESS_TARGET = 57717
const VSCHEMA = 57718
const VITESS_THROTTLED_APPS = 57719
const NAMES = 57720
const GLOBAL = 57721
const SESSION = 57722
const ISOLATION = 57723
const LEVEL = 57724
const READ = 57725
const WRITE = 57726
const ONLY = 57727
const REPEATABLE = 57728
const COMMITTED = 57729
const UNCOMMITTED = 57730
const SERIALIZABLE = 57731
const CURRENT_TIMESTAMP = 57732
const DATABASE = 57733
const CURRENT_DATE = 57734
const NOW = 57735
const CURRENT_TIME = 57736
const LOCALTIME = 57737
const LOCALTIMESTAMP = 57738
const CURRENT_USER = 57739
const UTC_DATE = 57740
const UTC_TIME = 57741
const UTC_TIMESTAMP = 57742
const DAY = 57743
const DAY_HOUR = 57744
const DAY_MICROSECOND = 57745
const DAY_MINUTE = 57746
const DAY_SECOND = 57747
const HOUR = 57748
const HOUR_MICROSECOND = 57749
const HOUR_MINUTE = 57750
const HOUR_SECOND = 57751
const MICROSECOND = 57752
const MINUTE = 57753
const MINUTE_MICROSECOND = 57754
const MINUTE_SECOND = 57755
const MONTH = 57756
const QUARTER = 57757
const SECOND = 57758
const SECOND_MICROSECOND = 57759
const YEAR_MONTH = 57760
const WEEK = 57761
const REPLACE = 57762
const CONVERT = 57763
const CAST = 57764
const SUBSTR = 57765
const SUBSTRING = 57766
const GROUP_CONCAT = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const MATCH = 57792
const AGAINST = 57793
const BOOLEAN = 57794
const LANGUAGE = 57795
const WITH = 57796
const QUERY = 57797
const EXPANSION = 57798
const WITHOUT = 57799
const VALIDATION = 57800
const UNUSED = 57801
const ARRAY = 57802
const BYTE = 57803
const CUME_DIST = 57804
const DESCRIPTION = 57805
const DENSE_RANK = 57806
const EMPTY = 57807
const EXCEPT = 57808
const FIRST_VALUE = 57809
const GROUPING = 57810
const GROUPS = 57811
const JSON_TABLE = 57812
const LAG = 57813
const LAST_VALUE = 57814
const LATERAL = 57815
const LEAD = 57816
const NTH_VALUE = 57817
const NTILE = 57818
const OF = 57819
const OVER = 57820
const PERCENT_RANK = 57821
const RANK = 57822
const RECURSIVE = 57823
const ROW_NUMBER = 57824
const SYSTEM = 57825
const WINDOW = 57826
const ACTIVE = 57827
const ADMIN = 57828
const AUTOEXTEND_SIZE = 57829
const BUCKETS = 57830
const CLONE = 57831
const COLUMN_FORMAT = 57832
const COMPONENT = 57833
const DEFINITION = 57834
const ENFORCED = 57835
const ENGINE_ATTRIBUTE = 57836
const EXCLUDE = 57837
const FOLLOWING = 57838
const GEOMCOLLECTION = 57839
const GET_MASTER_PUBLIC_KEY = 57840
const HISTOGRAM = 57841
const HISTORY = 57842
const INACTIVE = 57843
const INVISIBLE = 57844
const LOCKED = 57845
const MASTER_COMPRESSION_ALGORITHMS = 57846
const MASTER_PUBLIC_KEY_PATH = 57847
const MASTER_TLS_CIPHERSUITES = 57848
const MASTER_ZSTD_COMPRESSION_LEVEL = 57849
const NESTED = 57850
const NETWORK_NAMESPACE = 57851
const NOWAIT = 57852
const NULLS = 57853
const OJ = 57854
const OLD = 57855
const OPTIONAL = 57856
const ORDINALITY = 57857
const ORGANIZATION = 57858
const OTHERS = 57859
const PARTIAL = 57860
const PATH = 57861
const PERSIST = 57862
const PERSIST_ONLY = 57863
const PRECEDING = 57864
const PRIVILEGE_CHECKS_USER = 57865
const PROCESS = 57866
const RANDOM = 57867
const REFERENCE = 57868
const REQUIRE_ROW_FORMAT = 57869
const RESOURCE = 57870
const RESPECT = 57871
const RESTART = 57872
const RETAIN = 57873
const REUSE = 57874
const ROLE = 57875
const SECONDARY = 57876
const SECONDARY_ENGINE = 57877
const SECONDARY_ENGINE_ATTRIBUTE = 57878
const SECONDARY_LOAD = 57879
const SECONDARY_UNLOAD = 57880
const SIMPLE = 57881
const SKIP = 57882
const SRID = 57883
const THREAD_PRIORITY = 57884
const TIES = 57885
const UNBOUNDED = 57886
const VCPU = 57887
const VISIBLE = 57888
const RETURNING = 57889
const FORMAT = 57890
const TREE = 57891
const VITESS = 57892
const TRADITIONAL = 57893
const LOCAL = 57894
const LOW_PRIORITY = 57895
const NO_WRITE_TO_BINLOG = 57896
const LOGS = 57897
const ERROR = 57898
const GENERAL = 57899
const HOSTS = 57900
const OPTIMIZER_COSTS = 57901
const USER_RESOURCES = 57902
const SLOW = 57903
const CHANNEL = 57904
const RELAY = 57905
const EXPORT = 57906
const CURRENT = 57907
const ROW = 57908
const ROWS = 57909
const AVG_ROW_LENGTH = 57910
const CONNECTION = 57911
const CHECKSUM = 57912
const DELAY_KEY_WRITE = 57913
const ENCRYPTION = 57914
const ENGINE = 57915
const INSERT_METHOD = 57916
const MAX_ROWS = 57917
const MIN_ROWS = 57918
const PACK_KEYS = 57919
const PASSWORD = 57920
const FIXED = 57921
const DYNAMIC = 57922
const COMPRESSED = 57923
const REDUNDANT = 57924
const COMPACT = 57925
const ROW_FORMAT = 57926
const STATS_AUTO_RECALC = 57927
const STATS_PERSISTENT = 57928
const STATS_SAMPLE_PAGES = 57929
const STORAGE = 57930
const MEMORY = 57931
const DISK = 57932
const PARTITIONS = 57933
const LINEAR = 57934
const RANGE = 57935
const LIST = 57936
const SUBPARTITION = 57937
const SUBPARTITIONS = 57938
const HASH = 57939

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	615, 145,
	-2, 153,
	-1, 48,
	132, 153,
	172, 153,
	334, 153,
	-2, 498,
	-1, 55,
	35, 739,
	234, 739,
	245, 739,
	280, 753,
	281, 753,
	-2, 741,
	-1, 60,
	236, 766,
	-2, 764,
	-1, 114,
	233, 1356,
	-2, 119,
	-1, 116,
	1, 146,
	615, 146,
	-2, 153,
	-1, 127,
	133, 384,
	239, 384,
	-2, 487,
	-1, 146,
	132, 153,
	172, 153,
	334, 153,
	-2, 507,
	-1, 712,
	217, 1377,
	-2, 1373,
	-1, 713,
	217, 1378,
	-2, 1374,
	-1, 789,
	59, 834,
	-2, 849,
	-1, 826,
	148, 1788,
	-2, 112,
	-1, 827,
	148, 1629,
	-2, 113,
	-1, 833,
	148, 1713,
	-2, 1350,
	-1, 982,
	148, 1556,
	-2, 1347,
	-1, 1023,
	244, 41,
	249, 41,
	-2, 395,
	-1, 1107,
	1, 554,
	615, 554,
	-2, 153,
	-1, 1350,
	59, 835,
	-2, 854,
	-1, 1351,
	59, 836,
	-2, 855,
	-1, 1404,
	132, 153,
	172, 153,
	334, 153,
	-2, 434,
	-1, 1483,
	133, 384,
	239, 384,
	-2, 487,
	-1, 1492,
	244, 42,
	249, 42,
	-2, 396,
	-1, 1807,
	217, 1382,
	-2, 1376,
	-1, 1893,
	132, 153,
	172, 153,
	334, 153,
	-2, 435,
	-1, 1900,
	25, 174,
	-2, 176,
	-1, 2159,
	87, 39,
	-2, 891,
	-1, 2216,
	77, 94,
	87, 94,
	-2, 911,
	-1, 2284,
	590, 666,
	-2, 640,
	-1, 2440,
	49, 1317,
	-2, 1311,
	-1, 2677,
	87, 39,
	-2, 892,
	-1, 2715,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 883,
	-1, 3024,
	590, 666,
	-2, 654,
	-1, 3109,
	22, 1715,
	32, 1715,
	173, 1715,
	256, 1715,
	314, 1715,
	315, 1715,
	316, 1715,
	317, 1715,
	318, 1715,
	319, 1715,
	320, 1715,
	322, 1715,
	323, 1715,
	324, 1715,
	325, 1715,
	326, 1715,
	327, 1715,
	328, 1715,
	329, 1715,
	330, 1715,
	331, 1715,
	332, 1715,
	333, 1715,
	335, 1715,
	337, 1715,
	338, 1715,
	339, 1715,
	340, 1715,
	341, 1715,
	342, 1715,
	343, 1715,
	344, 1715,
	345, 1715,
	348, 1715,
	349, 1715,
	350, 1715,
	351, 1715,
	352, 1715,
	353, 1715,
	354, 1715,
	355, 1715,
	356, 1715,
	469, 1715,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 45036

var yyAct = [...]int{
	712, 2819, 2820, 2821, 3173, 3183, 715, 3005, 3147, 1890,
	721, 2657, 3148, 2382, 1843, 632, 2792, 3093, 3107, 1407,
	3058, 714, 3081, 1823, 2589, 2495, 2502, 2989, 2103, 2552,
	2557, 2944, 3, 2987, 2554, 2553, 2551, 695, 37, 2556,
	2555, 2453, 1170, 2779, 2977, 2456, 2847, 696, 2123, 1825,
	619, 186, 2147, 2543, 186, 782, 580, 186, 2572, 2510,
	615, 1960, 595, 1365, 186, 2457, 804, 2571, 2187, 1328,
	2454, 2401, 186, 2852, 2680, 2686, 2380, 693, 2829, 641,
	694, 2574, 2344, 1863, 2441, 2706, 2210, 186, 2672, 2451,
	2174, 2667, 2249, 2610, 612, 2381, 611, 1461, 1923, 2327,
	2594, 1948, 2281, 1928, 2250, 985, 2251, 831, 2199, 595,
	1991, 1879, 595, 186, 595, 786, 613, 790, 38, 805,
	1868, 36, 2180, 1867, 1352, 784, 2166, 155, 1119, 2149,
	1031, 1490, 1801, 1508, 1770, 807, 2319, 607, 1847, 1947,
	1701, 1711, 1659, 1969, 1855, 1769, 141, 2007, 1930, 2243,
	1018, 828, 1396, 1870, 1013, 2218, 624, 95, 1332, 1254,
	1608, 1374, 91, 96, 1722, 1678, 1191, 1604, 1497, 992,
	1024, 1021, 1945, 1588, 993, 1019, 989, 1020, 1848, 1395,
	1766, 796, 1393, 1919, 1379, 1168, 119, 1162, 159, 117,
	118, 1456, 1482, 124, 125, 1103, 818, 794, 792, 1613,
	98, 791, 76, 1257, 97, 1815, 1148, 602, 3014, 2274,
	85, 89, 188, 189, 190, 3174, 2780, 2540, 1261, 102,
	1962, 1963, 1964, 3042, 1962, 2303, 2302, 2005, 2272, 793,
	77, 2772, 8, 7, 551, 6, 120, 1573, 584, 1192,
	3134, 126, 90, 2335, 812, 2735, 817, 2336, 87, 3043,
	3038, 2562, 87, 798, 87, 584, 727, 728, 729, 1035,
	104, 105, 986, 108, 3037, 1192, 114, 2824, 1681, 183,
	1666, 1665, 546, 603, 1060, 2824, 1820, 1821, 1011, 1664,
	785, 783, 1663, 1662, 1661, 1070, 1644, 832, 727, 728,
	729, 825, 778, 779, 780, 781, 581, 799, 789, 1010,
	1034, 1804, 1653, 1009, 182, 120, 1008, 1007, 806, 2560,
	188, 189, 190, 605, 2145, 606, 2437, 3128, 2646, 1061,
	1064, 1065, 1995, 2176, 1359, 3151, 820, 821, 121, 997,
	2294, 2566, 2562, 3138, 3192, 3094, 2405, 1939, 1076, 3136,
	3146, 164, 3164, 2662, 567, 2559, 1202, 2661, 1002, 1993,
	2297, 2990, 2823, 2124, 1671, 3038, 565, 2611, 2940, 3137,
	2823, 182, 1933, 2939, 2785, 3135, 1994, 2786, 3160, 584,
	1059, 1058, 1202, 120, 87, 78, 78, 697, 3191, 3091,
	3177, 3033, 2793, 3082, 2232, 121, 1988, 2049, 78, 3090,
	2560, 78, 3032, 2343, 80, 3112, 562, 2628, 164, 161,
	2190, 162, 1471, 2491, 2311, 576, 2492, 2493, 2310, 697,
	1851, 2146, 2566, 2227, 2334, 1006, 2226, 1112, 1113, 2228,
	572, 181, 1885, 1886, 2865, 2191, 1397, 2046, 1398, 1884,
	3019, 1138, 1143, 1144, 776, 1165, 3117, 775, 1106, 1126,
	585, 2563, 2275, 1055, 1127, 1198, 1822, 3006, 1190, 1115,
	3115, 2239, 2047, 87, 87, 2619, 161, 585, 162, 3121,
	3122, 584, 1139, 2617, 1132, 2591, 87, 2512, 2513, 87,
	1126, 1198, 2683, 1004, 3116, 1127, 1903, 1902, 181, 2183,
	2184, 1652, 593, 1125, 597, 1124, 591, 3152, 1336, 552,
	2370, 554, 568, 2595, 587, 584, 586, 558, 2320, 556,
	560, 569, 561, 1932, 555, 2282, 566, 1594, 3153, 557,
	570, 571, 574, 577, 578, 579, 575, 573, 1970, 564,
	588, 2306, 2563, 1654, 1655, 1656, 1563, 1145, 2970, 2008,
	2971, 165, 1102, 1224, 584, 1077, 1155, 1146, 1157, 3176,
	171, 1164, 1589, 1141, 1142, 2584, 186, 1140, 186, 1133,
	2592, 186, 1159, 2585, 2949, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1233, 1232, 1234, 1235, 1147, 2774, 1108, 2322,
	1564, 585, 1565, 2511, 2924, 1851, 1154, 1156, 2773, 2013,
	2593, 595, 1172, 595, 595, 2514, 2028, 1057, 165, 1006,
	1101, 1005, 2770, 1083, 1849, 1850, 2010, 171, 595, 595,
	1073, 1074, 1075, 3129, 1078, 1079, 1080, 1081, 1082, 2012,
	1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093,
	1094, 1095, 1096, 1097, 1098, 1099, 1100, 2025, 1044, 2026,
	1973, 2027, 1184, 1001, 2014, 2828, 1003, 37, 1197, 1194,
	1195, 1196, 1201, 1203, 1200, 2404, 1199, 1042, 2371, 1014,
	1864, 2011, 1475, 1015, 1105, 1015, 1193, 156, 1053, 1052,
	1051, 1050, 1049, 585, 1197, 1194, 1195, 1196, 1201, 1203,
	1200, 1236, 1199, 1152, 1048, 1047, 1046, 1153, 1041, 1339,
	1054, 1122, 1193, 1128, 1129, 1130, 1131, 1158, 3013, 2273,
	2514, 3193, 589, 3158, 990, 1012, 2047, 585, 2019, 2016,
	2018, 2017, 2020, 2021, 1236, 2769, 1166, 1167, 3187, 1026,
	1496, 1151, 1595, 582, 156, 2241, 1596, 1597, 1605, 1992,
	990, 1946, 3096, 2276, 819, 1027, 990, 2323, 583, 2308,
	988, 1936, 1006, 1999, 998, 1469, 585, 1239, 1240, 1241,
	1242, 1000, 999, 3095, 1601, 724, 1178, 1247, 1066, 724,
	1104, 724, 2150, 2152, 3096, 2533, 2339, 1033, 2684, 1849,
	1850, 1326, 2326, 2305, 1033, 1005, 3002, 1468, 1174, 1175,
	1467, 1937, 1321, 1045, 2722, 3095, 186, 2292, 1160, 1935,
	595, 595, 1136, 1243, 2702, 1063, 1602, 1465, 3031, 2061,
	1004, 1026, 1043, 1173, 1072, 1062, 186, 550, 545, 2564,
	2565, 157, 1575, 1574, 1576, 1577, 1578, 1990, 169, 2822,
	2733, 2734, 2568, 1938, 1312, 595, 1495, 2822, 2296, 186,
	81, 1342, 2223, 1934, 595, 1346, 1237, 1238, 2181, 77,
	595, 786, 1187, 1185, 2318, 1186, 2048, 2317, 86, 86,
	1891, 1343, 2186, 2136, 1259, 1327, 1260, 2490, 1814, 1340,
	177, 86, 1383, 3120, 86, 1306, 2329, 1032, 157, 1593,
	1117, 2328, 2295, 1263, 1032, 169, 828, 2950, 1236, 1036,
	1026, 1752, 116, 1235, 1038, 801, 1111, 1123, 1039, 1037,
	2564, 2565, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 2568, 1149, 1114, 1121, 3119, 176, 178,
	179, 180, 1163, 1033, 3027, 1056, 1344, 177, 1005, 1327,
	95, 1614, 1345, 1033, 111, 2151, 96, 1313, 1314, 1315,
	1316, 1317, 2329, 3185, 1208, 2765, 3186, 2328, 3184, 1333,
	2696, 2363, 2345, 2009, 1598, 1399, 1683, 1188, 2265, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	1684, 1685, 1682, 98, 1723, 176, 178, 179, 180, 1744,
	1733, 1734, 1735, 1736, 1746, 1737, 1738, 1739, 1751, 1747,
	1740, 1741, 1748, 1749, 1750, 1742, 1743, 1745, 1723, 3161,
	2075, 1135, 1330, 1207, 112, 186, 1673, 1675, 1676, 1457,
	783, 1033, 1137, 1364, 1341, 2861, 785, 1361, 1989, 1466,
	1206, 1207, 832, 1032, 1590, 1071, 1591, 2740, 1347, 1592,
	1674, 2739, 1977, 1032, 1987, 2347, 1505, 1389, 1390, 1026,
	1029, 1030, 595, 990, 1492, 1033, 1504, 1023, 1027, 1494,
	1982, 1982, 1501, 1208, 3154, 1985, 1503, 1120, 1150, 1506,
	1507, 595, 595, 2092, 595, 1044, 595, 595, 1022, 595,
	595, 595, 595, 595, 595, 1615, 1205, 1107, 1206, 1207,
	1042, 2723, 1208, 1538, 1539, 2365, 595, 1986, 1984, 1384,
	186, 1544, 1228, 1229, 1230, 1231, 1233, 1232, 1234, 1235,
	1394, 2357, 2356, 2355, 2349, 1502, 2353, 186, 2348, 1208,
	2346, 1032, 3189, 3194, 3060, 2351, 1036, 1026, 2932, 2071,
	595, 1038, 186, 1359, 2350, 1039, 1037, 3155, 2931, 1208,
	1727, 2922, 1537, 1603, 1728, 1540, 595, 1359, 186, 2995,
	2812, 2352, 2354, 1208, 3022, 1032, 1040, 1488, 2053, 2054,
	2055, 1026, 1029, 1030, 186, 990, 1558, 3061, 3021, 1023,
	1027, 186, 1230, 1231, 1233, 1232, 1234, 1235, 1583, 1581,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 595,
	1498, 1498, 2996, 1500, 1481, 1205, 2811, 1206, 1207, 2747,
	1208, 1541, 2070, 595, 595, 1510, 2746, 1511, 3195, 1513,
	1515, 2736, 1570, 1519, 1521, 1523, 1525, 1527, 2799, 823,
	2800, 186, 1464, 3156, 1205, 2541, 1206, 1207, 2529, 1499,
	2999, 727, 728, 729, 1224, 2247, 2338, 3010, 2246, 1478,
	1479, 1477, 1582, 1580, 2998, 1491, 1208, 1942, 1584, 1568,
	1567, 1205, 1470, 1206, 1207, 1610, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1233, 1232, 1234, 1235, 595, 1566, 1856,
	1857, 1205, 1556, 1206, 1207, 1542, 1569, 1550, 1708, 1708,
	1714, 1705, 1709, 2960, 1359, 1205, 1547, 1206, 1207, 1706,
	1706, 1618, 1208, 1546, 1545, 595, 595, 1679, 1622, 1208,
	1624, 1625, 1626, 1627, 188, 189, 190, 1631, 2730, 1517,
	2997, 1208, 1606, 2084, 2927, 188, 189, 190, 2912, 1643,
	2064, 2413, 2911, 1368, 1009, 1208, 120, 1008, 1007, 2625,
	2860, 1208, 1205, 1797, 1206, 1207, 2858, 1724, 1677, 2808,
	2744, 2729, 722, 595, 2596, 1208, 1686, 2532, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1616, 1617, 2531, 1620, 186, 188, 189, 190, 1687,
	595, 2256, 2409, 1369, 1641, 1621, 1767, 1642, 1205, 1805,
	1206, 1207, 1628, 1629, 1630, 188, 189, 190, 1649, 1650,
	2244, 1796, 1323, 722, 186, 1359, 2003, 595, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1210, 1680, 186, 2623, 1359,
	2002, 595, 722, 1798, 2131, 1359, 186, 1846, 186, 1828,
	186, 186, 595, 1645, 1205, 595, 1206, 1207, 2104, 1817,
	1611, 1205, 1579, 1206, 1207, 1767, 595, 1571, 1561, 1557,
	1833, 2588, 1834, 1205, 1807, 1206, 1207, 1900, 188, 189,
	190, 1553, 2230, 188, 189, 190, 1805, 1205, 1552, 1206,
	1207, 1551, 1370, 1205, 828, 1206, 1207, 828, 1161, 1177,
	94, 1809, 1810, 2172, 3175, 1359, 95, 1205, 2957, 1206,
	1207, 2956, 96, 2916, 1472, 1473, 1474, 2695, 188, 189,
	190, 595, 1958, 2915, 1208, 2791, 95, 1806, 1949, 1950,
	1951, 2283, 96, 1953, 1955, 1957, 1866, 1839, 1226, 1227,
	1228, 1229, 1230, 1231, 1233, 1232, 1234, 1235, 595, 3142,
	1359, 1807, 2172, 3088, 595, 1501, 2261, 92, 1501, 1359,
	1501, 188, 189, 190, 94, 1956, 1981, 1208, 93, 1899,
	1904, 1895, 1905, 1906, 1907, 1908, 1827, 2172, 3068, 2219,
	1548, 1549, 2172, 3064, 798, 1208, 1554, 1555, 1915, 1916,
	1917, 1918, 1894, 1877, 188, 189, 190, 2066, 1954, 3051,
	1359, 595, 1372, 595, 1861, 1841, 1710, 2065, 1971, 595,
	595, 2168, 1715, 1716, 1925, 2219, 1898, 1909, 1910, 1911,
	1912, 1931, 1358, 1359, 101, 1859, 94, 101, 713, 2485,
	832, 1204, 1882, 832, 1881, 100, 2697, 99, 100, 2047,
	99, 1897, 2220, 1896, 92, 3056, 94, 186, 2172, 3015,
	2112, 1359, 2222, 1968, 186, 93, 1205, 2188, 1206, 1207,
	3026, 186, 186, 1208, 2172, 186, 1941, 186, 1371, 1808,
	2783, 3012, 1811, 1812, 186, 2642, 1359, 1035, 2220, 187,
	2195, 186, 187, 2544, 2062, 187, 1976, 1498, 2047, 1979,
	596, 1980, 187, 1926, 87, 1940, 1921, 1922, 1944, 1205,
	187, 1206, 1207, 1952, 2590, 1359, 1996, 186, 1359, 3125,
	1359, 1838, 595, 2935, 1359, 187, 2196, 1205, 1034, 1206,
	1207, 2668, 1974, 1975, 1208, 1978, 2172, 2923, 1926, 2196,
	1208, 2783, 1359, 1224, 1208, 2196, 1220, 596, 1221, 1208,
	596, 187, 596, 1998, 1224, 1997, 2060, 1359, 1208, 2000,
	2001, 1983, 1222, 1223, 1219, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1233, 1232, 1234, 1235, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1233, 1232, 1234, 1235, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1233, 1232, 1234, 1235, 1208, 2006,
	1679, 2188, 1208, 2172, 2781, 1205, 2642, 1206, 1207, 1982,
	1359, 2700, 1359, 1204, 1359, 2038, 2039, 1208, 2920, 1982,
	2041, 2097, 1359, 1208, 2766, 2522, 2521, 2717, 2452, 2042,
	1224, 2520, 2644, 2518, 2519, 2518, 2517, 2196, 1359, 2695,
	2031, 2640, 1208, 2062, 1359, 2047, 2304, 2425, 2057, 1883,
	2059, 100, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233,
	1232, 1234, 1235, 1460, 2286, 1208, 1205, 2062, 1206, 1207,
	1208, 2058, 1205, 2695, 1206, 1207, 1205, 1208, 1206, 1207,
	2097, 1205, 2248, 1206, 1207, 2631, 1208, 2279, 2280, 186,
	1205, 2081, 1206, 1207, 2045, 1208, 2080, 186, 2172, 2171,
	2630, 1208, 595, 1460, 1459, 1982, 2129, 1965, 595, 1680,
	1708, 1405, 1404, 2156, 1854, 1363, 2160, 1818, 2056, 595,
	2062, 1706, 1657, 1600, 1208, 2121, 1391, 2142, 1017, 1016,
	1205, 1208, 1206, 1207, 1205, 2748, 1206, 1207, 3071, 2946,
	1366, 1208, 1533, 186, 2913, 1208, 2154, 186, 2120, 1205,
	2872, 1206, 1207, 2119, 788, 1205, 2074, 1206, 1207, 3170,
	2118, 2764, 2229, 1208, 2761, 2742, 2192, 2634, 3168, 2117,
	2633, 37, 1462, 1924, 1205, 2586, 1206, 1207, 2116, 2546,
	2212, 2542, 2287, 2252, 2115, 1920, 2749, 2750, 2751, 2090,
	2253, 1208, 1807, 1534, 1535, 1536, 1914, 1205, 1913, 1206,
	1207, 1586, 1205, 1493, 1206, 1207, 1106, 2114, 1489, 1205,
	595, 1206, 1207, 2752, 2113, 1458, 186, 1208, 1205, 113,
	1206, 1207, 1208, 186, 2107, 2707, 2708, 1205, 2106, 1206,
	1207, 2253, 87, 1205, 2169, 1206, 1207, 595, 2947, 1939,
	1831, 3149, 1333, 2182, 595, 1806, 2105, 2144, 1501, 1501,
	1647, 2278, 3036, 595, 2965, 2173, 1205, 2710, 1206, 1207,
	2753, 2754, 2755, 1205, 2211, 1206, 1207, 2538, 2537, 2170,
	2301, 2165, 2536, 1205, 2102, 1206, 1207, 1205, 2300, 1206,
	1207, 186, 186, 186, 186, 186, 2185, 2452, 2266, 2217,
	2072, 2233, 2032, 2713, 2474, 1205, 1529, 1206, 1207, 2475,
	2101, 1931, 186, 186, 2221, 2100, 2224, 2476, 2472, 2205,
	2206, 2712, 1648, 2473, 2240, 2242, 2234, 2231, 186, 2471,
	1208, 2470, 3131, 1205, 3089, 1206, 1207, 1837, 1845, 2201,
	2204, 2205, 2206, 2202, 2245, 2203, 2207, 595, 1367, 2707,
	2708, 2442, 2444, 1530, 1531, 1532, 2701, 2430, 2254, 1205,
	2445, 1206, 1207, 2429, 1205, 2688, 1206, 1207, 2262, 2267,
	2268, 2269, 2263, 2687, 2994, 2201, 2204, 2205, 2206, 2202,
	2299, 2203, 2207, 2851, 2133, 2134, 2842, 2853, 2841, 2288,
	2289, 2691, 1481, 1708, 187, 1708, 187, 2439, 1708, 187,
	1599, 774, 2516, 1708, 1706, 595, 1706, 802, 2362, 1706,
	2410, 2237, 2414, 2098, 1706, 803, 2257, 595, 1208, 1068,
	2298, 1067, 1208, 2604, 2252, 1719, 2332, 1176, 2358, 596,
	2293, 596, 596, 2383, 595, 2383, 2840, 2340, 2383, 1720,
	2321, 92, 121, 2383, 2024, 2693, 596, 596, 94, 186,
	1856, 1857, 93, 595, 2324, 2406, 2407, 2408, 2341, 2419,
	94, 2385, 1205, 3181, 1206, 1207, 2534, 595, 2395, 2396,
	2397, 2398, 2035, 3104, 595, 595, 3011, 186, 186, 186,
	186, 186, 2412, 2388, 2342, 92, 2942, 2359, 2389, 186,
	2411, 2515, 2415, 2209, 186, 1842, 93, 186, 2023, 186,
	2428, 2094, 186, 186, 186, 2093, 810, 811, 2427, 2419,
	2022, 790, 2376, 2673, 2051, 2432, 99, 2464, 2982, 2458,
	2484, 2455, 2981, 2968, 2330, 2859, 2455, 2331, 2857, 2856,
	2849, 1346, 2212, 101, 2449, 2433, 2762, 2692, 2530, 2390,
	2391, 2392, 2393, 2394, 100, 100, 99, 186, 2418, 2690,
	1205, 2547, 1206, 1207, 1205, 94, 1206, 1207, 2420, 1966,
	595, 2421, 2422, 2423, 101, 1476, 809, 2424, 595, 2848,
	2681, 2188, 2431, 186, 2434, 100, 101, 99, 3172, 3171,
	2446, 2447, 2570, 3172, 2832, 2486, 186, 100, 2487, 2168,
	2372, 2082, 792, 1829, 1385, 791, 2477, 1376, 2466, 2467,
	2465, 2469, 3171, 2468, 186, 1357, 1353, 186, 2463, 106,
	107, 1610, 95, 2549, 2488, 2481, 2482, 2605, 96, 3000,
	1354, 2728, 800, 103, 187, 88, 1, 2732, 596, 596,
	3114, 563, 1819, 1331, 1360, 1362, 2526, 2525, 3150, 2524,
	2494, 3110, 1357, 1353, 187, 1835, 1836, 1356, 3111, 1355,
	1572, 1562, 2578, 2794, 1768, 2577, 2255, 1354, 2943, 2550,
	1972, 2258, 2259, 596, 2760, 2548, 1929, 187, 1931, 1025,
	2569, 146, 596, 1892, 1893, 3084, 110, 983, 596, 109,
	595, 2581, 1350, 1351, 1356, 1028, 1355, 2639, 1134, 1967,
	2784, 2238, 1901, 1411, 1409, 1410, 1408, 1413, 2600, 1412,
	2083, 2645, 2597, 1651, 2599, 592, 595, 186, 2208, 184,
	1400, 1377, 2658, 1069, 553, 2607, 2523, 2004, 559, 1248,
	1646, 2426, 2225, 2612, 2613, 829, 2614, 822, 2615, 2616,
	2660, 2618, 2621, 2620, 1830, 2158, 2608, 2460, 2685, 2602,
	2603, 2666, 2438, 2440, 2175, 2443, 2436, 2993, 2850, 3069,
	2235, 1373, 2073, 1721, 1871, 2827, 1672, 617, 616, 614,
	2161, 2189, 1211, 716, 2148, 1386, 186, 2200, 2198, 2197,
	2033, 1878, 2709, 2705, 3106, 1873, 1869, 2167, 625, 618,
	2679, 610, 2725, 2576, 2731, 3097, 2669, 2670, 2307, 2587,
	2309, 2674, 2675, 2236, 2583, 186, 1189, 1349, 604, 996,
	1718, 2948, 3017, 2050, 2627, 2689, 1348, 2682, 1731, 1732,
	3024, 2558, 2778, 2704, 186, 2539, 2284, 186, 186, 186,
	1959, 63, 2714, 2694, 41, 2988, 3057, 595, 595, 685,
	682, 2830, 2831, 187, 2711, 2720, 2721, 2402, 2403, 3039,
	3040, 2767, 2768, 681, 3041, 1759, 599, 3127, 2718, 1180,
	816, 32, 2719, 31, 30, 29, 2578, 28, 2726, 2577,
	2727, 23, 22, 21, 20, 19, 2788, 2789, 25, 18,
	596, 595, 595, 595, 595, 17, 16, 2561, 3145, 3180,
	115, 50, 47, 45, 123, 122, 48, 44, 1109, 596,
	596, 42, 596, 27, 596, 596, 26, 596, 596, 596,
	596, 596, 596, 15, 14, 13, 12, 11, 10, 9,
	5, 4, 35, 34, 596, 33, 1183, 24, 187, 2,
	2271, 1961, 0, 0, 0, 0, 2790, 0, 0, 0,
	0, 1708, 0, 1708, 0, 187, 2743, 0, 2745, 0,
	0, 0, 1706, 0, 1706, 0, 0, 0, 596, 0,
	187, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 596, 0, 187, 0, 0, 0,
	0, 2383, 0, 2383, 2807, 0, 2527, 2528, 0, 0,
	2845, 595, 187, 595, 2801, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 2815, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 596, 1708, 2825,
	0, 2874, 2866, 0, 0, 0, 0, 37, 2816, 1706,
	0, 596, 596, 2833, 2834, 2458, 2455, 2868, 0, 2458,
	0, 0, 2803, 0, 2846, 0, 0, 0, 2854, 187,
	2870, 2855, 0, 2864, 0, 595, 2862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 2921,
	0, 595, 0, 0, 0, 0, 0, 2875, 2876, 2878,
	0, 0, 0, 0, 595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2925, 0,
	2917, 1725, 2962, 2963, 2919, 1726, 0, 2933, 0, 2918,
	0, 0, 0, 596, 596, 1708, 2945, 0, 2966, 0,
	595, 2937, 2938, 0, 595, 595, 1706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 595, 0, 0, 0, 0, 0, 0,
	0, 596, 0, 2967, 0, 0, 0, 3004, 2983, 2984,
	1360, 1816, 0, 2986, 0, 0, 0, 0, 2985, 0,
	0, 2969, 0, 187, 0, 2972, 2973, 2974, 596, 2975,
	2976, 3001, 0, 2458, 595, 0, 0, 0, 0, 2992,
	0, 0, 0, 0, 1840, 0, 0, 0, 3009, 186,
	0, 3007, 187, 0, 0, 596, 0, 3003, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 595, 186, 596,
	0, 0, 2737, 2738, 187, 0, 187, 0, 187, 187,
	596, 3028, 0, 596, 0, 0, 0, 0, 0, 0,
	0, 0, 3016, 0, 596, 3025, 0, 0, 3020, 3023,
	37, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 595, 2771, 2498, 0, 0, 2775, 2776,
	2777, 0, 0, 0, 0, 0, 0, 0, 3045, 0,
	3055, 3046, 3047, 3048, 3049, 3050, 1943, 595, 595, 596,
	0, 0, 0, 0, 0, 0, 0, 0, 3044, 0,
	0, 0, 3062, 0, 3070, 0, 0, 0, 3098, 37,
	2499, 2455, 595, 0, 3075, 3080, 596, 3099, 3083, 3077,
	3076, 3074, 596, 3092, 3079, 3078, 186, 595, 3072, 2945,
	3085, 0, 0, 0, 3067, 0, 2501, 0, 0, 0,
	0, 0, 0, 0, 3102, 0, 0, 0, 0, 3105,
	2496, 0, 0, 3123, 0, 3113, 3118, 0, 0, 0,
	0, 3098, 0, 0, 595, 0, 0, 2512, 2513, 596,
	3099, 596, 3133, 3130, 2497, 0, 0, 596, 596, 0,
	0, 0, 0, 0, 3139, 0, 595, 0, 3144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3157, 595, 0, 595, 0, 0, 2503, 3159, 0, 0,
	0, 0, 3162, 0, 3165, 187, 1708, 3169, 0, 3166,
	3167, 3163, 187, 0, 0, 0, 0, 1706, 3098, 187,
	187, 0, 0, 187, 3182, 187, 0, 3099, 3188, 3178,
	3190, 0, 187, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 3197, 3198,
	3199, 2963, 0, 1708, 0, 0, 3196, 0, 0, 0,
	0, 0, 0, 2511, 1706, 187, 2928, 2929, 2930, 0,
	596, 0, 0, 0, 0, 2514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2063, 0, 0, 0, 2067, 2068, 2069,
	0, 0, 0, 0, 0, 0, 0, 2077, 0, 0,
	2078, 2079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2085, 2086, 2087,
	2088, 2089, 0, 2091, 0, 0, 0, 0, 0, 2095,
	0, 2096, 0, 0, 2500, 2099, 0, 0, 0, 0,
	0, 0, 0, 2108, 2109, 2110, 2111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2122, 0, 2125, 2126,
	2127, 2128, 0, 2130, 2132, 0, 0, 0, 0, 0,
	0, 2137, 2138, 2139, 2140, 2141, 0, 0, 1840, 0,
	2143, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	2155, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	596, 0, 0, 0, 0, 0, 596, 0, 0, 78,
	39, 40, 80, 0, 0, 0, 0, 596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 43, 69, 70, 0, 67, 71, 0,
	0, 187, 0, 0, 0, 187, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 56, 0, 0, 0, 0,
	0, 2504, 0, 0, 0, 2508, 0, 87, 0, 0,
	0, 0, 0, 2507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	0, 0, 548, 0, 187, 0, 0, 0, 0, 0,
	0, 187, 598, 0, 0, 0, 0, 2509, 0, 0,
	777, 0, 2505, 0, 0, 596, 0, 2506, 0, 0,
	0, 0, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 991, 0, 0, 0, 0, 0, 0, 0, 187,
	187, 187, 187, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 46, 49, 52, 51, 54, 0, 66, 0,
	0, 75, 72, 0, 0, 596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2369, 0, 0, 0,
	0, 0, 0, 0, 55, 83, 82, 0, 0, 64,
	65, 53, 0, 0, 0, 0, 2384, 73, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 0, 0, 2416, 2417, 0, 0,
	0, 0, 0, 0, 0, 596, 0, 57, 58, 0,
	59, 60, 61, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 596, 2461, 0, 0, 0,
	0, 0, 596, 596, 0, 187, 187, 187, 187, 187,
	0, 0, 0, 2479, 2480, 0, 0, 187, 0, 0,
	0, 0, 187, 0, 0, 187, 0, 187, 0, 0,
	187, 187, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 0,
	0, 0, 0, 0, 0, 0, 596, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 187, 0, 0, 0, 0,
	2606, 0, 0, 0, 0, 0, 0, 2880, 2882, 2881,
	2891, 2892, 2893, 2894, 2895, 2896, 2897, 647, 0, 0,
	0, 0, 2622, 2624, 2626, 0, 0, 0, 0, 0,
	0, 2632, 0, 0, 0, 0, 2636, 2637, 2638, 0,
	0, 0, 0, 2641, 0, 0, 0, 0, 0, 2643,
	0, 0, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654,
	2655, 2656, 0, 0, 0, 0, 0, 0, 596, 0,
	0, 0, 2663, 2664, 2665, 0, 0, 0, 0, 0,
	0, 2671, 0, 0, 0, 0, 0, 2676, 0, 0,
	0, 0, 0, 0, 596, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 1116, 0, 0, 1118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2698, 2699, 0, 0, 2703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2715, 2716, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 723, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 187, 187, 187, 0, 0,
	0, 0, 0, 0, 0, 596, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2886, 2887,
	0, 0, 0, 0, 0, 0, 0, 0, 3143, 596,
	596, 596, 596, 0, 0, 787, 0, 79, 1428, 0,
	0, 0, 0, 2802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2804, 787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2813, 0,
	0, 995, 2814, 0, 0, 0, 0, 0, 2818, 698,
	0, 642, 702, 644, 699, 700, 0, 640, 643, 701,
	2826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2835, 0, 2837, 2838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 0, 187, 645, 646, 2879, 2883,
	2884, 2885, 2888, 2889, 2890, 2898, 2900, 670, 2899, 2901,
	2902, 2903, 2906, 2907, 2908, 2909, 2904, 2905, 2910, 596,
	0, 596, 0, 0, 0, 0, 0, 1388, 0, 0,
	0, 703, 0, 704, 0, 0, 708, 0, 0, 0,
	710, 709, 0, 711, 684, 683, 0, 0, 705, 706,
	0, 707, 0, 0, 0, 594, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 0, 0, 0, 0, 0, 0,
	0, 2934, 0, 0, 0, 0, 187, 0, 0, 596,
	2941, 0, 830, 0, 0, 987, 0, 994, 0, 0,
	0, 0, 596, 0, 0, 0, 0, 0, 2951, 2952,
	2953, 0, 2954, 2955, 0, 0, 0, 0, 2958, 0,
	2959, 0, 2961, 2964, 0, 0, 0, 0, 0, 0,
	0, 0, 1429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2978, 0, 0, 0, 0, 0, 596, 0,
	0, 0, 596, 596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3008, 596, 0, 1406, 0, 0, 0, 0, 0, 0,
	1442, 1445, 1446, 1447, 1448, 1449, 1450, 0, 1451, 1452,
	1453, 1454, 1455, 1430, 1431, 1432, 1433, 1414, 1415, 1443,
	0, 1417, 0, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 596, 0, 1427, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3030, 0, 0, 0, 596, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 3035, 0, 0, 1543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3052, 0, 0, 0, 0, 0, 3053, 3054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	1587, 0, 0, 0, 0, 0, 0, 0, 3065, 0,
	0, 596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1619, 0, 0, 596, 596, 0, 0, 1623,
	0, 0, 0, 0, 0, 1444, 0, 0, 0, 0,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 0, 0, 0,
	596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 596, 3126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 0, 0, 3132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1169, 3141,
	1169, 1169, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	0, 596, 0, 0, 787, 1244, 1245, 1246, 0, 1249,
	0, 1250, 1251, 1252, 1253, 3179, 1256, 1258, 1258, 0,
	1258, 1262, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 0, 1307, 1308, 1309, 1310,
	1311, 0, 0, 0, 0, 0, 1262, 1262, 1262, 1262,
	1262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 830, 0, 830, 830, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 1179, 1181, 0, 1862, 0, 1865, 0, 0, 1660,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1428, 0, 1335, 0, 182, 0, 0,
	0, 787, 0, 0, 0, 787, 0, 0, 0, 0,
	0, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 162, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 131, 152, 151, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1337, 1338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1660, 0, 0, 0, 0,
	0, 0, 2015, 0, 0, 0, 0, 0, 1381, 2029,
	2030, 0, 0, 2034, 0, 0, 0, 830, 0, 0,
	0, 0, 2037, 1401, 0, 0, 0, 0, 0, 2040,
	0, 0, 147, 128, 154, 135, 127, 1429, 148, 149,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 136, 2043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 137,
	132, 133, 134, 138, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	0, 0, 0, 0, 0, 1442, 1445, 1446, 1447, 1448,
	1449, 1450, 0, 1451, 1452, 1453, 1454, 1455, 1430, 1431,
	1432, 1433, 1414, 1415, 1443, 0, 1417, 0, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 0, 0, 1427,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1169, 1169, 0, 0, 0, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 1324, 0,
	0, 0, 0, 0, 1509, 1509, 0, 1509, 2277, 1509,
	1509, 0, 1518, 1509, 1509, 1509, 1509, 1509, 150, 0,
	1444, 121, 0, 143, 0, 1324, 0, 0, 1324, 987,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 145, 2216, 0, 0, 0, 0,
	0, 0, 0, 1585, 0, 153, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 169, 161, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1484, 1485, 152, 151, 181, 0, 0, 0, 0, 0,
	0, 0, 830, 0, 2264, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 830, 830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 0, 0,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 2312,
	2313, 2314, 2315, 2316, 0, 0, 0, 1872, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1660, 2325, 147, 1486, 154, 0, 1483, 0, 148, 149,
	1324, 0, 0, 0, 165, 0, 2333, 0, 1729, 1730,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 995, 0,
	830, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 995, 0, 1832, 0, 0, 0, 0, 0, 0,
	1480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 143, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 0, 164, 0, 0, 185,
	0, 0, 549, 0, 1381, 590, 0, 830, 0, 0,
	156, 0, 549, 0, 0, 830, 0, 0, 830, 0,
	549, 0, 0, 0, 0, 0, 0, 153, 0, 987,
	0, 0, 0, 142, 0, 797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 815, 0, 815, 161, 0, 162, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1484, 1485, 152, 151, 181, 0, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2535, 0, 0, 0, 0,
	0, 987, 0, 0, 0, 0, 0, 994, 0, 0,
	0, 144, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 2573, 0, 0, 0, 0, 0, 0, 0, 2052,
	0, 0, 0, 0, 2582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 169, 2598, 0, 987, 2601, 1702, 0, 0, 0,
	0, 0, 1702, 1702, 147, 1486, 154, 0, 1483, 0,
	148, 149, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 0, 0,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2678, 0, 0, 0, 0,
	0, 0, 0, 2135, 0, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	787, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2193, 2194, 0, 0, 0, 0, 0, 0, 0,
	2213, 0, 2214, 2215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2741, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2756, 0, 0, 2757, 2758, 2759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2291, 0, 0, 0, 1844, 157, 0, 0, 0,
	0, 2162, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 2177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 0, 549, 0, 0, 549,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	0, 0, 0, 176, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 2260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 814, 0, 0, 0, 0, 0,
	1844, 0, 2399, 0, 0, 0, 0, 2285, 0, 0,
	0, 0, 0, 0, 0, 0, 2290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 608, 0, 0, 0, 0, 0, 0, 2459,
	0, 79, 0, 0, 1872, 1872, 1872, 1872, 1872, 0,
	1325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2213, 787, 0, 808, 0, 1872, 0, 0, 1872,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 0, 1324, 0, 1324, 0,
	0, 1324, 0, 0, 0, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 797, 0, 0, 0, 2400, 0,
	0, 0, 2567, 0, 0, 0, 0, 0, 0, 0,
	830, 0, 2575, 87, 0, 0, 0, 549, 0, 717,
	725, 726, 727, 728, 729, 718, 720, 1509, 0, 0,
	719, 0, 0, 0, 0, 0, 3029, 0, 0, 0,
	0, 0, 0, 722, 730, 731, 2435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	830, 2609, 0, 0, 1324, 0, 0, 2462, 1509, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2579,
	2580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 987, 0, 0, 1324, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 0, 0, 1325, 0, 0, 0, 0, 549, 0,
	0, 0, 0, 2659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2435,
	549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 0, 0, 0, 0, 0, 1632, 1633,
	549, 549, 549, 549, 549, 549, 549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	2839, 0, 2843, 2844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2459, 0, 79, 0, 2459,
	1844, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 815, 1209, 0, 0, 0, 0, 815,
	815, 0, 0, 0, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 0, 2795, 2796, 2797, 2798, 0, 0,
	0, 0, 1255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 815, 1609, 815, 815, 815, 815,
	815, 0, 0, 0, 1324, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1559, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 608, 0,
	0, 0, 797, 0, 0, 0, 0, 0, 0, 1324,
	0, 0, 0, 0, 2867, 549, 2869, 0, 0, 0,
	0, 0, 1609, 2459, 549, 0, 549, 2157, 549, 1880,
	725, 726, 0, 0, 0, 0, 1707, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1844, 0,
	0, 0, 3018, 0, 1375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2936, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 830, 0, 0,
	0, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 2979, 0, 0, 0, 2979, 2979, 0,
	0, 0, 0, 0, 3066, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 0, 1844, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 0, 0, 549,
	549, 0, 0, 549, 0, 2036, 0, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 0, 0, 0, 549,
	1844, 0, 3140, 0, 0, 0, 0, 0, 0, 0,
	1463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3059, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 0, 3063, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	830, 830, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 815, 0, 0,
	0, 0, 0, 0, 0, 3100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 815, 815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1609, 2659, 0, 3108, 549, 0, 0,
	0, 0, 0, 0, 0, 1559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	1668, 1669, 1670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 549, 0, 0, 0, 0,
	1712, 1713, 0, 0, 0, 0, 0, 1717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1764,
	1765, 608, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 0, 1795, 0, 1799, 1800,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 2270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 608, 0, 0, 0, 0, 0,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 1853, 0, 549,
	549, 549, 549, 549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 549, 0, 0, 1889, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 0, 0, 0, 0, 0,
	0, 1325, 0, 1325, 0, 0, 1325, 0, 0, 0,
	0, 1325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 815, 0, 0, 0, 0, 0,
	0, 0, 725, 726, 0, 0, 0, 0, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1325,
	0, 0, 0, 0, 1325, 549, 549, 549, 549, 549,
	0, 0, 0, 0, 0, 0, 0, 2478, 0, 0,
	0, 0, 549, 0, 0, 1559, 0, 549, 0, 0,
	549, 2489, 1609, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 0, 0, 549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 717, 725, 726, 727, 728, 729,
	718, 720, 0, 0, 0, 719, 0, 0, 2076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 730,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2579, 2580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 0, 0, 0, 0, 1375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 0, 0, 549, 549, 549, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1325,
	0, 1325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 698,
	0, 0, 702, 0, 699, 700, 0, 0, 0, 701,
	0, 0, 0, 0, 0, 1559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2337, 0, 0,
	0, 0, 0, 0, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2360, 2361, 0, 0, 0,
	2364, 0, 0, 0, 0, 2366, 2367, 2368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2373, 2374, 2375,
	0, 0, 1771, 2377, 0, 2378, 2379, 0, 0, 0,
	2386, 2387, 0, 0, 0, 0, 0, 0, 1771, 1771,
	1771, 1771, 1771, 608, 608, 608, 608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1559, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1559, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1325,
	2629, 0, 0, 0, 0, 0, 0, 2635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1559, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2805, 0,
	2806, 0, 0, 0, 0, 2809, 2810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2871, 0, 0, 2873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2914, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2991, 608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3034, 0, 0, 0, 0,
	0, 0, 0, 608, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 0,
	965, 950, 466, 608, 894, 968, 863, 882, 978, 885,
	888, 930, 842, 908, 382, 879, 835, 867, 837, 874,
	838, 865, 896, 253, 862, 952, 912, 967, 337, 250,
	844, 868, 396, 884, 197, 932, 440, 237, 347, 344,
	473, 265, 256, 252, 235, 292, 354, 394, 460, 388,
	974, 341, 918, 0, 450, 367, 3124, 0, 0, 898,
	956, 906, 944, 893, 931, 852, 917, 969, 880, 927,
	970, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 3086, 0, 3087, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 876, 924,
	964, 877, 926, 248, 296, 255, 247, 470, 975, 955,
	841, 905, 963, 0, 0, 216, 966, 900, 0, 929,
	0, 981, 836, 920, 0, 839, 843, 977, 959, 871,
	258, 0, 0, 0, 0, 0, 0, 0, 897, 907,
	941, 891, 0, 0, 0, 0, 0, 0, 0, 869,
	0, 916, 0, 0, 0, 848, 840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 895,
	0, 0, 0, 0, 851, 0, 870, 942, 0, 834,
	279, 845, 368, 240, 0, 948, 958, 892, 506, 962,
	890, 889, 936, 849, 954, 883, 336, 847, 305, 192,
	212, 0, 881, 378, 421, 427, 953, 866, 875, 238,
	873, 425, 392, 489, 220, 267, 418, 398, 423, 405,
	270, 915, 934, 424, 342, 475, 412, 486, 507, 508,
	246, 372, 497, 464, 503, 521, 213, 243, 386, 457,
	492, 447, 365, 471, 472, 304, 446, 277, 195, 340,
	513, 211, 433, 229, 218, 477, 495, 272, 416, 203,
	459, 484, 226, 437, 0, 0, 523, 205, 482, 456,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	479, 480, 239, 524, 215, 502, 207, 1171, 501, 374,
	474, 483, 362, 352, 206, 481, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 493, 0, 200, 0, 452, 494, 525, 221, 222,
	224, 861, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 949, 469, 487, 498, 505, 511,
	512, 514, 515, 516, 517, 518, 520, 519, 373, 289,
	448, 306, 343, 939, 980, 391, 426, 227, 491, 449,
	856, 860, 854, 921, 855, 910, 911, 857, 971, 972,
	973, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 0,
	943, 850, 0, 858, 859, 0, 951, 960, 961, 544,
	353, 439, 488, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	914, 191, 208, 339, 976, 414, 271, 522, 500, 496,
	198, 210, 853, 245, 864, 872, 0, 878, 886, 887,
	899, 901, 902, 903, 904, 922, 923, 925, 933, 935,
	938, 940, 946, 957, 979, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 375, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 428, 429, 430,
	431, 432, 435, 436, 441, 442, 443, 444, 445, 453,
	454, 458, 476, 478, 490, 504, 509, 434, 281, 485,
	510, 0, 348, 913, 919, 350, 264, 284, 295, 928,
	499, 455, 214, 422, 273, 236, 945, 947, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 909, 937, 346, 467, 468, 291, 364, 0,
	0, 965, 950, 466, 0, 894, 968, 863, 882, 978,
	885, 888, 930, 842, 908, 382, 879, 835, 867, 837,
	874, 838, 865, 896, 253, 862, 952, 912, 967, 337,
	250, 844, 868, 396, 884, 197, 932, 440, 237, 347,
	344, 473, 265, 256, 252, 235, 292, 354, 394, 460,
	388, 974, 341, 918, 0, 450, 367, 0, 0, 0,
	898, 956, 906, 944, 893, 931, 852, 917, 969, 880,
	927, 970, 298, 234, 300, 196, 379, 451, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 876,
	924, 964, 877, 926, 248, 296, 255, 247, 470, 975,
	955, 841, 905, 963, 0, 0, 216, 966, 900, 0,
	929, 0, 981, 836, 920, 0, 839, 843, 977, 959,
	871, 258, 0, 0, 0, 0, 0, 0, 0, 897,
	907, 941, 891, 0, 0, 0, 0, 0, 2490, 0,
	869, 0, 916, 0, 0, 0, 848, 840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	895, 0, 0, 0, 0, 851, 0, 870, 942, 0,
	834, 279, 845, 368, 240, 0, 948, 958, 892, 506,
	962, 890, 889, 936, 849, 954, 883, 336, 847, 305,
	192, 212, 0, 881, 378, 421, 427, 953, 866, 875,
	238, 873, 425, 392, 489, 220, 267, 418, 398, 423,
	405, 270, 915, 934, 424, 342, 475, 412, 486, 507,
	508, 246, 372, 497, 464, 503, 521, 213, 243, 386,
	457, 492, 447, 365, 471, 472, 304, 446, 277, 195,
	340, 513, 211, 433, 229, 218, 477, 495, 272, 416,
	203, 459, 484, 226, 437, 0, 0, 523, 205, 482,
	456, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 479, 480, 239, 524, 215, 502, 207, 1171, 501,
	374, 474, 483, 362, 352, 206, 481, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 199, 493, 0, 200, 0, 452, 494, 525, 221,
	222, 224, 861, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 949, 469, 487, 498, 505,
	511, 512, 514, 515, 516, 517, 518, 520, 519, 373,
	289, 448, 306, 343, 939, 980, 391, 426, 227, 491,
	449, 856, 860, 854, 921, 855, 910, 911, 857, 971,
	972, 973, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	0, 943, 850, 0, 858, 859, 0, 951, 960, 961,
	544, 353, 439, 488, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 914, 191, 208, 339, 976, 414, 271, 522, 500,
	496, 198, 210, 853, 245, 864, 872, 0, 878, 886,
	887, 899, 901, 902, 903, 904, 922, 923, 925, 933,
	935, 938, 940, 946, 957, 979, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 913, 919, 350, 264, 284, 295,
	928, 499, 455, 214, 422, 273, 236, 945, 947, 202,
	233, 217, 242, 257, 260, 299, 359, 366, 395, 400,
	278, 254, 231, 419, 228, 438, 461, 462, 463, 465,
	363, 249, 399, 909, 937, 346, 467, 468, 291, 364,
	0, 0, 965, 950, 466, 0, 894, 968, 863, 882,
	978, 885, 888, 930, 842, 908, 382, 879, 835, 867,
	837, 874, 838, 865, 896, 253, 862, 952, 912, 967,
	337, 250, 844, 868, 396, 884, 197, 932, 440, 237,
	347, 344, 473, 265, 256, 252, 235, 292, 354, 394,
	460, 388, 974, 341, 918, 0, 450, 367, 0, 0,
	0, 898, 956, 906, 944, 893, 931, 852, 917, 969,
	880, 927, 970, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	876, 924, 964, 877, 926, 248, 296, 255, 247, 470,
	975, 955, 841, 905, 963, 0, 0, 216, 966, 900,
	0, 929, 0, 981, 836, 920, 0, 839, 843, 977,
	959, 871, 258, 0, 0, 0, 0, 0, 0, 0,
	897, 907, 941, 891, 0, 0, 0, 0, 0, 2448,
	0, 869, 0, 916, 0, 0, 0, 848, 840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 895, 0, 0, 0, 0, 851, 0, 870, 942,
	0, 834, 279, 845, 368, 240, 0, 948, 958, 892,
	506, 962, 890, 889, 936, 849, 954, 883, 336, 847,
	305, 192, 212, 0, 881, 378, 421, 427, 953, 866,
	875, 238, 873, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 915, 934, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 1171,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 493, 0, 200, 0, 452, 494, 525,
	221, 222, 224, 861, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 949, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 939, 980, 391, 426, 227,
	491, 449, 856, 860, 854, 921, 855, 910, 911, 857,
	971, 972, 973, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 943, 850, 0, 858, 859, 0, 951, 960,
	961, 544, 353, 439, 488, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 914, 191, 208, 339, 976, 414, 271, 522,
	500, 496, 198, 210, 853, 245, 864, 872, 0, 878,
	886, 887, 899, 901, 902, 903, 904, 922, 923, 925,
	933, 935, 938, 940, 946, 957, 979, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 428,
	429, 430, 431, 432, 435, 436, 441, 442, 443, 444,
	445, 453, 454, 458, 476, 478, 490, 504, 509, 434,
	281, 485, 510, 0, 348, 913, 919, 350, 264, 284,
	295, 928, 499, 455, 214, 422, 273, 236, 945, 947,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 909, 937, 346, 467, 468, 291,
	364, 0, 0, 965, 950, 466, 0, 894, 968, 863,
	882, 978, 885, 888, 930, 842, 908, 382, 879, 835,
	867, 837, 874, 838, 865, 896, 253, 862, 952, 912,
	967, 337, 250, 844, 868, 396, 884, 197, 932, 440,
	237, 347, 344, 473, 265, 256, 252, 235, 292, 354,
	394, 460, 388, 974, 341, 918, 0, 450, 367, 0,
	0, 0, 898, 956, 906, 944, 893, 931, 852, 917,
	969, 880, 927, 970, 298, 234, 300, 196, 379, 451,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 876, 924, 964, 877, 926, 248, 296, 255, 247,
	470, 975, 955, 841, 905, 963, 0, 0, 216, 966,
	900, 0, 929, 0, 981, 836, 920, 0, 839, 843,
	977, 959, 871, 258, 0, 0, 0, 0, 0, 0,
	0, 897, 907, 941, 891, 0, 0, 0, 0, 0,
	1860, 0, 869, 0, 916, 0, 0, 0, 848, 840,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 895, 0, 0, 0, 0, 851, 0, 870,
	942, 0, 834, 279, 845, 368, 240, 0, 948, 958,
	892, 506, 962, 890, 889, 936, 849, 954, 883, 336,
	847, 305, 192, 212, 0, 881, 378, 421, 427, 953,
	866, 875, 238, 873, 425, 392, 489, 220, 267, 418,
	398, 423, 405, 270, 915, 934, 424, 342, 475, 412,
	486, 507, 508, 246, 372, 497, 464, 503, 521, 213,
	243, 386, 457, 492, 447, 365, 471, 472, 304, 446,
	277, 195, 340, 513, 211, 433, 229, 218, 477, 495,
	272, 416, 203, 459, 484, 226, 437, 0, 0, 523,
	205, 482, 456, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 479, 480, 239, 524, 215, 502, 207,
	1171, 501, 374, 474, 483, 362, 352, 206, 481, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 199, 493, 0, 200, 0, 452, 494,
	525, 221, 222, 224, 861, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 949, 469, 487,
	498, 505, 511, 512, 514, 515, 516, 517, 518, 520,
	519, 373, 289, 448, 306, 343, 939, 980, 391, 426,
	227, 491, 449, 856, 860, 854, 921, 855, 910, 911,
	857, 971, 972, 973, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 0, 943, 850, 0, 858, 859, 0, 951,
	960, 961, 544, 353, 439, 488, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 914, 191, 208, 339, 976, 414, 271,
	522, 500, 496, 198, 210, 853, 245, 864, 872, 0,
	878, 886, 887, 899, 901, 902, 903, 904, 922, 923,
	925, 933, 935, 938, 940, 946, 957, 979, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	428, 429, 430, 431, 432, 435, 436, 441, 442, 443,
	444, 445, 453, 454, 458, 476, 478, 490, 504, 509,
	434, 281, 485, 510, 0, 348, 913, 919, 350, 264,
	284, 295, 928, 499, 455, 214, 422, 273, 236, 945,
	947, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 438, 461, 462,
	463, 465, 363, 249, 399, 909, 937, 346, 467, 468,
	291, 364, 0, 0, 965, 950, 466, 0, 894, 968,
	863, 882, 978, 885, 888, 930, 842, 908, 382, 879,
	835, 867, 837, 874, 838, 865, 896, 253, 862, 952,
	912, 967, 337, 250, 844, 868, 396, 884, 197, 932,
	440, 237, 347, 344, 473, 265, 256, 252, 235, 292,
	354, 394, 460, 388, 974, 341, 918, 0, 450, 367,
	0, 0, 0, 898, 956, 906, 944, 893, 931, 852,
	917, 969, 880, 927, 970, 298, 234, 300, 196, 379,
	451, 269, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 876, 924, 964, 877, 926, 248, 296, 255,
	247, 470, 975, 955, 841, 905, 963, 0, 0, 216,
	966, 900, 0, 929, 0, 981, 836, 920, 0, 839,
	843, 977, 959, 871, 258, 0, 0, 0, 0, 0,
	0, 0, 897, 907, 941, 891, 0, 0, 0, 0,
	0, 0, 0, 869, 0, 916, 0, 0, 0, 848,
	840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 895, 0, 0, 0, 0, 851, 0,
	870, 942, 0, 834, 279, 845, 368, 240, 0, 948,
	958, 892, 506, 962, 890, 889, 936, 849, 954, 883,
	336, 847, 305, 192, 212, 0, 881, 378, 421, 427,
	953, 866, 875, 238, 873, 425, 392, 489, 220, 267,
	418, 398, 423, 405, 270, 915, 934, 424, 342, 475,
	412, 486, 507, 508, 246, 372, 497, 464, 503, 521,
	213, 243, 386, 457, 492, 447, 365, 471, 472, 304,
	446, 277, 195, 340, 513, 211, 433, 229, 218, 477,
	495, 272, 416, 203, 459, 484, 226, 437, 0, 0,
	523, 205, 482, 456, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 479, 480, 239, 524, 215, 502,
	207, 1171, 501, 374, 474, 483, 362, 352, 206, 481,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 493, 0, 200, 0, 452,
	494, 525, 221, 222, 224, 861, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 949, 469,
	487, 498, 505, 511, 512, 514, 515, 516, 517, 518,
	520, 519, 373, 289, 448, 306, 343, 939, 980, 391,
	426, 227, 491, 449, 856, 860, 854, 921, 855, 910,
	911, 857, 971, 972, 973, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 0, 943, 850, 0, 858, 859, 0,
	951, 960, 961, 544, 353, 439, 488, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 914, 191, 208, 339, 976, 414,
	271, 522, 500, 496, 198, 210, 853, 245, 864, 872,
	0, 878, 886, 887, 899, 901, 902, 903, 904, 922,
	923, 925, 933, 935, 938, 940, 946, 957, 979, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 913, 919, 350,
	264, 284, 295, 928, 499, 455, 214, 422, 273, 236,
	945, 947, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 909, 937, 346, 467,
	468, 291, 364, 0, 0, 965, 950, 466, 0, 894,
	968, 863, 882, 978, 885, 888, 930, 842, 908, 382,
	879, 835, 867, 837, 874, 838, 865, 896, 253, 862,
	952, 912, 967, 337, 250, 844, 868, 396, 884, 197,
	932, 440, 237, 347, 344, 473, 265, 256, 252, 235,
	292, 354, 394, 460, 388, 974, 341, 918, 0, 450,
	367, 0, 0, 0, 898, 956, 906, 944, 893, 931,
	852, 917, 969, 880, 927, 970, 298, 234, 300, 196,
	379, 451, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 876, 924, 964, 877, 926, 248, 296,
	255, 247, 470, 975, 955, 841, 905, 963, 0, 0,
	216, 966, 900, 0, 929, 0, 981, 836, 920, 0,
	839, 843, 977, 959, 871, 258, 0, 0, 0, 0,
	0, 0, 0, 897, 907, 941, 891, 0, 0, 0,
	0, 0, 0, 0, 869, 0, 916, 0, 0, 0,
	848, 840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 895, 0, 0, 0, 0, 851,
	0, 870, 942, 0, 834, 279, 845, 368, 240, 0,
	948, 958, 892, 506, 962, 890, 889, 936, 849, 954,
	883, 336, 847, 305, 192, 212, 0, 881, 378, 421,
	427, 953, 866, 875, 238, 873, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 915, 934, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 1171, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 493, 0, 200, 0,
	452, 494, 525, 221, 222, 224, 861, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 949,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 939, 980,
	391, 426, 227, 491, 449, 856, 860, 854, 921, 855,
	910, 911, 857, 971, 972, 973, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 943, 850, 0, 858, 859,
	0, 951, 960, 961, 544, 353, 439, 488, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 914, 191, 208, 339, 976,
	414, 271, 522, 500, 496, 198, 210, 853, 245, 864,
	872, 0, 878, 886, 887, 899, 901, 902, 903, 904,
	922, 923, 925, 933, 935, 938, 940, 946, 957, 979,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 913, 919,
	350, 264, 284, 295, 928, 499, 455, 214, 422, 273,
	236, 945, 947, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 438,
	461, 462, 463, 465, 363, 249, 399, 909, 937, 346,
	467, 468, 291, 364, 0, 0, 965, 950, 466, 0,
	894, 968, 863, 882, 978, 885, 888, 930, 842, 908,
	382, 879, 835, 867, 837, 874, 838, 865, 896, 253,
	862, 952, 912, 967, 337, 250, 844, 868, 396, 884,
	197, 932, 440, 237, 347, 344, 473, 265, 256, 252,
	235, 292, 354, 394, 460, 388, 974, 341, 918, 0,
	450, 367, 0, 0, 0, 898, 956, 906, 944, 893,
	931, 852, 917, 969, 880, 927, 970, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 876, 924, 964, 877, 926, 248,
	296, 255, 247, 470, 975, 955, 841, 905, 963, 0,
	0, 982, 966, 900, 0, 929, 0, 981, 836, 920,
	0, 839, 843, 977, 959, 871, 258, 0, 0, 0,
	0, 0, 0, 0, 897, 907, 941, 891, 0, 0,
	0, 0, 0, 0, 0, 869, 0, 916, 0, 0,
	0, 848, 840, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 895, 0, 0, 0, 0,
	851, 0, 870, 942, 0, 834, 279, 845, 368, 240,
	0, 948, 958, 892, 506, 962, 890, 889, 936, 849,
	954, 883, 336, 847, 305, 192, 212, 0, 881, 378,
	421, 427, 953, 866, 875, 238, 873, 425, 392, 489,
	220, 267, 418, 398, 423, 405, 270, 915, 934, 424,
	342, 475, 412, 486, 507, 508, 246, 372, 497, 464,
	503, 521, 213, 243, 386, 457, 492, 447, 365, 471,
	472, 304, 446, 277, 195, 340, 513, 211, 433, 229,
	218, 477, 495, 272, 416, 203, 459, 484, 226, 437,
	0, 0, 523, 205, 482, 456, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 479, 480, 239, 524,
	215, 502, 207, 846, 501, 374, 474, 483, 362, 352,
	206, 481, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 199, 493, 0, 200,
	0, 452, 494, 525, 221, 222, 224, 861, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	949, 469, 487, 498, 505, 511, 512, 514, 515, 516,
	517, 518, 520, 519, 833, 827, 826, 306, 343, 939,
	980, 391, 426, 227, 491, 449, 856, 860, 854, 921,
	855, 910, 911, 857, 971, 972, 973, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 0, 943, 850, 0, 858,
	859, 0, 951, 960, 961, 544, 353, 439, 488, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 914, 191, 208, 339,
	976, 414, 271, 522, 500, 496, 198, 210, 853, 245,
	864, 872, 0, 878, 886, 887, 899, 901, 902, 903,
	904, 922, 923, 925, 933, 935, 938, 940, 946, 957,
	979, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 428, 429, 430, 431, 432, 435, 436,
	441, 442, 443, 444, 445, 453, 454, 458, 476, 478,
	490, 504, 509, 434, 281, 485, 510, 0, 348, 913,
	919, 350, 264, 284, 295, 928, 499, 455, 214, 422,
	273, 236, 945, 947, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 909, 937,
	346, 467, 468, 291, 364, 0, 0, 965, 950, 466,
	0, 894, 968, 863, 882, 978, 885, 888, 930, 842,
	908, 382, 879, 835, 867, 837, 874, 838, 865, 896,
	253, 862, 952, 912, 967, 337, 250, 844, 868, 396,
	884, 197, 932, 440, 237, 347, 344, 473, 265, 256,
	252, 235, 292, 354, 394, 460, 388, 974, 341, 918,
	0, 450, 367, 0, 0, 0, 898, 956, 906, 944,
	893, 931, 852, 917, 969, 880, 927, 970, 298, 234,
	300, 196, 379, 451, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 876, 924, 964, 877, 926,
	248, 296, 255, 247, 470, 975, 955, 841, 905, 963,
	0, 0, 982, 966, 900, 0, 929, 0, 981, 836,
	920, 0, 839, 843, 977, 959, 871, 258, 0, 0,
	0, 0, 0, 0, 0, 897, 907, 941, 891, 0,
	0, 0, 0, 0, 0, 0, 869, 0, 916, 0,
	0, 0, 848, 840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 895, 0, 0, 0,
	0, 851, 0, 870, 942, 0, 834, 279, 845, 368,
	240, 0, 948, 958, 892, 506, 962, 890, 889, 936,
	849, 954, 883, 336, 847, 305, 192, 212, 0, 881,
	378, 421, 427, 953, 866, 875, 238, 873, 425, 392,
	489, 220, 267, 418, 398, 423, 405, 270, 915, 934,
	424, 342, 475, 412, 486, 507, 508, 246, 372, 497,
	464, 503, 521, 213, 243, 386, 457, 492, 447, 365,
	471, 472, 304, 446, 277, 195, 340, 513, 211, 433,
	229, 218, 477, 495, 272, 416, 203, 459, 1392, 226,
	437, 0, 0, 523, 205, 482, 456, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 479, 480, 239,
	524, 215, 502, 207, 846, 501, 374, 474, 483, 362,
	352, 206, 481, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 199, 493, 0,
	200, 0, 452, 494, 525, 221, 222, 224, 861, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 949, 469, 487, 498, 505, 511, 512, 514, 515,
	516, 517, 518, 520, 519, 833, 827, 826, 306, 343,
	939, 980, 391, 426, 227, 491, 449, 856, 860, 854,
	921, 855, 910, 911, 857, 971, 972, 973, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 0, 943, 850, 0,
	858, 859, 0, 951, 960, 961, 544, 353, 439, 488,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 914, 191, 208,
	339, 976, 414, 271, 522, 500, 496, 198, 210, 853,
	245, 864, 872, 0, 878, 886, 887, 899, 901, 902,
	903, 904, 922, 923, 925, 933, 935, 938, 940, 946,
	957, 979, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 428, 429, 430, 431, 432, 435,
	436, 441, 442, 443, 444, 445, 453, 454, 458, 476,
	478, 490, 504, 509, 434, 281, 485, 510, 0, 348,
	913, 919, 350, 264, 284, 295, 928, 499, 455, 214,
	422, 273, 236, 945, 947, 202, 233, 217, 242, 257,
	260, 299, 359, 366, 395, 400, 278, 254, 231, 419,
	228, 438, 461, 462, 463, 465, 363, 249, 399, 909,
	937, 346, 467, 468, 291, 364, 0, 0, 965, 950,
	466, 0, 894, 968, 863, 882, 978, 885, 888, 930,
	842, 908, 382, 879, 835, 867, 837, 874, 838, 865,
	896, 253, 862, 952, 912, 967, 337, 250, 844, 868,
	396, 884, 197, 932, 440, 237, 347, 344, 473, 265,
	256, 252, 235, 292, 354, 394, 460, 388, 974, 341,
	918, 0, 450, 367, 0, 0, 0, 898, 956, 906,
	944, 893, 931, 852, 917, 969, 880, 927, 970, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 876, 924, 964, 877,
	926, 248, 296, 255, 247, 470, 975, 955, 841, 905,
	963, 0, 0, 982, 966, 900, 0, 929, 0, 981,
	836, 920, 0, 839, 843, 977, 959, 871, 258, 0,
	0, 0, 0, 0, 0, 0, 897, 907, 941, 891,
	0, 0, 0, 0, 0, 0, 0, 869, 0, 916,
	0, 0, 0, 848, 840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 895, 0, 0,
	0, 0, 851, 0, 870, 942, 0, 834, 279, 845,
	368, 240, 0, 948, 958, 892, 506, 962, 890, 889,
	936, 849, 954, 883, 336, 847, 305, 192, 212, 0,
	881, 378, 421, 427, 953, 866, 875, 238, 873, 425,
	392, 489, 220, 267, 418, 398, 423, 405, 270, 915,
	934, 424, 342, 475, 412, 486, 507, 508, 246, 372,
	497, 464, 503, 521, 213, 243, 386, 457, 492, 447,
	365, 471, 472, 304, 446, 277, 195, 340, 513, 211,
	433, 229, 218, 477, 495, 272, 416, 203, 459, 824,
	226, 437, 0, 0, 523, 205, 482, 456, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 479, 480,
	239, 524, 215, 502, 207, 846, 501, 374, 474, 483,
	362, 352, 206, 481, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 493,
	0, 200, 0, 452, 494, 525, 221, 222, 224, 861,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 949, 469, 487, 498, 505, 511, 512, 514,
	515, 516, 517, 518, 520, 519, 833, 827, 826, 306,
	343, 939, 980, 391, 426, 227, 491, 449, 856, 860,
	854, 921, 855, 910, 911, 857, 971, 972, 973, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 0, 943, 850,
	0, 858, 859, 0, 951, 960, 961, 544, 353, 439,
	488, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 914, 191,
	208, 339, 976, 414, 271, 522, 500, 496, 198, 210,
	853, 245, 864, 872, 0, 878, 886, 887, 899, 901,
	902, 903, 904, 922, 923, 925, 933, 935, 938, 940,
	946, 957, 979, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 913, 919, 350, 264, 284, 295, 928, 499, 455,
	214, 422, 273, 236, 945, 947, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	909, 937, 346, 467, 468, 291, 364, 0, 0, 0,
	0, 466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 1802, 0, 626, 0,
	0, 0, 253, 631, 0, 0, 0, 337, 250, 0,
	1803, 396, 0, 197, 0, 440, 237, 347, 344, 473,
	265, 256, 252, 235, 292, 354, 394, 460, 388, 638,
	341, 0, 0, 450, 367, 0, 0, 0, 0, 0,
	633, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 451, 269, 0, 87, 0,
	0, 188, 189, 190, 717, 725, 726, 727, 728, 729,
	718, 720, 0, 0, 225, 719, 232, 649, 651, 650,
	660, 661, 662, 663, 664, 665, 666, 647, 722, 730,
	731, 0, 248, 296, 255, 247, 470, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 609, 623, 0, 637, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 620, 621, 813, 0, 0, 0,
	691, 0, 622, 0, 0, 630, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 697, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 690, 0, 0, 506, 0, 0,
	688, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 427, 0, 0, 0, 238, 0,
	425, 392, 489, 220, 267, 418, 398, 423, 405, 270,
	0, 0, 424, 342, 475, 412, 486, 507, 508, 246,
	372, 497, 464, 503, 521, 213, 243, 386, 457, 492,
	447, 365, 471, 472, 304, 446, 277, 195, 340, 513,
	211, 433, 229, 218, 477, 495, 272, 416, 203, 459,
	484, 226, 437, 0, 0, 523, 205, 482, 456, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 479,
	480, 239, 524, 215, 502, 207, 0, 501, 374, 474,
	483, 362, 352, 206, 481, 360, 351, 307, 655, 656,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 199,
	493, 0, 200, 0, 452, 494, 525, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 469, 487, 498, 505, 511, 512,
	514, 515, 516, 517, 518, 520, 519, 373, 289, 448,
	306, 343, 0, 0, 391, 426, 227, 491, 449, 698,
	689, 642, 702, 644, 699, 700, 639, 640, 643, 701,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 0, 692,
	629, 628, 0, 635, 636, 0, 645, 646, 648, 652,
	653, 654, 657, 658, 659, 667, 669, 670, 668, 671,
	672, 673, 676, 677, 678, 679, 674, 675, 680, 627,
	191, 208, 339, 0, 414, 271, 522, 500, 496, 198,
	210, 703, 245, 704, 0, 0, 708, 0, 0, 0,
	710, 709, 0, 711, 684, 683, 0, 0, 705, 706,
	0, 707, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 428, 429, 430, 431,
	432, 435, 436, 441, 442, 443, 444, 445, 453, 454,
	458, 476, 478, 490, 504, 509, 434, 281, 485, 510,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 499,
	455, 214, 422, 273, 236, 724, 0, 202, 233, 217,
	242, 257, 260, 299, 359, 366, 395, 400, 278, 254,
	231, 419, 228, 438, 461, 462, 463, 465, 363, 249,
	399, 0, 364, 346, 467, 468, 291, 466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	0, 0, 0, 0, 626, 0, 0, 0, 253, 631,
	0, 0, 0, 337, 250, 0, 0, 396, 0, 197,
	0, 440, 237, 347, 344, 473, 265, 256, 252, 235,
	292, 354, 394, 460, 388, 638, 341, 0, 0, 450,
	367, 0, 0, 0, 0, 0, 633, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	379, 451, 269, 0, 87, 0, 0, 188, 189, 190,
	717, 725, 726, 727, 728, 729, 718, 720, 0, 0,
	225, 719, 232, 649, 651, 650, 660, 661, 662, 663,
	664, 665, 666, 647, 722, 730, 731, 0, 248, 296,
	255, 247, 470, 0, 0, 1761, 1762, 1763, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 609, 623,
	0, 637, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	620, 621, 0, 0, 0, 0, 691, 0, 622, 0,
	0, 630, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	690, 0, 0, 506, 0, 0, 688, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	427, 0, 0, 0, 238, 0, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 0, 0, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 0, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 655, 656, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 493, 0, 200, 0,
	452, 494, 525, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 0, 0,
	391, 426, 227, 491, 449, 698, 689, 642, 702, 644,
	699, 700, 639, 640, 643, 701, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 692, 629, 628, 0, 635,
	636, 0, 645, 646, 648, 652, 653, 654, 657, 658,
	659, 667, 669, 670, 668, 671, 672, 673, 676, 677,
	678, 679, 674, 675, 680, 627, 191, 208, 339, 0,
	414, 271, 522, 500, 496, 198, 210, 703, 245, 704,
	0, 0, 708, 0, 0, 0, 710, 709, 0, 711,
	684, 683, 0, 0, 705, 706, 0, 707, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 499, 455, 214, 422, 273,
	236, 724, 0, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 438,
	461, 462, 463, 465, 363, 249, 399, 0, 364, 346,
	467, 468, 291, 466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 0, 0, 0,
	626, 0, 0, 0, 253, 631, 0, 0, 0, 337,
	250, 0, 0, 396, 0, 197, 0, 440, 237, 347,
	344, 473, 265, 256, 252, 235, 292, 354, 394, 460,
	388, 638, 341, 0, 0, 450, 367, 0, 0, 0,
	0, 0, 633, 634, 0, 0, 0, 0, 0, 0,
	1887, 0, 298, 234, 300, 196, 379, 451, 269, 0,
	87, 0, 0, 188, 189, 190, 717, 725, 726, 727,
	728, 729, 718, 720, 0, 0, 225, 719, 232, 649,
	651, 650, 660, 661, 662, 663, 664, 665, 666, 647,
	722, 730, 731, 1888, 248, 296, 255, 247, 470, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 609, 623, 0, 637, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 620, 621, 0, 0,
	0, 0, 691, 0, 622, 0, 0, 630, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	697, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 690, 0, 0, 506,
	0, 0, 688, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 427, 0, 0, 0,
	238, 0, 425, 392, 489, 220, 267, 418, 398, 423,
	405, 270, 0, 0, 424, 342, 475, 412, 486, 507,
	508, 246, 372, 497, 464, 503, 521, 213, 243, 386,
	457, 492, 447, 365, 471, 472, 304, 446, 277, 195,
	340, 513, 211, 433, 229, 218, 477, 495, 272, 416,
	203, 459, 484, 226, 437, 0, 0, 523, 205, 482,
	456, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 479, 480, 239, 524, 215, 502, 207, 0, 501,
	374, 474, 483, 362, 352, 206, 481, 360, 351, 307,
	655, 656, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 199, 493, 0, 200, 0, 452, 494, 525, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 469, 487, 498, 505,
	511, 512, 514, 515, 516, 517, 518, 520, 519, 373,
	289, 448, 306, 343, 0, 0, 391, 426, 227, 491,
	449, 698, 689, 642, 702, 644, 699, 700, 639, 640,
	643, 701, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	0, 692, 629, 628, 0, 635, 636, 0, 645, 646,
	648, 652, 653, 654, 657, 658, 659, 667, 669, 670,
	668, 671, 672, 673, 676, 677, 678, 679, 674, 675,
	680, 627, 191, 208, 339, 0, 414, 271, 522, 500,
	496, 198, 210, 703, 245, 704, 0, 0, 708, 0,
	0, 0, 710, 709, 0, 711, 684, 683, 0, 0,
	705, 706, 0, 707, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 499, 455, 214, 422, 273, 236, 724, 0, 202,
	233, 217, 242, 257, 260, 299, 359, 366, 395, 400,
	278, 254, 231, 419, 228, 438, 461, 462, 463, 465,
	363, 249, 399, 0, 0, 346, 467, 468, 291, 364,
	0, 0, 0, 78, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 626, 0, 0, 0, 253, 631, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 235, 292, 354, 394,
	460, 388, 638, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 633, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 87, 0, 0, 188, 189, 190, 717, 725, 726,
	727, 728, 729, 718, 720, 0, 0, 225, 719, 232,
	649, 651, 650, 660, 661, 662, 663, 664, 665, 666,
	647, 722, 730, 731, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 609, 623, 0, 637, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 620, 621, 0,
	0, 0, 0, 691, 0, 622, 0, 0, 630, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 690, 0, 0,
	506, 0, 0, 688, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 427, 0, 0,
	0, 238, 0, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 0, 0, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 0,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 655, 656, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 493, 0, 200, 0, 452, 494, 525,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 0, 0, 391, 426, 227,
	491, 449, 698, 689, 642, 702, 644, 699, 700, 639,
	640, 643, 701, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 692, 629, 628, 0, 635, 636, 0, 645,
	646, 648, 652, 653, 654, 657, 658, 659, 667, 669,
	670, 668, 671, 672, 673, 676, 677, 678, 679, 674,
	675, 680, 627, 191, 208, 339, 86, 414, 271, 522,
	500, 496, 198, 210, 703, 245, 704, 0, 0, 708,
	0, 0, 0, 710, 709, 0, 711, 684, 683, 0,
	0, 705, 706, 0, 707, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 428,
	429, 430, 431, 432, 435, 436, 441, 442, 443, 444,
	445, 453, 454, 458, 476, 478, 490, 504, 509, 434,
	281, 485, 510, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 499, 455, 214, 422, 273, 236, 724, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 626, 0, 0,
	0, 253, 631, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 235, 292, 354, 394, 460, 388, 638, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 633,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 87, 0, 0,
	188, 189, 190, 717, 725, 726, 727, 728, 729, 718,
	720, 0, 0, 225, 719, 232, 649, 651, 650, 660,
	661, 662, 663, 664, 665, 666, 647, 722, 730, 731,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 609, 623, 0, 637, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 620, 621, 0, 0, 0, 0, 691,
	0, 622, 0, 0, 630, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 690, 0, 0, 506, 0, 0, 688,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 427, 0, 0, 0, 238, 0, 425,
	392, 489, 220, 267, 418, 398, 423, 405, 270, 3073,
	0, 424, 342, 475, 412, 486, 507, 508, 246, 372,
	497, 464, 503, 521, 213, 243, 386, 457, 492, 447,
	365, 471, 472, 304, 446, 277, 195, 340, 513, 211,
	433, 229, 218, 477, 495, 272, 416, 203, 459, 484,
	226, 437, 0, 0, 523, 205, 482, 456, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 479, 480,
	239, 524, 215, 502, 207, 0, 501, 374, 474, 483,
	362, 352, 206, 481, 360, 351, 307, 655, 656, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 493,
	0, 200, 0, 452, 494, 525, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 469, 487, 498, 505, 511, 512, 514,
	515, 516, 517, 518, 520, 519, 373, 289, 448, 306,
	343, 0, 0, 391, 426, 227, 491, 449, 698, 689,
	642, 702, 644, 699, 700, 639, 640, 643, 701, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 0, 692, 629,
	628, 0, 635, 636, 0, 645, 646, 648, 652, 653,
	654, 657, 658, 659, 667, 669, 670, 668, 671, 672,
	673, 676, 677, 678, 679, 674, 675, 680, 627, 191,
	208, 339, 0, 414, 271, 522, 500, 496, 198, 210,
	703, 245, 704, 0, 0, 708, 0, 0, 0, 710,
	709, 0, 711, 684, 683, 0, 0, 705, 706, 0,
	707, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 499, 455,
	214, 422, 273, 236, 724, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 626, 0, 0, 0, 253, 631, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 235, 292,
	354, 394, 460, 388, 638, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 633, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 87, 0, 1359, 188, 189, 190, 717,
	725, 726, 727, 728, 729, 718, 720, 0, 0, 225,
	719, 232, 649, 651, 650, 660, 661, 662, 663, 664,
	665, 666, 647, 722, 730, 731, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 609, 623, 0,
	637, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 620,
	621, 0, 0, 0, 0, 691, 0, 622, 0, 0,
	630, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 690,
	0, 0, 506, 0, 0, 688, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 378, 421, 427,
	0, 0, 0, 238, 0, 425, 392, 489, 220, 267,
	418, 398, 423, 405, 270, 0, 0, 424, 342, 475,
	412, 486, 507, 508, 246, 372, 497, 464, 503, 521,
	213, 243, 386, 457, 492, 447, 365, 471, 472, 304,
	446, 277, 195, 340, 513, 211, 433, 229, 218, 477,
	495, 272, 416, 203, 459, 484, 226, 437, 0, 0,
	523, 205, 482, 456, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 479, 480, 239, 524, 215, 502,
	207, 0, 501, 374, 474, 483, 362, 352, 206, 481,
	360, 351, 307, 655, 656, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 493, 0, 200, 0, 452,
	494, 525, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 469,
	487, 498, 505, 511, 512, 514, 515, 516, 517, 518,
	520, 519, 373, 289, 448, 306, 343, 0, 0, 391,
	426, 227, 491, 449, 698, 689, 642, 702, 644, 699,
	700, 639, 640, 643, 701, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 0, 692, 629, 628, 0, 635, 636,
	0, 645, 646, 648, 652, 653, 654, 657, 658, 659,
	667, 669, 670, 668, 671, 672, 673, 676, 677, 678,
	679, 674, 675, 680, 627, 191, 208, 339, 0, 414,
	271, 522, 500, 496, 198, 210, 703, 245, 704, 0,
	0, 708, 0, 0, 0, 710, 709, 0, 711, 684,
	683, 0, 0, 705, 706, 0, 707, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 499, 455, 214, 422, 273, 236,
	724, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 626,
	0, 0, 0, 253, 631, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 235, 292, 354, 394, 460, 388,
	638, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 633, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 87,
	0, 0, 188, 189, 190, 717, 725, 726, 727, 728,
	729, 718, 720, 0, 0, 225, 719, 232, 649, 651,
	650, 660, 661, 662, 663, 664, 665, 666, 647, 722,
	730, 731, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 609, 623, 0, 637, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 620, 621, 813, 0, 0,
	0, 691, 0, 622, 0, 0, 630, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 690, 0, 0, 506, 0,
	0, 688, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 427, 0, 0, 0, 238,
	0, 425, 392, 489, 220, 267, 418, 398, 423, 405,
	270, 0, 0, 424, 342, 475, 412, 486, 507, 508,
	246, 372, 497, 464, 503, 521, 213, 243, 386, 457,
	492, 447, 365, 471, 472, 304, 446, 277, 195, 340,
	513, 211, 433, 229, 218, 477, 495, 272, 416, 203,
	459, 484, 226, 437, 0, 0, 523, 205, 482, 456,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	479, 480, 239, 524, 215, 502, 207, 0, 501, 374,
	474, 483, 362, 352, 206, 481, 360, 351, 307, 655,
	656, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 493, 0, 200, 0, 452, 494, 525, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 469, 487, 498, 505, 511,
	512, 514, 515, 516, 517, 518, 520, 519, 373, 289,
	448, 306, 343, 0, 0, 391, 426, 227, 491, 449,
	698, 689, 642, 702, 644, 699, 700, 639, 640, 643,
	701, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 0,
	692, 629, 628, 0, 635, 636, 0, 645, 646, 648,
	652, 653, 654, 657, 658, 659, 667, 669, 670, 668,
	671, 672, 673, 676, 677, 678, 679, 674, 675, 680,
	627, 191, 208, 339, 0, 414, 271, 522, 500, 496,
	198, 210, 703, 245, 704, 0, 0, 708, 0, 0,
	0, 710, 709, 0, 711, 684, 683, 0, 0, 705,
	706, 0, 707, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 375, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 428, 429, 430,
	431, 432, 435, 436, 441, 442, 443, 444, 445, 453,
	454, 458, 476, 478, 490, 504, 509, 434, 281, 485,
	510, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	499, 455, 214, 422, 273, 236, 724, 0, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 626, 0, 0, 0, 253,
	631, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	235, 292, 354, 394, 460, 388, 638, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 633, 634, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 87, 0, 0, 188, 189,
	190, 717, 725, 726, 727, 728, 729, 718, 720, 0,
	0, 225, 719, 232, 649, 651, 650, 660, 661, 662,
	663, 664, 665, 666, 647, 722, 730, 731, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 609,
	623, 0, 637, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 620, 621, 0, 0, 0, 0, 691, 0, 622,
	0, 0, 630, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 690, 0, 0, 506, 0, 0, 688, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 378,
	421, 427, 0, 0, 0, 238, 0, 425, 392, 489,
	220, 267, 418, 398, 423, 405, 270, 0, 0, 424,
	342, 475, 412, 486, 507, 508, 246, 372, 497, 464,
	503, 521, 213, 243, 386, 457, 492, 447, 365, 471,
	472, 304, 446, 277, 195, 340, 513, 211, 433, 229,
	218, 477, 495, 272, 416, 203, 459, 484, 226, 437,
	0, 0, 523, 205, 482, 456, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 479, 480, 239, 524,
	215, 502, 207, 0, 501, 374, 474, 483, 362, 352,
	206, 481, 360, 351, 307, 655, 656, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 199, 493, 0, 200,
	0, 452, 494, 525, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 469, 487, 498, 505, 511, 512, 514, 515, 516,
	517, 518, 520, 519, 373, 289, 448, 306, 343, 0,
	0, 391, 426, 227, 491, 449, 698, 689, 642, 702,
	644, 699, 700, 639, 640, 643, 701, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 0, 692, 629, 628, 0,
	635, 636, 0, 645, 646, 648, 652, 653, 654, 657,
	658, 659, 667, 669, 670, 668, 671, 672, 673, 676,
	677, 678, 679, 674, 675, 680, 627, 191, 208, 339,
	0, 414, 271, 522, 500, 496, 198, 210, 703, 245,
	704, 0, 0, 708, 0, 0, 0, 710, 709, 0,
	711, 684, 683, 0, 0, 705, 706, 0, 707, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 428, 429, 430, 431, 432, 435, 436,
	441, 442, 443, 444, 445, 453, 454, 458, 476, 478,
	490, 504, 509, 434, 281, 485, 510, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 499, 455, 214, 422,
	273, 236, 724, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 626, 0, 0, 0, 253, 631, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 235, 292, 354, 394,
	460, 388, 638, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 633, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 87, 0, 0, 188, 189, 190, 717, 725, 726,
	727, 728, 729, 718, 720, 0, 0, 225, 719, 232,
	649, 651, 650, 660, 661, 662, 663, 664, 665, 666,
	647, 722, 730, 731, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 623, 0, 637, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 620, 621, 0,
	0, 0, 0, 691, 0, 622, 0, 0, 630, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 690, 0, 0,
	506, 0, 0, 688, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 427, 0, 0,
	0, 238, 0, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 0, 0, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 0,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 655, 656, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 493, 0, 200, 0, 452, 494, 525,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 0, 0, 391, 426, 227,
	491, 449, 698, 689, 642, 702, 644, 699, 700, 639,
	640, 643, 701, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 692, 629, 628, 0, 635, 636, 0, 645,
	646, 648, 652, 653, 654, 657, 658, 659, 667, 669,
	670, 668, 671, 672, 673, 676, 677, 678, 679, 674,
	675, 680, 627, 191, 208, 339, 0, 414, 271, 522,
	500, 496, 198, 210, 703, 245, 704, 0, 0, 708,
	0, 0, 0, 710, 709, 0, 711, 684, 683, 0,
	0, 705, 706, 0, 707, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 428,
	429, 430, 431, 432, 435, 436, 441, 442, 443, 444,
	445, 453, 454, 458, 476, 478, 490, 504, 509, 434,
	281, 485, 510, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 499, 455, 214, 422, 273, 236, 724, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 235, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 725, 726, 0, 0, 0, 0,
	1707, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 427, 0, 0, 0, 238, 0, 425,
	392, 489, 220, 267, 418, 398, 423, 405, 270, 0,
	0, 424, 342, 475, 412, 486, 507, 508, 246, 372,
	497, 464, 503, 521, 213, 243, 386, 457, 492, 447,
	365, 471, 472, 304, 446, 277, 195, 340, 513, 211,
	433, 229, 218, 477, 495, 272, 416, 203, 459, 484,
	226, 437, 0, 0, 523, 205, 482, 456, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 479, 480,
	239, 524, 215, 502, 207, 0, 501, 374, 474, 483,
	362, 352, 206, 481, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 493,
	0, 200, 0, 452, 494, 525, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 469, 487, 498, 505, 511, 512, 514,
	515, 516, 517, 518, 520, 519, 373, 289, 448, 306,
	343, 0, 0, 391, 426, 227, 491, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 353, 439,
	488, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 0, 191,
	208, 339, 0, 414, 271, 522, 500, 496, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 499, 455,
	214, 422, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 235, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 1033, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 0,
	0, 1032, 506, 0, 0, 0, 0, 0, 1029, 1030,
	336, 990, 305, 192, 212, 1023, 1027, 378, 421, 427,
	0, 0, 0, 238, 0, 425, 392, 489, 220, 267,
	418, 398, 423, 405, 270, 0, 0, 424, 342, 475,
	412, 486, 507, 508, 246, 372, 497, 464, 503, 521,
	213, 243, 386, 457, 492, 447, 365, 471, 472, 304,
	446, 277, 195, 340, 513, 211, 433, 229, 218, 477,
	495, 272, 416, 203, 459, 484, 226, 437, 0, 0,
	523, 205, 482, 456, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 479, 480, 239, 524, 215, 502,
	207, 0, 501, 374, 474, 483, 362, 352, 206, 481,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 493, 0, 200, 0, 452,
	494, 525, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 469,
	487, 498, 505, 511, 512, 514, 515, 516, 517, 518,
	520, 519, 373, 289, 448, 306, 343, 0, 0, 391,
	426, 227, 491, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 353, 439, 488, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 0, 191, 208, 339, 0, 414,
	271, 522, 500, 496, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 499, 455, 214, 422, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 0, 346, 467,
	468, 291, 364, 0, 0, 0, 78, 466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 396, 0, 197,
	0, 440, 237, 347, 344, 473, 265, 256, 252, 235,
	292, 354, 394, 460, 388, 0, 341, 0, 0, 450,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	379, 451, 269, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 470, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	427, 0, 0, 0, 238, 0, 425, 392, 489, 220,
	267, 418, 398, 423, 405, 270, 0, 0, 424, 342,
	475, 412, 486, 507, 508, 246, 372, 497, 464, 503,
	521, 213, 243, 386, 457, 492, 447, 365, 471, 472,
	304, 446, 277, 195, 340, 513, 211, 433, 229, 218,
	477, 495, 272, 416, 203, 459, 484, 226, 437, 0,
	0, 523, 205, 482, 456, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 479, 480, 239, 524, 215,
	502, 207, 0, 501, 374, 474, 483, 362, 352, 206,
	481, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 493, 0, 200, 0,
	452, 494, 525, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	469, 487, 498, 505, 511, 512, 514, 515, 516, 517,
	518, 520, 519, 373, 289, 448, 306, 343, 0, 0,
	391, 426, 227, 491, 449, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 544, 353, 439, 488, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 0, 191, 208, 339, 86,
	414, 271, 522, 500, 496, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 428, 429, 430, 431, 432, 435, 436, 441,
	442, 443, 444, 445, 453, 454, 458, 476, 478, 490,
	504, 509, 434, 281, 485, 510, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 499, 455, 214, 422, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 438,
	461, 462, 463, 465, 363, 249, 399, 0, 1378, 346,
	467, 468, 291, 466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 0, 0, 1380,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 396, 0, 197, 0, 440, 237, 347,
	344, 473, 265, 256, 252, 235, 292, 354, 394, 460,
	388, 0, 341, 0, 0, 450, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 379, 451, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 470, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	1205, 0, 1206, 1207, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 427, 0, 0, 0,
	238, 0, 425, 392, 489, 220, 267, 418, 398, 423,
	405, 270, 0, 0, 424, 342, 475, 412, 486, 507,
	508, 246, 372, 497, 464, 503, 521, 213, 243, 386,
	457, 492, 447, 365, 471, 472, 304, 446, 277, 195,
	340, 513, 211, 433, 229, 218, 477, 495, 272, 416,
	203, 459, 484, 226, 437, 0, 0, 523, 205, 482,
	456, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 479, 480, 239, 524, 215, 502, 207, 0, 501,
	374, 474, 483, 362, 352, 206, 481, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 199, 493, 0, 200, 0, 452, 494, 525, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 469, 487, 498, 505,
	511, 512, 514, 515, 516, 517, 518, 520, 519, 373,
	289, 448, 306, 343, 0, 0, 391, 426, 227, 491,
	449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	544, 353, 439, 488, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 0, 191, 208, 339, 0, 414, 271, 522, 500,
	496, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 428, 429,
	430, 431, 432, 435, 436, 441, 442, 443, 444, 445,
	453, 454, 458, 476, 478, 490, 504, 509, 434, 281,
	485, 510, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 499, 455, 214, 422, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 299, 359, 366, 395, 400,
	278, 254, 231, 419, 228, 438, 461, 462, 463, 465,
	363, 249, 399, 0, 364, 346, 467, 468, 291, 466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 396,
	0, 197, 0, 440, 237, 347, 344, 473, 265, 256,
	252, 235, 292, 354, 394, 460, 388, 0, 341, 0,
	0, 450, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 379, 451, 269, 0, 0, 0, 0, 188,
	189, 190, 1320, 1323, 0, 0, 0, 0, 1319, 1322,
	0, 0, 225, 1318, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 470, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 0, 0, 0, 506, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 427, 0, 0, 0, 238, 0, 425, 392,
	489, 220, 267, 418, 398, 423, 405, 270, 0, 0,
	424, 342, 475, 412, 486, 507, 508, 246, 372, 497,
	464, 503, 521, 213, 243, 386, 457, 492, 447, 365,
	471, 472, 304, 446, 277, 195, 340, 513, 211, 433,
	229, 218, 477, 495, 272, 416, 203, 459, 484, 226,
	437, 0, 0, 523, 205, 482, 456, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 479, 480, 239,
	524, 215, 502, 207, 0, 501, 374, 474, 483, 362,
	352, 206, 481, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 199, 493, 0,
	200, 0, 452, 494, 525, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 469, 487, 498, 505, 511, 512, 514, 515,
	516, 517, 518, 520, 519, 373, 289, 448, 306, 343,
	0, 0, 391, 426, 227, 491, 449, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 544, 353, 439, 488,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 0, 191, 208,
	339, 0, 414, 271, 522, 500, 496, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 428, 429, 430, 431, 432, 435,
	436, 441, 442, 443, 444, 445, 453, 454, 458, 476,
	478, 490, 504, 509, 434, 281, 485, 510, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 499, 455, 214,
	422, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 299, 359, 366, 395, 400, 278, 254, 231, 419,
	228, 438, 461, 462, 463, 465, 363, 249, 399, 0,
	0, 346, 467, 468, 291, 364, 0, 0, 0, 78,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 235, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 87, 0, 1359,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 427, 0, 0, 0, 238, 0, 425,
	392, 489, 220, 267, 418, 398, 423, 405, 270, 0,
	0, 424, 342, 475, 412, 486, 507, 508, 246, 372,
	497, 464, 503, 521, 213, 243, 386, 457, 492, 447,
	365, 471, 472, 304, 446, 277, 195, 340, 513, 211,
	433, 229, 218, 477, 495, 272, 416, 203, 459, 484,
	226, 437, 0, 0, 523, 205, 482, 456, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 479, 480,
	239, 524, 215, 502, 207, 0, 501, 374, 474, 483,
	362, 352, 206, 481, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 493,
	0, 200, 0, 452, 494, 525, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 469, 487, 498, 505, 511, 512, 514,
	515, 516, 517, 518, 520, 519, 373, 289, 448, 306,
	343, 0, 0, 391, 426, 227, 491, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 353, 439,
	488, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 0, 191,
	208, 339, 86, 414, 271, 522, 500, 496, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 499, 455,
	214, 422, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 235, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 378, 421, 427,
	0, 0, 0, 238, 0, 425, 392, 489, 220, 267,
	418, 398, 423, 405, 270, 0, 0, 424, 342, 475,
	412, 486, 507, 508, 246, 372, 497, 464, 503, 521,
	213, 243, 386, 457, 492, 447, 365, 471, 472, 304,
	446, 277, 195, 340, 513, 211, 433, 229, 218, 477,
	495, 272, 416, 203, 459, 484, 226, 437, 0, 0,
	523, 205, 482, 456, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 479, 480, 239, 524, 215, 502,
	207, 0, 501, 374, 474, 483, 362, 352, 206, 481,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 493, 0, 200, 0, 452,
	494, 525, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 469,
	487, 498, 505, 511, 512, 514, 515, 516, 517, 518,
	520, 519, 373, 289, 448, 306, 343, 0, 0, 391,
	426, 227, 491, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 353, 439, 488, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 0, 191, 208, 339, 0, 414,
	271, 522, 500, 496, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 499, 455, 214, 422, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 1826, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 235, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 1560, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 427, 0, 0, 0, 238,
	0, 425, 392, 489, 220, 267, 418, 398, 423, 405,
	270, 0, 1824, 424, 342, 475, 412, 486, 507, 508,
	246, 372, 497, 464, 503, 521, 213, 243, 386, 457,
	492, 447, 365, 471, 472, 304, 446, 277, 195, 340,
	513, 211, 433, 229, 218, 477, 495, 272, 416, 203,
	459, 484, 226, 437, 0, 0, 523, 205, 482, 456,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	479, 480, 239, 524, 215, 502, 207, 0, 501, 374,
	474, 483, 362, 352, 206, 481, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 493, 0, 200, 0, 452, 494, 525, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 469, 487, 498, 505, 511,
	512, 514, 515, 516, 517, 518, 520, 519, 373, 289,
	448, 306, 343, 0, 0, 391, 426, 227, 491, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	353, 439, 488, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	0, 191, 208, 339, 0, 414, 271, 522, 500, 496,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 375, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 428, 429, 430,
	431, 432, 435, 436, 441, 442, 443, 444, 445, 453,
	454, 458, 476, 478, 490, 504, 509, 434, 281, 485,
	510, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	499, 455, 214, 422, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	235, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 336, 990, 305, 192, 212, 988, 0, 378,
	421, 427, 0, 0, 0, 238, 0, 425, 392, 489,
	220, 267, 418, 398, 423, 405, 270, 0, 0, 424,
	342, 475, 412, 486, 507, 508, 246, 372, 497, 464,
	503, 521, 213, 243, 386, 457, 492, 447, 365, 471,
	472, 304, 446, 277, 195, 340, 513, 211, 433, 229,
	218, 477, 495, 272, 416, 203, 459, 484, 226, 437,
	0, 0, 523, 205, 482, 456, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 479, 480, 239, 524,
	215, 502, 207, 0, 501, 374, 474, 483, 362, 352,
	206, 481, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 199, 493, 0, 200,
	0, 452, 494, 525, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 469, 487, 498, 505, 511, 512, 514, 515, 516,
	517, 518, 520, 519, 373, 289, 448, 306, 343, 0,
	0, 391, 426, 227, 491, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 353, 439, 488, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 0, 191, 208, 339,
	0, 414, 271, 522, 500, 496, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 428, 429, 430, 431, 432, 435, 436,
	441, 442, 443, 444, 445, 453, 454, 458, 476, 478,
	490, 504, 509, 434, 281, 485, 510, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 499, 455, 214, 422,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	1826, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 235, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 1560, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 427, 0, 0,
	0, 238, 0, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 0, 0, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 0,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 493, 0, 200, 0, 452, 494, 525,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 0, 0, 391, 426, 227,
	491, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 353, 439, 488, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 0, 191, 208, 339, 0, 414, 271, 522,
	500, 496, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 428,
	429, 430, 431, 432, 435, 436, 441, 442, 443, 444,
	445, 453, 454, 458, 476, 478, 490, 504, 509, 434,
	281, 485, 510, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 499, 455, 214, 422, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 235, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 1359,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 506, 0, 0, 0,
	2980, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 427, 0, 0, 0, 238, 0, 425,
	392, 489, 220, 267, 418, 398, 423, 405, 270, 0,
	0, 424, 342, 475, 412, 486, 507, 508, 246, 372,
	497, 464, 503, 521, 213, 243, 386, 457, 492, 447,
	365, 471, 472, 304, 446, 277, 195, 340, 513, 211,
	433, 229, 218, 477, 495, 272, 416, 203, 459, 484,
	226, 437, 0, 0, 523, 205, 482, 456, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 479, 480,
	239, 524, 215, 502, 207, 0, 501, 374, 474, 483,
	362, 352, 206, 481, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 493,
	0, 200, 0, 452, 494, 525, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 469, 487, 498, 505, 511, 512, 514,
	515, 516, 517, 518, 520, 519, 373, 289, 448, 306,
	343, 0, 0, 391, 426, 227, 491, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 353, 439,
	488, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 0, 191,
	208, 339, 0, 414, 271, 522, 500, 496, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 499, 455,
	214, 422, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 235, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	1703, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 378, 421, 427,
	0, 0, 0, 238, 0, 425, 392, 489, 220, 267,
	418, 398, 423, 405, 270, 0, 0, 424, 342, 475,
	412, 486, 507, 508, 246, 372, 497, 464, 503, 521,
	213, 243, 386, 457, 492, 447, 365, 471, 472, 304,
	446, 277, 195, 340, 513, 211, 433, 229, 218, 477,
	495, 272, 416, 203, 459, 484, 226, 437, 0, 0,
	523, 205, 482, 456, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 479, 480, 239, 524, 215, 502,
	207, 0, 501, 374, 474, 483, 362, 352, 206, 481,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 493, 0, 200, 0, 452,
	494, 525, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 469,
	487, 498, 505, 511, 512, 514, 515, 516, 517, 518,
	520, 519, 373, 289, 448, 306, 343, 0, 0, 391,
	426, 227, 491, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 353, 439, 488, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 0, 191, 208, 339, 0, 414,
	271, 522, 500, 496, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 499, 455, 214, 422, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 235, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 2178, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 427, 0, 0, 0, 238,
	0, 425, 392, 489, 220, 267, 418, 398, 423, 405,
	270, 0, 0, 424, 342, 475, 412, 486, 507, 508,
	246, 372, 497, 464, 503, 521, 213, 243, 386, 457,
	492, 447, 365, 471, 472, 304, 446, 277, 195, 340,
	513, 211, 433, 229, 218, 477, 495, 272, 416, 203,
	459, 484, 226, 437, 0, 0, 523, 205, 482, 456,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	479, 480, 239, 524, 215, 502, 207, 0, 501, 374,
	474, 483, 362, 352, 206, 481, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 493, 0, 200, 0, 452, 494, 525, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 469, 487, 498, 505, 511,
	512, 514, 515, 516, 517, 518, 520, 519, 373, 289,
	448, 306, 343, 0, 0, 391, 426, 227, 491, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	353, 439, 488, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	0, 191, 208, 339, 0, 414, 271, 522, 500, 496,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 375, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 428, 429, 430,
	431, 432, 435, 436, 441, 442, 443, 444, 445, 453,
	454, 458, 476, 478, 490, 504, 509, 434, 281, 485,
	510, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	499, 455, 214, 422, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	235, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 2163, 0, 0, 0, 2164, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 378,
	421, 427, 0, 0, 0, 238, 0, 425, 392, 489,
	220, 267, 418, 398, 423, 405, 270, 0, 0, 424,
	342, 475, 412, 486, 507, 508, 246, 372, 497, 464,
	503, 521, 213, 243, 386, 457, 492, 447, 365, 471,
	472, 304, 446, 277, 195, 340, 513, 211, 433, 229,
	218, 477, 495, 272, 416, 203, 459, 484, 226, 437,
	0, 0, 523, 205, 482, 456, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 479, 480, 239, 524,
	215, 502, 207, 0, 501, 374, 474, 483, 362, 352,
	206, 481, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 199, 493, 0, 200,
	0, 452, 494, 525, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 469, 487, 498, 505, 511, 512, 514, 515, 516,
	517, 518, 520, 519, 373, 289, 448, 306, 343, 0,
	0, 391, 426, 227, 491, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 353, 439, 488, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 0, 191, 208, 339,
	0, 414, 271, 522, 500, 496, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 428, 429, 430, 431, 432, 435, 436,
	441, 442, 443, 444, 445, 453, 454, 458, 476, 478,
	490, 504, 509, 434, 281, 485, 510, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 499, 455, 214, 422,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 1403, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 235, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 1402, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 427, 0, 0,
	0, 238, 0, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 0, 0, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 0,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 493, 0, 200, 0, 452, 494, 525,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 0, 0, 391, 426, 227,
	491, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 353, 439, 488, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 0, 191, 208, 339, 0, 414, 271, 522,
	500, 496, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 428,
	429, 430, 431, 432, 435, 436, 441, 442, 443, 444,
	445, 453, 454, 458, 476, 478, 490, 504, 509, 434,
	281, 485, 510, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 499, 455, 214, 422, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 235, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 506, 0, 0, 0,
	3101, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 427, 0, 0, 0, 238, 0, 425,
	392, 489, 220, 267, 418, 398, 423, 405, 270, 0,
	0, 424, 342, 475, 412, 486, 507, 508, 246, 372,
	497, 464, 503, 521, 213, 243, 386, 457, 492, 447,
	365, 471, 472, 304, 446, 277, 195, 340, 513, 211,
	433, 229, 218, 477, 495, 272, 416, 203, 459, 484,
	226, 437, 0, 0, 523, 205, 482, 456, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 479, 480,
	239, 524, 215, 502, 207, 0, 501, 374, 474, 483,
	362, 352, 206, 481, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 493,
	0, 200, 0, 452, 494, 525, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 469, 487, 498, 505, 511, 512, 514,
	515, 516, 517, 518, 520, 519, 373, 289, 448, 306,
	343, 0, 0, 391, 426, 227, 491, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 353, 439,
	488, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 0, 191,
	208, 339, 0, 414, 271, 522, 500, 496, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 499, 455,
	214, 422, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 235, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	1560, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 378, 421, 427,
	0, 0, 0, 238, 0, 425, 392, 489, 220, 267,
	418, 398, 423, 405, 270, 0, 0, 424, 342, 475,
	412, 486, 507, 508, 246, 372, 497, 464, 503, 521,
	213, 243, 386, 457, 492, 447, 365, 471, 472, 304,
	446, 277, 195, 340, 513, 211, 433, 229, 218, 477,
	495, 272, 416, 203, 459, 484, 226, 437, 0, 0,
	523, 205, 482, 456, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 479, 480, 239, 524, 215, 502,
	207, 0, 501, 374, 474, 483, 362, 352, 206, 481,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 493, 0, 200, 0, 452,
	494, 525, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 469,
	487, 498, 505, 511, 512, 514, 515, 516, 517, 518,
	520, 519, 373, 289, 448, 306, 343, 0, 0, 391,
	426, 227, 491, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 353, 439, 488, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 0, 191, 208, 339, 0, 414,
	271, 522, 500, 496, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 499, 455, 214, 422, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 235, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 506, 0,
	0, 0, 2980, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 427, 0, 0, 0, 238,
	0, 425, 392, 489, 220, 267, 418, 398, 423, 405,
	270, 0, 0, 424, 342, 475, 412, 486, 507, 508,
	246, 372, 497, 464, 503, 521, 213, 243, 386, 457,
	492, 447, 365, 471, 472, 304, 446, 277, 195, 340,
	513, 211, 433, 229, 218, 477, 495, 272, 416, 203,
	459, 484, 226, 437, 0, 0, 523, 205, 482, 456,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	479, 480, 239, 524, 215, 502, 207, 0, 501, 374,
	474, 483, 362, 352, 206, 481, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 493, 0, 200, 0, 452, 494, 525, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 469, 487, 498, 505, 511,
	512, 514, 515, 516, 517, 518, 520, 519, 373, 289,
	448, 306, 343, 0, 0, 391, 426, 227, 491, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	353, 439, 488, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	0, 191, 208, 339, 0, 414, 271, 522, 500, 496,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 375, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 428, 429, 430,
	431, 432, 435, 436, 441, 442, 443, 444, 445, 453,
	454, 458, 476, 478, 490, 504, 509, 434, 281, 485,
	510, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	499, 455, 214, 422, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	235, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 378,
	421, 427, 0, 0, 0, 238, 0, 425, 392, 489,
	220, 267, 418, 398, 423, 405, 270, 0, 0, 424,
	342, 475, 412, 486, 507, 508, 246, 372, 497, 464,
	503, 521, 213, 243, 386, 457, 492, 447, 365, 471,
	472, 304, 446, 277, 195, 340, 513, 211, 433, 229,
	218, 477, 495, 272, 416, 203, 459, 484, 226, 437,
	0, 0, 523, 205, 482, 456, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 479, 480, 239, 524,
	215, 502, 207, 0, 501, 374, 474, 483, 362, 352,
	206, 481, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 199, 493, 0, 200,
	0, 452, 494, 525, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 469, 487, 498, 505, 511, 512, 514, 515, 516,
	517, 518, 520, 519, 373, 289, 448, 306, 343, 0,
	0, 391, 426, 227, 491, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 353, 439, 488, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 0, 191, 208, 339,
	0, 414, 271, 522, 500, 496, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 428, 429, 430, 431, 432, 435, 436,
	441, 442, 443, 444, 445, 453, 454, 458, 476, 478,
	490, 504, 509, 434, 281, 485, 510, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 499, 455, 214, 422,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 235, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 427, 0, 0,
	0, 238, 0, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 0, 0, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 0,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 493, 0, 200, 0, 452, 494, 525,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 0, 0, 391, 426, 227,
	491, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 353, 439, 488, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 0, 191, 208, 339, 0, 414, 271, 522,
	500, 496, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 428,
	429, 430, 431, 432, 435, 436, 441, 442, 443, 444,
	445, 453, 454, 458, 476, 478, 490, 504, 509, 434,
	281, 485, 510, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 499, 455, 214, 422, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 235, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 427, 0, 0, 0, 238, 0, 425,
	392, 489, 220, 267, 418, 398, 423, 405, 270, 0,
	0, 424, 342, 475, 412, 486, 507, 508, 246, 372,
	497, 464, 503, 521, 213, 243, 386, 457, 492, 447,
	365, 471, 472, 304, 446, 277, 195, 340, 513, 211,
	433, 229, 218, 477, 495, 272, 416, 203, 459, 484,
	226, 437, 0, 0, 523, 205, 482, 456, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 479, 480,
	239, 524, 215, 502, 207, 0, 501, 374, 474, 483,
	362, 352, 206, 481, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 493,
	0, 200, 0, 452, 494, 525, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 469, 487, 498, 505, 511, 512, 514,
	515, 516, 517, 518, 520, 519, 373, 289, 448, 306,
	343, 0, 0, 391, 426, 227, 491, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 353, 439,
	488, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 0, 191,
	208, 339, 0, 414, 271, 522, 500, 496, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 499, 455,
	214, 422, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 235, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 378, 421, 427,
	0, 0, 0, 238, 0, 425, 392, 489, 220, 267,
	418, 398, 423, 405, 270, 0, 0, 424, 342, 475,
	412, 486, 507, 508, 246, 372, 497, 464, 503, 521,
	213, 243, 386, 457, 492, 447, 365, 471, 472, 304,
	446, 277, 195, 340, 513, 211, 433, 229, 218, 477,
	495, 272, 416, 203, 459, 484, 226, 437, 0, 0,
	523, 205, 482, 456, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 479, 480, 239, 524, 215, 502,
	207, 0, 501, 374, 474, 483, 362, 352, 206, 481,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 493, 0, 200, 0, 452,
	494, 525, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 469,
	487, 498, 505, 511, 512, 514, 515, 516, 517, 518,
	520, 519, 373, 289, 448, 306, 343, 0, 0, 391,
	426, 227, 491, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 353, 439, 488, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 0, 191, 208, 339, 0, 414,
	271, 522, 500, 496, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 499, 455, 214, 422, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 235, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 427, 0, 0, 0, 238,
	0, 425, 392, 489, 220, 267, 418, 398, 423, 405,
	270, 0, 0, 424, 342, 475, 412, 486, 507, 508,
	246, 372, 497, 464, 503, 521, 213, 243, 386, 457,
	492, 447, 365, 471, 472, 304, 446, 277, 195, 340,
	513, 211, 433, 229, 218, 477, 495, 272, 416, 203,
	459, 484, 226, 437, 0, 0, 523, 205, 482, 456,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	479, 480, 239, 524, 215, 502, 207, 0, 501, 374,
	474, 483, 362, 352, 206, 481, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 493, 0, 200, 0, 452, 494, 525, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 469, 487, 498, 505, 511,
	512, 514, 515, 516, 517, 518, 520, 519, 373, 289,
	448, 306, 343, 0, 0, 391, 426, 227, 491, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	353, 439, 488, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	0, 191, 208, 339, 1658, 414, 271, 522, 500, 496,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 375, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 428, 429, 430,
	431, 432, 435, 436, 441, 442, 443, 444, 445, 453,
	454, 458, 476, 478, 490, 504, 509, 434, 281, 485,
	510, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	499, 455, 214, 422, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 1528, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	235, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 378,
	421, 427, 0, 0, 0, 238, 0, 425, 392, 489,
	220, 267, 418, 398, 423, 405, 270, 0, 0, 424,
	342, 475, 412, 486, 507, 508, 246, 372, 497, 464,
	503, 521, 213, 243, 386, 457, 492, 447, 365, 471,
	472, 304, 446, 277, 195, 340, 513, 211, 433, 229,
	218, 477, 495, 272, 416, 203, 459, 484, 226, 437,
	0, 0, 523, 205, 482, 456, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 479, 480, 239, 524,
	215, 502, 207, 0, 501, 374, 474, 483, 362, 352,
	206, 481, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 199, 493, 0, 200,
	0, 452, 494, 525, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 469, 487, 498, 505, 511, 512, 514, 515, 516,
	517, 518, 520, 519, 373, 289, 448, 306, 343, 0,
	0, 391, 426, 227, 491, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 353, 439, 488, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 0, 191, 208, 339,
	0, 414, 271, 522, 500, 496, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 428, 429, 430, 431, 432, 435, 436,
	441, 442, 443, 444, 445, 453, 454, 458, 476, 478,
	490, 504, 509, 434, 281, 485, 510, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 499, 455, 214, 422,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 1526, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 235, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 427, 0, 0,
	0, 238, 0, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 0, 0, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 0,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 493, 0, 200, 0, 452, 494, 525,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 0, 0, 391, 426, 227,
	491, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 353, 439, 488, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 0, 191, 208, 339, 0, 414, 271, 522,
	500, 496, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 428,
	429, 430, 431, 432, 435, 436, 441, 442, 443, 444,
	445, 453, 454, 458, 476, 478, 490, 504, 509, 434,
	281, 485, 510, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 499, 455, 214, 422, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 1524, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 235, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 427, 0, 0, 0, 238, 0, 425,
	392, 489, 220, 267, 418, 398, 423, 405, 270, 0,
	0, 424, 342, 475, 412, 486, 507, 508, 246, 372,
	497, 464, 503, 521, 213, 243, 386, 457, 492, 447,
	365, 471, 472, 304, 446, 277, 195, 340, 513, 211,
	433, 229, 218, 477, 495, 272, 416, 203, 459, 484,
	226, 437, 0, 0, 523, 205, 482, 456, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 479, 480,
	239, 524, 215, 502, 207, 0, 501, 374, 474, 483,
	362, 352, 206, 481, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 493,
	0, 200, 0, 452, 494, 525, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 469, 487, 498, 505, 511, 512, 514,
	515, 516, 517, 518, 520, 519, 373, 289, 448, 306,
	343, 0, 0, 391, 426, 227, 491, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 353, 439,
	488, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 0, 191,
	208, 339, 0, 414, 271, 522, 500, 496, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 499, 455,
	214, 422, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	1522, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 235, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 378, 421, 427,
	0, 0, 0, 238, 0, 425, 392, 489, 220, 267,
	418, 398, 423, 405, 270, 0, 0, 424, 342, 475,
	412, 486, 507, 508, 246, 372, 497, 464, 503, 521,
	213, 243, 386, 457, 492, 447, 365, 471, 472, 304,
	446, 277, 195, 340, 513, 211, 433, 229, 218, 477,
	495, 272, 416, 203, 459, 484, 226, 437, 0, 0,
	523, 205, 482, 456, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 479, 480, 239, 524, 215, 502,
	207, 0, 501, 374, 474, 483, 362, 352, 206, 481,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 493, 0, 200, 0, 452,
	494, 525, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 469,
	487, 498, 505, 511, 512, 514, 515, 516, 517, 518,
	520, 519, 373, 289, 448, 306, 343, 0, 0, 391,
	426, 227, 491, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 353, 439, 488, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 0, 191, 208, 339, 0, 414,
	271, 522, 500, 496, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 499, 455, 214, 422, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 1520, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 235, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 427, 0, 0, 0, 238,
	0, 425, 392, 489, 220, 267, 418, 398, 423, 405,
	270, 0, 0, 424, 342, 475, 412, 486, 507, 508,
	246, 372, 497, 464, 503, 521, 213, 243, 386, 457,
	492, 447, 365, 471, 472, 304, 446, 277, 195, 340,
	513, 211, 433, 229, 218, 477, 495, 272, 416, 203,
	459, 484, 226, 437, 0, 0, 523, 205, 482, 456,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	479, 480, 239, 524, 215, 502, 207, 0, 501, 374,
	474, 483, 362, 352, 206, 481, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 493, 0, 200, 0, 452, 494, 525, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 469, 487, 498, 505, 511,
	512, 514, 515, 516, 517, 518, 520, 519, 373, 289,
	448, 306, 343, 0, 0, 391, 426, 227, 491, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	353, 439, 488, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	0, 191, 208, 339, 0, 414, 271, 522, 500, 496,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 375, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 428, 429, 430,
	431, 432, 435, 436, 441, 442, 443, 444, 445, 453,
	454, 458, 476, 478, 490, 504, 509, 434, 281, 485,
	510, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	499, 455, 214, 422, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 1516, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	235, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 378,
	421, 427, 0, 0, 0, 238, 0, 425, 392, 489,
	220, 267, 418, 398, 423, 405, 270, 0, 0, 424,
	342, 475, 412, 486, 507, 508, 246, 372, 497, 464,
	503, 521, 213, 243, 386, 457, 492, 447, 365, 471,
	472, 304, 446, 277, 195, 340, 513, 211, 433, 229,
	218, 477, 495, 272, 416, 203, 459, 484, 226, 437,
	0, 0, 523, 205, 482, 456, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 479, 480, 239, 524,
	215, 502, 207, 0, 501, 374, 474, 483, 362, 352,
	206, 481, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 199, 493, 0, 200,
	0, 452, 494, 525, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 469, 487, 498, 505, 511, 512, 514, 515, 516,
	517, 518, 520, 519, 373, 289, 448, 306, 343, 0,
	0, 391, 426, 227, 491, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 353, 439, 488, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 0, 191, 208, 339,
	0, 414, 271, 522, 500, 496, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 428, 429, 430, 431, 432, 435, 436,
	441, 442, 443, 444, 445, 453, 454, 458, 476, 478,
	490, 504, 509, 434, 281, 485, 510, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 499, 455, 214, 422,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 1514, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 235, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 427, 0, 0,
	0, 238, 0, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 0, 0, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 0,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 493, 0, 200, 0, 452, 494, 525,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 0, 0, 391, 426, 227,
	491, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 353, 439, 488, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 0, 191, 208, 339, 0, 414, 271, 522,
	500, 496, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 428,
	429, 430, 431, 432, 435, 436, 441, 442, 443, 444,
	445, 453, 454, 458, 476, 478, 490, 504, 509, 434,
	281, 485, 510, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 499, 455, 214, 422, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 1512, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 235, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 427, 0, 0, 0, 238, 0, 425,
	392, 489, 220, 267, 418, 398, 423, 405, 270, 0,
	0, 424, 342, 475, 412, 486, 507, 508, 246, 372,
	497, 464, 503, 521, 213, 243, 386, 457, 492, 447,
	365, 471, 472, 304, 446, 277, 195, 340, 513, 211,
	433, 229, 218, 477, 495, 272, 416, 203, 459, 484,
	226, 437, 0, 0, 523, 205, 482, 456, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 479, 480,
	239, 524, 215, 502, 207, 0, 501, 374, 474, 483,
	362, 352, 206, 481, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 493,
	0, 200, 0, 452, 494, 525, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 469, 487, 498, 505, 511, 512, 514,
	515, 516, 517, 518, 520, 519, 373, 289, 448, 306,
	343, 0, 0, 391, 426, 227, 491, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 353, 439,
	488, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 0, 191,
	208, 339, 0, 414, 271, 522, 500, 496, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 499, 455,
	214, 422, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 235, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 1487, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 378, 421, 427,
	0, 0, 0, 238, 0, 425, 392, 489, 220, 267,
	418, 398, 423, 405, 270, 0, 0, 424, 342, 475,
	412, 486, 507, 508, 246, 372, 497, 464, 503, 521,
	213, 243, 386, 457, 492, 447, 365, 471, 472, 304,
	446, 277, 195, 340, 513, 211, 433, 229, 218, 477,
	495, 272, 416, 203, 459, 484, 226, 437, 0, 0,
	523, 205, 482, 456, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 479, 480, 239, 524, 215, 502,
	207, 0, 501, 374, 474, 483, 362, 352, 206, 481,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 493, 0, 200, 0, 452,
	494, 525, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 469,
	487, 498, 505, 511, 512, 514, 515, 516, 517, 518,
	520, 519, 373, 289, 448, 306, 343, 0, 0, 391,
	426, 227, 491, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 353, 439, 488, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 0, 191, 208, 339, 0, 414,
	271, 522, 500, 496, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 499, 455, 214, 422, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 1387, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 235, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 427, 0, 0, 0, 238,
	0, 425, 392, 489, 220, 267, 418, 398, 423, 405,
	270, 0, 0, 424, 342, 475, 412, 486, 507, 508,
	246, 372, 497, 464, 503, 521, 213, 243, 386, 457,
	492, 447, 365, 471, 472, 304, 446, 277, 195, 340,
	513, 211, 433, 229, 218, 477, 495, 272, 416, 203,
	459, 484, 226, 437, 0, 0, 523, 205, 482, 456,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	479, 480, 239, 524, 215, 502, 207, 0, 501, 374,
	474, 483, 362, 352, 206, 481, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 493, 0, 200, 0, 452, 494, 525, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 469, 487, 498, 505, 511,
	512, 514, 515, 516, 517, 518, 520, 519, 373, 289,
	448, 306, 343, 0, 0, 391, 426, 227, 491, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	353, 439, 488, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	0, 191, 208, 339, 0, 414, 271, 522, 500, 496,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 375, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 428, 429, 430,
	431, 432, 435, 436, 441, 442, 443, 444, 445, 453,
	454, 458, 476, 478, 490, 504, 509, 434, 281, 485,
	510, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	499, 455, 214, 422, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	235, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 1182, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 378,
	421, 427, 0, 0, 0, 238, 0, 425, 392, 489,
	220, 267, 418, 398, 423, 405, 270, 0, 0, 424,
	342, 475, 412, 486, 507, 508, 246, 372, 497, 464,
	503, 521, 213, 243, 386, 457, 492, 447, 365, 471,
	472, 304, 446, 277, 195, 340, 513, 211, 433, 229,
	218, 477, 495, 272, 416, 203, 459, 484, 226, 437,
	0, 0, 523, 205, 482, 456, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 479, 480, 239, 524,
	215, 502, 207, 0, 501, 374, 474, 483, 362, 352,
	206, 481, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 199, 493, 0, 200,
	0, 452, 494, 525, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 469, 487, 498, 505, 511, 512, 514, 515, 516,
	517, 518, 520, 519, 373, 289, 448, 306, 343, 0,
	0, 391, 426, 227, 491, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 353, 439, 488, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 0, 191, 208, 339,
	0, 414, 271, 522, 500, 496, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 428, 429, 430, 431, 432, 435, 436,
	441, 442, 443, 444, 445, 453, 454, 458, 476, 478,
	490, 504, 509, 434, 281, 485, 510, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 499, 455, 214, 422,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 235, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 427, 0, 0,
	0, 238, 0, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 0, 0, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 0,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 493, 0, 200, 0, 452, 494, 525,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 0, 0, 391, 426, 227,
	491, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 353, 439, 488, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 0, 191, 208, 339, 0, 414, 271, 522,
	500, 496, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 795, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 428,
	429, 430, 431, 432, 435, 436, 441, 442, 443, 444,
	445, 453, 454, 458, 476, 478, 490, 504, 509, 434,
	281, 485, 510, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 499, 455, 214, 422, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 235, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 601, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 427, 0, 0, 0, 238, 0, 425,
	392, 489, 220, 267, 418, 398, 423, 405, 270, 0,
	0, 424, 342, 475, 412, 486, 507, 508, 246, 372,
	497, 464, 503, 521, 213, 243, 386, 457, 492, 447,
	365, 471, 472, 304, 446, 277, 195, 340, 513, 211,
	433, 229, 218, 477, 495, 272, 416, 203, 459, 484,
	226, 437, 0, 0, 523, 205, 482, 456, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 479, 480,
	239, 524, 215, 502, 207, 0, 501, 374, 474, 483,
	362, 352, 206, 481, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 493,
	0, 200, 0, 452, 494, 525, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 469, 487, 498, 505, 511, 512, 514,
	515, 516, 517, 518, 520, 519, 373, 289, 448, 306,
	343, 0, 0, 391, 426, 227, 491, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 353, 439,
	488, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 0, 191,
	208, 339, 0, 414, 271, 522, 500, 496, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 600, 485, 510, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 499, 455,
	214, 422, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 364, 346, 467, 468, 291, 466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	440, 237, 347, 344, 473, 265, 256, 252, 235, 292,
	354, 394, 460, 388, 0, 341, 0, 0, 450, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	451, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 470, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 0,
	547, 0, 506, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 378, 421, 427,
	0, 0, 0, 238, 0, 425, 392, 489, 220, 267,
	418, 398, 423, 405, 270, 0, 0, 424, 342, 475,
	412, 486, 507, 508, 246, 372, 497, 464, 503, 521,
	213, 243, 386, 457, 492, 447, 365, 471, 472, 304,
	446, 277, 195, 340, 513, 211, 433, 229, 218, 477,
	495, 272, 416, 203, 459, 484, 226, 437, 0, 0,
	523, 205, 482, 456, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 479, 480, 239, 524, 215, 502,
	207, 0, 501, 374, 474, 483, 362, 352, 206, 481,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 493, 0, 200, 0, 452,
	494, 525, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 469,
	487, 498, 505, 511, 512, 514, 515, 516, 517, 518,
	520, 519, 373, 289, 448, 306, 343, 0, 0, 391,
	426, 227, 491, 449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 353, 439, 488, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 0, 191, 208, 339, 0, 414,
	271, 522, 500, 496, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 428, 429, 430, 431, 432, 435, 436, 441, 442,
	443, 444, 445, 453, 454, 458, 476, 478, 490, 504,
	509, 434, 281, 485, 510, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 499, 455, 214, 422, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 438, 461,
	462, 463, 465, 363, 249, 399, 0, 364, 346, 467,
	468, 291, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 440, 237, 347, 344,
	473, 265, 256, 252, 235, 292, 354, 394, 460, 388,
	0, 341, 0, 0, 450, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 451, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 470, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 427, 0, 0, 0, 238,
	0, 425, 392, 489, 220, 267, 418, 398, 423, 405,
	270, 0, 0, 424, 342, 475, 412, 486, 507, 508,
	246, 372, 497, 464, 503, 521, 213, 243, 386, 457,
	492, 447, 365, 471, 472, 304, 446, 277, 195, 340,
	513, 211, 433, 229, 218, 477, 495, 272, 416, 203,
	459, 484, 226, 437, 0, 0, 523, 205, 482, 456,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	479, 480, 239, 524, 215, 502, 207, 0, 501, 374,
	474, 483, 362, 352, 206, 481, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 493, 0, 200, 0, 452, 494, 525, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 469, 487, 498, 505, 511,
	512, 514, 515, 516, 517, 518, 520, 519, 373, 289,
	448, 306, 343, 0, 0, 391, 426, 227, 491, 449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	353, 439, 488, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	0, 191, 208, 339, 0, 414, 271, 522, 500, 496,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 3109, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 428, 429, 430,
	431, 432, 435, 436, 441, 442, 443, 444, 445, 453,
	454, 458, 476, 478, 490, 504, 509, 434, 281, 485,
	510, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	499, 455, 214, 422, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 438, 461, 462, 463, 465, 363,
	249, 399, 0, 364, 346, 467, 468, 291, 466, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 440, 237, 347, 344, 473, 265, 256, 252,
	235, 292, 354, 394, 460, 388, 0, 341, 0, 0,
	450, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 451, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 470, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 378,
	421, 427, 0, 0, 0, 238, 0, 425, 392, 489,
	220, 267, 418, 398, 423, 405, 270, 0, 0, 424,
	342, 475, 412, 486, 507, 508, 246, 372, 497, 464,
	503, 521, 213, 243, 386, 457, 492, 447, 365, 471,
	472, 304, 446, 277, 195, 340, 513, 211, 433, 229,
	218, 477, 495, 272, 416, 203, 459, 484, 226, 437,
	0, 0, 523, 205, 482, 456, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 479, 480, 239, 524,
	215, 502, 207, 0, 501, 374, 474, 483, 362, 352,
	206, 481, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 199, 493, 0, 200,
	0, 452, 494, 525, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 469, 487, 498, 505, 511, 512, 514, 515, 516,
	517, 518, 520, 519, 373, 289, 448, 306, 343, 0,
	0, 391, 426, 227, 491, 449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 353, 439, 488, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 0, 191, 208, 339,
	0, 414, 271, 522, 500, 496, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 428, 429, 430, 431, 432, 435, 436,
	441, 442, 443, 444, 445, 453, 454, 458, 476, 478,
	490, 504, 509, 434, 281, 485, 510, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 499, 455, 214, 422,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	438, 461, 462, 463, 465, 363, 249, 399, 0, 364,
	346, 467, 468, 291, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 440, 237,
	347, 344, 473, 265, 256, 252, 235, 292, 354, 394,
	460, 388, 0, 341, 0, 0, 450, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 451, 269,
	0, 0, 0, 0, 188, 2677, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 470,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 427, 0, 0,
	0, 238, 0, 425, 392, 489, 220, 267, 418, 398,
	423, 405, 270, 0, 0, 424, 342, 475, 412, 486,
	507, 508, 246, 372, 497, 464, 503, 521, 213, 243,
	386, 457, 492, 447, 365, 471, 472, 304, 446, 277,
	195, 340, 513, 211, 433, 229, 218, 477, 495, 272,
	416, 203, 459, 484, 226, 437, 0, 0, 523, 205,
	482, 456, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 479, 480, 239, 524, 215, 502, 207, 0,
	501, 374, 474, 483, 362, 352, 206, 481, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 493, 0, 200, 0, 452, 494, 525,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 469, 487, 498,
	505, 511, 512, 514, 515, 516, 517, 518, 520, 519,
	373, 289, 448, 306, 343, 0, 0, 391, 426, 227,
	491, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 353, 439, 488, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 0, 191, 208, 339, 0, 414, 271, 522,
	500, 496, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 428,
	429, 430, 431, 432, 435, 436, 441, 442, 443, 444,
	445, 453, 454, 458, 476, 478, 490, 504, 509, 434,
	281, 485, 510, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 499, 455, 214, 422, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 438, 461, 462, 463,
	465, 363, 249, 399, 0, 364, 346, 467, 468, 291,
	466, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 440, 237, 347, 344, 473, 265,
	256, 252, 235, 292, 354, 394, 460, 388, 0, 341,
	0, 0, 450, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 451, 269, 0, 0, 0, 0,
	188, 2159, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 470, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 427, 0, 0, 0, 238, 0, 425,
	392, 489, 220, 267, 418, 398, 423, 405, 270, 0,
	0, 424, 342, 475, 412, 486, 507, 508, 246, 372,
	497, 464, 503, 521, 213, 243, 386, 457, 492, 447,
	365, 471, 472, 304, 446, 277, 195, 340, 513, 211,
	433, 229, 218, 477, 495, 272, 416, 203, 459, 484,
	226, 437, 0, 0, 523, 205, 482, 456, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 479, 480,
	239, 524, 215, 502, 207, 0, 501, 374, 474, 483,
	362, 352, 206, 481, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 493,
	0, 200, 0, 452, 494, 525, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 469, 487, 498, 505, 511, 512, 514,
	515, 516, 517, 518, 520, 519, 373, 289, 448, 306,
	343, 0, 0, 391, 426, 227, 491, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 353, 439,
	488, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 0, 191,
	208, 339, 0, 414, 271, 522, 500, 496, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 428, 429, 430, 431, 432,
	435, 436, 441, 442, 443, 444, 445, 453, 454, 458,
	476, 478, 490, 504, 509, 434, 281, 485, 510, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 499, 455,
	214, 422, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 438, 461, 462, 463, 465, 363, 249, 399,
	0, 0, 346, 467, 468, 291,
}

var yyPact = [...]int{
	3401, -1000, -404, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2139, 2246, -1000, -1000,
	-1000, -1000, 2317, -1000, 828, 1863, -1000, 2131, 4860, -1000,
	43209, 565, -1000, 41997, 564, 123, 43209, -1000, 178, -1000,
	169, 43209, 173, 41391, -1000, -1000, -256, 18959, 2077, 55,
	52, 43209, -1000, -1000, -1000, -1000, 2289, 1876, -1000, 380,
	-1000, -1000, -1000, -1000, -1000, -1000, 40785, -1000, -1000, -1000,
	2151, 2183, 2330, 717, 2085, -1000, 2216, 1876, -1000, 18959,
	2267, 2203, 18353, -1000, 18353, 487, -1000, -1000, 14101, -1000,
	-1000, 25029, 43209, 31089, 500, -1000, 2131, -1000, -1000, -1000,
	106, -1000, 384, 1772, -1000, 1771, -1000, 779, 857, 409,
	523, 504, 407, 406, 405, 393, 392, 391, 390, 389,
	416, -1000, 757, 757, -104, -105, 354, 551, 469, 469,
	512, 2106, 2104, -1000, 769, -1000, 757, 757, 757, 363,
	757, 757, 757, 757, 331, 316, 757, 757, 757, 757,
	757, 757, 757, 757, 757, 757, 757, 757, 757, 757,
	757, 757, 757, 357, 2131, 289, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 43209, 183, 43209, -1000, 643,
	43209, 881, 881, 103, 881, 881, 881, 881, 184, 747,
	49, -1000, 182, 263, 152, 286, 880, 303, -1000, -1000,
	271, 880, 1345, -1000, 746, 159, -1000, 881, 881, -1000,
	11657, 221, 11657, 11657, -1000, 2115, -1000, -1000, -1000, -1000,
	1349, -1000, 510, -1000, -1000, -1000, -1000, 43209, 40179, 383,
	789, -1000, -1000, -1000, 66, -1000, -1000, 1484, 1058, 18959,
	1220, -1000, 1536, 696, -1000, -1000, -1000, -1000, -1000, 607,
	19565, 19565, 19565, 19565, -1000, -1000, 1548, 1548, 1548, 1548,
	19565, 1548, -1000, 1548, 1548, 1548, 1548, 18959, 1548, 1548,
	1548, -1000, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548,
	1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548,
	1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548,
	1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548,
	1548, 1548, 1548, 1548, 1548, 1548, 1548, 638, 1548, 1548,
	1548, 1548, 1548, -1000, -1000, -1000, -1000, 19565, 1548, 1548,
	1548, 1548, 1548, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22600, -1000, 16535, 1548, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 43209, -1000, 1548, 191, 43209,
	43209, 413, 2216, 1876, -1000, 2289, 2277, 380, -1000, 2339,
	1557, 1475, 1357, 1876, 1758, 43209, -1000, 1784, -1000, -1000,
	-1000, 2007, 1250, 1339, -1000, -1000, -1000, -1000, 1521, 18959,
	-1000, -1000, 2303, -1000, 21994, 635, 968, 2300, 39573, -1000,
	487, 487, 1769, 13490, 28, -1000, -1000, -1000, 787, 28665,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2115, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1754, 43209, -1000, -1000, 4831, 1334, -1000,
	1859, -1000, 1746, -1000, 1816, 18959, 1855, 554, 1334, 536,
	533, 501, -1000, -35, -1000, -1000, -1000, -1000, -1000, -1000,
	757, 757, 757, -1000, 388, 2266, 4860, 5572, -1000, -1000,
	-1000, 38967, 1852, 1334, -1000, 1847, -1000, 895, 577, 623,
	623, 1334, -1000, -1000, 43209, 1334, 892, 882, 1334, 1334,
	43209, 43209, -1000, 38361, -1000, 37755, 37149, 1184, 43209, 36543,
	35937, 35331, 34725, 34119, -1000, 1995, -1000, 1841, -1000, -1000,
	-1000, 43209, 1334, 1334, 43209, 43209, 329, -1000, -1000, 43209,
	1334, -1000, -1000, 1169, 1168, 1161, 757, 757, 1152, 1338,
	1335, 1328, 757, 757, 1147, 1316, 29877, 1315, 276, 1143,
	1125, 1124, 1151, 1314, 206, 1309, 1118, 1117, 1123, 43209,
	1845, 43209, -1000, 258, 783, 414, 786, 2131, 2076, 1766,
	508, 553, 1334, 480, 480, 43209, -1000, 12268, -1000, -1000,
	1307, 18959, -1000, 897, 880, 880, -1000, -1000, -1000, -1000,
	-1000, -1000, 881, 43209, 897, -1000, -1000, -1000, 880, 881,
	43209, 881, 881, 881, 881, 880, 880, 880, 881, 43209,
	43209, 43209, 43209, 43209, 43209, 43209, 43209, 43209, 11657, 746,
	881, -286, -1000, 1300, -1000, 1966, -1000, -1000, -1000, -1000,
	-1000, -1000, 11657, 11657, -1000, -1000, -1000, -1000, 170, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -43, 1765,
	33513, -1000, -288, -289, -290, -293, -1000, -1000, -1000, -301,
	-302, -1000, -1000, -1000, 18959, 18959, 18959, 18959, -140, -1000,
	870, 19565, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 168,
	794, 19565, 19565, 19565, 19565, 19565, 19565, 19565, 19565, 19565,
	19565, 19565, 19565, 19565, 19565, 19565, 26847, 7619, 7619, 696,
	696, 696, 696, -1000, 18353, 18959, 18959, 696, -1000, 1334,
	18353, 18353, 18959, 2121, 810, 1058, 43209, -1000, 1357, -1000,
	-1000, -1000, 1015, -1000, 43209, 43209, 541, 18959, 18959, 18959,
	18959, 18959, 18959, 15318, 18959, 18959, 18959, 18959, 18959, 18959,
	18959, 18959, 18959, 18959, 18959, 18959, 18959, 18959, 18959, 18959,
	18959, 18959, 18959, 18959, 18959, 18959, 18959, 18959, 18959, 18959,
	1357, 18959, 1266, 18959, 18959, 14712, 12268, 18353, 18353, 18353,
	18353, 18353, 32907, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 631, 1560, 1562, 1656, 18959,
	-1000, 1760, -1000, -124, 24423, 18959, 1296, 2299, 1893, 43209,
	-1000, -1000, -1000, 2216, -1000, 2216, 1560, 2302, 1998, 18353,
	-1000, -1000, 2302, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1411, -1000, 43209, 1758, 2190, 43209, 1996, 1294, 402,
	-1000, 18959, 18959, 1757, -1000, 1212, 43209, -1000, -140, -1000,
	32301, -1000, -1000, 11046, -1000, 43209, 381, 43209, -1000, 23817,
	31695, 12879, 28, -1000, 12879, 1692, -1000, 30, 21, 15924,
	668, -1000, -1000, -1000, 354, 20777, 1421, 668, 114, -1000,
	-1000, -1000, 1816, -1000, 1816, 1816, 1816, 1816, 402, 402,
	402, 402, -1000, -1000, -1000, -1000, -1000, 1842, 1840, -1000,
	1816, 1816, 1816, 1816, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1829, 1829, 1829, 1817, 1817, 450, -1000, 18959, 260,
	31089, 2143, 1122, 1599, 258, 483, 1892, 1334, 1334, 1334,
	483, -1000, 1445, 1412, 1369, -1000, -389, 1750, -1000, -1000,
	2260, -1000, -1000, 891, 936, 921, 630, 43209, 224, 361,
	-1000, 476, -1000, 31089, 1334, 878, 623, 1334, -1000, 1334,
	-1000, -1000, -1000, -1000, -1000, 1334, -1000, -1000, 1748, -1000,
	1662, 944, 911, 943, 890, 1748, -1000, -1000, -85, 1748,
	-1000, 1748, -1000, 1748, -1000, 1748, -1000, 1748, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 775, 209, -197,
	43209, 224, 26847, -1000, 497, -1000, -1000, -1000, 26847, 26847,
	-1000, -1000, -1000, -1000, 1287, 1273, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -378, 43209, -1000, 243, 785,
	321, 376, 346, 43209, 400, 2207, 2195, 2141, 340, 309,
	43209, 43209, 480, 1946, 43209, 2166, 43209, -1000, -1000, -1000,
	-1000, -1000, 1058, 43209, -1000, -1000, 881, 881, -1000, -1000,
	43209, 881, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	881, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 43209, -1000, -1000, -1000,
	-1000, 43209, -1000, -1000, -1000, -1000, -1000, 92, 27, 365,
	-1000, -1000, -1000, -1000, -1000, 2212, -1000, 1058, 862, 844,
	-1000, 1548, -1000, -1000, 1012, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 168, 19565, 19565, 19565, 1547, 532, 1623, 1558,
	1318, 910, 910, 978, 978, 704, 704, 704, 704, 704,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1269, -1000,
	1686, -1000, 1265, 1460, 1357, 1686, 1686, 1085, 18353, -1000,
	-1000, 834, -1000, 18959, 1357, -1000, -1000, 1357, 1357, 1739,
	1734, 2297, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1258, 1599, 1599, 1599, 1599, 1599, 18959,
	1029, -1000, -1000, -1000, 2138, 2134, 1357, 1484, 1357, 1723,
	-1000, 2046, 1599, 1948, 1943, 1917, 1311, 1889, 1871, 1867,
	1599, 1599, 1599, 1503, 1857, 1850, 1827, 1821, 1812, 1803,
	1796, 1791, 1768, 1599, -142, 1599, 1357, 1357, 1357, 1749,
	1297, 1357, 18353, 18353, 1710, 1548, 626, -1000, 1686, 1357,
	1357, 1686, 1686, -1000, 12268, 1357, -1000, 1656, 43209, -1000,
	-255, -1000, 10, 678, 1548, -1000, 29877, 1357, -1000, 6867,
	-1000, 44421, -1000, -1000, -1000, -1000, -1000, 28059, 1537, 2302,
	-1000, -1000, 1548, 1741, -1000, -1000, 402, 72, 27453, 655,
	655, 122, 1058, 1058, 18959, -1000, -1000, -1000, -1000, -1000,
	-1000, 625, 2276, 368, 1548, -1000, 1588, 2029, -1000, -1000,
	-1000, 2188, 21388, -1000, 1548, 1548, 43209, 1541, 1505, -1000,
	605, -1000, 1692, 28, 13, -1000, -1000, -1000, -1000, 1058,
	-1000, 1329, 386, 297, -1000, 482, -1000, -1000, -1000, -1000,
	2091, 87, -1000, -1000, -1000, 237, 402, -1000, -1000, -1000,
	-1000, -1000, -1000, 1267, 1267, -1000, -1000, -1000, -1000, -1000,
	1113, -1000, -1000, -1000, 1110, -1000, -1000, 1724, 1880, 260,
	-1000, -1000, 757, 1248, -1000, -1000, 2097, 757, 757, 43209,
	-1000, -1000, 1408, 2143, 243, 43209, 798, 1942, -1000, 1892,
	1892, 1892, 43209, -1000, -1000, -1000, -1000, -1000, -1000, -380,
	75, 356, -1000, -1000, -1000, 5270, 43209, 1730, -1000, 210,
	-1000, 1383, -1000, 43209, -1000, 1706, 1826, 1334, 1334, -1000,
	-1000, -1000, 43209, 1548, -1000, -1000, -1000, -1000, 544, 2119,
	299, -1000, -1000, -160, -1000, -1000, 224, 210, 668, 1334,
	-1000, -1000, -1000, -1000, -1000, -381, 1688, 528, 228, 315,
	43209, 43209, 43209, 43209, 43209, 611, -1000, -1000, -1000, -1000,
	194, -1000, -1000, 194, -1000, -1000, -1000, -1000, 291, 491,
	-1000, 43209, 43209, 675, -1000, -1000, -1000, 880, -1000, -1000,
	880, -1000, -1000, -1000, -1000, -1000, 2113, 43209, 14, -338,
	-1000, -332, 18959, -1000, -1000, -1000, -1000, 1067, 499, 1623,
	19565, 19565, 18353, -75, 759, 759, 26847, -1000, -1000, -1000,
	18959, 18959, 1763, 784, -1000, 18959, 920, -1000, -1000, -1000,
	18959, 18959, 18959, 1357, 317, -1000, -1000, -1000, -1000, -1000,
	2296, -1000, 18959, 18959, 18959, -1000, -1000, 18959, 18959, -1000,
	18959, 18959, 20171, 1357, 20171, 18959, 18959, 20171, -1000, -1000,
	-1000, -1000, 20171, 18959, 18959, 18959, 18959, 18959, 18959, 18959,
	18959, 18959, -1000, -1000, 31089, 99, -142, -142, -142, 1247,
	99, 1196, -1000, 1686, 1686, 18353, 12268, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 678, -1000,
	623, 623, 623, 43209, -1000, -1000, -1000, -1000, -1000, -1000,
	1690, 2206, -1000, 2026, 2020, 2295, 2276, -1000, 23817, 2302,
	-1000, -1000, 43209, -249, -1000, 2071, 2024, 655, 655, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10435, 2216, 18959, 1941,
	43209, 166, -1000, 23211, 43209, 43209, 23817, 23817, 23817, 23817,
	23817, -1000, 1985, 1983, -1000, 1972, 1958, 1971, 43209, -1000,
	1680, 1357, 2277, 21388, 380, 18959, 25635, 1492, 23817, -1000,
	-1000, 23817, 43209, 9824, -1000, -1000, 3, 2, -1000, -1000,
	-1000, -1000, 354, -1000, -1000, 2974, 2186, 2081, -1000, -1000,
	-1000, -1000, -1000, 1678, -1000, 1676, 1674, 1668, 209, -1000,
	1839, 2111, 757, 757, -1000, 1103, -1000, 1334, 1240, 1224,
	-1000, -1000, -1000, 520, -1000, 2160, 43209, 1926, 1922, 1921,
	-1000, -395, 1100, 1825, 1542, 18959, 1823, 2252, 1517, 43209,
	-1000, -1000, 43209, -1000, 288, -1000, 260, 43209, -1000, -1000,
	-1000, 361, 43209, -1000, 6297, -1000, -1000, -1000, 210, -1000,
	-1000, -1000, -1000, -1000, -1000, 43209, 261, -1000, 1819, 1321,
	-1000, -1000, 1567, -1000, -1000, -1000, -1000, 190, 305, 188,
	1221, 188, -1000, 43209, 609, 1880, 43209, -1000, -1000, -1000,
	881, 881, -1000, -1000, 2110, -1000, 1334, 1599, 19565, 19565,
	-1000, 696, -1000, 1548, -120, 1816, 1816, -1000, 1816, 1817,
	-1000, 1816, 144, 1816, 136, 1816, -1000, -1000, -120, 1357,
	1291, 1277, -46, -1000, 1058, 18959, 1743, 1728, 1599, -1000,
	1814, 1811, 18959, 1599, 1599, 1599, -1000, 1058, 1311, 1684,
	1528, -1000, -1000, -1000, -1000, 1649, 1599, 1675, -246, 1357,
	1664, 1664, 1664, 1664, 1664, 1656, 1656, 1656, 1656, 43209,
	-1000, -142, -1000, -1000, -181, -185, -1000, -1000, -1000, 1357,
	1357, 1357, -142, 1574, 1574, 1574, -1000, -1000, 1357, -1000,
	-1000, 2211, 2211, 2211, 1652, 43815, 43209, -1000, -1000, -1000,
	-1000, 2276, 2274, 1569, -1000, -1000, 72, 421, -1000, 2038,
	2024, -1000, 2250, 2062, 2238, -1000, -1000, -1000, -1000, -1000,
	1058, -1000, 2135, 1682, -1000, 782, 1489, -1000, -1000, 17747,
	1654, 2019, 567, 1652, 1716, 2029, 1879, 1911, 1993, -1000,
	-1000, -1000, -1000, 1975, -1000, 1957, -1000, -1000, 1784, -1000,
	-1000, 1562, 1357, 1670, 381, 23817, 1582, 1582, -1000, 557,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 945, 7822, 2329,
	-1000, 1218, -1000, 1185, 214, 1086, -1000, -1000, 757, 757,
	-1000, 877, 873, -1000, 43209, 1809, -1000, 402, 1217, 402,
	1081, -1000, 1074, -1000, -1000, -1000, -1000, 1834, 1912, -1000,
	-1000, -1000, -1000, 43209, -1000, -1000, 43209, 43209, 43209, 1808,
	2237, -1000, 18959, 1805, 777, 1666, 43209, 43209, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 434,
	757, -359, 301, 290, 757, 757, 757, -396, -1000, -1000,
	1646, 1584, -1000, -107, -1000, 18959, -1000, -1000, -1000, 1106,
	1106, -1000, 1784, -1000, -1000, -1000, 1377, -1000, -1000, -89,
	43209, 43209, 43209, 43209, -1000, 1093, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 696, 19565,
	1357, -1000, -1000, 402, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1357, -1000, 18959, -1000, 18959, -1000, 2216, 1216, 1058,
	18959, 18959, -1000, 1071, 1025, 1599, -1000, -1000, -1000, 1357,
	20171, -1000, 20171, -1000, 18959, 236, 759, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1357, 366, -1000,
	-1000, -1000, -1000, 2290, 2290, 2290, -1000, 1357, 18959, 1357,
	1357, -1000, 1548, 2090, 1548, 1548, 25635, -1000, -1000, 2274,
	2272, 2231, 2050, 2055, 2055, 2038, -1000, 2230, 2229, -1000,
	1213, 2226, 1207, 861, -1000, 43209, 18959, 166, -1000, 367,
	43209, 166, 43209, -1000, 2247, -1000, -1000, 18959, 1794, -1000,
	18959, -1000, -1000, -1000, -1000, -1000, -1000, 7619, 2276, 1582,
	-1000, -1000, 683, -1000, 18959, -1000, -1000, -1000, 3802, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1199, 1195, -1000,
	-1000, 1788, 18959, -1000, -1000, -1000, 1375, 1365, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1784, -1000, -1000, -1000,
	-1000, 361, -385, 1660, 43209, 1016, -1000, 1579, 1517, 302,
	166, 1191, 757, 757, 757, 1013, 1003, 29877, 1566, -1000,
	43209, 439, -1000, 361, -1000, -112, -117, 1599, -1000, -1000,
	2181, -1000, -1000, 12268, -1000, -1000, 1783, 1891, -1000, -1000,
	-1000, 396, -1000, -1000, -1000, 1599, 1599, 1357, -1000, 1599,
	1599, 1363, 1360, -1000, -1000, 1528, -1000, 1166, -1000, 236,
	1357, 1908, -1000, -1000, 7619, -1000, -1000, 2247, 2224, 99,
	-1000, -1000, 234, 99, 99, 99, 1058, 99, 99, 26241,
	-1000, 2223, 2219, 30483, 30483, 678, 2272, -150, 18959, 18959,
	2040, 1043, -1000, -1000, -1000, -1000, 1187, 1121, -1000, 1107,
	-1000, 2327, -1000, 1058, -1000, 166, -1000, 549, 1489, -1000,
	2216, 1058, 43209, 1058, 80, 2247, -1000, 1599, -1000, 1548,
	1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548,
	1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548,
	1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548,
	1548, -1000, -1000, 43209, 1119, -1000, -1000, 2171, 1523, 74,
	-1000, 1501, -1000, -1000, 162, -1000, 18959, -1000, 29877, 1045,
	1031, -1000, -1000, -1000, -1000, -396, -1000, -1000, -1000, -1000,
	-1000, -1000, 380, 1513, -1000, 756, 43209, 43209, 1357, 319,
	-91, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	18959, -1000, 1357, 1906, -1000, -218, -1000, -361, 18959, -142,
	-1000, -1000, -142, -142, -142, -142, -142, 1452, -1000, -1000,
	-1000, -1000, -1000, 1452, 1452, -1000, -150, -1000, 1498, -1000,
	43209, 1058, 1484, -1000, 1018, -1000, -1000, -1000, -1000, -1000,
	43209, 1489, 43209, -1000, 1435, 1357, 1548, 2216, -1000, 1430,
	-1000, 380, -1000, 1782, 1542, -1000, -1000, -1000, 17141, -1000,
	-1000, -1000, -1000, -1000, 207, -88, 12268, 9213, 1405, -1000,
	-1000, 1992, -81, -94, 1311, -1000, -323, -1000, -1000, -1000,
	-1000, 193, -1000, -1000, 1484, -1000, -1000, -1000, -1000, -1000,
	-1000, 29271, -1000, -1000, -1000, -1000, -150, -1000, -1000, 2168,
	-1000, -1000, 1370, -1000, -1000, 25635, 42603, -1000, -72, 334,
	-88, 18959, 1563, 1357, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 34, -1000, -1000, -1000, -1000, -1000, 1567, -1000,
	1990, -1000, 1357, -1000, 161, -343, -174, -180, -1000, -1000,
	-1000, -1000, -1000, 43209, 1548, -1000, 1402, -1000, 4136, -196,
	1895, -1000, -48, -1000, -1000, -1000, 918, 1014, -1000, -1000,
	-1000, -1000, -1000, -1000, 1105, 43209, -1000, 449, -1000, -1000,
	-89, -103, -1000, 840, -1000, -1000, -1000, -1000, -1000, -1000,
	43209, -1000, 42603, -190, 668, 7619, -1000, 1822, 1813, 2286,
	-1000, -1000, -1000, -1000, -1000, -1000, -398, 1356, 254, -1000,
	-92, 161, 1357, -1000, -1000, 2157, 80, -1000, 2291, -1000,
	2309, 676, 676, -1000, 997, -398, -1000, -95, -1000, -1000,
	-202, -1000, -1000, -1000, -1000, -1000, 445, 1062, -1000, -1000,
	-1000, -1000, 7619, -1000, -1000, -1000, 244, 244, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2641, 2640, 53, 4, 40, 39, 2639, 37, 121,
	202, 32, 210, 118, 2637, 2636, 2635, 2633, 2632, 2631,
	2630, 235, 233, 232, 2629, 2628, 2627, 2626, 2625, 2624,
	2623, 2616, 2613, 2611, 229, 181, 197, 2608, 2607, 2606,
	146, 192, 104, 106, 194, 2605, 2604, 92, 2603, 2602,
	2601, 190, 189, 186, 872, 2600, 188, 143, 61, 2599,
	2598, 2597, 2596, 2595, 2589, 2588, 2585, 2584, 2583, 2582,
	2581, 2577, 2575, 2574, 2573, 2571, 219, 2570, 2569, 22,
	2567, 99, 2566, 2565, 2564, 2563, 17, 2560, 2559, 11,
	48, 2558, 2557, 71, 2552, 2551, 78, 2550, 2549, 20,
	2546, 27, 2545, 33, 2544, 2541, 154, 2540, 2536, 2535,
	43, 2532, 2531, 2530, 2529, 2528, 2526, 2524, 166, 2523,
	2522, 2521, 2520, 204, 2519, 2518, 301, 132, 141, 2517,
	2516, 124, 195, 2514, 147, 2513, 2510, 2509, 173, 2508,
	6204, 2505, 2503, 81, 80, 2502, 94, 15, 116, 77,
	6, 21, 13, 2501, 2499, 79, 96, 2498, 126, 86,
	2497, 123, 120, 2496, 2495, 18, 7, 2494, 2, 1,
	3, 85, 2493, 2492, 142, 2491, 2490, 2489, 108, 2488,
	2487, 3458, 2485, 111, 153, 129, 88, 2484, 52, 68,
	2483, 2482, 2481, 2480, 2479, 60, 2478, 2477, 2476, 165,
	69, 180, 2475, 45, 47, 65, 156, 2474, 50, 102,
	2473, 164, 159, 2472, 91, 74, 46, 55, 2471, 125,
	161, 144, 66, 119, 162, 2470, 2469, 73, 90, 2468,
	2467, 2466, 2465, 2464, 2463, 84, 2462, 75, 2458, 205,
	2457, 14, 2455, 63, 44, 2454, 83, 133, 89, 41,
	2447, 178, 2445, 70, 182, 152, 179, 2442, 2441, 2440,
	2439, 196, 323, 2438, 2437, 128, 187, 167, 172, 110,
	2436, 329, 2434, 2433, 107, 1568, 4243, 2432, 42, 184,
	2431, 2430, 5568, 160, 49, 23, 2429, 206, 2428, 2425,
	2423, 207, 185, 140, 1080, 82, 2421, 2420, 93, 19,
	2419, 2417, 2416, 2415, 2414, 2413, 97, 36, 35, 34,
	218, 138, 9, 122, 183, 98, 2412, 2411, 2410, 149,
	105, 2409, 177, 175, 150, 130, 2408, 199, 168, 131,
	2405, 443, 30, 2399, 2397, 2396, 2395, 127, 2394, 2393,
	2391, 2389, 174, 169, 148, 101, 2386, 103, 139, 170,
	176, 67, 2384, 58, 2380, 2379, 29, 193, 31, 2378,
	16, 95, 76, 28, 134, 145, 2374, 0, 2373, 24,
	191, 348, 171, 2371, 2370, 5, 8, 12, 2368, 2361,
	2358, 2353, 158, 2352, 2351, 2350, 2347, 26, 59, 25,
	10, 136, 100, 2346, 2345, 4087, 1562, 155, 2343, 203,
}

//line sql.y:7469
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 393, 394, 394, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 367, 367,
	367, 370, 370, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 104, 104, 22, 23, 23, 23, 23,
	397, 397, 176, 176, 174, 174, 175, 175, 246, 246,
	24, 25, 25, 256, 256, 255, 255, 255, 257, 257,
	257, 257, 294, 294, 26, 26, 26, 26, 26, 124,
	124, 369, 369, 368, 360, 360, 359, 359, 358, 366,
	366, 365, 365, 364, 38, 39, 48, 48, 48, 48,
	49, 50, 371, 371, 333, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 335, 335, 321, 321, 334, 334, 334, 334, 334,
	334, 334, 320, 320, 135, 135, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 386, 386, 386, 385, 385, 226, 226,
	226, 226, 226, 226, 226, 226, 145, 145, 155, 155,
	155, 155, 155, 143, 143, 144, 142, 142, 142, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 154, 154, 150, 150, 150, 151, 151,
	151, 152, 152, 387, 387, 387, 387, 299, 299, 299,
	299, 302, 302, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 301, 301, 301, 301, 301, 303, 303, 303,
	303, 303, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 305, 305,
	305, 305, 305, 305, 305, 305, 319, 319, 306, 306,
	314, 314, 315, 315, 315, 316, 316, 316, 317, 317,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 313,
	313, 312, 312, 312, 322, 347, 347, 346, 346, 344,
	344, 344, 344, 344, 344, 344, 344, 331, 331, 341,
	341, 341, 341, 341, 330, 330, 326, 326, 326, 327,
	327, 328, 328, 325, 325, 329, 329, 343, 343, 342,
	342, 323, 323, 324, 324, 349, 388, 388, 388, 388,
	388, 389, 389, 350, 378, 380, 380, 380, 379, 379,
	376, 377, 375, 375, 375, 375, 375, 81, 81, 81,
	269, 269, 270, 270, 339, 339, 338, 338, 338, 340,
	340, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 264, 264, 264, 374, 374, 374, 374, 374,
	374, 373, 373, 373, 336, 336, 336, 372, 372, 57,
	57, 209, 209, 391, 391, 392, 392, 392, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 106, 106, 107, 107, 107, 107, 109,
	109, 109, 352, 352, 58, 58, 3, 3, 164, 166,
	167, 167, 165, 165, 165, 165, 165, 165, 60, 60,
	59, 59, 169, 168, 170, 170, 170, 1, 1, 2,
	2, 4, 4, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 318, 318, 318, 351, 351,
	353, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 112, 111, 111, 110, 113, 113, 113, 113, 113,
	113, 113, 113, 355, 355, 355, 61, 61, 356, 307,
	308, 309, 5, 6, 332, 354, 120, 120, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 263,
	263, 272, 272, 262, 262, 287, 287, 287, 265, 265,
	265, 266, 266, 384, 384, 384, 259, 259, 64, 64,
	64, 66, 66, 67, 68, 68, 289, 289, 290, 290,
	69, 70, 82, 82, 82, 82, 82, 82, 105, 105,
	105, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 381, 381, 382, 383, 383, 383, 383,
	73, 75, 31, 31, 31, 31, 31, 31, 130, 130,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 125, 125, 125, 119, 119, 398, 76, 77,
	77, 123, 123, 123, 116, 116, 116, 122, 122, 122,
	16, 16, 17, 245, 245, 18, 18, 127, 127, 129,
	129, 129, 129, 129, 131, 131, 131, 131, 131, 131,
	131, 126, 126, 128, 128, 128, 128, 280, 280, 280,
	279, 279, 158, 158, 160, 159, 159, 161, 161, 162,
	162, 162, 162, 207, 207, 184, 184, 243, 243, 241,
	241, 242, 242, 244, 244, 244, 244, 247, 247, 163,
	163, 163, 163, 171, 171, 172, 172, 173, 173, 288,
	288, 285, 285, 285, 284, 284, 177, 177, 177, 179,
	178, 178, 178, 178, 180, 180, 182, 182, 181, 181,
	183, 188, 188, 187, 187, 185, 185, 185, 185, 186,
	186, 186, 186, 189, 189, 140, 140, 140, 140, 140,
	140, 140, 153, 153, 153, 153, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 147, 83, 83, 83, 84, 84, 85,
	85, 85, 85, 85, 86, 86, 86, 86, 86, 141,
	141, 88, 88, 87, 87, 202, 202, 277, 277, 89,
	90, 90, 93, 93, 92, 91, 91, 97, 97, 94,
	94, 96, 96, 95, 98, 98, 99, 100, 100, 260,
	260, 190, 190, 198, 198, 198, 198, 191, 191, 191,
	191, 191, 191, 191, 199, 199, 199, 206, 200, 200,
	196, 196, 196, 196, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 214, 214, 296, 296, 363, 363,
	362, 362, 361, 361, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 399, 399, 310, 310, 310,
	310, 197, 197, 197, 197, 197, 121, 121, 121, 121,
	121, 293, 293, 293, 297, 297, 297, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 298, 298, 212, 212, 117, 117, 210, 210,
	211, 213, 213, 208, 208, 208, 193, 193, 193, 215,
	215, 216, 216, 101, 102, 102, 103, 103, 217, 217,
	219, 218, 218, 220, 221, 221, 221, 222, 222, 223,
	223, 223, 47, 47, 47, 47, 47, 42, 42, 42,
	42, 43, 43, 43, 43, 132, 132, 132, 132, 134,
	134, 133, 133, 79, 79, 80, 80, 80, 138, 138,
	139, 139, 139, 136, 136, 137, 137, 239, 239, 224,
	224, 224, 231, 231, 231, 227, 227, 229, 229, 229,
	230, 230, 230, 228, 236, 236, 238, 238, 237, 237,
	233, 233, 234, 234, 235, 235, 235, 232, 232, 192,
	192, 192, 192, 192, 240, 240, 240, 240, 248, 248,
	203, 203, 205, 205, 204, 204, 157, 249, 249, 253,
	250, 250, 254, 254, 254, 254, 254, 251, 251, 252,
	252, 281, 281, 281, 258, 258, 271, 271, 267, 267,
	268, 268, 261, 261, 273, 273, 273, 74, 201, 201,
	348, 348, 345, 276, 276, 278, 278, 282, 282, 286,
	286, 283, 283, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 395, 396, 291, 292, 292,
	292,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 7, 7, 6, 2, 2,
	1, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 0, 1, 2, 5, 0, 3, 0, 1, 4,
	4, 2, 0, 1, 1, 2, 2, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 5, 1, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 5, 5, 6, 4, 4, 8, 6, 8, 6,
	8, 5, 4, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	6, 6, 6, 4, 4, 4, 7, 8, 6, 5,
	6, 8, 11, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 4, 6, 5, 5, 5, 9, 9, 9,
	6, 9, 9, 9, 0, 2, 0, 2, 0, 2,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 2, 1, 3, 0, 1, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 1, 0, 1, 2, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 4, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -393, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 221, -49, -39, 222,
	-50, 224, 223, 260, 225, 253, 74, 306, 307, 309,
	310, 311, 312, -105, 258, 259, 227, 36, 45, 33,
	34, 37, 231, 266, 267, 230, -10, -34, 8, -395,
	11, 437, 255, 254, 28, -12, 471, 86, -394, 615,
	-239, -224, 22, 33, 29, -223, -219, -123, -224, 20,
	18, 7, -76, -398, -76, -76, 12, 13, -76, -333,
	-335, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -357, -44, -41, 226, 223, 270,
	120, 121, 260, 261, 262, 225, 244, 259, 263, 258,
	279, -40, 81, 33, 471, 474, -340, 222, 228, 229,
	438, 123, 122, 75, 224, -337, 360, 504, 585, -56,
	587, 102, 104, 586, 44, 234, 588, 589, 590, 511,
	591, 243, 592, 593, 594, 595, 601, 553, 602, 603,
	604, 124, 7, -76, -286, -282, -367, -275, 89, 90,
	91, 468, 246, 502, 503, 295, 81, 41, 477, 357,
	360, 504, 585, 306, 320, 314, 341, 333, 469, 505,
	478, 298, 247, 283, 579, 331, 132, 587, 301, 506,
	261, 365, 366, 507, 367, 102, 309, 404, 600, 300,
	508, 598, 104, 586, 79, 51, 582, 44, 256, 329,
	230, 325, 588, 284, 509, 480, 277, 123, 120, 607,
	36, 323, 50, 30, 597, 122, 49, 589, 147, 510,
	590, 511, 369, 348, 573, 48, 370, 262, 512, 84,
	267, 473, 304, 581, 371, 324, 372, 294, 596, 227,
	513, 565, 373, 374, 574, 514, 349, 353, 515, 396,
	375, 614, 52, 516, 517, 575, 121, 518, 78, 591,
	80, 318, 319, 519, 292, 245, 398, 345, 450, 457,
	458, 108, 109, 453, 110, 459, 111, 460, 461, 462,
	451, 112, 105, 452, 463, 464, 346, 347, 113, 465,
	107, 106, 454, 456, 114, 466, 243, 35, 376, 470,
	296, 58, 271, 399, 46, 351, 611, 45, 569, 520,
	572, 344, 340, 447, 53, 521, 522, 523, 524, 592,
	343, 317, 339, 606, 4, 289, 593, 62, 229, 355,
	354, 356, 278, 395, 336, 525, 526, 527, 250, 82,
	528, 326, 21, 529, 530, 377, 285, 531, 56, 532,
	533, 402, 259, 534, 54, 594, 39, 535, 264, 608,
	595, 536, 537, 538, 539, 266, 540, 379, 541, 378,
	350, 352, 273, 380, 472, 542, 305, 322, 263, 599,
	543, 251, 580, 265, 270, 258, 403, 252, 544, 545,
	546, 547, 548, 299, 564, 549, 550, 310, 601, 448,
	43, 551, 552, 553, 554, 555, 293, 288, 397, 406,
	61, 83, 362, 556, 557, 578, 316, 286, 558, 307,
	55, 602, 603, 604, 280, 605, 9, 612, 613, 382,
	124, 290, 291, 47, 337, 272, 559, 302, 560, 327,
	328, 342, 315, 338, 308, 566, 274, 383, 449, 260,
	561, 405, 287, 358, 363, 303, 476, 279, 384, 577,
	475, 335, 332, 281, 562, 385, 235, 275, 276, 563,
	567, 386, 387, 297, 388, 389, 390, 391, 392, 394,
	393, 282, 474, 313, 330, 364, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 446, 233, -76, 233, -181, -282,
	233, -251, 366, -272, 368, 381, 376, 386, 374, -263,
	377, 379, 273, -384, 396, 233, 383, 221, 369, 378,
	387, 388, 297, 394, 389, 393, 282, 390, 391, 392,
	-367, 173, 590, 605, 132, 334, 373, 371, 397, 569,
	-282, 308, -289, 313, -276, -367, -275, 311, -181, -82,
	565, 225, -291, -291, -125, 569, 571, -200, -140, 140,
	-153, -156, -146, -148, -194, -195, -196, -197, -154, -208,
	162, 163, 170, 141, -206, -157, 26, 467, 439, 438,
	173, 31, -147, 68, 69, 441, 442, 143, 57, 414,
	415, -155, 409, 416, 411, 444, 445, 115, 446, 105,
	107, 106, 447, 448, 449, 346, 347, 450, 451, 452,
	108, 109, 110, 111, 112, 113, 114, 453, 456, 454,
	455, 457, 458, 459, 464, 465, 460, 461, 462, 463,
	466, -85, -97, 493, 492, -98, -276, -282, 238, 408,
	232, 168, 437, -149, -144, -8, -204, 216, 407, 412,
	413, 417, 410, 479, 481, 496, 497, 499, 484, 489,
	488, 491, -367, -275, -151, -150, -190, 92, 98, 103,
	99, -390, 116, -395, 583, 93, 94, 95, 96, 97,
	117, 118, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 44, 382, 382, -181, -76, -76,
	-76, -76, -217, -123, -219, -10, -8, -395, 8, -76,
	-8, -9, -13, -34, -36, 498, -35, -282, -224, -239,
	12, 158, 42, 50, -222, -223, -12, -8, -140, 19,
	23, 24, -128, 164, -140, -282, -77, -128, -261, 237,
	-76, -76, -250, -294, 308, -254, 397, 396, -278, -252,
	-276, -274, -251, 395, 226, 23, 139, 25, 27, 142,
	173, 127, 19, 143, 37, 228, 334, 244, 172, 240,
	438, 221, 72, 479, 409, 411, 407, 414, 440, 441,
	408, 368, 31, 13, 481, 28, 254, 24, 38, 166,
	223, 146, 482, 257, 26, 255, 115, 118, 484, 22,
	75, 249, 14, 242, 40, 16, 485, 486, 17, 238,
	237, 158, 234, 70, 11, 216, 29, 155, 66, 487,
	134, 488, 489, 490, 491, 128, 68, 156, 20, 609,
	412, 413, 33, 570, 467, 268, 168, 73, 59, 571,
	140, 410, 492, 493, 116, 494, 119, 76, 576, 136,
	18, 71, 42, 495, 269, 496, 239, 610, 497, 400,
	498, 157, 224, 437, 69, 583, 499, 584, 232, 381,
	8, 443, 32, 253, 241, 126, 67, 500, 233, 145,
	444, 445, 236, 129, 117, 7, 133, 34, 12, 74,
	77, 415, 416, 417, 57, 125, 471, 144, 15, 501,
	401, 138, 132, -334, 156, -320, -324, -276, 248, -350,
	244, -181, -343, -342, -276, -395, -124, -271, 234, 242,
	241, 133, -371, 136, 290, 408, 232, -51, -52, -53,
	-251, 172, 589, -106, 265, 269, 87, 87, -324, -323,
	-322, -372, 269, 248, -349, -341, 240, 249, -330, 241,
	242, -325, 234, 134, -372, -325, 239, 249, 244, 248,
	269, 269, 124, 269, 124, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 264, -331, 148, -331, 475, 475,
	-337, -372, 244, 234, -372, -372, 236, 35, 35, -273,
	-325, 236, 25, -331, -331, -331, -251, 172, -331, -331,
	-331, -331, 277, 277, -331, -331, -331, -331, -331, -331,
	-331, -331, -331, -331, -331, -331, -331, -331, -331, -331,
	-331, 233, -371, -132, 393, 297, 81, -54, 279, -37,
	-181, -271, 234, 235, -371, 266, -181, 217, -181, -265,
	156, 15, -265, -262, 382, 380, 367, 372, -265, -265,
	-265, -265, 280, 365, -326, 234, 35, 245, 382, 280,
	365, 280, 281, 280, 281, 375, 385, 280, -287, 14,
	158, 408, 370, 374, 273, 233, 274, 235, 384, 281,
	-287, 93, -266, 156, 382, 276, -265, -265, -292, -395,
	-278, 334, -367, 572, -292, -292, 32, 90, 236, -276,
	-78, -276, 93, -15, -11, -22, -21, -23, 148, -130,
	382, -118, 173, 590, 573, 574, 575, 572, 379, 580,
	578, 576, 280, 577, 87, 136, 138, 139, 4, -140,
	155, -191, 148, 149, 150, 151, 152, 153, 154, 158,
	140, 142, 156, 157, 137, 159, 160, 161, 162, 163,
	164, 165, 167, 166, 168, 169, 172, 219, 220, -148,
	-148, -148, -148, -206, -395, -395, -395, -148, -260, -395,
	-395, -395, -395, -395, -212, -140, -395, -399, -395, -399,
	-399, -310, -395, -310, -395, -395, -395, -395, -395, -395,
	-395, -395, -395, -395, -395, -395, -395, -395, -395, -395,
	-395, -395, -395, -395, -395, -395, -395, -395, -395, -395,
	-395, -395, -395, -395, -395, -395, -395, -395, -395, -395,
	-395, -395, -395, -395, -395, -395, 217, -395, -395, -395,
	-395, -395, -148, -310, -310, -310, -310, -310, 103, 98,
	92, -208, 99, 93, -276, -282, -8, -9, -200, -395,
	-291, -381, -382, -184, -181, -395, 297, -276, -276, 266,
	-222, -12, -8, -217, -223, -219, -8, -76, -116, -129,
	63, 64, -131, 24, 38, 67, 65, 23, -396, 88,
	-396, -239, -396, 87, -36, -243, 86, 61, 43, 93,
	93, 87, 21, -218, -220, -140, 14, -280, 4, -279,
	25, -276, 93, 217, 101, 14, -182, 29, -181, -261,
	-261, 87, 308, -254, -294, -256, -255, 398, 400, 148,
	-281, -276, 93, 31, 88, 87, -181, -299, -302, -304,
	-303, -305, -300, -301, 331, 332, 173, 335, 337, 338,
	339, 340, 341, 342, 343, 344, 345, 348, 32, 256,
	327, 328, 329, 330, 349, 350, 351, 352, 353, 354,
	355, 356, 314, 333, 469, 315, 316, 317, 318, 319,
	320, 322, 323, 324, 325, 326, -370, -367, 86, 88,
	87, -306, 86, -140, -132, 233, -367, 234, 234, 234,
	-76, 437, -331, -331, -331, 264, 19, -44, -41, -357,
	18, -40, -41, 226, 120, 121, 223, 86, -320, 86,
	-329, -370, -367, 86, 134, 239, 133, -328, -325, -328,
	-329, -367, -208, -367, 134, 134, -367, -367, -247, -276,
	-247, -247, 23, -247, 23, -247, 23, 95, -276, -247,
	23, -247, 23, -247, 23, -247, 23, -247, 23, 31,
	78, 79, 80, 31, 82, 83, 84, -208, -367, -367,
	-208, -320, -251, -181, -367, 95, 95, 95, -331, -331,
	95, 93, 93, 93, -331, -331, 95, 93, -284, -282,
	93, 93, -373, 250, 294, 296, 95, 95, 95, 95,
	31, 93, -374, 31, 597, 596, 598, 599, 600, 93,
	95, 31, 95, 31, 95, -276, 86, -181, -138, 284,
	221, 223, 226, 76, 93, 298, 302, 303, 148, 44,
	87, 236, 233, -367, -267, 238, -267, -276, -283, -282,
	-274, 93, -140, -327, 14, 158, -287, -287, -265, -181,
	-327, -287, -265, -181, -265, -265, -265, -265, -287, -287,
	-287, -265, -282, -282, -181, -181, -181, -181, -181, -181,
	-181, -292, -266, -265, 572, 93, -259, 14, 76, -292,
	-292, -290, 311, 345, 566, 567, 568, 87, 471, -174,
	-181, 572, 572, 572, 572, 572, 572, -140, -140, -140,
	-140, 494, -198, 116, 140, 117, 118, -156, -199, -204,
	-206, 100, 158, 142, 156, 157, -146, -148, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -293, -276, 93, 173, -152, -151, 99, -390, -152,
	-126, -128, -140, -140, -367, -126, -126, -140, -122, 24,
	38, -210, -211, 144, -208, -396, -396, 95, 99, -276,
	-276, -115, -114, 419, 420, 421, 422, 424, 425, 426,
	429, 430, 434, 435, 418, 436, 423, 428, 431, 432,
	433, 427, 330, -140, -140, -140, -140, -140, -140, -83,
	-140, 127, 128, 129, -140, -140, -201, -200, -366, -365,
	-364, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -396, -140, 95, -367, -144, -140,
	-140, -127, 24, 38, -126, -278, -283, -274, -126, -127,
	-127, -126, -126, -276, 217, -239, -396, -200, 87, -383,
	400, 401, 570, -285, 269, -284, 25, -201, 93, 14,
	-245, 77, -276, -222, -222, 63, 64, 59, -126, -131,
	-396, -35, 25, -241, -276, 62, 93, -311, -251, 357,
	358, 173, -140, -140, 87, -221, 27, 28, -181, -279,
	164, -283, -181, -246, 269, -181, -159, -161, -162, -163,
	-184, -207, -395, -164, 490, 487, 14, -174, -175, -183,
	-282, -254, -256, 87, 399, 401, 402, 76, 119, -140,
	-312, 172, -339, -338, -337, -320, -322, -323, -324, 88,
	-312, -316, 363, 362, -306, -306, -306, -306, -306, -311,
	-311, -311, -311, 86, 86, -306, -306, -306, -306, -314,
	86, -314, -314, -315, 86, -315, -350, -140, -347, -346,
	-344, -345, 243, 102, 563, 519, 471, 511, 553, 77,
	-342, -221, 95, -396, -138, -268, 238, -348, -345, -367,
	-367, -367, -268, -367, 93, -367, 93, -367, 93, -107,
	-58, -1, 609, 610, 611, 87, 19, -321, -320, -57,
	294, -353, -354, 269, -349, -343, -329, 134, -328, -329,
	-329, -367, 87, 29, 124, 124, 124, 124, 471, 223,
	32, -269, 510, 140, 563, 519, -320, -57, -293, 236,
	-293, -293, 93, 93, -264, 605, -174, -134, 286, 148,
	275, 275, 233, 233, 288, -181, 299, 301, 300, 298,
	302, 303, 23, 23, 23, 287, 289, 291, 277, -181,
	-181, -267, 76, -176, -181, 26, -282, -181, -265, -265,
	-181, -265, -265, -181, -276, -118, 400, 87, 471, 22,
	-119, 22, -395, 116, 117, 118, -199, -146, -148, -146,
	139, 257, 87, -396, 25, 87, 77, -396, -396, -396,
	87, 14, -126, -213, -211, 146, -140, -396, -396, -396,
	87, 87, 14, -297, 25, -396, -396, -396, -396, -396,
	-212, -396, 14, 87, 87, -396, -396, 87, 87, -396,
	87, 87, 87, -363, 87, 87, 87, 87, -396, -396,
	-396, -396, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, -396, -90, 495, -396, -396, -396, -396, 87,
	-396, 87, -396, -126, -126, -395, 217, -396, -396, -396,
	-396, -396, -278, -396, -382, 569, 401, -188, -187, -185,
	74, 237, 75, -395, -284, -396, -152, 90, -242, 90,
	-241, -193, -276, 95, 99, -224, -158, -160, 14, -131,
	-206, 88, 87, -311, -228, -233, -262, -276, 93, 173,
	-313, 173, -313, 357, 358, -220, 217, -189, 15, -192,
	32, 57, -11, -395, -395, 32, 87, -177, -179, -178,
	-180, 66, 70, 72, 67, 68, 69, 73, -288, 25,
	-159, -9, -8, -395, -395, -395, -181, -174, -397, 14,
	77, -397, 87, 217, -255, -257, 403, 400, 406, -367,
	93, -106, 87, -337, -324, -225, -135, 40, -317, 364,
	-311, 478, -311, -319, 93, -319, 95, 95, 88, -47,
	-42, -43, 33, 81, -344, -331, 93, 39, -331, -331,
	-276, 88, -221, -134, -181, 140, 76, -348, -348, -348,
	-282, -2, 608, 614, 134, 86, 367, 18, -241, 87,
	88, -209, 295, 88, -108, -276, 88, 86, -329, -329,
	-276, -395, 233, 31, 31, 563, 519, 510, -57, -209,
	-312, -367, 607, 606, 88, 235, 293, -139, 414, -136,
	93, 89, -181, -181, -181, -181, -181, 226, 223, -391,
	304, -391, 278, 236, -174, -181, 87, -81, 252, 247,
	-287, -287, 33, -181, 400, 581, 579, -140, 139, 257,
	-156, -148, -128, 468, -295, 173, 331, 256, 329, 325,
	345, 336, 362, 327, 363, 324, 323, 322, -295, -293,
	-140, -140, -217, 147, -140, 145, -140, -140, -140, -396,
	173, 331, 14, -140, -140, -140, -364, -140, -140, -140,
	-362, -361, -152, -208, -396, -362, -140, -140, -361, -361,
	-365, -365, -365, -365, -365, -200, -200, -200, -200, -395,
	-276, -93, -92, -91, 546, 237, -90, -90, -90, 95,
	-367, -144, -93, 95, -367, -144, -396, -396, -127, -278,
	-185, -325, -325, -325, -247, 87, -258, 22, 14, 57,
	57, -158, -189, -159, -131, -276, -231, 565, -236, 46,
	-234, -235, 47, -232, 48, 56, -313, -313, 164, -222,
	-140, -248, 76, -249, -253, -208, -203, -205, -204, -395,
	-240, -396, -276, -247, -249, -161, -162, -162, -161, -162,
	66, 66, 66, 71, 66, 71, 66, -178, -282, -396,
	-396, -9, -9, -140, -285, 77, -159, -159, -183, -282,
	164, 400, 404, 405, -337, -389, 116, 140, 31, 76,
	360, 102, -387, 172, 507, 558, 563, 519, 511, 553,
	-388, 239, 133, 134, 251, 25, 41, 88, 87, 88,
	87, 88, 87, -270, -269, -43, -42, -331, -331, 95,
	-367, 93, 93, 235, 26, -181, 76, 76, 76, -109,
	612, 95, 86, -3, 81, -140, 86, 19, -320, -208,
	-355, -307, -356, -308, -309, -5, -6, -332, -112, 57,
	102, -61, 44, 234, 592, 593, 124, -395, 605, -347,
	-241, -351, -353, -181, -143, -395, -142, -144, -149, 162,
	163, -209, -181, -133, 284, 292, 86, -137, 90, -369,
	77, 275, 360, 275, -392, 305, 93, -392, -181, -81,
	-47, -181, -265, -265, 33, -367, -396, -156, -148, -395,
	-298, 477, -306, -306, -306, -315, -306, 319, -306, 319,
	-306, -298, -396, 87, -396, 22, -396, -117, 443, -140,
	87, 87, -396, 86, 86, -140, -396, -396, -396, -363,
	87, -396, 87, -396, 87, -296, 564, -396, -396, -396,
	-396, -396, -396, -396, -396, -396, -396, -89, -277, -276,
	-90, 528, 528, -396, -396, -396, -90, -214, 87, -214,
	-214, -396, -186, 22, -186, -186, -396, 90, -181, -189,
	-215, 16, -228, 51, 337, -238, -237, 55, 47, -235,
	19, 49, 19, 30, -248, 87, 148, 87, -396, -396,
	87, 57, 217, -396, -189, -172, -171, 76, 77, -173,
	76, -171, 66, 66, -243, -396, -396, 87, -246, -159,
	-189, -189, 217, 116, -395, -145, -155, -143, 12, 93,
	93, -367, -386, 596, 597, 31, 95, -331, -331, 134,
	134, -181, 86, -311, 93, -311, 95, 95, 31, 82,
	83, 84, 31, 78, 79, 80, -181, -181, -181, -181,
	-352, 86, 19, -140, 86, 148, 88, -241, -241, 271,
	158, -331, 590, 277, 277, -331, -331, -331, -111, -110,
	612, 88, -396, 87, -318, 471, 474, -140, -150, -150,
	-243, 88, -360, 471, -368, -276, -276, -276, -276, 95,
	97, -146, -396, -311, -396, -140, -140, -222, 93, -140,
	-140, 95, 95, -396, -396, -362, -361, -140, -396, -169,
	-168, -170, 573, 116, 31, -295, -396, -202, 269, -96,
	-95, -94, 14, -96, -96, -396, -140, -396, -396, -395,
	66, 18, 16, -395, -395, -285, -215, -216, 17, 19,
	-229, 53, -227, 52, -227, -237, 19, 19, 93, 19,
	93, 134, -253, -140, -205, 57, -11, -276, -203, -276,
	-217, -140, 86, -140, -152, -189, -189, -140, -195, 446,
	105, 107, 106, 447, 448, 449, 346, 347, 450, 451,
	452, 108, 109, 110, 111, 112, 113, 114, 453, 456,
	454, 457, 458, 459, 464, 465, 460, 461, 462, 463,
	466, 93, 93, 86, -140, 88, 88, -243, -351, -58,
	88, -241, 95, 88, 272, -204, -395, 93, -331, -331,
	-331, 95, 95, -284, -396, 87, -276, -388, -353, 475,
	475, -396, 25, -359, -358, -278, 86, 77, -121, 158,
	471, -396, -396, -396, -396, -396, 88, 88, -396, -396,
	87, -396, -168, -170, -396, 76, -152, -217, 19, -93,
	294, 296, -93, -93, -93, -93, -93, -244, -396, -276,
	239, 19, 19, -244, -244, -188, -216, -103, -102, -101,
	501, -140, -200, -230, 54, 76, 119, 93, 93, 93,
	12, -203, 217, -222, -241, -166, 367, -217, -396, -241,
	88, 25, 88, 614, 134, 88, -204, -120, -395, 268,
	-284, 93, 93, -110, -113, -11, 87, 148, -241, -181,
	-396, 469, 73, 472, -140, -396, 76, 482, 573, -88,
	-87, -84, 584, 610, -200, -90, -90, -90, -90, -90,
	-90, 87, -396, -396, -396, -103, 87, -100, -99, -276,
	76, 119, -249, -276, 88, -396, -395, -222, 88, -226,
	-11, 86, -3, 268, -307, -356, -308, -309, -5, -6,
	-332, -79, 471, -358, -336, -278, 93, 95, 88, 62,
	470, 473, -363, -86, 142, 582, 561, -141, -150, -147,
	-276, 239, -101, 87, 25, -285, -167, -165, -276, 525,
	-379, -378, 467, -389, -385, 116, 140, 102, -387, 563,
	519, 125, 126, -79, -140, 86, -396, -80, 283, 569,
	-369, 62, -396, -86, 583, 539, 513, 539, 513, -99,
	-395, -396, 87, 22, -299, -60, 536, -376, -377, 76,
	-380, 373, 535, 556, 116, 93, 88, -241, 244, -360,
	471, 139, -89, -165, 532, -312, -152, -377, 76, -376,
	76, 13, 12, -4, 613, 88, 285, 472, -86, -396,
	-59, 26, -166, -375, 252, 247, 250, 32, -375, 95,
	-4, 473, 536, 246, 31, 116, -152, -169, -168, -168,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1379, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1887, 1887, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1238, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1885, 1, 3,
	69, 73, 0, 0, 0, 56, 1247, 0, 76, 0,
	0, 831, 0, 829, 0, 1362, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1364, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1265, 153, 1380, 1377, 1378, 38, 39,
	40, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 0, 1356, 0, 686, 928,
	0, 748, 748, 0, 748, 748, 748, 748, 0, 0,
	0, 698, 0, 0, 0, 0, 745, 0, 714, 715,
	0, 745, 0, 721, 751, 0, 726, 748, 748, 729,
	1888, 0, 1888, 1888, 1347, 0, 742, 740, 754, 755,
	758, 762, 0, 767, 770, 1373, 1374, 0, 785, 47,
	1621, 777, 790, 791, 0, 823, 824, 43, 1068, 0,
	950, 955, 966, 979, 980, 981, 982, 983, 985, 986,
	0, 0, 0, 0, 991, 992, 0, 0, 0, 0,
	0, 1049, 1000, 0, 0, 0, 0, 1214, 0, 1175,
	1175, 1085, 1175, 1177, 1177, 0, 0, 0, 1884, 1662,
	1670, 1671, 1693, 1779, 1828, 1666, 1667, 1648, 1660, 1663,
	1651, 1652, 1654, 1656, 1661, 1668, 1674, 1653, 1673, 1672,
	0, 1649, 1650, 1655, 1665, 1669, 1657, 1658, 1659, 1664,
	1675, 0, 0, 0, 0, 0, 1223, 0, 0, 0,
	0, 0, 0, 273, 274, 1067, 1336, 0, 1177, 1177,
	1177, 1177, 1177, 1009, 1010, 1011, 1012, 1013, 1037, 1038,
	1044, 1045, -2, -2, 219, 220, 221, 222, 223, 224,
	225, 0, 215, 0, 0, 278, 279, 275, 276, 277,
	1051, 1052, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 1887, 0, 800, 0, 0, 0,
	0, 0, 1247, 0, 1239, 1238, 61, 0, 827, -2,
	0, 0, 0, 0, 45, 0, 50, 887, 75, 74,
	1287, 0, 0, 0, 57, 1248, 65, 67, 1249, 0,
	832, 833, 0, 863, 867, 0, 828, 0, 0, 1363,
	1362, 1362, 100, 0, 1824, 1340, -2, -2, 0, 0,
	1375, 1376, 1349, -2, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, -2, 0, 0, 165, 166, 0, 41, 404,
	0, 161, 0, 397, 338, 0, 1265, 0, 0, 0,
	0, 0, 827, 0, 1357, 142, 143, 150, 151, 152,
	377, 377, 377, 549, 0, 0, 153, 153, 508, 509,
	510, 0, 0, -2, 402, 0, 488, 0, 0, 391,
	391, 395, 393, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 0, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 378, 0, 547, 548,
	440, 0, 0, 0, 0, 0, 0, 524, 525, 0,
	0, 1365, 1366, 0, 0, 0, 377, 377, 0, 0,
	0, 0, 377, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 141, 1278, 0, 0, 0, -2, 0, 678,
	0, 0, 0, 1358, 1358, 0, 685, 0, 687, 688,
	0, 0, 689, 0, 745, 745, 743, 744, 691, 692,
	693, 694, 748, 0, 0, 386, 387, 388, 745, 748,
	0, 748, 748, 748, 748, 745, 745, 745, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1888, 751,
	748, 0, 722, 0, 723, 724, 727, 728, 730, 1889,
	1890, 1395, 1888, 1888, 734, 738, 1348, 760, 768, 771,
	788, 786, 787, 789, 781, 782, 783, 784, 0, 802,
	803, 808, 0, 0, 0, 0, 814, 815, 816, 0,
	0, 819, 820, 821, 0, 0, 0, 0, 0, 948,
	0, 0, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 987,
	988, 989, 990, 993, 0, 0, 0, 998, 999, 0,
	0, 0, 0, 837, 0, 1215, 0, 1083, 0, 1084,
	1086, 1087, 0, 1088, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1368, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 847, 0, 0, 847, 847,
	0, 0, 0, 208, 209, 210, 211, 212, 226, 227,
	228, 229, 230, 280, 1223, 0, 1067, 0, 0, 0,
	44, 792, 793, 0, 911, 1368, 0, 0, 843, 0,
	55, 64, 66, 1247, 59, 1247, 0, 849, 0, 0,
	-2, -2, 850, 856, 857, 858, 859, 860, 52, 1886,
	53, 0, 72, 0, 46, 0, 0, 0, 0, 350,
	1290, 0, 0, 1240, 1241, 1244, 0, 864, 1704, 868,
	0, 870, 871, 0, 830, 0, 98, 0, 927, 0,
	0, 0, 1824, 1346, 0, 102, 103, 0, 0, 0,
	361, 1351, 1352, 1353, -2, 384, 0, 361, 345, 288,
	289, 290, 338, 292, 338, 338, 338, 338, 350, 350,
	350, 350, 321, 322, 323, 324, 325, 0, 0, 307,
	338, 338, 338, 338, 328, 329, 330, 331, 332, 333,
	334, 335, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 340, 340, 340, 342, 342, 0, 42, 0, 365,
	0, 1244, 0, 0, 1278, 1360, 1370, 0, 0, 0,
	1360, 120, 0, 0, 0, 550, 584, 502, 538, 551,
	0, 505, 506, -2, 0, 0, 487, 0, 489, 0,
	385, 0, -2, 0, 395, 0, 391, 395, 392, 395,
	383, 396, 528, 529, 530, 0, 532, 533, 614, 897,
	0, 0, 0, 0, 0, 620, 621, 622, 0, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 489, 0, 535, 0, 441, 442, 443, 0, 0,
	446, 447, 448, 449, 0, 0, 452, 453, 454, 914,
	915, 455, 456, 481, 482, 483, 457, 458, 459, 460,
	461, 462, 463, 475, 476, 477, 478, 479, 480, 464,
	465, 466, 467, 468, 469, 472, 0, 135, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 846, 929, 1381,
	1382, 749, 750, 0, 389, 390, 748, 748, 695, 735,
	0, 748, 699, 736, 700, 702, 701, 703, 716, 717,
	748, 706, 746, 747, 707, 708, 709, 710, 711, 712,
	713, 731, 718, 719, 720, 752, 0, 756, 757, 732,
	733, 0, 769, 773, 774, 775, 776, 0, 0, 805,
	94, 810, 811, 812, 813, 825, 818, 1069, 945, 946,
	947, 0, 949, 952, 0, 1053, 1055, 954, 956, 1064,
	1065, 1066, 0, 0, 0, 0, 0, 960, 964, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 984, 1191, 1192, 1193, 1001, 281, 282, 0, 1002,
	0, 861, 0, 0, 0, 0, 0, 0, 0, 838,
	839, 1221, 1218, 0, 0, 1176, 1178, 0, 0, 0,
	0, 0, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1194, 0, 0, 0, 0, 0, 1214,
	0, 1004, 1005, 1006, 0, 0, 0, 1369, 0, 130,
	131, 0, 0, 0, 0, 0, 1148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 848, 1224, 0, -2, 0, 0,
	0, 0, 0, 1003, 0, 0, 1334, 0, 0, 795,
	796, 798, 0, 931, 0, 912, 0, 0, 801, 0,
	842, 0, 845, 58, 60, 854, 855, 0, 872, 851,
	54, 49, 0, 0, 889, 1288, 350, 1310, 0, 359,
	359, 356, 1250, 1251, 0, 1243, 1245, 1246, 77, 869,
	865, 0, 943, 0, 0, 926, 0, 875, 877, 878,
	879, 909, 0, 882, 0, 0, 0, 0, 0, 96,
	928, 1341, 101, 0, 0, 106, 107, 1342, 1343, 1344,
	1345, 0, 573, -2, 436, 167, 169, 170, 171, 162,
	-2, 348, 346, 347, 291, 350, 350, 315, 316, 317,
	318, 319, 320, 0, 0, 308, 309, 310, 311, 302,
	0, 303, 304, 305, 0, 306, 403, 0, 1252, 366,
	367, 369, 377, 0, 372, 373, 0, 377, 377, 0,
	398, 399, 0, 1244, 1269, 0, 0, 0, 1371, 1370,
	1370, 1370, 0, 155, 156, 157, 158, 159, 160, 609,
	0, 0, 585, 607, 608, 153, 0, 0, 163, 491,
	490, 0, 641, 0, 401, 0, 0, 395, 395, 380,
	381, 531, 0, 0, 616, 617, 618, 619, 0, 0,
	0, 518, 430, 0, 519, 520, 489, 491, 361, 0,
	444, 445, 450, 451, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 565, 566, 567,
	493, 571, 568, 493, 572, 1266, 1267, 1268, 0, 0,
	679, 0, 0, 427, 92, 1359, 684, 745, 705, 737,
	745, 697, 704, 725, 765, 809, 0, 0, 0, 0,
	817, 0, 0, 953, 1054, 1056, 957, 0, 961, 965,
	0, 0, 0, 0, 0, 0, 0, 1050, 1074, 1075,
	0, 0, 1238, 0, 1219, 0, 0, 1082, 1179, 1180,
	0, 0, 0, 0, 0, 1093, 1094, 1095, 1096, 1097,
	0, 1099, 0, 0, 0, 1103, 1104, 0, 0, 1105,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 1118,
	1119, 1120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1131, 1132, 0, 1032, 0, 0, 0, 0,
	1032, 0, 1070, 0, 0, 847, 0, 1181, 1182, 1183,
	1184, 1185, 1224, 1335, 794, 797, 799, 885, 932, 933,
	0, 0, 0, 0, 913, 1367, 840, 841, 844, -2,
	0, 0, 1226, 0, 0, 872, 943, 873, 0, 852,
	51, 888, 0, 1292, 1291, 1304, 1317, 359, 359, 353,
	354, 360, 355, 357, 358, 1242, 0, 1247, 0, 1328,
	0, 0, 1320, 0, 0, 0, 0, 0, 0, 0,
	0, 916, 0, 0, 919, 0, 0, 0, 0, 910,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 90,
	91, 0, 0, 0, 104, 105, 0, 0, 111, 362,
	363, 144, 153, 438, 168, 411, 0, 0, 287, 349,
	312, 313, 314, 0, 336, 0, 0, 0, 432, 116,
	1256, 1255, 377, 377, 368, 0, 371, 0, 0, 0,
	1372, 339, 400, 0, 134, 0, 0, 0, 0, 0,
	140, 579, 0, 0, 586, 0, 0, 0, 500, 0,
	511, 512, 0, 613, -2, 675, 365, 0, 379, 382,
	898, 0, 0, 513, 0, 516, 517, 431, 491, 522,
	523, 536, 473, 474, 471, 0, 0, 1279, 1280, 1285,
	1283, 1284, 121, 557, 559, 558, 562, 0, 0, 495,
	0, 495, 555, 0, 427, 1252, 0, 683, 428, 429,
	748, 748, 804, 95, 0, 807, 0, 0, 0, 0,
	958, 962, 862, 0, 1212, 338, 338, 1199, 338, 342,
	1202, 338, 1204, 338, 1207, 338, 1210, 1211, 1212, 0,
	0, 0, 1216, 1081, 1222, 0, 0, 0, 0, 1092,
	0, 0, 0, 0, 0, 0, 132, 133, 1148, 0,
	0, 1150, 1152, 1153, 1109, 1149, 0, 0, 1146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1027,
	1031, 0, 1033, 1034, 0, 0, 1134, 1135, 1136, 0,
	0, 0, 0, 1144, 1144, 1144, 1071, 1072, 0, 1225,
	934, 939, 939, 939, 0, 0, 0, 1354, 1355, 1227,
	1228, 943, 1229, 874, 853, 890, 1310, 0, 1303, 0,
	-2, 1312, 0, 0, 0, 1318, 351, 352, 866, 78,
	944, 81, 0, 1328, 1337, 0, 1319, 1330, 1332, 0,
	0, 0, 1324, 0, 943, 876, 905, 907, 0, 902,
	917, 918, 920, 0, 922, 0, 924, 925, 887, 881,
	883, 0, 0, 0, 98, 0, 943, 943, 97, 0,
	930, 108, 109, 110, 437, 172, 177, 0, 0, 0,
	182, 0, 184, 0, 0, 0, 189, 190, 377, 377,
	412, 0, 284, 286, 0, 0, 175, 350, 0, 350,
	0, 343, 0, 413, 433, 1253, 1254, 0, 0, 370,
	374, 375, 376, 0, 1361, 136, 0, 0, 0, 582,
	0, 610, 0, 0, 0, 0, 0, 0, 164, 492,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 0,
	377, 0, 0, 0, 377, 377, 377, 0, 667, 364,
	0, 0, 638, 635, 514, 0, 213, 214, 216, 0,
	0, 521, 887, 1270, 1271, 1272, 0, 1282, 1286, 124,
	0, 0, 0, 0, 569, 0, 494, 570, 680, 681,
	682, 93, 690, 696, 806, 826, 951, 959, 963, 0,
	0, 1213, 1197, 350, 1200, 1201, 1203, 1205, 1206, 1208,
	1209, 0, 997, 0, 1077, 0, 1079, 1247, 0, 1220,
	0, 0, 1091, 0, 0, 0, 1100, 1101, 1102, 0,
	0, 1108, 0, 1110, 0, 0, 0, 1121, 1122, 1123,
	1124, 1125, 1126, 1127, 1128, 1129, 1130, 0, 1025, 1028,
	1133, 1035, 1036, 1041, 1041, 1041, 1140, 0, 0, 0,
	0, 1073, 0, 0, 0, 0, 911, -2, 62, 1229,
	1231, 0, 1297, 1295, 1295, 1305, 1306, 0, 0, 1313,
	0, 0, 0, 0, 82, 0, 0, 0, 1333, 0,
	0, 0, 0, 99, 1238, 899, 906, 0, 0, 900,
	0, 901, 921, 923, 880, -2, 884, 0, 943, 943,
	88, 89, 0, 178, 0, 180, 206, 207, 0, 183,
	185, 186, 187, 193, 194, 195, 188, 0, 0, 283,
	285, 0, 0, 326, 337, 327, 0, 0, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 887, 137, 138, 139,
	574, 0, 584, 0, 0, 0, 577, 0, 503, 0,
	0, 0, 377, 377, 377, 0, 0, 0, 0, 652,
	0, 0, 615, 0, 623, 0, 0, 0, 217, 218,
	0, 1281, 556, 0, 122, 123, 0, 0, 561, 496,
	497, 1186, 995, 1198, 996, 0, 0, 0, 1217, 0,
	0, 0, 0, 1098, 1106, 0, 1151, 0, 1113, 0,
	0, 0, 604, 605, 0, 1147, 1030, 1238, 0, 1032,
	1042, 1043, 0, 1032, 1032, 1032, 1145, 1032, 1032, 0,
	940, 0, 0, 0, 0, 931, 1231, 1236, 0, 0,
	1300, 0, 1293, 1296, 1294, 1307, 0, 0, 1314, 0,
	1316, 0, 1338, 1339, 1331, 0, 1323, 1326, 1322, 1325,
	1247, 903, 0, 908, 0, 1238, 87, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 0, 0, 341, 344, 0, 0, 0,
	575, 0, 587, 578, 0, 665, 0, 669, 0, 0,
	0, 672, 673, 674, 651, 0, 655, 405, 639, 636,
	637, 515, 0, 125, 126, 0, 0, 0, 0, 0,
	0, 1076, 1078, 1080, 1089, 1090, 1195, 1196, 1107, 1111,
	0, 1114, 0, 0, 1115, 0, 606, 1021, 0, 0,
	1039, 1040, 0, 0, 0, 0, 0, 0, 936, 893,
	894, 941, 942, 0, 0, 886, 1236, 80, 1237, 1234,
	0, 1232, 1230, 1289, 0, 1298, 1299, 1308, 1309, 1315,
	0, 1321, 0, 85, 0, 0, 0, 1247, 179, 0,
	198, 0, 583, 0, 586, 576, 663, 664, 0, 676,
	668, 670, 671, 653, -2, 1273, 0, 0, 0, 563,
	994, 0, 0, 0, 1148, 1116, 0, 602, 603, 1029,
	1022, 0, 1007, 1008, 1026, 1137, 1138, 1139, 1141, 1142,
	1143, 0, 935, 937, 938, 79, 0, 1233, 1047, 0,
	1301, 1302, 1329, 1327, 904, 911, 0, 86, 418, 411,
	1273, 0, 0, 0, 656, 657, 658, 659, 660, 661,
	662, 553, 1275, 127, 128, 484, 485, 486, 121, 1187,
	0, 1190, 0, 1023, 0, 0, 0, 0, 1019, 1020,
	895, 896, 1235, 0, 0, 588, 0, 590, 0, -2,
	406, 419, 0, 173, 199, 200, 0, 0, 203, 204,
	205, 196, 197, 117, 0, 0, 677, 0, 1276, 1277,
	124, 1188, 1112, 0, 1014, 1015, 1016, 1017, 1018, 1048,
	1027, 589, 0, 0, 361, 0, 599, 407, 408, 0,
	414, 415, 416, 417, 201, 202, 611, 0, 0, 560,
	0, 0, 0, 591, 592, 600, 0, 409, 0, 410,
	0, 0, 0, 580, 0, 611, 1274, 0, 1024, 1046,
	0, 601, 597, 420, 422, 423, 0, 0, 421, 612,
	581, 1189, 0, 424, 425, 426, 593, 594, 595, 596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 167, 159, 3,
	86, 88, 164, 162, 87, 163, 217, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 615,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 169, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 170,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 160,
	161, 166, 168, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:571
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:576
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:581
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:617
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:623
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:631
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:636
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:640
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:646
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:652
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:658
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:662
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:671
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:677
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:681
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:687
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:724
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:761
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:765
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:787
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:816
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:833
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:840
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:846
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:878
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:890
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:894
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:900
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:906
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:910
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:914
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:918
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:923
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:924
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:928
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:932
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:938
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:942
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:948
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:952
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:961
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:983
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:987
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:993
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:997
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1001
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1007
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1011
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1015
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1019
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1025
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1029
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1035
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1041
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1048
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1057
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1061
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1068
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1072
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1077
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1081
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1087
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1092
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1097
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1103
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1114
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1123
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1129
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1133
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1145
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1152
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1159
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1164
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1169
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1174
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1181
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1188
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1199
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1210
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1216
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1220
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1224
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1242
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1246
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1252
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1256
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1262
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1266
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1272
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1276
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1282
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1286
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1292
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1296
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1302
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1307
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1312
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1316
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1321
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1325
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1329
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1340
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1349
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1358
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1371
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1375
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1381
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1387
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1392
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1397
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1402
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1407
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1412
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1421
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1430
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1435
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1441
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1447
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1451
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1457
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1461
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1465
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1471
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1475
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1489
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1495
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1506
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1511
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1525
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1532
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1536
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1540
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1544
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1548
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1559
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1566
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1570
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1584
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1588
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1592
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1596
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1600
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1605
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1609
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1802
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1806
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1810
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1816
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1820
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1824
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1830
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1834
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1841
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1845
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1849
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1853
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1870
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1977
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2031
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2081
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2090
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2095
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2099
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2107
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2111
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2117
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2125
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2129
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2133
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2138
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2142
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2163
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2178
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2183
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2189
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2193
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2213
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2222
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2228
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2232
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2238
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2242
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2247
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2251
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2255
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2259
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2263
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2267
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2273
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2283
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2287
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2291
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2295
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2299
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2304
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2308
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2322
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2338
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2342
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2357
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2361
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2367
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2377
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2381
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2387
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2391
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2397
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2401
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2407
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2413
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2417
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2421
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2425
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2429
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2438
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2444
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2450
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2456
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2460
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2464
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2469
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2473
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2479
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2485
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2491
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2495
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2499
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2503
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2507
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2526
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2530
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2535
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2539
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2548
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2554
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2558
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2562
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2568
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2572
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2578
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2582
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2586
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2590
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2594
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2598
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2602
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2606
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2610
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2614
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2618
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2622
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2626
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2630
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2634
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2638
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2642
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2646
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2650
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2654
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2658
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2662
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2666
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2670
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2674
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2678
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2682
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2686
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2690
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2694
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2698
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2703
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2734
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2749
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2753
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2758
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2762
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2767
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2771
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2780
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2784
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2793
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2797
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2801
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2805
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2809
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2815
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2819
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2829
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2833
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2837
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2841
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2845
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2849
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2853
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2857
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2861
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2865
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2870
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2875
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2879
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2883
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2887
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2891
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2895
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2899
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2903
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2907
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2911
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2915
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2919
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2923
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2927
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2931
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2935
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2939
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2943
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2947
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2953
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2963
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2967
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2971
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2975
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2979
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2983
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2991
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2995
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3005
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3012
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3026
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3032
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3042
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3049
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3056
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3068
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3078
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3082
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3086
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3099
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3109
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3113
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3124
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3131
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3152
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3193
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3202
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3210
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3219
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3226
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3238
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3247
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3262
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3267
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3271
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3276
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3280
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3286
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3292
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3298
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3308
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3312
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3318
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3324
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3330
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3336
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3342
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3346
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3350
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3360
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3366
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3372
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3376
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3380
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3386
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3390
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3395
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3399
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3404
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3408
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3414
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3418
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3422
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3426
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3430
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3434
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3438
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3442
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3446
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3450
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3454
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3458
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3462
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3466
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3470
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3474
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3478
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3482
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3486
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3490
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3494
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3498
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3503
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3507
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3511
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3518
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3522
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3528
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3533
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3537
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3542
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3547
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3552
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3557
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3562
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3568
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3574
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3579
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3585
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3591
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3595
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3601
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3606
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3610
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3615
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3620
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3625
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3630
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3636
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3642
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3649
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3656
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3663
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3671
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3675
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3681
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3687
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3693
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3699
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3705
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3711
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3717
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3723
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3729
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3733
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3739
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3745
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3749
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3755
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3759
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3768
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3772
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3778
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3782
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3829
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3833
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3837
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3841
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3845
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3857
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3861
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3865
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3869
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3873
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3877
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3881
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3885
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3889
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3893
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3897
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3913
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4002
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4012
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4016
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4026
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4032
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4040
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4050
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4054
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4064
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4070
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4074
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4078
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4084
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4088
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4094
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4098
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4118
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4133
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4135
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4138
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4156
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4160
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4164
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4168
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4172
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4176
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4186
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4208
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4227
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4241
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4247
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4253
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4257
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4263
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4269
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4273
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4277
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4281
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4287
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4293
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4299
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4303
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4307
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4311
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4315
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4319
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4329
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4335
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4339
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4343
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4347
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4363
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4367
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4392
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4397
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4406
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4410
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4416
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4420
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4426
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4430
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4434
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4452
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4456
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4460
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4466
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4470
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4482
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4491
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4497
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4501
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4506
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4510
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4515
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4519
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4523
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4527
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4531
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4549
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4567
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4571
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4577
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4581
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4585
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4589
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4594
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4602
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4609
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4614
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4618
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4624
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4630
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4634
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4644
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4648
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4652
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4656
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4662
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4666
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4672
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4676
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4685
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4691
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4695
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4701
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4705
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4711
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4715
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4719
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4723
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4729
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4733
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4746
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4750
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4754
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4758
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4764
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4766
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4770
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4772
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4776
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4778
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4781
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4786
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4790
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4794
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4807
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4811
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4815
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4821
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4827
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4831
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4835
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4839
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4845
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4849
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4859
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4863
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4869
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4873
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4879
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4888
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4894
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4898
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4904
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4908
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4912
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4916
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4921
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4925
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4929
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4933
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4950
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4958
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4962
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4970
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4974
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4980
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4984
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4988
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4992
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4998
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5002
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5006
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5010
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5044
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5048
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5182
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5190
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5194
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5200
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5206
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5210
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5214
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5220
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5224
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5231
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5235
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5239
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5243
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5247
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5253
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5257
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5261
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5265
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5269
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5288
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5294
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5298
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion(), IsBetween: true}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5307
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5312
		{
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5315
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5321
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5327
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5331
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5336
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5343
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5349
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5353
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5359
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5363
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5369
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5373
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5385
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5391
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5395
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5401
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5407
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5411
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5417
		{
			yyVAL.str = ""
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5421
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5427
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5431
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5438
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5442
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5446
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5450
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5456
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5460
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5464
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5468
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5472
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5476
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5480
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5486
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5490
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5494
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5501
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5507
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5511
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5521
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5525
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5529
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5533
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5543
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5555
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5579
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5609
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5613
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5617
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5621
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5625
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5629
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5633
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5637
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5641
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5645
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5649
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5653
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5657
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5661
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5665
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5669
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5673
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5677
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5681
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5685
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5689
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5693
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5697
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5701
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5705
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5721
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5725
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5729
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5733
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5737
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5741
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5745
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5749
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5753
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5757
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5761
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5765
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5769
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5773
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5777
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5781
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5785
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5789
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5793
		{
			val := convertStringToInt(yyDollar[3].str)
			yyLOCAL = &NtileExpr{IntValue: &val, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5799
		{
			yyLOCAL = &NtileExpr{VarValue: yyDollar[3].colIdent, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5803
		{
			yyLOCAL = &NtileExpr{IsNull: true, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5807
		{
			val := convertStringToInt(yyDollar[5].str)
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), IntValue: &val, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5813
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), VarValue: yyDollar[5].colIdent, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5817
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), IsNull: true, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5821
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5825
		{
			val := convertStringToInt(yyDollar[5].str)
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), IntValue: &val, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), VarValue: yyDollar[5].colIdent, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5835
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), IsNull: true, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5853
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5862
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5868
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5872
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5878
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5882
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5888
		{
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5890
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5894
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5898
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5902
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5906
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5910
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5914
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5918
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5922
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5926
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5930
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5936
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5940
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5944
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5948
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5952
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5956
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5960
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5964
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5968
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6023
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6027
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6031
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6035
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6039
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6045
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6049
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6053
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6063
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6067
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6073
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6077
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6081
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6085
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6089
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6095
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6099
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6103
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6107
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6111
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6115
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6119
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6123
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6127
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6131
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6137
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6141
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6155
		{
			yyVAL.str = string("")
		}
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6159
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6165
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6169
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6175
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6190
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6194
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6198
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6223
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6227
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6242
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6248
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6252
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6261
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6266
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6270
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6276
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6282
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6286
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6292
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6297
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6301
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6305
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6310
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6314
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6320
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6324
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6328
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6337
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6341
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6345
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6349
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6356
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6360
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6364
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6368
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6374
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6378
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6382
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6386
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6391
		{
			yyVAL.str = ""
		}
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6395
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6399
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6403
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6408
		{
			yyVAL.str = ""
		}
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6412
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6418
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6422
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6427
		{
			yyVAL.str = ""
		}
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6431
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6436
		{
			yyVAL.str = "cascaded"
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6440
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6444
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6453
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6459
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6465
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6471
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6480
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6484
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6489
		{
			yyVAL.str = ""
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6493
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6499
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6503
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6509
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6513
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6517
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6522
		{
			yyVAL.str = ""
		}
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6526
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6530
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6535
		{
			yyVAL.str = ""
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6539
		{
			yyVAL.str = " header"
		}
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6544
		{
			yyVAL.str = ""
		}
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6548
		{
			yyVAL.str = " manifest on"
		}
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6552
		{
			yyVAL.str = " manifest off"
		}
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6557
		{
			yyVAL.str = ""
		}
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6561
		{
			yyVAL.str = " overwrite on"
		}
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6565
		{
			yyVAL.str = " overwrite off"
		}
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6571
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6576
		{
			yyVAL.str = ""
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6580
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6586
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6590
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6596
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6600
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6605
		{
			yyVAL.str = ""
		}
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6609
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6615
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6619
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6625
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6629
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6633
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6638
		{
			yyVAL.str = ""
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6642
		{
			yyVAL.str = " optionally"
		}
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6655
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6659
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6663
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6667
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6671
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6677
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6681
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6685
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6689
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6694
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6698
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6704
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6708
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6714
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6718
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6724
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6728
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6743
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6747
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6753
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6759
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6763
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6769
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6773
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6777
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6781
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6785
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6793
		{
			yyVAL.str = "charset"
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6803
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6807
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6811
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6820
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6822
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6825
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6827
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6830
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6832
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6835
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6837
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6840
		{
			yyVAL.empty = struct{}{}
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6842
		{
			yyVAL.empty = struct{}{}
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6844
		{
			yyVAL.empty = struct{}{}
		}
	case 1367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6848
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6853
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6857
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6862
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6864
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6868
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6874
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6878
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6885
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6891
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6895
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6901
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6905
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6912
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7439
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7448
		{
			decNesting(yylex)
		}
	case 1887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7453
		{
			skipToEnd(yylex)
		}
	case 1888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7458
		{
			skipToEnd(yylex)
		}
	case 1889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7462
		{
			skipToEnd(yylex)
		}
	case 1890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7466
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
