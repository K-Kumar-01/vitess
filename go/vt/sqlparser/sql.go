// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VSCHEMA = 57710
const NAMES = 57711
const GLOBAL = 57712
const SESSION = 57713
const ISOLATION = 57714
const LEVEL = 57715
const READ = 57716
const WRITE = 57717
const ONLY = 57718
const REPEATABLE = 57719
const COMMITTED = 57720
const UNCOMMITTED = 57721
const SERIALIZABLE = 57722
const CURRENT_TIMESTAMP = 57723
const DATABASE = 57724
const CURRENT_DATE = 57725
const CURRENT_TIME = 57726
const LOCALTIME = 57727
const LOCALTIMESTAMP = 57728
const CURRENT_USER = 57729
const UTC_DATE = 57730
const UTC_TIME = 57731
const UTC_TIMESTAMP = 57732
const DAY = 57733
const DAY_HOUR = 57734
const DAY_MICROSECOND = 57735
const DAY_MINUTE = 57736
const DAY_SECOND = 57737
const HOUR = 57738
const HOUR_MICROSECOND = 57739
const HOUR_MINUTE = 57740
const HOUR_SECOND = 57741
const MICROSECOND = 57742
const MINUTE = 57743
const MINUTE_MICROSECOND = 57744
const MINUTE_SECOND = 57745
const MONTH = 57746
const QUARTER = 57747
const SECOND = 57748
const SECOND_MICROSECOND = 57749
const YEAR_MONTH = 57750
const WEEK = 57751
const REPLACE = 57752
const CONVERT = 57753
const CAST = 57754
const SUBSTR = 57755
const SUBSTRING = 57756
const GROUP_CONCAT = 57757
const SEPARATOR = 57758
const TIMESTAMPADD = 57759
const TIMESTAMPDIFF = 57760
const WEIGHT_STRING = 57761
const LTRIM = 57762
const RTRIM = 57763
const TRIM = 57764
const JSON_ARRAY = 57765
const JSON_OBJECT = 57766
const JSON_QUOTE = 57767
const JSON_DEPTH = 57768
const JSON_TYPE = 57769
const JSON_LENGTH = 57770
const JSON_VALID = 57771
const MATCH = 57772
const AGAINST = 57773
const BOOLEAN = 57774
const LANGUAGE = 57775
const WITH = 57776
const QUERY = 57777
const EXPANSION = 57778
const WITHOUT = 57779
const VALIDATION = 57780
const UNUSED = 57781
const ARRAY = 57782
const CUME_DIST = 57783
const DESCRIPTION = 57784
const DENSE_RANK = 57785
const EMPTY = 57786
const EXCEPT = 57787
const FIRST_VALUE = 57788
const GROUPING = 57789
const GROUPS = 57790
const JSON_TABLE = 57791
const LAG = 57792
const LAST_VALUE = 57793
const LATERAL = 57794
const LEAD = 57795
const NTH_VALUE = 57796
const NTILE = 57797
const OF = 57798
const OVER = 57799
const PERCENT_RANK = 57800
const RANK = 57801
const RECURSIVE = 57802
const ROW_NUMBER = 57803
const SYSTEM = 57804
const WINDOW = 57805
const ACTIVE = 57806
const ADMIN = 57807
const BUCKETS = 57808
const CLONE = 57809
const COMPONENT = 57810
const DEFINITION = 57811
const ENFORCED = 57812
const EXCLUDE = 57813
const FOLLOWING = 57814
const GEOMCOLLECTION = 57815
const GET_MASTER_PUBLIC_KEY = 57816
const HISTOGRAM = 57817
const HISTORY = 57818
const INACTIVE = 57819
const INVISIBLE = 57820
const LOCKED = 57821
const MASTER_COMPRESSION_ALGORITHMS = 57822
const MASTER_PUBLIC_KEY_PATH = 57823
const MASTER_TLS_CIPHERSUITES = 57824
const MASTER_ZSTD_COMPRESSION_LEVEL = 57825
const NESTED = 57826
const NETWORK_NAMESPACE = 57827
const NOWAIT = 57828
const NULLS = 57829
const OJ = 57830
const OLD = 57831
const OPTIONAL = 57832
const ORDINALITY = 57833
const ORGANIZATION = 57834
const OTHERS = 57835
const PATH = 57836
const PERSIST = 57837
const PERSIST_ONLY = 57838
const PRECEDING = 57839
const PRIVILEGE_CHECKS_USER = 57840
const PROCESS = 57841
const RANDOM = 57842
const REFERENCE = 57843
const REQUIRE_ROW_FORMAT = 57844
const RESOURCE = 57845
const RESPECT = 57846
const RESTART = 57847
const RETAIN = 57848
const REUSE = 57849
const ROLE = 57850
const SECONDARY = 57851
const SECONDARY_ENGINE = 57852
const SECONDARY_LOAD = 57853
const SECONDARY_UNLOAD = 57854
const SKIP = 57855
const SRID = 57856
const THREAD_PRIORITY = 57857
const TIES = 57858
const UNBOUNDED = 57859
const VCPU = 57860
const VISIBLE = 57861
const FORMAT = 57862
const TREE = 57863
const VITESS = 57864
const TRADITIONAL = 57865
const LOCAL = 57866
const LOW_PRIORITY = 57867
const NO_WRITE_TO_BINLOG = 57868
const LOGS = 57869
const ERROR = 57870
const GENERAL = 57871
const HOSTS = 57872
const OPTIMIZER_COSTS = 57873
const USER_RESOURCES = 57874
const SLOW = 57875
const CHANNEL = 57876
const RELAY = 57877
const EXPORT = 57878
const AVG_ROW_LENGTH = 57879
const CONNECTION = 57880
const CHECKSUM = 57881
const DELAY_KEY_WRITE = 57882
const ENCRYPTION = 57883
const ENGINE = 57884
const INSERT_METHOD = 57885
const MAX_ROWS = 57886
const MIN_ROWS = 57887
const PACK_KEYS = 57888
const PASSWORD = 57889
const FIXED = 57890
const DYNAMIC = 57891
const COMPRESSED = 57892
const REDUNDANT = 57893
const COMPACT = 57894
const ROW_FORMAT = 57895
const STATS_AUTO_RECALC = 57896
const STATS_PERSISTENT = 57897
const STATS_SAMPLE_PAGES = 57898
const STORAGE = 57899
const MEMORY = 57900
const DISK = 57901
const PARTITIONS = 57902
const LINEAR = 57903
const RANGE = 57904
const LIST = 57905
const SUBPARTITION = 57906
const SUBPARTITIONS = 57907
const HASH = 57908

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	584, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	327, 151,
	-2, 454,
	-1, 55,
	35, 652,
	231, 652,
	242, 652,
	277, 666,
	278, 666,
	-2, 654,
	-1, 60,
	233, 677,
	-2, 675,
	-1, 114,
	230, 1187,
	-2, 119,
	-1, 116,
	1, 146,
	584, 146,
	-2, 151,
	-1, 126,
	132, 357,
	236, 357,
	-2, 448,
	-1, 145,
	131, 151,
	171, 151,
	327, 151,
	-2, 463,
	-1, 652,
	85, 985,
	-2, 1472,
	-1, 653,
	85, 986,
	-2, 1483,
	-1, 654,
	85, 987,
	-2, 1482,
	-1, 655,
	215, 1208,
	-2, 1204,
	-1, 656,
	215, 1209,
	-2, 1205,
	-1, 730,
	59, 745,
	-2, 760,
	-1, 767,
	147, 1595,
	-2, 112,
	-1, 768,
	147, 1451,
	-2, 113,
	-1, 774,
	147, 1524,
	-2, 1181,
	-1, 921,
	147, 1382,
	-2, 1178,
	-1, 959,
	241, 41,
	246, 41,
	-2, 368,
	-1, 1036,
	1, 502,
	584, 502,
	-2, 151,
	-1, 1259,
	59, 746,
	-2, 765,
	-1, 1260,
	59, 747,
	-2, 766,
	-1, 1313,
	131, 151,
	171, 151,
	327, 151,
	-2, 398,
	-1, 1390,
	132, 357,
	236, 357,
	-2, 448,
	-1, 1399,
	241, 42,
	246, 42,
	-2, 369,
	-1, 1684,
	215, 1213,
	-2, 1207,
	-1, 1767,
	131, 151,
	171, 151,
	327, 151,
	-2, 399,
	-1, 1774,
	25, 170,
	-2, 172,
	-1, 1995,
	86, 39,
	-2, 802,
	-1, 2047,
	77, 94,
	86, 94,
	-2, 822,
	-1, 2236,
	49, 1149,
	-2, 1143,
	-1, 2418,
	86, 39,
	-2, 803,
	-1, 2456,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 794,
	-1, 2722,
	22, 1526,
	32, 1526,
	172, 1526,
	253, 1526,
	307, 1526,
	308, 1526,
	309, 1526,
	310, 1526,
	311, 1526,
	312, 1526,
	313, 1526,
	315, 1526,
	316, 1526,
	317, 1526,
	318, 1526,
	319, 1526,
	320, 1526,
	321, 1526,
	322, 1526,
	323, 1526,
	324, 1526,
	325, 1526,
	326, 1526,
	328, 1526,
	330, 1526,
	331, 1526,
	332, 1526,
	333, 1526,
	334, 1526,
	335, 1526,
	336, 1526,
	337, 1526,
	338, 1526,
	341, 1526,
	342, 1526,
	343, 1526,
	344, 1526,
	345, 1526,
	346, 1526,
	347, 1526,
	348, 1526,
	349, 1526,
	449, 1526,
	-2, 542,
}

const yyPrivate = 57344

const yyLast = 39955

var yyAct = [...]int{
	655, 664, 2788, 2204, 2787, 2770, 2764, 2664, 1764, 2720,
	2724, 2517, 2359, 1316, 657, 2704, 1961, 2289, 2296, 1698,
	1100, 723, 2623, 96, 646, 37, 1238, 2250, 2547, 2330,
	3, 1718, 2342, 2247, 2640, 1983, 2298, 1827, 583, 2341,
	2251, 1274, 2552, 647, 2248, 2427, 658, 580, 2447, 1737,
	644, 182, 745, 2421, 182, 2203, 547, 182, 645, 2041,
	2018, 2245, 563, 2237, 182, 609, 2344, 1243, 1722, 2010,
	2202, 1797, 182, 2079, 579, 2413, 1802, 2149, 2108, 1817,
	581, 2081, 2080, 1753, 2166, 2030, 154, 182, 38, 746,
	36, 1741, 1261, 772, 575, 2002, 587, 924, 1742, 1985,
	725, 1678, 727, 989, 731, 1666, 1606, 1077, 1554, 563,
	1836, 1596, 563, 182, 563, 1869, 1804, 140, 2073, 2049,
	949, 517, 748, 954, 1283, 1700, 1397, 95, 1816, 769,
	1305, 566, 1744, 91, 1241, 1183, 1618, 592, 1573, 718,
	1119, 1505, 931, 1501, 1814, 960, 1404, 1487, 1413, 928,
	1729, 1048, 932, 955, 1793, 967, 956, 957, 1304, 1288,
	1365, 1662, 737, 1098, 1093, 1032, 1510, 759, 733, 735,
	732, 98, 1389, 76, 123, 1723, 97, 570, 124, 1302,
	930, 157, 117, 1190, 118, 89, 1186, 2673, 85, 2101,
	2771, 1829, 1830, 1831, 1829, 2327, 2128, 2127, 1867, 1691,
	2099, 734, 77, 1120, 1473, 8, 7, 6, 2157, 753,
	2158, 758, 2791, 2797, 2798, 1561, 1560, 1559, 1558, 1695,
	1696, 125, 1557, 1556, 739, 1543, 184, 185, 186, 119,
	1548, 520, 994, 2738, 1981, 925, 90, 573, 2233, 574,
	2012, 1681, 940, 571, 2784, 2748, 991, 2761, 935, 2313,
	2482, 726, 1566, 724, 2619, 2618, 993, 1370, 2510, 1005,
	1006, 2511, 1009, 1010, 1011, 1012, 992, 78, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 971, 773, 970, 747, 1120, 766, 178,
	2783, 740, 2714, 102, 1809, 947, 2790, 2798, 119, 946,
	78, 945, 78, 80, 995, 996, 997, 1907, 1130, 1002,
	2774, 2684, 78, 120, 2759, 2518, 2565, 2705, 1807, 1855,
	2713, 2683, 2165, 2393, 1379, 2136, 162, 1152, 1982, 2135,
	184, 185, 186, 1007, 104, 105, 2021, 108, 939, 2058,
	114, 941, 2057, 179, 87, 2059, 515, 2285, 2628, 1153,
	1154, 1155, 1156, 1157, 1158, 1159, 1161, 1160, 1162, 1163,
	2156, 2022, 119, 2286, 2287, 1904, 719, 720, 721, 722,
	1697, 1905, 730, 550, 1306, 1035, 1307, 87, 1096, 87,
	1759, 1760, 1758, 159, 1067, 160, 1084, 717, 1086, 87,
	716, 944, 1130, 1041, 1042, 1072, 1073, 1055, 2665, 1055,
	761, 762, 1056, 1126, 1056, 177, 1118, 1068, 2102, 1061,
	1054, 2361, 1053, 2424, 537, 2070, 1777, 1776, 2192, 550,
	2384, 550, 1031, 2382, 550, 1044, 1083, 1085, 561, 1547,
	1549, 1550, 1551, 565, 559, 944, 550, 936, 1881, 1878,
	1880, 1879, 1493, 1245, 938, 937, 2109, 2354, 1837, 942,
	2131, 1463, 1883, 1875, 1884, 2355, 1885, 1806, 1870, 1008,
	536, 948, 2773, 1488, 1070, 1071, 1090, 1076, 1037, 2144,
	1886, 1014, 534, 1013, 1874, 2363, 2503, 1872, 1840, 1738,
	1095, 950, 2338, 1248, 951, 951, 1074, 1126, 1069, 1382,
	1062, 978, 2362, 942, 2739, 1464, 1075, 1465, 987, 986,
	985, 984, 983, 976, 87, 982, 981, 980, 1876, 975,
	988, 1164, 531, 163, 2302, 182, 1873, 182, 2768, 1081,
	182, 545, 168, 1082, 944, 1030, 2778, 1164, 2757, 1403,
	929, 2320, 1905, 1087, 962, 963, 542, 929, 1088, 929,
	760, 927, 1502, 1815, 2145, 1861, 2148, 1498, 563, 563,
	563, 1986, 1988, 969, 1106, 1080, 1857, 998, 2130, 1377,
	969, 943, 1376, 1375, 2120, 1499, 563, 563, 1373, 551,
	2193, 1065, 519, 514, 2661, 1125, 1122, 1123, 1124, 1129,
	1131, 1128, 1039, 1127, 1045, 2143, 2463, 1047, 2142, 1034,
	1121, 2443, 37, 2337, 2161, 969, 2054, 2312, 1112, 1165,
	1166, 521, 2017, 523, 538, 943, 553, 1973, 552, 527,
	1919, 525, 529, 539, 530, 551, 524, 551, 535, 1690,
	551, 526, 540, 541, 543, 557, 556, 544, 1292, 533,
	554, 1218, 551, 1402, 979, 155, 1046, 2672, 1765, 2100,
	1164, 2133, 2629, 1724, 1725, 1494, 977, 116, 1163, 1091,
	2284, 968, 742, 1094, 1004, 1078, 972, 962, 968, 1125,
	1122, 1123, 1124, 1129, 1131, 1128, 973, 1127, 1808, 1167,
	1168, 1169, 1170, 1051, 1121, 1057, 1058, 1059, 1060, 1175,
	1033, 1178, 1089, 2103, 2615, 2678, 974, 1511, 2499, 969,
	2151, 1236, 2425, 968, 943, 2150, 111, 2682, 1097, 962,
	965, 966, 969, 929, 2151, 2437, 990, 959, 963, 2150,
	86, 1987, 1102, 1103, 1492, 1871, 2185, 182, 1495, 81,
	1308, 563, 563, 1050, 1116, 1619, 2789, 1933, 958, 1619,
	2766, 2092, 1171, 2767, 1135, 2765, 1906, 182, 1475, 1474,
	1476, 1477, 1478, 86, 1856, 86, 1134, 1135, 1252, 1251,
	725, 1254, 2561, 1255, 2474, 86, 563, 1237, 1043, 727,
	182, 1231, 969, 1052, 1040, 563, 112, 1064, 2473, 77,
	1844, 563, 1412, 1115, 1113, 1114, 1249, 1411, 1066, 1401,
	2730, 1648, 1854, 555, 1852, 769, 978, 968, 976, 1568,
	1570, 1571, 972, 962, 2728, 1188, 1192, 1189, 1079, 2753,
	968, 548, 973, 2732, 2733, 1136, 962, 965, 966, 1578,
	929, 2300, 2301, 1569, 959, 963, 549, 1253, 2729, 1237,
	1849, 95, 2690, 1579, 1580, 1577, 2464, 1297, 1036, 1293,
	1512, 1136, 1224, 1225, 1226, 1227, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 2779, 2654, 1242,
	2781, 2610, 173, 174, 175, 176, 1489, 1853, 1490, 1136,
	968, 1491, 1003, 1049, 2691, 98, 1640, 1629, 1630, 1631,
	1632, 1642, 1633, 1634, 1635, 1647, 1643, 1636, 1637, 1644,
	1645, 1646, 1638, 1639, 1641, 184, 185, 186, 2755, 1598,
	2655, 1136, 1303, 1239, 1156, 1157, 1158, 1159, 1161, 1160,
	1162, 1163, 87, 724, 2533, 2532, 1273, 1268, 726, 1911,
	1912, 1913, 2481, 1250, 1623, 2299, 1576, 2480, 1624, 1152,
	2328, 2160, 1849, 2318, 182, 2077, 1482, 2302, 1366, 1298,
	1299, 2780, 1270, 669, 670, 671, 1133, 1374, 1134, 1135,
	773, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1160,
	1162, 1163, 1158, 1159, 1161, 1160, 1162, 1163, 563, 1851,
	1399, 2076, 1133, 1812, 1134, 1135, 1483, 1480, 1408, 1599,
	1468, 2187, 1410, 2639, 1268, 563, 563, 1467, 563, 1466,
	563, 563, 1152, 563, 563, 563, 563, 563, 563, 1481,
	1133, 1315, 1134, 1135, 1457, 184, 185, 186, 563, 2471,
	1451, 764, 182, 1446, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1161, 1160, 1162, 1163, 184, 185, 186, 182, 2061,
	1448, 2754, 1133, 1256, 1134, 1135, 1136, 1447, 1470, 563,
	1479, 182, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1160,
	1162, 1163, 1500, 1422, 2390, 563, 1268, 182, 1277, 2658,
	2657, 1380, 1381, 2656, 2560, 1395, 184, 185, 186, 1136,
	1825, 2558, 2529, 182, 184, 185, 186, 1409, 1823, 1445,
	182, 1388, 2478, 2470, 184, 185, 186, 2086, 2358, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 563, 563,
	563, 1469, 1441, 1442, 1407, 1443, 2074, 1278, 1486, 1233,
	1372, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1138, 1268,
	1865, 1449, 1450, 1406, 1136, 1864, 1721, 1455, 1456, 182,
	1398, 1405, 1405, 1703, 1415, 1385, 1416, 1386, 1418, 1420,
	1516, 1384, 1424, 1426, 1428, 1430, 1432, 1520, 1544, 1508,
	1507, 2388, 1268, 1459, 1136, 1471, 1458, 1105, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1454, 1453, 1133, 1452, 1134,
	1135, 1513, 1514, 1279, 1092, 1597, 2636, 1603, 1603, 1600,
	1604, 2008, 2772, 2635, 1444, 1518, 2604, 1136, 1609, 563,
	1601, 1601, 1525, 1526, 1527, 2603, 1555, 1503, 94, 2167,
	1133, 1574, 1134, 1135, 563, 563, 1962, 1581, 1942, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 2019, 1515, 1572, 2516, 1136, 2110, 119, 946,
	1519, 945, 1521, 1522, 1523, 1524, 1968, 1268, 100, 1528,
	1517, 1582, 1663, 2089, 1378, 2744, 1268, 1152, 2019, 1682,
	1148, 2279, 1149, 1542, 182, 1133, 1268, 1134, 1135, 563,
	1905, 1538, 1539, 1540, 1136, 1541, 1150, 1151, 1147, 1153,
	1154, 1155, 1156, 1157, 1158, 1159, 1161, 1160, 1162, 1163,
	2169, 1663, 1773, 182, 2436, 1133, 563, 1134, 1135, 2008,
	2711, 2246, 1620, 2027, 1136, 1575, 182, 2008, 2698, 1924,
	563, 2436, 92, 2438, 1929, 182, 1920, 182, 1923, 182,
	182, 563, 1132, 93, 563, 1708, 1136, 1709, 1133, 2436,
	1134, 1135, 1684, 1682, 2026, 563, 1950, 2008, 2694, 2686,
	1268, 769, 1686, 1687, 769, 1774, 95, 2008, 2674, 101,
	2508, 2671, 2179, 2178, 2177, 2171, 2458, 2175, 2677, 2170,
	100, 2168, 99, 2407, 1268, 95, 2173, 1133, 101, 1134,
	1135, 94, 2008, 1732, 1714, 2172, 1136, 1268, 1740, 100,
	1683, 99, 1736, 2027, 1739, 2407, 1928, 1555, 2027, 656,
	563, 2308, 2174, 2176, 2008, 2611, 1818, 1819, 1820, 1730,
	1731, 1822, 1824, 2508, 1268, 1133, 1684, 1134, 1135, 1268,
	2008, 2506, 1849, 1268, 2221, 563, 1783, 1784, 1785, 1786,
	1768, 563, 1408, 1136, 739, 1408, 1702, 1408, 1751, 1268,
	2441, 1268, 1769, 1848, 1605, 1133, 1757, 1134, 1135, 1920,
	183, 1611, 1612, 183, 2292, 2050, 183, 2736, 1268, 1838,
	1955, 564, 1939, 183, 1735, 1716, 1799, 1133, 1772, 1134,
	1135, 183, 1136, 563, 1850, 1597, 1938, 92, 1805, 1733,
	1597, 1597, 2310, 2309, 94, 1136, 183, 1849, 93, 1281,
	1756, 1685, 1136, 1832, 1688, 1689, 2306, 2307, 1771, 2293,
	1728, 1770, 1136, 2306, 2305, 1272, 773, 1693, 564, 773,
	1755, 564, 183, 564, 1136, 2409, 182, 1133, 2051, 1134,
	1135, 1136, 1835, 182, 2295, 2027, 1268, 2053, 182, 182,
	1713, 1849, 182, 1552, 182, 1920, 1268, 1497, 2290, 1905,
	2129, 182, 1268, 1369, 2114, 1800, 1795, 1796, 182, 1300,
	1813, 1811, 1810, 1821, 1280, 2300, 2301, 729, 1843, 953,
	1136, 1846, 2291, 1847, 1133, 952, 1134, 1135, 2669, 2050,
	1858, 1136, 2701, 1842, 1841, 1268, 182, 563, 1800, 971,
	1845, 970, 87, 1555, 1859, 2608, 1860, 2106, 2107, 1405,
	1877, 1862, 1863, 2625, 2297, 1887, 1888, 2500, 1275, 1892,
	2008, 2007, 2796, 1133, 2078, 1134, 1135, 2601, 1895, 1778,
	2572, 1779, 1780, 1781, 1782, 1898, 1133, 1136, 1134, 1135,
	1132, 1268, 2498, 1133, 1868, 1134, 1135, 1789, 1790, 1791,
	1792, 1136, 2051, 1133, 87, 1134, 1135, 2495, 1152, 1136,
	1918, 1905, 2405, 1901, 2476, 1133, 2399, 1134, 1135, 1136,
	2398, 1574, 1133, 2396, 1134, 1135, 1915, 1136, 1917, 2299,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1160, 1162,
	1163, 2302, 2004, 1889, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1161, 1160, 1162, 1163, 1136, 1371, 94, 1369, 1368,
	1916, 1133, 1136, 1134, 1135, 1896, 1897, 1136, 2360, 2395,
	1899, 1136, 1133, 1798, 1134, 1135, 1314, 1313, 2483, 1900,
	2356, 2333, 2794, 1965, 2329, 2115, 1794, 1788, 1787, 1485,
	1136, 1964, 1922, 1903, 182, 1400, 1396, 1367, 113, 2331,
	2083, 1963, 182, 2626, 1035, 1136, 1603, 563, 1992, 1960,
	2082, 1979, 1809, 563, 1920, 1575, 1914, 1706, 1133, 1601,
	1134, 1135, 2487, 1437, 563, 2448, 2449, 2454, 2484, 2485,
	2486, 1434, 1133, 2750, 1134, 1135, 2725, 1959, 1996, 2453,
	1133, 2451, 1134, 1135, 1958, 2325, 2294, 182, 2324, 1956,
	1133, 182, 1134, 1135, 1932, 2323, 2246, 2083, 1133, 2093,
	1134, 1135, 37, 1890, 1545, 2265, 2060, 2741, 2023, 2488,
	2489, 2043, 1952, 1438, 1439, 1440, 2268, 2266, 1435, 1436,
	2264, 2269, 2267, 2542, 1684, 2541, 1133, 1951, 1134, 1135,
	2009, 1948, 2712, 1133, 1720, 1134, 1135, 1276, 1133, 2442,
	1134, 1135, 1133, 1712, 1134, 1135, 2270, 2005, 2036, 2037,
	563, 2238, 2240, 2226, 2225, 182, 2112, 2429, 2047, 2653,
	2241, 1133, 182, 1134, 1135, 2428, 1242, 1990, 1980, 2551,
	2553, 2432, 1683, 2540, 563, 743, 1133, 2042, 1134, 1135,
	2235, 563, 1496, 744, 715, 1408, 1408, 2001, 2071, 2072,
	563, 2304, 2068, 2016, 2064, 2006, 1930, 2087, 1000, 2048,
	999, 1104, 2126, 2370, 1615, 2105, 2082, 2154, 92, 2125,
	2122, 2434, 2052, 182, 182, 182, 182, 182, 1616, 93,
	2121, 120, 2091, 1805, 183, 94, 183, 2062, 2055, 183,
	182, 182, 92, 2065, 2032, 2035, 2036, 2037, 2033, 94,
	2034, 2038, 101, 93, 2448, 2449, 182, 2075, 1730, 1731,
	2085, 2776, 2321, 100, 1893, 99, 2670, 564, 564, 564,
	2084, 1970, 1971, 2621, 94, 1597, 2303, 2040, 1717, 2090,
	751, 752, 1882, 2414, 1909, 564, 564, 2224, 2124, 2645,
	2137, 2138, 2139, 2140, 2141, 2223, 99, 2094, 2095, 2096,
	1388, 2644, 2184, 2559, 725, 101, 2557, 1555, 2147, 2556,
	2549, 2496, 1603, 2433, 1603, 2431, 100, 1603, 99, 2123,
	1603, 2116, 2117, 2155, 563, 1601, 2334, 1601, 1833, 1383,
	1601, 750, 100, 1601, 101, 2032, 2035, 2036, 2037, 2033,
	563, 2034, 2038, 2162, 2215, 100, 2548, 2422, 2146, 2019,
	2163, 2752, 2751, 2152, 2004, 182, 2153, 2194, 2180, 563,
	1940, 1704, 1294, 1285, 106, 107, 2752, 2659, 563, 2469,
	741, 2210, 103, 88, 2211, 563, 563, 2164, 182, 182,
	182, 182, 182, 2207, 1, 2727, 2181, 532, 2215, 1694,
	182, 1266, 1262, 1240, 546, 182, 2723, 1472, 182, 731,
	182, 1462, 2519, 182, 182, 182, 1263, 2205, 1664, 2205,
	2258, 2198, 2205, 2228, 2229, 2205, 2252, 2278, 1665, 1255,
	2043, 2243, 2622, 2111, 2214, 1839, 2494, 1803, 961, 145,
	1766, 1710, 1711, 1265, 2216, 1264, 183, 1767, 2319, 2707,
	564, 564, 110, 922, 182, 109, 964, 2227, 2230, 1063,
	1834, 2509, 2069, 1775, 1320, 1318, 183, 563, 1319, 2280,
	1317, 1322, 2281, 733, 1321, 732, 563, 1941, 2249, 2259,
	1546, 182, 2262, 2249, 2271, 564, 560, 2260, 2261, 183,
	2263, 182, 2039, 95, 564, 2275, 2276, 2282, 2220, 180,
	564, 1309, 2217, 2218, 2219, 1286, 182, 2340, 1507, 182,
	2288, 1001, 522, 2311, 1866, 1266, 1262, 528, 1176, 2371,
	2222, 2322, 2314, 637, 2315, 2056, 770, 763, 1705, 1994,
	1263, 2254, 2426, 2348, 2257, 2234, 2236, 2011, 2239, 2232,
	2652, 2347, 2550, 2699, 2066, 1282, 2316, 2317, 2343, 1931,
	1617, 2339, 1745, 1567, 1805, 1259, 1260, 1265, 2352, 1264,
	585, 584, 2351, 582, 2335, 1997, 2336, 2020, 1139, 659,
	1984, 1295, 2031, 2364, 2029, 2028, 2367, 2404, 1891, 1752,
	2450, 2366, 563, 182, 2365, 562, 2446, 2786, 2719, 1747,
	1743, 2003, 593, 586, 578, 2373, 2466, 2346, 2132, 2357,
	2134, 2067, 2374, 2380, 2353, 1117, 1258, 572, 934, 1614,
	2627, 2613, 1908, 2392, 1257, 1627, 1628, 2326, 1826, 63,
	41, 635, 1655, 567, 2737, 1108, 757, 32, 31, 30,
	29, 28, 771, 23, 22, 926, 21, 933, 20, 19,
	182, 25, 18, 17, 16, 2747, 2775, 115, 2420, 50,
	2419, 47, 45, 183, 2415, 2416, 122, 121, 2472, 48,
	2430, 44, 2423, 182, 2368, 2369, 1038, 42, 27, 2435,
	26, 2452, 15, 14, 2455, 13, 12, 11, 10, 2445,
	9, 182, 5, 4, 182, 182, 182, 564, 2459, 35,
	34, 33, 1111, 24, 563, 563, 2, 2098, 1828, 2460,
	0, 2461, 2462, 2348, 564, 564, 0, 564, 0, 564,
	564, 2347, 564, 564, 564, 564, 564, 564, 2467, 2468,
	0, 563, 563, 563, 563, 2501, 2502, 564, 0, 0,
	2475, 183, 0, 0, 2477, 0, 2479, 0, 0, 0,
	0, 0, 2504, 0, 0, 0, 0, 183, 2490, 0,
	0, 2491, 2492, 2493, 2515, 0, 2513, 2514, 564, 0,
	183, 0, 0, 0, 0, 0, 0, 1603, 0, 1603,
	0, 0, 0, 0, 564, 0, 183, 0, 182, 0,
	1601, 0, 1601, 2524, 0, 2377, 2378, 0, 2379, 0,
	0, 2381, 183, 2383, 0, 2385, 0, 2545, 0, 183,
	0, 0, 563, 0, 563, 2528, 0, 2525, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 564, 564, 564,
	1603, 0, 2574, 2537, 0, 37, 0, 2570, 2554, 725,
	2568, 2566, 2555, 1601, 2546, 0, 2536, 0, 0, 2564,
	0, 2562, 2252, 0, 0, 0, 2252, 0, 183, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	0, 0, 2205, 0, 2205, 0, 0, 0, 2578, 0,
	0, 0, 0, 0, 120, 0, 0, 0, 0, 563,
	2575, 2576, 0, 0, 0, 0, 0, 162, 0, 0,
	2609, 0, 2605, 2249, 2607, 2606, 0, 0, 0, 2624,
	563, 2617, 0, 2616, 563, 563, 0, 2612, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 564, 0, 0, 0, 0, 2063,
	0, 0, 0, 563, 0, 2649, 2651, 0, 2646, 2647,
	0, 2648, 0, 0, 159, 0, 160, 0, 0, 0,
	0, 0, 0, 2660, 0, 0, 0, 2666, 0, 725,
	0, 0, 563, 1267, 2663, 0, 177, 0, 0, 2252,
	0, 0, 0, 183, 0, 0, 0, 0, 564, 0,
	0, 0, 0, 2662, 0, 0, 563, 182, 0, 0,
	0, 0, 0, 2668, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 564, 37, 0, 0, 0,
	2745, 0, 2676, 0, 0, 183, 0, 2679, 0, 564,
	1337, 0, 563, 0, 183, 0, 183, 0, 183, 183,
	564, 0, 0, 564, 0, 0, 0, 0, 563, 563,
	0, 0, 0, 0, 564, 0, 0, 563, 0, 0,
	0, 0, 0, 2692, 2680, 37, 182, 563, 2624, 2708,
	2706, 2700, 2715, 2702, 0, 1337, 0, 0, 0, 0,
	0, 771, 771, 771, 163, 2718, 2734, 2726, 2731, 2697,
	0, 0, 0, 168, 2740, 0, 0, 0, 0, 1107,
	1109, 0, 0, 0, 2749, 2746, 0, 563, 0, 564,
	0, 0, 0, 0, 0, 563, 0, 0, 0, 1603,
	0, 2763, 2758, 0, 2760, 2762, 2249, 0, 0, 2769,
	0, 0, 1601, 0, 564, 0, 0, 0, 2756, 0,
	564, 2777, 0, 0, 0, 0, 0, 0, 2782, 0,
	0, 0, 0, 0, 0, 0, 1603, 0, 2785, 2793,
	0, 2792, 0, 1603, 0, 2795, 0, 0, 0, 1601,
	1325, 0, 0, 0, 0, 0, 1601, 0, 0, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 183, 183, 0,
	0, 183, 0, 183, 0, 0, 0, 0, 0, 0,
	183, 1338, 0, 0, 1246, 1247, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 564, 0, 0, 1290,
	0, 0, 0, 0, 0, 0, 1338, 0, 771, 0,
	0, 0, 0, 0, 1310, 1351, 1354, 1355, 1356, 1357,
	1358, 1359, 0, 1360, 1361, 1362, 1363, 1364, 1339, 1340,
	1341, 1342, 1323, 1324, 1352, 0, 1326, 0, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 0, 0, 1336,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 0, 0,
	1351, 1354, 1355, 1356, 1357, 1358, 1359, 0, 1360, 1361,
	1362, 1363, 1364, 1339, 1340, 1341, 1342, 1323, 1324, 1352,
	0, 1326, 0, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 0, 0, 1336, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 161, 158,
	164, 165, 166, 167, 169, 170, 171, 172, 0, 0,
	0, 0, 0, 173, 174, 175, 176, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 564, 1353, 0, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	183, 926, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 0, 1414, 1414,
	0, 1414, 0, 1414, 1414, 0, 1423, 1414, 1414, 1414,
	1414, 1414, 0, 0, 0, 0, 0, 0, 0, 1234,
	1234, 926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 183, 1484, 1993, 0, 0, 667, 668, 0, 0,
	0, 0, 1602, 564, 0, 0, 0, 0, 1504, 0,
	564, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 183, 183, 183, 183, 0, 0, 0,
	0, 771, 771, 771, 0, 0, 0, 0, 0, 183,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 2580, 2582, 2581, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 615, 0, 1269, 1271, 0, 0,
	0, 0, 1610, 564, 0, 0, 0, 0, 0, 1234,
	0, 0, 0, 0, 0, 0, 0, 1625, 1626, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 564, 0,
	0, 178, 771, 0, 0, 0, 0, 564, 0, 0,
	0, 0, 0, 0, 564, 564, 0, 183, 183, 183,
	183, 183, 0, 0, 0, 120, 0, 142, 0, 183,
	0, 0, 1707, 0, 183, 0, 0, 183, 162, 183,
	0, 0, 183, 183, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 0, 1290, 141, 0, 771, 0, 0, 0,
	0, 0, 0, 183, 771, 0, 0, 771, 0, 0,
	0, 0, 0, 0, 638, 159, 564, 160, 926, 0,
	0, 0, 0, 0, 0, 564, 0, 0, 0, 0,
	183, 0, 0, 129, 130, 151, 150, 177, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 518, 0,
	0, 558, 0, 933, 0, 0, 0, 0, 518, 0,
	0, 0, 0, 0, 0, 0, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 926, 2586,
	2587, 738, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 756, 0, 756,
	0, 0, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 564, 183, 146, 127, 153, 134, 126, 0, 147,
	148, 0, 0, 0, 0, 163, 926, 0, 0, 0,
	0, 0, 0, 0, 168, 135, 0, 0, 648, 0,
	610, 612, 649, 650, 0, 608, 611, 651, 0, 138,
	136, 131, 132, 133, 137, 0, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 183,
	139, 0, 0, 0, 613, 614, 2579, 2583, 2584, 2585,
	2588, 2589, 2590, 2598, 2600, 636, 2599, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 183, 183, 183, 0, 0, 0, 0,
	0, 0, 0, 564, 564, 0, 0, 0, 0, 0,
	1902, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	564, 564, 564, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 1621, 0, 0, 0, 1622, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 0, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1269, 1692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 0,
	1719, 0, 0, 0, 1715, 0, 1998, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2013, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 0, 0, 564, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 0,
	0, 0, 564, 0, 173, 174, 175, 176, 0, 0,
	78, 39, 40, 80, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 564, 0, 2088, 43, 69, 70, 0, 67, 71,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 518,
	0, 518, 755, 0, 518, 564, 183, 1719, 0, 0,
	0, 0, 0, 0, 2113, 0, 0, 0, 0, 0,
	0, 0, 0, 2118, 0, 0, 56, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 564, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 564, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 0,
	576, 0, 0, 0, 0, 183, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1234, 0, 1234, 0, 0, 1234,
	0, 0, 1234, 0, 0, 0, 0, 771, 0, 1235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1414, 0, 0, 0, 0, 0, 0,
	46, 49, 52, 51, 54, 0, 66, 0, 0, 75,
	72, 0, 2231, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 0, 0, 1234, 0, 0, 2256, 1414,
	1234, 518, 55, 83, 82, 0, 0, 64, 65, 53,
	0, 0, 0, 0, 0, 73, 74, 0, 0, 1921,
	0, 738, 0, 1925, 0, 1926, 1927, 0, 0, 0,
	0, 0, 0, 0, 1935, 0, 0, 1936, 1937, 667,
	668, 0, 0, 0, 518, 1602, 0, 0, 0, 0,
	0, 57, 58, 0, 59, 60, 61, 62, 0, 0,
	0, 0, 0, 0, 1943, 1944, 1945, 1946, 1947, 0,
	1949, 0, 0, 0, 0, 0, 1953, 0, 1954, 0,
	926, 0, 1957, 1234, 0, 0, 0, 0, 0, 1719,
	1966, 1967, 1969, 0, 0, 0, 0, 0, 0, 1974,
	1975, 1976, 1977, 1978, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1991, 0, 0, 0,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 683,
	684, 685, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2231, 0, 0, 0, 0,
	0, 0, 0, 86, 0, 0, 0, 0, 518, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	666, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 0,
	1235, 1235, 141, 0, 0, 0, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1460, 159, 0, 160, 0, 1719, 1719, 0,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	0, 1391, 1392, 151, 150, 177, 0, 0, 0, 0,
	0, 1506, 0, 0, 2520, 2521, 2522, 2523, 728, 0,
	79, 0, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 0, 0, 518, 2191, 0, 0, 728, 0,
	0, 0, 0, 1529, 1530, 518, 518, 518, 518, 518,
	518, 518, 0, 0, 0, 2206, 0, 0, 0, 1234,
	1137, 1234, 0, 0, 2212, 2213, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 1184, 0,
	1234, 0, 0, 0, 0, 2567, 0, 2569, 0, 0,
	0, 146, 1393, 153, 0, 1390, 0, 147, 148, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 2255, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2273, 2274, 756, 0, 0,
	0, 0, 0, 0, 756, 756, 0, 0, 0, 576,
	1235, 0, 1719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 756, 1506, 756, 756, 756, 756, 756, 0,
	0, 0, 0, 2642, 0, 0, 0, 2642, 2642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 756, 0, 0, 1719, 0, 0, 0,
	0, 0, 0, 1284, 0, 155, 0, 738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	518, 0, 0, 2372, 0, 1719, 0, 1506, 0, 518,
	2376, 518, 0, 518, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2386, 2387, 2389, 2391, 0, 1719,
	0, 0, 0, 0, 2397, 0, 0, 0, 0, 2401,
	2402, 2403, 0, 0, 0, 0, 2406, 0, 0, 0,
	0, 0, 2408, 0, 2410, 2411, 0, 0, 2412, 0,
	149, 0, 0, 1234, 2417, 2693, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 771, 143, 0, 0, 144, 0, 0, 0,
	2716, 0, 0, 0, 0, 0, 0, 2439, 2440, 0,
	2721, 2444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2456,
	2457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 2721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2507, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 0, 0, 0,
	518, 0, 173, 174, 175, 176, 0, 518, 0, 0,
	0, 0, 518, 518, 0, 0, 518, 0, 1894, 0,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	0, 0, 518, 0, 0, 0, 0, 0, 1099, 1099,
	1099, 0, 0, 0, 2534, 0, 0, 0, 2535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1509, 0, 728, 1172, 1173, 1174, 0,
	1177, 0, 1179, 1180, 1181, 1182, 0, 1185, 1187, 1187,
	0, 1187, 1191, 1191, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 756,
	1219, 1220, 1221, 1222, 1223, 0, 0, 0, 0, 1191,
	1191, 1191, 1191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2620, 0, 0, 0,
	0, 0, 0, 0, 0, 1562, 1563, 1564, 1565, 0,
	2630, 2631, 2632, 0, 2633, 2634, 0, 0, 0, 0,
	2637, 0, 2638, 2641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 756, 756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 1607, 1608, 518, 1244,
	0, 0, 0, 0, 1613, 728, 1460, 0, 0, 728,
	0, 2667, 0, 0, 0, 728, 0, 0, 0, 1649,
	1650, 1651, 1652, 1653, 1654, 1656, 1660, 1661, 576, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 518, 1387, 0, 0, 0,
	0, 2681, 0, 0, 0, 0, 0, 576, 0, 120,
	0, 142, 0, 0, 2687, 0, 0, 0, 0, 0,
	2688, 2689, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2695, 0,
	0, 0, 0, 1726, 1727, 0, 0, 0, 0, 2703,
	0, 0, 0, 152, 0, 0, 0, 0, 141, 518,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 0,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 2742,
	0, 0, 0, 2743, 0, 0, 0, 1391, 1392, 151,
	150, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 518, 518,
	518, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 518, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 1393, 153,
	0, 1390, 0, 147, 148, 1235, 0, 1235, 0, 163,
	1235, 0, 0, 1235, 0, 0, 0, 756, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 1235, 518, 518, 518, 518, 518, 0, 0, 0,
	0, 0, 0, 0, 2272, 0, 0, 0, 0, 518,
	0, 0, 1460, 0, 518, 0, 0, 518, 2283, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 1099, 1099,
	1099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 518, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 0,
	518, 0, 0, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 1284, 660, 667, 668, 669, 670, 671, 661, 663,
	0, 0, 0, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 672, 673, 1746,
	0, 0, 0, 0, 518, 0, 0, 0, 0, 0,
	0, 0, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 0, 0, 0, 0, 518, 173, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2349, 2350, 0, 518, 0, 0, 518, 518,
	518, 0, 0, 0, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	1235, 0, 1235, 660, 667, 668, 669, 670, 671, 661,
	663, 0, 1460, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 0, 2159, 0, 0, 0, 665, 672, 673,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2182, 2183, 0, 0, 0, 2186, 0, 0, 0,
	0, 2188, 2189, 2190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2195, 2196, 2197, 0, 0, 1667, 2199,
	0, 2200, 2201, 2349, 2350, 0, 2208, 2209, 0, 0,
	0, 0, 0, 0, 0, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 2244, 0, 0, 0, 0, 1910, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 648,
	0, 0, 0, 649, 650, 0, 0, 0, 651, 2277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2332, 0, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 1235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 728, 0,
	1460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2394, 0, 0, 0, 0, 0, 0, 2400, 2024, 2025,
	0, 0, 0, 0, 0, 0, 0, 2044, 0, 2045,
	2046, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2497, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2512, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2526, 0, 2527, 0, 0, 0, 0, 2530, 2531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2563, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2571, 0, 0, 2573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 2577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2602,
	0, 0, 0, 2253, 0, 79, 0, 0, 1746, 1746,
	1746, 1746, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2044, 728, 0, 576, 0,
	1746, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2650, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 2375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2539, 0, 2543, 2544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2253,
	0, 79, 0, 2253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 2696, 0, 904, 889,
	439, 79, 836, 907, 805, 824, 917, 827, 830, 871,
	784, 850, 360, 821, 776, 809, 779, 816, 780, 807,
	838, 244, 804, 891, 854, 906, 315, 241, 786, 810,
	374, 826, 193, 873, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 913, 319,
	860, 0, 424, 345, 0, 0, 0, 840, 895, 848,
	885, 835, 872, 794, 859, 908, 822, 868, 909, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 2709, 0, 2710, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 818, 865, 903, 819, 867,
	239, 285, 246, 238, 443, 914, 894, 783, 847, 902,
	0, 0, 209, 905, 842, 0, 870, 0, 920, 778,
	862, 0, 781, 785, 916, 898, 813, 249, 0, 0,
	0, 0, 0, 0, 0, 839, 849, 882, 833, 0,
	0, 0, 0, 0, 0, 0, 811, 0, 858, 0,
	0, 0, 790, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 793,
	0, 812, 883, 0, 775, 268, 787, 346, 231, 0,
	887, 897, 834, 477, 901, 832, 831, 877, 791, 893,
	825, 314, 789, 293, 188, 205, 0, 823, 356, 397,
	403, 892, 808, 817, 229, 815, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 857, 875, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 1101, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 803, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 888, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 880, 919, 369, 402, 219, 463, 423, 798,
	802, 796, 797, 852, 853, 799, 910, 911, 912, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 884, 792,
	0, 800, 801, 0, 890, 899, 900, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 856, 187,
	202, 317, 915, 391, 261, 491, 471, 467, 777, 795,
	236, 806, 814, 0, 820, 828, 829, 841, 843, 844,
	845, 846, 863, 864, 866, 874, 876, 879, 881, 886,
	896, 918, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 855, 861, 328, 254, 273, 284, 869,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 851,
	878, 324, 440, 441, 280, 342, 0, 0, 904, 889,
	439, 0, 836, 907, 805, 824, 917, 827, 830, 871,
	784, 850, 360, 821, 776, 809, 779, 816, 780, 807,
	838, 244, 804, 891, 854, 906, 315, 241, 786, 810,
	374, 826, 193, 873, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 913, 319,
	860, 0, 424, 345, 0, 0, 0, 840, 895, 848,
	885, 835, 872, 794, 859, 908, 822, 868, 909, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 818, 865, 903, 819, 867,
	239, 285, 246, 238, 443, 914, 894, 783, 847, 902,
	0, 0, 209, 905, 842, 0, 870, 0, 920, 778,
	862, 0, 781, 785, 916, 898, 813, 249, 0, 0,
	0, 0, 0, 0, 0, 839, 849, 882, 833, 0,
	0, 0, 0, 0, 2284, 0, 811, 0, 858, 0,
	0, 0, 790, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 793,
	0, 812, 883, 0, 775, 268, 787, 346, 231, 0,
	887, 897, 834, 477, 901, 832, 831, 877, 791, 893,
	825, 314, 789, 293, 188, 205, 0, 823, 356, 397,
	403, 892, 808, 817, 229, 815, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 857, 875, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 1101, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 803, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 888, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 880, 919, 369, 402, 219, 463, 423, 798,
	802, 796, 797, 852, 853, 799, 910, 911, 912, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 884, 792,
	0, 800, 801, 0, 890, 899, 900, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 856, 187,
	202, 317, 915, 391, 261, 491, 471, 467, 777, 795,
	236, 806, 814, 0, 820, 828, 829, 841, 843, 844,
	845, 846, 863, 864, 866, 874, 876, 879, 881, 886,
	896, 918, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 855, 861, 328, 254, 273, 284, 869,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 851,
	878, 324, 440, 441, 280, 342, 0, 0, 904, 889,
	439, 0, 836, 907, 805, 824, 917, 827, 830, 871,
	784, 850, 360, 821, 776, 809, 779, 816, 780, 807,
	838, 244, 804, 891, 854, 906, 315, 241, 786, 810,
	374, 826, 193, 873, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 913, 319,
	860, 0, 424, 345, 0, 0, 0, 840, 895, 848,
	885, 835, 872, 794, 859, 908, 822, 868, 909, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 818, 865, 903, 819, 867,
	239, 285, 246, 238, 443, 914, 894, 783, 847, 902,
	0, 0, 209, 905, 842, 0, 870, 0, 920, 778,
	862, 0, 781, 785, 916, 898, 813, 249, 0, 0,
	0, 0, 0, 0, 0, 839, 849, 882, 833, 0,
	0, 0, 0, 0, 2242, 0, 811, 0, 858, 0,
	0, 0, 790, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 793,
	0, 812, 883, 0, 775, 268, 787, 346, 231, 0,
	887, 897, 834, 477, 901, 832, 831, 877, 791, 893,
	825, 314, 789, 293, 188, 205, 0, 823, 356, 397,
	403, 892, 808, 817, 229, 815, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 857, 875, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 1101, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 803, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 888, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 880, 919, 369, 402, 219, 463, 423, 798,
	802, 796, 797, 852, 853, 799, 910, 911, 912, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 884, 792,
	0, 800, 801, 0, 890, 899, 900, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 856, 187,
	202, 317, 915, 391, 261, 491, 471, 467, 777, 795,
	236, 806, 814, 0, 820, 828, 829, 841, 843, 844,
	845, 846, 863, 864, 866, 874, 876, 879, 881, 886,
	896, 918, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 855, 861, 328, 254, 273, 284, 869,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 851,
	878, 324, 440, 441, 280, 342, 0, 0, 904, 889,
	439, 0, 836, 907, 805, 824, 917, 827, 830, 871,
	784, 850, 360, 821, 776, 809, 779, 816, 780, 807,
	838, 244, 804, 891, 854, 906, 315, 241, 786, 810,
	374, 826, 193, 873, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 913, 319,
	860, 0, 424, 345, 0, 0, 0, 840, 895, 848,
	885, 835, 872, 794, 859, 908, 822, 868, 909, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 818, 865, 903, 819, 867,
	239, 285, 246, 238, 443, 914, 894, 783, 847, 902,
	0, 0, 209, 905, 842, 0, 870, 0, 920, 778,
	862, 0, 781, 785, 916, 898, 813, 249, 0, 0,
	0, 0, 0, 0, 0, 839, 849, 882, 833, 0,
	0, 0, 0, 0, 1734, 0, 811, 0, 858, 0,
	0, 0, 790, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 793,
	0, 812, 883, 0, 775, 268, 787, 346, 231, 0,
	887, 897, 834, 477, 901, 832, 831, 877, 791, 893,
	825, 314, 789, 293, 188, 205, 0, 823, 356, 397,
	403, 892, 808, 817, 229, 815, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 857, 875, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 1101, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 803, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 888, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 880, 919, 369, 402, 219, 463, 423, 798,
	802, 796, 797, 852, 853, 799, 910, 911, 912, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 884, 792,
	0, 800, 801, 0, 890, 899, 900, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 856, 187,
	202, 317, 915, 391, 261, 491, 471, 467, 777, 795,
	236, 806, 814, 0, 820, 828, 829, 841, 843, 844,
	845, 846, 863, 864, 866, 874, 876, 879, 881, 886,
	896, 918, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 855, 861, 328, 254, 273, 284, 869,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 851,
	878, 324, 440, 441, 280, 342, 0, 0, 904, 889,
	439, 0, 836, 907, 805, 824, 917, 827, 830, 871,
	784, 850, 360, 821, 776, 809, 779, 816, 780, 807,
	838, 244, 804, 891, 854, 906, 315, 241, 786, 810,
	374, 826, 193, 873, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 913, 319,
	860, 0, 424, 345, 0, 0, 0, 840, 895, 848,
	885, 835, 872, 794, 859, 908, 822, 868, 909, 287,
	226, 192, 357, 425, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 818, 865, 903, 819, 867,
	239, 285, 246, 238, 443, 914, 894, 783, 847, 902,
	0, 0, 209, 905, 842, 0, 870, 0, 920, 778,
	862, 0, 781, 785, 916, 898, 813, 249, 0, 0,
	0, 0, 0, 0, 0, 839, 849, 882, 833, 0,
	0, 0, 0, 0, 0, 0, 811, 0, 858, 0,
	0, 0, 790, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 793,
	0, 812, 883, 0, 775, 268, 787, 346, 231, 0,
	887, 897, 834, 477, 901, 832, 831, 877, 791, 893,
	825, 314, 789, 293, 188, 205, 0, 823, 356, 397,
	403, 892, 808, 817, 229, 815, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 857, 875, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 1101, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 803, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 888, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 880, 919, 369, 402, 219, 463, 423, 798,
	802, 796, 797, 852, 853, 799, 910, 911, 912, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 884, 792,
	0, 800, 801, 0, 890, 899, 900, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 856, 187,
	202, 317, 915, 391, 261, 491, 471, 467, 777, 795,
	236, 806, 814, 0, 820, 828, 829, 841, 843, 844,
	845, 846, 863, 864, 866, 874, 876, 879, 881, 886,
	896, 918, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 855, 861, 328, 254, 273, 284, 869,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 851,
	878, 324, 440, 441, 280, 342, 0, 0, 904, 889,
	439, 0, 836, 907, 805, 824, 917, 827, 830, 871,
	784, 850, 360, 821, 776, 809, 779, 816, 780, 807,
	838, 244, 804, 891, 854, 906, 315, 241, 786, 810,
	374, 826, 193, 873, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 913, 319,
	860, 0, 424, 345, 0, 0, 0, 840, 895, 848,
	885, 835, 872, 794, 859, 908, 822, 868, 909, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 818, 865, 903, 819, 867,
	239, 285, 246, 238, 443, 914, 894, 783, 847, 902,
	0, 0, 209, 905, 842, 0, 870, 0, 920, 778,
	862, 0, 781, 785, 916, 898, 813, 249, 0, 0,
	0, 0, 0, 0, 0, 839, 849, 882, 833, 0,
	0, 0, 0, 0, 0, 0, 811, 0, 858, 0,
	0, 0, 790, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 793,
	0, 812, 883, 0, 775, 268, 787, 346, 231, 0,
	887, 897, 834, 477, 901, 832, 831, 877, 791, 893,
	825, 314, 789, 293, 188, 205, 0, 823, 356, 397,
	403, 892, 808, 817, 229, 815, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 857, 875, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 1101, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 803, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 888, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 880, 919, 369, 402, 219, 463, 423, 798,
	802, 796, 797, 852, 853, 799, 910, 911, 912, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 884, 792,
	0, 800, 801, 0, 890, 899, 900, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 856, 187,
	202, 317, 915, 391, 261, 491, 471, 467, 777, 795,
	236, 806, 814, 0, 820, 828, 829, 841, 843, 844,
	845, 846, 863, 864, 866, 874, 876, 879, 881, 886,
	896, 918, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 855, 861, 328, 254, 273, 284, 869,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 851,
	878, 324, 440, 441, 280, 342, 0, 0, 904, 889,
	439, 0, 836, 907, 805, 824, 917, 827, 830, 871,
	784, 850, 360, 821, 776, 809, 779, 816, 780, 807,
	838, 244, 804, 891, 854, 906, 315, 241, 786, 810,
	374, 826, 193, 873, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 913, 319,
	860, 0, 424, 345, 0, 0, 0, 840, 895, 848,
	885, 835, 872, 794, 859, 908, 822, 868, 909, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 818, 865, 903, 819, 867,
	239, 285, 246, 238, 443, 914, 894, 783, 847, 902,
	0, 0, 921, 905, 842, 0, 870, 0, 920, 778,
	862, 0, 781, 785, 916, 898, 813, 249, 0, 0,
	0, 0, 0, 0, 0, 839, 849, 882, 833, 0,
	0, 0, 0, 0, 0, 0, 811, 0, 858, 0,
	0, 0, 790, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 793,
	0, 812, 883, 0, 775, 268, 787, 346, 231, 0,
	887, 897, 834, 477, 901, 832, 831, 877, 791, 893,
	825, 314, 789, 293, 188, 205, 0, 823, 356, 397,
	403, 892, 808, 817, 229, 815, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 857, 875, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 788, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 803, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 888, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 774, 768, 767,
	294, 321, 880, 919, 369, 402, 219, 463, 423, 798,
	802, 796, 797, 852, 853, 799, 910, 911, 912, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 884, 792,
	0, 800, 801, 0, 890, 899, 900, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 856, 187,
	202, 317, 915, 391, 261, 491, 471, 467, 777, 795,
	236, 806, 814, 0, 820, 828, 829, 841, 843, 844,
	845, 846, 863, 864, 866, 874, 876, 879, 881, 886,
	896, 918, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 855, 861, 328, 254, 273, 284, 869,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 851,
	878, 324, 440, 441, 280, 342, 0, 0, 904, 889,
	439, 0, 836, 907, 805, 824, 917, 827, 830, 871,
	784, 850, 360, 821, 776, 809, 779, 816, 780, 807,
	838, 244, 804, 891, 854, 906, 315, 241, 786, 810,
	374, 826, 193, 873, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 913, 319,
	860, 0, 424, 345, 0, 0, 0, 840, 895, 848,
	885, 835, 872, 794, 859, 908, 822, 868, 909, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 818, 865, 903, 819, 867,
	239, 285, 246, 238, 443, 914, 894, 783, 847, 902,
	0, 0, 921, 905, 842, 0, 870, 0, 920, 778,
	862, 0, 781, 785, 916, 898, 813, 249, 0, 0,
	0, 0, 0, 0, 0, 839, 849, 882, 833, 0,
	0, 0, 0, 0, 0, 0, 811, 0, 858, 0,
	0, 0, 790, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 793,
	0, 812, 883, 0, 775, 268, 787, 346, 231, 0,
	887, 897, 834, 477, 901, 832, 831, 877, 791, 893,
	825, 314, 789, 293, 188, 205, 0, 823, 356, 397,
	403, 892, 808, 817, 229, 815, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 857, 875, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 1301, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 788, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 803, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 888, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 774, 768, 767,
	294, 321, 880, 919, 369, 402, 219, 463, 423, 798,
	802, 796, 797, 852, 853, 799, 910, 911, 912, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 884, 792,
	0, 800, 801, 0, 890, 899, 900, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 856, 187,
	202, 317, 915, 391, 261, 491, 471, 467, 777, 795,
	236, 806, 814, 0, 820, 828, 829, 841, 843, 844,
	845, 846, 863, 864, 866, 874, 876, 879, 881, 886,
	896, 918, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 855, 861, 328, 254, 273, 284, 869,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 851,
	878, 324, 440, 441, 280, 342, 0, 0, 904, 889,
	439, 0, 836, 907, 805, 824, 917, 827, 830, 871,
	784, 850, 360, 821, 776, 809, 779, 816, 780, 807,
	838, 244, 804, 891, 854, 906, 315, 241, 786, 810,
	374, 826, 193, 873, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 913, 319,
	860, 0, 424, 345, 0, 0, 0, 840, 895, 848,
	885, 835, 872, 794, 859, 908, 822, 868, 909, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 818, 865, 903, 819, 867,
	239, 285, 246, 238, 443, 914, 894, 783, 847, 902,
	0, 0, 921, 905, 842, 0, 870, 0, 920, 778,
	862, 0, 781, 785, 916, 898, 813, 249, 0, 0,
	0, 0, 0, 0, 0, 839, 849, 882, 833, 0,
	0, 0, 0, 0, 0, 0, 811, 0, 858, 0,
	0, 0, 790, 782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 837, 0, 0, 0, 793,
	0, 812, 883, 0, 775, 268, 787, 346, 231, 0,
	887, 897, 834, 477, 901, 832, 831, 877, 791, 893,
	825, 314, 789, 293, 188, 205, 0, 823, 356, 397,
	403, 892, 808, 817, 229, 815, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 857, 875, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 765, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 788, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 803, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 888, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 774, 768, 767,
	294, 321, 880, 919, 369, 402, 219, 463, 423, 798,
	802, 796, 797, 852, 853, 799, 910, 911, 912, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 884, 792,
	0, 800, 801, 0, 890, 899, 900, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 856, 187,
	202, 317, 915, 391, 261, 491, 471, 467, 777, 795,
	236, 806, 814, 0, 820, 828, 829, 841, 843, 844,
	845, 846, 863, 864, 866, 874, 876, 879, 881, 886,
	896, 918, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 855, 861, 328, 254, 273, 284, 869,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 851,
	878, 324, 440, 441, 280, 342, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 1679, 0, 594, 0, 0,
	0, 244, 599, 0, 0, 0, 315, 241, 0, 1680,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 606, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 87, 0, 0, 184,
	185, 186, 660, 667, 668, 669, 670, 671, 661, 663,
	0, 0, 217, 662, 224, 617, 619, 618, 628, 629,
	630, 631, 632, 633, 634, 615, 665, 672, 673, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	577, 591, 0, 605, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 589, 754, 0, 0, 0, 642, 0,
	590, 0, 0, 598, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	641, 0, 0, 477, 0, 0, 639, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	623, 624, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 648,
	640, 610, 612, 649, 650, 607, 608, 611, 651, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 643, 597,
	596, 0, 603, 604, 0, 613, 614, 616, 620, 621,
	622, 625, 626, 627, 652, 654, 636, 653, 595, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 594, 0, 0, 0, 244, 599, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 606, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 87, 0, 0, 184, 185, 186, 660, 667, 668,
	669, 670, 671, 661, 663, 0, 0, 217, 662, 224,
	617, 619, 618, 628, 629, 630, 631, 632, 633, 634,
	615, 665, 672, 673, 0, 239, 285, 246, 238, 443,
	0, 0, 1657, 1658, 1659, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 577, 591, 0, 605, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 589, 0,
	0, 0, 0, 642, 0, 590, 0, 0, 598, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 641, 0, 0, 477, 0,
	0, 639, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 623, 624, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 648, 640, 610, 612, 649, 650,
	607, 608, 611, 651, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 643, 597, 596, 0, 603, 604, 0,
	613, 614, 616, 620, 621, 622, 625, 626, 627, 652,
	654, 636, 653, 595, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 594, 0, 0,
	0, 244, 599, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 606, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 601,
	602, 0, 0, 0, 0, 0, 0, 1761, 0, 287,
	226, 192, 357, 425, 259, 0, 87, 0, 0, 184,
	185, 186, 660, 667, 668, 669, 670, 671, 661, 663,
	0, 0, 217, 662, 224, 617, 619, 618, 628, 629,
	630, 631, 632, 633, 634, 615, 665, 672, 673, 1762,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	577, 591, 0, 605, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 589, 0, 0, 0, 0, 642, 0,
	590, 0, 0, 598, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	641, 0, 0, 477, 0, 0, 639, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	623, 624, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 648,
	640, 610, 612, 649, 650, 607, 608, 611, 651, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 643, 597,
	596, 0, 603, 604, 0, 613, 614, 616, 620, 621,
	622, 625, 626, 627, 652, 654, 636, 653, 595, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	0, 324, 440, 441, 280, 342, 0, 0, 0, 78,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 594, 0, 0,
	0, 244, 599, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 606, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 87, 0, 0, 184,
	185, 186, 660, 667, 668, 669, 670, 671, 661, 663,
	0, 0, 217, 662, 224, 617, 619, 618, 628, 629,
	630, 631, 632, 633, 634, 615, 665, 672, 673, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	577, 591, 0, 605, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 589, 0, 0, 0, 0, 642, 0,
	590, 0, 0, 598, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	641, 0, 0, 477, 0, 0, 639, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	623, 624, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 648,
	640, 610, 612, 649, 650, 607, 608, 611, 651, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 643, 597,
	596, 0, 603, 604, 0, 613, 614, 616, 620, 621,
	622, 625, 626, 627, 652, 654, 636, 653, 595, 187,
	202, 317, 86, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 594, 0, 0, 0, 244, 599, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 606, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 87, 0, 0, 184, 185, 186, 660, 667, 668,
	669, 670, 671, 661, 663, 0, 0, 217, 662, 224,
	617, 619, 618, 628, 629, 630, 631, 632, 633, 634,
	615, 665, 672, 673, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 577, 591, 0, 605, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 589, 0,
	0, 0, 0, 642, 0, 590, 0, 0, 598, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 641, 0, 0, 477, 0,
	0, 639, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 2675, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 623, 624, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 648, 640, 610, 612, 649, 650,
	607, 608, 611, 651, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 643, 597, 596, 0, 603, 604, 0,
	613, 614, 616, 620, 621, 622, 625, 626, 627, 652,
	654, 636, 653, 595, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 594, 0, 0,
	0, 244, 599, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 606, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 87, 0, 1268, 184,
	185, 186, 660, 667, 668, 669, 670, 671, 661, 663,
	0, 0, 217, 662, 224, 617, 619, 618, 628, 629,
	630, 631, 632, 633, 634, 615, 665, 672, 673, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	577, 591, 0, 605, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 589, 0, 0, 0, 0, 642, 0,
	590, 0, 0, 598, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	641, 0, 0, 477, 0, 0, 639, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	623, 624, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 648,
	640, 610, 612, 649, 650, 607, 608, 611, 651, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 643, 597,
	596, 0, 603, 604, 0, 613, 614, 616, 620, 621,
	622, 625, 626, 627, 652, 654, 636, 653, 595, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 594, 0, 0, 0, 244, 599, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 606, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 87, 0, 0, 184, 185, 186, 660, 667, 668,
	669, 670, 671, 661, 663, 0, 0, 217, 662, 224,
	617, 619, 618, 628, 629, 630, 631, 632, 633, 634,
	615, 665, 672, 673, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 577, 591, 0, 605, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 589, 754,
	0, 0, 0, 642, 0, 590, 0, 0, 598, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 641, 0, 0, 477, 0,
	0, 639, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 623, 624, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 648, 640, 610, 612, 649, 650,
	607, 608, 611, 651, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 643, 597, 596, 0, 603, 604, 0,
	613, 614, 616, 620, 621, 622, 625, 626, 627, 652,
	654, 636, 653, 595, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 594, 0, 0,
	0, 244, 599, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 606, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 601,
	602, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 87, 0, 0, 184,
	185, 186, 660, 667, 668, 669, 670, 671, 661, 663,
	0, 0, 217, 662, 224, 617, 619, 618, 628, 629,
	630, 631, 632, 633, 634, 615, 665, 672, 673, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	577, 591, 0, 605, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 589, 0, 0, 0, 0, 642, 0,
	590, 0, 0, 598, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	641, 0, 0, 477, 0, 0, 639, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	623, 624, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 648,
	640, 610, 612, 649, 650, 607, 608, 611, 651, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 643, 597,
	596, 0, 603, 604, 0, 613, 614, 616, 620, 621,
	622, 625, 626, 627, 652, 654, 636, 653, 595, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 594, 0, 0, 0, 244, 599, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 606, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 601, 602, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 87, 0, 0, 184, 185, 186, 660, 667, 668,
	669, 670, 671, 661, 663, 0, 0, 217, 662, 224,
	617, 619, 618, 628, 629, 630, 631, 632, 633, 634,
	615, 665, 672, 673, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 0, 605, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 589, 0,
	0, 0, 0, 642, 0, 590, 0, 0, 598, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 641, 0, 0, 477, 0,
	0, 639, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 623, 624, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 648, 640, 610, 612, 649, 650,
	607, 608, 611, 651, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 643, 597, 596, 0, 603, 604, 0,
	613, 614, 616, 620, 621, 622, 625, 626, 627, 652,
	654, 636, 653, 595, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 667, 668, 0, 0, 0, 0, 1602,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 968, 477, 0,
	0, 0, 0, 0, 965, 966, 314, 929, 293, 188,
	205, 959, 963, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 0, 324, 440, 441, 280,
	342, 0, 0, 0, 78, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 87, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 86, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 1748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 1287, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 1289, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 1133, 0, 1134, 1135,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 1230, 1233, 0,
	0, 0, 0, 1229, 1232, 0, 0, 217, 1228, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 0, 324, 440, 441, 280,
	342, 0, 0, 0, 78, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 87, 0, 1268, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 86, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 87, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	1748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 1701, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1461, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 1699, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 923, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 929, 293, 188, 205, 927, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 1701, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1461, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 1268, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 2643, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 2014, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2015, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 1999, 0, 0, 0, 2000,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 1312, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 2717, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 2643, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1461, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 1553, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 1433,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 1431, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 1429,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 1427, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 1425,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 1421, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 1419,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 1417, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 1394, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	1296, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 569, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 568, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 516, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 2722, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	342, 324, 440, 441, 280, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 315, 241, 0, 0, 374, 0, 193, 0, 415,
	228, 325, 322, 446, 255, 247, 243, 227, 281, 332,
	372, 433, 366, 0, 319, 0, 0, 424, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 357, 425, 259,
	0, 0, 0, 0, 184, 2418, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	304, 308, 307, 297, 298, 300, 301, 303, 306, 311,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 443,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 346, 231, 0, 0, 0, 0, 477, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 293, 188,
	205, 0, 0, 356, 397, 403, 0, 0, 0, 229,
	0, 401, 370, 461, 213, 257, 394, 375, 399, 382,
	260, 0, 0, 400, 320, 448, 389, 458, 478, 479,
	237, 350, 468, 437, 474, 490, 206, 234, 364, 430,
	464, 421, 343, 444, 445, 292, 420, 266, 191, 318,
	484, 204, 409, 221, 211, 197, 432, 456, 218, 412,
	0, 0, 492, 199, 454, 429, 339, 289, 290, 198,
	0, 393, 242, 264, 232, 359, 451, 452, 230, 493,
	208, 473, 201, 0, 472, 352, 447, 455, 340, 330,
	200, 453, 338, 329, 295, 312, 313, 253, 275, 387,
	323, 388, 276, 348, 347, 349, 194, 465, 0, 195,
	0, 426, 466, 494, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 316, 363, 386, 384, 390,
	0, 442, 459, 469, 476, 482, 483, 485, 486, 487,
	488, 489, 351, 278, 422, 294, 321, 0, 0, 369,
	402, 219, 463, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 331, 414, 460, 296, 302, 305, 299,
	309, 0, 310, 0, 187, 202, 317, 0, 391, 261,
	491, 471, 467, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 327, 333, 334, 335, 336, 353, 354, 355,
	358, 361, 362, 365, 367, 368, 371, 378, 379, 380,
	381, 383, 385, 392, 396, 404, 405, 406, 407, 408,
	410, 411, 416, 417, 418, 419, 427, 431, 449, 450,
	462, 475, 480, 270, 457, 481, 0, 326, 0, 0,
	328, 254, 273, 284, 0, 470, 428, 207, 398, 262,
	196, 225, 210, 233, 248, 251, 288, 337, 344, 373,
	377, 267, 245, 223, 395, 220, 413, 434, 435, 436,
	438, 341, 240, 376, 0, 342, 324, 440, 441, 280,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 315, 241, 0, 0,
	374, 0, 193, 0, 415, 228, 325, 322, 446, 255,
	247, 243, 227, 281, 332, 372, 433, 366, 0, 319,
	0, 0, 424, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 357, 425, 259, 0, 0, 0, 0, 184,
	1995, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 304, 308, 307, 297, 298,
	300, 301, 303, 306, 311, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 443, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 346, 231, 0,
	0, 0, 0, 477, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 293, 188, 205, 0, 0, 356, 397,
	403, 0, 0, 0, 229, 0, 401, 370, 461, 213,
	257, 394, 375, 399, 382, 260, 0, 0, 400, 320,
	448, 389, 458, 478, 479, 237, 350, 468, 437, 474,
	490, 206, 234, 364, 430, 464, 421, 343, 444, 445,
	292, 420, 266, 191, 318, 484, 204, 409, 221, 211,
	197, 432, 456, 218, 412, 0, 0, 492, 199, 454,
	429, 339, 289, 290, 198, 0, 393, 242, 264, 232,
	359, 451, 452, 230, 493, 208, 473, 201, 0, 472,
	352, 447, 455, 340, 330, 200, 453, 338, 329, 295,
	312, 313, 253, 275, 387, 323, 388, 276, 348, 347,
	349, 194, 465, 0, 195, 0, 426, 466, 494, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	316, 363, 386, 384, 390, 0, 442, 459, 469, 476,
	482, 483, 485, 486, 487, 488, 489, 351, 278, 422,
	294, 321, 0, 0, 369, 402, 219, 463, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 511, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 513, 331, 414,
	460, 296, 302, 305, 299, 309, 0, 310, 0, 187,
	202, 317, 0, 391, 261, 491, 471, 467, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 327, 333, 334,
	335, 336, 353, 354, 355, 358, 361, 362, 365, 367,
	368, 371, 378, 379, 380, 381, 383, 385, 392, 396,
	404, 405, 406, 407, 408, 410, 411, 416, 417, 418,
	419, 427, 431, 449, 450, 462, 475, 480, 270, 457,
	481, 0, 326, 0, 0, 328, 254, 273, 284, 0,
	470, 428, 207, 398, 262, 196, 225, 210, 233, 248,
	251, 288, 337, 344, 373, 377, 267, 245, 223, 395,
	220, 413, 434, 435, 436, 438, 341, 240, 376, 0,
	0, 324, 440, 441, 280,
}

var yyPact = [...]int{
	3942, -1000, -399, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1870, 1895, -1000, -1000,
	-1000, -1000, 2002, -1000, 611, 1613, -1000, 1850, 3374, -1000,
	38221, 343, -1000, 37071, 342, 242, 38221, -1000, 133, -1000,
	122, 38221, 129, 36496, -1000, -1000, -304, 16361, 1800, 15,
	12, 38221, -1000, -1000, -1000, -1000, 1977, 1519, -1000, 294,
	-1000, -1000, -1000, -1000, -1000, -1000, 35921, -1000, -1000, -1000,
	1856, 1846, 2008, 495, 1793, -1000, 1926, 1519, -1000, 16361,
	1962, 1907, 15786, -1000, 15786, 306, -1000, -1000, 11751, -1000,
	-1000, 22121, 38221, 38221, 206, -1000, 1850, -1000, -1000, 290,
	-1000, 219, 1449, -1000, 1443, -1000, 462, 420, 243, 380,
	368, 241, 240, 239, 236, 235, 234, 233, 232, 249,
	-1000, 559, 559, -189, -199, 282, 297, 297, 297, 324,
	1825, 1823, -1000, 629, -1000, 559, 559, 288, 559, 559,
	559, 559, 199, 197, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 295,
	1850, 192, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 38221, 162, 38221, -1000, 421, 38221,
	708, 708, 37, 708, 708, 708, 708, 132, 536, 9,
	-1000, 130, 187, 118, 190, 641, 156, 138, -1000, -1000,
	188, 641, 1072, 498, 105, -1000, 708, 9431, 9431, 9431,
	-1000, 1829, -1000, -1000, -1000, -1000, -1000, -1000, 1058, -1000,
	321, -1000, -1000, -1000, -1000, 38221, 35346, 292, 577, -1000,
	-1000, -1000, 31, -1000, -1000, 1216, 855, 16361, 954, -1000,
	1101, 469, -1000, -1000, -1000, -1000, -1000, 383, 16936, 16936,
	16936, 16936, -1000, -1000, 1467, 1467, 1467, 1467, 16936, 1467,
	16936, 1467, 1467, 1467, 1467, 16361, 1467, 1467, 1467, -1000,
	1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467,
	1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467,
	1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467, 416, 1467,
	1467, 1467, 1467, 1467, -1000, -1000, -1000, -1000, 1467, 1467,
	1467, 1467, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 19816, -1000, 14061, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 38221, -1000, 1467, 149,
	38221, 38221, 220, 1926, 1519, -1000, 1977, 1948, 294, -1000,
	2132, 1322, 1425, 959, 1519, 1389, 38221, -1000, 1483, -1000,
	-1000, -1000, 1736, 1005, 1071, -1000, -1000, -1000, -1000, 1438,
	16361, -1000, -1000, 1999, -1000, 19241, 413, 729, 1998, 34771,
	-1000, 306, 306, 1433, 11171, -15, -1000, -1000, -1000, 573,
	24996, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1829, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1590, 38221, -1000, -1000, 2673, 986, -1000, 1612,
	-1000, 1572, -1000, 1571, 1624, 338, 986, 332, 331, 328,
	-1000, -103, -1000, -1000, -1000, -1000, -1000, 559, 559, -1000,
	228, 1960, 3374, 5208, -1000, -1000, -1000, 34196, 1611, 986,
	-1000, 1610, -1000, 646, 397, 427, 427, 986, -1000, -1000,
	38221, 986, 644, 639, 38221, 38221, -1000, 33621, -1000, 33046,
	32471, 949, 38221, 31896, 31321, 30746, 30171, 29596, -1000, 1700,
	-1000, 1692, -1000, -1000, -1000, 38221, 38221, 38221, 305, -1000,
	-1000, 38221, 986, -1000, -1000, 933, 926, 559, 559, 906,
	1066, 1064, 1063, 559, 559, 900, 1054, 26721, 204, 885,
	883, 876, 997, 1053, 173, 936, 895, 872, 38221, 1604,
	38221, -1000, 182, 638, 350, 571, 1850, 1798, 1421, 314,
	335, 986, 307, 307, 38221, -1000, 10011, -1000, -1000, 1047,
	16361, -1000, 673, 641, 641, -1000, -1000, -1000, -1000, -1000,
	-1000, 708, 38221, 673, -1000, -1000, -1000, 641, 708, 38221,
	708, 708, 708, 708, 641, 641, 641, 708, 38221, 38221,
	38221, 38221, 38221, 38221, 38221, 38221, 38221, 9431, 9431, 9431,
	498, 708, -319, -1000, 1046, -1000, 1688, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 125, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -108, 1417, 29021, -1000,
	-321, -322, -326, -327, -1000, -1000, -1000, -328, -329, -1000,
	-1000, -1000, 16361, 16361, 16361, 16361, -221, -1000, 674, 16936,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 817, 668, 16936,
	16936, 16936, 16936, 16936, 16936, 16936, 16936, 16936, 16936, 16936,
	16936, 16936, 16936, 16936, 797, 4137, 4137, 469, 469, 469,
	469, -1000, 15786, 16361, 16361, 469, -1000, 986, 28446, 15786,
	15786, 16361, 1840, 586, 855, 38221, -1000, 959, -1000, -1000,
	-1000, 820, -1000, 38221, 38221, 458, 16361, 16361, 16361, 16361,
	16361, 16361, 12906, 16361, 16361, 16361, 16361, 16361, 16361, 16361,
	16361, 16361, 16361, 16361, 16361, 16361, 16361, 12331, 10011, 15786,
	15786, 15786, 15786, 15786, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 404, 1341, 1270, 1504, -1000,
	1391, -1000, -172, 21546, 16361, 1031, 1997, 1640, 38221, -1000,
	-1000, -1000, 1926, -1000, 1926, 1341, 2018, 1744, 15786, -1000,
	-1000, 2018, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1159, -1000, 38221, 1389, 1903, 38221, 1732, 1024, 293, -1000,
	16361, 16361, 1384, -1000, 1352, 38221, -1000, -221, -1000, 27871,
	-1000, -1000, 8851, -1000, 38221, 213, 38221, -1000, 20971, 27296,
	10591, -15, -1000, 10591, 1330, -1000, -8, -12, 13481, 467,
	-1000, -1000, -1000, 282, 18086, 1185, 467, 61, -1000, -1000,
	-1000, 1571, -1000, 1571, 1571, 1571, 1571, 293, 293, 293,
	293, -1000, -1000, -1000, -1000, -1000, 1603, 1602, -1000, 1571,
	1571, 1571, 1571, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1601, 1601, 1601, 1588, 1588, 298, -1000, 16361, 217, 38221,
	1881, 869, 182, 308, 1635, 986, 986, 986, 308, -1000,
	976, 968, -1000, -387, 1377, -1000, -1000, 1959, -1000, -1000,
	569, 665, 663, 556, 38221, 157, 212, -1000, 289, -1000,
	38221, 986, 637, 427, 986, -1000, 986, -1000, -1000, -1000,
	-1000, -1000, 986, 1371, -1000, 1415, 836, 661, 734, 659,
	1371, -1000, -1000, -132, 1371, -1000, 1371, -1000, 1371, -1000,
	1371, -1000, 1371, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 524, 38221, 157, 797, -1000, 312, -1000, -1000, 797,
	797, -1000, -1000, -1000, -1000, 1023, 1018, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -376, 38221, -1000, 175, 568, 205,
	244, 223, 38221, 143, 1909, 168, 196, 38221, 38221, 307,
	1687, 38221, 1888, 38221, -1000, -1000, -1000, -1000, -1000, 855,
	38221, -1000, -1000, 708, 708, -1000, -1000, 38221, 708, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 708, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 38221, 38221, -1000, -1000, -1000,
	-1000, -1000, 115, -26, 285, -1000, -1000, -1000, -1000, -1000,
	1912, -1000, 855, 609, 596, -1000, 1467, -1000, -1000, 794,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 817, 16936, 16936,
	16936, 1472, 356, 846, 1486, 873, 733, 733, 789, 789,
	480, 480, 480, 480, 480, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1007, -1000, 1419, -1000, 1667, 1212, 959,
	-1000, 1419, 1419, 1280, 15786, -1000, -1000, 582, -1000, 16361,
	959, -1000, -1000, 959, 959, 1360, 1346, 1996, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1173,
	1458, 1458, 1458, 1458, 1458, 16361, 1302, -1000, -1000, -1000,
	1701, 1686, 959, 1216, 959, 1344, -1000, 1663, 1458, 1658,
	1651, 1623, 1110, 1615, 1605, 1597, 1458, 1140, 959, 15786,
	15786, 1333, 1467, 392, -1000, 1419, 959, 959, 1419, 1419,
	10011, 959, -1000, 38221, -1000, -307, -1000, -64, 477, 1467,
	-1000, 26721, 959, -1000, 3104, -1000, 39371, -1000, -1000, -1000,
	-1000, -1000, 24421, 1628, 2018, -1000, -1000, 1467, 1484, -1000,
	-1000, 293, 39, 23846, -1000, -1000, 855, 855, 16361, -1000,
	-1000, -1000, -1000, -1000, -1000, 387, 1984, 304, 1467, -1000,
	1282, 1919, -1000, -1000, -1000, 1902, 18666, -1000, 1467, 1467,
	38221, 1525, 1411, -1000, 381, -1000, 1330, -15, -52, -1000,
	-1000, -1000, -1000, 855, -1000, 927, 218, 2483, -1000, 296,
	-1000, -1000, -1000, -1000, 1812, 58, -1000, -1000, -1000, 293,
	293, -1000, -1000, -1000, -1000, -1000, -1000, 1004, 1004, -1000,
	-1000, -1000, -1000, -1000, 867, -1000, -1000, -1000, 831, -1000,
	-1000, 1487, 1677, 217, -1000, -1000, 559, 985, 1818, 38221,
	-1000, -1000, 1146, 175, 38221, 592, 1683, -1000, 1635, 1635,
	1635, 38221, -1000, -1000, -1000, -1000, -377, 56, 323, -1000,
	-1000, -1000, 4392, 38221, 1471, -1000, 154, -1000, 1130, 1759,
	38221, -1000, 1427, 1600, 986, 986, -1000, -1000, -1000, 38221,
	1467, -1000, -1000, -1000, -1000, 334, 1849, 1839, 157, 154,
	467, 986, -1000, -1000, -1000, -1000, -1000, -379, 1423, 326,
	160, 237, 38221, 38221, 38221, 38221, 38221, 365, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 194, 311, -1000, 38221,
	38221, 460, -1000, -1000, -1000, 641, -1000, -1000, 641, -1000,
	-1000, -1000, -1000, -1000, 1834, 38221, -31, -345, -1000, -341,
	16361, -1000, -1000, -1000, -1000, 783, 340, 846, 16936, 16936,
	15786, -126, 1017, 1017, 797, -1000, -1000, -1000, 16361, 16361,
	1210, 570, -1000, 16361, 827, -1000, -1000, -1000, 16361, 16361,
	16361, 959, 246, -1000, -1000, -1000, -1000, -1000, 1993, -1000,
	16361, 16361, 16361, -1000, -1000, 16361, 16361, -1000, 16361, 16361,
	17511, 959, 17511, 16361, 16361, 17511, -1000, -1000, 17511, -1000,
	1419, 1419, 15786, 10011, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 477, -1000, 427, 427, 427, 38221,
	-1000, -1000, -1000, -1000, -1000, -1000, 1308, 1923, -1000, 1757,
	1756, 1990, 1984, -1000, 20971, 2018, -1000, -1000, 38221, -299,
	-1000, 1794, 1764, -1000, -1000, -1000, -1000, 8271, 1926, 16361,
	1680, 38221, 1467, -1000, 20396, 38221, 38221, 20971, 20971, 20971,
	20971, 20971, -1000, 1714, 1699, -1000, 1711, 1710, 1740, 38221,
	-1000, 1409, 959, 1948, 18666, 294, 16361, 22696, 1164, 20971,
	-1000, -1000, 20971, 38221, 7691, -1000, -1000, -44, -32, -1000,
	-1000, -1000, -1000, 282, -1000, -1000, 1393, 1901, 1810, -1000,
	-1000, -1000, -1000, 1387, -1000, 1380, 1285, 1366, 110, -1000,
	1620, 1833, 559, 559, -1000, 829, -1000, 986, -1000, -1000,
	299, -1000, 1886, 38221, 1679, 1672, 1669, -1000, -386, 826,
	1599, 1619, 16361, 1596, 1957, 1266, 38221, -1000, -1000, 38221,
	-1000, -1000, 325, -1000, 217, 38221, -1000, -1000, -1000, 212,
	38221, -1000, 5792, 154, -1000, -1000, -1000, -1000, -1000, -1000,
	38221, 166, -1000, 1595, 989, -1000, -1000, 1591, -1000, -1000,
	-1000, -1000, 139, 203, -1000, 38221, 446, 1677, 38221, -1000,
	-1000, -1000, 708, 708, -1000, -1000, 1830, -1000, 986, 1458,
	16936, 16936, -1000, 469, -1000, 1467, 959, 1571, 1571, -1000,
	1571, 1588, -1000, 1571, 111, 1571, 108, 1571, -1000, -1000,
	959, 959, 1055, 1022, -110, -1000, 855, 16361, 1583, 1537,
	1458, -1000, 1535, 1531, 16361, 1458, 1458, 1458, -1000, 855,
	1110, 1526, 1257, -1000, -1000, -1000, -1000, 1279, 1458, 1399,
	959, 959, -1000, -1000, 959, -1000, -1000, 1911, 1911, 1911,
	1306, 38796, 38221, -1000, -1000, -1000, -1000, 1984, 1981, 1277,
	-1000, -1000, 39, 362, -1000, 1770, 1764, -1000, 1946, 1782,
	1944, -1000, -1000, -1000, 855, -1000, 1841, 1205, -1000, 558,
	1207, -1000, -1000, 15211, 1324, 1742, 376, 1306, 1223, 1919,
	1649, 1665, 1828, -1000, -1000, -1000, -1000, 1673, -1000, 1661,
	-1000, -1000, 1483, -1000, -1000, 1270, 959, 1250, 213, 20971,
	1197, 1197, -1000, 371, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 711, 5631, 2007, -1000, 981, -1000, 907, -1000, 635,
	621, -1000, 38221, 1529, -1000, 293, 980, 293, 823, -1000,
	818, -1000, -1000, -237, -1000, -1000, 1647, 1691, -1000, -1000,
	38221, -1000, -1000, 38221, 38221, 38221, 1522, 1942, -1000, 16361,
	1507, 541, 1480, 38221, 38221, -1000, -1000, 207, 1467, -1000,
	1304, 1297, -1000, -193, -1000, 16361, -1000, -1000, -1000, 839,
	839, -1000, 1483, -1000, -1000, -1000, 1128, -1000, -1000, -136,
	38221, 38221, 38221, 38221, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 469, 16936, -1000, -1000, 293, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16361, -1000,
	16361, -1000, 1926, 970, 855, 16361, 16361, -1000, 811, 810,
	1458, -1000, -1000, -1000, 959, 17511, -1000, 17511, -1000, 16361,
	-1000, -1000, -1000, 1467, 1767, 1467, 1467, 22696, -1000, -1000,
	1981, 1979, 1941, 1776, 1778, 1778, 1770, -1000, 1940, 1937,
	-1000, 969, 1934, 962, 619, -1000, 38221, 16361, 1467, -1000,
	259, 38221, 1467, 38221, -1000, 1964, -1000, -1000, 16361, 1495,
	-1000, 16361, -1000, -1000, -1000, -1000, -1000, -1000, 4137, 1984,
	1197, -1000, -1000, 487, -1000, 16361, -1000, -1000, -1000, 3220,
	-1000, -1000, -1000, -1000, -1000, 1492, 16361, -1000, -1000, -1000,
	1098, 1089, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1483, -1000, -1000, -1000, -1000, 212, -384, 1468, 38221, 757,
	-1000, 1288, 1266, 419, -1000, 16361, 266, -1000, 212, -1000,
	-200, -201, 1458, -1000, -1000, 1898, -1000, -1000, 10011, -1000,
	-1000, 1478, 1626, -1000, 191, -1000, 1458, 1458, 959, -1000,
	1458, 1458, 1086, 1079, -1000, -1000, 1257, -1000, 887, 23271,
	-1000, 1932, 1920, 26146, 26146, 477, 1979, -1000, 16361, 16361,
	1765, 772, -1000, -1000, -1000, -1000, 961, 958, -1000, 957,
	-1000, 2005, -1000, 855, -1000, 1467, -1000, 359, 1207, -1000,
	1926, 855, 38221, 855, 38, 1964, -1000, 1458, -1000, 1467,
	1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467,
	1467, 1467, 1467, 1467, 1467, 1467, 1467, 1467, -1000, -1000,
	-1000, 38221, 1451, -1000, -1000, 1891, 1244, 54, -1000, 1241,
	-1000, -1000, -1000, -1000, 14636, -1000, -1000, -1000, -1000, -1000,
	-1000, 294, 1252, -1000, 538, 38221, 38221, 959, 248, -141,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16361,
	1233, -1000, -1000, -1000, -1000, -1000, 1233, 1233, -1000, -1000,
	855, 1216, -1000, 746, -1000, -1000, -1000, -1000, -1000, 38221,
	1207, 38221, -1000, 1231, 959, 1467, 1926, -1000, 1201, -1000,
	294, -1000, 1457, 1619, -1000, 959, -134, 10011, 7111, 1193,
	-1000, -1000, 1730, -130, -161, 1110, 25571, -1000, -1000, -1000,
	-1000, -1000, 1188, -1000, -1000, 22696, 37646, -1000, 1660, 679,
	-134, 16361, 1342, -1000, -1000, -47, -1000, -1000, -1000, -1000,
	-1000, 1591, -1000, 1705, -1000, 959, -1000, -1000, -1000, 1149,
	-1000, 2628, -266, 1657, -1000, 1989, -1000, -1000, -1000, 684,
	929, -1000, -1000, -1000, -1000, 801, 38221, 287, -1000, -1000,
	-136, -137, -1000, -1000, 37646, -261, 467, 4137, -1000, -1000,
	2004, 486, 486, -1000, -1000, -392, 1085, 180, -1000, -142,
	-1000, -1000, 1885, 38, -1000, -1000, -1000, 283, 816, -1000,
	-1000, 756, -392, -1000, -163, -267, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4137, 181, 181, -1000, 1606, -1000,
	-1000, 4137, -1000, 1496, -248, -1000, -331, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2338, 2337, 29, 5, 2336, 24, 90, 173, 30,
	188, 88, 2333, 2332, 2331, 2330, 2329, 2323, 2322, 207,
	206, 205, 2320, 2318, 2317, 2316, 2315, 2313, 2312, 2310,
	2308, 2307, 201, 162, 169, 2306, 2301, 2299, 117, 172,
	82, 81, 178, 2297, 2296, 73, 2292, 2291, 2289, 184,
	182, 647, 2287, 181, 110, 37, 2286, 2285, 2284, 2283,
	2282, 2281, 2279, 2278, 2276, 2274, 2273, 2271, 2270, 2269,
	2268, 2267, 293, 2266, 2265, 15, 2264, 77, 2263, 2262,
	2261, 2260, 2259, 120, 2258, 2257, 2256, 2255, 2254, 2253,
	140, 2252, 2251, 2250, 2249, 176, 2248, 2247, 241, 101,
	106, 2246, 2245, 92, 165, 2244, 115, 2241, 2240, 2239,
	147, 2238, 3992, 2237, 66, 58, 2236, 47, 80, 50,
	46, 14, 3, 2234, 2233, 65, 74, 2232, 95, 59,
	2231, 91, 98, 2230, 2229, 9, 7, 2228, 4, 2227,
	2, 48, 2226, 2220, 108, 2219, 2218, 2215, 85, 2214,
	2212, 67, 2211, 83, 132, 99, 75, 2210, 35, 60,
	2209, 2208, 2207, 2205, 2203, 38, 2201, 2200, 2193, 138,
	26, 161, 27, 43, 40, 137, 2192, 96, 78, 2190,
	136, 135, 2189, 53, 28, 21, 2185, 23, 124, 150,
	52, 89, 133, 2184, 2183, 42, 69, 2182, 2180, 2179,
	2178, 2177, 2176, 63, 2175, 45, 2172, 199, 2171, 31,
	2169, 41, 34, 2168, 49, 148, 61, 33, 2167, 175,
	2166, 44, 179, 130, 158, 2165, 2160, 2158, 167, 240,
	2157, 2154, 151, 164, 143, 144, 2153, 248, 2152, 2151,
	93, 1369, 2163, 20, 159, 2145, 2141, 3474, 141, 125,
	19, 2139, 107, 2132, 2126, 2120, 177, 163, 111, 892,
	84, 2117, 13, 2114, 2111, 2110, 2108, 2105, 2104, 257,
	183, 68, 8, 154, 71, 2103, 2102, 2101, 118, 97,
	2100, 156, 153, 123, 155, 2099, 166, 146, 126, 2096,
	103, 2095, 2093, 2092, 2089, 86, 2087, 2080, 2079, 2078,
	152, 142, 116, 79, 2077, 76, 128, 145, 149, 39,
	2076, 32, 2075, 2073, 174, 22, 2072, 11, 55, 70,
	16, 105, 2068, 2058, 0, 2052, 12, 160, 242, 157,
	2051, 2047, 6, 2046, 10, 2044, 2043, 134, 2039, 2037,
	2035, 18, 36, 17, 1, 2034, 2023, 4450, 2603, 119,
	2022, 186,
}

//line sql.y:6585
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonAttributeTypeUnion() JSONAttributeType {
	v, _ := st.union.(JSONAttributeType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 345, 346, 346, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 324, 324,
	324, 327, 327, 30, 67, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 81, 81, 20, 21, 21, 21, 21,
	349, 349, 146, 146, 144, 144, 145, 145, 214, 214,
	22, 23, 23, 224, 224, 223, 223, 223, 225, 225,
	225, 225, 259, 259, 24, 24, 24, 24, 24, 96,
	96, 326, 326, 325, 317, 317, 316, 316, 315, 323,
	323, 322, 322, 321, 36, 37, 46, 46, 46, 46,
	47, 48, 328, 328, 291, 52, 52, 51, 51, 51,
	51, 53, 53, 50, 50, 49, 49, 293, 293, 280,
	280, 292, 292, 292, 292, 292, 292, 292, 279, 279,
	107, 107, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 340, 340, 194, 194, 194, 194, 194,
	194, 116, 116, 125, 125, 125, 125, 114, 114, 115,
	113, 113, 113, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 124, 124, 120, 120,
	120, 121, 121, 121, 122, 122, 341, 341, 341, 341,
	262, 262, 262, 262, 265, 265, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 264, 264, 264, 264, 264,
	266, 266, 266, 266, 266, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	268, 268, 268, 268, 268, 268, 268, 268, 278, 278,
	269, 269, 273, 273, 274, 274, 274, 275, 275, 275,
	276, 276, 271, 271, 271, 271, 271, 271, 272, 272,
	272, 281, 305, 305, 304, 304, 302, 302, 302, 302,
	290, 290, 299, 299, 299, 299, 299, 289, 289, 285,
	285, 285, 286, 286, 287, 287, 284, 284, 288, 288,
	301, 301, 300, 282, 282, 283, 283, 307, 342, 342,
	342, 342, 343, 343, 308, 333, 334, 332, 332, 332,
	332, 332, 77, 77, 77, 236, 236, 236, 297, 297,
	296, 296, 296, 298, 298, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 231, 231, 231, 331, 331, 331, 331,
	331, 331, 330, 330, 330, 294, 294, 294, 329, 329,
	54, 54, 178, 178, 43, 43, 43, 43, 43, 43,
	42, 42, 42, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 44, 44, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 83, 83, 84,
	84, 84, 84, 85, 85, 85, 310, 310, 55, 55,
	3, 3, 134, 136, 137, 137, 135, 135, 135, 135,
	135, 135, 57, 57, 56, 56, 139, 138, 140, 140,
	140, 1, 1, 2, 2, 4, 4, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 277,
	277, 277, 309, 309, 311, 313, 313, 313, 313, 312,
	92, 92, 26, 35, 35, 27, 27, 27, 27, 28,
	28, 58, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	335, 335, 230, 230, 238, 238, 229, 229, 252, 252,
	252, 232, 232, 232, 233, 233, 339, 339, 339, 60,
	60, 60, 62, 62, 63, 64, 64, 254, 254, 255,
	255, 65, 66, 78, 78, 78, 78, 78, 78, 82,
	82, 82, 13, 13, 13, 13, 74, 74, 74, 12,
	12, 61, 61, 68, 336, 336, 337, 338, 338, 338,
	338, 69, 71, 29, 29, 29, 29, 29, 29, 102,
	102, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 97, 97, 97, 91, 91, 350, 72,
	73, 73, 95, 95, 95, 88, 88, 88, 94, 94,
	94, 14, 14, 15, 213, 213, 16, 16, 99, 99,
	101, 101, 101, 101, 101, 103, 103, 103, 103, 103,
	103, 103, 98, 98, 100, 100, 100, 100, 245, 245,
	245, 244, 244, 128, 128, 130, 129, 129, 131, 131,
	132, 132, 132, 132, 176, 176, 154, 154, 211, 211,
	209, 209, 210, 210, 212, 212, 212, 212, 215, 215,
	133, 133, 133, 133, 141, 141, 142, 142, 143, 143,
	253, 253, 250, 250, 250, 249, 249, 147, 147, 147,
	149, 148, 148, 148, 148, 150, 150, 152, 152, 151,
	151, 153, 158, 158, 157, 157, 155, 155, 155, 155,
	156, 156, 156, 156, 159, 159, 112, 112, 112, 112,
	112, 112, 112, 123, 123, 123, 123, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 79, 79, 79, 227, 227, 160,
	160, 168, 168, 168, 168, 161, 161, 161, 161, 161,
	161, 161, 169, 169, 169, 175, 170, 170, 166, 166,
	166, 166, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 80, 80, 80, 320, 320,
	319, 319, 318, 318, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 351, 351, 270, 270, 270,
	270, 167, 167, 167, 167, 167, 93, 93, 93, 93,
	93, 258, 258, 258, 261, 261, 261, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 181, 181, 89, 89, 179, 179, 180, 182,
	182, 177, 177, 177, 163, 163, 163, 183, 183, 184,
	184, 185, 185, 187, 186, 186, 188, 189, 189, 189,
	190, 190, 191, 191, 191, 45, 45, 45, 45, 45,
	40, 40, 40, 40, 41, 41, 41, 104, 104, 104,
	104, 106, 106, 105, 105, 75, 75, 76, 76, 76,
	110, 110, 111, 111, 111, 108, 108, 109, 109, 207,
	207, 192, 192, 192, 199, 199, 199, 195, 195, 197,
	197, 197, 198, 198, 198, 196, 204, 204, 206, 206,
	205, 205, 201, 201, 202, 202, 203, 203, 203, 200,
	200, 162, 162, 162, 162, 162, 208, 208, 208, 208,
	216, 216, 172, 172, 174, 174, 173, 127, 217, 217,
	221, 218, 218, 222, 222, 222, 222, 222, 219, 219,
	220, 220, 246, 246, 246, 226, 226, 237, 237, 234,
	234, 235, 235, 228, 228, 239, 239, 239, 70, 171,
	171, 306, 306, 303, 242, 242, 243, 243, 247, 247,
	251, 251, 248, 248, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 347, 348, 256,
	257, 257, 257,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 1, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 4, 4, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 2, 4, 5, 4, 4, 4, 4,
	4, 3, 3, 3, 5, 2, 3, 3, 3, 3,
	1, 1, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 2,
	1, 3, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 1, 1, 1, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 6, 6,
	6, 4, 4, 4, 7, 8, 6, 5, 6, 8,
	11, 6, 4, 4, 6, 1, 1, 1, 0, 2,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 1, 0, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -345, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -58, -59, -60, -62,
	-63, -64, -65, -66, -12, -61, -29, -30, -67, -68,
	-69, -70, -71, -14, -15, -16, -7, -6, -11, 9,
	10, -81, -31, 32, -36, -46, 218, -47, -37, 219,
	-48, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -82, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -8, -32, 8, -347,
	11, 427, 252, 251, 28, -10, 451, 85, -346, 584,
	-207, -192, 22, 33, 29, -191, -187, -95, -192, 20,
	18, 7, -72, -350, -72, -72, 12, 13, -72, -291,
	-293, 85, 155, 85, -72, -52, -51, -50, -49, -53,
	31, -43, -44, -314, -42, -39, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-38, 80, 33, 451, 454, -298, 219, 225, 226, 428,
	122, 121, 75, 221, -295, 353, 554, -53, 556, 101,
	103, 555, 44, 231, 557, 558, 559, 560, 240, 561,
	562, 563, 564, 570, 571, 572, 573, 123, 7, -72,
	-251, -247, -324, -241, 88, 89, 90, 448, 243, 481,
	482, 292, 80, 41, 350, 353, 554, 299, 313, 307,
	334, 326, 449, 483, 295, 244, 280, 551, 324, 131,
	556, 298, 484, 258, 358, 359, 360, 101, 302, 395,
	569, 297, 485, 567, 103, 555, 79, 51, 44, 253,
	322, 227, 318, 557, 281, 486, 459, 274, 122, 119,
	576, 36, 316, 50, 30, 566, 121, 49, 558, 146,
	487, 559, 362, 341, 545, 48, 363, 259, 488, 83,
	264, 453, 553, 364, 317, 365, 291, 565, 224, 489,
	537, 366, 367, 546, 490, 342, 346, 491, 387, 368,
	583, 52, 492, 493, 547, 120, 494, 78, 560, 311,
	312, 495, 289, 242, 389, 338, 440, 107, 108, 443,
	109, 110, 441, 111, 104, 442, 112, 106, 105, 444,
	446, 113, 339, 340, 240, 35, 369, 450, 293, 58,
	268, 390, 46, 344, 580, 45, 541, 496, 544, 337,
	333, 437, 53, 497, 498, 499, 500, 561, 336, 310,
	332, 575, 4, 286, 562, 62, 226, 348, 347, 349,
	275, 386, 329, 501, 502, 503, 247, 81, 504, 319,
	21, 505, 506, 370, 282, 507, 56, 508, 509, 393,
	256, 510, 54, 563, 39, 261, 577, 564, 511, 512,
	513, 514, 263, 515, 372, 516, 371, 343, 345, 270,
	373, 452, 517, 315, 260, 568, 518, 248, 552, 262,
	267, 255, 394, 249, 519, 520, 521, 522, 523, 296,
	524, 525, 303, 570, 438, 43, 526, 527, 528, 529,
	290, 285, 388, 397, 61, 82, 355, 530, 550, 309,
	283, 531, 300, 55, 571, 572, 573, 277, 574, 9,
	581, 582, 375, 123, 287, 288, 47, 330, 269, 532,
	533, 320, 321, 335, 308, 331, 301, 538, 271, 376,
	439, 257, 534, 396, 284, 351, 356, 456, 276, 377,
	549, 455, 328, 325, 278, 535, 378, 232, 272, 273,
	536, 539, 379, 380, 294, 381, 382, 383, 384, 385,
	279, 454, 306, 323, 357, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 436, 230, -72, 230, -151, -247, 230,
	-219, 359, -238, 361, 374, 369, 379, 367, -230, 370,
	372, 270, -339, 387, 230, 376, 218, 172, 362, 371,
	380, 381, 294, 382, 385, 279, -335, -324, 559, 574,
	131, 327, 366, 364, 388, 541, 384, 383, -247, 301,
	-254, 306, -242, -324, -241, 304, -151, -78, 537, 222,
	-256, -256, -97, 541, 543, -170, -112, 139, -123, -126,
	-117, -118, -164, -165, -166, -167, -124, -177, 161, 162,
	169, 140, -175, -127, 26, 447, 429, 428, 172, 31,
	214, 68, 69, 431, 432, 142, 57, 404, 405, -125,
	400, 406, 401, 434, 435, 114, 436, 104, 106, 105,
	437, 438, 439, 339, 340, 440, 441, 442, 107, 108,
	109, 110, 111, 112, 113, -80, 445, -242, -247, 235,
	399, 229, 167, 427, -119, -115, -6, -173, 398, 402,
	403, 407, 443, 446, 444, -324, -241, -121, -120, -160,
	91, 97, 102, 98, -344, 115, -347, 92, 93, 94,
	95, 96, 116, 117, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 44, 375, 375, -151, -72,
	-72, -72, -72, -185, -95, -187, -8, -6, -347, 8,
	-72, -6, -7, -11, -32, -34, 477, -33, -247, -192,
	-207, 12, 157, 42, 50, -190, -191, -10, -6, -112,
	19, 23, 24, -100, 163, -112, -247, -73, -100, -228,
	234, -72, -72, -218, -259, 301, -222, 388, 387, -243,
	-220, -242, -240, -219, 386, 223, 23, 457, 138, 25,
	27, 141, 172, 126, 19, 142, 37, 225, 327, 241,
	171, 237, 428, 218, 72, 458, 400, 401, 398, 404,
	430, 431, 399, 361, 31, 13, 460, 28, 251, 24,
	38, 165, 220, 145, 461, 254, 26, 252, 114, 117,
	463, 22, 75, 246, 14, 239, 40, 16, 464, 465,
	17, 235, 234, 157, 231, 70, 11, 214, 29, 154,
	66, 466, 133, 467, 468, 469, 470, 127, 68, 155,
	20, 578, 402, 403, 33, 542, 447, 265, 167, 73,
	59, 543, 139, 471, 472, 115, 473, 118, 76, 548,
	135, 18, 71, 42, 474, 266, 475, 236, 579, 476,
	391, 477, 156, 221, 427, 69, 478, 229, 374, 8,
	433, 32, 250, 238, 125, 67, 479, 230, 144, 434,
	435, 233, 128, 116, 7, 132, 34, 12, 74, 77,
	405, 406, 407, 57, 124, 451, 143, 15, 480, 392,
	137, 131, -292, 155, -279, -283, -242, 245, -308, 241,
	-151, -301, -300, -242, -96, -237, 231, 239, 238, 132,
	-328, 135, 287, 399, 229, -49, -50, -219, 171, -83,
	262, 266, 86, 86, -283, -282, -281, -329, 266, 245,
	-307, -299, 237, 246, -289, 238, 239, -284, 231, 133,
	-329, -284, 236, 246, 266, 266, 123, 266, 123, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 261, -290,
	147, -290, 455, 455, -295, -329, -329, -329, 233, 35,
	35, -239, -284, 233, 25, -290, -290, -219, 171, -290,
	-290, -290, -290, 274, 274, -290, -290, -290, -290, -290,
	-290, -290, -290, -290, -290, -290, -290, -290, -290, -290,
	230, -328, -104, 385, 294, 80, -51, 276, -35, -151,
	-237, 231, 232, -328, 263, -151, 215, -151, -232, 155,
	15, -232, -229, 375, 373, 360, 365, -232, -232, -232,
	-232, 277, 358, -285, 231, 35, 242, 375, 277, 358,
	277, 278, 277, 278, 368, 378, 277, -252, 14, 157,
	399, 363, 367, 270, 230, 271, 232, 377, -324, 544,
	278, -252, 92, -233, 155, 375, 273, -232, -257, -347,
	-243, 327, -257, -257, 32, 89, 233, -242, -74, -242,
	92, -13, -9, -20, -19, -21, 147, -102, 375, -90,
	172, 559, 545, 546, 547, 544, 372, 552, 550, 548,
	277, 549, 86, 135, 137, 138, 4, -112, 154, -161,
	147, 148, 149, 150, 151, 152, 153, 157, 139, 141,
	155, 156, 136, 158, 159, 160, 161, 162, 163, 164,
	166, 165, 167, 168, 171, 216, 217, -118, -118, -118,
	-118, -175, -347, -347, -347, -118, -227, -347, -118, -347,
	-347, -347, -347, -181, -112, -347, -351, -347, -351, -351,
	-270, -347, -270, -347, -347, -347, -347, -347, -347, -347,
	-347, -347, -347, -347, -347, -347, -347, -347, -347, -347,
	-347, -347, -347, -347, -347, -347, -347, -347, 215, -347,
	-347, -347, -347, -347, -270, -270, -270, -270, 102, 97,
	91, -177, 98, 92, -242, -247, -6, -7, -170, -256,
	-336, -337, -154, -151, -347, 294, -242, -242, 263, -190,
	-10, -6, -185, -191, -187, -6, -72, -88, -101, 63,
	64, -103, 24, 38, 67, 65, 23, -348, 87, -348,
	-207, -348, 86, -34, -211, 85, 61, 43, 92, 92,
	86, 21, -186, -188, -112, 14, -245, 4, -244, 25,
	-242, 92, 215, 100, 14, -152, 29, -151, -228, -228,
	86, 301, -222, -259, -224, -223, 389, 391, 147, -246,
	-242, 92, 31, 87, 86, -151, -262, -265, -267, -266,
	-268, -263, -264, 324, 325, 172, 328, 330, 331, 332,
	333, 334, 335, 336, 337, 338, 341, 32, 253, 320,
	321, 322, 323, 342, 343, 344, 345, 346, 347, 348,
	349, 307, 326, 449, 308, 309, 310, 311, 312, 313,
	315, 316, 317, 318, 319, -327, -324, 85, 87, 86,
	-269, 85, -104, 230, -324, 231, 231, 231, -72, 427,
	-290, -290, 261, 19, -42, -39, -314, 18, -38, -39,
	223, 119, 120, 220, 85, -279, 85, -288, -327, -324,
	85, 133, 236, 132, -287, -284, -287, -288, -324, -177,
	-324, 133, 133, -215, -242, -215, -215, 23, -215, 23,
	-215, 23, 94, -242, -215, 23, -215, 23, -215, 23,
	-215, 23, -215, 23, 31, 78, 79, 31, 81, 82,
	83, -177, -177, -279, -219, -151, -324, 94, 94, -290,
	-290, 94, 92, 92, 92, -290, -290, 94, 92, -249,
	-247, 92, -330, 247, 291, 293, 94, 94, 94, 94,
	31, 92, -331, 31, 566, 565, 567, 568, 569, 94,
	31, 94, 31, 94, -242, 85, -151, -110, 281, 218,
	220, 223, 76, 92, 295, 147, 44, 86, 233, 230,
	-324, -234, 235, -234, -242, -248, -247, -240, 92, -112,
	-286, 14, 157, -252, -252, -232, -151, -286, -252, -232,
	-151, -232, -232, -232, -232, -252, -252, -252, -232, -247,
	-247, -151, -151, -151, -151, -151, -151, -151, -257, -257,
	-257, -233, -232, 544, 92, 76, -255, 304, 338, 538,
	539, 540, 86, 451, -144, -151, 544, 544, 544, 544,
	544, 544, -112, -112, -112, -112, 473, -168, 115, 139,
	116, 117, -126, -169, -173, -175, 99, 157, 141, 155,
	156, -117, -118, -117, -117, -117, -117, -117, -117, -117,
	-117, -117, -117, -117, -117, -117, -258, -324, 92, 172,
	-122, -121, 98, -344, -122, -98, -100, -112, -112, -324,
	-242, -98, -98, -112, -94, 24, 38, -179, -180, 143,
	-177, -348, -348, 94, 98, -242, -242, -87, -86, 409,
	410, 411, 412, 414, 415, 416, 419, 420, 424, 425,
	408, 426, 413, 418, 421, 422, 423, 417, 323, -112,
	-112, -112, -112, -112, -112, -79, -112, 126, 127, 128,
	-112, -112, -171, -170, -323, -322, -321, -112, -112, -112,
	-112, -112, -112, -112, -112, -112, -112, -112, -99, 24,
	38, -98, -243, -248, -240, -98, -99, -99, -98, -98,
	215, -207, -348, 86, -338, 391, 392, 542, -250, 266,
	-249, 25, -171, 92, 14, -213, 77, -242, -190, -190,
	63, 64, 59, -98, -103, -348, -33, 25, -209, -242,
	62, 92, -271, -219, 350, 351, -112, -112, 86, -189,
	27, 28, -151, -244, 163, -248, -151, -214, 266, -151,
	-129, -131, -132, -133, -154, -176, -347, -134, 469, 466,
	14, -144, -145, -153, -247, -222, -224, 86, 390, 392,
	393, 76, 118, -112, -272, 171, -297, -296, -295, -279,
	-281, -282, -283, 87, -272, -275, 356, 355, -269, -269,
	-269, -269, -269, -271, -271, -271, -271, 85, 85, -269,
	-269, -269, -269, -273, 85, -273, -273, -274, 85, -274,
	-308, -112, -305, -304, -302, -303, 240, 101, 451, 77,
	-300, -189, 94, -110, -235, 235, -306, -303, -324, -324,
	-324, -235, -324, 92, -324, 92, -84, -55, -1, 578,
	579, 580, 86, 19, -280, -279, -54, 291, -311, -312,
	266, -307, -301, -288, 133, -287, -288, -288, -324, 86,
	29, 123, 123, 123, 123, 451, 220, 32, -279, -54,
	-258, 233, -258, -258, 92, 92, -231, 574, -144, -106,
	283, 147, 272, 272, 230, 230, 285, -151, 296, 298,
	297, 295, 23, 284, 286, 288, 274, -151, -151, -234,
	76, -146, -151, 26, -247, -151, -232, -232, -151, -232,
	-232, -151, -242, -90, 391, 86, 451, 22, -91, 22,
	-347, 115, 116, 117, -169, -117, -118, -117, 138, 254,
	86, -348, 25, 86, 77, -348, -348, -348, 86, 14,
	-98, -182, -180, 145, -112, -348, -348, -348, 86, 86,
	14, -261, 25, -348, -348, -348, -348, -348, -181, -348,
	14, 86, 86, -348, -348, 86, 86, -348, 86, 86,
	86, -320, 86, 86, 86, 86, -348, -348, 86, -348,
	-98, -98, -347, 215, -348, -348, -348, -348, -348, -243,
	-337, 541, 392, -158, -157, -155, 74, 234, 75, -347,
	-249, -348, -122, 89, -210, 89, -209, -163, -242, 94,
	98, -192, -128, -130, 14, -103, -175, 87, 86, -271,
	-196, -201, -229, -242, 92, 172, -188, 215, -159, 15,
	-162, 32, 57, -9, -347, -347, 32, 86, -147, -149,
	-148, -150, 66, 70, 72, 67, 68, 69, 73, -253,
	25, -129, -7, -6, -347, -347, -347, -151, -144, -349,
	14, 77, -349, 86, 215, -223, -225, 394, 391, 397,
	-324, 92, -83, 86, -295, -283, -193, -107, 40, -276,
	357, -271, -271, -278, 92, -278, 94, 94, 87, -45,
	-40, -41, 33, 80, -302, -290, 92, 39, -242, 87,
	-106, -151, 139, 76, -306, -306, -306, -247, -2, 577,
	583, 133, 85, 360, 18, -209, 86, 87, -178, 292,
	87, -313, 57, -242, 87, 85, -288, -288, -242, -347,
	230, 31, 31, -54, -178, -272, -324, 576, 575, 87,
	232, 290, -111, 404, -108, 92, 88, -151, -151, -151,
	-151, -151, 223, 220, 275, 233, -144, -151, 86, -77,
	249, 244, -252, -252, 33, -151, 391, 553, 551, -112,
	138, 254, -126, -118, -100, 448, -260, 172, 324, 253,
	322, 318, 338, 329, 355, 320, 356, 317, 316, 315,
	-260, -258, -112, -112, -185, 146, -112, 144, -112, -112,
	-112, -348, 172, 324, 14, -112, -112, -112, -321, -112,
	-112, -112, -319, -318, -122, -177, -348, -319, -112, -112,
	-318, -318, -348, -348, -99, -243, -155, -284, -284, -284,
	-215, 86, -226, 22, 14, 57, 57, -128, -159, -129,
	-103, -242, -199, 537, -204, 46, -202, -203, 47, -200,
	48, 56, 163, -190, -112, -216, 76, -217, -221, -177,
	-172, -174, -173, -347, -208, -348, -242, -215, -217, -131,
	-132, -132, -131, -132, 66, 66, 66, 71, 66, 71,
	66, -148, -247, -348, -348, -7, -7, -112, -250, 77,
	-129, -129, -153, -247, 163, 391, 395, 396, -295, -343,
	115, 139, 31, 76, 353, 101, -341, 171, -342, 236,
	132, 133, 248, 25, 41, 87, 86, 87, 86, 87,
	86, -236, 487, 139, -41, -40, -290, -290, 94, -324,
	232, 26, -151, 76, 76, 76, -85, 581, 94, 85,
	-3, 80, -112, 85, 19, -279, -177, 268, 157, -305,
	-209, -309, -311, -151, -114, -347, -113, -115, -119, 161,
	162, -178, -151, -105, 281, 289, 85, -109, 89, -326,
	77, 272, 353, 272, -151, -77, -45, -151, -232, -232,
	33, -324, -348, -126, -118, -347, -348, -269, -269, -269,
	-274, -269, 312, -269, 312, -269, -348, -348, 86, -348,
	22, -348, -89, 433, -112, 86, 86, -348, 85, 85,
	-112, -348, -348, -348, -320, 86, -348, 86, -348, 86,
	-348, -348, -348, -156, 22, -156, -156, -348, 89, -151,
	-159, -183, 16, -196, 51, 330, -206, -205, 55, 47,
	-203, 19, 49, 19, 30, -216, 86, 147, 86, -348,
	-348, 86, 57, 215, -348, -159, -142, -141, 76, 77,
	-143, 76, -141, 66, 66, -211, -348, -348, 86, -214,
	-129, -159, -159, 215, 115, -347, -116, -125, -114, 12,
	92, 92, -324, 133, 133, -151, 85, -271, 92, -271,
	94, 94, 487, 31, 81, 82, 83, 31, 78, 79,
	-151, -151, -151, -151, -310, 85, 19, -112, 85, 147,
	87, -209, -209, 269, -173, -347, 87, -348, 86, -277,
	451, 454, -112, -120, -120, -211, 87, -317, 451, -325,
	-242, -242, -242, -242, -117, -271, -112, -112, -190, 92,
	-112, -112, 94, 94, -348, -348, -319, -318, -112, -347,
	66, 18, 16, -347, -347, -250, -183, -184, 17, 19,
	-197, 53, -195, 52, -195, -205, 19, 19, 92, 19,
	92, 133, -221, -112, -174, 57, -9, -242, -172, -242,
	-185, -112, 85, -112, -122, -159, -159, -112, -165, 436,
	104, 106, 105, 437, 438, 439, 339, 340, 440, 441,
	442, 107, 108, 109, 110, 111, 112, 113, 443, 446,
	444, 85, -112, 87, 87, -211, -309, -55, 87, -209,
	94, 87, -173, -92, -347, 265, -342, -311, 455, 455,
	-348, 25, -316, -315, -243, 85, 77, -93, 157, 451,
	-348, -348, -348, -348, -348, 87, 87, -348, -348, 86,
	-212, -348, -242, 236, 19, 19, -212, -212, -158, -184,
	-112, -170, -198, 54, 76, 118, 92, 92, 92, 12,
	-172, 215, -190, -209, -136, 360, -185, -348, -209, 87,
	25, 87, 583, 133, 87, 265, -9, 86, 147, -209,
	-151, -348, 449, 73, 452, -112, 86, -348, -348, -348,
	76, 118, -217, -242, 87, -348, -347, -190, 87, -194,
	-9, 85, -3, -348, -75, 451, -315, -294, -243, 92,
	94, 87, 62, 450, 453, -320, -242, 236, -250, -137,
	-135, -242, 501, -333, -334, 76, -343, -340, 115, 139,
	101, -341, 124, 125, -75, -112, 85, -76, 280, 541,
	-326, 62, -348, -348, 86, 22, -262, -57, 511, -334,
	76, 13, 12, 115, 92, 87, -209, 241, -317, 451,
	-135, 508, -272, -122, -332, 249, 244, 247, 32, -332,
	-4, 582, 87, 282, 452, -56, 26, -136, 243, 31,
	115, 94, -4, 453, 511, -122, -139, -138, -140, 545,
	115, 31, -138, -140, 76, -122, 76, 461, 545,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 738,
	738, 738, 0, 738, 0, 0, 738, -2, -2, 738,
	1210, 0, 738, 0, 0, -2, 670, 672, 0, 674,
	-2, 0, 0, 683, 1689, 1689, 733, 0, 0, 0,
	0, 0, 738, 738, 738, 738, 1071, 48, 738, 0,
	83, 84, 689, 690, 691, 63, 0, 1687, 1, 3,
	69, 73, 0, 0, 0, 56, 1080, 0, 76, 0,
	0, 742, 0, 740, 0, 1193, 738, 738, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 517, 457, 500, 455, 486, -2, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 350, 350, 0, 0, -2, 448, 448, 448, 0,
	0, 0, 483, 1195, 403, 350, 350, 0, 350, 350,
	350, 350, 0, 0, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 1097,
	151, 1211, 1208, 1209, 38, 39, 40, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 0, 1187, 0, 600, 839, 0,
	661, 661, 0, 661, 661, 661, 661, 0, 0, 0,
	612, 0, 0, 0, 0, 658, 0, 0, 631, 633,
	0, 658, 0, 664, 0, 645, 661, 1690, 1690, 1690,
	1178, 0, 655, 653, 667, 668, 650, 651, 669, 673,
	0, 678, 681, 1204, 1205, 0, 696, 47, 1443, 688,
	701, 702, 0, 734, 735, 43, 936, 0, 861, 866,
	877, 890, 891, 892, 893, 894, 896, 897, 0, 0,
	0, 0, 902, 903, 0, 0, 0, 0, 0, 917,
	0, 0, 0, 0, 0, 1052, 0, 1015, 1015, 953,
	1015, 1017, 1017, 0, 0, 0, 1686, 1477, 1480, 1481,
	1504, 1587, 1633, 1485, 1486, 1469, 1475, 1478, 1470, 1471,
	1473, 1474, 1476, 1479, 1484, 0, 0, 1061, 0, 0,
	0, 0, 0, 0, 256, 257, 935, 1167, 1017, 1017,
	1017, 1017, -2, -2, -2, -2, -2, 203, 204, 205,
	206, 207, 208, 209, 0, 199, 0, 261, 262, 258,
	259, 260, 919, 920, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 1689, 0, 711, 0, 0,
	0, 0, 0, 1080, 0, 1072, 1071, 61, 0, 738,
	-2, 0, 0, 0, 0, 45, 0, 50, 798, 75,
	74, 1119, 0, 0, 0, 57, 1081, 65, 67, 1082,
	0, 743, 744, 0, 774, 778, 0, 739, 0, 0,
	1194, 1193, 1193, 100, 0, 1629, 1171, -2, -2, 0,
	0, 1206, 1207, 1180, -2, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, -2, 0, 0, 161, 162, 0, 41, 376, 0,
	157, 0, 370, 320, 1097, 0, 0, 0, 0, 0,
	738, 0, 1188, 142, 143, 149, 150, 350, 350, 497,
	0, 0, 151, 151, 464, 465, 466, 0, 0, -2,
	374, 0, 449, 0, 0, 364, 364, 368, 366, 367,
	0, 0, 0, 0, 0, 0, 477, 0, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 0,
	351, 0, 495, 496, 404, 0, 0, 0, 0, 475,
	476, 0, 0, 1196, 1197, 0, 0, 350, 350, 0,
	0, 0, 0, 350, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 1110, 0, 0, 0, -2, 0, 592, 0,
	0, 0, 1189, 1189, 0, 599, 0, 601, 602, 0,
	0, 603, 0, 658, 658, 656, 657, 605, 606, 607,
	608, 661, 0, 0, 359, 360, 361, 658, 661, 0,
	661, 661, 661, 661, 658, 658, 658, 661, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1690, 1690, 1690,
	664, 661, 0, 641, 0, 642, 643, 646, 647, 1691,
	1692, 1227, 648, 649, 1179, 671, 679, 682, 699, 697,
	698, 700, 692, 693, 694, 695, 0, 713, 714, 719,
	0, 0, 0, 0, 725, 726, 727, 0, 0, 730,
	731, 732, 0, 0, 0, 0, 0, 859, 0, 0,
	925, 926, 927, 928, 929, 930, 931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 898, 899, 900,
	901, 904, 0, 0, 0, 909, 910, 0, 0, 0,
	0, 0, 748, 0, 1053, 0, 951, 0, 952, 954,
	955, 0, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1199, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 758, 0, 0,
	758, 758, 0, 0, 193, 194, 195, 196, 210, 211,
	212, 213, 214, 263, 1061, 0, 935, 0, 0, 44,
	703, 704, 0, 822, 1199, 0, 0, 754, 0, 55,
	64, 66, 1080, 59, 1080, 0, 760, 0, 0, -2,
	-2, 761, 767, 768, 769, 770, 771, 52, 1688, 53,
	0, 72, 0, 46, 0, 0, 0, 0, 332, 1122,
	0, 0, 1073, 1074, 1077, 0, 775, 1515, 779, 0,
	781, 782, 0, 741, 0, 98, 0, 838, 0, 0,
	0, 1629, 1177, 0, 102, 103, 0, 0, 0, 338,
	1182, 1183, 1184, -2, 357, 0, 338, 327, 271, 272,
	273, 320, 275, 320, 320, 320, 320, 332, 332, 332,
	332, 303, 304, 305, 306, 307, 0, 0, 290, 320,
	320, 320, 320, 310, 311, 312, 313, 314, 315, 316,
	317, 276, 277, 278, 279, 280, 281, 282, 283, 284,
	322, 322, 322, 324, 324, 0, 42, 0, 342, 0,
	1077, 0, 1110, 1191, 1201, 0, 0, 0, 1191, 120,
	0, 0, 498, 528, 458, 487, 499, 0, 461, 462,
	-2, 0, 0, 448, 0, 450, 0, 358, 0, -2,
	0, 368, 0, 364, 368, 365, 368, 356, 369, 479,
	480, 481, 0, 558, 808, 0, 0, 0, 0, 0,
	564, 565, 566, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 488, 489, 490, 491, 492, 493,
	494, 0, 0, 450, 0, 484, 0, 405, 406, 0,
	0, 409, 410, 411, 412, 0, 0, 415, 416, 417,
	825, 826, 418, 442, 443, 444, 419, 420, 421, 422,
	423, 424, 425, 436, 437, 438, 439, 440, 441, 426,
	427, 428, 429, 430, 433, 0, 135, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1189,
	0, 0, 0, 0, 757, 840, 1212, 1213, 662, 663,
	0, 362, 363, 661, 661, 609, 632, 0, 661, 613,
	634, 614, 616, 615, 617, 636, 637, 661, 620, 659,
	660, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 638, 639, 640, 665, 0, 0, 680, 684, 685,
	686, 687, 0, 0, 716, 94, 721, 722, 723, 724,
	736, 729, 937, 856, 857, 858, 0, 860, 863, 0,
	921, 923, 865, 867, 932, 933, 934, 0, 0, 0,
	0, 0, 871, 875, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 895, 1031, 1032, 1033,
	912, 264, 265, 0, 913, 0, 772, 0, 0, 0,
	911, 0, 0, 0, 0, 749, 750, 1059, 1056, 0,
	0, 1016, 1018, 0, 0, 0, 0, 0, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1034,
	0, 0, 0, 0, 0, 1052, 0, 914, 915, 916,
	0, 0, 0, 1200, 0, 130, 131, 0, 0, 0,
	0, 0, 988, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 1062, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 1166, 0, 706, 707, 709, 0, 842, 0,
	823, 0, 0, 712, 0, 753, 0, 756, 58, 60,
	765, 766, 0, 783, 762, 54, 49, 0, 0, 800,
	1120, 332, 1142, 0, 336, 337, 1083, 1084, 0, 1076,
	1078, 1079, 77, 780, 776, 0, 854, 0, 0, 837,
	0, 786, 788, 789, 790, 820, 0, 793, 0, 0,
	0, 0, 0, 96, 839, 1172, 101, 0, 0, 106,
	107, 1173, 1174, 1175, 1176, 0, 517, -2, 400, 163,
	165, 166, 167, 158, -2, 330, 328, 329, 274, 332,
	332, 297, 298, 299, 300, 301, 302, 0, 0, 291,
	292, 293, 294, 285, 0, 286, 287, 288, 0, 289,
	375, 0, 1085, 343, 344, 346, 350, 0, 0, 0,
	371, 372, 0, 1101, 0, 0, 0, 1202, 1201, 1201,
	1201, 0, 153, 154, 155, 156, 553, 0, 0, 529,
	551, 552, 151, 0, 0, 159, 452, 451, 0, 585,
	0, 373, 0, 0, 368, 368, 353, 354, 482, 0,
	0, 560, 561, 562, 563, 0, 0, 0, 450, 452,
	338, 0, 407, 408, 413, 414, 431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 513,
	514, 515, 516, 1098, 1099, 1100, 0, 0, 593, 0,
	0, 392, 92, 1190, 598, 658, 619, 635, 658, 611,
	618, 644, 676, 720, 0, 0, 0, 0, 728, 0,
	0, 864, 922, 924, 868, 0, 872, 876, 0, 0,
	0, 0, 0, 0, 0, 918, 942, 943, 0, 0,
	1071, 0, 1057, 0, 0, 950, 1019, 1020, 0, 0,
	0, 0, 0, 961, 962, 963, 964, 965, 0, 967,
	0, 0, 0, 971, 972, 0, 0, 973, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 983, 0, 938,
	0, 0, 758, 0, 1021, 1022, 1023, 1024, 1025, 1062,
	705, 708, 710, 796, 843, 844, 0, 0, 0, 0,
	824, 1198, 751, 752, 755, -2, 0, 0, 1064, 0,
	0, 783, 854, 784, 0, 763, 51, 799, 0, 1124,
	1123, 1136, 1149, 333, 334, 335, 1075, 0, 1080, 0,
	1160, 0, 0, 1152, 0, 0, 0, 0, 0, 0,
	0, 0, 827, 0, 0, 830, 0, 0, 0, 0,
	821, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	90, 91, 0, 0, 0, 104, 105, 0, 0, 111,
	339, 340, 144, 151, 402, 164, 382, 0, 0, 270,
	331, 295, 296, 0, 318, 0, 0, 0, 395, 116,
	1089, 1088, 350, 350, 345, 0, 348, 0, 1203, 321,
	0, 134, 0, 0, 0, 0, 0, 140, 523, 0,
	0, 530, 0, 0, 0, 456, 0, 467, 468, 0,
	557, 584, 0, 589, 342, 0, 352, 355, 809, 0,
	0, 469, 0, 452, 473, 474, 485, 434, 435, 432,
	0, 0, 1111, 1112, 1117, 1115, 1116, 121, 505, 507,
	506, 510, 0, 0, 503, 0, 392, 1085, 0, 597,
	393, 394, 661, 661, 715, 95, 0, 718, 0, 0,
	0, 0, 869, 873, 773, 0, 0, 320, 320, 1039,
	320, 324, 1042, 320, 1044, 320, 1047, 320, 1050, 1051,
	0, 0, 0, 0, 1054, 949, 1060, 0, 0, 0,
	0, 960, 0, 0, 0, 0, 0, 0, 132, 133,
	988, 0, 0, 990, 992, 993, 977, 989, 0, 0,
	0, 0, 939, 940, 0, 1063, 845, 850, 850, 850,
	0, 0, 0, 1185, 1186, 1065, 1066, 854, 1067, 785,
	764, 801, 1142, 0, 1135, 0, -2, 1144, 0, 0,
	0, 1150, 777, 78, 855, 81, 0, 1160, 1168, 0,
	1151, 1162, 1164, 0, 0, 0, 1156, 0, 854, 787,
	816, 818, 0, 813, 828, 829, 831, 0, 833, 0,
	835, 836, 798, 792, 794, 0, 0, 0, 98, 0,
	854, 854, 97, 0, 841, 108, 109, 110, 401, 168,
	173, 0, 0, 0, 178, 0, 180, 0, 383, 0,
	267, 269, 0, 0, 171, 332, 0, 332, 0, 325,
	0, 384, 396, 0, 1086, 1087, 0, 0, 347, 349,
	0, 1192, 136, 0, 0, 0, 526, 0, 554, 0,
	0, 0, 0, 0, 0, 160, 453, 0, 0, 341,
	0, 0, 582, 579, 470, 0, 197, 198, 200, 0,
	0, 472, 798, 1102, 1103, 1104, 0, 1114, 1118, 124,
	0, 0, 0, 0, 594, 595, 596, 93, 604, 610,
	717, 737, 862, 870, 874, 0, 906, 1037, 332, 1040,
	1041, 1043, 1045, 1046, 1048, 1049, 907, 908, 0, 945,
	0, 947, 1080, 0, 1058, 0, 0, 959, 0, 0,
	0, 968, 969, 970, 0, 0, 976, 0, 978, 0,
	981, 984, 941, 0, 0, 0, 0, 822, -2, 62,
	1067, 1069, 0, 1129, 1127, 1127, 1137, 1138, 0, 0,
	1145, 0, 0, 0, 0, 82, 0, 0, 0, 1165,
	0, 0, 0, 0, 99, 1071, 810, 817, 0, 0,
	811, 0, 812, 832, 834, 791, -2, 795, 0, 854,
	854, 88, 89, 0, 174, 0, 176, 191, 192, 0,
	179, 181, 182, 266, 268, 0, 0, 308, 319, 309,
	0, 0, 397, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	798, 137, 138, 139, 518, 0, 528, 0, 0, 0,
	521, 0, 459, 0, 588, 0, 0, 559, 0, 567,
	0, 0, 0, 201, 202, 0, 1113, 504, 0, 122,
	123, 0, 0, 509, 1026, 1038, 0, 0, 0, 1055,
	0, 0, 0, 0, 966, 974, 0, 991, 0, 0,
	851, 0, 0, 0, 0, 842, 1069, 80, 0, 0,
	1132, 0, 1125, 1128, 1126, 1139, 0, 0, 1146, 0,
	1148, 0, 1169, 1170, 1163, 0, 1155, 1158, 1154, 1157,
	1080, 814, 0, 819, 0, 1071, 87, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 985, 986,
	987, 0, 0, 323, 326, 0, 0, 0, 519, 0,
	531, 522, 586, 587, 0, 590, 377, 583, 580, 581,
	471, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	944, 946, 948, 957, 958, 1035, 1036, 975, 979, 0,
	0, 847, 804, 805, 852, 853, 0, 0, 797, 79,
	1070, 1068, 1121, 0, 1130, 1131, 1140, 1141, 1147, 0,
	1153, 0, 85, 0, 0, 0, 1080, 175, 0, 185,
	0, 527, 0, 530, 520, 0, 1105, 0, 0, 0,
	511, 905, 0, 0, 0, 988, 0, 846, 848, 849,
	1133, 1134, 1161, 1159, 815, 822, 0, 86, 378, 382,
	1105, 0, 0, 591, 501, 1107, 127, 128, 445, 446,
	447, 121, 1027, 0, 1030, 0, 806, 807, 532, 0,
	534, 0, -2, 379, 380, 0, 169, 186, 187, 0,
	0, 190, 183, 184, 117, 0, 0, 0, 1108, 1109,
	124, 1028, 980, 533, 0, 0, 338, 0, 543, 381,
	0, 0, 0, 188, 189, 555, 0, 0, 508, 0,
	535, 536, 544, 0, 385, 387, 388, 0, 0, 386,
	524, 0, 555, 1106, 0, 0, 545, 541, 389, 390,
	391, 556, 525, 1029, 0, 537, 538, 539, 0, 548,
	549, 0, 540, 0, 0, 550, 0, 546, 547,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 584,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:515
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:520
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:521
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:525
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:561
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:571
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:575
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:580
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:584
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:590
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:596
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:602
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:606
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:615
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:621
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:625
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:631
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:637
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:641
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:645
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:668
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:679
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:685
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:705
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:709
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:765
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:784
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:790
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:798
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:810
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:822
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:834
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:838
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:844
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:850
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:854
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:858
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:868
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:872
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:876
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:882
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:886
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:892
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:896
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:905
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:911
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:917
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:927
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:931
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:937
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:941
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:945
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:951
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:955
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:959
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:963
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:969
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:973
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:979
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:992
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1001
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1005
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1012
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1016
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1021
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1025
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1031
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1036
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1041
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1047
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1052
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1058
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1063
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1067
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1073
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1077
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1089
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1096
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1103
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1108
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1113
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1118
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1125
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1132
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1143
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1150
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1154
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1160
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1164
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1168
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1178
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1182
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1188
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1192
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1198
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1202
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1209
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1213
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1219
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1223
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1229
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1234
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1243
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1267
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1276
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1285
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1289
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1298
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1302
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1308
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1314
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1319
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1324
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1329
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1334
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1339
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1348
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1355
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1359
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1364
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1368
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1373
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1379
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1385
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1390
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1397
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1404
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1427
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1434
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1438
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1444
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1448
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1452
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1456
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1460
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1464
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1468
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1473
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1477
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1481
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1485
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1489
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = Armscii8Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = ASCIIStr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = Big5Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = UBinaryStr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = Cp1250Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = Cp1251Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = Cp1256Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Cp1257Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Cp850Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Cp852Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Cp866Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Cp932Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Dec8Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = EucjpmsStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = EuckrStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = Gb18030Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = Gb2312Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = GbkStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = Geostd8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = GreekStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = HebrewStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = Hp8Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = Keybcs2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Koi8rStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Koi8uStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = Latin1Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = Latin2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = Latin5Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = Latin7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = MacceStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = MacromanStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = SjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = Swe7Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = Tis620Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = Ucs2Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = UjisStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = Utf16Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = Utf16leStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = Utf32Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = Utf8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = Utf8mb4Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1674
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1684
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1688
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1698
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1705
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1709
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1713
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1717
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1723
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1948
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1953
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1957
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1965
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1975
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1983
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1987
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1991
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1996
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2000
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = ""
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2032
		{
			yyVAL.str = ""
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2047
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2056
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2062
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2072
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2076
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2081
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2085
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2101
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2105
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2109
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2113
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2117
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = ""
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = yyDollar[2].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2156
		{
			yyVAL.str = "key"
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.str = yyDollar[1].str
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2175
		{
			yyVAL.str = ""
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2185
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2195
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2201
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2205
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2211
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2215
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2221
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2227
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2231
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2235
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2239
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2244
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2248
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2254
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2260
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2266
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2272
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2276
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2280
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2284
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2288
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2293
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2297
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2301
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2306
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2310
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2314
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2323
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2329
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2333
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2337
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2343
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2347
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2353
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2357
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2361
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2365
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2369
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2373
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2377
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2381
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2385
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2389
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2393
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2397
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2401
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2405
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2409
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2413
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2417
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2421
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2425
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2429
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2433
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2437
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2441
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2445
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2449
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2453
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2457
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2461
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = ""
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2497
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = ""
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2521
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2525
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2534
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2538
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2542
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2550
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2556
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2570
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2574
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2578
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2582
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2586
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2590
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2594
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2598
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2602
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2606
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2610
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2614
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2618
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2622
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2626
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2630
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2634
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2638
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2642
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2646
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2650
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2654
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2658
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2664
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2668
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2674
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2678
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2682
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2686
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2690
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2694
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2698
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2702
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2706
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2712
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2719
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2726
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2733
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2739
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2743
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2750
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2769
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2779
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2783
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2787
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2800
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2810
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2814
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2825
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2832
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2839
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2846
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2853
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2864
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2873
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2881
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2890
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2897
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2905
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2909
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2918
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2933
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2938
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2942
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2947
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2951
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2957
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2963
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2969
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2979
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2983
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2989
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2995
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3001
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3007
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3013
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3017
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3021
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3025
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3031
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3037
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3043
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3047
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3051
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3057
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3061
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3066
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3070
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3075
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3079
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3085
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3089
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3093
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3097
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3101
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3105
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3109
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3113
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3117
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3121
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3125
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3129
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3133
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3137
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3141
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3145
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3149
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3153
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3157
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3161
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3165
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3169
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3174
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3178
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3182
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3189
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3199
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3208
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3215
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3222
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3231
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.str = ""
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3241
		{
			yyVAL.str = ""
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3253
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3257
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3290
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3295
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3337
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3345
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3393
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3397
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3401
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3405
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3417
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3421
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3433
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3437
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3441
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3445
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3471
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3480
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3494
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3498
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3502
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3508
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3518
		{
			yyVAL.str = ""
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.str = "extended "
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3528
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3532
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3538
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3542
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3548
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3552
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3556
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3562
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3566
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3570
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3576
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3580
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3586
		{
			yyVAL.empty = struct{}{}
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3590
		{
			yyVAL.empty = struct{}{}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3594
		{
			yyVAL.empty = struct{}{}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3600
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3604
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3608
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3614
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3618
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3624
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3630
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3634
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3639
		{
			yyVAL.empty = struct{}{}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3641
		{
			yyVAL.empty = struct{}{}
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3644
		{
			yyVAL.empty = struct{}{}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3646
		{
			yyVAL.empty = struct{}{}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3657
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3662
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3666
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3670
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3674
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3678
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3682
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3688
		{
			yyVAL.str = yyDollar[1].str
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3692
		{
			yyVAL.str = yyDollar[1].str
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3696
		{
			yyVAL.str = yyDollar[1].str
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3702
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3706
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3710
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3714
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3719
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3733
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3743
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3747
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3753
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3759
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3763
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3769
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3775
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3779
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3783
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3787
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3831
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3835
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3861
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3865
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3869
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3873
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3890
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3894
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3898
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3903
		{
			yyVAL.str = ""
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3907
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3912
		{
			setAllowComments(yylex, true)
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3916
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3922
		{
			yyVAL.strs = nil
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3926
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3932
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3940
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3945
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3949
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3953
		{
			yyVAL.str = SQLCacheStr
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3958
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3962
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3966
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3993
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3997
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4016
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4021
		{
			yyVAL.strs = nil
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4029
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4033
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4037
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.str = SQLCacheStr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = DistinctStr
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.str = DistinctStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.str = StraightJoinHint
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4063
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4073
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4077
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4083
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4087
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4091
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4095
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4100
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4104
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4108
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4120
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4124
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4130
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4136
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4140
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4150
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4154
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4158
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4162
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4168
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4172
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4178
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4182
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4191
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4197
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4201
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4207
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4211
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4217
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4221
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4225
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4229
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4235
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4239
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4252
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4256
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4260
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4264
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4270
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4272
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4276
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4282
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4284
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4287
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.empty = struct{}{}
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4292
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4300
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4307
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4313
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4317
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4321
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4327
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4333
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4337
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4341
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4345
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4351
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4355
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4365
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4369
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4379
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4385
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4394
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4400
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4404
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4410
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4414
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4418
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4422
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4427
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4431
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4435
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4439
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4449
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4456
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4460
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4464
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4468
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4472
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4476
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4480
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4487
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4491
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4495
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4499
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4505
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4509
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4513
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4517
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4521
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4525
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4529
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4533
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4537
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4541
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4545
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4551
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4555
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4559
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4563
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4567
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4571
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4583
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4587
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4591
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4595
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4599
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4605
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4609
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4613
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4617
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4625
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4629
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4633
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4637
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4665
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4677
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4685
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4689
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4697
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4701
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4707
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4711
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4715
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4721
		{
			yyVAL.str = ""
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4725
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4731
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4735
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4742
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4746
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4750
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4754
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4760
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4764
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4768
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4772
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4776
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4780
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4784
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4790
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4794
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4798
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4805
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4811
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4815
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4825
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4829
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4833
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4837
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4847
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4851
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4855
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4859
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4863
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4867
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4871
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4875
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4879
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4883
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4894
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4898
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4904
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4908
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4929
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4941
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4945
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4949
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4953
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4957
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4961
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4965
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4969
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4973
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4977
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5017
		{
			yyLOCAL = &JSONAttributesExpr{Type: yyDollar[1].jsonAttributeTypeUnion(), JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5025
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JSONAttributeType
//line sql.y:5032
		{
			yyLOCAL = DepthAttributeType
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JSONAttributeType
//line sql.y:5036
		{
			yyLOCAL = ValidAttributeType
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JSONAttributeType
//line sql.y:5040
		{
			yyLOCAL = TypeAttributeType
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5049
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5055
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5059
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5065
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5069
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5075
		{
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5077
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5081
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5085
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5089
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5093
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5097
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5101
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5105
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5109
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5113
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5117
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5123
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5127
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5131
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5135
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5139
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5143
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5147
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5151
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5155
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5173
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5177
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5192
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5196
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5200
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5204
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5210
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5214
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5218
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5222
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5226
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5232
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5236
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5240
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5250
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5254
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5260
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5264
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5268
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5272
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5276
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5282
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5286
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5290
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5294
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5298
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5302
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5306
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5310
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5314
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5318
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5333
		{
			yyVAL.str = string("")
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5337
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5343
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5347
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5353
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5368
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5372
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5376
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5405
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5419
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5423
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5429
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5435
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5439
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5445
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5450
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5454
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5458
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5467
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5473
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5477
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5481
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5490
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5494
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5498
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5502
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5509
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5513
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5517
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5521
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5527
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5531
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5535
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5540
		{
			yyVAL.str = ""
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5544
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5548
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5552
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5557
		{
			yyVAL.str = ""
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5561
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5567
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5571
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5576
		{
			yyVAL.str = ""
		}
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5580
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5585
		{
			yyVAL.str = "cascaded"
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5598
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5602
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5608
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5614
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5620
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5629
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5633
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5638
		{
			yyVAL.str = ""
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5642
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5648
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5652
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5658
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5662
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5666
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5671
		{
			yyVAL.str = ""
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5675
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5679
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5684
		{
			yyVAL.str = ""
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5688
		{
			yyVAL.str = " header"
		}
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5693
		{
			yyVAL.str = ""
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5697
		{
			yyVAL.str = " manifest on"
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5701
		{
			yyVAL.str = " manifest off"
		}
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5706
		{
			yyVAL.str = ""
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5710
		{
			yyVAL.str = " overwrite on"
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5714
		{
			yyVAL.str = " overwrite off"
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5720
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5725
		{
			yyVAL.str = ""
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5729
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5735
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5739
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5745
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5749
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5754
		{
			yyVAL.str = ""
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5758
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5764
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5768
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5774
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5778
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5782
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5787
		{
			yyVAL.str = ""
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5791
		{
			yyVAL.str = " optionally"
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5804
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5808
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5812
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5816
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5820
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5826
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5830
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5834
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5838
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5847
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5853
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5857
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5863
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5867
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5873
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5888
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5892
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5898
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5904
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5908
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5914
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5918
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5922
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5926
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5930
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5938
		{
			yyVAL.str = "charset"
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5965
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5967
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5970
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5972
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5975
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5977
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5980
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5982
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5985
		{
			yyVAL.empty = struct{}{}
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5987
		{
			yyVAL.empty = struct{}{}
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5989
		{
			yyVAL.empty = struct{}{}
		}
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5993
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6002
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6009
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6013
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6019
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6023
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6030
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6036
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6040
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6046
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6050
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6057
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6555
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6564
		{
			decNesting(yylex)
		}
	case 1689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6569
		{
			skipToEnd(yylex)
		}
	case 1690:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6574
		{
			skipToEnd(yylex)
		}
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6578
		{
			skipToEnd(yylex)
		}
	case 1692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6582
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
