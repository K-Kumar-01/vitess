// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const BOTH = 57453
const LEADING = 57454
const TRAILING = 57455
const EMPTY_FROM_CLAUSE = 57456
const LOWER_THAN_CHARSET = 57457
const CHARSET = 57458
const UNIQUE = 57459
const KEY = 57460
const EXPRESSION_PREC_SETTER = 57461
const OR = 57462
const XOR = 57463
const AND = 57464
const NOT = 57465
const BETWEEN = 57466
const CASE = 57467
const WHEN = 57468
const THEN = 57469
const ELSE = 57470
const END = 57471
const LE = 57472
const GE = 57473
const NE = 57474
const NULL_SAFE_EQUAL = 57475
const IS = 57476
const LIKE = 57477
const REGEXP = 57478
const IN = 57479
const SHIFT_LEFT = 57480
const SHIFT_RIGHT = 57481
const DIV = 57482
const MOD = 57483
const UNARY = 57484
const COLLATE = 57485
const BINARY = 57486
const UNDERSCORE_ARMSCII8 = 57487
const UNDERSCORE_ASCII = 57488
const UNDERSCORE_BIG5 = 57489
const UNDERSCORE_BINARY = 57490
const UNDERSCORE_CP1250 = 57491
const UNDERSCORE_CP1251 = 57492
const UNDERSCORE_CP1256 = 57493
const UNDERSCORE_CP1257 = 57494
const UNDERSCORE_CP850 = 57495
const UNDERSCORE_CP852 = 57496
const UNDERSCORE_CP866 = 57497
const UNDERSCORE_CP932 = 57498
const UNDERSCORE_DEC8 = 57499
const UNDERSCORE_EUCJPMS = 57500
const UNDERSCORE_EUCKR = 57501
const UNDERSCORE_GB18030 = 57502
const UNDERSCORE_GB2312 = 57503
const UNDERSCORE_GBK = 57504
const UNDERSCORE_GEOSTD8 = 57505
const UNDERSCORE_GREEK = 57506
const UNDERSCORE_HEBREW = 57507
const UNDERSCORE_HP8 = 57508
const UNDERSCORE_KEYBCS2 = 57509
const UNDERSCORE_KOI8R = 57510
const UNDERSCORE_KOI8U = 57511
const UNDERSCORE_LATIN1 = 57512
const UNDERSCORE_LATIN2 = 57513
const UNDERSCORE_LATIN5 = 57514
const UNDERSCORE_LATIN7 = 57515
const UNDERSCORE_MACCE = 57516
const UNDERSCORE_MACROMAN = 57517
const UNDERSCORE_SJIS = 57518
const UNDERSCORE_SWE7 = 57519
const UNDERSCORE_TIS620 = 57520
const UNDERSCORE_UCS2 = 57521
const UNDERSCORE_UJIS = 57522
const UNDERSCORE_UTF16 = 57523
const UNDERSCORE_UTF16LE = 57524
const UNDERSCORE_UTF32 = 57525
const UNDERSCORE_UTF8 = 57526
const UNDERSCORE_UTF8MB4 = 57527
const INTERVAL = 57528
const JSON_EXTRACT_OP = 57529
const JSON_UNQUOTE_EXTRACT_OP = 57530
const CREATE = 57531
const ALTER = 57532
const DROP = 57533
const RENAME = 57534
const ANALYZE = 57535
const ADD = 57536
const FLUSH = 57537
const CHANGE = 57538
const MODIFY = 57539
const DEALLOCATE = 57540
const REVERT = 57541
const SCHEMA = 57542
const TABLE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const SPATIAL = 57551
const FULLTEXT = 57552
const KEY_BLOCK_SIZE = 57553
const CHECK = 57554
const INDEXES = 57555
const ACTION = 57556
const CASCADE = 57557
const CONSTRAINT = 57558
const FOREIGN = 57559
const NO = 57560
const REFERENCES = 57561
const RESTRICT = 57562
const SHOW = 57563
const DESCRIBE = 57564
const EXPLAIN = 57565
const DATE = 57566
const ESCAPE = 57567
const REPAIR = 57568
const OPTIMIZE = 57569
const TRUNCATE = 57570
const COALESCE = 57571
const EXCHANGE = 57572
const REBUILD = 57573
const PARTITIONING = 57574
const REMOVE = 57575
const PREPARE = 57576
const EXECUTE = 57577
const MAXVALUE = 57578
const PARTITION = 57579
const REORGANIZE = 57580
const LESS = 57581
const THAN = 57582
const PROCEDURE = 57583
const TRIGGER = 57584
const VINDEX = 57585
const VINDEXES = 57586
const DIRECTORY = 57587
const NAME = 57588
const UPGRADE = 57589
const STATUS = 57590
const VARIABLES = 57591
const WARNINGS = 57592
const CASCADED = 57593
const DEFINER = 57594
const OPTION = 57595
const SQL = 57596
const UNDEFINED = 57597
const SEQUENCE = 57598
const MERGE = 57599
const TEMPORARY = 57600
const TEMPTABLE = 57601
const INVOKER = 57602
const SECURITY = 57603
const FIRST = 57604
const AFTER = 57605
const LAST = 57606
const VITESS_MIGRATION = 57607
const CANCEL = 57608
const RETRY = 57609
const COMPLETE = 57610
const CLEANUP = 57611
const BEGIN = 57612
const START = 57613
const TRANSACTION = 57614
const COMMIT = 57615
const ROLLBACK = 57616
const SAVEPOINT = 57617
const RELEASE = 57618
const WORK = 57619
const BIT = 57620
const TINYINT = 57621
const SMALLINT = 57622
const MEDIUMINT = 57623
const INT = 57624
const INTEGER = 57625
const BIGINT = 57626
const INTNUM = 57627
const REAL = 57628
const DOUBLE = 57629
const FLOAT_TYPE = 57630
const DECIMAL_TYPE = 57631
const NUMERIC = 57632
const TIME = 57633
const TIMESTAMP = 57634
const DATETIME = 57635
const YEAR = 57636
const CHAR = 57637
const VARCHAR = 57638
const BOOL = 57639
const CHARACTER = 57640
const VARBINARY = 57641
const NCHAR = 57642
const TEXT = 57643
const TINYTEXT = 57644
const MEDIUMTEXT = 57645
const LONGTEXT = 57646
const BLOB = 57647
const TINYBLOB = 57648
const MEDIUMBLOB = 57649
const LONGBLOB = 57650
const JSON = 57651
const ENUM = 57652
const GEOMETRY = 57653
const POINT = 57654
const LINESTRING = 57655
const POLYGON = 57656
const GEOMETRYCOLLECTION = 57657
const MULTIPOINT = 57658
const MULTILINESTRING = 57659
const MULTIPOLYGON = 57660
const ASCII = 57661
const UNICODE = 57662
const NULLX = 57663
const AUTO_INCREMENT = 57664
const APPROXNUM = 57665
const SIGNED = 57666
const UNSIGNED = 57667
const ZEROFILL = 57668
const CODE = 57669
const COLLATION = 57670
const COLUMNS = 57671
const DATABASES = 57672
const ENGINES = 57673
const EVENT = 57674
const EXTENDED = 57675
const FIELDS = 57676
const FULL = 57677
const FUNCTION = 57678
const GTID_EXECUTED = 57679
const KEYSPACES = 57680
const OPEN = 57681
const PLUGINS = 57682
const PRIVILEGES = 57683
const PROCESSLIST = 57684
const SCHEMAS = 57685
const TABLES = 57686
const TRIGGERS = 57687
const USER = 57688
const VGTID_EXECUTED = 57689
const VITESS_KEYSPACES = 57690
const VITESS_METADATA = 57691
const VITESS_MIGRATIONS = 57692
const VITESS_REPLICATION_STATUS = 57693
const VITESS_SHARDS = 57694
const VITESS_TABLETS = 57695
const VSCHEMA = 57696
const NAMES = 57697
const GLOBAL = 57698
const SESSION = 57699
const ISOLATION = 57700
const LEVEL = 57701
const READ = 57702
const WRITE = 57703
const ONLY = 57704
const REPEATABLE = 57705
const COMMITTED = 57706
const UNCOMMITTED = 57707
const SERIALIZABLE = 57708
const CURRENT_TIMESTAMP = 57709
const DATABASE = 57710
const CURRENT_DATE = 57711
const CURRENT_TIME = 57712
const LOCALTIME = 57713
const LOCALTIMESTAMP = 57714
const CURRENT_USER = 57715
const UTC_DATE = 57716
const UTC_TIME = 57717
const UTC_TIMESTAMP = 57718
const DAY = 57719
const DAY_HOUR = 57720
const DAY_MICROSECOND = 57721
const DAY_MINUTE = 57722
const DAY_SECOND = 57723
const HOUR = 57724
const HOUR_MICROSECOND = 57725
const HOUR_MINUTE = 57726
const HOUR_SECOND = 57727
const MICROSECOND = 57728
const MINUTE = 57729
const MINUTE_MICROSECOND = 57730
const MINUTE_SECOND = 57731
const MONTH = 57732
const QUARTER = 57733
const SECOND = 57734
const SECOND_MICROSECOND = 57735
const YEAR_MONTH = 57736
const WEEK = 57737
const REPLACE = 57738
const CONVERT = 57739
const CAST = 57740
const SUBSTR = 57741
const SUBSTRING = 57742
const GROUP_CONCAT = 57743
const SEPARATOR = 57744
const TIMESTAMPADD = 57745
const TIMESTAMPDIFF = 57746
const WEIGHT_STRING = 57747
const LTRIM = 57748
const RTRIM = 57749
const TRIM = 57750
const JSON_ARRAY_APPEND = 57751
const JSON_ARRAY_INSERT = 57752
const JSON_INSERT = 57753
const JSON_MERGE = 57754
const JSON_MERGE_PATCH = 57755
const JSON_MERGE_PRESERVE = 57756
const JSON_REMOVE = 57757
const JSON_REPLACE = 57758
const JSON_SET = 57759
const JSON_UNQUOTE = 57760
const MATCH = 57761
const AGAINST = 57762
const BOOLEAN = 57763
const LANGUAGE = 57764
const WITH = 57765
const QUERY = 57766
const EXPANSION = 57767
const WITHOUT = 57768
const VALIDATION = 57769
const UNUSED = 57770
const ARRAY = 57771
const CUME_DIST = 57772
const DESCRIPTION = 57773
const DENSE_RANK = 57774
const EMPTY = 57775
const EXCEPT = 57776
const FIRST_VALUE = 57777
const GROUPING = 57778
const GROUPS = 57779
const JSON_TABLE = 57780
const LAG = 57781
const LAST_VALUE = 57782
const LATERAL = 57783
const LEAD = 57784
const MEMBER = 57785
const NTH_VALUE = 57786
const NTILE = 57787
const OF = 57788
const OVER = 57789
const PERCENT_RANK = 57790
const RANK = 57791
const RECURSIVE = 57792
const ROW_NUMBER = 57793
const SYSTEM = 57794
const WINDOW = 57795
const ACTIVE = 57796
const ADMIN = 57797
const BUCKETS = 57798
const CLONE = 57799
const COMPONENT = 57800
const DEFINITION = 57801
const ENFORCED = 57802
const EXCLUDE = 57803
const FOLLOWING = 57804
const GEOMCOLLECTION = 57805
const GET_MASTER_PUBLIC_KEY = 57806
const HISTOGRAM = 57807
const HISTORY = 57808
const INACTIVE = 57809
const INVISIBLE = 57810
const LOCKED = 57811
const MASTER_COMPRESSION_ALGORITHMS = 57812
const MASTER_PUBLIC_KEY_PATH = 57813
const MASTER_TLS_CIPHERSUITES = 57814
const MASTER_ZSTD_COMPRESSION_LEVEL = 57815
const NESTED = 57816
const NETWORK_NAMESPACE = 57817
const NOWAIT = 57818
const NULLS = 57819
const OJ = 57820
const OLD = 57821
const OPTIONAL = 57822
const ORDINALITY = 57823
const ORGANIZATION = 57824
const OTHERS = 57825
const PATH = 57826
const PERSIST = 57827
const PERSIST_ONLY = 57828
const PRECEDING = 57829
const PRIVILEGE_CHECKS_USER = 57830
const PROCESS = 57831
const RANDOM = 57832
const REFERENCE = 57833
const REQUIRE_ROW_FORMAT = 57834
const RESOURCE = 57835
const RESPECT = 57836
const RESTART = 57837
const RETAIN = 57838
const REUSE = 57839
const ROLE = 57840
const SECONDARY = 57841
const SECONDARY_ENGINE = 57842
const SECONDARY_LOAD = 57843
const SECONDARY_UNLOAD = 57844
const SKIP = 57845
const SRID = 57846
const THREAD_PRIORITY = 57847
const TIES = 57848
const UNBOUNDED = 57849
const VCPU = 57850
const VISIBLE = 57851
const FORMAT = 57852
const TREE = 57853
const VITESS = 57854
const TRADITIONAL = 57855
const LOCAL = 57856
const LOW_PRIORITY = 57857
const NO_WRITE_TO_BINLOG = 57858
const LOGS = 57859
const ERROR = 57860
const GENERAL = 57861
const HOSTS = 57862
const OPTIMIZER_COSTS = 57863
const USER_RESOURCES = 57864
const SLOW = 57865
const CHANNEL = 57866
const RELAY = 57867
const EXPORT = 57868
const AVG_ROW_LENGTH = 57869
const CONNECTION = 57870
const CHECKSUM = 57871
const DELAY_KEY_WRITE = 57872
const ENCRYPTION = 57873
const ENGINE = 57874
const INSERT_METHOD = 57875
const MAX_ROWS = 57876
const MIN_ROWS = 57877
const PACK_KEYS = 57878
const PASSWORD = 57879
const FIXED = 57880
const DYNAMIC = 57881
const COMPRESSED = 57882
const REDUNDANT = 57883
const COMPACT = 57884
const ROW_FORMAT = 57885
const STATS_AUTO_RECALC = 57886
const STATS_PERSISTENT = 57887
const STATS_SAMPLE_PAGES = 57888
const STORAGE = 57889
const MEMORY = 57890
const DISK = 57891
const PARTITIONS = 57892
const LINEAR = 57893
const RANGE = 57894
const LIST = 57895
const SUBPARTITION = 57896
const SUBPARTITIONS = 57897
const HASH = 57898

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 140,
	574, 140,
	-2, 146,
	-1, 48,
	119, 146,
	159, 146,
	315, 146,
	-2, 447,
	-1, 55,
	33, 626,
	219, 626,
	230, 626,
	265, 640,
	266, 640,
	-2, 628,
	-1, 60,
	221, 651,
	-2, 649,
	-1, 114,
	218, 1139,
	-2, 119,
	-1, 116,
	1, 141,
	574, 141,
	-2, 146,
	-1, 126,
	120, 350,
	224, 350,
	-2, 441,
	-1, 145,
	119, 146,
	159, 146,
	315, 146,
	-2, 456,
	-1, 623,
	203, 1160,
	-2, 1156,
	-1, 624,
	203, 1161,
	-2, 1157,
	-1, 698,
	57, 719,
	-2, 734,
	-1, 735,
	135, 1527,
	-2, 112,
	-1, 736,
	135, 1401,
	-2, 113,
	-1, 742,
	135, 1456,
	-2, 1133,
	-1, 887,
	135, 1332,
	-2, 1130,
	-1, 925,
	229, 41,
	234, 41,
	-2, 361,
	-1, 1002,
	1, 495,
	574, 495,
	-2, 146,
	-1, 1208,
	57, 720,
	-2, 739,
	-1, 1209,
	57, 721,
	-2, 740,
	-1, 1261,
	119, 146,
	159, 146,
	315, 146,
	-2, 391,
	-1, 1338,
	120, 350,
	224, 350,
	-2, 441,
	-1, 1347,
	229, 42,
	234, 42,
	-2, 362,
	-1, 1607,
	203, 1165,
	-2, 1159,
	-1, 1688,
	119, 146,
	159, 146,
	315, 146,
	-2, 392,
	-1, 1695,
	23, 165,
	-2, 167,
	-1, 1894,
	84, 39,
	-2, 774,
	-1, 1944,
	75, 94,
	84, 94,
	-2, 794,
	-1, 2120,
	47, 1101,
	-2, 1095,
	-1, 2293,
	84, 39,
	-2, 775,
	-1, 2331,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 767,
}

const yyPrivate = 57344

const yyLast = 37248

var yyAct = [...]int{
	623, 2592, 1642, 2390, 2563, 2549, 2241, 2598, 2171, 2178,
	2476, 3, 2131, 612, 37, 1066, 2212, 96, 2134, 2419,
	691, 1187, 713, 2490, 1882, 2180, 2224, 2223, 1748, 1223,
	565, 2135, 2132, 613, 2424, 2302, 2296, 569, 1621, 2093,
	626, 1661, 1940, 1646, 2322, 610, 1917, 562, 611, 591,
	2226, 182, 2129, 2121, 182, 1909, 529, 182, 1976, 1718,
	2288, 563, 545, 1014, 182, 2046, 2005, 1738, 1723, 890,
	1977, 154, 182, 561, 1978, 1674, 36, 1666, 1929, 714,
	1665, 1210, 1884, 1901, 933, 38, 740, 182, 1601, 557,
	955, 695, 2062, 699, 693, 1685, 1737, 1790, 1543, 1043,
	1550, 1757, 140, 1502, 1725, 1970, 1253, 1946, 1345, 545,
	920, 716, 545, 182, 545, 915, 1232, 95, 1668, 574,
	91, 1623, 1190, 1453, 737, 1148, 1562, 1520, 1449, 1085,
	1361, 897, 926, 1435, 894, 1735, 1653, 1604, 898, 921,
	1352, 922, 923, 1236, 1252, 705, 1064, 1059, 1337, 1458,
	123, 727, 1313, 703, 1714, 117, 700, 998, 98, 76,
	124, 552, 1647, 1151, 1250, 701, 97, 1155, 2521, 1998,
	89, 2599, 1750, 1751, 1752, 1750, 2209, 157, 118, 85,
	2025, 2024, 1614, 1996, 1788, 2054, 2055, 1618, 1619, 1509,
	702, 77, 8, 7, 6, 1508, 1507, 125, 1506, 1505,
	1086, 1504, 1491, 721, 555, 726, 556, 2577, 1421, 1496,
	1880, 707, 937, 1318, 184, 185, 186, 960, 502, 90,
	2117, 1911, 891, 906, 1086, 119, 2355, 553, 2472, 901,
	2471, 2195, 2383, 957, 959, 2384, 2608, 694, 968, 958,
	2559, 78, 2602, 692, 2532, 2591, 971, 972, 1828, 975,
	976, 977, 978, 2391, 2550, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	936, 741, 912, 734, 708, 102, 1776, 715, 1730, 2558,
	2531, 2061, 913, 2274, 178, 1327, 2168, 2169, 1881, 961,
	962, 963, 2167, 1955, 119, 911, 1954, 78, 2053, 1956,
	80, 1001, 1728, 1825, 1050, 1096, 1052, 78, 120, 1117,
	142, 2033, 1826, 1680, 1681, 2032, 104, 105, 87, 108,
	973, 162, 114, 78, 1254, 179, 1255, 1679, 497, 1096,
	2481, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126, 1125,
	1127, 1128, 1620, 1062, 1049, 1051, 1033, 1920, 687, 688,
	689, 690, 152, 685, 698, 1021, 2437, 141, 119, 905,
	1022, 910, 907, 1007, 1008, 1038, 1039, 684, 1020, 1967,
	1019, 1021, 1921, 178, 87, 1999, 1022, 2299, 159, 2265,
	160, 1034, 729, 730, 87, 2263, 129, 130, 151, 150,
	177, 1698, 1697, 2243, 1027, 1010, 543, 120, 1092, 532,
	87, 1084, 2088, 997, 1495, 547, 541, 1411, 1194, 532,
	162, 1497, 1498, 1499, 1441, 532, 2006, 1758, 2028, 908,
	2236, 1791, 1092, 532, 1802, 1799, 1801, 1800, 2237, 1796,
	1804, 1727, 1805, 2601, 1806, 1047, 1436, 1056, 1042, 1048,
	910, 996, 1003, 1061, 2041, 1036, 1037, 2245, 1807, 1053,
	980, 1412, 1960, 1413, 1040, 974, 910, 979, 902, 1795,
	1035, 1793, 2376, 914, 1041, 904, 903, 159, 1761, 160,
	2578, 1046, 2244, 1028, 2220, 87, 916, 1129, 1662, 177,
	917, 917, 1197, 944, 1797, 942, 146, 127, 153, 134,
	126, 953, 147, 148, 952, 2596, 1330, 182, 163, 182,
	951, 1794, 182, 950, 949, 1000, 948, 168, 135, 947,
	946, 941, 954, 2184, 908, 895, 2603, 2589, 895, 893,
	1054, 1826, 138, 136, 131, 132, 133, 137, 597, 909,
	545, 545, 545, 1351, 128, 2045, 895, 928, 1450, 1129,
	2202, 929, 1736, 139, 1885, 1887, 2027, 728, 545, 545,
	2017, 935, 2042, 970, 2089, 1782, 1446, 1072, 964, 1325,
	2057, 1078, 935, 37, 1031, 1324, 1323, 1017, 935, 1023,
	1024, 1025, 1026, 1447, 1091, 1088, 1089, 1090, 1095, 1097,
	1094, 2194, 1093, 1321, 501, 2219, 2511, 163, 496, 1087,
	2040, 2336, 1063, 2039, 999, 533, 168, 2318, 1091, 1088,
	1089, 1090, 1095, 1097, 1094, 533, 1093, 1442, 909, 1130,
	1131, 533, 1951, 1087, 1778, 2030, 1648, 1649, 155, 533,
	2520, 1997, 1839, 1057, 909, 2482, 945, 1916, 943, 1129,
	1872, 1613, 1132, 1133, 1134, 1135, 1240, 1350, 2000, 1167,
	116, 1012, 1140, 1729, 1143, 2468, 2300, 2530, 1185, 934,
	1686, 935, 1128, 2166, 710, 928, 931, 932, 1044, 895,
	934, 935, 1055, 925, 929, 1440, 934, 1459, 1827, 2048,
	1180, 938, 928, 2526, 2047, 86, 1060, 1068, 1069, 2372,
	2312, 939, 935, 2048, 924, 182, 1016, 111, 2047, 545,
	545, 956, 1792, 149, 1886, 1443, 1136, 2594, 1563, 1256,
	2595, 940, 2593, 1082, 81, 182, 1200, 155, 2081, 1989,
	1204, 1186, 693, 1203, 1198, 1201, 695, 2433, 1563, 143,
	1853, 1009, 144, 2063, 545, 1101, 1018, 1006, 182, 2347,
	2346, 86, 1765, 545, 1423, 1422, 1424, 1425, 1426, 545,
	77, 86, 1081, 1079, 1080, 1100, 1101, 112, 737, 934,
	1030, 969, 1360, 1359, 1153, 1349, 1154, 86, 1775, 934,
	1773, 1032, 1157, 1849, 938, 928, 1123, 1124, 1126, 1125,
	1127, 1128, 944, 1186, 939, 1202, 942, 2585, 2337, 95,
	934, 1770, 1173, 1174, 1175, 1176, 928, 931, 932, 2604,
	895, 1045, 1777, 1251, 925, 929, 1241, 1437, 1861, 1438,
	1460, 2606, 1439, 1191, 2065, 184, 185, 186, 1774, 1545,
	614, 2586, 592, 594, 615, 616, 1015, 590, 593, 617,
	98, 1002, 1525, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 2271, 1848, 1526, 1527, 1524, 173,
	174, 175, 176, 1770, 1430, 1188, 595, 596, 2450, 2451,
	2452, 2453, 618, 619, 620, 1842, 2537, 2463, 1222, 621,
	622, 692, 694, 2605, 2504, 2406, 2075, 2074, 2073, 2067,
	1772, 2071, 1199, 2066, 1099, 2064, 1100, 1101, 1217, 1546,
	2069, 1246, 1247, 1219, 1099, 1567, 1100, 1101, 2538, 2068,
	182, 1654, 1655, 2083, 1314, 741, 2505, 1428, 1099, 1217,
	1100, 1101, 732, 1322, 2070, 2072, 2508, 1429, 1515, 1517,
	1518, 2174, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 1418, 545, 2587, 1347, 1844, 173, 174,
	175, 176, 1516, 1230, 1356, 2405, 1843, 1099, 1358, 1100,
	1101, 545, 545, 2354, 545, 2353, 545, 545, 2210, 545,
	545, 545, 545, 545, 545, 1099, 2175, 1100, 1101, 1099,
	1427, 1100, 1101, 1099, 545, 1100, 1101, 2200, 182, 1394,
	1831, 1832, 1833, 1205, 1357, 1099, 87, 1100, 1101, 2269,
	1217, 2177, 1974, 1973, 182, 2172, 1417, 2517, 1733, 1099,
	1523, 1100, 1101, 1343, 2240, 545, 1431, 182, 1229, 1389,
	1390, 1416, 2182, 2183, 1328, 1329, 2507, 1415, 1448, 2173,
	2569, 545, 1414, 182, 2567, 1866, 1353, 1353, 1099, 1217,
	1100, 1101, 1336, 2571, 2572, 1099, 1226, 1100, 1101, 182,
	1405, 2182, 2183, 1391, 1399, 1396, 182, 1099, 2568, 1100,
	1101, 2179, 1355, 1395, 1370, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 545, 545, 545, 1099, 1320, 1100,
	1101, 637, 638, 639, 1397, 1398, 2506, 1333, 2432, 1334,
	1403, 1404, 1363, 1354, 1364, 1227, 1366, 1368, 1346, 1332,
	1372, 1374, 1376, 1378, 1380, 182, 2430, 2095, 1217, 1892,
	2094, 1463, 1891, 1071, 2402, 723, 2461, 2351, 1467, 1455,
	1469, 1470, 1471, 1472, 2343, 1407, 2181, 1476, 1119, 1120,
	1121, 1122, 1123, 1124, 1126, 1125, 1127, 1128, 2184, 1461,
	1462, 1490, 184, 185, 186, 1983, 1099, 1392, 1100, 1101,
	1544, 1971, 1786, 1466, 1099, 2181, 1100, 1101, 1451, 1785,
	1473, 1474, 1475, 1553, 545, 2277, 1521, 2184, 1121, 1122,
	1123, 1124, 1126, 1125, 1127, 1128, 2373, 1645, 912, 545,
	545, 1217, 1528, 558, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1529, 1519, 1465,
	119, 911, 1326, 1605, 1099, 1627, 1100, 1101, 1564, 2276,
	1548, 1547, 1492, 182, 1099, 717, 1100, 1101, 545, 1975,
	1486, 1487, 1488, 1456, 1489, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1103, 1419, 1406, 1626, 184, 185, 186, 1402,
	2344, 2176, 182, 1401, 1632, 545, 1633, 1867, 1099, 1400,
	1100, 1101, 1522, 2489, 1228, 182, 1058, 1099, 545, 1100,
	1101, 2488, 92, 182, 2457, 182, 2456, 182, 182, 545,
	1907, 2600, 545, 93, 1607, 2389, 1605, 2007, 1609, 1610,
	1986, 101, 1694, 545, 737, 95, 1099, 737, 1100, 1101,
	94, 1117, 100, 2056, 99, 1549, 184, 185, 186, 100,
	1958, 1918, 1555, 1556, 95, 1918, 184, 185, 186, 1664,
	1746, 1606, 1638, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1126, 1125, 1127, 1128, 1907, 2556, 1608, 1217, 1903, 1611,
	1612, 184, 185, 186, 2311, 1744, 1907, 2543, 545, 1704,
	1705, 1706, 1707, 94, 1739, 1740, 1741, 1607, 1217, 1743,
	1745, 92, 1690, 1689, 2130, 101, 1907, 2541, 94, 2313,
	707, 1217, 93, 545, 2311, 1637, 100, 1840, 99, 545,
	1356, 1672, 1926, 1356, 1098, 1356, 2311, 94, 2533, 1217,
	1695, 1769, 1907, 2522, 1659, 2381, 2519, 1640, 1907, 2464,
	1947, 1759, 1720, 1693, 2381, 1217, 1907, 2379, 1770, 1217,
	1840, 1657, 2316, 1217, 1726, 2284, 1217, 2192, 2191, 2188,
	2189, 545, 2525, 1544, 1677, 1925, 1217, 1907, 1544, 1544,
	2188, 2187, 1692, 1926, 1691, 2213, 1926, 1217, 1840, 1217,
	2286, 741, 1756, 1676, 741, 1217, 1826, 2026, 1317, 2011,
	2003, 2004, 1591, 1907, 1906, 1771, 937, 1947, 1098, 1217,
	1317, 1316, 2285, 1948, 182, 2161, 1353, 1262, 1261, 2190,
	2105, 182, 1950, 1678, 1826, 1117, 182, 182, 1721, 1926,
	182, 1840, 182, 1858, 1734, 1732, 1731, 1857, 1764, 182,
	1779, 1767, 1742, 1768, 1716, 1717, 182, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1126, 1125, 1127, 1128, 1770, 1762,
	1763, 1721, 1770, 1699, 936, 1700, 1701, 1702, 1703, 1753,
	1948, 1781, 1766, 1780, 182, 545, 1783, 1784, 2356, 1826,
	2575, 1710, 1711, 1712, 1713, 1583, 1572, 1573, 1574, 1575,
	1585, 1576, 1577, 1578, 1590, 1586, 1579, 1580, 1587, 1588,
	1589, 1581, 1582, 1584, 1652, 1817, 1818, 697, 1221, 1616,
	1820, 1500, 1445, 1248, 919, 918, 2546, 1789, 87, 1821,
	1117, 2478, 1224, 1113, 2454, 1114, 2444, 2371, 2357, 2358,
	2359, 624, 1980, 2368, 2349, 1117, 2280, 1838, 1521, 1115,
	1116, 1112, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1126,
	1125, 1127, 1128, 1835, 2279, 1837, 1810, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1126, 1125, 1127, 1128, 1836, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1126, 1125, 1127, 1128,
	1319, 1719, 183, 2238, 87, 183, 1385, 2215, 183, 2211,
	2012, 1715, 1709, 546, 1708, 183, 1433, 182, 1348, 1344,
	1315, 113, 2360, 183, 1001, 182, 2242, 1979, 2479, 1878,
	1824, 545, 1382, 1895, 2323, 2324, 1730, 545, 183, 1931,
	1934, 1935, 1936, 1932, 1522, 1933, 1937, 1630, 545, 2323,
	2324, 2580, 1834, 2582, 2564, 1102, 1386, 1387, 1388, 2326,
	546, 2207, 2206, 546, 183, 546, 2205, 1225, 2130, 2361,
	2362, 182, 182, 1922, 1980, 37, 1990, 2152, 1811, 1383,
	1384, 1493, 2153, 1149, 1942, 2150, 2329, 1957, 1852, 1908,
	2151, 1931, 1934, 1935, 1936, 1932, 1850, 1933, 1937, 2154,
	1607, 1935, 1936, 2414, 2328, 2413, 2149, 2148, 1215, 1211,
	2557, 1644, 1636, 2122, 2124, 2317, 2110, 2109, 2009, 2304,
	1904, 1864, 2125, 1212, 2503, 711, 2423, 2303, 2425, 2307,
	558, 545, 2119, 712, 1444, 1191, 182, 1606, 683, 1879,
	1869, 1870, 2186, 182, 1968, 1969, 1889, 1941, 1634, 1635,
	1214, 1965, 1213, 2412, 1984, 545, 1559, 2002, 1900, 966,
	1961, 1905, 545, 965, 1215, 1211, 1356, 1356, 2252, 1915,
	1560, 545, 1979, 92, 1070, 1945, 92, 2051, 101, 1212,
	94, 1949, 2309, 2023, 93, 1952, 2019, 93, 2018, 100,
	120, 99, 1726, 94, 182, 182, 182, 182, 182, 2203,
	94, 1962, 1814, 1959, 1208, 1209, 1214, 1803, 1213, 1654,
	1655, 182, 182, 2518, 1233, 1972, 2474, 2185, 1982, 1939,
	1641, 719, 720, 2108, 2289, 1830, 99, 182, 101, 1981,
	2495, 2107, 1987, 2494, 2431, 2429, 1991, 1992, 1993, 100,
	100, 99, 2428, 2421, 2369, 1544, 2308, 2021, 2306, 2216,
	1754, 1331, 101, 718, 2420, 2297, 1336, 1918, 2584, 2583,
	103, 1903, 2090, 100, 1859, 1628, 1242, 1234, 693, 106,
	107, 2080, 2584, 545, 2013, 2014, 2509, 2022, 2342, 709,
	88, 2020, 1, 632, 2566, 514, 1617, 1189, 2099, 545,
	528, 2562, 1420, 1410, 2392, 2092, 2475, 2008, 1760, 2367,
	1724, 2059, 927, 145, 182, 1687, 1688, 2552, 545, 110,
	888, 109, 2058, 930, 2043, 1029, 2049, 545, 1755, 2050,
	2382, 1966, 1696, 1268, 545, 545, 1266, 182, 182, 182,
	182, 182, 2099, 1267, 1265, 1270, 2076, 699, 2142, 182,
	2127, 2060, 1269, 2077, 182, 182, 2113, 182, 2112, 1264,
	182, 182, 182, 1860, 1494, 2136, 542, 1204, 2133, 1938,
	2098, 180, 1257, 2133, 602, 1235, 2100, 967, 504, 2193,
	2101, 2102, 2103, 1787, 510, 1141, 2106, 1953, 738, 731,
	1629, 1893, 2138, 2160, 2111, 2201, 2114, 2301, 2118, 2162,
	2120, 182, 2163, 1910, 2123, 2116, 2502, 2422, 2544, 1963,
	700, 1231, 1851, 1561, 545, 2144, 2145, 2143, 2147, 701,
	2146, 1669, 1625, 545, 1514, 2222, 2155, 567, 182, 2104,
	2159, 566, 95, 564, 1896, 1919, 2164, 1104, 182, 627,
	1883, 1243, 2170, 1930, 1928, 1927, 1812, 1673, 1455, 2325,
	2321, 1667, 1902, 182, 2218, 575, 182, 568, 183, 2197,
	183, 560, 2196, 183, 625, 2141, 2253, 2339, 2228, 2029,
	2239, 2031, 1964, 2235, 1083, 2230, 1207, 554, 2229, 900,
	2198, 2199, 1558, 2217, 2480, 2466, 1829, 2273, 1206, 1726,
	2221, 546, 546, 546, 1570, 1571, 2208, 2233, 1747, 63,
	41, 1595, 549, 2576, 1074, 725, 32, 31, 30, 546,
	546, 29, 28, 2248, 23, 22, 545, 182, 21, 2247,
	20, 19, 1457, 2250, 2251, 25, 18, 17, 16, 2255,
	115, 50, 47, 45, 122, 121, 48, 2261, 44, 1004,
	2254, 42, 27, 26, 15, 14, 13, 12, 11, 10,
	9, 5, 4, 35, 34, 33, 1077, 24, 2, 1995,
	1749, 0, 0, 0, 0, 0, 0, 0, 2295, 0,
	0, 0, 182, 2290, 2291, 0, 0, 0, 0, 0,
	0, 0, 2298, 0, 2305, 0, 0, 0, 0, 0,
	2345, 0, 0, 0, 2310, 182, 2330, 0, 0, 2320,
	0, 2327, 0, 0, 1510, 1511, 1512, 1513, 0, 0,
	0, 0, 2332, 182, 2333, 0, 182, 182, 182, 2334,
	2335, 0, 0, 0, 0, 0, 545, 545, 2374, 2375,
	2230, 0, 0, 2229, 2340, 2341, 0, 0, 0, 0,
	0, 2350, 0, 2352, 1551, 1552, 183, 0, 0, 0,
	546, 546, 1557, 545, 545, 545, 545, 0, 0, 0,
	0, 0, 0, 0, 2377, 0, 183, 1592, 1593, 1594,
	1596, 1600, 0, 0, 2388, 0, 0, 0, 0, 0,
	0, 0, 2386, 2387, 0, 546, 0, 2258, 2259, 183,
	2260, 0, 0, 2262, 546, 2264, 0, 2266, 603, 558,
	546, 0, 0, 182, 0, 0, 2401, 0, 0, 0,
	0, 0, 0, 2398, 2397, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 545, 0, 545,
	0, 0, 0, 0, 2408, 1650, 1651, 2438, 0, 37,
	0, 2417, 2418, 0, 0, 2426, 2440, 2427, 693, 0,
	0, 2442, 0, 0, 2434, 2436, 0, 2136, 0, 2133,
	544, 2136, 1684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 545, 2449, 2462, 0, 0, 0, 0, 2446,
	2447, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 545, 2458, 0, 0, 2459, 739, 2460, 0,
	892, 0, 899, 0, 0, 2469, 0, 2477, 2470, 0,
	2465, 1722, 545, 0, 0, 0, 545, 545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2499, 2496,
	2497, 183, 2498, 2501, 0, 545, 0, 2513, 78, 39,
	40, 80, 0, 0, 0, 545, 2510, 2516, 0, 0,
	0, 0, 0, 0, 693, 2512, 0, 2514, 84, 0,
	0, 2136, 43, 69, 70, 546, 67, 71, 0, 545,
	182, 2527, 0, 0, 0, 68, 2524, 0, 37, 0,
	0, 0, 546, 546, 0, 546, 0, 546, 546, 0,
	546, 546, 546, 546, 546, 546, 0, 0, 0, 0,
	0, 0, 545, 0, 56, 546, 0, 0, 0, 183,
	0, 0, 2539, 0, 0, 87, 545, 545, 0, 0,
	2545, 0, 37, 0, 545, 183, 2551, 2542, 2547, 0,
	0, 2477, 2553, 0, 0, 0, 546, 2133, 183, 0,
	0, 2573, 0, 2565, 2570, 0, 0, 0, 0, 0,
	0, 0, 546, 2579, 183, 0, 0, 2581, 0, 0,
	0, 0, 0, 0, 0, 0, 545, 0, 2588, 0,
	183, 0, 0, 2590, 0, 0, 2597, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 546, 546, 546, 2607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 46, 49,
	52, 51, 54, 0, 66, 0, 0, 75, 72, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 532, 0, 0, 0,
	55, 83, 82, 0, 0, 64, 65, 53, 0, 0,
	0, 1149, 0, 73, 74, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 546, 0, 0, 0, 178, 0, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
	58, 0, 59, 60, 61, 62, 0, 0, 0, 120,
	0, 0, 0, 0, 183, 0, 0, 0, 1233, 546,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 516, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 546,
	0, 0, 0, 0, 183, 0, 183, 0, 183, 183,
	546, 0, 0, 546, 0, 0, 0, 0, 0, 159,
	0, 160, 0, 0, 546, 513, 0, 0, 739, 739,
	739, 177, 0, 0, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1073, 1075, 0, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 533, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 0, 0,
	546, 0, 503, 0, 505, 520, 0, 535, 0, 534,
	509, 0, 507, 511, 521, 512, 0, 506, 0, 517,
	0, 1183, 508, 522, 523, 525, 539, 538, 526, 163,
	515, 536, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 546, 0, 2078, 2079, 0, 0, 0, 2082,
	0, 0, 0, 2084, 2085, 2086, 0, 0, 0, 0,
	0, 0, 2091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 1196, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 183, 183, 0,
	0, 183, 0, 183, 0, 0, 0, 0, 0, 0,
	183, 0, 1238, 0, 2128, 0, 0, 183, 0, 0,
	0, 739, 0, 0, 0, 0, 0, 1258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 546, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 0,
	0, 0, 0, 0, 0, 2214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 604, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 500,
	0, 0, 540, 0, 0, 0, 0, 0, 183, 500,
	0, 0, 0, 0, 0, 0, 183, 500, 0, 2275,
	0, 0, 546, 0, 0, 0, 2281, 0, 546, 0,
	0, 0, 706, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 724, 0,
	724, 0, 892, 0, 0, 0, 0, 0, 500, 0,
	0, 0, 183, 183, 0, 1183, 0, 0, 0, 1362,
	1362, 0, 1362, 558, 1362, 1362, 0, 1371, 1362, 1362,
	1362, 1362, 1362, 0, 0, 0, 0, 0, 0, 0,
	1183, 1183, 892, 0, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 0, 0, 0, 0, 0,
	173, 174, 175, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 1432, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 1452,
	0, 0, 0, 0, 0, 0, 546, 2370, 0, 0,
	0, 0, 0, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 2385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 739, 739, 739, 183, 183, 183, 183, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 183, 0, 2399, 0, 2400, 0, 0,
	0, 0, 2403, 2404, 0, 0, 0, 0, 183, 0,
	0, 2409, 2410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2443,
	0, 0, 2445, 0, 546, 0, 0, 0, 0, 0,
	0, 0, 1554, 0, 2448, 0, 0, 0, 0, 1183,
	546, 0, 0, 0, 0, 2455, 0, 1568, 1569, 0,
	0, 0, 0, 0, 0, 183, 739, 0, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 0, 0, 558, 546, 546, 0, 183, 183,
	183, 183, 183, 0, 0, 0, 1631, 0, 0, 0,
	183, 0, 0, 0, 0, 183, 183, 0, 183, 0,
	0, 183, 183, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 0, 2500, 558, 0, 0,
	0, 0, 0, 0, 0, 0, 1238, 0, 0, 739,
	0, 0, 0, 0, 0, 0, 0, 739, 0, 0,
	739, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 892, 0, 0, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 558, 546, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 183, 0, 0,
	0, 0, 500, 0, 500, 0, 899, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 892, 0, 0, 2001, 0, 0, 899, 0, 0,
	0, 0, 2574, 0, 0, 0, 0, 120, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 546, 183, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 892,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 159, 0, 160,
	0, 0, 0, 0, 0, 1339, 1340, 151, 150, 177,
	0, 0, 0, 0, 0, 0, 183, 0, 1184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 183, 183, 183,
	0, 0, 0, 0, 0, 0, 0, 546, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1218, 1220,
	634, 79, 0, 1823, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 546, 546, 546, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 1341, 153, 0, 1338,
	0, 147, 148, 500, 1192, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 183, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	546, 0, 0, 0, 0, 0, 0, 0, 696, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 0,
	0, 0, 739, 0, 0, 0, 686, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 1643,
	0, 0, 0, 546, 0, 1897, 0, 0, 0, 0,
	0, 120, 0, 142, 0, 0, 1912, 0, 0, 0,
	0, 0, 0, 546, 162, 0, 0, 896, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 546, 0, 0, 0, 546, 546, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 500, 546, 0, 0, 0,
	0, 159, 0, 160, 0, 0, 546, 0, 0, 1339,
	1340, 151, 150, 177, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 183, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1184, 1643, 0, 0, 0, 0, 0, 0,
	2010, 0, 0, 0, 0, 0, 0, 0, 143, 2015,
	0, 144, 0, 546, 0, 0, 0, 1184, 1184, 0,
	0, 0, 0, 500, 0, 0, 0, 546, 546, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 146,
	1341, 153, 0, 1338, 0, 147, 148, 0, 1454, 0,
	0, 163, 0, 0, 0, 0, 0, 546, 0, 0,
	168, 0, 0, 0, 500, 0, 1285, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	1477, 1478, 500, 500, 500, 500, 500, 500, 500, 0,
	0, 739, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 0, 0, 0, 0, 1362, 173, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 2115, 0, 0, 0,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 1183,
	0, 0, 2140, 1362, 1183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1565, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 155, 0, 724, 0, 0, 0, 0, 0, 0,
	724, 724, 0, 0, 0, 0, 1184, 0, 0, 0,
	0, 0, 0, 0, 1218, 1615, 1273, 0, 0, 0,
	0, 0, 724, 1454, 724, 724, 724, 724, 724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 892, 0, 0, 1183, 0, 1639, 1408, 0,
	0, 1643, 0, 0, 0, 0, 0, 0, 0, 0,
	1065, 1065, 1065, 724, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 0, 0,
	79, 1005, 0, 1011, 0, 0, 1013, 0, 0, 0,
	500, 0, 143, 0, 0, 144, 1454, 1286, 500, 0,
	500, 0, 500, 1675, 0, 0, 0, 696, 1137, 1138,
	1139, 0, 1142, 0, 1144, 1145, 1146, 1147, 0, 1150,
	1152, 1152, 0, 1152, 1156, 1156, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 0, 1168, 1169, 1170, 1171,
	1172, 0, 0, 0, 2115, 1156, 1156, 1156, 1156, 0,
	0, 1299, 1302, 1303, 1304, 1305, 1306, 1307, 0, 1308,
	1309, 1310, 1311, 1312, 1287, 1288, 1289, 1290, 1271, 1272,
	1300, 0, 1274, 0, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 0, 0, 0, 0, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 0, 0, 0,
	0, 0, 173, 174, 175, 176, 0, 1193, 0, 0,
	0, 0, 0, 696, 0, 0, 0, 696, 0, 0,
	0, 0, 0, 696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 1643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2393, 2394, 2395, 2396, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 1301, 0, 500, 0, 0, 0,
	0, 500, 500, 0, 0, 500, 0, 1815, 0, 0,
	0, 0, 1245, 0, 500, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	1183, 0, 0, 0, 0, 2439, 0, 2441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 1845, 0, 1846, 1847, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 0, 724, 0, 0, 0, 0, 0,
	0, 1862, 1863, 0, 1865, 0, 0, 0, 0, 1868,
	739, 0, 0, 0, 0, 0, 1873, 1874, 1875, 1876,
	1877, 0, 1639, 0, 0, 0, 0, 0, 0, 0,
	2492, 0, 0, 1890, 2492, 2492, 0, 0, 724, 724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1454,
	0, 0, 500, 0, 1263, 0, 0, 0, 0, 0,
	1408, 0, 0, 1643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1183, 0,
	2540, 0, 1393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 739, 739, 0, 0, 0, 0,
	0, 0, 2560, 0, 0, 0, 0, 0, 0, 0,
	0, 1434, 0, 0, 1065, 1065, 1065, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 1994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1464, 1643, 0, 0, 0, 0, 0,
	1468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	500, 500, 500, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 500, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 2087, 0,
	0, 0, 0, 0, 0, 0, 724, 2096, 2097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2139, 0, 0, 0, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 2157, 2158,
	0, 0, 0, 0, 0, 0, 1184, 1670, 0, 0,
	0, 1184, 500, 500, 500, 500, 500, 0, 0, 0,
	0, 0, 0, 0, 2156, 0, 0, 0, 0, 500,
	1408, 0, 500, 0, 0, 500, 2165, 1454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1656,
	0, 0, 0, 0, 0, 0, 0, 1660, 0, 1663,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	2257, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 500, 0, 0, 2267, 2268, 2270, 2272, 0, 0,
	0, 0, 0, 0, 2278, 0, 0, 0, 0, 2282,
	2283, 0, 0, 0, 0, 0, 2287, 0, 0, 0,
	0, 0, 2292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 2314, 2315, 0, 0, 2319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 1503, 0,
	0, 0, 0, 0, 0, 1798, 0, 0, 0, 0,
	1808, 1809, 0, 0, 1813, 0, 0, 0, 0, 0,
	500, 0, 0, 1816, 0, 0, 0, 0, 0, 0,
	1819, 2380, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 500, 500, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 1888, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1184, 0, 0,
	0, 0, 696, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1923, 1924, 0, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2483, 2484, 2485,
	0, 2486, 2487, 0, 0, 0, 0, 0, 0, 2491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2016, 0, 0, 0, 0, 0, 2529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2534, 0,
	1988, 0, 0, 0, 2535, 2536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2034, 2035,
	2036, 2037, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 2052, 628, 635, 636, 637, 638, 639, 629, 631,
	0, 0, 0, 630, 0, 0, 633, 640, 641, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2137, 0, 79, 0, 0, 1670, 1670, 1670,
	1670, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2231, 2232, 1943, 0, 0, 1670, 0, 0,
	1670, 0, 0, 0, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2227, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 628, 635, 636, 637, 638, 639, 629, 631,
	0, 0, 0, 630, 0, 2204, 633, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2231, 2232, 0, 0, 0, 2246, 0, 0,
	2249, 0, 0, 0, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2294, 1670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2338, 0, 614, 0, 0,
	0, 615, 616, 0, 0, 0, 617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2363, 0, 0,
	2364, 2365, 2366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2411,
	0, 2415, 2416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2137, 0, 79, 0, 2137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1161, 1162, 1163, 1164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 870, 855, 421, 2528, 802, 873, 772, 790, 883,
	793, 796, 837, 751, 816, 342, 787, 0, 776, 746,
	782, 747, 774, 804, 244, 771, 857, 820, 872, 297,
	241, 753, 777, 356, 792, 193, 839, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 879, 301, 826, 0, 406, 327, 0, 0, 0,
	806, 861, 814, 851, 801, 838, 761, 825, 874, 788,
	834, 875, 287, 226, 192, 339, 407, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 2554, 0, 2555, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 784, 831,
	869, 785, 833, 239, 285, 246, 238, 425, 880, 860,
	750, 813, 868, 0, 0, 209, 871, 808, 0, 836,
	0, 886, 745, 828, 0, 748, 752, 882, 864, 780,
	249, 0, 0, 0, 0, 0, 0, 0, 805, 815,
	848, 799, 0, 0, 0, 0, 0, 0, 0, 778,
	0, 824, 0, 0, 0, 757, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 803, 0,
	0, 0, 760, 0, 779, 849, 0, 743, 268, 754,
	328, 231, 0, 853, 863, 800, 459, 867, 798, 797,
	843, 758, 859, 791, 296, 756, 293, 188, 205, 0,
	789, 338, 379, 385, 858, 775, 783, 229, 781, 383,
	352, 443, 213, 257, 376, 357, 381, 364, 260, 823,
	841, 382, 302, 430, 371, 440, 460, 461, 237, 332,
	450, 419, 456, 472, 206, 234, 346, 412, 446, 403,
	325, 426, 427, 292, 402, 266, 191, 300, 466, 204,
	391, 221, 211, 197, 414, 438, 218, 394, 0, 0,
	474, 199, 436, 411, 321, 289, 290, 198, 0, 375,
	242, 264, 232, 341, 433, 434, 230, 475, 208, 455,
	201, 1067, 454, 334, 429, 437, 322, 312, 200, 435,
	320, 311, 295, 253, 275, 369, 305, 370, 276, 330,
	329, 331, 194, 447, 0, 195, 0, 408, 448, 476,
	214, 215, 216, 770, 252, 256, 263, 265, 271, 272,
	279, 298, 345, 368, 366, 372, 854, 424, 441, 451,
	458, 464, 465, 467, 468, 469, 470, 471, 333, 278,
	404, 294, 303, 846, 885, 351, 384, 219, 445, 405,
	765, 769, 763, 764, 818, 819, 766, 876, 877, 878,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 850,
	759, 0, 767, 768, 0, 856, 865, 866, 495, 313,
	396, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 822, 187, 202, 299, 881, 373, 261, 473,
	453, 449, 744, 762, 236, 773, 0, 0, 786, 794,
	795, 807, 809, 810, 811, 812, 324, 829, 830, 832,
	840, 842, 845, 847, 852, 862, 884, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 315, 316, 317, 318, 335, 336, 337,
	340, 343, 344, 347, 349, 350, 353, 360, 361, 362,
	363, 365, 367, 374, 378, 386, 387, 388, 389, 390,
	392, 393, 398, 399, 400, 401, 409, 413, 431, 432,
	444, 457, 462, 270, 439, 463, 0, 308, 821, 827,
	310, 254, 273, 284, 835, 452, 410, 207, 380, 262,
	196, 225, 210, 233, 248, 251, 288, 319, 326, 355,
	359, 267, 245, 223, 377, 220, 395, 416, 417, 418,
	420, 323, 240, 358, 817, 844, 306, 422, 423, 280,
	870, 855, 421, 0, 802, 873, 772, 790, 883, 793,
	796, 837, 751, 816, 342, 787, 0, 776, 746, 782,
	747, 774, 804, 244, 771, 857, 820, 872, 297, 241,
	753, 777, 356, 792, 193, 839, 397, 228, 307, 304,
	428, 255, 247, 243, 227, 281, 314, 354, 415, 348,
	879, 301, 826, 0, 406, 327, 0, 0, 0, 806,
	861, 814, 851, 801, 838, 761, 825, 874, 788, 834,
	875, 287, 226, 192, 339, 407, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 784, 831, 869,
	785, 833, 239, 285, 246, 238, 425, 880, 860, 750,
	813, 868, 0, 0, 209, 871, 808, 0, 836, 0,
	886, 745, 828, 0, 748, 752, 882, 864, 780, 249,
	0, 0, 0, 0, 0, 0, 0, 805, 815, 848,
	799, 0, 0, 0, 0, 0, 2166, 0, 778, 0,
	824, 0, 0, 0, 757, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 803, 0, 0,
	0, 760, 0, 779, 849, 0, 743, 268, 754, 328,
	231, 0, 853, 863, 800, 459, 867, 798, 797, 843,
	758, 859, 791, 296, 756, 293, 188, 205, 0, 789,
	338, 379, 385, 858, 775, 783, 229, 781, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 823, 841,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	1067, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 770, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 854, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 846, 885, 351, 384, 219, 445, 405, 765,
	769, 763, 764, 818, 819, 766, 876, 877, 878, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 850, 759,
	0, 767, 768, 0, 856, 865, 866, 495, 313, 396,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 822, 187, 202, 299, 881, 373, 261, 473, 453,
	449, 744, 762, 236, 773, 0, 0, 786, 794, 795,
	807, 809, 810, 811, 812, 324, 829, 830, 832, 840,
	842, 845, 847, 852, 862, 884, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 821, 827, 310,
	254, 273, 284, 835, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 817, 844, 306, 422, 423, 280, 870,
	855, 421, 0, 802, 873, 772, 790, 883, 793, 796,
	837, 751, 816, 342, 787, 0, 776, 746, 782, 747,
	774, 804, 244, 771, 857, 820, 872, 297, 241, 753,
	777, 356, 792, 193, 839, 397, 228, 307, 304, 428,
	255, 247, 243, 227, 281, 314, 354, 415, 348, 879,
	301, 826, 0, 406, 327, 0, 0, 0, 806, 861,
	814, 851, 801, 838, 761, 825, 874, 788, 834, 875,
	287, 226, 192, 339, 407, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 784, 831, 869, 785,
	833, 239, 285, 246, 238, 425, 880, 860, 750, 813,
	868, 0, 0, 209, 871, 808, 0, 836, 0, 886,
	745, 828, 0, 748, 752, 882, 864, 780, 249, 0,
	0, 0, 0, 0, 0, 0, 805, 815, 848, 799,
	0, 0, 0, 0, 0, 2126, 0, 778, 0, 824,
	0, 0, 0, 757, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 803, 0, 0, 0,
	760, 0, 779, 849, 0, 743, 268, 754, 328, 231,
	0, 853, 863, 800, 459, 867, 798, 797, 843, 758,
	859, 791, 296, 756, 293, 188, 205, 0, 789, 338,
	379, 385, 858, 775, 783, 229, 781, 383, 352, 443,
	213, 257, 376, 357, 381, 364, 260, 823, 841, 382,
	302, 430, 371, 440, 460, 461, 237, 332, 450, 419,
	456, 472, 206, 234, 346, 412, 446, 403, 325, 426,
	427, 292, 402, 266, 191, 300, 466, 204, 391, 221,
	211, 197, 414, 438, 218, 394, 0, 0, 474, 199,
	436, 411, 321, 289, 290, 198, 0, 375, 242, 264,
	232, 341, 433, 434, 230, 475, 208, 455, 201, 1067,
	454, 334, 429, 437, 322, 312, 200, 435, 320, 311,
	295, 253, 275, 369, 305, 370, 276, 330, 329, 331,
	194, 447, 0, 195, 0, 408, 448, 476, 214, 215,
	216, 770, 252, 256, 263, 265, 271, 272, 279, 298,
	345, 368, 366, 372, 854, 424, 441, 451, 458, 464,
	465, 467, 468, 469, 470, 471, 333, 278, 404, 294,
	303, 846, 885, 351, 384, 219, 445, 405, 765, 769,
	763, 764, 818, 819, 766, 876, 877, 878, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 850, 759, 0,
	767, 768, 0, 856, 865, 866, 495, 313, 396, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	822, 187, 202, 299, 881, 373, 261, 473, 453, 449,
	744, 762, 236, 773, 0, 0, 786, 794, 795, 807,
	809, 810, 811, 812, 324, 829, 830, 832, 840, 842,
	845, 847, 852, 862, 884, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	398, 399, 400, 401, 409, 413, 431, 432, 444, 457,
	462, 270, 439, 463, 0, 308, 821, 827, 310, 254,
	273, 284, 835, 452, 410, 207, 380, 262, 196, 225,
	210, 233, 248, 251, 288, 319, 326, 355, 359, 267,
	245, 223, 377, 220, 395, 416, 417, 418, 420, 323,
	240, 358, 817, 844, 306, 422, 423, 280, 870, 855,
	421, 0, 802, 873, 772, 790, 883, 793, 796, 837,
	751, 816, 342, 787, 0, 776, 746, 782, 747, 774,
	804, 244, 771, 857, 820, 872, 297, 241, 753, 777,
	356, 792, 193, 839, 397, 228, 307, 304, 428, 255,
	247, 243, 227, 281, 314, 354, 415, 348, 879, 301,
	826, 0, 406, 327, 0, 0, 0, 806, 861, 814,
	851, 801, 838, 761, 825, 874, 788, 834, 875, 287,
	226, 192, 339, 407, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 784, 831, 869, 785, 833,
	239, 285, 246, 238, 425, 880, 860, 750, 813, 868,
	0, 0, 209, 871, 808, 0, 836, 0, 886, 745,
	828, 0, 748, 752, 882, 864, 780, 249, 0, 0,
	0, 0, 0, 0, 0, 805, 815, 848, 799, 0,
	0, 0, 0, 0, 1658, 0, 778, 0, 824, 0,
	0, 0, 757, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 803, 0, 0, 0, 760,
	0, 779, 849, 0, 743, 268, 754, 328, 231, 0,
	853, 863, 800, 459, 867, 798, 797, 843, 758, 859,
	791, 296, 756, 293, 188, 205, 0, 789, 338, 379,
	385, 858, 775, 783, 229, 781, 383, 352, 443, 213,
	257, 376, 357, 381, 364, 260, 823, 841, 382, 302,
	430, 371, 440, 460, 461, 237, 332, 450, 419, 456,
	472, 206, 234, 346, 412, 446, 403, 325, 426, 427,
	292, 402, 266, 191, 300, 466, 204, 391, 221, 211,
	197, 414, 438, 218, 394, 0, 0, 474, 199, 436,
	411, 321, 289, 290, 198, 0, 375, 242, 264, 232,
	341, 433, 434, 230, 475, 208, 455, 201, 1067, 454,
	334, 429, 437, 322, 312, 200, 435, 320, 311, 295,
	253, 275, 369, 305, 370, 276, 330, 329, 331, 194,
	447, 0, 195, 0, 408, 448, 476, 214, 215, 216,
	770, 252, 256, 263, 265, 271, 272, 279, 298, 345,
	368, 366, 372, 854, 424, 441, 451, 458, 464, 465,
	467, 468, 469, 470, 471, 333, 278, 404, 294, 303,
	846, 885, 351, 384, 219, 445, 405, 765, 769, 763,
	764, 818, 819, 766, 876, 877, 878, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 850, 759, 0, 767,
	768, 0, 856, 865, 866, 495, 313, 396, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 822,
	187, 202, 299, 881, 373, 261, 473, 453, 449, 744,
	762, 236, 773, 0, 0, 786, 794, 795, 807, 809,
	810, 811, 812, 324, 829, 830, 832, 840, 842, 845,
	847, 852, 862, 884, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 398,
	399, 400, 401, 409, 413, 431, 432, 444, 457, 462,
	270, 439, 463, 0, 308, 821, 827, 310, 254, 273,
	284, 835, 452, 410, 207, 380, 262, 196, 225, 210,
	233, 248, 251, 288, 319, 326, 355, 359, 267, 245,
	223, 377, 220, 395, 416, 417, 418, 420, 323, 240,
	358, 817, 844, 306, 422, 423, 280, 870, 855, 421,
	0, 802, 873, 772, 790, 883, 793, 796, 837, 751,
	816, 342, 787, 0, 776, 746, 782, 747, 774, 804,
	244, 771, 857, 820, 872, 297, 241, 753, 777, 356,
	792, 193, 839, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 879, 301, 826,
	0, 406, 327, 0, 0, 0, 806, 861, 814, 851,
	801, 838, 761, 825, 874, 788, 834, 875, 287, 226,
	192, 339, 407, 259, 0, 87, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 784, 831, 869, 785, 833, 239,
	285, 246, 238, 425, 880, 860, 750, 813, 868, 0,
	0, 209, 871, 808, 0, 836, 0, 886, 745, 828,
	0, 748, 752, 882, 864, 780, 249, 0, 0, 0,
	0, 0, 0, 0, 805, 815, 848, 799, 0, 0,
	0, 0, 0, 0, 0, 778, 0, 824, 0, 0,
	0, 757, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 803, 0, 0, 0, 760, 0,
	779, 849, 0, 743, 268, 754, 328, 231, 0, 853,
	863, 800, 459, 867, 798, 797, 843, 758, 859, 791,
	296, 756, 293, 188, 205, 0, 789, 338, 379, 385,
	858, 775, 783, 229, 781, 383, 352, 443, 213, 257,
	376, 357, 381, 364, 260, 823, 841, 382, 302, 430,
	371, 440, 460, 461, 237, 332, 450, 419, 456, 472,
	206, 234, 346, 412, 446, 403, 325, 426, 427, 292,
	402, 266, 191, 300, 466, 204, 391, 221, 211, 197,
	414, 438, 218, 394, 0, 0, 474, 199, 436, 411,
	321, 289, 290, 198, 0, 375, 242, 264, 232, 341,
	433, 434, 230, 475, 208, 455, 201, 1067, 454, 334,
	429, 437, 322, 312, 200, 435, 320, 311, 295, 253,
	275, 369, 305, 370, 276, 330, 329, 331, 194, 447,
	0, 195, 0, 408, 448, 476, 214, 215, 216, 770,
	252, 256, 263, 265, 271, 272, 279, 298, 345, 368,
	366, 372, 854, 424, 441, 451, 458, 464, 465, 467,
	468, 469, 470, 471, 333, 278, 404, 294, 303, 846,
	885, 351, 384, 219, 445, 405, 765, 769, 763, 764,
	818, 819, 766, 876, 877, 878, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 850, 759, 0, 767, 768,
	0, 856, 865, 866, 495, 313, 396, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 822, 187,
	202, 299, 881, 373, 261, 473, 453, 449, 744, 762,
	236, 773, 0, 0, 786, 794, 795, 807, 809, 810,
	811, 812, 324, 829, 830, 832, 840, 842, 845, 847,
	852, 862, 884, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 315,
	316, 317, 318, 335, 336, 337, 340, 343, 344, 347,
	349, 350, 353, 360, 361, 362, 363, 365, 367, 374,
	378, 386, 387, 388, 389, 390, 392, 393, 398, 399,
	400, 401, 409, 413, 431, 432, 444, 457, 462, 270,
	439, 463, 0, 308, 821, 827, 310, 254, 273, 284,
	835, 452, 410, 207, 380, 262, 196, 225, 210, 233,
	248, 251, 288, 319, 326, 355, 359, 267, 245, 223,
	377, 220, 395, 416, 417, 418, 420, 323, 240, 358,
	817, 844, 306, 422, 423, 280, 870, 855, 421, 0,
	802, 873, 772, 790, 883, 793, 796, 837, 751, 816,
	342, 787, 0, 776, 746, 782, 747, 774, 804, 244,
	771, 857, 820, 872, 297, 241, 753, 777, 356, 792,
	193, 839, 397, 228, 307, 304, 428, 255, 247, 243,
	227, 281, 314, 354, 415, 348, 879, 301, 826, 0,
	406, 327, 0, 0, 0, 806, 861, 814, 851, 801,
	838, 761, 825, 874, 788, 834, 875, 287, 226, 192,
	339, 407, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 784, 831, 869, 785, 833, 239, 285,
	246, 238, 425, 880, 860, 750, 813, 868, 0, 0,
	209, 871, 808, 0, 836, 0, 886, 745, 828, 0,
	748, 752, 882, 864, 780, 249, 0, 0, 0, 0,
	0, 0, 0, 805, 815, 848, 799, 0, 0, 0,
	0, 0, 0, 0, 778, 0, 824, 0, 0, 0,
	757, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 803, 0, 0, 0, 760, 0, 779,
	849, 0, 743, 268, 754, 328, 231, 0, 853, 863,
	800, 459, 867, 798, 797, 843, 758, 859, 791, 296,
	756, 293, 188, 205, 0, 789, 338, 379, 385, 858,
	775, 783, 229, 781, 383, 352, 443, 213, 257, 376,
	357, 381, 364, 260, 823, 841, 382, 302, 430, 371,
	440, 460, 461, 237, 332, 450, 419, 456, 472, 206,
	234, 346, 412, 446, 403, 325, 426, 427, 292, 402,
	266, 191, 300, 466, 204, 391, 221, 211, 197, 414,
	438, 218, 394, 0, 0, 474, 199, 436, 411, 321,
	289, 290, 198, 0, 375, 242, 264, 232, 341, 433,
	434, 230, 475, 208, 455, 201, 1067, 454, 334, 429,
	437, 322, 312, 200, 435, 320, 311, 295, 253, 275,
	369, 305, 370, 276, 330, 329, 331, 194, 447, 0,
	195, 0, 408, 448, 476, 214, 215, 216, 770, 252,
	256, 263, 265, 271, 272, 279, 298, 345, 368, 366,
	372, 854, 424, 441, 451, 458, 464, 465, 467, 468,
	469, 470, 471, 333, 278, 404, 294, 303, 846, 885,
	351, 384, 219, 445, 405, 765, 769, 763, 764, 818,
	819, 766, 876, 877, 878, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 850, 759, 0, 767, 768, 0,
	856, 865, 866, 495, 313, 396, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 822, 187, 202,
	299, 881, 373, 261, 473, 453, 449, 744, 762, 236,
	773, 0, 0, 786, 794, 795, 807, 809, 810, 811,
	812, 324, 829, 830, 832, 840, 842, 845, 847, 852,
	862, 884, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 398, 399, 400,
	401, 409, 413, 431, 432, 444, 457, 462, 270, 439,
	463, 0, 308, 821, 827, 310, 254, 273, 284, 835,
	452, 410, 207, 380, 262, 196, 225, 210, 233, 248,
	251, 288, 319, 326, 355, 359, 267, 245, 223, 377,
	220, 395, 416, 417, 418, 420, 323, 240, 358, 817,
	844, 306, 422, 423, 280, 870, 855, 421, 0, 802,
	873, 772, 790, 883, 793, 796, 837, 751, 816, 342,
	787, 0, 776, 746, 782, 747, 774, 804, 244, 771,
	857, 820, 872, 297, 241, 753, 777, 356, 792, 193,
	839, 397, 228, 307, 304, 428, 255, 247, 243, 227,
	281, 314, 354, 415, 348, 879, 301, 826, 0, 406,
	327, 0, 0, 0, 806, 861, 814, 851, 801, 838,
	761, 825, 874, 788, 834, 875, 287, 226, 192, 339,
	407, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 784, 831, 869, 785, 833, 239, 285, 246,
	238, 425, 880, 860, 750, 813, 868, 0, 0, 887,
	871, 808, 0, 836, 0, 886, 745, 828, 0, 748,
	752, 882, 864, 780, 249, 0, 0, 0, 0, 0,
	0, 0, 805, 815, 848, 799, 0, 0, 0, 0,
	0, 0, 0, 778, 0, 824, 0, 0, 0, 757,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 803, 0, 0, 0, 760, 0, 779, 849,
	0, 743, 268, 754, 328, 231, 0, 853, 863, 800,
	459, 867, 798, 797, 843, 758, 859, 791, 296, 756,
	293, 188, 205, 0, 789, 338, 379, 385, 858, 775,
	783, 229, 781, 383, 352, 443, 213, 257, 376, 357,
	381, 364, 260, 823, 841, 382, 302, 430, 371, 440,
	460, 461, 237, 332, 450, 419, 456, 472, 206, 234,
	346, 412, 446, 403, 325, 426, 427, 292, 402, 266,
	191, 300, 466, 204, 391, 221, 211, 197, 414, 438,
	218, 394, 0, 0, 474, 199, 436, 411, 321, 289,
	290, 198, 0, 375, 242, 264, 232, 341, 433, 434,
	230, 475, 208, 455, 201, 755, 454, 334, 429, 437,
	322, 312, 200, 435, 320, 311, 295, 253, 275, 369,
	305, 370, 276, 330, 329, 331, 194, 447, 0, 195,
	0, 408, 448, 476, 214, 215, 216, 770, 252, 256,
	263, 265, 271, 272, 279, 298, 345, 368, 366, 372,
	854, 424, 441, 451, 458, 464, 465, 467, 468, 469,
	470, 471, 742, 736, 735, 294, 303, 846, 885, 351,
	384, 219, 445, 405, 765, 769, 763, 764, 818, 819,
	766, 876, 877, 878, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 850, 759, 0, 767, 768, 0, 856,
	865, 866, 495, 313, 396, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 822, 187, 202, 299,
	881, 373, 261, 473, 453, 449, 744, 762, 236, 773,
	0, 0, 786, 794, 795, 807, 809, 810, 811, 812,
	324, 829, 830, 832, 840, 842, 845, 847, 852, 862,
	884, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 398, 399, 400, 401,
	409, 413, 431, 432, 444, 457, 462, 270, 439, 463,
	0, 308, 821, 827, 310, 254, 273, 284, 835, 452,
	410, 207, 380, 262, 196, 225, 210, 233, 248, 251,
	288, 319, 326, 355, 359, 267, 245, 223, 377, 220,
	395, 416, 417, 418, 420, 323, 240, 358, 817, 844,
	306, 422, 423, 280, 870, 855, 421, 0, 802, 873,
	772, 790, 883, 793, 796, 837, 751, 816, 342, 787,
	0, 776, 746, 782, 747, 774, 804, 244, 771, 857,
	820, 872, 297, 241, 753, 777, 356, 792, 193, 839,
	397, 228, 307, 304, 428, 255, 247, 243, 227, 281,
	314, 354, 415, 348, 879, 301, 826, 0, 406, 327,
	0, 0, 0, 806, 861, 814, 851, 801, 838, 761,
	825, 874, 788, 834, 875, 287, 226, 192, 339, 407,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 784, 831, 869, 785, 833, 239, 285, 246, 238,
	425, 880, 860, 750, 813, 868, 0, 0, 887, 871,
	808, 0, 836, 0, 886, 745, 828, 0, 748, 752,
	882, 864, 780, 249, 0, 0, 0, 0, 0, 0,
	0, 805, 815, 848, 799, 0, 0, 0, 0, 0,
	0, 0, 778, 0, 824, 0, 0, 0, 757, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 803, 0, 0, 0, 760, 0, 779, 849, 0,
	743, 268, 754, 328, 231, 0, 853, 863, 800, 459,
	867, 798, 797, 843, 758, 859, 791, 296, 756, 293,
	188, 205, 0, 789, 338, 379, 385, 858, 775, 783,
	229, 781, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 823, 841, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 1249, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 755, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 770, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 854,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 742, 736, 735, 294, 303, 846, 885, 351, 384,
	219, 445, 405, 765, 769, 763, 764, 818, 819, 766,
	876, 877, 878, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 850, 759, 0, 767, 768, 0, 856, 865,
	866, 495, 313, 396, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 822, 187, 202, 299, 881,
	373, 261, 473, 453, 449, 744, 762, 236, 773, 0,
	0, 786, 794, 795, 807, 809, 810, 811, 812, 324,
	829, 830, 832, 840, 842, 845, 847, 852, 862, 884,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 821, 827, 310, 254, 273, 284, 835, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 817, 844, 306,
	422, 423, 280, 870, 855, 421, 0, 802, 873, 772,
	790, 883, 793, 796, 837, 751, 816, 342, 787, 0,
	776, 746, 782, 747, 774, 804, 244, 771, 857, 820,
	872, 297, 241, 753, 777, 356, 792, 193, 839, 397,
	228, 307, 304, 428, 255, 247, 243, 227, 281, 314,
	354, 415, 348, 879, 301, 826, 0, 406, 327, 0,
	0, 0, 806, 861, 814, 851, 801, 838, 761, 825,
	874, 788, 834, 875, 287, 226, 192, 339, 407, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	784, 831, 869, 785, 833, 239, 285, 246, 238, 425,
	880, 860, 750, 813, 868, 0, 0, 887, 871, 808,
	0, 836, 0, 886, 745, 828, 0, 748, 752, 882,
	864, 780, 249, 0, 0, 0, 0, 0, 0, 0,
	805, 815, 848, 799, 0, 0, 0, 0, 0, 0,
	0, 778, 0, 824, 0, 0, 0, 757, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	803, 0, 0, 0, 760, 0, 779, 849, 0, 743,
	268, 754, 328, 231, 0, 853, 863, 800, 459, 867,
	798, 797, 843, 758, 859, 791, 296, 756, 293, 188,
	205, 0, 789, 338, 379, 385, 858, 775, 783, 229,
	781, 383, 352, 443, 213, 257, 376, 357, 381, 364,
	260, 823, 841, 382, 302, 430, 371, 440, 460, 461,
	237, 332, 450, 419, 456, 472, 206, 234, 346, 412,
	446, 403, 325, 426, 427, 292, 402, 266, 191, 300,
	466, 204, 391, 221, 211, 197, 414, 733, 218, 394,
	0, 0, 474, 199, 436, 411, 321, 289, 290, 198,
	0, 375, 242, 264, 232, 341, 433, 434, 230, 475,
	208, 455, 201, 755, 454, 334, 429, 437, 322, 312,
	200, 435, 320, 311, 295, 253, 275, 369, 305, 370,
	276, 330, 329, 331, 194, 447, 0, 195, 0, 408,
	448, 476, 214, 215, 216, 770, 252, 256, 263, 265,
	271, 272, 279, 298, 345, 368, 366, 372, 854, 424,
	441, 451, 458, 464, 465, 467, 468, 469, 470, 471,
	742, 736, 735, 294, 303, 846, 885, 351, 384, 219,
	445, 405, 765, 769, 763, 764, 818, 819, 766, 876,
	877, 878, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 850, 759, 0, 767, 768, 0, 856, 865, 866,
	495, 313, 396, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 822, 187, 202, 299, 881, 373,
	261, 473, 453, 449, 744, 762, 236, 773, 0, 0,
	786, 794, 795, 807, 809, 810, 811, 812, 324, 829,
	830, 832, 840, 842, 845, 847, 852, 862, 884, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 315, 316, 317, 318, 335,
	336, 337, 340, 343, 344, 347, 349, 350, 353, 360,
	361, 362, 363, 365, 367, 374, 378, 386, 387, 388,
	389, 390, 392, 393, 398, 399, 400, 401, 409, 413,
	431, 432, 444, 457, 462, 270, 439, 463, 0, 308,
	821, 827, 310, 254, 273, 284, 835, 452, 410, 207,
	380, 262, 196, 225, 210, 233, 248, 251, 288, 319,
	326, 355, 359, 267, 245, 223, 377, 220, 395, 416,
	417, 418, 420, 323, 240, 358, 817, 844, 306, 422,
	423, 280, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 1602, 0, 576,
	0, 0, 0, 244, 581, 0, 0, 0, 297, 241,
	0, 1603, 356, 0, 193, 0, 397, 228, 307, 304,
	428, 255, 247, 243, 227, 281, 314, 354, 415, 348,
	588, 301, 0, 0, 406, 327, 0, 0, 0, 0,
	0, 583, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 339, 407, 259, 0, 87, 0,
	0, 184, 185, 186, 628, 635, 636, 637, 638, 639,
	629, 631, 0, 0, 217, 630, 224, 597, 633, 640,
	641, 0, 239, 285, 246, 238, 425, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 559, 573, 0, 587, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 570, 571, 722, 0, 0, 0,
	608, 0, 572, 0, 0, 580, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 328,
	231, 0, 607, 0, 0, 459, 0, 0, 605, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	338, 379, 385, 0, 0, 0, 229, 0, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 0, 0,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	0, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 0, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 0, 0, 351, 384, 219, 445, 405, 614,
	606, 592, 594, 615, 616, 589, 590, 593, 617, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 609, 579,
	578, 0, 585, 586, 0, 595, 596, 598, 599, 600,
	601, 618, 619, 620, 0, 0, 0, 0, 621, 622,
	0, 577, 187, 202, 299, 0, 373, 261, 473, 453,
	449, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 421, 0, 306, 422, 423, 280, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	576, 0, 0, 0, 244, 581, 0, 0, 0, 297,
	241, 0, 0, 356, 0, 193, 0, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 588, 301, 0, 0, 406, 327, 0, 0, 0,
	0, 0, 583, 584, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 339, 407, 259, 0, 87,
	0, 0, 184, 185, 186, 628, 635, 636, 637, 638,
	639, 629, 631, 0, 0, 217, 630, 224, 597, 633,
	640, 641, 0, 239, 285, 246, 238, 425, 0, 0,
	1597, 1598, 1599, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 559, 573, 0, 587, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 571, 0, 0, 0,
	0, 608, 0, 572, 0, 0, 580, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	328, 231, 0, 607, 0, 0, 459, 0, 0, 605,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 443, 213, 257, 376, 357, 381, 364, 260, 0,
	0, 382, 302, 430, 371, 440, 460, 461, 237, 332,
	450, 419, 456, 472, 206, 234, 346, 412, 446, 403,
	325, 426, 427, 292, 402, 266, 191, 300, 466, 204,
	391, 221, 211, 197, 414, 438, 218, 394, 0, 0,
	474, 199, 436, 411, 321, 289, 290, 198, 0, 375,
	242, 264, 232, 341, 433, 434, 230, 475, 208, 455,
	201, 0, 454, 334, 429, 437, 322, 312, 200, 435,
	320, 311, 295, 253, 275, 369, 305, 370, 276, 330,
	329, 331, 194, 447, 0, 195, 0, 408, 448, 476,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 345, 368, 366, 372, 0, 424, 441, 451,
	458, 464, 465, 467, 468, 469, 470, 471, 333, 278,
	404, 294, 303, 0, 0, 351, 384, 219, 445, 405,
	614, 606, 592, 594, 615, 616, 589, 590, 593, 617,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 609,
	579, 578, 0, 585, 586, 0, 595, 596, 598, 599,
	600, 601, 618, 619, 620, 0, 0, 0, 0, 621,
	622, 0, 577, 187, 202, 299, 0, 373, 261, 473,
	453, 449, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 315, 316, 317, 318, 335, 336, 337,
	340, 343, 344, 347, 349, 350, 353, 360, 361, 362,
	363, 365, 367, 374, 378, 386, 387, 388, 389, 390,
	392, 393, 398, 399, 400, 401, 409, 413, 431, 432,
	444, 457, 462, 270, 439, 463, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 452, 410, 207, 380, 262,
	196, 225, 210, 233, 248, 251, 288, 319, 326, 355,
	359, 267, 245, 223, 377, 220, 395, 416, 417, 418,
	420, 323, 240, 358, 421, 0, 306, 422, 423, 280,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 576, 0, 0, 0, 244, 581, 0, 0, 0,
	297, 241, 0, 0, 356, 0, 193, 0, 397, 228,
	307, 304, 428, 255, 247, 243, 227, 281, 314, 354,
	415, 348, 588, 301, 0, 0, 406, 327, 0, 0,
	0, 0, 0, 583, 584, 0, 0, 0, 0, 0,
	0, 1682, 0, 287, 226, 192, 339, 407, 259, 0,
	87, 0, 0, 184, 185, 186, 628, 635, 636, 637,
	638, 639, 629, 631, 0, 0, 217, 630, 224, 597,
	633, 640, 641, 1683, 239, 285, 246, 238, 425, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 559, 573, 0, 587, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 571, 0, 0,
	0, 0, 608, 0, 572, 0, 0, 580, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 328, 231, 0, 607, 0, 0, 459, 0, 0,
	605, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 443, 213, 257, 376, 357, 381, 364, 260,
	0, 0, 382, 302, 430, 371, 440, 460, 461, 237,
	332, 450, 419, 456, 472, 206, 234, 346, 412, 446,
	403, 325, 426, 427, 292, 402, 266, 191, 300, 466,
	204, 391, 221, 211, 197, 414, 438, 218, 394, 0,
	0, 474, 199, 436, 411, 321, 289, 290, 198, 0,
	375, 242, 264, 232, 341, 433, 434, 230, 475, 208,
	455, 201, 0, 454, 334, 429, 437, 322, 312, 200,
	435, 320, 311, 295, 253, 275, 369, 305, 370, 276,
	330, 329, 331, 194, 447, 0, 195, 0, 408, 448,
	476, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 345, 368, 366, 372, 0, 424, 441,
	451, 458, 464, 465, 467, 468, 469, 470, 471, 333,
	278, 404, 294, 303, 0, 0, 351, 384, 219, 445,
	405, 614, 606, 592, 594, 615, 616, 589, 590, 593,
	617, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	609, 579, 578, 0, 585, 586, 0, 595, 596, 598,
	599, 600, 601, 618, 619, 620, 0, 0, 0, 0,
	621, 622, 0, 577, 187, 202, 299, 0, 373, 261,
	473, 453, 449, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 315, 316, 317, 318, 335, 336,
	337, 340, 343, 344, 347, 349, 350, 353, 360, 361,
	362, 363, 365, 367, 374, 378, 386, 387, 388, 389,
	390, 392, 393, 398, 399, 400, 401, 409, 413, 431,
	432, 444, 457, 462, 270, 439, 463, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 452, 410, 207, 380,
	262, 196, 225, 210, 233, 248, 251, 288, 319, 326,
	355, 359, 267, 245, 223, 377, 220, 395, 416, 417,
	418, 420, 323, 240, 358, 78, 421, 306, 422, 423,
	280, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 576, 0, 0, 0, 244, 581, 0,
	0, 0, 297, 241, 0, 0, 356, 0, 193, 0,
	397, 228, 307, 304, 428, 255, 247, 243, 227, 281,
	314, 354, 415, 348, 588, 301, 0, 0, 406, 327,
	0, 0, 0, 0, 0, 583, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 339, 407,
	259, 0, 87, 0, 0, 184, 185, 186, 628, 635,
	636, 637, 638, 639, 629, 631, 0, 0, 217, 630,
	224, 597, 633, 640, 641, 0, 239, 285, 246, 238,
	425, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 559, 573, 0, 587,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 570, 571,
	0, 0, 0, 0, 608, 0, 572, 0, 0, 580,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 328, 231, 0, 607, 0, 0, 459,
	0, 0, 605, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 338, 379, 385, 0, 0, 0,
	229, 0, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 0, 0, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 0, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 0,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 0, 0, 351, 384,
	219, 445, 405, 614, 606, 592, 594, 615, 616, 589,
	590, 593, 617, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 609, 579, 578, 0, 585, 586, 0, 595,
	596, 598, 599, 600, 601, 618, 619, 620, 0, 0,
	0, 0, 621, 622, 0, 577, 187, 202, 299, 86,
	373, 261, 473, 453, 449, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 421, 0, 306,
	422, 423, 280, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 576, 0, 0, 0, 244, 581,
	0, 0, 0, 297, 241, 0, 0, 356, 0, 193,
	0, 397, 228, 307, 304, 428, 255, 247, 243, 227,
	281, 314, 354, 415, 348, 588, 301, 0, 0, 406,
	327, 0, 0, 0, 0, 0, 583, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 339,
	407, 259, 0, 87, 0, 0, 184, 185, 186, 628,
	635, 636, 637, 638, 639, 629, 631, 0, 0, 217,
	630, 224, 597, 633, 640, 641, 0, 239, 285, 246,
	238, 425, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 559, 573, 0,
	587, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	571, 0, 0, 0, 0, 608, 0, 572, 0, 0,
	580, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 328, 231, 0, 607, 0, 0,
	459, 0, 0, 605, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 338, 379, 385, 0, 0,
	0, 229, 0, 383, 352, 443, 213, 257, 376, 357,
	381, 364, 260, 2523, 0, 382, 302, 430, 371, 440,
	460, 461, 237, 332, 450, 419, 456, 472, 206, 234,
	346, 412, 446, 403, 325, 426, 427, 292, 402, 266,
	191, 300, 466, 204, 391, 221, 211, 197, 414, 438,
	218, 394, 0, 0, 474, 199, 436, 411, 321, 289,
	290, 198, 0, 375, 242, 264, 232, 341, 433, 434,
	230, 475, 208, 455, 201, 0, 454, 334, 429, 437,
	322, 312, 200, 435, 320, 311, 295, 253, 275, 369,
	305, 370, 276, 330, 329, 331, 194, 447, 0, 195,
	0, 408, 448, 476, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 345, 368, 366, 372,
	0, 424, 441, 451, 458, 464, 465, 467, 468, 469,
	470, 471, 333, 278, 404, 294, 303, 0, 0, 351,
	384, 219, 445, 405, 614, 606, 592, 594, 615, 616,
	589, 590, 593, 617, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 609, 579, 578, 0, 585, 586, 0,
	595, 596, 598, 599, 600, 601, 618, 619, 620, 0,
	0, 0, 0, 621, 622, 0, 577, 187, 202, 299,
	0, 373, 261, 473, 453, 449, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 398, 399, 400, 401,
	409, 413, 431, 432, 444, 457, 462, 270, 439, 463,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 452,
	410, 207, 380, 262, 196, 225, 210, 233, 248, 251,
	288, 319, 326, 355, 359, 267, 245, 223, 377, 220,
	395, 416, 417, 418, 420, 323, 240, 358, 421, 0,
	306, 422, 423, 280, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 576, 0, 0, 0, 244,
	581, 0, 0, 0, 297, 241, 0, 0, 356, 0,
	193, 0, 397, 228, 307, 304, 428, 255, 247, 243,
	227, 281, 314, 354, 415, 348, 588, 301, 0, 0,
	406, 327, 0, 0, 0, 0, 0, 583, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	339, 407, 259, 0, 87, 0, 1217, 184, 185, 186,
	628, 635, 636, 637, 638, 639, 629, 631, 0, 0,
	217, 630, 224, 597, 633, 640, 641, 0, 239, 285,
	246, 238, 425, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 559, 573,
	0, 587, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	570, 571, 0, 0, 0, 0, 608, 0, 572, 0,
	0, 580, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 328, 231, 0, 607, 0,
	0, 459, 0, 0, 605, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 338, 379, 385, 0,
	0, 0, 229, 0, 383, 352, 443, 213, 257, 376,
	357, 381, 364, 260, 0, 0, 382, 302, 430, 371,
	440, 460, 461, 237, 332, 450, 419, 456, 472, 206,
	234, 346, 412, 446, 403, 325, 426, 427, 292, 402,
	266, 191, 300, 466, 204, 391, 221, 211, 197, 414,
	438, 218, 394, 0, 0, 474, 199, 436, 411, 321,
	289, 290, 198, 0, 375, 242, 264, 232, 341, 433,
	434, 230, 475, 208, 455, 201, 0, 454, 334, 429,
	437, 322, 312, 200, 435, 320, 311, 295, 253, 275,
	369, 305, 370, 276, 330, 329, 331, 194, 447, 0,
	195, 0, 408, 448, 476, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 345, 368, 366,
	372, 0, 424, 441, 451, 458, 464, 465, 467, 468,
	469, 470, 471, 333, 278, 404, 294, 303, 0, 0,
	351, 384, 219, 445, 405, 614, 606, 592, 594, 615,
	616, 589, 590, 593, 617, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 609, 579, 578, 0, 585, 586,
	0, 595, 596, 598, 599, 600, 601, 618, 619, 620,
	0, 0, 0, 0, 621, 622, 0, 577, 187, 202,
	299, 0, 373, 261, 473, 453, 449, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 398, 399, 400,
	401, 409, 413, 431, 432, 444, 457, 462, 270, 439,
	463, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	452, 410, 207, 380, 262, 196, 225, 210, 233, 248,
	251, 288, 319, 326, 355, 359, 267, 245, 223, 377,
	220, 395, 416, 417, 418, 420, 323, 240, 358, 421,
	0, 306, 422, 423, 280, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 576, 0, 0, 0,
	244, 581, 0, 0, 0, 297, 241, 0, 0, 356,
	0, 193, 0, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 588, 301, 0,
	0, 406, 327, 0, 0, 0, 0, 0, 583, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 339, 407, 259, 0, 87, 0, 0, 184, 185,
	186, 628, 635, 636, 637, 638, 639, 629, 631, 0,
	0, 217, 630, 224, 597, 633, 640, 641, 0, 239,
	285, 246, 238, 425, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 559,
	573, 0, 587, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 571, 722, 0, 0, 0, 608, 0, 572,
	0, 0, 580, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 328, 231, 0, 607,
	0, 0, 459, 0, 0, 605, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 338, 379, 385,
	0, 0, 0, 229, 0, 383, 352, 443, 213, 257,
	376, 357, 381, 364, 260, 0, 0, 382, 302, 430,
	371, 440, 460, 461, 237, 332, 450, 419, 456, 472,
	206, 234, 346, 412, 446, 403, 325, 426, 427, 292,
	402, 266, 191, 300, 466, 204, 391, 221, 211, 197,
	414, 438, 218, 394, 0, 0, 474, 199, 436, 411,
	321, 289, 290, 198, 0, 375, 242, 264, 232, 341,
	433, 434, 230, 475, 208, 455, 201, 0, 454, 334,
	429, 437, 322, 312, 200, 435, 320, 311, 295, 253,
	275, 369, 305, 370, 276, 330, 329, 331, 194, 447,
	0, 195, 0, 408, 448, 476, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 345, 368,
	366, 372, 0, 424, 441, 451, 458, 464, 465, 467,
	468, 469, 470, 471, 333, 278, 404, 294, 303, 0,
	0, 351, 384, 219, 445, 405, 614, 606, 592, 594,
	615, 616, 589, 590, 593, 617, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 609, 579, 578, 0, 585,
	586, 0, 595, 596, 598, 599, 600, 601, 618, 619,
	620, 0, 0, 0, 0, 621, 622, 0, 577, 187,
	202, 299, 0, 373, 261, 473, 453, 449, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 315,
	316, 317, 318, 335, 336, 337, 340, 343, 344, 347,
	349, 350, 353, 360, 361, 362, 363, 365, 367, 374,
	378, 386, 387, 388, 389, 390, 392, 393, 398, 399,
	400, 401, 409, 413, 431, 432, 444, 457, 462, 270,
	439, 463, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 452, 410, 207, 380, 262, 196, 225, 210, 233,
	248, 251, 288, 319, 326, 355, 359, 267, 245, 223,
	377, 220, 395, 416, 417, 418, 420, 323, 240, 358,
	421, 0, 306, 422, 423, 280, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 576, 0, 0,
	0, 244, 581, 0, 0, 0, 297, 241, 0, 0,
	356, 0, 193, 0, 397, 228, 307, 304, 428, 255,
	247, 243, 227, 281, 314, 354, 415, 348, 588, 301,
	0, 0, 406, 327, 0, 0, 0, 0, 0, 583,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 339, 407, 259, 0, 87, 0, 0, 184,
	185, 186, 628, 635, 636, 637, 638, 639, 629, 631,
	0, 0, 217, 630, 224, 597, 633, 640, 641, 0,
	239, 285, 246, 238, 425, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	559, 573, 0, 587, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 570, 571, 0, 0, 0, 0, 608, 0,
	572, 0, 0, 580, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 328, 231, 0,
	607, 0, 0, 459, 0, 0, 605, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 338, 379,
	385, 0, 0, 0, 229, 0, 383, 352, 443, 213,
	257, 376, 357, 381, 364, 260, 0, 0, 382, 302,
	430, 371, 440, 460, 461, 237, 332, 450, 419, 456,
	472, 206, 234, 346, 412, 446, 403, 325, 426, 427,
	292, 402, 266, 191, 300, 466, 204, 391, 221, 211,
	197, 414, 438, 218, 394, 0, 0, 474, 199, 436,
	411, 321, 289, 290, 198, 0, 375, 242, 264, 232,
	341, 433, 434, 230, 475, 208, 455, 201, 0, 454,
	334, 429, 437, 322, 312, 200, 435, 320, 311, 295,
	253, 275, 369, 305, 370, 276, 330, 329, 331, 194,
	447, 0, 195, 0, 408, 448, 476, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 345,
	368, 366, 372, 0, 424, 441, 451, 458, 464, 465,
	467, 468, 469, 470, 471, 333, 278, 404, 294, 303,
	0, 0, 351, 384, 219, 445, 405, 614, 606, 592,
	594, 615, 616, 589, 590, 593, 617, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 609, 579, 578, 0,
	585, 586, 0, 595, 596, 598, 599, 600, 601, 618,
	619, 620, 0, 0, 0, 0, 621, 622, 0, 577,
	187, 202, 299, 0, 373, 261, 473, 453, 449, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 398,
	399, 400, 401, 409, 413, 431, 432, 444, 457, 462,
	270, 439, 463, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 452, 410, 207, 380, 262, 196, 225, 210,
	233, 248, 251, 288, 319, 326, 355, 359, 267, 245,
	223, 377, 220, 395, 416, 417, 418, 420, 323, 240,
	358, 421, 0, 306, 422, 423, 280, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 576, 0,
	0, 0, 244, 581, 0, 0, 0, 297, 241, 0,
	0, 356, 0, 193, 0, 397, 228, 307, 304, 428,
	255, 247, 243, 227, 281, 314, 354, 415, 348, 588,
	301, 0, 0, 406, 327, 0, 0, 0, 0, 0,
	583, 584, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 339, 407, 259, 0, 87, 0, 0,
	184, 185, 186, 628, 635, 636, 637, 638, 639, 629,
	631, 0, 0, 217, 630, 224, 597, 633, 640, 641,
	0, 239, 285, 246, 238, 425, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 573, 0, 587, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 571, 0, 0, 0, 0, 608,
	0, 572, 0, 0, 580, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 328, 231,
	0, 607, 0, 0, 459, 0, 0, 605, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 443,
	213, 257, 376, 357, 381, 364, 260, 0, 0, 382,
	302, 430, 371, 440, 460, 461, 237, 332, 450, 419,
	456, 472, 206, 234, 346, 412, 446, 403, 325, 426,
	427, 292, 402, 266, 191, 300, 466, 204, 391, 221,
	211, 197, 414, 438, 218, 394, 0, 0, 474, 199,
	436, 411, 321, 289, 290, 198, 0, 375, 242, 264,
	232, 341, 433, 434, 230, 475, 208, 455, 201, 0,
	454, 334, 429, 437, 322, 312, 200, 435, 320, 311,
	295, 253, 275, 369, 305, 370, 276, 330, 329, 331,
	194, 447, 0, 195, 0, 408, 448, 476, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	345, 368, 366, 372, 0, 424, 441, 451, 458, 464,
	465, 467, 468, 469, 470, 471, 333, 278, 404, 294,
	303, 0, 0, 351, 384, 219, 445, 405, 614, 606,
	592, 594, 615, 616, 589, 590, 593, 617, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 609, 579, 578,
	0, 585, 586, 0, 595, 596, 598, 599, 600, 601,
	618, 619, 620, 0, 0, 0, 0, 621, 622, 0,
	577, 187, 202, 299, 0, 373, 261, 473, 453, 449,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	398, 399, 400, 401, 409, 413, 431, 432, 444, 457,
	462, 270, 439, 463, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 452, 410, 207, 380, 262, 196, 225,
	210, 233, 248, 251, 288, 319, 326, 355, 359, 267,
	245, 223, 377, 220, 395, 416, 417, 418, 420, 323,
	240, 358, 421, 0, 306, 422, 423, 280, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 356, 0, 193, 0, 397, 228, 307, 304,
	428, 255, 247, 243, 227, 281, 314, 354, 415, 348,
	0, 301, 0, 0, 406, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 339, 407, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 425, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 328,
	231, 0, 0, 0, 934, 459, 0, 0, 0, 0,
	0, 931, 932, 296, 895, 293, 188, 205, 925, 929,
	338, 379, 385, 0, 0, 0, 229, 0, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 0, 0,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	0, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 0, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 0, 0, 351, 384, 219, 445, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 313, 396,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 202, 299, 0, 373, 261, 473, 453,
	449, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 421, 0, 306, 422, 423, 280, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 1237,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 356, 0, 193, 0, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 0, 301, 0, 0, 406, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 339, 407, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1239, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 425, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 1099,
	0, 1100, 1101, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	328, 231, 0, 0, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 443, 213, 257, 376, 357, 381, 364, 260, 0,
	0, 382, 302, 430, 371, 440, 460, 461, 237, 332,
	450, 419, 456, 472, 206, 234, 346, 412, 446, 403,
	325, 426, 427, 292, 402, 266, 191, 300, 466, 204,
	391, 221, 211, 197, 414, 438, 218, 394, 0, 0,
	474, 199, 436, 411, 321, 289, 290, 198, 0, 375,
	242, 264, 232, 341, 433, 434, 230, 475, 208, 455,
	201, 0, 454, 334, 429, 437, 322, 312, 200, 435,
	320, 311, 295, 253, 275, 369, 305, 370, 276, 330,
	329, 331, 194, 447, 0, 195, 0, 408, 448, 476,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 345, 368, 366, 372, 0, 424, 441, 451,
	458, 464, 465, 467, 468, 469, 470, 471, 333, 278,
	404, 294, 303, 0, 0, 351, 384, 219, 445, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 313,
	396, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 202, 299, 0, 373, 261, 473,
	453, 449, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 315, 316, 317, 318, 335, 336, 337,
	340, 343, 344, 347, 349, 350, 353, 360, 361, 362,
	363, 365, 367, 374, 378, 386, 387, 388, 389, 390,
	392, 393, 398, 399, 400, 401, 409, 413, 431, 432,
	444, 457, 462, 270, 439, 463, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 452, 410, 207, 380, 262,
	196, 225, 210, 233, 248, 251, 288, 319, 326, 355,
	359, 267, 245, 223, 377, 220, 395, 416, 417, 418,
	420, 323, 240, 358, 421, 0, 306, 422, 423, 280,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 356, 0, 193, 0, 397, 228,
	307, 304, 428, 255, 247, 243, 227, 281, 314, 354,
	415, 348, 0, 301, 0, 0, 406, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 339, 407, 259, 0,
	0, 0, 0, 184, 185, 186, 1179, 1182, 0, 0,
	0, 0, 1178, 1181, 0, 0, 217, 1177, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 425, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 328, 231, 0, 0, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 443, 213, 257, 376, 357, 381, 364, 260,
	0, 0, 382, 302, 430, 371, 440, 460, 461, 237,
	332, 450, 419, 456, 472, 206, 234, 346, 412, 446,
	403, 325, 426, 427, 292, 402, 266, 191, 300, 466,
	204, 391, 221, 211, 197, 414, 438, 218, 394, 0,
	0, 474, 199, 436, 411, 321, 289, 290, 198, 0,
	375, 242, 264, 232, 341, 433, 434, 230, 475, 208,
	455, 201, 0, 454, 334, 429, 437, 322, 312, 200,
	435, 320, 311, 295, 253, 275, 369, 305, 370, 276,
	330, 329, 331, 194, 447, 0, 195, 0, 408, 448,
	476, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 345, 368, 366, 372, 0, 424, 441,
	451, 458, 464, 465, 467, 468, 469, 470, 471, 333,
	278, 404, 294, 303, 0, 0, 351, 384, 219, 445,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	313, 396, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 202, 299, 0, 373, 261,
	473, 453, 449, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 315, 316, 317, 318, 335, 336,
	337, 340, 343, 344, 347, 349, 350, 353, 360, 361,
	362, 363, 365, 367, 374, 378, 386, 387, 388, 389,
	390, 392, 393, 398, 399, 400, 401, 409, 413, 431,
	432, 444, 457, 462, 270, 439, 463, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 452, 410, 207, 380,
	262, 196, 225, 210, 233, 248, 251, 288, 319, 326,
	355, 359, 267, 245, 223, 377, 220, 395, 416, 417,
	418, 420, 323, 240, 358, 78, 421, 306, 422, 423,
	280, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 356, 0, 193, 0,
	397, 228, 307, 304, 428, 255, 247, 243, 227, 281,
	314, 354, 415, 348, 0, 301, 0, 0, 406, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 339, 407,
	259, 0, 87, 0, 1217, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	425, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 328, 231, 0, 0, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 338, 379, 385, 0, 0, 0,
	229, 0, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 0, 0, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 0, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 0,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 0, 0, 351, 384,
	219, 445, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 313, 396, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 202, 299, 86,
	373, 261, 473, 453, 449, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 78, 421, 306,
	422, 423, 280, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 356, 0,
	193, 0, 397, 228, 307, 304, 428, 255, 247, 243,
	227, 281, 314, 354, 415, 348, 0, 301, 0, 0,
	406, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	339, 407, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 425, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 328, 231, 0, 0, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 338, 379, 385, 0,
	0, 0, 229, 0, 383, 352, 443, 213, 257, 376,
	357, 381, 364, 260, 0, 0, 382, 302, 430, 371,
	440, 460, 461, 237, 332, 450, 419, 456, 472, 206,
	234, 346, 412, 446, 403, 325, 426, 427, 292, 402,
	266, 191, 300, 466, 204, 391, 221, 211, 197, 414,
	438, 218, 394, 0, 0, 474, 199, 436, 411, 321,
	289, 290, 198, 0, 375, 242, 264, 232, 341, 433,
	434, 230, 475, 208, 455, 201, 0, 454, 334, 429,
	437, 322, 312, 200, 435, 320, 311, 295, 253, 275,
	369, 305, 370, 276, 330, 329, 331, 194, 447, 0,
	195, 0, 408, 448, 476, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 345, 368, 366,
	372, 0, 424, 441, 451, 458, 464, 465, 467, 468,
	469, 470, 471, 333, 278, 404, 294, 303, 0, 0,
	351, 384, 219, 445, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 313, 396, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 202,
	299, 86, 373, 261, 473, 453, 449, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 398, 399, 400,
	401, 409, 413, 431, 432, 444, 457, 462, 270, 439,
	463, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	452, 410, 207, 380, 262, 196, 225, 210, 233, 248,
	251, 288, 319, 326, 355, 359, 267, 245, 223, 377,
	220, 395, 416, 417, 418, 420, 323, 240, 358, 421,
	0, 306, 422, 423, 280, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 1624, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 356,
	0, 193, 0, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 0, 301, 0,
	0, 406, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 339, 407, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 425, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 328, 231, 0, 0,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 338, 379, 385,
	0, 0, 0, 229, 0, 383, 352, 443, 213, 257,
	376, 357, 381, 364, 260, 0, 1622, 382, 302, 430,
	371, 440, 460, 461, 237, 332, 450, 419, 456, 472,
	206, 234, 346, 412, 446, 403, 325, 426, 427, 292,
	402, 266, 191, 300, 466, 204, 391, 221, 211, 197,
	414, 438, 218, 394, 0, 0, 474, 199, 436, 411,
	321, 289, 290, 198, 0, 375, 242, 264, 232, 341,
	433, 434, 230, 475, 208, 455, 201, 0, 454, 334,
	429, 437, 322, 312, 200, 435, 320, 311, 295, 253,
	275, 369, 305, 370, 276, 330, 329, 331, 194, 447,
	0, 195, 0, 408, 448, 476, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 345, 368,
	366, 372, 0, 424, 441, 451, 458, 464, 465, 467,
	468, 469, 470, 471, 333, 278, 404, 294, 303, 0,
	0, 351, 384, 219, 445, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 313, 396, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	202, 299, 0, 373, 261, 473, 453, 449, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 315,
	316, 317, 318, 335, 336, 337, 340, 343, 344, 347,
	349, 350, 353, 360, 361, 362, 363, 365, 367, 374,
	378, 386, 387, 388, 389, 390, 392, 393, 398, 399,
	400, 401, 409, 413, 431, 432, 444, 457, 462, 270,
	439, 463, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 452, 410, 207, 380, 262, 196, 225, 210, 233,
	248, 251, 288, 319, 326, 355, 359, 267, 245, 223,
	377, 220, 395, 416, 417, 418, 420, 323, 240, 358,
	421, 0, 306, 422, 423, 280, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	356, 0, 193, 0, 397, 228, 307, 304, 428, 255,
	247, 243, 227, 281, 314, 354, 415, 348, 0, 301,
	0, 0, 406, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 339, 407, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 425, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 889, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 328, 231, 0,
	0, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 296, 895, 293, 188, 205, 893, 0, 338, 379,
	385, 0, 0, 0, 229, 0, 383, 352, 443, 213,
	257, 376, 357, 381, 364, 260, 0, 0, 382, 302,
	430, 371, 440, 460, 461, 237, 332, 450, 419, 456,
	472, 206, 234, 346, 412, 446, 403, 325, 426, 427,
	292, 402, 266, 191, 300, 466, 204, 391, 221, 211,
	197, 414, 438, 218, 394, 0, 0, 474, 199, 436,
	411, 321, 289, 290, 198, 0, 375, 242, 264, 232,
	341, 433, 434, 230, 475, 208, 455, 201, 0, 454,
	334, 429, 437, 322, 312, 200, 435, 320, 311, 295,
	253, 275, 369, 305, 370, 276, 330, 329, 331, 194,
	447, 0, 195, 0, 408, 448, 476, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 345,
	368, 366, 372, 0, 424, 441, 451, 458, 464, 465,
	467, 468, 469, 470, 471, 333, 278, 404, 294, 303,
	0, 0, 351, 384, 219, 445, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 313, 396, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 202, 299, 0, 373, 261, 473, 453, 449, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 398,
	399, 400, 401, 409, 413, 431, 432, 444, 457, 462,
	270, 439, 463, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 452, 410, 207, 380, 262, 196, 225, 210,
	233, 248, 251, 288, 319, 326, 355, 359, 267, 245,
	223, 377, 220, 395, 416, 417, 418, 420, 323, 240,
	358, 421, 0, 306, 422, 423, 280, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 356, 0, 193, 0, 397, 228, 307, 304, 428,
	255, 247, 243, 227, 281, 314, 354, 415, 348, 0,
	301, 0, 0, 406, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 339, 407, 259, 0, 0, 0, 1217,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 425, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 328, 231,
	0, 0, 0, 0, 459, 0, 0, 0, 2493, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 443,
	213, 257, 376, 357, 381, 364, 260, 0, 0, 382,
	302, 430, 371, 440, 460, 461, 237, 332, 450, 419,
	456, 472, 206, 234, 346, 412, 446, 403, 325, 426,
	427, 292, 402, 266, 191, 300, 466, 204, 391, 221,
	211, 197, 414, 438, 218, 394, 0, 0, 474, 199,
	436, 411, 321, 289, 290, 198, 0, 375, 242, 264,
	232, 341, 433, 434, 230, 475, 208, 455, 201, 0,
	454, 334, 429, 437, 322, 312, 200, 435, 320, 311,
	295, 253, 275, 369, 305, 370, 276, 330, 329, 331,
	194, 447, 0, 195, 0, 408, 448, 476, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	345, 368, 366, 372, 0, 424, 441, 451, 458, 464,
	465, 467, 468, 469, 470, 471, 333, 278, 404, 294,
	303, 0, 0, 351, 384, 219, 445, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 313, 396, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 202, 299, 0, 373, 261, 473, 453, 449,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	398, 399, 400, 401, 409, 413, 431, 432, 444, 457,
	462, 270, 439, 463, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 452, 410, 207, 380, 262, 196, 225,
	210, 233, 248, 251, 288, 319, 326, 355, 359, 267,
	245, 223, 377, 220, 395, 416, 417, 418, 420, 323,
	240, 358, 421, 0, 306, 422, 423, 280, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 1624, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 356, 0, 193, 0, 397, 228, 307, 304,
	428, 255, 247, 243, 227, 281, 314, 354, 415, 348,
	0, 301, 0, 0, 406, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 339, 407, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 425, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 328,
	231, 0, 0, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	338, 379, 385, 0, 0, 0, 229, 0, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 0, 0,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	0, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 0, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 0, 0, 351, 384, 219, 445, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 313, 396,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 202, 299, 0, 373, 261, 473, 453,
	449, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 421, 0, 306, 422, 423, 280, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 356, 0, 193, 0, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 0, 301, 0, 0, 406, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 339, 407, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1913, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 425, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1914, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	328, 231, 0, 0, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 443, 213, 257, 376, 357, 381, 364, 260, 0,
	0, 382, 302, 430, 371, 440, 460, 461, 237, 332,
	450, 419, 456, 472, 206, 234, 346, 412, 446, 403,
	325, 426, 427, 292, 402, 266, 191, 300, 466, 204,
	391, 221, 211, 197, 414, 438, 218, 394, 0, 0,
	474, 199, 436, 411, 321, 289, 290, 198, 0, 375,
	242, 264, 232, 341, 433, 434, 230, 475, 208, 455,
	201, 0, 454, 334, 429, 437, 322, 312, 200, 435,
	320, 311, 295, 253, 275, 369, 305, 370, 276, 330,
	329, 331, 194, 447, 0, 195, 0, 408, 448, 476,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 345, 368, 366, 372, 0, 424, 441, 451,
	458, 464, 465, 467, 468, 469, 470, 471, 333, 278,
	404, 294, 303, 0, 0, 351, 384, 219, 445, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 313,
	396, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 202, 299, 0, 373, 261, 473,
	453, 449, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 315, 316, 317, 318, 335, 336, 337,
	340, 343, 344, 347, 349, 350, 353, 360, 361, 362,
	363, 365, 367, 374, 378, 386, 387, 388, 389, 390,
	392, 393, 398, 399, 400, 401, 409, 413, 431, 432,
	444, 457, 462, 270, 439, 463, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 452, 410, 207, 380, 262,
	196, 225, 210, 233, 248, 251, 288, 319, 326, 355,
	359, 267, 245, 223, 377, 220, 395, 416, 417, 418,
	420, 323, 240, 358, 421, 0, 306, 422, 423, 280,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 356, 0, 193, 0, 397, 228,
	307, 304, 428, 255, 247, 243, 227, 281, 314, 354,
	415, 348, 0, 301, 0, 0, 406, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 339, 407, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 1898,
	0, 0, 0, 1899, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 425, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 328, 231, 0, 0, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 443, 213, 257, 376, 357, 381, 364, 260,
	0, 0, 382, 302, 430, 371, 440, 460, 461, 237,
	332, 450, 419, 456, 472, 206, 234, 346, 412, 446,
	403, 325, 426, 427, 292, 402, 266, 191, 300, 466,
	204, 391, 221, 211, 197, 414, 438, 218, 394, 0,
	0, 474, 199, 436, 411, 321, 289, 290, 198, 0,
	375, 242, 264, 232, 341, 433, 434, 230, 475, 208,
	455, 201, 0, 454, 334, 429, 437, 322, 312, 200,
	435, 320, 311, 295, 253, 275, 369, 305, 370, 276,
	330, 329, 331, 194, 447, 0, 195, 0, 408, 448,
	476, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 345, 368, 366, 372, 0, 424, 441,
	451, 458, 464, 465, 467, 468, 469, 470, 471, 333,
	278, 404, 294, 303, 0, 0, 351, 384, 219, 445,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	313, 396, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 202, 299, 0, 373, 261,
	473, 453, 449, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 315, 316, 317, 318, 335, 336,
	337, 340, 343, 344, 347, 349, 350, 353, 360, 361,
	362, 363, 365, 367, 374, 378, 386, 387, 388, 389,
	390, 392, 393, 398, 399, 400, 401, 409, 413, 431,
	432, 444, 457, 462, 270, 439, 463, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 452, 410, 207, 380,
	262, 196, 225, 210, 233, 248, 251, 288, 319, 326,
	355, 359, 267, 245, 223, 377, 220, 395, 416, 417,
	418, 420, 323, 240, 358, 421, 0, 306, 422, 423,
	280, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 1260, 0, 0,
	0, 297, 241, 0, 0, 356, 0, 193, 0, 397,
	228, 307, 304, 428, 255, 247, 243, 227, 281, 314,
	354, 415, 348, 0, 301, 0, 0, 406, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 339, 407, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1259, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 425,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 328, 231, 0, 0, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 338, 379, 385, 0, 0, 0, 229,
	0, 383, 352, 443, 213, 257, 376, 357, 381, 364,
	260, 0, 0, 382, 302, 430, 371, 440, 460, 461,
	237, 332, 450, 419, 456, 472, 206, 234, 346, 412,
	446, 403, 325, 426, 427, 292, 402, 266, 191, 300,
	466, 204, 391, 221, 211, 197, 414, 438, 218, 394,
	0, 0, 474, 199, 436, 411, 321, 289, 290, 198,
	0, 375, 242, 264, 232, 341, 433, 434, 230, 475,
	208, 455, 201, 0, 454, 334, 429, 437, 322, 312,
	200, 435, 320, 311, 295, 253, 275, 369, 305, 370,
	276, 330, 329, 331, 194, 447, 0, 195, 0, 408,
	448, 476, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 345, 368, 366, 372, 0, 424,
	441, 451, 458, 464, 465, 467, 468, 469, 470, 471,
	333, 278, 404, 294, 303, 0, 0, 351, 384, 219,
	445, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 313, 396, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 202, 299, 0, 373,
	261, 473, 453, 449, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 315, 316, 317, 318, 335,
	336, 337, 340, 343, 344, 347, 349, 350, 353, 360,
	361, 362, 363, 365, 367, 374, 378, 386, 387, 388,
	389, 390, 392, 393, 398, 399, 400, 401, 409, 413,
	431, 432, 444, 457, 462, 270, 439, 463, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 452, 410, 207,
	380, 262, 196, 225, 210, 233, 248, 251, 288, 319,
	326, 355, 359, 267, 245, 223, 377, 220, 395, 416,
	417, 418, 420, 323, 240, 358, 421, 0, 306, 422,
	423, 280, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 356, 0, 193, 0,
	397, 228, 307, 304, 428, 255, 247, 243, 227, 281,
	314, 354, 415, 348, 0, 301, 0, 0, 406, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 339, 407,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	425, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 328, 231, 0, 0, 0, 0, 459,
	0, 0, 0, 2561, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 338, 379, 385, 0, 0, 0,
	229, 0, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 0, 0, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 0, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 0,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 0, 0, 351, 384,
	219, 445, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 313, 396, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 202, 299, 0,
	373, 261, 473, 453, 449, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 421, 0, 306,
	422, 423, 280, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 356, 0, 193,
	0, 397, 228, 307, 304, 428, 255, 247, 243, 227,
	281, 314, 354, 415, 348, 0, 301, 0, 0, 406,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 339,
	407, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 425, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 328, 231, 0, 0, 0, 0,
	459, 0, 0, 0, 2493, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 338, 379, 385, 0, 0,
	0, 229, 0, 383, 352, 443, 213, 257, 376, 357,
	381, 364, 260, 0, 0, 382, 302, 430, 371, 440,
	460, 461, 237, 332, 450, 419, 456, 472, 206, 234,
	346, 412, 446, 403, 325, 426, 427, 292, 402, 266,
	191, 300, 466, 204, 391, 221, 211, 197, 414, 438,
	218, 394, 0, 0, 474, 199, 436, 411, 321, 289,
	290, 198, 0, 375, 242, 264, 232, 341, 433, 434,
	230, 475, 208, 455, 201, 0, 454, 334, 429, 437,
	322, 312, 200, 435, 320, 311, 295, 253, 275, 369,
	305, 370, 276, 330, 329, 331, 194, 447, 0, 195,
	0, 408, 448, 476, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 345, 368, 366, 372,
	0, 424, 441, 451, 458, 464, 465, 467, 468, 469,
	470, 471, 333, 278, 404, 294, 303, 0, 0, 351,
	384, 219, 445, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 313, 396, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 202, 299,
	0, 373, 261, 473, 453, 449, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 398, 399, 400, 401,
	409, 413, 431, 432, 444, 457, 462, 270, 439, 463,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 452,
	410, 207, 380, 262, 196, 225, 210, 233, 248, 251,
	288, 319, 326, 355, 359, 267, 245, 223, 377, 220,
	395, 416, 417, 418, 420, 323, 240, 358, 421, 0,
	306, 422, 423, 280, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 356, 0,
	193, 0, 397, 228, 307, 304, 428, 255, 247, 243,
	227, 281, 314, 354, 415, 348, 0, 301, 0, 0,
	406, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	339, 407, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 425, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 328, 231, 0, 0, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 338, 379, 385, 0,
	0, 0, 229, 0, 383, 352, 443, 213, 257, 376,
	357, 381, 364, 260, 0, 0, 382, 302, 430, 371,
	440, 460, 461, 237, 332, 450, 419, 456, 472, 206,
	234, 346, 412, 446, 403, 325, 426, 427, 292, 402,
	266, 191, 300, 466, 204, 391, 221, 211, 197, 414,
	438, 218, 394, 0, 0, 474, 199, 436, 411, 321,
	289, 290, 198, 0, 375, 242, 264, 232, 341, 433,
	434, 230, 475, 208, 455, 201, 0, 454, 334, 429,
	437, 322, 312, 200, 435, 320, 311, 295, 253, 275,
	369, 305, 370, 276, 330, 329, 331, 194, 447, 0,
	195, 0, 408, 448, 476, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 345, 368, 366,
	372, 0, 424, 441, 451, 458, 464, 465, 467, 468,
	469, 470, 471, 333, 278, 404, 294, 303, 0, 0,
	351, 384, 219, 445, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 313, 396, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 202,
	299, 0, 373, 261, 473, 453, 449, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 398, 399, 400,
	401, 409, 413, 431, 432, 444, 457, 462, 270, 439,
	463, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	452, 410, 207, 380, 262, 196, 225, 210, 233, 248,
	251, 288, 319, 326, 355, 359, 267, 245, 223, 377,
	220, 395, 416, 417, 418, 420, 323, 240, 358, 421,
	0, 306, 422, 423, 280, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 356,
	0, 193, 0, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 0, 301, 0,
	0, 406, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 339, 407, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 425, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 328, 231, 0, 0,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 338, 379, 385,
	0, 0, 0, 229, 0, 383, 352, 443, 213, 257,
	376, 357, 381, 364, 260, 0, 0, 382, 302, 430,
	371, 440, 460, 461, 237, 332, 450, 419, 456, 472,
	206, 234, 346, 412, 446, 403, 325, 426, 427, 292,
	402, 266, 191, 300, 466, 204, 391, 221, 211, 197,
	414, 438, 218, 394, 0, 0, 474, 199, 436, 411,
	321, 289, 290, 198, 0, 375, 242, 264, 232, 341,
	433, 434, 230, 475, 208, 455, 201, 0, 454, 334,
	429, 437, 322, 312, 200, 435, 320, 311, 295, 253,
	275, 369, 305, 370, 276, 330, 329, 331, 194, 447,
	0, 195, 0, 408, 448, 476, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 345, 368,
	366, 372, 0, 424, 441, 451, 458, 464, 465, 467,
	468, 469, 470, 471, 333, 278, 404, 294, 303, 0,
	0, 351, 384, 219, 445, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 313, 396, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	202, 299, 0, 373, 261, 473, 453, 449, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 315,
	316, 317, 318, 335, 336, 337, 340, 343, 344, 347,
	349, 350, 353, 360, 361, 362, 363, 365, 367, 374,
	378, 386, 387, 388, 389, 390, 392, 393, 398, 399,
	400, 401, 409, 413, 431, 432, 444, 457, 462, 270,
	439, 463, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 452, 410, 207, 380, 262, 196, 225, 210, 233,
	248, 251, 288, 319, 326, 355, 359, 267, 245, 223,
	377, 220, 395, 416, 417, 418, 420, 323, 240, 358,
	0, 421, 306, 422, 423, 280, 1671, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 356, 0, 193, 0, 397, 228, 307, 304, 428,
	255, 247, 243, 227, 281, 314, 354, 415, 348, 0,
	301, 0, 0, 406, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 339, 407, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 425, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 328, 231,
	0, 0, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 443,
	213, 257, 376, 357, 381, 364, 260, 0, 0, 382,
	302, 430, 371, 440, 460, 461, 237, 332, 450, 419,
	456, 472, 206, 234, 346, 412, 446, 403, 325, 426,
	427, 292, 402, 266, 191, 300, 466, 204, 391, 221,
	211, 197, 414, 438, 218, 394, 0, 0, 474, 199,
	436, 411, 321, 289, 290, 198, 0, 375, 242, 264,
	232, 341, 433, 434, 230, 475, 208, 455, 201, 0,
	454, 334, 429, 437, 322, 312, 200, 435, 320, 311,
	295, 253, 275, 369, 305, 370, 276, 330, 329, 331,
	194, 447, 0, 195, 0, 408, 448, 476, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	345, 368, 366, 372, 0, 424, 441, 451, 458, 464,
	465, 467, 468, 469, 470, 471, 333, 278, 404, 294,
	303, 0, 0, 351, 384, 219, 445, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 313, 396, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 202, 299, 0, 373, 261, 473, 453, 449,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	398, 399, 400, 401, 409, 413, 431, 432, 444, 457,
	462, 270, 439, 463, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 452, 410, 207, 380, 262, 196, 225,
	210, 233, 248, 251, 288, 319, 326, 355, 359, 267,
	245, 223, 377, 220, 395, 416, 417, 418, 420, 323,
	240, 358, 421, 0, 306, 422, 423, 280, 0, 0,
	0, 0, 0, 0, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 356, 0, 193, 0, 397, 228, 307, 304,
	428, 255, 247, 243, 227, 281, 314, 354, 415, 348,
	0, 301, 0, 0, 406, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 339, 407, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1239, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 425, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 328,
	231, 0, 0, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	338, 379, 385, 0, 0, 0, 229, 0, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 0, 0,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	0, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 0, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 0, 0, 351, 384, 219, 445, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 313, 396,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 202, 299, 0, 373, 261, 473, 453,
	449, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 421, 0, 306, 422, 423, 280, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 356, 0, 193, 0, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 0, 301, 0, 0, 406, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 339, 407, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 425, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	328, 231, 0, 0, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 443, 213, 257, 376, 357, 381, 364, 260, 0,
	0, 382, 302, 430, 371, 440, 460, 461, 237, 332,
	450, 419, 456, 472, 206, 234, 346, 412, 446, 403,
	325, 426, 427, 292, 402, 266, 191, 300, 466, 204,
	391, 221, 211, 197, 414, 438, 218, 394, 0, 0,
	474, 199, 436, 411, 321, 289, 290, 198, 0, 375,
	242, 264, 232, 341, 433, 434, 230, 475, 208, 455,
	201, 0, 454, 334, 429, 437, 322, 312, 200, 435,
	320, 311, 295, 253, 275, 369, 305, 370, 276, 330,
	329, 331, 194, 447, 0, 195, 0, 408, 448, 476,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 345, 368, 366, 372, 0, 424, 441, 451,
	458, 464, 465, 467, 468, 469, 470, 471, 333, 278,
	404, 294, 303, 0, 0, 351, 384, 219, 445, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 313,
	396, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 202, 299, 0, 373, 261, 473,
	453, 449, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 315, 316, 317, 318, 335, 336, 337,
	340, 343, 344, 347, 349, 350, 353, 360, 361, 362,
	363, 365, 367, 374, 378, 386, 387, 388, 389, 390,
	392, 393, 398, 399, 400, 401, 409, 413, 431, 432,
	444, 457, 462, 270, 439, 463, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 452, 410, 207, 380, 262,
	196, 225, 210, 233, 248, 251, 288, 319, 326, 355,
	359, 267, 245, 223, 377, 220, 395, 416, 417, 418,
	420, 323, 240, 358, 421, 0, 306, 422, 423, 280,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 356, 0, 193, 0, 397, 228,
	307, 304, 428, 255, 247, 243, 227, 281, 314, 354,
	415, 348, 0, 301, 0, 0, 406, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 339, 407, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 425, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 328, 231, 0, 0, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 443, 213, 257, 376, 357, 381, 364, 260,
	0, 0, 382, 302, 430, 371, 440, 460, 461, 237,
	332, 450, 419, 456, 472, 206, 234, 346, 412, 446,
	403, 325, 426, 427, 292, 402, 266, 191, 300, 466,
	204, 391, 221, 211, 197, 414, 438, 218, 394, 0,
	0, 474, 199, 436, 411, 321, 289, 290, 198, 0,
	375, 242, 264, 232, 341, 433, 434, 230, 475, 208,
	455, 201, 0, 454, 334, 429, 437, 322, 312, 200,
	435, 320, 311, 295, 253, 275, 369, 305, 370, 276,
	330, 329, 331, 194, 447, 0, 195, 0, 408, 448,
	476, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 345, 368, 366, 372, 0, 424, 441,
	451, 458, 464, 465, 467, 468, 469, 470, 471, 333,
	278, 404, 294, 303, 0, 0, 351, 384, 219, 445,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	313, 396, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 202, 299, 1501, 373, 261,
	473, 453, 449, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 315, 316, 317, 318, 335, 336,
	337, 340, 343, 344, 347, 349, 350, 353, 360, 361,
	362, 363, 365, 367, 374, 378, 386, 387, 388, 389,
	390, 392, 393, 398, 399, 400, 401, 409, 413, 431,
	432, 444, 457, 462, 270, 439, 463, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 452, 410, 207, 380,
	262, 196, 225, 210, 233, 248, 251, 288, 319, 326,
	355, 359, 267, 245, 223, 377, 220, 395, 416, 417,
	418, 420, 323, 240, 358, 421, 0, 306, 422, 423,
	280, 0, 0, 0, 0, 0, 0, 342, 0, 1381,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 356, 0, 193, 0, 397,
	228, 307, 304, 428, 255, 247, 243, 227, 281, 314,
	354, 415, 348, 0, 301, 0, 0, 406, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 339, 407, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 425,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 328, 231, 0, 0, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 338, 379, 385, 0, 0, 0, 229,
	0, 383, 352, 443, 213, 257, 376, 357, 381, 364,
	260, 0, 0, 382, 302, 430, 371, 440, 460, 461,
	237, 332, 450, 419, 456, 472, 206, 234, 346, 412,
	446, 403, 325, 426, 427, 292, 402, 266, 191, 300,
	466, 204, 391, 221, 211, 197, 414, 438, 218, 394,
	0, 0, 474, 199, 436, 411, 321, 289, 290, 198,
	0, 375, 242, 264, 232, 341, 433, 434, 230, 475,
	208, 455, 201, 0, 454, 334, 429, 437, 322, 312,
	200, 435, 320, 311, 295, 253, 275, 369, 305, 370,
	276, 330, 329, 331, 194, 447, 0, 195, 0, 408,
	448, 476, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 345, 368, 366, 372, 0, 424,
	441, 451, 458, 464, 465, 467, 468, 469, 470, 471,
	333, 278, 404, 294, 303, 0, 0, 351, 384, 219,
	445, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 313, 396, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 202, 299, 0, 373,
	261, 473, 453, 449, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 315, 316, 317, 318, 335,
	336, 337, 340, 343, 344, 347, 349, 350, 353, 360,
	361, 362, 363, 365, 367, 374, 378, 386, 387, 388,
	389, 390, 392, 393, 398, 399, 400, 401, 409, 413,
	431, 432, 444, 457, 462, 270, 439, 463, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 452, 410, 207,
	380, 262, 196, 225, 210, 233, 248, 251, 288, 319,
	326, 355, 359, 267, 245, 223, 377, 220, 395, 416,
	417, 418, 420, 323, 240, 358, 421, 0, 306, 422,
	423, 280, 0, 0, 0, 0, 0, 0, 342, 0,
	1379, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 356, 0, 193, 0,
	397, 228, 307, 304, 428, 255, 247, 243, 227, 281,
	314, 354, 415, 348, 0, 301, 0, 0, 406, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 339, 407,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	425, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 328, 231, 0, 0, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 338, 379, 385, 0, 0, 0,
	229, 0, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 0, 0, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 0, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 0,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 0, 0, 351, 384,
	219, 445, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 313, 396, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 202, 299, 0,
	373, 261, 473, 453, 449, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 421, 0, 306,
	422, 423, 280, 0, 0, 0, 0, 0, 0, 342,
	0, 1377, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 356, 0, 193,
	0, 397, 228, 307, 304, 428, 255, 247, 243, 227,
	281, 314, 354, 415, 348, 0, 301, 0, 0, 406,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 339,
	407, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 425, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 328, 231, 0, 0, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 338, 379, 385, 0, 0,
	0, 229, 0, 383, 352, 443, 213, 257, 376, 357,
	381, 364, 260, 0, 0, 382, 302, 430, 371, 440,
	460, 461, 237, 332, 450, 419, 456, 472, 206, 234,
	346, 412, 446, 403, 325, 426, 427, 292, 402, 266,
	191, 300, 466, 204, 391, 221, 211, 197, 414, 438,
	218, 394, 0, 0, 474, 199, 436, 411, 321, 289,
	290, 198, 0, 375, 242, 264, 232, 341, 433, 434,
	230, 475, 208, 455, 201, 0, 454, 334, 429, 437,
	322, 312, 200, 435, 320, 311, 295, 253, 275, 369,
	305, 370, 276, 330, 329, 331, 194, 447, 0, 195,
	0, 408, 448, 476, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 345, 368, 366, 372,
	0, 424, 441, 451, 458, 464, 465, 467, 468, 469,
	470, 471, 333, 278, 404, 294, 303, 0, 0, 351,
	384, 219, 445, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 313, 396, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 202, 299,
	0, 373, 261, 473, 453, 449, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 398, 399, 400, 401,
	409, 413, 431, 432, 444, 457, 462, 270, 439, 463,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 452,
	410, 207, 380, 262, 196, 225, 210, 233, 248, 251,
	288, 319, 326, 355, 359, 267, 245, 223, 377, 220,
	395, 416, 417, 418, 420, 323, 240, 358, 421, 0,
	306, 422, 423, 280, 0, 0, 0, 0, 0, 0,
	342, 0, 1375, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 356, 0,
	193, 0, 397, 228, 307, 304, 428, 255, 247, 243,
	227, 281, 314, 354, 415, 348, 0, 301, 0, 0,
	406, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	339, 407, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 425, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 328, 231, 0, 0, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 338, 379, 385, 0,
	0, 0, 229, 0, 383, 352, 443, 213, 257, 376,
	357, 381, 364, 260, 0, 0, 382, 302, 430, 371,
	440, 460, 461, 237, 332, 450, 419, 456, 472, 206,
	234, 346, 412, 446, 403, 325, 426, 427, 292, 402,
	266, 191, 300, 466, 204, 391, 221, 211, 197, 414,
	438, 218, 394, 0, 0, 474, 199, 436, 411, 321,
	289, 290, 198, 0, 375, 242, 264, 232, 341, 433,
	434, 230, 475, 208, 455, 201, 0, 454, 334, 429,
	437, 322, 312, 200, 435, 320, 311, 295, 253, 275,
	369, 305, 370, 276, 330, 329, 331, 194, 447, 0,
	195, 0, 408, 448, 476, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 345, 368, 366,
	372, 0, 424, 441, 451, 458, 464, 465, 467, 468,
	469, 470, 471, 333, 278, 404, 294, 303, 0, 0,
	351, 384, 219, 445, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 313, 396, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 202,
	299, 0, 373, 261, 473, 453, 449, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 398, 399, 400,
	401, 409, 413, 431, 432, 444, 457, 462, 270, 439,
	463, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	452, 410, 207, 380, 262, 196, 225, 210, 233, 248,
	251, 288, 319, 326, 355, 359, 267, 245, 223, 377,
	220, 395, 416, 417, 418, 420, 323, 240, 358, 421,
	0, 306, 422, 423, 280, 0, 0, 0, 0, 0,
	0, 342, 0, 1373, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 356,
	0, 193, 0, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 0, 301, 0,
	0, 406, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 339, 407, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 425, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 328, 231, 0, 0,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 338, 379, 385,
	0, 0, 0, 229, 0, 383, 352, 443, 213, 257,
	376, 357, 381, 364, 260, 0, 0, 382, 302, 430,
	371, 440, 460, 461, 237, 332, 450, 419, 456, 472,
	206, 234, 346, 412, 446, 403, 325, 426, 427, 292,
	402, 266, 191, 300, 466, 204, 391, 221, 211, 197,
	414, 438, 218, 394, 0, 0, 474, 199, 436, 411,
	321, 289, 290, 198, 0, 375, 242, 264, 232, 341,
	433, 434, 230, 475, 208, 455, 201, 0, 454, 334,
	429, 437, 322, 312, 200, 435, 320, 311, 295, 253,
	275, 369, 305, 370, 276, 330, 329, 331, 194, 447,
	0, 195, 0, 408, 448, 476, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 345, 368,
	366, 372, 0, 424, 441, 451, 458, 464, 465, 467,
	468, 469, 470, 471, 333, 278, 404, 294, 303, 0,
	0, 351, 384, 219, 445, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 313, 396, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	202, 299, 0, 373, 261, 473, 453, 449, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 315,
	316, 317, 318, 335, 336, 337, 340, 343, 344, 347,
	349, 350, 353, 360, 361, 362, 363, 365, 367, 374,
	378, 386, 387, 388, 389, 390, 392, 393, 398, 399,
	400, 401, 409, 413, 431, 432, 444, 457, 462, 270,
	439, 463, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 452, 410, 207, 380, 262, 196, 225, 210, 233,
	248, 251, 288, 319, 326, 355, 359, 267, 245, 223,
	377, 220, 395, 416, 417, 418, 420, 323, 240, 358,
	421, 0, 306, 422, 423, 280, 0, 0, 0, 0,
	0, 0, 342, 0, 1369, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	356, 0, 193, 0, 397, 228, 307, 304, 428, 255,
	247, 243, 227, 281, 314, 354, 415, 348, 0, 301,
	0, 0, 406, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 339, 407, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 425, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 328, 231, 0,
	0, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 338, 379,
	385, 0, 0, 0, 229, 0, 383, 352, 443, 213,
	257, 376, 357, 381, 364, 260, 0, 0, 382, 302,
	430, 371, 440, 460, 461, 237, 332, 450, 419, 456,
	472, 206, 234, 346, 412, 446, 403, 325, 426, 427,
	292, 402, 266, 191, 300, 466, 204, 391, 221, 211,
	197, 414, 438, 218, 394, 0, 0, 474, 199, 436,
	411, 321, 289, 290, 198, 0, 375, 242, 264, 232,
	341, 433, 434, 230, 475, 208, 455, 201, 0, 454,
	334, 429, 437, 322, 312, 200, 435, 320, 311, 295,
	253, 275, 369, 305, 370, 276, 330, 329, 331, 194,
	447, 0, 195, 0, 408, 448, 476, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 345,
	368, 366, 372, 0, 424, 441, 451, 458, 464, 465,
	467, 468, 469, 470, 471, 333, 278, 404, 294, 303,
	0, 0, 351, 384, 219, 445, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 313, 396, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 202, 299, 0, 373, 261, 473, 453, 449, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 398,
	399, 400, 401, 409, 413, 431, 432, 444, 457, 462,
	270, 439, 463, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 452, 410, 207, 380, 262, 196, 225, 210,
	233, 248, 251, 288, 319, 326, 355, 359, 267, 245,
	223, 377, 220, 395, 416, 417, 418, 420, 323, 240,
	358, 421, 0, 306, 422, 423, 280, 0, 0, 0,
	0, 0, 0, 342, 0, 1367, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 356, 0, 193, 0, 397, 228, 307, 304, 428,
	255, 247, 243, 227, 281, 314, 354, 415, 348, 0,
	301, 0, 0, 406, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 339, 407, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 425, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 328, 231,
	0, 0, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 443,
	213, 257, 376, 357, 381, 364, 260, 0, 0, 382,
	302, 430, 371, 440, 460, 461, 237, 332, 450, 419,
	456, 472, 206, 234, 346, 412, 446, 403, 325, 426,
	427, 292, 402, 266, 191, 300, 466, 204, 391, 221,
	211, 197, 414, 438, 218, 394, 0, 0, 474, 199,
	436, 411, 321, 289, 290, 198, 0, 375, 242, 264,
	232, 341, 433, 434, 230, 475, 208, 455, 201, 0,
	454, 334, 429, 437, 322, 312, 200, 435, 320, 311,
	295, 253, 275, 369, 305, 370, 276, 330, 329, 331,
	194, 447, 0, 195, 0, 408, 448, 476, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	345, 368, 366, 372, 0, 424, 441, 451, 458, 464,
	465, 467, 468, 469, 470, 471, 333, 278, 404, 294,
	303, 0, 0, 351, 384, 219, 445, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 313, 396, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 202, 299, 0, 373, 261, 473, 453, 449,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	398, 399, 400, 401, 409, 413, 431, 432, 444, 457,
	462, 270, 439, 463, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 452, 410, 207, 380, 262, 196, 225,
	210, 233, 248, 251, 288, 319, 326, 355, 359, 267,
	245, 223, 377, 220, 395, 416, 417, 418, 420, 323,
	240, 358, 421, 0, 306, 422, 423, 280, 0, 0,
	0, 0, 0, 0, 342, 0, 1365, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 297, 241,
	0, 0, 356, 0, 193, 0, 397, 228, 307, 304,
	428, 255, 247, 243, 227, 281, 314, 354, 415, 348,
	0, 301, 0, 0, 406, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 339, 407, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 425, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 328,
	231, 0, 0, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 293, 188, 205, 0, 0,
	338, 379, 385, 0, 0, 0, 229, 0, 383, 352,
	443, 213, 257, 376, 357, 381, 364, 260, 0, 0,
	382, 302, 430, 371, 440, 460, 461, 237, 332, 450,
	419, 456, 472, 206, 234, 346, 412, 446, 403, 325,
	426, 427, 292, 402, 266, 191, 300, 466, 204, 391,
	221, 211, 197, 414, 438, 218, 394, 0, 0, 474,
	199, 436, 411, 321, 289, 290, 198, 0, 375, 242,
	264, 232, 341, 433, 434, 230, 475, 208, 455, 201,
	0, 454, 334, 429, 437, 322, 312, 200, 435, 320,
	311, 295, 253, 275, 369, 305, 370, 276, 330, 329,
	331, 194, 447, 0, 195, 0, 408, 448, 476, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	298, 345, 368, 366, 372, 0, 424, 441, 451, 458,
	464, 465, 467, 468, 469, 470, 471, 333, 278, 404,
	294, 303, 0, 0, 351, 384, 219, 445, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 492, 493, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 495, 313, 396,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 202, 299, 0, 373, 261, 473, 453,
	449, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 309, 315, 316, 317, 318, 335, 336, 337, 340,
	343, 344, 347, 349, 350, 353, 360, 361, 362, 363,
	365, 367, 374, 378, 386, 387, 388, 389, 390, 392,
	393, 398, 399, 400, 401, 409, 413, 431, 432, 444,
	457, 462, 270, 439, 463, 0, 308, 0, 0, 310,
	254, 273, 284, 0, 452, 410, 207, 380, 262, 196,
	225, 210, 233, 248, 251, 288, 319, 326, 355, 359,
	267, 245, 223, 377, 220, 395, 416, 417, 418, 420,
	323, 240, 358, 421, 0, 306, 422, 423, 280, 0,
	0, 0, 0, 0, 0, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 297,
	241, 0, 0, 356, 0, 193, 0, 397, 228, 307,
	304, 428, 255, 247, 243, 227, 281, 314, 354, 415,
	348, 0, 301, 0, 0, 406, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 339, 407, 259, 0, 1342,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 425, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	328, 231, 0, 0, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 293, 188, 205, 0,
	0, 338, 379, 385, 0, 0, 0, 229, 0, 383,
	352, 443, 213, 257, 376, 357, 381, 364, 260, 0,
	0, 382, 302, 430, 371, 440, 460, 461, 237, 332,
	450, 419, 456, 472, 206, 234, 346, 412, 446, 403,
	325, 426, 427, 292, 402, 266, 191, 300, 466, 204,
	391, 221, 211, 197, 414, 438, 218, 394, 0, 0,
	474, 199, 436, 411, 321, 289, 290, 198, 0, 375,
	242, 264, 232, 341, 433, 434, 230, 475, 208, 455,
	201, 0, 454, 334, 429, 437, 322, 312, 200, 435,
	320, 311, 295, 253, 275, 369, 305, 370, 276, 330,
	329, 331, 194, 447, 0, 195, 0, 408, 448, 476,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 298, 345, 368, 366, 372, 0, 424, 441, 451,
	458, 464, 465, 467, 468, 469, 470, 471, 333, 278,
	404, 294, 303, 0, 0, 351, 384, 219, 445, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 492, 493, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 313,
	396, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 202, 299, 0, 373, 261, 473,
	453, 449, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 309, 315, 316, 317, 318, 335, 336, 337,
	340, 343, 344, 347, 349, 350, 353, 360, 361, 362,
	363, 365, 367, 374, 378, 386, 387, 388, 389, 390,
	392, 393, 398, 399, 400, 401, 409, 413, 431, 432,
	444, 457, 462, 270, 439, 463, 0, 308, 0, 0,
	310, 254, 273, 284, 0, 452, 410, 207, 380, 262,
	196, 225, 210, 233, 248, 251, 288, 319, 326, 355,
	359, 267, 245, 223, 377, 220, 395, 416, 417, 418,
	420, 323, 240, 358, 421, 0, 306, 422, 423, 280,
	0, 0, 0, 0, 0, 0, 342, 0, 0, 0,
	0, 0, 0, 0, 1244, 244, 0, 0, 0, 0,
	297, 241, 0, 0, 356, 0, 193, 0, 397, 228,
	307, 304, 428, 255, 247, 243, 227, 281, 314, 354,
	415, 348, 0, 301, 0, 0, 406, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 339, 407, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 425, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 328, 231, 0, 0, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 293, 188, 205,
	0, 0, 338, 379, 385, 0, 0, 0, 229, 0,
	383, 352, 443, 213, 257, 376, 357, 381, 364, 260,
	0, 0, 382, 302, 430, 371, 440, 460, 461, 237,
	332, 450, 419, 456, 472, 206, 234, 346, 412, 446,
	403, 325, 426, 427, 292, 402, 266, 191, 300, 466,
	204, 391, 221, 211, 197, 414, 438, 218, 394, 0,
	0, 474, 199, 436, 411, 321, 289, 290, 198, 0,
	375, 242, 264, 232, 341, 433, 434, 230, 475, 208,
	455, 201, 0, 454, 334, 429, 437, 322, 312, 200,
	435, 320, 311, 295, 253, 275, 369, 305, 370, 276,
	330, 329, 331, 194, 447, 0, 195, 0, 408, 448,
	476, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 298, 345, 368, 366, 372, 0, 424, 441,
	451, 458, 464, 465, 467, 468, 469, 470, 471, 333,
	278, 404, 294, 303, 0, 0, 351, 384, 219, 445,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 492, 493, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	313, 396, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 202, 299, 0, 373, 261,
	473, 453, 449, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 309, 315, 316, 317, 318, 335, 336,
	337, 340, 343, 344, 347, 349, 350, 353, 360, 361,
	362, 363, 365, 367, 374, 378, 386, 387, 388, 389,
	390, 392, 393, 398, 399, 400, 401, 409, 413, 431,
	432, 444, 457, 462, 270, 439, 463, 0, 308, 0,
	0, 310, 254, 273, 284, 0, 452, 410, 207, 380,
	262, 196, 225, 210, 233, 248, 251, 288, 319, 326,
	355, 359, 267, 245, 223, 377, 220, 395, 416, 417,
	418, 420, 323, 240, 358, 421, 0, 306, 422, 423,
	280, 0, 0, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 297, 241, 0, 0, 356, 0, 193, 0, 397,
	228, 307, 304, 428, 255, 247, 243, 227, 281, 314,
	354, 415, 348, 0, 301, 0, 0, 406, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 339, 407, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1076, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 425,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 328, 231, 0, 0, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 293, 188,
	205, 0, 0, 338, 379, 385, 0, 0, 0, 229,
	0, 383, 352, 443, 213, 257, 376, 357, 381, 364,
	260, 0, 0, 382, 302, 430, 371, 440, 460, 461,
	237, 332, 450, 419, 456, 472, 206, 234, 346, 412,
	446, 403, 325, 426, 427, 292, 402, 266, 191, 300,
	466, 204, 391, 221, 211, 197, 414, 438, 218, 394,
	0, 0, 474, 199, 436, 411, 321, 289, 290, 198,
	0, 375, 242, 264, 232, 341, 433, 434, 230, 475,
	208, 455, 201, 0, 454, 334, 429, 437, 322, 312,
	200, 435, 320, 311, 295, 253, 275, 369, 305, 370,
	276, 330, 329, 331, 194, 447, 0, 195, 0, 408,
	448, 476, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 298, 345, 368, 366, 372, 0, 424,
	441, 451, 458, 464, 465, 467, 468, 469, 470, 471,
	333, 278, 404, 294, 303, 0, 0, 351, 384, 219,
	445, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 313, 396, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 202, 299, 0, 373,
	261, 473, 453, 449, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 309, 315, 316, 317, 318, 335,
	336, 337, 340, 343, 344, 347, 349, 350, 353, 360,
	361, 362, 363, 365, 367, 374, 378, 386, 387, 388,
	389, 390, 392, 393, 398, 399, 400, 401, 409, 413,
	431, 432, 444, 457, 462, 270, 439, 463, 0, 308,
	0, 0, 310, 254, 273, 284, 0, 452, 410, 207,
	380, 262, 196, 225, 210, 233, 248, 251, 288, 319,
	326, 355, 359, 267, 245, 223, 377, 220, 395, 416,
	417, 418, 420, 323, 240, 358, 421, 0, 306, 422,
	423, 280, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 297, 241, 0, 0, 356, 0, 193, 0,
	397, 228, 307, 304, 428, 255, 247, 243, 227, 281,
	314, 354, 415, 348, 0, 301, 0, 0, 406, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 339, 407,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	425, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 328, 231, 0, 0, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 293,
	188, 205, 0, 0, 338, 379, 385, 0, 0, 0,
	229, 0, 383, 352, 443, 213, 257, 376, 357, 381,
	364, 260, 0, 0, 382, 302, 430, 371, 440, 460,
	461, 237, 332, 450, 419, 456, 472, 206, 234, 346,
	412, 446, 403, 325, 426, 427, 292, 402, 266, 191,
	300, 466, 204, 391, 221, 211, 197, 414, 438, 218,
	394, 0, 0, 474, 199, 436, 411, 321, 289, 290,
	198, 0, 375, 242, 264, 232, 341, 433, 434, 230,
	475, 208, 455, 201, 0, 454, 334, 429, 437, 322,
	312, 200, 435, 320, 311, 295, 253, 275, 369, 305,
	370, 276, 330, 329, 331, 194, 447, 0, 195, 0,
	408, 448, 476, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 298, 345, 368, 366, 372, 0,
	424, 441, 451, 458, 464, 465, 467, 468, 469, 470,
	471, 333, 278, 404, 294, 303, 0, 0, 351, 384,
	219, 445, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 313, 396, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 202, 299, 0,
	373, 261, 473, 453, 449, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	0, 0, 0, 0, 0, 0, 704, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 309, 315, 316, 317, 318,
	335, 336, 337, 340, 343, 344, 347, 349, 350, 353,
	360, 361, 362, 363, 365, 367, 374, 378, 386, 387,
	388, 389, 390, 392, 393, 398, 399, 400, 401, 409,
	413, 431, 432, 444, 457, 462, 270, 439, 463, 0,
	308, 0, 0, 310, 254, 273, 284, 0, 452, 410,
	207, 380, 262, 196, 225, 210, 233, 248, 251, 288,
	319, 326, 355, 359, 267, 245, 223, 377, 220, 395,
	416, 417, 418, 420, 323, 240, 358, 421, 0, 306,
	422, 423, 280, 0, 0, 0, 0, 0, 0, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 297, 241, 0, 0, 356, 0, 193,
	0, 397, 228, 307, 304, 428, 255, 247, 243, 227,
	281, 314, 354, 415, 348, 0, 301, 0, 0, 406,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 339,
	407, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 425, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	551, 0, 268, 0, 328, 231, 0, 0, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	293, 188, 205, 0, 0, 338, 379, 385, 0, 0,
	0, 229, 0, 383, 352, 443, 213, 257, 376, 357,
	381, 364, 260, 0, 0, 382, 302, 430, 371, 440,
	460, 461, 237, 332, 450, 419, 456, 472, 206, 234,
	346, 412, 446, 403, 325, 426, 427, 292, 402, 266,
	191, 300, 466, 204, 391, 221, 211, 197, 414, 438,
	218, 394, 0, 0, 474, 199, 436, 411, 321, 289,
	290, 198, 0, 375, 242, 264, 232, 341, 433, 434,
	230, 475, 208, 455, 201, 0, 454, 334, 429, 437,
	322, 312, 200, 435, 320, 311, 295, 253, 275, 369,
	305, 370, 276, 330, 329, 331, 194, 447, 0, 195,
	0, 408, 448, 476, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 298, 345, 368, 366, 372,
	0, 424, 441, 451, 458, 464, 465, 467, 468, 469,
	470, 471, 333, 278, 404, 294, 303, 0, 0, 351,
	384, 219, 445, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	493, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 313, 396, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 202, 299,
	0, 373, 261, 473, 453, 449, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 309, 315, 316, 317,
	318, 335, 336, 337, 340, 343, 344, 347, 349, 350,
	353, 360, 361, 362, 363, 365, 367, 374, 378, 386,
	387, 388, 389, 390, 392, 393, 398, 399, 400, 401,
	409, 413, 431, 432, 444, 457, 462, 550, 439, 463,
	0, 308, 0, 0, 310, 254, 273, 284, 0, 452,
	410, 207, 380, 262, 196, 225, 210, 233, 248, 251,
	288, 319, 326, 355, 359, 267, 245, 223, 377, 220,
	395, 416, 417, 418, 420, 323, 240, 358, 421, 0,
	306, 422, 423, 280, 0, 0, 0, 0, 0, 0,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 297, 241, 0, 0, 356, 0,
	193, 0, 397, 228, 307, 304, 428, 255, 247, 243,
	227, 281, 314, 354, 415, 348, 0, 301, 0, 0,
	406, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	339, 407, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 425, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 328, 231, 0, 0, 498,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 293, 188, 205, 0, 0, 338, 379, 385, 0,
	0, 0, 229, 0, 383, 352, 443, 213, 257, 376,
	357, 381, 364, 260, 0, 0, 382, 302, 430, 371,
	440, 460, 461, 237, 332, 450, 419, 456, 472, 206,
	234, 346, 412, 446, 403, 325, 426, 427, 292, 402,
	266, 191, 300, 466, 204, 391, 221, 211, 197, 414,
	438, 218, 394, 0, 0, 474, 199, 436, 411, 321,
	289, 290, 198, 0, 375, 242, 264, 232, 341, 433,
	434, 230, 475, 208, 455, 201, 0, 454, 334, 429,
	437, 322, 312, 200, 435, 320, 311, 295, 253, 275,
	369, 305, 370, 276, 330, 329, 331, 194, 447, 0,
	195, 0, 408, 448, 476, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 298, 345, 368, 366,
	372, 0, 424, 441, 451, 458, 464, 465, 467, 468,
	469, 470, 471, 333, 278, 404, 294, 303, 0, 0,
	351, 384, 219, 445, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 313, 396, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 202,
	299, 0, 373, 261, 473, 453, 449, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 309, 315, 316,
	317, 318, 335, 336, 337, 340, 343, 344, 347, 349,
	350, 353, 360, 361, 362, 363, 365, 367, 374, 378,
	386, 387, 388, 389, 390, 392, 393, 398, 399, 400,
	401, 409, 413, 431, 432, 444, 457, 462, 270, 439,
	463, 0, 308, 0, 0, 310, 254, 273, 284, 0,
	452, 410, 207, 380, 262, 196, 225, 210, 233, 248,
	251, 288, 319, 326, 355, 359, 267, 245, 223, 377,
	220, 395, 416, 417, 418, 420, 323, 240, 358, 421,
	0, 306, 422, 423, 280, 0, 0, 0, 0, 0,
	0, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 297, 241, 0, 0, 356,
	0, 193, 0, 397, 228, 307, 304, 428, 255, 247,
	243, 227, 281, 314, 354, 415, 348, 0, 301, 0,
	0, 406, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 339, 407, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 425, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 328, 231, 0, 0,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 293, 188, 205, 0, 0, 338, 379, 385,
	0, 0, 0, 229, 0, 383, 352, 443, 213, 257,
	376, 357, 381, 364, 260, 0, 0, 382, 302, 430,
	371, 440, 460, 461, 237, 332, 450, 419, 456, 472,
	206, 234, 346, 412, 446, 403, 325, 426, 427, 292,
	402, 266, 191, 300, 466, 204, 391, 221, 211, 197,
	414, 438, 218, 394, 0, 0, 474, 199, 436, 411,
	321, 289, 290, 198, 0, 375, 242, 264, 232, 341,
	433, 434, 230, 475, 208, 455, 201, 0, 454, 334,
	429, 437, 322, 312, 200, 435, 320, 311, 295, 253,
	275, 369, 305, 370, 276, 330, 329, 331, 194, 447,
	0, 195, 0, 408, 448, 476, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 298, 345, 368,
	366, 372, 0, 424, 441, 451, 458, 464, 465, 467,
	468, 469, 470, 471, 333, 278, 404, 294, 303, 0,
	0, 351, 384, 219, 445, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 492, 493, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 313, 396, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	202, 299, 0, 373, 261, 473, 453, 449, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 309, 315,
	316, 317, 318, 335, 336, 337, 340, 343, 344, 347,
	349, 350, 353, 360, 361, 362, 363, 365, 367, 374,
	378, 386, 387, 388, 389, 390, 392, 393, 398, 399,
	400, 401, 409, 413, 431, 432, 444, 457, 462, 270,
	439, 463, 0, 308, 0, 0, 310, 254, 273, 284,
	0, 452, 410, 207, 380, 262, 196, 225, 210, 233,
	248, 251, 288, 319, 326, 355, 359, 267, 245, 223,
	377, 220, 395, 416, 417, 418, 420, 323, 240, 358,
	421, 0, 306, 422, 423, 280, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 297, 241, 0, 0,
	356, 0, 193, 0, 397, 228, 307, 304, 428, 255,
	247, 243, 227, 281, 314, 354, 415, 348, 0, 301,
	0, 0, 406, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 339, 407, 259, 0, 0, 0, 0, 184,
	2293, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 425, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 328, 231, 0,
	0, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 293, 188, 205, 0, 0, 338, 379,
	385, 0, 0, 0, 229, 0, 383, 352, 443, 213,
	257, 376, 357, 381, 364, 260, 0, 0, 382, 302,
	430, 371, 440, 460, 461, 237, 332, 450, 419, 456,
	472, 206, 234, 346, 412, 446, 403, 325, 426, 427,
	292, 402, 266, 191, 300, 466, 204, 391, 221, 211,
	197, 414, 438, 218, 394, 0, 0, 474, 199, 436,
	411, 321, 289, 290, 198, 0, 375, 242, 264, 232,
	341, 433, 434, 230, 475, 208, 455, 201, 0, 454,
	334, 429, 437, 322, 312, 200, 435, 320, 311, 295,
	253, 275, 369, 305, 370, 276, 330, 329, 331, 194,
	447, 0, 195, 0, 408, 448, 476, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 298, 345,
	368, 366, 372, 0, 424, 441, 451, 458, 464, 465,
	467, 468, 469, 470, 471, 333, 278, 404, 294, 303,
	0, 0, 351, 384, 219, 445, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 492, 493, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 495, 313, 396, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 202, 299, 0, 373, 261, 473, 453, 449, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 309,
	315, 316, 317, 318, 335, 336, 337, 340, 343, 344,
	347, 349, 350, 353, 360, 361, 362, 363, 365, 367,
	374, 378, 386, 387, 388, 389, 390, 392, 393, 398,
	399, 400, 401, 409, 413, 431, 432, 444, 457, 462,
	270, 439, 463, 0, 308, 0, 0, 310, 254, 273,
	284, 0, 452, 410, 207, 380, 262, 196, 225, 210,
	233, 248, 251, 288, 319, 326, 355, 359, 267, 245,
	223, 377, 220, 395, 416, 417, 418, 420, 323, 240,
	358, 421, 0, 306, 422, 423, 280, 0, 0, 0,
	0, 0, 0, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 297, 241, 0,
	0, 356, 0, 193, 0, 397, 228, 307, 304, 428,
	255, 247, 243, 227, 281, 314, 354, 415, 348, 0,
	301, 0, 0, 406, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 339, 407, 259, 0, 0, 0, 0,
	184, 1894, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 425, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 328, 231,
	0, 0, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 296, 0, 293, 188, 205, 0, 0, 338,
	379, 385, 0, 0, 0, 229, 0, 383, 352, 443,
	213, 257, 376, 357, 381, 364, 260, 0, 0, 382,
	302, 430, 371, 440, 460, 461, 237, 332, 450, 419,
	456, 472, 206, 234, 346, 412, 446, 403, 325, 426,
	427, 292, 402, 266, 191, 300, 466, 204, 391, 221,
	211, 197, 414, 438, 218, 394, 0, 0, 474, 199,
	436, 411, 321, 289, 290, 198, 0, 375, 242, 264,
	232, 341, 433, 434, 230, 475, 208, 455, 201, 0,
	454, 334, 429, 437, 322, 312, 200, 435, 320, 311,
	295, 253, 275, 369, 305, 370, 276, 330, 329, 331,
	194, 447, 0, 195, 0, 408, 448, 476, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 298,
	345, 368, 366, 372, 0, 424, 441, 451, 458, 464,
	465, 467, 468, 469, 470, 471, 333, 278, 404, 294,
	303, 0, 0, 351, 384, 219, 445, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 313, 396, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 202, 299, 0, 373, 261, 473, 453, 449,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	309, 315, 316, 317, 318, 335, 336, 337, 340, 343,
	344, 347, 349, 350, 353, 360, 361, 362, 363, 365,
	367, 374, 378, 386, 387, 388, 389, 390, 392, 393,
	398, 399, 400, 401, 409, 413, 431, 432, 444, 457,
	462, 270, 439, 463, 0, 308, 0, 0, 310, 254,
	273, 284, 0, 452, 410, 207, 380, 262, 196, 225,
	210, 233, 248, 251, 288, 319, 326, 355, 359, 267,
	245, 223, 377, 220, 395, 416, 417, 418, 420, 323,
	240, 358, 0, 0, 306, 422, 423, 280,
}

var yyPact = [...]int{
	2442, -1000, -404, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1753, 1773, -1000, -1000,
	-1000, -1000, 1859, -1000, 604, 1538, -1000, 1761, 279, -1000,
	35552, 370, -1000, 34991, 366, 2557, 35552, -1000, 117, -1000,
	102, 35552, 113, 34430, -1000, -1000, -327, 15353, 1696, 6,
	-8, 35552, -1000, -1000, -1000, -1000, 1847, 1521, -1000, 235,
	-1000, -1000, -1000, -1000, -1000, -1000, 33869, -1000, -1000, -1000,
	1766, 1756, 1869, 509, 1685, -1000, 1808, 1521, -1000, 15353,
	1836, 1800, 14792, -1000, 14792, 325, -1000, -1000, 10858, -1000,
	-1000, 19843, 35552, 35552, 239, -1000, 1761, -1000, -1000, 304,
	-1000, 226, 1451, -1000, 1450, -1000, 430, 447, 257, 374,
	372, 256, 255, 252, 250, 249, 246, 240, 237, 263,
	-1000, 556, 556, -205, -210, 2710, 312, 312, 312, 337,
	1730, 1726, -1000, 530, -1000, 556, 556, 296, 556, 556,
	556, 556, 195, 188, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 223,
	1761, 178, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 35552, 144, 35552, -1000,
	438, 35552, 673, 673, 9, 673, 673, 673, 673, 129,
	531, -15, -1000, 116, 180, 100, 173, 646, 86, 128,
	-1000, -1000, 171, 646, 1146, 533, 82, -1000, 673, 8582,
	8582, 8582, -1000, 1744, -1000, -1000, -1000, -1000, -1000, -1000,
	1006, -1000, 336, -1000, -1000, -1000, -1000, 35552, 33308, 291,
	568, -1000, -1000, -1000, 40, -1000, -1000, 1270, 836, 15353,
	1070, -1000, 1416, 470, -1000, -1000, -1000, -1000, -1000, 405,
	15914, 15914, 15914, 15914, -1000, -1000, 1455, 1455, 1455, 1455,
	15914, 1455, 15914, 1455, 1455, 1455, 1455, 15353, 1455, 1455,
	1455, -1000, 1455, 1455, 1455, 1455, 1455, 1455, 1455, 1455,
	1455, 1455, 1455, 1455, 436, 1455, 1455, 1455, 1455, 1455,
	-1000, -1000, -1000, -1000, 1455, 1455, 1455, 1455, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 17597, -1000, 13109, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 35552, -1000, 1455, 126, 35552, 35552,
	231, 1808, 1521, -1000, 1847, 1823, 235, -1000, 1743, 1330,
	1311, 1076, 1521, 1444, 35552, -1000, 1459, -1000, -1000, -1000,
	1608, 985, 1144, -1000, -1000, -1000, -1000, 914, 15353, -1000,
	-1000, 1855, -1000, 17036, 433, 698, 1854, 32747, -1000, 325,
	325, 1449, 10289, -51, -1000, -1000, -1000, 564, 22648, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1744, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1353, 35552,
	-1000, -1000, 4106, 1036, -1000, 1537, -1000, 1346, -1000, 1517,
	1546, 365, 1036, 347, 346, 340, -1000, -128, -1000, -1000,
	-1000, -1000, -1000, 556, 556, -1000, 247, 1834, 279, 3902,
	-1000, -1000, -1000, 32186, 1536, 1036, -1000, 1535, -1000, 634,
	413, 441, 441, 1036, -1000, -1000, 35552, 1036, 632, 631,
	35552, 35552, -1000, 31625, -1000, 31064, 30503, 952, 35552, 29942,
	29381, 28820, 28259, 27698, -1000, 1603, -1000, 1577, -1000, -1000,
	-1000, 35552, 35552, 35552, 290, -1000, -1000, 35552, 1036, -1000,
	-1000, 951, 943, 556, 556, 942, 1139, 1133, 1129, 556,
	556, 938, 1124, 24892, 172, 920, 915, 909, 894, 1123,
	179, 868, 815, 904, 35552, 1533, 35552, -1000, 167, 591,
	324, 560, 1761, 1692, 1448, 335, 355, 1036, 315, 315,
	35552, -1000, 9151, -1000, -1000, 1113, 15353, -1000, 655, 646,
	646, -1000, -1000, -1000, -1000, -1000, -1000, 673, 35552, 655,
	-1000, -1000, -1000, 646, 673, 35552, 673, 673, 673, 673,
	646, 646, 646, 673, 35552, 35552, 35552, 35552, 35552, 35552,
	35552, 35552, 35552, 8582, 8582, 8582, 533, 673, -332, -1000,
	1102, -1000, 1607, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 112, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -117, 1447, 27137, -1000, -333, -335, -336, -338,
	-1000, -1000, -1000, -339, -345, -1000, -1000, -1000, 15353, 15353,
	15353, 15353, -1000, 805, 15914, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 893, 693, 15914, 15914, 15914, 15914, 15914, 15914,
	15914, 15914, 15914, 15914, 15914, 15914, 15914, 15914, 15914, 719,
	1101, 1100, 470, 470, 470, 470, -1000, 14792, 15353, 15353,
	470, -1000, 1036, 26576, 14792, 14792, 15353, 1734, 567, 836,
	35552, -1000, 1076, -1000, -1000, -1000, 793, -1000, 35552, 35552,
	1111, 15353, 15353, 15353, 11986, 15353, 11425, 9151, 14792, 14792,
	14792, 14792, 14792, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 428, 1256, 1222, 1344, -1000, 1445,
	-1000, -190, 19282, 15353, 1095, 1853, 1572, 35552, -1000, -1000,
	-1000, 1808, -1000, 1808, 1256, 1687, 1655, 14792, -1000, -1000,
	1687, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1243,
	-1000, 35552, 1444, 1797, 35552, 1651, 1067, 280, -1000, 15353,
	15353, 1440, -1000, 866, 35552, -1000, -1000, 26015, -1000, -1000,
	8013, -1000, 35552, 224, 35552, -1000, 24331, 25454, 9720, -51,
	-1000, 9720, 1359, -1000, -49, -65, 12547, 491, -1000, -1000,
	-1000, 2710, 16475, 1177, 491, 50, -1000, -1000, -1000, 1517,
	-1000, 1517, 1517, 1517, 1517, 280, 280, 280, 280, -1000,
	-1000, -1000, -1000, -1000, 1531, 1529, -1000, 1517, 1517, 1517,
	1517, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1528, 1528,
	1528, 1518, 1518, 289, -1000, 15353, 203, 35552, 1784, 896,
	167, 319, 1561, 1036, 1036, 1036, 319, -1000, 1225, 1200,
	-1000, -396, 1405, -1000, -1000, 1833, -1000, -1000, 561, 665,
	661, 540, 35552, 138, 214, -1000, 307, -1000, 35552, 1036,
	611, 441, 1036, -1000, 1036, -1000, -1000, -1000, -1000, -1000,
	1036, 1394, -1000, 1398, 759, 649, 697, 647, 1394, -1000,
	-1000, -164, 1394, -1000, 1394, -1000, 1394, -1000, 1394, -1000,
	1394, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 584,
	35552, 138, 719, -1000, 334, -1000, -1000, 719, 719, -1000,
	-1000, -1000, -1000, 1049, 1042, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -380, 35552, -1000, 150, 557, 201, 241, 211,
	35552, 141, 1786, 158, 186, 35552, 35552, 315, 1604, 35552,
	1778, 35552, -1000, -1000, -1000, -1000, -1000, 836, 35552, -1000,
	-1000, 673, 673, -1000, -1000, 35552, 673, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 673, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 35552, 35552, -1000, -1000, -1000, -1000, -1000,
	64, -74, 228, -1000, -1000, -1000, -1000, -1000, 1805, -1000,
	836, 620, 599, -1000, -1000, -1000, 867, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 893, 15914, 15914, 15914, 1431, 380,
	1321, 1443, 961, 999, 999, 615, 615, 496, 496, 496,
	496, 496, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1324,
	-1000, 832, 852, 1076, -1000, 1324, 1324, 751, 14792, -1000,
	-1000, 587, -1000, 15353, 1076, -1000, -1000, 1076, 1373, 1369,
	1852, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 775, 934, 934, 15353, 1003, -1000, -1000, -1000,
	1143, 1076, 14792, 14792, 1367, 1455, 427, -1000, 1324, 1076,
	1076, 1324, 1324, 9151, 1076, -1000, 35552, -1000, -321, -1000,
	-90, 472, 1455, -1000, 24892, 1076, 1270, -1000, 1002, -1000,
	36674, -1000, -1000, -1000, -1000, -1000, 22087, 1296, 1687, -1000,
	-1000, 1455, 1339, -1000, -1000, 280, 25, 21526, -1000, -1000,
	836, 836, 15353, -1000, -1000, -1000, -1000, -1000, -1000, 424,
	1844, 317, 1455, -1000, 1365, 1627, -1000, -1000, -1000, 1796,
	18721, 35552, 1415, 1358, -1000, 409, -1000, 1359, -51, -84,
	-1000, -1000, -1000, -1000, 836, -1000, 1190, 227, 368, -1000,
	286, -1000, -1000, -1000, -1000, 1713, 26, -1000, -1000, -1000,
	280, 280, -1000, -1000, -1000, -1000, -1000, -1000, 1041, 1041,
	-1000, -1000, -1000, -1000, -1000, 891, -1000, -1000, -1000, 890,
	-1000, -1000, 1114, 1596, 203, -1000, -1000, 556, 1035, 1717,
	35552, -1000, -1000, 1175, 150, 35552, 582, 1602, -1000, 1561,
	1561, 1561, 35552, -1000, -1000, -1000, -1000, -384, 48, 292,
	-1000, -1000, -1000, 3618, 35552, 1336, -1000, 136, -1000, 1172,
	1663, 35552, -1000, 1334, 1527, 1036, 1036, -1000, -1000, -1000,
	35552, 1455, -1000, -1000, -1000, -1000, 332, 1759, 1757, 138,
	136, 491, 1036, -1000, -1000, -1000, -1000, -1000, -385, 1332,
	326, 140, 225, 35552, 35552, 35552, 35552, 35552, 382, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 181, 331, -1000,
	35552, 35552, 451, -1000, -1000, -1000, 646, -1000, -1000, 646,
	-1000, -1000, -1000, -1000, -1000, 1746, 35552, -79, -358, -1000,
	-355, -1000, -1000, -1000, -1000, 1147, 318, 1321, 15914, 15914,
	14792, -156, 563, 563, 719, -1000, -1000, -1000, 15353, 15353,
	1263, 574, -1000, 15353, 761, -1000, -1000, 15353, 15353, 15353,
	1076, 242, -1000, -1000, 1850, -1000, 15353, 1000, -1000, 1324,
	1324, 14792, 9151, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 472, -1000, 441, 441, 441, 35552, -1000,
	-1000, -1000, -1000, -1000, -1000, 1356, 1811, -1000, 1662, 1661,
	1849, 1844, -1000, 24331, 1687, -1000, -1000, 35552, -307, -1000,
	1688, 1668, -1000, -1000, -1000, -1000, 7444, 1808, 15353, 1594,
	35552, 1455, -1000, 18159, 35552, 35552, 24331, 24331, 24331, 24331,
	24331, -1000, 1643, 1642, -1000, 1621, 1613, 1635, 35552, -1000,
	1322, 1076, 1823, 18721, 20965, 1360, 24331, -1000, -1000, 24331,
	35552, 6875, -1000, -1000, -85, -95, -1000, -1000, -1000, -1000,
	2710, -1000, -1000, 882, 1794, 1703, -1000, -1000, -1000, -1000,
	1316, -1000, 1305, 1355, 1303, 104, -1000, 1474, 1741, 556,
	556, -1000, 875, -1000, 1036, -1000, -1000, 320, -1000, 1775,
	35552, 1592, 1588, 1587, -1000, -395, 856, 1526, 1327, 15353,
	1524, 1832, 1313, 35552, -1000, -1000, 35552, -1000, -1000, 329,
	-1000, 203, 35552, -1000, -1000, -1000, 214, 35552, -1000, 5723,
	136, -1000, -1000, -1000, -1000, -1000, -1000, 35552, 151, -1000,
	1520, 907, -1000, -1000, 1551, -1000, -1000, -1000, -1000, 133,
	187, -1000, 35552, 437, 1596, 35552, -1000, -1000, -1000, 673,
	673, -1000, -1000, 1737, -1000, 1036, 15914, 15914, -1000, 470,
	-1000, 1455, 1076, 1517, 1517, -1000, 1517, 1518, -1000, 1517,
	85, 1517, 79, 1517, -1000, -1000, 1076, 1076, 895, 814,
	-136, -1000, 836, 15353, 1105, 1061, 934, -1000, 1491, 1473,
	15353, 934, 1301, -1000, 1348, 1326, -1000, -1000, 1076, -1000,
	-1000, 1804, 1804, 1804, 1294, 36113, 35552, -1000, -1000, -1000,
	-1000, 1844, 1841, 1319, -1000, -1000, 25, 328, -1000, 1674,
	1668, -1000, 1831, 1682, 1829, -1000, -1000, -1000, 836, -1000,
	1754, 1260, -1000, 545, 1255, -1000, -1000, 14231, 1298, 1660,
	394, 1294, 1272, 1627, 1560, 1585, 1575, -1000, -1000, -1000,
	-1000, 1640, -1000, 1622, -1000, -1000, 1459, -1000, -1000, 1222,
	224, 24331, 1268, 1268, -1000, 388, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 675, 5573, 1868, -1000, 1014, -1000, 1130,
	-1000, 609, 608, -1000, 35552, 1471, -1000, 280, 1007, 280,
	853, -1000, 851, -1000, -1000, -251, -1000, -1000, 1469, 1593,
	-1000, -1000, 35552, -1000, -1000, 35552, 35552, 35552, 1470, 1827,
	-1000, 15353, 1464, 544, 1071, 35552, 35552, -1000, -1000, 205,
	1455, -1000, 1292, 1290, -1000, -208, -1000, 15353, -1000, -1000,
	-1000, 969, 969, -1000, 1459, -1000, -1000, -1000, 1170, -1000,
	-1000, -187, 35552, 35552, 35552, 35552, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 470, 15914, -1000, -1000, 280,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15353,
	-1000, 15353, -1000, 1808, 1004, 836, 15353, 15353, -1000, 843,
	773, 934, -1000, -1000, 1000, 15353, 15353, -1000, 1455, 1689,
	1455, 1455, 20965, -1000, -1000, 1841, 1839, 1826, 1675, 1678,
	1678, 1674, -1000, 1825, 1818, -1000, 996, 1817, 978, 596,
	-1000, 35552, 15353, 1455, -1000, 301, 35552, 1455, 35552, -1000,
	1824, -1000, -1000, 15353, 1463, -1000, 15353, -1000, -1000, -1000,
	-1000, -1000, 1844, 1268, -1000, -1000, 502, -1000, 15353, -1000,
	-1000, -1000, 426, -1000, -1000, -1000, -1000, -1000, 1461, 15353,
	-1000, -1000, -1000, 1161, 1159, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1459, -1000, -1000, -1000, -1000, 214, -393,
	1011, 35552, 765, -1000, 1284, 1313, 392, -1000, 15353, 277,
	-1000, 214, -1000, -214, -216, 934, -1000, -1000, 1793, -1000,
	-1000, 9151, -1000, -1000, 1458, 1553, -1000, 185, -1000, 934,
	934, 1076, -1000, 934, 934, 1156, 1148, -1000, -1000, 836,
	836, 20404, -1000, 1816, 1813, 23770, 23770, 472, 1839, -1000,
	15353, 15353, 1672, 790, -1000, -1000, -1000, -1000, 976, 916,
	-1000, 816, -1000, 1866, -1000, 836, -1000, 1455, -1000, 383,
	1255, -1000, 1808, 836, 35552, 836, 1824, -1000, 934, -1000,
	1455, 1455, 1455, 1455, 35552, 902, -1000, -1000, 1790, 1281,
	47, -1000, 1278, -1000, -1000, -1000, -1000, 13670, -1000, -1000,
	-1000, -1000, -1000, -1000, 235, 1308, -1000, 538, 35552, 35552,
	1076, 209, -197, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1274, -1000, -1000, -1000, -1000, -1000, 1274, 1274, -1000, -1000,
	836, 1270, -1000, 782, -1000, -1000, -1000, -1000, -1000, 35552,
	1255, 35552, -1000, 1252, 1808, -1000, 1232, -1000, 235, -1000,
	1453, 1327, -1000, 1076, -186, 9151, 6306, 1220, -1000, -1000,
	1650, -160, -202, 23209, -1000, -1000, -1000, -1000, -1000, 1230,
	-1000, -1000, -1000, 1580, 911, -186, 15353, 1417, -1000, -1000,
	-61, -1000, -1000, -1000, -1000, -1000, 1551, -1000, 1591, -1000,
	-1000, -1000, 1579, -1000, 1848, -1000, -1000, -1000, 674, 721,
	-1000, -1000, -1000, -1000, 840, 35552, 288, -1000, -1000, -187,
	-195, -1000, 1862, 465, 465, -1000, -1000, -401, 1166, 163,
	-1000, -199, -1000, -1000, -1000, 285, 760, -1000, -1000, 709,
	-401, -1000, -206, -1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2150, 2149, 16, 7, 2148, 13, 76, 159, 11,
	179, 85, 2147, 2146, 2145, 2144, 2143, 2142, 2141, 194,
	193, 192, 2140, 2139, 2138, 2137, 2136, 2135, 2134, 2133,
	2132, 2131, 190, 145, 153, 2129, 2128, 2126, 102, 148,
	70, 74, 160, 2125, 2124, 58, 2123, 2122, 2121, 178,
	155, 640, 2120, 177, 101, 28, 2118, 2117, 2116, 2115,
	2111, 2110, 2108, 2105, 2104, 2102, 2101, 2098, 2097, 2096,
	275, 2095, 2094, 5, 2093, 65, 2092, 2091, 2090, 2089,
	115, 2088, 2086, 2085, 2084, 2078, 2077, 129, 2076, 2075,
	2074, 2072, 166, 2069, 2067, 137, 88, 100, 2066, 2064,
	81, 157, 2063, 97, 2062, 2061, 2060, 133, 2059, 1095,
	2058, 50, 48, 2057, 47, 61, 45, 40, 2054, 2051,
	2047, 49, 73, 2045, 83, 42, 2042, 80, 77, 2041,
	44, 2040, 2039, 103, 2037, 2036, 2035, 78, 2034, 2033,
	3834, 2031, 75, 118, 82, 60, 2030, 24, 46, 2029,
	2027, 2025, 2024, 2023, 30, 2021, 2017, 2014, 127, 21,
	2012, 18, 33, 31, 119, 2011, 37, 66, 2003, 126,
	125, 2002, 36, 19, 20, 2001, 17, 116, 136, 22,
	79, 120, 1999, 1998, 34, 55, 1997, 1996, 1995, 1994,
	1993, 1990, 53, 1988, 35, 1987, 182, 1982, 2, 1981,
	29, 23, 1980, 41, 130, 52, 12, 1979, 162, 1978,
	32, 164, 106, 144, 1977, 1976, 1975, 151, 221, 1974,
	1973, 63, 147, 128, 135, 1969, 229, 1968, 1967, 86,
	1551, 2288, 15, 143, 1965, 1964, 1962, 3105, 123, 121,
	38, 1961, 99, 1959, 1956, 1954, 161, 146, 98, 793,
	92, 1953, 1949, 1942, 1935, 1934, 1933, 1926, 1923, 213,
	167, 43, 95, 154, 59, 1922, 1921, 1920, 105, 69,
	1918, 141, 139, 110, 84, 1915, 149, 140, 108, 1913,
	90, 1911, 1910, 1909, 1907, 71, 1906, 1905, 1903, 1902,
	138, 131, 104, 67, 1900, 68, 96, 132, 134, 27,
	1899, 26, 1898, 1897, 150, 10, 1896, 3, 39, 1895,
	0, 1894, 6, 152, 223, 142, 1893, 1892, 1, 1891,
	4, 1890, 1887, 122, 1886, 1885, 1884, 9, 25, 8,
	1883, 1882, 1880, 3780, 3077, 107, 1860, 163,
}

//line sql.y:6302
type yySymType struct {
	union                  interface{}
	empty                  struct{}
	LengthScaleOption      LengthScaleOption
	tableName              TableName
	tableIdent             TableIdent
	str                    string
	strs                   []string
	vindexParam            VindexParam
	colIdent               ColIdent
	joinCondition          *JoinCondition
	collateAndCharset      CollateAndCharset
	columnType             ColumnType
	jsonValueModifierParam JSONValueModifierParam
	yys                    int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonValueModifierParamsUnion() []JSONValueModifierParam {
	v, _ := st.union.([]JSONValueModifierParam)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 331, 332, 332, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 310, 310,
	310, 313, 313, 30, 65, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 78, 78, 20, 21, 21, 21, 21,
	335, 335, 135, 135, 133, 133, 134, 134, 203, 203,
	22, 23, 23, 213, 213, 212, 212, 212, 214, 214,
	214, 214, 249, 249, 24, 24, 24, 24, 24, 93,
	93, 312, 312, 311, 307, 307, 306, 306, 305, 36,
	37, 46, 46, 46, 46, 47, 48, 314, 314, 281,
	52, 52, 51, 51, 51, 51, 53, 53, 50, 50,
	49, 49, 283, 283, 270, 270, 282, 282, 282, 282,
	282, 282, 282, 269, 269, 104, 104, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 326, 326,
	183, 183, 183, 183, 183, 183, 113, 113, 121, 121,
	121, 121, 111, 111, 112, 110, 110, 110, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 120, 120, 117, 117, 117, 118, 118, 118, 327,
	327, 327, 327, 252, 252, 252, 252, 255, 255, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 254, 254,
	254, 254, 254, 256, 256, 256, 256, 256, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 258, 258, 258, 258, 258, 258, 258,
	258, 268, 268, 259, 259, 263, 263, 264, 264, 264,
	265, 265, 265, 266, 266, 261, 261, 261, 261, 261,
	261, 262, 262, 262, 271, 295, 295, 294, 294, 292,
	292, 292, 292, 280, 280, 289, 289, 289, 289, 289,
	279, 279, 275, 275, 275, 276, 276, 277, 277, 274,
	274, 278, 278, 291, 291, 290, 272, 272, 273, 273,
	297, 328, 328, 328, 328, 329, 329, 298, 319, 320,
	318, 318, 318, 318, 318, 75, 75, 75, 225, 225,
	225, 287, 287, 286, 286, 286, 288, 288, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 220, 220, 220, 317,
	317, 317, 317, 317, 317, 316, 316, 316, 284, 284,
	284, 315, 315, 54, 54, 167, 167, 43, 43, 43,
	43, 43, 43, 42, 42, 42, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 44,
	44, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	80, 80, 81, 81, 81, 81, 82, 82, 82, 300,
	300, 55, 55, 3, 3, 1, 1, 2, 2, 4,
	4, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 267, 267, 267, 299, 299, 301, 303,
	303, 303, 303, 302, 89, 89, 26, 35, 35, 27,
	27, 27, 27, 28, 28, 56, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 321, 321, 219, 219, 227, 227,
	218, 218, 242, 242, 242, 221, 221, 221, 222, 222,
	325, 325, 325, 58, 58, 58, 60, 60, 61, 62,
	62, 244, 244, 245, 245, 63, 64, 76, 76, 76,
	76, 76, 76, 79, 79, 79, 13, 13, 13, 13,
	72, 72, 72, 12, 12, 59, 59, 66, 322, 322,
	323, 324, 324, 324, 324, 67, 69, 29, 29, 29,
	29, 29, 29, 99, 99, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 94, 94, 94,
	88, 88, 336, 70, 71, 71, 92, 92, 92, 85,
	85, 85, 91, 91, 91, 14, 14, 15, 202, 202,
	16, 16, 96, 96, 98, 98, 98, 98, 98, 100,
	100, 100, 100, 100, 100, 100, 95, 95, 97, 97,
	97, 97, 234, 234, 234, 233, 233, 124, 124, 126,
	125, 125, 127, 127, 128, 128, 128, 165, 143, 143,
	200, 200, 198, 198, 199, 199, 201, 201, 201, 201,
	204, 204, 129, 129, 129, 129, 130, 130, 131, 131,
	132, 132, 243, 243, 240, 240, 240, 239, 239, 136,
	136, 136, 138, 137, 137, 137, 137, 139, 139, 141,
	141, 140, 140, 142, 147, 147, 146, 146, 144, 144,
	144, 144, 145, 145, 145, 145, 148, 148, 109, 109,
	109, 109, 109, 109, 119, 119, 119, 119, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 77, 77, 77, 216, 216,
	149, 149, 157, 157, 157, 157, 150, 150, 150, 150,
	150, 150, 150, 158, 158, 158, 164, 159, 159, 155,
	155, 155, 155, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 235, 235,
	235, 235, 235, 309, 309, 308, 308, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 337, 337,
	260, 260, 260, 156, 156, 156, 156, 156, 90, 90,
	90, 90, 90, 248, 248, 248, 251, 251, 251, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 170, 170, 86, 86, 168, 168,
	169, 171, 171, 166, 166, 166, 152, 152, 152, 172,
	172, 173, 173, 174, 174, 176, 175, 175, 177, 178,
	178, 178, 179, 179, 180, 180, 180, 45, 45, 45,
	45, 45, 40, 40, 40, 40, 41, 41, 41, 101,
	101, 101, 101, 103, 103, 102, 102, 73, 73, 74,
	74, 74, 107, 107, 108, 108, 108, 105, 105, 106,
	106, 196, 196, 181, 181, 181, 188, 188, 188, 184,
	184, 186, 186, 186, 187, 187, 187, 185, 193, 193,
	195, 195, 194, 194, 190, 190, 191, 191, 192, 192,
	192, 189, 189, 151, 151, 151, 151, 151, 197, 197,
	197, 197, 205, 205, 161, 161, 163, 163, 162, 123,
	206, 206, 210, 207, 207, 211, 211, 211, 211, 211,
	208, 208, 209, 209, 236, 236, 236, 215, 215, 226,
	226, 223, 223, 224, 224, 217, 217, 228, 228, 228,
	68, 160, 160, 296, 296, 293, 231, 231, 232, 232,
	237, 237, 241, 241, 238, 238, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 333,
	334, 246, 247, 247, 247,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 2, 2, 0, 1, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 1, 1,
	0, 2, 2, 3, 3, 2, 1, 1, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 5, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 2, 2, 2, 1,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	7, 5, 6, 6, 7, 0, 1, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 0, 1,
	2, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 5, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 1, 1, 0, 2, 0,
	2, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 2, 0,
	4, 4, 3, 2, 1, 3, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 4, 4, 4, 3, 3, 3, 5, 2,
	3, 3, 3, 3, 1, 1, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 3, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 3, 3, 7,
	0, 3, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 6, 6, 6,
	2, 2, 3, 3, 3, 1, 1, 1, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 2, 2, 1, 2, 2, 2, 8, 8,
	6, 5, 4, 4, 7, 4, 6, 6, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -331, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -56, -57, -58, -60,
	-61, -62, -63, -64, -12, -59, -29, -30, -65, -66,
	-67, -68, -69, -14, -15, -16, -7, -6, -11, 7,
	8, -78, -31, 30, -36, -46, 206, -47, -37, 207,
	-48, 209, 208, 245, 210, 238, 72, 287, 288, 290,
	291, 292, 293, -79, 243, 244, 212, 34, 43, 31,
	32, 35, 216, 251, 252, 215, -8, -32, 6, -333,
	9, 413, 240, 239, 26, -10, 440, 83, -332, 574,
	-196, -181, 20, 31, 27, -180, -176, -92, -181, 18,
	16, 5, -70, -336, -70, -70, 10, 11, -70, -281,
	-283, 83, 143, 83, -70, -52, -51, -50, -49, -53,
	29, -43, -44, -304, -42, -39, 211, 208, 255, 107,
	108, 245, 246, 247, 210, 229, 244, 248, 243, 264,
	-38, 78, 31, 440, 443, -288, 207, 213, 214, 414,
	110, 109, 73, 209, -285, 339, 544, -53, 546, 99,
	101, 545, 42, 219, 547, 548, 549, 550, 228, 551,
	552, 553, 554, 560, 561, 562, 563, 111, 5, -70,
	-241, -237, -310, -230, 86, 87, 88, 437, 231, 471,
	472, 280, 78, 39, 336, 339, 544, 287, 301, 295,
	322, 314, 438, 473, 283, 232, 268, 541, 312, 119,
	546, 286, 474, 246, 344, 345, 346, 99, 290, 381,
	559, 285, 475, 557, 101, 545, 77, 49, 42, 241,
	310, 215, 306, 547, 269, 476, 448, 262, 110, 107,
	566, 34, 304, 48, 28, 556, 109, 47, 548, 134,
	477, 549, 348, 327, 535, 46, 349, 247, 478, 81,
	252, 442, 543, 350, 305, 351, 279, 555, 212, 479,
	527, 352, 353, 536, 480, 328, 332, 481, 373, 354,
	573, 50, 482, 483, 537, 108, 484, 76, 550, 299,
	300, 485, 277, 230, 375, 326, 228, 33, 355, 439,
	281, 56, 256, 376, 44, 330, 570, 43, 531, 486,
	534, 325, 321, 423, 51, 487, 488, 489, 490, 551,
	324, 298, 320, 565, 460, 274, 552, 60, 214, 334,
	333, 335, 263, 372, 317, 491, 492, 493, 235, 79,
	494, 307, 19, 495, 496, 356, 270, 497, 54, 498,
	499, 379, 244, 500, 52, 553, 37, 249, 567, 554,
	501, 502, 503, 504, 251, 505, 358, 506, 357, 329,
	331, 258, 359, 441, 507, 303, 248, 558, 508, 236,
	542, 250, 255, 243, 380, 237, 509, 510, 511, 512,
	513, 284, 514, 515, 291, 560, 424, 41, 516, 517,
	518, 519, 278, 273, 374, 383, 59, 80, 341, 520,
	540, 297, 271, 521, 288, 53, 561, 562, 563, 265,
	564, 7, 571, 572, 361, 111, 275, 276, 45, 318,
	257, 522, 523, 308, 309, 323, 296, 319, 289, 528,
	259, 362, 425, 245, 524, 382, 272, 337, 342, 445,
	264, 363, 539, 444, 316, 313, 266, 525, 364, 220,
	260, 261, 526, 529, 365, 366, 282, 367, 368, 369,
	370, 371, 267, 443, 294, 311, 343, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 422, 218, -70, 218, -140,
	-237, 218, -208, 345, -227, 347, 360, 355, 365, 353,
	-219, 356, 358, 258, -325, 373, 218, 362, 206, 160,
	348, 357, 366, 367, 282, 368, 371, 267, -321, -310,
	549, 564, 119, 315, 352, 350, 374, 531, 370, 369,
	-237, 289, -244, 294, -231, -310, -230, 292, -140, -76,
	527, 210, -246, -246, -94, 531, 533, -159, -109, 127,
	-119, -122, -114, -115, -153, -154, -155, -156, -120, -166,
	149, 150, 157, 128, -164, -123, 24, 436, 415, 414,
	160, 29, 202, 66, 67, 417, 418, 130, 55, 390,
	391, -121, 386, 392, 387, 420, 421, 102, 422, 423,
	424, 425, -235, -231, -237, 223, 385, 217, 155, 413,
	-116, -112, -6, -162, 384, 388, 389, 393, 426, 427,
	428, 433, 434, -310, -230, -118, -117, -149, 89, 95,
	100, 96, -330, 103, -333, 90, 91, 92, 93, 94,
	104, 105, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 42, 361, 361, -140, -70, -70, -70,
	-70, -174, -92, -176, -8, -6, -333, 6, -70, -6,
	-7, -11, -32, -34, 467, -33, -237, -181, -196, 10,
	145, 40, 48, -179, -180, -10, -6, -109, 17, 21,
	22, -97, 151, -109, -237, -71, -97, -217, 222, -70,
	-70, -207, -249, 289, -211, 374, 373, -232, -209, -231,
	-229, -208, 372, 211, 446, 126, 23, 25, 129, 160,
	114, 17, 130, 35, 213, 315, 229, 159, 225, 414,
	206, 70, 447, 386, 387, 384, 390, 416, 417, 385,
	347, 29, 11, 449, 26, 239, 22, 36, 153, 208,
	133, 242, 24, 240, 102, 105, 452, 20, 73, 234,
	12, 227, 38, 14, 453, 454, 15, 223, 222, 145,
	219, 68, 9, 202, 27, 142, 64, 455, 121, 456,
	457, 458, 459, 115, 66, 143, 18, 568, 388, 389,
	31, 532, 436, 253, 155, 71, 57, 533, 127, 461,
	462, 103, 463, 106, 74, 538, 123, 16, 69, 40,
	464, 254, 465, 224, 569, 466, 377, 467, 144, 209,
	413, 67, 468, 217, 360, 6, 419, 30, 238, 226,
	113, 65, 469, 218, 132, 420, 421, 221, 116, 104,
	5, 120, 32, 10, 72, 75, 391, 392, 393, 55,
	112, 440, 131, 13, 470, 378, 125, 119, -282, 143,
	-269, -273, -231, 233, -298, 229, -140, -291, -290, -231,
	-93, -226, 219, 227, 226, 120, -314, 123, 275, 385,
	217, -49, -50, -208, 159, -80, 250, 254, 84, 84,
	-273, -272, -271, -315, 254, 233, -297, -289, 225, 234,
	-279, 226, 227, -274, 219, 121, -315, -274, 224, 234,
	254, 254, 111, 254, 111, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 249, -280, 135, -280, 444, 444,
	-285, -315, -315, -315, 221, 33, 33, -228, -274, 221,
	23, -280, -280, -208, 159, -280, -280, -280, -280, 262,
	262, -280, -280, -280, -280, -280, -280, -280, -280, -280,
	-280, -280, -280, -280, -280, -280, 218, -314, -101, 371,
	282, 78, -51, 264, -35, -140, -226, 219, 220, -314,
	251, -140, 203, -140, -221, 143, 13, -221, -218, 361,
	359, 346, 351, -221, -221, -221, -221, 265, 344, -275,
	219, 33, 230, 361, 265, 344, 265, 266, 265, 266,
	354, 364, 265, -242, 12, 145, 385, 349, 353, 258,
	218, 259, 220, 363, -310, 534, 266, -242, 90, -222,
	143, 361, 261, -221, -247, -333, -232, 315, -247, -247,
	30, 87, 221, -231, -72, -231, 90, -13, -9, -20,
	-19, -21, 135, -99, 361, -87, 160, 549, 535, 536,
	537, 534, 358, 542, 540, 538, 265, 539, 84, 123,
	125, 126, -109, 142, -150, 135, 136, 137, 138, 139,
	140, 141, 145, 127, 129, 143, 144, 124, 146, 147,
	148, 149, 150, 151, 152, 154, 153, 155, 156, 159,
	204, 205, -115, -115, -115, -115, -164, -333, -333, -333,
	-115, -216, -333, -115, -333, -333, -333, -333, -170, -109,
	-333, -337, -333, -337, -337, -260, -333, -260, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, 203, -333, -333,
	-333, -333, -333, -260, -260, -260, -260, 100, 95, 89,
	-166, 96, 90, -231, -237, -6, -7, -159, -246, -322,
	-323, -143, -140, -333, 282, -231, -231, 251, -179, -10,
	-6, -174, -180, -176, -6, -70, -85, -98, 61, 62,
	-100, 22, 36, 65, 63, 21, -334, 85, -334, -196,
	-334, 84, -34, -200, 83, 59, 41, 90, 90, 84,
	19, -175, -177, -109, 12, -234, -233, 23, -231, 90,
	203, 98, 12, -141, 27, -140, -217, -217, 84, 289,
	-211, -249, -213, -212, 375, 377, 135, -236, -231, 90,
	29, 85, 84, -140, -252, -255, -257, -256, -258, -253,
	-254, 312, 313, 160, 316, 318, 319, 320, 321, 322,
	323, 324, 325, 326, 327, 30, 241, 308, 309, 310,
	311, 328, 329, 330, 331, 332, 333, 334, 335, 295,
	314, 438, 296, 297, 298, 299, 300, 301, 303, 304,
	305, 306, 307, -313, -310, 83, 85, 84, -259, 83,
	-101, 218, -310, 219, 219, 219, -70, 413, -280, -280,
	249, 17, -42, -39, -304, 16, -38, -39, 211, 107,
	108, 208, 83, -269, 83, -278, -313, -310, 83, 121,
	224, 120, -277, -274, -277, -278, -310, -166, -310, 121,
	121, -204, -231, -204, -204, 21, -204, 21, -204, 21,
	92, -231, -204, 21, -204, 21, -204, 21, -204, 21,
	-204, 21, 29, 76, 77, 29, 79, 80, 81, -166,
	-166, -269, -208, -140, -310, 92, 92, -280, -280, 92,
	90, 90, 90, -280, -280, 92, 90, -239, -237, 90,
	-316, 235, 279, 281, 92, 92, 92, 92, 29, 90,
	-317, 29, 556, 555, 557, 558, 559, 92, 29, 92,
	29, 92, -231, 83, -140, -107, 269, 206, 208, 211,
	74, 90, 283, 135, 42, 84, 221, 218, -310, -223,
	223, -223, -231, -238, -237, -229, 90, -109, -276, 12,
	145, -242, -242, -221, -140, -276, -242, -221, -140, -221,
	-221, -221, -221, -242, -242, -242, -221, -237, -237, -140,
	-140, -140, -140, -140, -140, -140, -247, -247, -247, -222,
	-221, 534, 90, 74, -245, 292, 326, 528, 529, 530,
	84, 440, -133, -140, 534, 534, 534, 534, 534, 534,
	-109, -109, -109, -109, -157, 103, 127, 104, 105, -122,
	-158, -162, -164, 97, 145, 129, 143, 144, -114, -115,
	-114, -114, -114, -114, -114, -114, -114, -114, -114, -114,
	-114, -114, -114, -248, -310, 90, 160, 90, 90, -95,
	-97, -109, -109, -310, -231, -95, -95, -109, -91, 22,
	36, -168, -169, 131, -166, -334, -334, 92, -231, -231,
	-84, -83, 395, 396, 397, 398, 400, 401, 402, 405,
	406, 410, 411, 394, 412, 399, 404, 407, 408, 409,
	403, 311, -109, -109, -109, -77, -109, 114, 115, 116,
	-109, -96, 22, 36, -95, -232, -238, -229, -95, -96,
	-96, -95, -95, 203, -196, -334, 84, -324, 377, 378,
	532, -240, 254, -239, 23, -160, -159, 90, 12, -202,
	75, -231, -179, -179, 61, 62, 57, -95, -100, -334,
	-33, 23, -198, -231, 60, 90, -261, -208, 336, 337,
	-109, -109, 84, -178, 25, 26, -140, -233, 151, -238,
	-140, -203, 254, -140, -125, -127, -128, -129, -143, -165,
	-333, 12, -133, -134, -142, -237, -211, -213, 84, 376,
	378, 379, 74, 106, -109, -262, 159, -287, -286, -285,
	-269, -271, -272, -273, 85, -262, -265, 342, 341, -259,
	-259, -259, -259, -259, -261, -261, -261, -261, 83, 83,
	-259, -259, -259, -259, -263, 83, -263, -263, -264, 83,
	-264, -298, -109, -295, -294, -292, -293, 228, 99, 440,
	75, -290, -178, 92, -107, -224, 223, -296, -293, -310,
	-310, -310, -224, -310, 90, -310, 90, -81, -55, -1,
	568, 569, 570, 84, 17, -270, -269, -54, 279, -301,
	-302, 254, -297, -291, -278, 121, -277, -278, -278, -310,
	84, 27, 111, 111, 111, 111, 440, 208, 30, -269,
	-54, -248, 221, -248, -248, 90, 90, -220, 564, -133,
	-103, 271, 135, 260, 260, 218, 218, 273, -140, 284,
	286, 285, 283, 21, 272, 274, 276, 262, -140, -140,
	-223, 74, -135, -140, 24, -237, -140, -221, -221, -140,
	-221, -221, -140, -231, -87, 377, 84, 440, 20, -88,
	20, 103, 104, 105, -158, -114, -115, -114, 126, 242,
	84, -334, 23, 84, 75, -334, -334, -334, 84, 12,
	-95, -171, -169, 133, -109, -334, -334, 84, 84, 12,
	-251, 23, -334, -334, -170, -334, 12, 84, -334, -95,
	-95, -333, 203, -334, -334, -334, -334, -334, -232, -323,
	531, 378, -147, -146, -144, 72, 222, 73, -333, -239,
	-334, 90, 87, -199, 87, -198, -152, -231, 92, 96,
	-181, -124, -126, 12, -100, -164, 85, 84, -261, -185,
	-190, -218, -231, 90, 160, -177, 203, -148, 13, -151,
	30, 55, -9, -333, -333, 30, 84, -136, -138, -137,
	-139, 64, 68, 70, 65, 66, 67, 71, -243, 23,
	-125, -7, -6, -333, -140, -133, -335, 12, 75, -335,
	84, 203, -212, -214, 380, 377, 383, -310, 90, -80,
	84, -285, -273, -182, -104, 38, -266, 343, -261, -261,
	-268, 90, -268, 92, 92, 85, -45, -40, -41, 31,
	78, -292, -280, 90, 37, -231, 85, -103, -140, 127,
	74, -296, -296, -296, -237, -2, 567, 573, 121, 83,
	346, 16, -198, 84, 85, -167, 280, 85, -303, 55,
	-231, 85, 83, -278, -278, -231, -333, 218, 29, 29,
	-54, -167, -262, -310, 566, 565, 85, 220, 278, -108,
	390, -105, 90, 86, -140, -140, -140, -140, -140, 211,
	208, 263, 221, -133, -140, 84, -75, 237, 232, -242,
	-242, 31, -140, 377, 543, 541, 126, 242, -122, -115,
	-97, 437, -250, 160, 312, 241, 310, 306, 326, 317,
	341, 308, 342, 305, 304, 303, -250, -248, -109, -109,
	-174, 134, -109, 132, -109, -109, -109, -334, 160, 312,
	12, -109, -309, -308, 90, 87, -334, -334, -96, -232,
	-144, -274, -274, -274, -204, 84, -215, 20, 12, 55,
	55, -124, -148, -125, -100, -231, -188, 527, -193, 44,
	-191, -192, 45, -189, 46, 54, 151, -179, -109, -205,
	74, -206, -210, -166, -161, -163, -162, -333, -197, -334,
	-231, -204, -206, -127, -128, -128, -127, -128, 64, 64,
	64, 69, 64, 69, 64, -137, -237, -334, -334, -7,
	-240, 75, -125, -125, -142, -237, 151, 377, 381, 382,
	-285, -329, 103, 127, 29, 74, 339, 99, -327, 159,
	-328, 224, 120, 121, 236, 23, 39, 85, 84, 85,
	84, 85, 84, -225, 477, 127, -41, -40, -280, -280,
	92, -310, 220, 24, -140, 74, 74, 74, -82, 571,
	92, 83, -3, 78, -109, 83, 17, -269, -166, 256,
	145, -295, -198, -299, -301, -140, -111, -333, -110, -112,
	-116, 149, 150, -167, -140, -102, 269, 277, 83, -106,
	87, -312, 75, 260, 339, 260, -140, -75, -45, -140,
	-221, -221, 31, -310, -122, -115, -333, -334, -259, -259,
	-259, -264, -259, 300, -259, 300, -259, -334, -334, 84,
	-334, 20, -334, -86, 419, -109, 84, 84, -334, 83,
	83, -109, -334, -334, 84, 84, 84, -334, -145, 20,
	-145, -145, -334, 87, -140, -148, -172, 14, -185, 49,
	318, -195, -194, 53, 45, -192, 17, 47, 17, 28,
	-205, 84, 135, 84, -334, -334, 84, 55, 203, -334,
	-148, -131, -130, 74, 75, -132, 74, -130, 64, 64,
	-200, -334, -203, -125, -148, -148, 203, 103, -333, -113,
	-121, -111, 10, 90, 90, -310, 121, 121, -140, 83,
	-261, 90, -261, 92, 92, 477, 29, 79, 80, 81,
	29, 76, 77, -140, -140, -140, -140, -300, 83, 17,
	-109, 83, 135, 85, -198, -198, 257, -162, -333, 85,
	-334, 84, -267, 440, 443, -109, -117, -117, -200, 85,
	-307, 440, -311, -231, -231, -231, -231, -114, -261, -109,
	-109, -179, 90, -109, -109, 92, 92, -334, -308, -109,
	-109, -333, 64, 16, 14, -333, -333, -240, -172, -173,
	15, 17, -186, 51, -184, 50, -184, -194, 17, 17,
	90, 17, 90, 121, -210, -109, -163, 55, -9, -231,
	-161, -231, -174, -109, 83, -109, -148, -148, -109, -154,
	422, 423, 424, 425, 83, -109, 85, 85, -200, -299,
	-55, 85, -198, 92, 85, -162, -89, -333, 253, -328,
	-301, 444, 444, -334, 23, -306, -305, -232, 83, 75,
	-90, 145, 440, -334, -334, -334, -334, -334, 85, 85,
	-201, -334, -231, 224, 17, 17, -201, -201, -147, -173,
	-109, -159, -187, 52, 74, 106, 90, 90, 90, 10,
	-161, 203, -179, -198, -174, -334, -198, 85, 23, 85,
	573, 121, 85, 253, -9, 84, 135, -198, -140, -334,
	438, 71, 441, 84, -334, -334, -334, 74, 106, -206,
	-231, 85, -179, 85, -183, -9, 83, -3, -334, -73,
	440, -305, -284, -232, 90, 92, 85, 60, 439, 442,
	-231, 224, -319, -320, 74, -329, -326, 103, 127, 99,
	-327, 112, 113, -73, -109, 83, -74, 268, 531, -312,
	60, -320, 74, 11, 10, 103, 90, 85, -198, 229,
	-307, 440, -318, 237, 232, 235, 30, -318, -4, 572,
	85, 270, 441, 231, 29, 103, 92, -4, 442,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 712,
	712, 712, 0, 712, 0, 0, 712, -2, -2, 712,
	1162, 0, 712, 0, 0, -2, 644, 646, 0, 648,
	-2, 0, 0, 657, 1621, 1621, 707, 0, 0, 0,
	0, 0, 712, 712, 712, 712, 1023, 48, 712, 0,
	83, 84, 663, 664, 665, 63, 0, 1619, 1, 3,
	69, 73, 0, 0, 0, 56, 1032, 0, 76, 0,
	0, 716, 0, 714, 0, 1145, 712, 712, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 142, 143, 0,
	147, 510, 450, 493, 448, 479, -2, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 343, 343, 0, 0, -2, 441, 441, 441, 0,
	0, 0, 476, 1147, 396, 343, 343, 0, 343, 343,
	343, 343, 0, 0, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 1049,
	146, 1163, 1160, 1161, 38, 39, 40, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 0, 1139, 0, 574,
	811, 0, 635, 635, 0, 635, 635, 635, 635, 0,
	0, 0, 586, 0, 0, 0, 0, 632, 0, 0,
	605, 607, 0, 632, 0, 638, 0, 619, 635, 1622,
	1622, 1622, 1130, 0, 629, 627, 641, 642, 624, 625,
	643, 647, 0, 652, 655, 1156, 1157, 0, 670, 47,
	1393, 662, 675, 676, 0, 708, 709, 43, 907, 0,
	833, 837, 848, 861, 862, 863, 864, 865, 867, 868,
	0, 0, 0, 0, 873, 874, 0, 0, 0, 0,
	0, 888, 0, 0, 0, 0, 0, 1004, 0, 968,
	968, 924, 968, 970, 970, 0, 0, 0, 1618, 1436,
	1519, 1565, 0, 1013, 0, 0, 0, 0, 0, 0,
	251, 252, 906, 1119, 970, 970, 970, 970, 938, 939,
	940, 941, 942, -2, -2, 198, 199, 200, 201, 202,
	203, 204, 0, 194, 0, 256, 257, 253, 254, 255,
	890, 891, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 1621, 0, 685, 0, 0, 0, 0,
	0, 1032, 0, 1024, 1023, 61, 0, 712, -2, 0,
	0, 0, 0, 45, 0, 50, 770, 75, 74, 1071,
	0, 0, 0, 57, 1033, 65, 67, 1034, 0, 717,
	718, 0, 748, 752, 0, 713, 0, 0, 1146, 1145,
	1145, 100, 0, 1561, 1123, -2, -2, 0, 0, 1158,
	1159, 1132, -2, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, -2, 0, 0,
	156, 157, 0, 41, 369, 0, 152, 0, 363, 313,
	1049, 0, 0, 0, 0, 0, 712, 0, 1140, 137,
	138, 144, 145, 343, 343, 490, 0, 0, 146, 146,
	457, 458, 459, 0, 0, -2, 367, 0, 442, 0,
	0, 357, 357, 361, 359, 360, 0, 0, 0, 0,
	0, 0, 470, 0, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 552, 0, 344, 0, 488, 489,
	397, 0, 0, 0, 0, 468, 469, 0, 0, 1148,
	1149, 0, 0, 343, 343, 0, 0, 0, 0, 343,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 1062, 0,
	0, 0, -2, 0, 566, 0, 0, 0, 1141, 1141,
	0, 573, 0, 575, 576, 0, 0, 577, 0, 632,
	632, 630, 631, 579, 580, 581, 582, 635, 0, 0,
	352, 353, 354, 632, 635, 0, 635, 635, 635, 635,
	632, 632, 632, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1622, 1622, 1622, 638, 635, 0, 615,
	0, 616, 617, 620, 621, 1623, 1624, 1178, 622, 623,
	1131, 645, 653, 656, 673, 671, 672, 674, 666, 667,
	668, 669, 0, 687, 688, 693, 0, 0, 0, 0,
	699, 700, 701, 0, 0, 704, 705, 706, 0, 0,
	0, 0, 831, 0, 0, 896, 897, 898, 899, 900,
	901, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 869, 870, 871, 872, 875, 0, 0, 0,
	880, 881, 0, 0, 0, 0, 0, 722, 0, 1005,
	0, 922, 0, 923, 925, 926, 0, 927, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 0, 0, 732,
	732, 0, 0, 188, 189, 190, 191, 205, 206, 207,
	208, 209, 258, 1013, 0, 906, 0, 0, 44, 677,
	678, 0, 794, 1151, 0, 0, 728, 0, 55, 64,
	66, 1032, 59, 1032, 0, 734, 0, 0, -2, -2,
	735, 741, 742, 743, 744, 745, 52, 1620, 53, 0,
	72, 0, 46, 0, 0, 0, 0, 325, 1074, 0,
	0, 1025, 1026, 1029, 0, 749, 753, 0, 755, 756,
	0, 715, 0, 98, 0, 810, 0, 0, 0, 1561,
	1129, 0, 102, 103, 0, 0, 0, 331, 1134, 1135,
	1136, -2, 350, 0, 331, 320, 264, 265, 266, 313,
	268, 313, 313, 313, 313, 325, 325, 325, 325, 296,
	297, 298, 299, 300, 0, 0, 283, 313, 313, 313,
	313, 303, 304, 305, 306, 307, 308, 309, 310, 269,
	270, 271, 272, 273, 274, 275, 276, 277, 315, 315,
	315, 317, 317, 0, 42, 0, 335, 0, 1029, 0,
	1062, 1143, 1153, 0, 0, 0, 1143, 120, 0, 0,
	491, 521, 451, 480, 492, 0, 454, 455, -2, 0,
	0, 441, 0, 443, 0, 351, 0, -2, 0, 361,
	0, 357, 361, 358, 361, 349, 362, 472, 473, 474,
	0, 532, 780, 0, 0, 0, 0, 0, 538, 539,
	540, 0, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 481, 482, 483, 484, 485, 486, 487, 0,
	0, 443, 0, 477, 0, 398, 399, 0, 0, 402,
	403, 404, 405, 0, 0, 408, 409, 410, 797, 798,
	411, 435, 436, 437, 412, 413, 414, 415, 416, 417,
	418, 429, 430, 431, 432, 433, 434, 419, 420, 421,
	422, 423, 426, 0, 130, 1053, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1141, 0, 0,
	0, 0, 731, 812, 1164, 1165, 636, 637, 0, 355,
	356, 635, 635, 583, 606, 0, 635, 587, 608, 588,
	590, 589, 591, 610, 611, 635, 594, 633, 634, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 612,
	613, 614, 639, 0, 0, 654, 658, 659, 660, 661,
	0, 0, 690, 94, 695, 696, 697, 698, 710, 703,
	908, 828, 829, 830, 832, 834, 0, 892, 894, 836,
	838, 903, 904, 905, 0, 0, 0, 0, 0, 842,
	846, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 866, 983, 984, 985, 883, 884, 0,
	746, 0, 0, 0, 882, 0, 0, 0, 0, 723,
	724, 1011, 1008, 0, 0, 969, 971, 0, 0, 0,
	0, 947, 948, 949, 950, 951, 952, 953, 954, 955,
	956, 957, 958, 959, 960, 961, 962, 963, 964, 965,
	966, 967, 986, 0, 0, 1004, 0, 885, 886, 887,
	0, 0, 0, 0, 733, 1014, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 1118, 0, 680, 681, 683,
	0, 814, 0, 795, 0, 0, 1152, 686, 0, 727,
	0, 730, 58, 60, 739, 740, 0, 757, 736, 54,
	49, 0, 0, 772, 1072, 325, 1094, 0, 329, 330,
	1035, 1036, 0, 1028, 1030, 1031, 77, 754, 750, 0,
	826, 0, 0, 809, 0, 760, 762, 763, 764, 792,
	0, 0, 0, 0, 96, 811, 1124, 101, 0, 0,
	106, 107, 1125, 1126, 1127, 1128, 0, 510, -2, 393,
	158, 160, 161, 162, 153, -2, 323, 321, 322, 267,
	325, 325, 290, 291, 292, 293, 294, 295, 0, 0,
	284, 285, 286, 287, 278, 0, 279, 280, 281, 0,
	282, 368, 0, 1037, 336, 337, 339, 343, 0, 0,
	0, 364, 365, 0, 1053, 0, 0, 0, 1154, 1153,
	1153, 1153, 0, 148, 149, 150, 151, 527, 0, 0,
	522, 525, 526, 146, 0, 0, 154, 445, 444, 0,
	559, 0, 366, 0, 0, 361, 361, 346, 347, 475,
	0, 0, 534, 535, 536, 537, 0, 0, 0, 443,
	445, 331, 0, 400, 401, 406, 407, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 505,
	506, 507, 508, 509, 1050, 1051, 1052, 0, 0, 567,
	0, 0, 385, 92, 1142, 572, 632, 593, 609, 632,
	585, 592, 618, 650, 694, 0, 0, 0, 0, 702,
	0, 835, 893, 895, 839, 0, 843, 847, 0, 0,
	0, 0, 0, 0, 0, 889, 913, 914, 0, 0,
	1023, 0, 1009, 0, 0, 921, 972, 0, 0, 0,
	0, 0, 932, 933, 0, 935, 0, 0, 909, 0,
	0, 732, 0, 973, 974, 975, 976, 977, 1014, 679,
	682, 684, 768, 815, 816, 0, 0, 0, 0, 796,
	1150, 725, 726, 729, -2, 0, 0, 1016, 0, 0,
	757, 826, 758, 0, 737, 51, 771, 0, 1076, 1075,
	1088, 1101, 326, 327, 328, 1027, 0, 1032, 0, 1112,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 0,
	0, 799, 0, 0, 802, 0, 0, 0, 0, 793,
	0, 0, 0, 0, -2, 0, 0, 90, 91, 0,
	0, 0, 104, 105, 0, 0, 111, 332, 333, 139,
	146, 395, 159, 375, 0, 0, 263, 324, 288, 289,
	0, 311, 0, 0, 0, 388, 116, 1041, 1040, 343,
	343, 338, 0, 341, 0, 1155, 314, 0, 129, 0,
	0, 0, 0, 0, 135, 516, 0, 0, 523, 0,
	0, 0, 449, 0, 460, 461, 0, 531, 558, 0,
	563, 335, 0, 345, 348, 781, 0, 0, 462, 0,
	445, 466, 467, 478, 427, 428, 425, 0, 0, 1063,
	1064, 1069, 1067, 1068, 121, 498, 500, 499, 503, 0,
	0, 496, 0, 385, 1037, 0, 571, 386, 387, 635,
	635, 689, 95, 0, 692, 0, 0, 0, 840, 844,
	747, 0, 0, 313, 313, 991, 313, 317, 994, 313,
	996, 313, 999, 313, 1002, 1003, 0, 0, 0, 0,
	1006, 920, 1012, 0, 0, 0, 0, 931, 0, 0,
	0, 0, 0, 943, 0, 0, 910, 911, 0, 1015,
	817, 822, 822, 822, 0, 0, 0, 1137, 1138, 1017,
	1018, 826, 1019, 759, 738, 773, 1094, 0, 1087, 0,
	-2, 1096, 0, 0, 0, 1102, 751, 78, 827, 81,
	0, 1112, 1120, 0, 1103, 1114, 1116, 0, 0, 0,
	1108, 0, 826, 761, 788, 790, 0, 785, 800, 801,
	803, 0, 805, 0, 807, 808, 770, 766, 767, 0,
	98, 0, 826, 826, 97, 0, 813, 108, 109, 110,
	394, 163, 168, 0, 0, 0, 173, 0, 175, 0,
	376, 0, 260, 262, 0, 0, 166, 325, 0, 325,
	0, 318, 0, 377, 389, 0, 1038, 1039, 0, 0,
	340, 342, 0, 1144, 131, 0, 0, 0, 519, 0,
	528, 0, 0, 0, 0, 0, 0, 155, 446, 0,
	0, 334, 0, 0, 556, 553, 463, 0, 192, 193,
	195, 0, 0, 465, 770, 1054, 1055, 1056, 0, 1066,
	1070, 124, 0, 0, 0, 0, 568, 569, 570, 93,
	578, 584, 691, 711, 841, 845, 0, 877, 989, 325,
	992, 993, 995, 997, 998, 1000, 1001, 878, 879, 0,
	916, 0, 918, 1032, 0, 1010, 0, 0, 930, 0,
	0, 0, 936, 937, 0, 0, 0, 912, 0, 0,
	0, 0, 794, -2, 62, 1019, 1021, 0, 1081, 1079,
	1079, 1089, 1090, 0, 0, 1097, 0, 0, 0, 0,
	82, 0, 0, 0, 1117, 0, 0, 0, 0, 99,
	1023, 782, 789, 0, 0, 783, 0, 784, 804, 806,
	765, -2, 826, 826, 88, 89, 0, 169, 0, 171,
	186, 187, 0, 174, 176, 177, 259, 261, 0, 0,
	301, 312, 302, 0, 0, 390, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 770, 132, 133, 134, 511, 0, 521,
	0, 0, 0, 514, 0, 452, 0, 562, 0, 0,
	533, 0, 541, 0, 0, 0, 196, 197, 0, 1065,
	497, 0, 122, 123, 0, 0, 502, 978, 990, 0,
	0, 0, 1007, 0, 0, 0, 0, 934, 944, 945,
	946, 0, 823, 0, 0, 0, 0, 814, 1021, 80,
	0, 0, 1084, 0, 1077, 1080, 1078, 1091, 0, 0,
	1098, 0, 1100, 0, 1121, 1122, 1115, 0, 1107, 1110,
	1106, 1109, 1032, 786, 0, 791, 1023, 87, 0, 172,
	0, 0, 0, 0, 0, 0, 316, 319, 0, 0,
	0, 512, 0, 524, 515, 560, 561, 0, 564, 370,
	557, 554, 555, 464, 0, 125, 126, 0, 0, 0,
	0, 0, 0, 915, 917, 919, 928, 929, 987, 988,
	0, 819, 776, 777, 824, 825, 0, 0, 769, 79,
	1022, 1020, 1073, 0, 1082, 1083, 1092, 1093, 1099, 0,
	1105, 0, 85, 0, 1032, 170, 0, 180, 0, 520,
	0, 523, 513, 0, 1057, 0, 0, 0, 504, 876,
	0, 0, 0, 0, 818, 820, 821, 1085, 1086, 1113,
	1111, 787, 86, 371, 375, 1057, 0, 0, 565, 494,
	1059, 127, 128, 438, 439, 440, 121, 979, 0, 982,
	778, 779, 372, 373, 0, 164, 181, 182, 0, 0,
	185, 178, 179, 117, 0, 0, 0, 1060, 1061, 124,
	980, 374, 0, 0, 0, 183, 184, 529, 0, 0,
	501, 0, 378, 380, 381, 0, 0, 379, 517, 0,
	529, 1058, 0, 382, 383, 384, 530, 518, 981,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 128, 3, 3, 3, 154, 146, 3,
	83, 85, 151, 149, 84, 150, 203, 152, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 574,
	136, 135, 137, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 156, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 124, 3, 157,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 125,
	126, 127, 129, 130, 131, 132, 133, 134, 138, 139,
	140, 141, 142, 143, 144, 145, 147, 148, 153, 155,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:484
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:489
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:490
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:494
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:530
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:536
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:540
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:549
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:559
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:565
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:571
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:575
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:584
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:590
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:594
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:600
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:606
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:610
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:614
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:637
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:648
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:654
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:661
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:667
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:674
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:753
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:759
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:779
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:791
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:803
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:807
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:813
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:819
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:823
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:827
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:831
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:836
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:837
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:841
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:845
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:851
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:861
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:865
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:874
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:880
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:886
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:890
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:896
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:900
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:906
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:910
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:914
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:920
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:924
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:928
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:932
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:938
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:942
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:948
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:954
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:974
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:981
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:985
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:990
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:994
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1005
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1010
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1016
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1021
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1027
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1033
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1040
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1047
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1052
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1057
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1062
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1069
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1076
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1087
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1094
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1098
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1104
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1108
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1122
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1126
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1132
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1136
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1142
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1146
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1153
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1157
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1163
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1167
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1173
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1178
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1183
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1187
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1192
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1211
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1220
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1229
		{
			yyVAL.str = ""
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1233
		{
			yyVAL.str = ""
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1242
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1246
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1252
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1258
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1263
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1268
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1273
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1278
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1283
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1292
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1299
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1303
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1308
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1312
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1317
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1329
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1334
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1341
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1348
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1352
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1356
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1360
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1371
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1378
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1382
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1404
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1425
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1429
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.str = Armscii8Str
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = ASCIIStr
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = Big5Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = UBinaryStr
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1456
		{
			yyVAL.str = Cp1250Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = Cp1251Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = Cp1256Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = Cp1257Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = Cp850Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1476
		{
			yyVAL.str = Cp852Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = Cp866Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = Cp932Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = Dec8Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = EucjpmsStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = EuckrStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = Gb18030Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = Gb2312Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = GbkStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = Geostd8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = GreekStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = HebrewStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Hp8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Keybcs2Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Koi8rStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Koi8uStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Latin1Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Latin2Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = Latin5Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = Latin7Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = MacceStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = MacromanStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = SjisStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = Swe7Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = Tis620Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = Ucs2Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = UjisStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = Utf16Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Utf16leStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Utf32Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = Utf8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = Utf8mb4Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1610
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1618
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1625
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1633
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1639
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1643
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1647
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1651
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1657
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1668
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1828
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1873
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1878
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1882
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1887
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1891
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1899
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1903
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1909
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1921
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1925
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1930
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1934
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1939
		{
			yyVAL.str = ""
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1966
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1974
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1981
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1986
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1990
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1996
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2000
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2006
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2010
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2015
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2019
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2025
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2035
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2039
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2043
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2047
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2051
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2056
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.str = yyDollar[2].str
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2090
		{
			yyVAL.str = "key"
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = yyDollar[1].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2119
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2123
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2129
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2135
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2139
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2145
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2149
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2155
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2161
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2165
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2169
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2173
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2182
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2188
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2194
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2200
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2206
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2210
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2214
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2218
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2222
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2227
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2240
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2244
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2248
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2253
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2257
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2263
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2267
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2271
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2277
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2281
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2287
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2291
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2295
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2299
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2303
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2307
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2311
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2315
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2319
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2323
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2327
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2331
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2335
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2339
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2343
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2347
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2351
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2355
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2359
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2363
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2367
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2371
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2375
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2379
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2383
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2387
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2391
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2395
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2400
		{
			yyVAL.str = ""
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2404
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2408
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2440
		{
			yyVAL.str = ""
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2446
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2450
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2459
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2468
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2472
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2476
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2480
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2484
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2490
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2494
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2498
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2504
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2508
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2512
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2516
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2520
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2524
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2528
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2532
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2536
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2540
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2544
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2548
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2552
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2556
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2560
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2564
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2568
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2572
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2576
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2580
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2584
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2588
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2592
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2598
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2602
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2608
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2632
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2636
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2640
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2646
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2653
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2660
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2667
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2673
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2677
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2684
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2691
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2713
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2721
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2734
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2744
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2748
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2759
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2766
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2773
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2787
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2798
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2807
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2815
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2824
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2831
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2839
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2843
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2852
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2867
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2872
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2876
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2881
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2885
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2891
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2895
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2900
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2904
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2909
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2913
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2919
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2923
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2927
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2931
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2935
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2939
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2943
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2947
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2951
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2955
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2959
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2963
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2967
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2971
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2975
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2979
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2983
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2987
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2991
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2995
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2999
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3003
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3008
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3012
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3016
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3023
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3027
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3033
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3042
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3049
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3056
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3065
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3075
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3081
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3087
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3091
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3110
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3120
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3124
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3129
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3187
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3284
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3314
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3328
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3332
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3346
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3352
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3356
		{
			yyVAL.str = "extended "
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3362
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3366
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3372
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3376
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3382
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3386
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3390
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3400
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3404
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3414
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3420
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3424
		{
			yyVAL.empty = struct{}{}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3428
		{
			yyVAL.empty = struct{}{}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3434
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3448
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3464
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3468
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3473
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3475
		{
			yyVAL.empty = struct{}{}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3478
		{
			yyVAL.empty = struct{}{}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3480
		{
			yyVAL.empty = struct{}{}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3485
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3491
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3496
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3500
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3504
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3508
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3512
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3516
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.str = yyDollar[1].str
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.str = yyDollar[1].str
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.str = yyDollar[1].str
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3536
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3540
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3544
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3553
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3561
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3587
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3593
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3597
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3603
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3609
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3613
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3617
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3621
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3627
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3633
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3639
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3643
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3659
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3665
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3669
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3703
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3724
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3737
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3746
		{
			setAllowComments(yylex, true)
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3750
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3756
		{
			yyVAL.strs = nil
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3760
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3766
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3770
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3774
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3779
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.str = SQLCacheStr
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3792
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3796
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3810
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, StatementIdentifier: NewColIdentWithAt(string(yyDollar[5].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3825
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3844
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3849
		{
			yyVAL.strs = nil
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3857
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3861
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3865
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = SQLCacheStr
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = DistinctStr
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.str = DistinctStr
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3887
		{
			yyVAL.str = StraightJoinHint
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3891
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3901
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3905
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3911
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3915
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3919
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3923
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3928
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3936
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3943
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3948
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3952
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3958
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3964
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3978
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3982
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3986
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3992
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3998
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4002
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4011
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4017
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4021
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4027
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4031
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4037
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4041
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4045
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4049
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4055
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4059
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4072
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4076
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4080
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4084
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4090
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4092
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4096
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4098
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4102
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4104
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4107
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4109
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4112
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4116
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4120
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4133
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4137
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4141
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4147
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4153
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4157
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4161
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4165
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4171
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4175
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4185
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4199
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4205
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4214
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4220
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4230
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4234
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4238
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4242
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4247
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4251
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4255
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4259
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4269
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4276
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4280
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4284
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4288
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4292
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4296
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4303
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4307
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4311
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4315
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4321
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4325
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4329
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4333
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4337
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4341
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4345
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4349
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4353
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4357
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4361
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4367
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4371
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4375
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4379
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4383
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4387
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4391
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4395
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4399
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4403
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4407
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4411
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4415
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4421
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4425
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4429
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4433
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4437
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4441
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4445
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4449
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4453
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4457
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4461
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4465
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4469
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4473
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4477
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4481
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4485
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4489
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4493
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4501
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4505
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4513
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4517
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4523
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4527
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4531
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4537
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4541
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4547
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4551
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4558
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4562
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4566
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4570
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4576
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4580
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4584
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4588
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4592
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4596
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4600
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4606
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4610
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4614
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4621
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4627
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4631
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4663
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4671
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4675
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4679
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4683
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4687
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4691
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4695
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4699
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4710
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4714
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4720
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4724
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4729
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4733
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4737
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4741
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4745
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4749
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4753
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4757
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4761
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4765
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4769
		{
			yyLOCAL = &JSONValueModifierExpr{Name: yyDollar[1].colIdent, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonValueModifierParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4779
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4791
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONValueModifierParam
//line sql.y:4797
		{
			yyLOCAL = make([]JSONValueModifierParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].jsonValueModifierParam)
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4802
		{
			yySLICE := (*[]JSONValueModifierParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonValueModifierParam)
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4808
		{
			yyVAL.jsonValueModifierParam = JSONValueModifierParam{Path: yyDollar[1].str, Value: yyDollar[3].exprUnion()}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4812
		{
			yyVAL.jsonValueModifierParam = JSONValueModifierParam{PathIdentifier: NewColIdentWithAt(string(yyDollar[1].str), SingleAt), Value: yyDollar[3].exprUnion()}
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4818
		{
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4820
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4824
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4828
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4832
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4836
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4840
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4844
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4848
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4852
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4856
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4860
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4866
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4870
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4874
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4878
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4882
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4886
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4890
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4894
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4898
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4916
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4926
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4930
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4934
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4938
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4942
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4948
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4952
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4956
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4960
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4964
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4970
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4974
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4978
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4988
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4992
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4998
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5002
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5006
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5010
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5014
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5020
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5024
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5028
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5032
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5036
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5040
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5044
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5048
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5052
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5056
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5071
		{
			yyVAL.str = string("")
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5075
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5081
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5085
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5091
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5106
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5110
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5114
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5129
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5133
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5143
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5152
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5161
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5167
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5173
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5177
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5183
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5188
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5192
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5196
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5205
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5211
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5215
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5219
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5228
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5232
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5236
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5240
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5247
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5251
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5255
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5259
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5265
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5269
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5273
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5278
		{
			yyVAL.str = ""
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5282
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5286
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5290
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5295
		{
			yyVAL.str = ""
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5299
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5309
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5314
		{
			yyVAL.str = ""
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5318
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5323
		{
			yyVAL.str = "cascaded"
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5327
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5336
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5340
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5346
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5352
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5358
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5367
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5371
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5376
		{
			yyVAL.str = ""
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5380
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5386
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5390
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5396
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5400
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5404
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5409
		{
			yyVAL.str = ""
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5413
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5417
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5422
		{
			yyVAL.str = ""
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5426
		{
			yyVAL.str = " header"
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5431
		{
			yyVAL.str = ""
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5435
		{
			yyVAL.str = " manifest on"
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5439
		{
			yyVAL.str = " manifest off"
		}
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5444
		{
			yyVAL.str = ""
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5448
		{
			yyVAL.str = " overwrite on"
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5452
		{
			yyVAL.str = " overwrite off"
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5458
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5463
		{
			yyVAL.str = ""
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5467
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5473
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5477
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5483
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5487
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5492
		{
			yyVAL.str = ""
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5496
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5506
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5512
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5516
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5520
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5525
		{
			yyVAL.str = ""
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5529
		{
			yyVAL.str = " optionally"
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5542
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5546
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5550
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5554
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5558
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5564
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5568
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5572
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5576
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5581
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5585
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5591
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5595
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5601
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5605
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5611
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5626
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5630
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5636
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5642
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5646
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5652
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5656
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5660
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5664
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5668
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5676
		{
			yyVAL.str = "charset"
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5686
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5690
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5694
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5703
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5705
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5708
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5710
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5713
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5715
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5718
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5723
		{
			yyVAL.empty = struct{}{}
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.empty = struct{}{}
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5727
		{
			yyVAL.empty = struct{}{}
		}
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5731
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5740
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5745
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5747
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5751
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5757
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5761
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5768
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5774
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5784
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5788
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5795
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6273
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6282
		{
			decNesting(yylex)
		}
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6287
		{
			skipToEnd(yylex)
		}
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6292
		{
			skipToEnd(yylex)
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6296
		{
			skipToEnd(yylex)
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6300
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
