// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const RLIKE = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const ID = 57429
const AT_ID = 57430
const AT_AT_ID = 57431
const HEX = 57432
const STRING = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const VALUE_ARG = 57439
const LIST_ARG = 57440
const COMMENT = 57441
const COMMENT_KEYWORD = 57442
const BIT_LITERAL = 57443
const COMPRESSION = 57444
const JSON_PRETTY = 57445
const JSON_STORAGE_SIZE = 57446
const JSON_STORAGE_FREE = 57447
const JSON_CONTAINS = 57448
const JSON_CONTAINS_PATH = 57449
const JSON_EXTRACT = 57450
const JSON_KEYS = 57451
const JSON_OVERLAPS = 57452
const JSON_SEARCH = 57453
const JSON_VALUE = 57454
const EXTRACT = 57455
const NULL = 57456
const TRUE = 57457
const FALSE = 57458
const OFF = 57459
const DISCARD = 57460
const IMPORT = 57461
const ENABLE = 57462
const DISABLE = 57463
const TABLESPACE = 57464
const VIRTUAL = 57465
const STORED = 57466
const BOTH = 57467
const LEADING = 57468
const TRAILING = 57469
const EMPTY_FROM_CLAUSE = 57470
const LOWER_THAN_CHARSET = 57471
const CHARSET = 57472
const UNIQUE = 57473
const KEY = 57474
const EXPRESSION_PREC_SETTER = 57475
const OR = 57476
const XOR = 57477
const AND = 57478
const NOT = 57479
const BETWEEN = 57480
const CASE = 57481
const WHEN = 57482
const THEN = 57483
const ELSE = 57484
const END = 57485
const LE = 57486
const GE = 57487
const NE = 57488
const NULL_SAFE_EQUAL = 57489
const IS = 57490
const LIKE = 57491
const REGEXP = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const JSON_EXTRACT_OP = 57544
const JSON_UNQUOTE_EXTRACT_OP = 57545
const CREATE = 57546
const ALTER = 57547
const DROP = 57548
const RENAME = 57549
const ANALYZE = 57550
const ADD = 57551
const FLUSH = 57552
const CHANGE = 57553
const MODIFY = 57554
const DEALLOCATE = 57555
const REVERT = 57556
const SCHEMA = 57557
const TABLE = 57558
const INDEX = 57559
const VIEW = 57560
const TO = 57561
const IGNORE = 57562
const IF = 57563
const PRIMARY = 57564
const COLUMN = 57565
const SPATIAL = 57566
const FULLTEXT = 57567
const KEY_BLOCK_SIZE = 57568
const CHECK = 57569
const INDEXES = 57570
const ACTION = 57571
const CASCADE = 57572
const CONSTRAINT = 57573
const FOREIGN = 57574
const NO = 57575
const REFERENCES = 57576
const RESTRICT = 57577
const SHOW = 57578
const DESCRIBE = 57579
const EXPLAIN = 57580
const DATE = 57581
const ESCAPE = 57582
const REPAIR = 57583
const OPTIMIZE = 57584
const TRUNCATE = 57585
const COALESCE = 57586
const EXCHANGE = 57587
const REBUILD = 57588
const PARTITIONING = 57589
const REMOVE = 57590
const PREPARE = 57591
const EXECUTE = 57592
const MAXVALUE = 57593
const PARTITION = 57594
const REORGANIZE = 57595
const LESS = 57596
const THAN = 57597
const PROCEDURE = 57598
const TRIGGER = 57599
const VINDEX = 57600
const VINDEXES = 57601
const DIRECTORY = 57602
const NAME = 57603
const UPGRADE = 57604
const STATUS = 57605
const VARIABLES = 57606
const WARNINGS = 57607
const CASCADED = 57608
const DEFINER = 57609
const OPTION = 57610
const SQL = 57611
const UNDEFINED = 57612
const SEQUENCE = 57613
const MERGE = 57614
const TEMPORARY = 57615
const TEMPTABLE = 57616
const INVOKER = 57617
const SECURITY = 57618
const FIRST = 57619
const AFTER = 57620
const LAST = 57621
const VITESS_MIGRATION = 57622
const CANCEL = 57623
const RETRY = 57624
const COMPLETE = 57625
const CLEANUP = 57626
const THROTTLE = 57627
const UNTHROTTLE = 57628
const EXPIRE = 57629
const RATIO = 57630
const BEGIN = 57631
const START = 57632
const TRANSACTION = 57633
const COMMIT = 57634
const ROLLBACK = 57635
const SAVEPOINT = 57636
const RELEASE = 57637
const WORK = 57638
const BIT = 57639
const TINYINT = 57640
const SMALLINT = 57641
const MEDIUMINT = 57642
const INT = 57643
const INTEGER = 57644
const BIGINT = 57645
const INTNUM = 57646
const REAL = 57647
const DOUBLE = 57648
const FLOAT_TYPE = 57649
const DECIMAL_TYPE = 57650
const NUMERIC = 57651
const TIME = 57652
const TIMESTAMP = 57653
const DATETIME = 57654
const YEAR = 57655
const CHAR = 57656
const VARCHAR = 57657
const BOOL = 57658
const CHARACTER = 57659
const VARBINARY = 57660
const NCHAR = 57661
const TEXT = 57662
const TINYTEXT = 57663
const MEDIUMTEXT = 57664
const LONGTEXT = 57665
const BLOB = 57666
const TINYBLOB = 57667
const MEDIUMBLOB = 57668
const LONGBLOB = 57669
const JSON = 57670
const JSON_SCHEMA_VALID = 57671
const JSON_SCHEMA_VALIDATION_REPORT = 57672
const ENUM = 57673
const GEOMETRY = 57674
const POINT = 57675
const LINESTRING = 57676
const POLYGON = 57677
const GEOMETRYCOLLECTION = 57678
const MULTIPOINT = 57679
const MULTILINESTRING = 57680
const MULTIPOLYGON = 57681
const ASCII = 57682
const UNICODE = 57683
const NULLX = 57684
const AUTO_INCREMENT = 57685
const APPROXNUM = 57686
const SIGNED = 57687
const UNSIGNED = 57688
const ZEROFILL = 57689
const CODE = 57690
const COLLATION = 57691
const COLUMNS = 57692
const DATABASES = 57693
const ENGINES = 57694
const EVENT = 57695
const EXTENDED = 57696
const FIELDS = 57697
const FULL = 57698
const FUNCTION = 57699
const GTID_EXECUTED = 57700
const KEYSPACES = 57701
const OPEN = 57702
const PLUGINS = 57703
const PRIVILEGES = 57704
const PROCESSLIST = 57705
const SCHEMAS = 57706
const TABLES = 57707
const TRIGGERS = 57708
const USER = 57709
const VGTID_EXECUTED = 57710
const VITESS_KEYSPACES = 57711
const VITESS_METADATA = 57712
const VITESS_MIGRATIONS = 57713
const VITESS_REPLICATION_STATUS = 57714
const VITESS_SHARDS = 57715
const VITESS_TABLETS = 57716
const VITESS_TARGET = 57717
const VSCHEMA = 57718
const VITESS_THROTTLED_APPS = 57719
const NAMES = 57720
const GLOBAL = 57721
const SESSION = 57722
const ISOLATION = 57723
const LEVEL = 57724
const READ = 57725
const WRITE = 57726
const ONLY = 57727
const REPEATABLE = 57728
const COMMITTED = 57729
const UNCOMMITTED = 57730
const SERIALIZABLE = 57731
const CURRENT_TIMESTAMP = 57732
const DATABASE = 57733
const CURRENT_DATE = 57734
const NOW = 57735
const CURRENT_TIME = 57736
const LOCALTIME = 57737
const LOCALTIMESTAMP = 57738
const CURRENT_USER = 57739
const UTC_DATE = 57740
const UTC_TIME = 57741
const UTC_TIMESTAMP = 57742
const DAY = 57743
const DAY_HOUR = 57744
const DAY_MICROSECOND = 57745
const DAY_MINUTE = 57746
const DAY_SECOND = 57747
const HOUR = 57748
const HOUR_MICROSECOND = 57749
const HOUR_MINUTE = 57750
const HOUR_SECOND = 57751
const MICROSECOND = 57752
const MINUTE = 57753
const MINUTE_MICROSECOND = 57754
const MINUTE_SECOND = 57755
const MONTH = 57756
const QUARTER = 57757
const SECOND = 57758
const SECOND_MICROSECOND = 57759
const YEAR_MONTH = 57760
const WEEK = 57761
const REPLACE = 57762
const CONVERT = 57763
const CAST = 57764
const SUBSTR = 57765
const SUBSTRING = 57766
const GROUP_CONCAT = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const REGEXP_INSTR = 57792
const REGEXP_LIKE = 57793
const REGEXP_REPLACE = 57794
const REGEXP_SUBSTR = 57795
const MATCH = 57796
const AGAINST = 57797
const BOOLEAN = 57798
const LANGUAGE = 57799
const WITH = 57800
const QUERY = 57801
const EXPANSION = 57802
const WITHOUT = 57803
const VALIDATION = 57804
const UNUSED = 57805
const ARRAY = 57806
const BYTE = 57807
const CUME_DIST = 57808
const DESCRIPTION = 57809
const DENSE_RANK = 57810
const EMPTY = 57811
const EXCEPT = 57812
const FIRST_VALUE = 57813
const GROUPING = 57814
const GROUPS = 57815
const JSON_TABLE = 57816
const LAG = 57817
const LAST_VALUE = 57818
const LATERAL = 57819
const LEAD = 57820
const NTH_VALUE = 57821
const NTILE = 57822
const OF = 57823
const OVER = 57824
const PERCENT_RANK = 57825
const RANK = 57826
const RECURSIVE = 57827
const ROW_NUMBER = 57828
const SYSTEM = 57829
const WINDOW = 57830
const ACTIVE = 57831
const ADMIN = 57832
const AUTOEXTEND_SIZE = 57833
const BUCKETS = 57834
const CLONE = 57835
const COLUMN_FORMAT = 57836
const COMPONENT = 57837
const DEFINITION = 57838
const ENFORCED = 57839
const ENGINE_ATTRIBUTE = 57840
const EXCLUDE = 57841
const FOLLOWING = 57842
const GEOMCOLLECTION = 57843
const GET_MASTER_PUBLIC_KEY = 57844
const HISTOGRAM = 57845
const HISTORY = 57846
const INACTIVE = 57847
const INVISIBLE = 57848
const LOCKED = 57849
const MASTER_COMPRESSION_ALGORITHMS = 57850
const MASTER_PUBLIC_KEY_PATH = 57851
const MASTER_TLS_CIPHERSUITES = 57852
const MASTER_ZSTD_COMPRESSION_LEVEL = 57853
const NESTED = 57854
const NETWORK_NAMESPACE = 57855
const NOWAIT = 57856
const NULLS = 57857
const OJ = 57858
const OLD = 57859
const OPTIONAL = 57860
const ORDINALITY = 57861
const ORGANIZATION = 57862
const OTHERS = 57863
const PARTIAL = 57864
const PATH = 57865
const PERSIST = 57866
const PERSIST_ONLY = 57867
const PRECEDING = 57868
const PRIVILEGE_CHECKS_USER = 57869
const PROCESS = 57870
const RANDOM = 57871
const REFERENCE = 57872
const REQUIRE_ROW_FORMAT = 57873
const RESOURCE = 57874
const RESPECT = 57875
const RESTART = 57876
const RETAIN = 57877
const REUSE = 57878
const ROLE = 57879
const SECONDARY = 57880
const SECONDARY_ENGINE = 57881
const SECONDARY_ENGINE_ATTRIBUTE = 57882
const SECONDARY_LOAD = 57883
const SECONDARY_UNLOAD = 57884
const SIMPLE = 57885
const SKIP = 57886
const SRID = 57887
const THREAD_PRIORITY = 57888
const TIES = 57889
const UNBOUNDED = 57890
const VCPU = 57891
const VISIBLE = 57892
const RETURNING = 57893
const FORMAT = 57894
const TREE = 57895
const VITESS = 57896
const TRADITIONAL = 57897
const LOCAL = 57898
const LOW_PRIORITY = 57899
const NO_WRITE_TO_BINLOG = 57900
const LOGS = 57901
const ERROR = 57902
const GENERAL = 57903
const HOSTS = 57904
const OPTIMIZER_COSTS = 57905
const USER_RESOURCES = 57906
const SLOW = 57907
const CHANNEL = 57908
const RELAY = 57909
const EXPORT = 57910
const AVG_ROW_LENGTH = 57911
const CONNECTION = 57912
const CHECKSUM = 57913
const DELAY_KEY_WRITE = 57914
const ENCRYPTION = 57915
const ENGINE = 57916
const INSERT_METHOD = 57917
const MAX_ROWS = 57918
const MIN_ROWS = 57919
const PACK_KEYS = 57920
const PASSWORD = 57921
const FIXED = 57922
const DYNAMIC = 57923
const COMPRESSED = 57924
const REDUNDANT = 57925
const COMPACT = 57926
const ROW_FORMAT = 57927
const STATS_AUTO_RECALC = 57928
const STATS_PERSISTENT = 57929
const STATS_SAMPLE_PAGES = 57930
const STORAGE = 57931
const MEMORY = 57932
const DISK = 57933
const PARTITIONS = 57934
const LINEAR = 57935
const RANGE = 57936
const LIST = 57937
const SUBPARTITION = 57938
const SUBPARTITIONS = 57939
const HASH = 57940

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"RLIKE",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	13, 47,
	14, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	616, 145,
	-2, 153,
	-1, 48,
	133, 153,
	173, 153,
	334, 153,
	-2, 498,
	-1, 55,
	36, 739,
	234, 739,
	245, 739,
	280, 753,
	281, 753,
	-2, 741,
	-1, 60,
	236, 766,
	-2, 764,
	-1, 114,
	233, 1308,
	-2, 119,
	-1, 116,
	1, 146,
	616, 146,
	-2, 153,
	-1, 127,
	134, 384,
	239, 384,
	-2, 487,
	-1, 146,
	133, 153,
	173, 153,
	334, 153,
	-2, 507,
	-1, 704,
	218, 1329,
	-2, 1325,
	-1, 705,
	218, 1330,
	-2, 1326,
	-1, 780,
	60, 834,
	-2, 849,
	-1, 817,
	149, 1742,
	-2, 112,
	-1, 818,
	149, 1579,
	-2, 113,
	-1, 824,
	149, 1663,
	-2, 1302,
	-1, 973,
	149, 1507,
	-2, 1299,
	-1, 1014,
	244, 41,
	249, 41,
	-2, 395,
	-1, 1098,
	1, 554,
	616, 554,
	-2, 153,
	-1, 1340,
	60, 835,
	-2, 854,
	-1, 1341,
	60, 836,
	-2, 855,
	-1, 1394,
	133, 153,
	173, 153,
	334, 153,
	-2, 434,
	-1, 1473,
	134, 384,
	239, 384,
	-2, 487,
	-1, 1482,
	244, 42,
	249, 42,
	-2, 396,
	-1, 1662,
	4, 0,
	5, 0,
	-2, 952,
	-1, 1792,
	218, 1334,
	-2, 1328,
	-1, 1880,
	133, 153,
	173, 153,
	334, 153,
	-2, 435,
	-1, 1887,
	26, 174,
	-2, 176,
	-1, 2140,
	88, 39,
	-2, 891,
	-1, 2197,
	78, 94,
	88, 94,
	-2, 911,
	-1, 2265,
	591, 666,
	-2, 640,
	-1, 2408,
	50, 1270,
	-2, 1264,
	-1, 2637,
	88, 39,
	-2, 892,
	-1, 2675,
	8, 53,
	19, 53,
	21, 53,
	89, 53,
	-2, 883,
	-1, 2970,
	591, 666,
	-2, 654,
	-1, 3037,
	23, 1665,
	33, 1665,
	174, 1665,
	256, 1665,
	314, 1665,
	315, 1665,
	316, 1665,
	317, 1665,
	318, 1665,
	319, 1665,
	320, 1665,
	322, 1665,
	323, 1665,
	324, 1665,
	325, 1665,
	326, 1665,
	327, 1665,
	328, 1665,
	329, 1665,
	330, 1665,
	331, 1665,
	332, 1665,
	333, 1665,
	335, 1665,
	337, 1665,
	338, 1665,
	339, 1665,
	340, 1665,
	341, 1665,
	342, 1665,
	343, 1665,
	344, 1665,
	345, 1665,
	348, 1665,
	349, 1665,
	350, 1665,
	351, 1665,
	352, 1665,
	353, 1665,
	354, 1665,
	355, 1665,
	356, 1665,
	473, 1665,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 45129

var yyAct = [...]int{
	704, 2778, 2779, 3099, 713, 2777, 2951, 3109, 3070, 1877,
	3071, 2752, 1397, 3035, 2557, 3013, 1810, 2463, 706, 2470,
	2090, 1161, 2363, 3, 693, 37, 2520, 2897, 1830, 2511,
	2796, 2525, 2522, 2521, 2519, 2524, 2523, 773, 795, 2421,
	2739, 96, 2424, 2478, 2927, 2128, 1947, 2540, 2539, 1355,
	2425, 186, 1812, 617, 186, 2422, 582, 186, 2801, 2646,
	2361, 621, 597, 691, 186, 2362, 2325, 2168, 707, 692,
	643, 2542, 186, 2640, 1850, 2191, 2666, 694, 1319, 614,
	2409, 2419, 2155, 1834, 2632, 1110, 1046, 186, 2562, 2230,
	2262, 1935, 1910, 615, 2308, 1915, 2231, 1978, 2232, 822,
	796, 2180, 777, 1866, 781, 38, 1855, 36, 2147, 597,
	2130, 1854, 597, 186, 597, 613, 976, 2161, 775, 1342,
	1702, 1762, 798, 155, 1649, 1761, 141, 1786, 1956, 1451,
	819, 1934, 1994, 1498, 1842, 1917, 2300, 2224, 95, 1324,
	1692, 1004, 1386, 2199, 1364, 91, 609, 1857, 626, 1598,
	1322, 1247, 1669, 1714, 1182, 1594, 1480, 1015, 1487, 1009,
	1932, 980, 984, 1012, 983, 1578, 1010, 1011, 787, 1153,
	159, 1789, 1906, 1385, 1758, 1383, 1369, 1159, 119, 117,
	118, 1446, 1835, 98, 1603, 783, 1472, 782, 809, 124,
	1022, 125, 785, 550, 1803, 1094, 1139, 76, 1254, 1250,
	85, 97, 2960, 600, 2255, 89, 604, 3100, 1949, 1950,
	1951, 768, 2740, 2508, 1949, 2284, 2283, 1992, 120, 2253,
	784, 77, 8, 803, 1563, 808, 7, 6, 2732, 2695,
	1048, 90, 2316, 2317, 586, 126, 789, 2782, 553, 2983,
	188, 189, 190, 1064, 1065, 1066, 2984, 1069, 1070, 1071,
	1072, 2782, 982, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	1051, 977, 605, 102, 1002, 776, 1656, 2530, 774, 188,
	189, 190, 1655, 586, 816, 1654, 790, 120, 1807, 1808,
	1653, 823, 1025, 1183, 1349, 1000, 999, 998, 797, 1652,
	1651, 1634, 607, 1001, 608, 3056, 2126, 2405, 2530, 1926,
	2613, 1052, 1055, 1056, 104, 105, 2275, 108, 1982, 1026,
	114, 2527, 2781, 183, 583, 3074, 548, 1183, 2157, 1643,
	2984, 993, 988, 3120, 1920, 2528, 2781, 3069, 3090, 1980,
	2278, 1661, 1067, 2893, 3045, 1061, 769, 770, 771, 772,
	87, 2892, 780, 2745, 1050, 120, 2746, 2534, 3043, 1049,
	3117, 78, 1981, 3023, 78, 3103, 2528, 3049, 3050, 2979,
	3083, 569, 182, 2753, 3014, 2480, 2481, 78, 1975, 2036,
	811, 812, 3044, 567, 3022, 2171, 2978, 2324, 2534, 586,
	1216, 3040, 78, 2595, 1461, 80, 121, 2292, 2127, 1193,
	2208, 2291, 997, 2207, 1103, 1104, 2209, 2459, 2466, 164,
	2172, 2902, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225,
	1224, 1226, 1227, 564, 2460, 2461, 2814, 1872, 1873, 1387,
	1838, 1388, 578, 1193, 2315, 587, 1106, 2033, 1871, 87,
	1129, 1117, 87, 767, 2034, 1156, 1118, 574, 766, 2952,
	2220, 586, 2213, 2467, 1116, 87, 1115, 2643, 1117, 2256,
	995, 2351, 1809, 1118, 1890, 1889, 2531, 161, 586, 162,
	87, 1744, 1642, 1130, 1919, 2164, 2165, 2586, 2584, 2469,
	2479, 595, 599, 593, 587, 182, 1134, 1135, 2563, 181,
	2301, 3075, 2482, 2464, 1123, 2263, 1326, 2531, 1189, 2552,
	1584, 1181, 1957, 2559, 2287, 2326, 1995, 2553, 1068, 121,
	2480, 2481, 3076, 1138, 3102, 1093, 554, 2465, 556, 570,
	1579, 589, 164, 588, 560, 1150, 558, 562, 571, 563,
	1099, 557, 1189, 568, 2734, 1097, 559, 572, 573, 576,
	579, 580, 581, 577, 575, 2303, 566, 590, 186, 2471,
	186, 1155, 2733, 186, 1644, 1645, 1646, 2000, 1131, 1736,
	1725, 1726, 1727, 1728, 1738, 1729, 1730, 1731, 1743, 1739,
	1732, 1733, 1740, 1741, 1742, 1734, 1735, 1737, 996, 1124,
	161, 1136, 162, 597, 1163, 597, 597, 2328, 2560, 1553,
	587, 1137, 2012, 2015, 2013, 3057, 2014, 1074, 165, 1073,
	597, 597, 181, 1132, 1133, 2561, 1146, 171, 1148, 1997,
	2877, 1035, 2001, 1836, 1837, 2479, 1033, 1999, 2352, 2006,
	2003, 2005, 2004, 2007, 2008, 1175, 37, 2482, 1005, 1960,
	87, 1851, 1006, 1554, 1006, 1555, 1044, 2730, 586, 1043,
	1113, 1329, 1119, 1120, 1121, 1122, 1145, 1147, 1042, 1041,
	1040, 1039, 587, 2338, 2337, 2336, 2330, 1038, 2334, 1998,
	2329, 992, 2327, 1037, 994, 1157, 1158, 2332, 1032, 587,
	2482, 1465, 1045, 981, 1228, 3081, 2331, 981, 1018, 1838,
	3121, 979, 2959, 981, 2254, 997, 1092, 1101, 2034, 1107,
	1228, 1003, 1109, 2333, 2335, 1188, 1185, 1186, 1187, 1192,
	1194, 1191, 1017, 1190, 1585, 3113, 1923, 2307, 1586, 1587,
	1184, 165, 1979, 1595, 1127, 2304, 1231, 1232, 1233, 1234,
	171, 2289, 1933, 591, 156, 810, 1239, 2903, 1242, 1188,
	1185, 1186, 1187, 1192, 1194, 1191, 2468, 1190, 2222, 2257,
	1317, 584, 2644, 1143, 1184, 1486, 1924, 1144, 1986, 2729,
	1096, 2131, 2133, 2501, 1922, 1036, 585, 1149, 2320, 997,
	1034, 989, 1165, 1166, 3048, 1164, 1591, 186, 991, 990,
	1151, 597, 597, 1054, 2048, 1312, 1063, 1235, 1169, 1017,
	1057, 1142, 2780, 1053, 1024, 2977, 2286, 186, 1925, 1565,
	1564, 1566, 1567, 1568, 2693, 2694, 2780, 1459, 1921, 1332,
	1458, 1457, 1024, 1336, 2273, 1592, 597, 2277, 3047, 777,
	186, 2965, 1330, 1455, 1333, 597, 552, 995, 775, 1335,
	81, 597, 77, 1318, 1178, 2532, 2533, 86, 1176, 1177,
	86, 2035, 547, 1229, 1230, 2948, 819, 156, 2536, 587,
	2682, 2662, 1252, 86, 1253, 1256, 1095, 2310, 2204, 1977,
	1485, 2276, 2309, 2167, 2114, 1802, 2532, 2533, 86, 2162,
	1373, 996, 1836, 1837, 2299, 1294, 2310, 2298, 1108, 2536,
	1878, 2309, 157, 116, 1228, 1227, 1583, 2458, 1334, 169,
	1105, 1102, 95, 1023, 1114, 1024, 1318, 2472, 792, 1154,
	1024, 2476, 1140, 111, 1300, 1301, 1302, 1303, 1304, 2475,
	2973, 1023, 1047, 1024, 1715, 2725, 2656, 1017, 1020, 1021,
	1996, 981, 1126, 2132, 1323, 1014, 1018, 2344, 1112, 3111,
	1588, 177, 3112, 1128, 3110, 1674, 1389, 98, 1179, 1715,
	1604, 2062, 2246, 2477, 1198, 996, 1013, 2810, 2473, 1675,
	1676, 1673, 1196, 2474, 1197, 1198, 1664, 1666, 1667, 1378,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 1197, 1198, 112, 3077, 2700, 176, 178, 179, 180,
	1665, 2699, 1320, 1964, 1495, 1331, 186, 1351, 774, 1354,
	1447, 1494, 776, 1484, 1023, 157, 1062, 1974, 1972, 1023,
	1456, 1969, 169, 1035, 1027, 1017, 1033, 823, 1374, 1029,
	1379, 1380, 1023, 1030, 1028, 2683, 3115, 1024, 1017, 1020,
	1021, 3078, 981, 597, 1384, 1482, 1014, 1018, 2885, 1969,
	1580, 2884, 1581, 1491, 1031, 1582, 2875, 1493, 1973, 2968,
	1496, 1497, 597, 597, 177, 597, 1141, 597, 597, 1976,
	597, 597, 597, 597, 597, 597, 1222, 1223, 1225, 1224,
	1226, 1227, 3122, 1337, 1528, 1529, 1971, 597, 1098, 1111,
	2770, 186, 1534, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 1605, 2992, 2941, 2769, 186, 176,
	178, 179, 180, 2040, 2041, 2042, 2707, 1492, 1462, 1463,
	1464, 597, 2706, 186, 1218, 1219, 1220, 1221, 1222, 1223,
	1225, 1224, 1226, 1227, 1593, 1573, 1023, 597, 1571, 186,
	87, 1027, 1017, 2696, 1527, 1396, 1029, 1530, 2993, 2942,
	1030, 1028, 2509, 814, 1672, 186, 2497, 1199, 1200, 1478,
	1548, 2759, 186, 2760, 1560, 1471, 2228, 3123, 2227, 1199,
	1200, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	597, 1843, 1844, 1929, 1538, 1539, 1349, 718, 719, 720,
	1544, 1545, 1574, 1719, 597, 597, 1500, 1720, 1501, 1572,
	1503, 1505, 1570, 1531, 1509, 1511, 1513, 1515, 1517, 1490,
	1489, 1558, 186, 1454, 1220, 1221, 1222, 1223, 1225, 1224,
	1226, 1227, 1557, 1556, 1468, 1546, 1481, 1469, 1559, 1467,
	1533, 188, 189, 190, 1540, 2690, 1537, 1358, 1600, 1608,
	1536, 1488, 1488, 1535, 1507, 2967, 1612, 2556, 1614, 1615,
	1616, 1617, 2945, 1199, 1200, 1621, 2944, 2943, 2880, 597,
	1199, 1200, 1577, 2865, 1699, 1699, 2864, 1633, 2809, 2807,
	1532, 2766, 1705, 597, 2704, 2071, 2689, 2564, 1697, 1697,
	2500, 2499, 1696, 1700, 188, 189, 190, 1359, 597, 597,
	1196, 1596, 1197, 1198, 1609, 1199, 1200, 1460, 2237, 120,
	2225, 1613, 1196, 1314, 1197, 1198, 1990, 1000, 999, 998,
	1989, 2346, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1670,
	188, 189, 190, 1677, 2211, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1678, 1833,
	1610, 1716, 1606, 1607, 3087, 1349, 1790, 1815, 1635, 1668,
	1632, 1650, 1601, 1569, 1561, 186, 1611, 1631, 1551, 1547,
	597, 1168, 1543, 1618, 1619, 1620, 1542, 1541, 1360, 1199,
	1200, 1639, 1640, 1152, 1199, 1200, 2153, 3101, 1759, 3085,
	1349, 3065, 1349, 92, 186, 2655, 1196, 597, 1197, 1198,
	1671, 1349, 101, 1196, 93, 1197, 1198, 186, 1199, 1200,
	2910, 597, 1820, 100, 1821, 99, 186, 2909, 186, 2869,
	186, 186, 597, 94, 94, 597, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1202, 1792, 1790, 597, 2868, 1196, 2751,
	1197, 1198, 2264, 819, 1759, 2242, 819, 1887, 1701, 2657,
	188, 189, 190, 2053, 1945, 1707, 1708, 2169, 95, 1349,
	2153, 3020, 100, 2052, 1794, 1795, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1225, 1224, 1226, 1227, 95, 2153, 3000,
	1199, 1200, 1349, 1349, 1791, 1199, 1200, 2153, 2996, 2988,
	1349, 597, 3030, 1349, 2169, 1853, 2153, 2961, 1936, 1937,
	1938, 1886, 1826, 1940, 1942, 1944, 2453, 1793, 2743, 2958,
	1796, 1797, 1196, 1792, 1197, 1198, 2034, 1196, 597, 1197,
	1198, 2609, 1349, 1195, 597, 1491, 2888, 1349, 1491, 2177,
	1491, 2049, 1896, 1897, 1898, 1899, 1968, 789, 1199, 1200,
	1814, 1196, 92, 1197, 1198, 1864, 1845, 2153, 2876, 94,
	2420, 1825, 1882, 93, 2972, 1849, 1348, 1852, 1881, 2176,
	1650, 2655, 1828, 1848, 3028, 1349, 2655, 1958, 2153, 3026,
	1349, 597, 1891, 597, 1892, 1893, 1894, 1895, 1912, 597,
	597, 1918, 188, 189, 190, 705, 1943, 1846, 2743, 1349,
	1902, 1903, 1904, 1905, 1970, 1885, 1869, 1868, 2153, 2741,
	1969, 1349, 1884, 1883, 823, 2660, 1349, 823, 1349, 1199,
	1200, 1195, 1349, 1196, 2177, 1197, 1198, 186, 1196, 2177,
	1197, 1198, 2926, 1349, 186, 2609, 1928, 1362, 2488, 1199,
	1200, 186, 186, 2393, 1955, 186, 187, 186, 1870, 187,
	1199, 1200, 187, 2049, 186, 1199, 1200, 598, 1913, 187,
	2084, 186, 1969, 1927, 2068, 1908, 1909, 187, 2084, 1349,
	1931, 1939, 188, 189, 190, 2200, 1941, 2490, 2489, 1199,
	1200, 1196, 187, 1197, 1198, 1199, 1200, 186, 2067, 1961,
	1025, 1963, 597, 1913, 1966, 1965, 1967, 1983, 1962, 2486,
	2487, 2486, 2485, 1361, 598, 2177, 1349, 598, 187, 598,
	1984, 1199, 1200, 2049, 1349, 2034, 2285, 1026, 1199, 1200,
	1450, 2267, 1969, 1985, 1349, 1199, 1200, 1488, 1952, 1987,
	1988, 1841, 1199, 1200, 2924, 1349, 2260, 2261, 2201, 2921,
	1349, 1353, 2025, 2026, 2592, 1199, 1200, 2028, 2203, 2153,
	2152, 1993, 1196, 1805, 1197, 1198, 2029, 1199, 1200, 1450,
	1449, 1395, 1394, 2913, 1349, 1647, 1650, 2051, 1590, 2631,
	1349, 1381, 1196, 2002, 1197, 1198, 101, 2149, 1008, 1007,
	2016, 2017, 2200, 1196, 2021, 1197, 1198, 100, 1196, 99,
	1197, 1198, 94, 2024, 2558, 2628, 1349, 3053, 2018, 3003,
	2027, 1670, 2626, 1349, 2044, 779, 2046, 87, 1216, 2899,
	1349, 1212, 1196, 1213, 1197, 1198, 2590, 1349, 1196, 2045,
	1197, 1198, 1356, 2866, 2821, 2724, 2030, 1214, 1215, 1211,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1225, 1224, 1226,
	1227, 2099, 1349, 2708, 1196, 2201, 1197, 1198, 2721, 2900,
	2049, 1196, 2032, 1197, 1198, 2034, 186, 1349, 1196, 2702,
	1197, 1198, 1199, 1200, 186, 1196, 2601, 1197, 1198, 597,
	1523, 1699, 1671, 2079, 2124, 597, 2043, 1216, 1196, 2319,
	1197, 1198, 3096, 87, 2600, 1697, 597, 1452, 1911, 2137,
	1196, 2554, 1197, 1198, 2709, 2710, 2711, 2141, 2512, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1225, 1224, 1226, 1227,
	186, 2514, 2510, 1216, 186, 2047, 2135, 2061, 2268, 1907,
	1901, 1524, 1525, 1526, 2173, 37, 1900, 1576, 1483, 2210,
	1479, 1448, 2059, 1216, 2193, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1225, 1224, 1226, 1227, 113, 1349, 1199, 1200,
	2234, 2233, 1792, 2077, 1097, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1225, 1224, 1226, 1227, 1926, 2154, 2667, 2668,
	1818, 3094, 1637, 1199, 1200, 2712, 3072, 597, 2982, 2918,
	2670, 2506, 1519, 186, 2058, 2505, 2504, 2420, 1199, 1200,
	186, 2247, 2019, 2673, 2672, 1196, 2150, 1197, 1198, 2234,
	2439, 2438, 1791, 1323, 597, 2163, 2125, 2442, 2440, 2111,
	2112, 597, 2443, 2441, 3059, 1491, 1491, 2192, 3021, 1832,
	597, 2146, 2713, 2714, 2715, 1357, 2221, 2223, 2151, 1520,
	1521, 1522, 2259, 3079, 1638, 1824, 2166, 2282, 2198, 2661,
	2398, 1199, 1200, 2397, 2444, 2281, 2186, 2187, 186, 186,
	186, 186, 186, 2197, 2214, 2940, 2236, 2057, 1918, 2202,
	2802, 2239, 2240, 2205, 2800, 2651, 2791, 2407, 2790, 186,
	186, 2212, 2091, 2182, 2185, 2186, 2187, 2183, 1589, 2184,
	2188, 1196, 2218, 1197, 1198, 186, 1199, 1200, 2648, 2226,
	2410, 2412, 2215, 793, 2238, 2484, 2647, 765, 1711, 2413,
	1059, 794, 2235, 1058, 597, 2572, 1196, 1167, 1197, 1198,
	2233, 2313, 1712, 2274, 2244, 2243, 2789, 121, 2248, 2249,
	2250, 1196, 2245, 1197, 1198, 2280, 2956, 1199, 1200, 1471,
	2182, 2185, 2186, 2187, 2183, 2653, 2184, 2188, 1843, 1844,
	2667, 2668, 92, 187, 1699, 187, 1699, 2343, 187, 1699,
	92, 775, 94, 93, 1699, 3107, 2502, 94, 1697, 2022,
	1697, 93, 2279, 1697, 2957, 597, 1199, 1200, 1697, 2339,
	2677, 2269, 2270, 2895, 1196, 2483, 1197, 1198, 598, 2190,
	598, 598, 1829, 801, 802, 597, 2383, 2293, 2294, 2295,
	2296, 2297, 2322, 2305, 101, 598, 598, 2302, 1199, 1200,
	186, 2364, 2366, 2364, 597, 100, 2364, 99, 1650, 2306,
	2369, 2364, 2873, 2321, 2011, 2370, 94, 2010, 597, 1196,
	2323, 1197, 1198, 2009, 2314, 597, 597, 2633, 186, 186,
	186, 186, 186, 2396, 2376, 2377, 2378, 2379, 2038, 2383,
	186, 2395, 99, 2932, 2340, 186, 2931, 2808, 186, 781,
	186, 2726, 2806, 186, 186, 186, 2357, 2417, 2805, 2798,
	1196, 2722, 1197, 1198, 2452, 2400, 2432, 1199, 1200, 1336,
	2193, 2311, 1347, 1343, 2312, 2401, 2371, 2372, 2373, 2374,
	2375, 101, 2629, 2423, 2652, 2650, 2515, 1344, 2423, 2498,
	2388, 2382, 100, 100, 99, 1953, 1466, 800, 186, 1196,
	2426, 1197, 1198, 1199, 1200, 2399, 101, 1199, 1200, 2797,
	2641, 597, 1822, 1823, 1346, 2149, 1345, 100, 2392, 597,
	2402, 2169, 1199, 1200, 186, 2454, 2414, 2415, 2455, 2353,
	783, 1196, 782, 1197, 1198, 2434, 2435, 186, 2437, 2433,
	2445, 2069, 2436, 1816, 95, 1199, 1200, 2538, 1375, 1350,
	1352, 2611, 2449, 2450, 1600, 186, 3097, 2456, 186, 2431,
	3098, 3097, 187, 1366, 106, 107, 598, 598, 2573, 3098,
	2495, 2496, 2389, 2390, 2391, 2517, 2946, 2492, 2688, 2494,
	2493, 791, 187, 103, 88, 1199, 1200, 2462, 2229, 2546,
	1, 2607, 2692, 3042, 565, 2545, 1806, 1321, 3073, 3038,
	1196, 598, 1197, 1198, 3039, 187, 2598, 1199, 1200, 1918,
	598, 1562, 1552, 2537, 2754, 1760, 598, 2896, 2518, 1959,
	2549, 2720, 1916, 1016, 146, 1879, 1880, 2516, 3016, 2597,
	2606, 110, 974, 109, 1019, 1125, 1196, 2503, 1197, 1198,
	1196, 2565, 1197, 1198, 597, 186, 2568, 2570, 2571, 1954,
	2567, 2744, 2219, 1888, 1401, 1196, 1399, 1197, 1198, 1347,
	1343, 1400, 1398, 2541, 2576, 1199, 1200, 1403, 1402, 2123,
	1199, 1200, 2070, 2582, 1344, 2612, 2550, 1641, 1196, 594,
	1197, 1198, 2189, 184, 1390, 2575, 1367, 1060, 555, 2491,
	1991, 2122, 561, 1240, 2566, 1636, 2394, 2569, 2206, 1340,
	1341, 1346, 820, 1345, 186, 813, 2579, 2580, 1817, 2581,
	2139, 2428, 2583, 2645, 2585, 2406, 2587, 2639, 1196, 2408,
	1197, 1198, 2691, 2156, 2411, 2634, 2635, 2404, 2939, 2799,
	3001, 2216, 1363, 186, 2060, 1713, 1858, 2642, 1663, 2649,
	1196, 619, 1197, 1198, 618, 616, 2674, 2142, 2170, 2121,
	2664, 1203, 186, 2654, 2120, 186, 186, 186, 708, 2129,
	1376, 2181, 2179, 2671, 2178, 597, 597, 2020, 1865, 2669,
	2665, 187, 2680, 2681, 3034, 1860, 1856, 2678, 2148, 2679,
	2546, 683, 627, 620, 2638, 612, 2545, 2686, 2687, 2685,
	2544, 2288, 2555, 2727, 2728, 2290, 2217, 2551, 1196, 1180,
	1197, 1198, 1339, 1196, 606, 1197, 1198, 987, 598, 597,
	597, 597, 597, 2697, 2698, 1710, 2901, 2963, 2037, 2703,
	2594, 2705, 1338, 1723, 1724, 2970, 2526, 598, 598, 2738,
	598, 2507, 598, 598, 2265, 598, 598, 598, 598, 598,
	598, 1946, 63, 41, 1751, 1199, 1200, 601, 3055, 1171,
	2750, 807, 598, 32, 31, 30, 187, 29, 28, 23,
	22, 21, 1699, 20, 1699, 2731, 2748, 2749, 19, 2735,
	2736, 2737, 2701, 187, 25, 18, 1697, 17, 1697, 16,
	2529, 3068, 3106, 2765, 115, 50, 598, 186, 187, 47,
	45, 2716, 123, 122, 2717, 2718, 2719, 48, 1199, 1200,
	44, 1100, 598, 2794, 187, 42, 27, 2761, 26, 15,
	14, 597, 13, 597, 2762, 12, 11, 10, 2773, 2364,
	187, 2364, 9, 5, 4, 2774, 35, 187, 34, 2108,
	2783, 33, 1699, 2815, 37, 1174, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 598, 1697, 24, 1199, 1200,
	2823, 2, 2819, 2803, 2817, 2804, 775, 2252, 2813, 598,
	598, 2811, 1948, 2795, 0, 0, 0, 2423, 1199, 1200,
	0, 0, 0, 0, 0, 597, 0, 187, 1196, 0,
	1197, 1198, 2107, 0, 0, 2426, 0, 0, 186, 2426,
	0, 597, 2827, 0, 0, 0, 2824, 2825, 1199, 1200,
	0, 0, 0, 2874, 597, 1199, 1200, 0, 0, 0,
	0, 1199, 1200, 0, 0, 0, 2870, 0, 1717, 2872,
	2871, 0, 1718, 0, 598, 2898, 0, 0, 0, 2915,
	2916, 1196, 2106, 1197, 1198, 2890, 0, 1699, 598, 597,
	2886, 2891, 0, 597, 597, 0, 0, 0, 0, 0,
	0, 1697, 2105, 598, 598, 2919, 0, 0, 2878, 1199,
	1200, 0, 0, 0, 0, 0, 0, 0, 0, 2881,
	2882, 2883, 597, 1199, 1200, 0, 2936, 1199, 1200, 0,
	0, 1196, 2104, 1197, 1198, 1350, 1804, 2933, 2934, 2103,
	2935, 0, 0, 0, 0, 2102, 0, 0, 0, 0,
	2950, 1196, 0, 1197, 1198, 0, 0, 2947, 2949, 0,
	0, 0, 2953, 0, 0, 0, 775, 597, 1827, 0,
	187, 0, 0, 0, 0, 598, 0, 2938, 805, 0,
	0, 1196, 186, 1197, 1198, 0, 0, 0, 1196, 0,
	1197, 1198, 2426, 2101, 1196, 2955, 1197, 1198, 0, 187,
	597, 186, 598, 1199, 1200, 0, 0, 2100, 0, 1199,
	1200, 2094, 187, 0, 0, 0, 598, 0, 0, 2971,
	37, 187, 0, 187, 0, 187, 187, 598, 2974, 2969,
	598, 0, 1199, 1200, 2966, 0, 1199, 1200, 0, 0,
	0, 598, 1196, 0, 1197, 1198, 610, 0, 0, 597,
	0, 0, 0, 1199, 1200, 2962, 1196, 0, 1197, 1198,
	1196, 0, 1197, 1198, 0, 0, 0, 1199, 1200, 0,
	1930, 0, 0, 597, 597, 1199, 1200, 0, 799, 1199,
	1200, 3002, 37, 0, 0, 0, 2994, 2093, 0, 597,
	3004, 0, 2999, 2092, 2898, 3017, 598, 3007, 186, 597,
	3015, 3024, 3012, 3009, 3008, 3006, 3011, 3010, 2423, 0,
	0, 0, 0, 0, 3033, 0, 2089, 0, 3051, 3041,
	2088, 3046, 0, 598, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 0, 3058, 1196, 2087, 1197, 1198,
	2975, 0, 1196, 0, 1197, 1198, 0, 0, 0, 3067,
	0, 2085, 0, 0, 597, 0, 0, 0, 0, 2081,
	0, 0, 0, 2080, 0, 1196, 597, 1197, 1198, 1196,
	3082, 1197, 1198, 1699, 0, 0, 598, 3091, 598, 3089,
	3095, 3093, 3080, 0, 598, 598, 1196, 1697, 1197, 1198,
	0, 3092, 0, 0, 0, 0, 0, 0, 0, 3108,
	1196, 0, 1197, 1198, 0, 3116, 3114, 0, 1196, 0,
	1197, 1198, 1196, 0, 1197, 1198, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1699, 3126, 3127, 2916, 187,
	3125, 0, 0, 0, 0, 0, 187, 187, 0, 1697,
	187, 0, 187, 3124, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2050, 0,
	0, 0, 2054, 0, 2055, 2056, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 2065, 2066, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2072, 2073, 2074, 2075, 2076, 0, 2078,
	0, 0, 0, 0, 0, 2082, 0, 2083, 0, 0,
	0, 2086, 0, 0, 0, 0, 0, 0, 0, 2095,
	2096, 2097, 2098, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2109, 2110, 0, 0, 0, 0, 0, 0,
	2115, 2116, 2117, 2118, 2119, 0, 0, 0, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2136, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2258, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 121, 187,
	143, 0, 0, 0, 598, 0, 0, 0, 0, 0,
	598, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 187, 0, 0, 142, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1474, 1475, 152,
	151, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	1201, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 0, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 187, 187, 187, 187, 147, 1476,
	154, 0, 1473, 0, 148, 149, 0, 0, 0, 0,
	165, 0, 0, 0, 187, 187, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 2350, 0, 0,
	0, 0, 0, 0, 610, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 0, 0, 0, 2365, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2380, 2381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1365,
	598, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 2429, 0, 0, 0, 187, 0, 0, 0, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 2447, 2448,
	0, 0, 0, 598, 0, 0, 0, 0, 0, 0,
	598, 598, 0, 187, 187, 187, 187, 187, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	187, 0, 0, 187, 0, 187, 0, 0, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 145, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 157, 2574, 0, 0, 0, 0,
	0, 169, 2578, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 187, 0, 0, 2588, 2589, 2591, 2593,
	0, 0, 0, 0, 0, 1453, 2599, 0, 0, 0,
	684, 2603, 2604, 2605, 0, 0, 0, 0, 2608, 0,
	0, 0, 0, 177, 2610, 0, 0, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 0, 0, 2624,
	0, 2625, 2627, 0, 2630, 0, 0, 0, 0, 2636,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 0, 0, 0, 176, 178,
	179, 180, 596, 0, 0, 0, 0, 0, 0, 598,
	187, 0, 0, 0, 2658, 2659, 0, 0, 2663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2675, 2676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 821,
	0, 0, 978, 0, 985, 0, 0, 0, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	187, 187, 187, 0, 0, 0, 2742, 0, 0, 0,
	598, 598, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 1657, 1658, 1659, 1660, 0, 1662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 598, 598, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 1703, 1704, 0, 2771,
	0, 0, 0, 2772, 1709, 0, 0, 0, 0, 2776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	1746, 1747, 1748, 1749, 1750, 1752, 1756, 1757, 610, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 1798, 1799, 1800, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 0, 598, 1406, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2887, 0, 0, 0, 0,
	0, 0, 0, 0, 2894, 0, 0, 0, 1876, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2904, 2905, 2906, 187, 2907, 2908, 598, 0, 0, 1419,
	2911, 0, 2912, 0, 2914, 2917, 0, 0, 0, 598,
	0, 2920, 2922, 2923, 2925, 2928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1914, 0, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 598, 598,
	0, 0, 0, 2954, 0, 0, 0, 1432, 1435, 1436,
	1437, 1438, 1439, 1440, 0, 1441, 1442, 1443, 1444, 1445,
	1420, 1421, 1422, 1423, 1404, 1405, 1433, 598, 1407, 0,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 0,
	0, 1417, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	0, 2829, 2831, 2830, 2840, 2841, 2842, 2843, 2844, 2845,
	2846, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 0, 0, 2976, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 2981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2989, 598, 187, 0, 0, 0,
	2990, 2991, 0, 821, 0, 821, 821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3066, 0, 2997, 0,
	1170, 1172, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 0,
	0, 0, 3025, 3027, 3029, 0, 1434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 598,
	0, 0, 3054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 0,
	0, 3060, 0, 187, 598, 0, 0, 0, 0, 0,
	0, 3064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3084, 3086,
	3088, 0, 0, 0, 1315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 0, 0, 0, 0, 598,
	0, 685, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 598, 0, 0, 0, 0, 0, 1406, 0, 0,
	0, 3118, 3119, 0, 0, 0, 0, 0, 0, 0,
	1248, 2835, 2836, 0, 121, 0, 143, 0, 0, 0,
	0, 1327, 1328, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 185, 0, 0, 551, 0, 0, 592, 0,
	0, 0, 0, 0, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 551, 0, 0, 1371, 0, 153, 0,
	0, 0, 0, 0, 142, 821, 0, 0, 788, 0,
	0, 1391, 695, 0, 644, 699, 646, 696, 697, 1419,
	642, 645, 698, 0, 806, 161, 806, 162, 0, 0,
	0, 0, 0, 0, 551, 0, 0, 0, 0, 0,
	1365, 0, 0, 130, 131, 152, 151, 181, 0, 647,
	648, 2828, 2832, 2833, 2834, 2837, 2838, 2839, 2847, 2849,
	672, 2848, 2850, 2851, 2852, 2855, 2856, 2857, 2858, 2853,
	2854, 2859, 2860, 2861, 2862, 2863, 0, 1432, 1435, 1436,
	1437, 1438, 1439, 1440, 0, 1441, 1442, 1443, 1444, 1445,
	1420, 1421, 1422, 1423, 1404, 1405, 1433, 0, 1407, 0,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 0,
	0, 1417, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 128, 154, 135, 127, 0,
	148, 149, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 137, 132, 133, 134, 138, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 0, 978, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1315, 0, 0, 0,
	0, 0, 1499, 1499, 0, 1499, 0, 1499, 1499, 0,
	1508, 1499, 1499, 1499, 1499, 1499, 1434, 0, 2318, 0,
	0, 0, 0, 1315, 0, 0, 1315, 978, 0, 0,
	0, 0, 0, 0, 0, 0, 2341, 2342, 0, 0,
	0, 2345, 0, 0, 0, 0, 2347, 2348, 2349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2354, 2355,
	2356, 1575, 156, 1763, 2358, 0, 2359, 2360, 0, 0,
	0, 2367, 2368, 0, 0, 0, 0, 1597, 0, 1763,
	1763, 1763, 1763, 1763, 610, 610, 610, 610, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2384,
	2385, 2386, 2387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 821, 821, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 2418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	39, 40, 80, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2451, 0, 144, 0, 84,
	145, 0, 0, 43, 69, 70, 0, 67, 71, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 1706, 0, 0, 0, 169, 0, 0,
	1315, 0, 0, 0, 0, 56, 0, 0, 1721, 1722,
	0, 0, 0, 0, 0, 2513, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 551,
	0, 551, 0, 0, 551, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	1819, 0, 0, 0, 176, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2596, 0, 1831, 0, 0,
	0, 0, 2602, 0, 0, 0, 0, 0, 0, 0,
	0, 1371, 0, 0, 821, 0, 0, 0, 0, 0,
	0, 0, 821, 0, 0, 821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 978, 0, 0, 0,
	0, 46, 49, 52, 51, 54, 0, 66, 0, 0,
	75, 72, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 55, 83, 82, 610, 0, 64, 65,
	53, 0, 0, 0, 0, 1316, 73, 74, 0, 0,
	0, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 978, 0,
	0, 0, 0, 0, 985, 0, 57, 58, 0, 59,
	60, 61, 62, 0, 0, 0, 0, 0, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 788, 2723,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 978, 0, 1693, 0, 0, 0, 0, 0, 1693,
	1693, 551, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 2747, 0, 0, 1470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 121, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2763,
	0, 2764, 0, 0, 0, 0, 2767, 2768, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 81, 142, 0,
	2775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2784, 0, 2785, 2786, 161,
	2787, 162, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 0, 1474, 1475, 152,
	151, 181, 0, 0, 0, 2812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2820, 0, 0, 2822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 551, 0, 0,
	0, 2867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1316, 147, 1476,
	154, 0, 1473, 0, 148, 149, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 1316, 0, 0, 1316, 0, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 821, 0, 0, 2937, 610, 0, 1549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 551, 2143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2158, 0, 0, 0,
	1599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 0, 0, 0,
	0, 0, 0, 551, 0, 0, 0, 0, 0, 0,
	0, 0, 1622, 1623, 551, 551, 551, 551, 551, 551,
	551, 0, 0, 0, 0, 0, 0, 0, 610, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 551, 0, 0, 0, 0, 0, 0,
	0, 0, 2980, 0, 0, 0, 0, 2241, 0, 0,
	2985, 0, 0, 2986, 0, 2987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 2266, 0, 0, 0, 0, 0, 0, 806, 0,
	2271, 0, 0, 610, 150, 806, 806, 0, 0, 0,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 3052, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 806, 1599, 806, 806, 806,
	806, 806, 0, 0, 0, 3061, 0, 3062, 0, 3063,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 1693, 0, 1549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 788, 0, 0, 0, 0,
	1315, 0, 1315, 177, 3104, 1315, 3105, 0, 551, 2138,
	1315, 0, 716, 717, 0, 1599, 0, 551, 1698, 551,
	0, 551, 1867, 0, 0, 821, 0, 0, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 1499, 0, 0, 176, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 821, 0,
	0, 0, 1315, 0, 0, 2430, 1499, 1315, 0, 0,
	0, 0, 0, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 978, 0, 0, 1315, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 0,
	0, 0, 0, 0, 0, 551, 0, 0, 716, 717,
	0, 0, 551, 551, 1698, 0, 551, 0, 2023, 0,
	0, 0, 0, 0, 0, 551, 0, 0, 0, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2403, 0, 0, 0, 0, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 0, 806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 715, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 1831, 0, 0, 806,
	806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1599, 0, 0, 551, 0, 0,
	0, 0, 0, 0, 0, 1549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2755,
	2756, 2757, 2758, 0, 0, 0, 0, 0, 0, 778,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 778,
	87, 551, 0, 0, 0, 551, 709, 716, 717, 718,
	719, 720, 710, 712, 0, 986, 0, 711, 1315, 0,
	1315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	714, 721, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1315, 0, 0, 0,
	0, 2816, 0, 2818, 551, 0, 2547, 2548, 0, 0,
	0, 2251, 0, 0, 0, 0, 0, 0, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 551,
	551, 551, 551, 551, 0, 0, 0, 0, 0, 0,
	0, 2889, 0, 0, 0, 0, 0, 0, 0, 0,
	551, 551, 0, 0, 821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 806, 0, 0, 0, 0, 0, 0, 0, 2929,
	0, 0, 0, 2929, 2929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1316, 1831, 1316, 0, 0, 1316, 0, 0, 0,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 1316, 0, 0, 0, 0, 1316, 551,
	551, 551, 551, 551, 0, 0, 0, 0, 0, 0,
	0, 2446, 0, 0, 0, 0, 551, 0, 0, 1549,
	0, 551, 0, 0, 551, 2457, 1599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1315, 0, 2995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 821, 821, 0, 0, 0, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3031,
	0, 0, 0, 0, 0, 1316, 0, 0, 0, 3036,
	0, 0, 0, 0, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 0, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3036, 0, 0, 0,
	0, 0, 0, 0, 1160, 0, 1160, 1160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 1236, 1237, 1238, 0, 1241, 551, 1243, 1244, 1245,
	1246, 0, 1249, 1251, 1251, 0, 1251, 1255, 1255, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 0, 1293, 0, 1295, 1296,
	1297, 1298, 1299, 0, 0, 551, 0, 1255, 1255, 1255,
	1255, 1255, 1305, 1306, 1307, 1308, 87, 0, 0, 0,
	0, 0, 709, 716, 717, 718, 719, 720, 710, 712,
	0, 0, 0, 711, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 714, 721, 722, 0,
	0, 0, 0, 551, 0, 0, 551, 551, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	778, 0, 2547, 2548, 0, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1316,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 695, 0, 0, 699,
	0, 696, 697, 0, 0, 0, 698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 1160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1160, 1160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1549,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2174, 2175, 0, 0, 0, 0, 0, 0,
	0, 2194, 0, 2195, 2196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2427, 0, 79, 0, 0, 1859,
	1859, 1859, 1859, 1859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2194, 778, 0, 0,
	0, 1859, 0, 0, 1859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2788, 0, 2792, 2793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2427,
	0, 79, 0, 2427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2427, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1305, 1306, 1307, 1308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 937, 2998, 0, 956, 941, 468, 79,
	886, 959, 855, 874, 969, 877, 880, 922, 834, 900,
	380, 871, 826, 859, 829, 866, 830, 857, 888, 251,
	854, 943, 904, 958, 335, 248, 836, 860, 394, 876,
	197, 924, 442, 235, 345, 342, 475, 263, 254, 250,
	234, 290, 352, 392, 462, 386, 965, 339, 910, 0,
	452, 365, 0, 0, 0, 890, 947, 898, 936, 885,
	923, 844, 909, 960, 872, 919, 961, 296, 233, 298,
	196, 377, 453, 267, 0, 0, 0, 0, 188, 189,
	190, 0, 3018, 0, 3019, 0, 0, 0, 0, 0,
	0, 224, 0, 231, 320, 329, 328, 309, 310, 312,
	314, 319, 326, 332, 868, 916, 955, 869, 918, 246,
	294, 253, 245, 472, 966, 946, 833, 897, 954, 0,
	0, 215, 957, 892, 0, 921, 0, 972, 828, 912,
	0, 831, 835, 968, 950, 863, 256, 0, 0, 0,
	0, 0, 0, 0, 889, 899, 933, 883, 0, 0,
	0, 0, 0, 0, 0, 861, 0, 908, 0, 0,
	0, 840, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 887, 0, 0, 0, 843,
	0, 862, 934, 0, 825, 277, 837, 366, 238, 0,
	939, 949, 884, 508, 953, 882, 881, 928, 841, 945,
	875, 334, 839, 303, 192, 211, 0, 873, 376, 419,
	429, 944, 858, 867, 236, 865, 427, 390, 491, 219,
	265, 416, 396, 425, 403, 268, 907, 926, 426, 340,
	477, 410, 488, 509, 510, 244, 370, 499, 466, 505,
	523, 212, 241, 384, 459, 494, 449, 363, 473, 474,
	302, 448, 275, 195, 338, 515, 210, 435, 228, 217,
	479, 497, 270, 414, 202, 461, 486, 225, 439, 0,
	0, 525, 204, 484, 458, 359, 299, 300, 203, 0,
	415, 249, 273, 239, 379, 481, 482, 237, 526, 214,
	504, 206, 1162, 503, 372, 476, 485, 360, 350, 205,
	483, 358, 349, 305, 324, 325, 261, 284, 408, 343,
	409, 285, 368, 367, 369, 198, 495, 0, 199, 0,
	454, 496, 527, 220, 221, 223, 853, 260, 264, 272,
	274, 280, 281, 288, 336, 383, 407, 405, 411, 940,
	471, 489, 500, 507, 513, 514, 516, 517, 518, 519,
	520, 522, 521, 371, 287, 450, 304, 341, 931, 971,
	389, 428, 226, 493, 451, 848, 852, 846, 913, 847,
	902, 903, 849, 962, 963, 964, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 0, 935, 842, 0, 850, 851,
	0, 942, 951, 952, 546, 351, 441, 490, 306, 318,
	321, 311, 330, 0, 331, 307, 308, 313, 315, 316,
	317, 322, 323, 327, 333, 420, 421, 422, 423, 906,
	191, 207, 337, 967, 412, 269, 524, 502, 498, 827,
	209, 845, 243, 856, 864, 0, 870, 878, 879, 891,
	893, 894, 895, 896, 914, 915, 917, 925, 927, 930,
	932, 938, 948, 970, 193, 194, 200, 208, 218, 222,
	229, 242, 257, 259, 266, 278, 283, 286, 291, 292,
	295, 301, 347, 353, 354, 355, 356, 373, 374, 375,
	378, 381, 382, 385, 387, 388, 391, 395, 399, 400,
	401, 402, 404, 406, 413, 418, 430, 431, 432, 433,
	434, 437, 438, 443, 444, 445, 446, 447, 455, 456,
	460, 478, 480, 492, 506, 511, 436, 279, 487, 512,
	0, 346, 905, 911, 348, 262, 282, 293, 920, 501,
	457, 213, 424, 271, 201, 232, 216, 240, 255, 258,
	297, 357, 364, 393, 398, 276, 252, 230, 417, 227,
	440, 463, 464, 465, 467, 361, 247, 397, 901, 929,
	344, 469, 470, 289, 362, 937, 0, 0, 956, 941,
	468, 0, 886, 959, 855, 874, 969, 877, 880, 922,
	834, 900, 380, 871, 826, 859, 829, 866, 830, 857,
	888, 251, 854, 943, 904, 958, 335, 248, 836, 860,
	394, 876, 197, 924, 442, 235, 345, 342, 475, 263,
	254, 250, 234, 290, 352, 392, 462, 386, 965, 339,
	910, 0, 452, 365, 0, 0, 0, 890, 947, 898,
	936, 885, 923, 844, 909, 960, 872, 919, 961, 296,
	233, 298, 196, 377, 453, 267, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 231, 320, 329, 328, 309,
	310, 312, 314, 319, 326, 332, 868, 916, 955, 869,
	918, 246, 294, 253, 245, 472, 966, 946, 833, 897,
	954, 0, 0, 215, 957, 892, 0, 921, 0, 972,
	828, 912, 0, 831, 835, 968, 950, 863, 256, 0,
	0, 0, 0, 0, 0, 0, 889, 899, 933, 883,
	0, 0, 0, 0, 0, 2458, 0, 861, 0, 908,
	0, 0, 0, 840, 832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 887, 0, 0,
	0, 843, 0, 862, 934, 0, 825, 277, 837, 366,
	238, 0, 939, 949, 884, 508, 953, 882, 881, 928,
	841, 945, 875, 334, 839, 303, 192, 211, 0, 873,
	376, 419, 429, 944, 858, 867, 236, 865, 427, 390,
	491, 219, 265, 416, 396, 425, 403, 268, 907, 926,
	426, 340, 477, 410, 488, 509, 510, 244, 370, 499,
	466, 505, 523, 212, 241, 384, 459, 494, 449, 363,
	473, 474, 302, 448, 275, 195, 338, 515, 210, 435,
	228, 217, 479, 497, 270, 414, 202, 461, 486, 225,
	439, 0, 0, 525, 204, 484, 458, 359, 299, 300,
	203, 0, 415, 249, 273, 239, 379, 481, 482, 237,
	526, 214, 504, 206, 1162, 503, 372, 476, 485, 360,
	350, 205, 483, 358, 349, 305, 324, 325, 261, 284,
	408, 343, 409, 285, 368, 367, 369, 198, 495, 0,
	199, 0, 454, 496, 527, 220, 221, 223, 853, 260,
	264, 272, 274, 280, 281, 288, 336, 383, 407, 405,
	411, 940, 471, 489, 500, 507, 513, 514, 516, 517,
	518, 519, 520, 522, 521, 371, 287, 450, 304, 341,
	931, 971, 389, 428, 226, 493, 451, 848, 852, 846,
	913, 847, 902, 903, 849, 962, 963, 964, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 0, 935, 842, 0,
	850, 851, 0, 942, 951, 952, 546, 351, 441, 490,
	306, 318, 321, 311, 330, 0, 331, 307, 308, 313,
	315, 316, 317, 322, 323, 327, 333, 420, 421, 422,
	423, 906, 191, 207, 337, 967, 412, 269, 524, 502,
	498, 827, 209, 845, 243, 856, 864, 0, 870, 878,
	879, 891, 893, 894, 895, 896, 914, 915, 917, 925,
	927, 930, 932, 938, 948, 970, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 353, 354, 355, 356, 373,
	374, 375, 378, 381, 382, 385, 387, 388, 391, 395,
	399, 400, 401, 402, 404, 406, 413, 418, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 478, 480, 492, 506, 511, 436, 279,
	487, 512, 0, 346, 905, 911, 348, 262, 282, 293,
	920, 501, 457, 213, 424, 271, 201, 232, 216, 240,
	255, 258, 297, 357, 364, 393, 398, 276, 252, 230,
	417, 227, 440, 463, 464, 465, 467, 361, 247, 397,
	901, 929, 344, 469, 470, 289, 362, 937, 0, 0,
	956, 941, 468, 0, 886, 959, 855, 874, 969, 877,
	880, 922, 834, 900, 380, 871, 826, 859, 829, 866,
	830, 857, 888, 251, 854, 943, 904, 958, 335, 248,
	836, 860, 394, 876, 197, 924, 442, 235, 345, 342,
	475, 263, 254, 250, 234, 290, 352, 392, 462, 386,
	965, 339, 910, 0, 452, 365, 0, 0, 0, 890,
	947, 898, 936, 885, 923, 844, 909, 960, 872, 919,
	961, 296, 233, 298, 196, 377, 453, 267, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 231, 320, 329,
	328, 309, 310, 312, 314, 319, 326, 332, 868, 916,
	955, 869, 918, 246, 294, 253, 245, 472, 966, 946,
	833, 897, 954, 0, 0, 215, 957, 892, 0, 921,
	0, 972, 828, 912, 0, 831, 835, 968, 950, 863,
	256, 0, 0, 0, 0, 0, 0, 0, 889, 899,
	933, 883, 0, 0, 0, 0, 0, 2416, 0, 861,
	0, 908, 0, 0, 0, 840, 832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 887,
	0, 0, 0, 843, 0, 862, 934, 0, 825, 277,
	837, 366, 238, 0, 939, 949, 884, 508, 953, 882,
	881, 928, 841, 945, 875, 334, 839, 303, 192, 211,
	0, 873, 376, 419, 429, 944, 858, 867, 236, 865,
	427, 390, 491, 219, 265, 416, 396, 425, 403, 268,
	907, 926, 426, 340, 477, 410, 488, 509, 510, 244,
	370, 499, 466, 505, 523, 212, 241, 384, 459, 494,
	449, 363, 473, 474, 302, 448, 275, 195, 338, 515,
	210, 435, 228, 217, 479, 497, 270, 414, 202, 461,
	486, 225, 439, 0, 0, 525, 204, 484, 458, 359,
	299, 300, 203, 0, 415, 249, 273, 239, 379, 481,
	482, 237, 526, 214, 504, 206, 1162, 503, 372, 476,
	485, 360, 350, 205, 483, 358, 349, 305, 324, 325,
	261, 284, 408, 343, 409, 285, 368, 367, 369, 198,
	495, 0, 199, 0, 454, 496, 527, 220, 221, 223,
	853, 260, 264, 272, 274, 280, 281, 288, 336, 383,
	407, 405, 411, 940, 471, 489, 500, 507, 513, 514,
	516, 517, 518, 519, 520, 522, 521, 371, 287, 450,
	304, 341, 931, 971, 389, 428, 226, 493, 451, 848,
	852, 846, 913, 847, 902, 903, 849, 962, 963, 964,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 0, 935,
	842, 0, 850, 851, 0, 942, 951, 952, 546, 351,
	441, 490, 306, 318, 321, 311, 330, 0, 331, 307,
	308, 313, 315, 316, 317, 322, 323, 327, 333, 420,
	421, 422, 423, 906, 191, 207, 337, 967, 412, 269,
	524, 502, 498, 827, 209, 845, 243, 856, 864, 0,
	870, 878, 879, 891, 893, 894, 895, 896, 914, 915,
	917, 925, 927, 930, 932, 938, 948, 970, 193, 194,
	200, 208, 218, 222, 229, 242, 257, 259, 266, 278,
	283, 286, 291, 292, 295, 301, 347, 353, 354, 355,
	356, 373, 374, 375, 378, 381, 382, 385, 387, 388,
	391, 395, 399, 400, 401, 402, 404, 406, 413, 418,
	430, 431, 432, 433, 434, 437, 438, 443, 444, 445,
	446, 447, 455, 456, 460, 478, 480, 492, 506, 511,
	436, 279, 487, 512, 0, 346, 905, 911, 348, 262,
	282, 293, 920, 501, 457, 213, 424, 271, 201, 232,
	216, 240, 255, 258, 297, 357, 364, 393, 398, 276,
	252, 230, 417, 227, 440, 463, 464, 465, 467, 361,
	247, 397, 901, 929, 344, 469, 470, 289, 362, 937,
	0, 0, 956, 941, 468, 0, 886, 959, 855, 874,
	969, 877, 880, 922, 834, 900, 380, 871, 826, 859,
	829, 866, 830, 857, 888, 251, 854, 943, 904, 958,
	335, 248, 836, 860, 394, 876, 197, 924, 442, 235,
	345, 342, 475, 263, 254, 250, 234, 290, 352, 392,
	462, 386, 965, 339, 910, 0, 452, 365, 0, 0,
	0, 890, 947, 898, 936, 885, 923, 844, 909, 960,
	872, 919, 961, 296, 233, 298, 196, 377, 453, 267,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 231,
	320, 329, 328, 309, 310, 312, 314, 319, 326, 332,
	868, 916, 955, 869, 918, 246, 294, 253, 245, 472,
	966, 946, 833, 897, 954, 0, 0, 215, 957, 892,
	0, 921, 0, 972, 828, 912, 0, 831, 835, 968,
	950, 863, 256, 0, 0, 0, 0, 0, 0, 0,
	889, 899, 933, 883, 0, 0, 0, 0, 0, 1847,
	0, 861, 0, 908, 0, 0, 0, 840, 832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 887, 0, 0, 0, 843, 0, 862, 934, 0,
	825, 277, 837, 366, 238, 0, 939, 949, 884, 508,
	953, 882, 881, 928, 841, 945, 875, 334, 839, 303,
	192, 211, 0, 873, 376, 419, 429, 944, 858, 867,
	236, 865, 427, 390, 491, 219, 265, 416, 396, 425,
	403, 268, 907, 926, 426, 340, 477, 410, 488, 509,
	510, 244, 370, 499, 466, 505, 523, 212, 241, 384,
	459, 494, 449, 363, 473, 474, 302, 448, 275, 195,
	338, 515, 210, 435, 228, 217, 479, 497, 270, 414,
	202, 461, 486, 225, 439, 0, 0, 525, 204, 484,
	458, 359, 299, 300, 203, 0, 415, 249, 273, 239,
	379, 481, 482, 237, 526, 214, 504, 206, 1162, 503,
	372, 476, 485, 360, 350, 205, 483, 358, 349, 305,
	324, 325, 261, 284, 408, 343, 409, 285, 368, 367,
	369, 198, 495, 0, 199, 0, 454, 496, 527, 220,
	221, 223, 853, 260, 264, 272, 274, 280, 281, 288,
	336, 383, 407, 405, 411, 940, 471, 489, 500, 507,
	513, 514, 516, 517, 518, 519, 520, 522, 521, 371,
	287, 450, 304, 341, 931, 971, 389, 428, 226, 493,
	451, 848, 852, 846, 913, 847, 902, 903, 849, 962,
	963, 964, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	0, 935, 842, 0, 850, 851, 0, 942, 951, 952,
	546, 351, 441, 490, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 420, 421, 422, 423, 906, 191, 207, 337, 967,
	412, 269, 524, 502, 498, 827, 209, 845, 243, 856,
	864, 0, 870, 878, 879, 891, 893, 894, 895, 896,
	914, 915, 917, 925, 927, 930, 932, 938, 948, 970,
	193, 194, 200, 208, 218, 222, 229, 242, 257, 259,
	266, 278, 283, 286, 291, 292, 295, 301, 347, 353,
	354, 355, 356, 373, 374, 375, 378, 381, 382, 385,
	387, 388, 391, 395, 399, 400, 401, 402, 404, 406,
	413, 418, 430, 431, 432, 433, 434, 437, 438, 443,
	444, 445, 446, 447, 455, 456, 460, 478, 480, 492,
	506, 511, 436, 279, 487, 512, 0, 346, 905, 911,
	348, 262, 282, 293, 920, 501, 457, 213, 424, 271,
	201, 232, 216, 240, 255, 258, 297, 357, 364, 393,
	398, 276, 252, 230, 417, 227, 440, 463, 464, 465,
	467, 361, 247, 397, 901, 929, 344, 469, 470, 289,
	362, 937, 0, 0, 956, 941, 468, 0, 886, 959,
	855, 874, 969, 877, 880, 922, 834, 900, 380, 871,
	826, 859, 829, 866, 830, 857, 888, 251, 854, 943,
	904, 958, 335, 248, 836, 860, 394, 876, 197, 924,
	442, 235, 345, 342, 475, 263, 254, 250, 234, 290,
	352, 392, 462, 386, 965, 339, 910, 0, 452, 365,
	0, 0, 0, 890, 947, 898, 936, 885, 923, 844,
	909, 960, 872, 919, 961, 296, 233, 298, 196, 377,
	453, 267, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 868, 916, 955, 869, 918, 246, 294, 253,
	245, 472, 966, 946, 833, 897, 954, 0, 0, 215,
	957, 892, 0, 921, 0, 972, 828, 912, 0, 831,
	835, 968, 950, 863, 256, 0, 0, 0, 0, 0,
	0, 0, 889, 899, 933, 883, 0, 0, 0, 0,
	0, 0, 0, 861, 0, 908, 0, 0, 0, 840,
	832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 887, 0, 0, 0, 843, 0, 862,
	934, 0, 825, 277, 837, 366, 238, 0, 939, 949,
	884, 508, 953, 882, 881, 928, 841, 945, 875, 334,
	839, 303, 192, 211, 0, 873, 376, 419, 429, 944,
	858, 867, 236, 865, 427, 390, 491, 219, 265, 416,
	396, 425, 403, 268, 907, 926, 426, 340, 477, 410,
	488, 509, 510, 244, 370, 499, 466, 505, 523, 212,
	241, 384, 459, 494, 449, 363, 473, 474, 302, 448,
	275, 195, 338, 515, 210, 435, 228, 217, 479, 497,
	270, 414, 202, 461, 486, 225, 439, 0, 0, 525,
	204, 484, 458, 359, 299, 300, 203, 0, 415, 249,
	273, 239, 379, 481, 482, 237, 526, 214, 504, 206,
	1162, 503, 372, 476, 485, 360, 350, 205, 483, 358,
	349, 305, 324, 325, 261, 284, 408, 343, 409, 285,
	368, 367, 369, 198, 495, 0, 199, 0, 454, 496,
	527, 220, 221, 223, 853, 260, 264, 272, 274, 280,
	281, 288, 336, 383, 407, 405, 411, 940, 471, 489,
	500, 507, 513, 514, 516, 517, 518, 519, 520, 522,
	521, 371, 287, 450, 304, 341, 931, 971, 389, 428,
	226, 493, 451, 848, 852, 846, 913, 847, 902, 903,
	849, 962, 963, 964, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 0, 935, 842, 0, 850, 851, 0, 942,
	951, 952, 546, 351, 441, 490, 306, 318, 321, 311,
	330, 0, 331, 307, 308, 313, 315, 316, 317, 322,
	323, 327, 333, 420, 421, 422, 423, 906, 191, 207,
	337, 967, 412, 269, 524, 502, 498, 827, 209, 845,
	243, 856, 864, 0, 870, 878, 879, 891, 893, 894,
	895, 896, 914, 915, 917, 925, 927, 930, 932, 938,
	948, 970, 193, 194, 200, 208, 218, 222, 229, 242,
	257, 259, 266, 278, 283, 286, 291, 292, 295, 301,
	347, 353, 354, 355, 356, 373, 374, 375, 378, 381,
	382, 385, 387, 388, 391, 395, 399, 400, 401, 402,
	404, 406, 413, 418, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 478,
	480, 492, 506, 511, 436, 279, 487, 512, 0, 346,
	905, 911, 348, 262, 282, 293, 920, 501, 457, 213,
	424, 271, 201, 232, 216, 240, 255, 258, 297, 357,
	364, 393, 398, 276, 252, 230, 417, 227, 440, 463,
	464, 465, 467, 361, 247, 397, 901, 929, 344, 469,
	470, 289, 362, 937, 0, 0, 956, 941, 468, 0,
	886, 959, 855, 874, 969, 877, 880, 922, 834, 900,
	380, 871, 826, 859, 829, 866, 830, 857, 888, 251,
	854, 943, 904, 958, 335, 248, 836, 860, 394, 876,
	197, 924, 442, 235, 345, 342, 475, 263, 254, 250,
	234, 290, 352, 392, 462, 386, 965, 339, 910, 0,
	452, 365, 0, 0, 0, 890, 947, 898, 936, 885,
	923, 844, 909, 960, 872, 919, 961, 296, 233, 298,
	196, 377, 453, 267, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 231, 320, 329, 328, 309, 310, 312,
	314, 319, 326, 332, 868, 916, 955, 869, 918, 246,
	294, 253, 245, 472, 966, 946, 833, 897, 954, 0,
	0, 215, 957, 892, 0, 921, 0, 972, 828, 912,
	0, 831, 835, 968, 950, 863, 256, 0, 0, 0,
	0, 0, 0, 0, 889, 899, 933, 883, 0, 0,
	0, 0, 0, 0, 0, 861, 0, 908, 0, 0,
	0, 840, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 887, 0, 0, 0, 843,
	0, 862, 934, 0, 825, 277, 837, 366, 238, 0,
	939, 949, 884, 508, 953, 882, 881, 928, 841, 945,
	875, 334, 839, 303, 192, 211, 0, 873, 376, 419,
	429, 944, 858, 867, 236, 865, 427, 390, 491, 219,
	265, 416, 396, 425, 403, 268, 907, 926, 426, 340,
	477, 410, 488, 509, 510, 244, 370, 499, 466, 505,
	523, 212, 241, 384, 459, 494, 449, 363, 473, 474,
	302, 448, 275, 195, 338, 515, 210, 435, 228, 217,
	479, 497, 270, 414, 202, 461, 486, 225, 439, 0,
	0, 525, 204, 484, 458, 359, 299, 300, 203, 0,
	415, 249, 273, 239, 379, 481, 482, 237, 526, 214,
	504, 206, 1162, 503, 372, 476, 485, 360, 350, 205,
	483, 358, 349, 305, 324, 325, 261, 284, 408, 343,
	409, 285, 368, 367, 369, 198, 495, 0, 199, 0,
	454, 496, 527, 220, 221, 223, 853, 260, 264, 272,
	274, 280, 281, 288, 336, 383, 407, 405, 411, 940,
	471, 489, 500, 507, 513, 514, 516, 517, 518, 519,
	520, 522, 521, 371, 287, 450, 304, 341, 931, 971,
	389, 428, 226, 493, 451, 848, 852, 846, 913, 847,
	902, 903, 849, 962, 963, 964, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 0, 935, 842, 0, 850, 851,
	0, 942, 951, 952, 546, 351, 441, 490, 306, 318,
	321, 311, 330, 0, 331, 307, 308, 313, 315, 316,
	317, 322, 323, 327, 333, 420, 421, 422, 423, 906,
	191, 207, 337, 967, 412, 269, 524, 502, 498, 827,
	209, 845, 243, 856, 864, 0, 870, 878, 879, 891,
	893, 894, 895, 896, 914, 915, 917, 925, 927, 930,
	932, 938, 948, 970, 193, 194, 200, 208, 218, 222,
	229, 242, 257, 259, 266, 278, 283, 286, 291, 292,
	295, 301, 347, 353, 354, 355, 356, 373, 374, 375,
	378, 381, 382, 385, 387, 388, 391, 395, 399, 400,
	401, 402, 404, 406, 413, 418, 430, 431, 432, 433,
	434, 437, 438, 443, 444, 445, 446, 447, 455, 456,
	460, 478, 480, 492, 506, 511, 436, 279, 487, 512,
	0, 346, 905, 911, 348, 262, 282, 293, 920, 501,
	457, 213, 424, 271, 201, 232, 216, 240, 255, 258,
	297, 357, 364, 393, 398, 276, 252, 230, 417, 227,
	440, 463, 464, 465, 467, 361, 247, 397, 901, 929,
	344, 469, 470, 289, 362, 937, 0, 0, 956, 941,
	468, 0, 886, 959, 855, 874, 969, 877, 880, 922,
	834, 900, 380, 871, 826, 859, 829, 866, 830, 857,
	888, 251, 854, 943, 904, 958, 335, 248, 836, 860,
	394, 876, 197, 924, 442, 235, 345, 342, 475, 263,
	254, 250, 234, 290, 352, 392, 462, 386, 965, 339,
	910, 0, 452, 365, 0, 0, 0, 890, 947, 898,
	936, 885, 923, 844, 909, 960, 872, 919, 961, 296,
	233, 298, 196, 377, 453, 267, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 231, 320, 329, 328, 309,
	310, 312, 314, 319, 326, 332, 868, 916, 955, 869,
	918, 246, 294, 253, 245, 472, 966, 946, 833, 897,
	954, 0, 0, 973, 957, 892, 0, 921, 0, 972,
	828, 912, 0, 831, 835, 968, 950, 863, 256, 0,
	0, 0, 0, 0, 0, 0, 889, 899, 933, 883,
	0, 0, 0, 0, 0, 0, 0, 861, 0, 908,
	0, 0, 0, 840, 832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 887, 0, 0,
	0, 843, 0, 862, 934, 0, 825, 277, 837, 366,
	238, 0, 939, 949, 884, 508, 953, 882, 881, 928,
	841, 945, 875, 334, 839, 303, 192, 211, 0, 873,
	376, 419, 429, 944, 858, 867, 236, 865, 427, 390,
	491, 219, 265, 416, 396, 425, 403, 268, 907, 926,
	426, 340, 477, 410, 488, 509, 510, 244, 370, 499,
	466, 505, 523, 212, 241, 384, 459, 494, 449, 363,
	473, 474, 302, 448, 275, 195, 338, 515, 210, 435,
	228, 217, 479, 497, 270, 414, 202, 461, 486, 225,
	439, 0, 0, 525, 204, 484, 458, 359, 299, 300,
	203, 0, 415, 249, 273, 239, 379, 481, 482, 237,
	526, 214, 504, 206, 838, 503, 372, 476, 485, 360,
	350, 205, 483, 358, 349, 305, 324, 325, 261, 284,
	408, 343, 409, 285, 368, 367, 369, 198, 495, 0,
	199, 0, 454, 496, 527, 220, 221, 223, 853, 260,
	264, 272, 274, 280, 281, 288, 336, 383, 407, 405,
	411, 940, 471, 489, 500, 507, 513, 514, 516, 517,
	518, 519, 520, 522, 521, 824, 818, 817, 304, 341,
	931, 971, 389, 428, 226, 493, 451, 848, 852, 846,
	913, 847, 902, 903, 849, 962, 963, 964, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 0, 935, 842, 0,
	850, 851, 0, 942, 951, 952, 546, 351, 441, 490,
	306, 318, 321, 311, 330, 0, 331, 307, 308, 313,
	315, 316, 317, 322, 323, 327, 333, 420, 421, 422,
	423, 906, 191, 207, 337, 967, 412, 269, 524, 502,
	498, 827, 209, 845, 243, 856, 864, 0, 870, 878,
	879, 891, 893, 894, 895, 896, 914, 915, 917, 925,
	927, 930, 932, 938, 948, 970, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 353, 354, 355, 356, 373,
	374, 375, 378, 381, 382, 385, 387, 388, 391, 395,
	399, 400, 401, 402, 404, 406, 413, 418, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 478, 480, 492, 506, 511, 436, 279,
	487, 512, 0, 346, 905, 911, 348, 262, 282, 293,
	920, 501, 457, 213, 424, 271, 201, 232, 216, 240,
	255, 258, 297, 357, 364, 393, 398, 276, 252, 230,
	417, 227, 440, 463, 464, 465, 467, 361, 247, 397,
	901, 929, 344, 469, 470, 289, 362, 937, 0, 0,
	956, 941, 468, 0, 886, 959, 855, 874, 969, 877,
	880, 922, 834, 900, 380, 871, 826, 859, 829, 866,
	830, 857, 888, 251, 854, 943, 904, 958, 335, 248,
	836, 860, 394, 876, 197, 924, 442, 235, 345, 342,
	475, 263, 254, 250, 234, 290, 352, 392, 462, 386,
	965, 339, 910, 0, 452, 365, 0, 0, 0, 890,
	947, 898, 936, 885, 923, 844, 909, 960, 872, 919,
	961, 296, 233, 298, 196, 377, 453, 267, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 231, 320, 329,
	328, 309, 310, 312, 314, 319, 326, 332, 868, 916,
	955, 869, 918, 246, 294, 253, 245, 472, 966, 946,
	833, 897, 954, 0, 0, 973, 957, 892, 0, 921,
	0, 972, 828, 912, 0, 831, 835, 968, 950, 863,
	256, 0, 0, 0, 0, 0, 0, 0, 889, 899,
	933, 883, 0, 0, 0, 0, 0, 0, 0, 861,
	0, 908, 0, 0, 0, 840, 832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 887,
	0, 0, 0, 843, 0, 862, 934, 0, 825, 277,
	837, 366, 238, 0, 939, 949, 884, 508, 953, 882,
	881, 928, 841, 945, 875, 334, 839, 303, 192, 211,
	0, 873, 376, 419, 429, 944, 858, 867, 236, 865,
	427, 390, 491, 219, 265, 416, 396, 425, 403, 268,
	907, 926, 426, 340, 477, 410, 488, 509, 510, 244,
	370, 499, 466, 505, 523, 212, 241, 384, 459, 494,
	449, 363, 473, 474, 302, 448, 275, 195, 338, 515,
	210, 435, 228, 217, 479, 497, 270, 414, 202, 461,
	1382, 225, 439, 0, 0, 525, 204, 484, 458, 359,
	299, 300, 203, 0, 415, 249, 273, 239, 379, 481,
	482, 237, 526, 214, 504, 206, 838, 503, 372, 476,
	485, 360, 350, 205, 483, 358, 349, 305, 324, 325,
	261, 284, 408, 343, 409, 285, 368, 367, 369, 198,
	495, 0, 199, 0, 454, 496, 527, 220, 221, 223,
	853, 260, 264, 272, 274, 280, 281, 288, 336, 383,
	407, 405, 411, 940, 471, 489, 500, 507, 513, 514,
	516, 517, 518, 519, 520, 522, 521, 824, 818, 817,
	304, 341, 931, 971, 389, 428, 226, 493, 451, 848,
	852, 846, 913, 847, 902, 903, 849, 962, 963, 964,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 0, 935,
	842, 0, 850, 851, 0, 942, 951, 952, 546, 351,
	441, 490, 306, 318, 321, 311, 330, 0, 331, 307,
	308, 313, 315, 316, 317, 322, 323, 327, 333, 420,
	421, 422, 423, 906, 191, 207, 337, 967, 412, 269,
	524, 502, 498, 827, 209, 845, 243, 856, 864, 0,
	870, 878, 879, 891, 893, 894, 895, 896, 914, 915,
	917, 925, 927, 930, 932, 938, 948, 970, 193, 194,
	200, 208, 218, 222, 229, 242, 257, 259, 266, 278,
	283, 286, 291, 292, 295, 301, 347, 353, 354, 355,
	356, 373, 374, 375, 378, 381, 382, 385, 387, 388,
	391, 395, 399, 400, 401, 402, 404, 406, 413, 418,
	430, 431, 432, 433, 434, 437, 438, 443, 444, 445,
	446, 447, 455, 456, 460, 478, 480, 492, 506, 511,
	436, 279, 487, 512, 0, 346, 905, 911, 348, 262,
	282, 293, 920, 501, 457, 213, 424, 271, 201, 232,
	216, 240, 255, 258, 297, 357, 364, 393, 398, 276,
	252, 230, 417, 227, 440, 463, 464, 465, 467, 361,
	247, 397, 901, 929, 344, 469, 470, 289, 362, 937,
	0, 0, 956, 941, 468, 0, 886, 959, 855, 874,
	969, 877, 880, 922, 834, 900, 380, 871, 826, 859,
	829, 866, 830, 857, 888, 251, 854, 943, 904, 958,
	335, 248, 836, 860, 394, 876, 197, 924, 442, 235,
	345, 342, 475, 263, 254, 250, 234, 290, 352, 392,
	462, 386, 965, 339, 910, 0, 452, 365, 0, 0,
	0, 890, 947, 898, 936, 885, 923, 844, 909, 960,
	872, 919, 961, 296, 233, 298, 196, 377, 453, 267,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 231,
	320, 329, 328, 309, 310, 312, 314, 319, 326, 332,
	868, 916, 955, 869, 918, 246, 294, 253, 245, 472,
	966, 946, 833, 897, 954, 0, 0, 973, 957, 892,
	0, 921, 0, 972, 828, 912, 0, 831, 835, 968,
	950, 863, 256, 0, 0, 0, 0, 0, 0, 0,
	889, 899, 933, 883, 0, 0, 0, 0, 0, 0,
	0, 861, 0, 908, 0, 0, 0, 840, 832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 887, 0, 0, 0, 843, 0, 862, 934, 0,
	825, 277, 837, 366, 238, 0, 939, 949, 884, 508,
	953, 882, 881, 928, 841, 945, 875, 334, 839, 303,
	192, 211, 0, 873, 376, 419, 429, 944, 858, 867,
	236, 865, 427, 390, 491, 219, 265, 416, 396, 425,
	403, 268, 907, 926, 426, 340, 477, 410, 488, 509,
	510, 244, 370, 499, 466, 505, 523, 212, 241, 384,
	459, 494, 449, 363, 473, 474, 302, 448, 275, 195,
	338, 515, 210, 435, 228, 217, 479, 497, 270, 414,
	202, 461, 815, 225, 439, 0, 0, 525, 204, 484,
	458, 359, 299, 300, 203, 0, 415, 249, 273, 239,
	379, 481, 482, 237, 526, 214, 504, 206, 838, 503,
	372, 476, 485, 360, 350, 205, 483, 358, 349, 305,
	324, 325, 261, 284, 408, 343, 409, 285, 368, 367,
	369, 198, 495, 0, 199, 0, 454, 496, 527, 220,
	221, 223, 853, 260, 264, 272, 274, 280, 281, 288,
	336, 383, 407, 405, 411, 940, 471, 489, 500, 507,
	513, 514, 516, 517, 518, 519, 520, 522, 521, 824,
	818, 817, 304, 341, 931, 971, 389, 428, 226, 493,
	451, 848, 852, 846, 913, 847, 902, 903, 849, 962,
	963, 964, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	0, 935, 842, 0, 850, 851, 0, 942, 951, 952,
	546, 351, 441, 490, 306, 318, 321, 311, 330, 0,
	331, 307, 308, 313, 315, 316, 317, 322, 323, 327,
	333, 420, 421, 422, 423, 906, 191, 207, 337, 967,
	412, 269, 524, 502, 498, 827, 209, 845, 243, 856,
	864, 0, 870, 878, 879, 891, 893, 894, 895, 896,
	914, 915, 917, 925, 927, 930, 932, 938, 948, 970,
	193, 194, 200, 208, 218, 222, 229, 242, 257, 259,
	266, 278, 283, 286, 291, 292, 295, 301, 347, 353,
	354, 355, 356, 373, 374, 375, 378, 381, 382, 385,
	387, 388, 391, 395, 399, 400, 401, 402, 404, 406,
	413, 418, 430, 431, 432, 433, 434, 437, 438, 443,
	444, 445, 446, 447, 455, 456, 460, 478, 480, 492,
	506, 511, 436, 279, 487, 512, 0, 346, 905, 911,
	348, 262, 282, 293, 920, 501, 457, 213, 424, 271,
	201, 232, 216, 240, 255, 258, 297, 357, 364, 393,
	398, 276, 252, 230, 417, 227, 440, 463, 464, 465,
	467, 361, 247, 397, 901, 929, 344, 469, 470, 289,
	362, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 1787, 0, 628, 0, 0, 0, 251, 633, 0,
	0, 0, 335, 248, 0, 1788, 394, 0, 197, 0,
	442, 235, 345, 342, 475, 263, 254, 250, 234, 290,
	352, 392, 462, 386, 640, 339, 0, 0, 452, 365,
	0, 0, 0, 0, 0, 635, 636, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 377,
	453, 267, 0, 87, 0, 0, 188, 189, 190, 709,
	716, 717, 718, 719, 720, 710, 712, 0, 0, 224,
	711, 231, 651, 653, 652, 662, 663, 664, 665, 666,
	667, 668, 649, 714, 721, 722, 0, 246, 294, 253,
	245, 472, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 611, 625, 0,
	639, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 622,
	623, 804, 0, 0, 0, 689, 0, 624, 0, 0,
	632, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 366, 238, 0, 688, 0,
	0, 508, 0, 0, 686, 0, 0, 0, 0, 334,
	0, 303, 192, 211, 0, 0, 376, 419, 429, 0,
	0, 0, 236, 0, 427, 390, 491, 219, 265, 416,
	396, 425, 403, 268, 0, 0, 426, 340, 477, 410,
	488, 509, 510, 244, 370, 499, 466, 505, 523, 212,
	241, 384, 459, 494, 449, 363, 473, 474, 302, 448,
	275, 195, 338, 515, 210, 435, 228, 217, 479, 497,
	270, 414, 202, 461, 486, 225, 439, 0, 0, 525,
	204, 484, 458, 359, 299, 300, 203, 0, 415, 249,
	273, 239, 379, 481, 482, 237, 526, 214, 504, 206,
	0, 503, 372, 476, 485, 360, 350, 205, 483, 358,
	349, 305, 657, 658, 261, 284, 408, 343, 409, 285,
	368, 367, 369, 198, 495, 0, 199, 0, 454, 496,
	527, 220, 221, 223, 0, 260, 264, 272, 274, 280,
	281, 288, 336, 383, 407, 405, 411, 0, 471, 489,
	500, 507, 513, 514, 516, 517, 518, 519, 520, 522,
	521, 371, 287, 450, 304, 341, 0, 0, 389, 428,
	226, 493, 451, 695, 687, 644, 699, 646, 696, 697,
	641, 642, 645, 698, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 0, 690, 631, 630, 0, 637, 638, 0,
	647, 648, 650, 654, 655, 656, 659, 660, 661, 669,
	671, 672, 670, 673, 674, 675, 678, 679, 680, 681,
	676, 677, 682, 700, 701, 702, 703, 629, 191, 207,
	337, 0, 412, 269, 524, 502, 498, 0, 209, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 218, 222, 229, 242,
	257, 259, 266, 278, 283, 286, 291, 292, 295, 301,
	347, 353, 354, 355, 356, 373, 374, 375, 378, 381,
	382, 385, 387, 388, 391, 395, 399, 400, 401, 402,
	404, 406, 413, 418, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 478,
	480, 492, 506, 511, 436, 279, 487, 512, 0, 346,
	0, 0, 348, 262, 282, 293, 0, 501, 457, 213,
	424, 271, 201, 232, 216, 240, 255, 258, 297, 357,
	364, 393, 398, 276, 252, 230, 417, 227, 440, 463,
	464, 465, 467, 361, 247, 397, 362, 0, 344, 469,
	470, 289, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 0, 628,
	0, 0, 0, 251, 633, 0, 0, 0, 335, 248,
	0, 0, 394, 0, 197, 0, 442, 235, 345, 342,
	475, 263, 254, 250, 234, 290, 352, 392, 462, 386,
	640, 339, 0, 0, 452, 365, 0, 0, 0, 0,
	0, 635, 636, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 233, 298, 196, 377, 453, 267, 0, 87,
	0, 0, 188, 189, 190, 709, 716, 717, 718, 719,
	720, 710, 712, 0, 0, 224, 711, 231, 651, 653,
	652, 662, 663, 664, 665, 666, 667, 668, 649, 714,
	721, 722, 0, 246, 294, 253, 245, 472, 0, 0,
	1753, 1754, 1755, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 611, 625, 0, 639, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 622, 623, 0, 0, 0,
	0, 689, 0, 624, 0, 0, 632, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 366, 238, 0, 688, 0, 0, 508, 0, 0,
	686, 0, 0, 0, 0, 334, 0, 303, 192, 211,
	0, 0, 376, 419, 429, 0, 0, 0, 236, 0,
	427, 390, 491, 219, 265, 416, 396, 425, 403, 268,
	0, 0, 426, 340, 477, 410, 488, 509, 510, 244,
	370, 499, 466, 505, 523, 212, 241, 384, 459, 494,
	449, 363, 473, 474, 302, 448, 275, 195, 338, 515,
	210, 435, 228, 217, 479, 497, 270, 414, 202, 461,
	486, 225, 439, 0, 0, 525, 204, 484, 458, 359,
	299, 300, 203, 0, 415, 249, 273, 239, 379, 481,
	482, 237, 526, 214, 504, 206, 0, 503, 372, 476,
	485, 360, 350, 205, 483, 358, 349, 305, 657, 658,
	261, 284, 408, 343, 409, 285, 368, 367, 369, 198,
	495, 0, 199, 0, 454, 496, 527, 220, 221, 223,
	0, 260, 264, 272, 274, 280, 281, 288, 336, 383,
	407, 405, 411, 0, 471, 489, 500, 507, 513, 514,
	516, 517, 518, 519, 520, 522, 521, 371, 287, 450,
	304, 341, 0, 0, 389, 428, 226, 493, 451, 695,
	687, 644, 699, 646, 696, 697, 641, 642, 645, 698,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 0, 690,
	631, 630, 0, 637, 638, 0, 647, 648, 650, 654,
	655, 656, 659, 660, 661, 669, 671, 672, 670, 673,
	674, 675, 678, 679, 680, 681, 676, 677, 682, 700,
	701, 702, 703, 629, 191, 207, 337, 0, 412, 269,
	524, 502, 498, 0, 209, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 218, 222, 229, 242, 257, 259, 266, 278,
	283, 286, 291, 292, 295, 301, 347, 353, 354, 355,
	356, 373, 374, 375, 378, 381, 382, 385, 387, 388,
	391, 395, 399, 400, 401, 402, 404, 406, 413, 418,
	430, 431, 432, 433, 434, 437, 438, 443, 444, 445,
	446, 447, 455, 456, 460, 478, 480, 492, 506, 511,
	436, 279, 487, 512, 0, 346, 0, 0, 348, 262,
	282, 293, 0, 501, 457, 213, 424, 271, 201, 232,
	216, 240, 255, 258, 297, 357, 364, 393, 398, 276,
	252, 230, 417, 227, 440, 463, 464, 465, 467, 361,
	247, 397, 362, 0, 344, 469, 470, 289, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 0, 628, 0, 0, 0, 251,
	633, 0, 0, 0, 335, 248, 0, 0, 394, 0,
	197, 0, 442, 235, 345, 342, 475, 263, 254, 250,
	234, 290, 352, 392, 462, 386, 640, 339, 0, 0,
	452, 365, 0, 0, 0, 0, 0, 635, 636, 0,
	0, 0, 0, 0, 0, 1874, 0, 296, 233, 298,
	196, 377, 453, 267, 0, 87, 0, 0, 188, 189,
	190, 709, 716, 717, 718, 719, 720, 710, 712, 0,
	0, 224, 711, 231, 651, 653, 652, 662, 663, 664,
	665, 666, 667, 668, 649, 714, 721, 722, 1875, 246,
	294, 253, 245, 472, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 611,
	625, 0, 639, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 622, 623, 0, 0, 0, 0, 689, 0, 624,
	0, 0, 632, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 366, 238, 0,
	688, 0, 0, 508, 0, 0, 686, 0, 0, 0,
	0, 334, 0, 303, 192, 211, 0, 0, 376, 419,
	429, 0, 0, 0, 236, 0, 427, 390, 491, 219,
	265, 416, 396, 425, 403, 268, 0, 0, 426, 340,
	477, 410, 488, 509, 510, 244, 370, 499, 466, 505,
	523, 212, 241, 384, 459, 494, 449, 363, 473, 474,
	302, 448, 275, 195, 338, 515, 210, 435, 228, 217,
	479, 497, 270, 414, 202, 461, 486, 225, 439, 0,
	0, 525, 204, 484, 458, 359, 299, 300, 203, 0,
	415, 249, 273, 239, 379, 481, 482, 237, 526, 214,
	504, 206, 0, 503, 372, 476, 485, 360, 350, 205,
	483, 358, 349, 305, 657, 658, 261, 284, 408, 343,
	409, 285, 368, 367, 369, 198, 495, 0, 199, 0,
	454, 496, 527, 220, 221, 223, 0, 260, 264, 272,
	274, 280, 281, 288, 336, 383, 407, 405, 411, 0,
	471, 489, 500, 507, 513, 514, 516, 517, 518, 519,
	520, 522, 521, 371, 287, 450, 304, 341, 0, 0,
	389, 428, 226, 493, 451, 695, 687, 644, 699, 646,
	696, 697, 641, 642, 645, 698, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 0, 690, 631, 630, 0, 637,
	638, 0, 647, 648, 650, 654, 655, 656, 659, 660,
	661, 669, 671, 672, 670, 673, 674, 675, 678, 679,
	680, 681, 676, 677, 682, 700, 701, 702, 703, 629,
	191, 207, 337, 0, 412, 269, 524, 502, 498, 0,
	209, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 218, 222,
	229, 242, 257, 259, 266, 278, 283, 286, 291, 292,
	295, 301, 347, 353, 354, 355, 356, 373, 374, 375,
	378, 381, 382, 385, 387, 388, 391, 395, 399, 400,
	401, 402, 404, 406, 413, 418, 430, 431, 432, 433,
	434, 437, 438, 443, 444, 445, 446, 447, 455, 456,
	460, 478, 480, 492, 506, 511, 436, 279, 487, 512,
	0, 346, 0, 0, 348, 262, 282, 293, 0, 501,
	457, 213, 424, 271, 201, 232, 216, 240, 255, 258,
	297, 357, 364, 393, 398, 276, 252, 230, 417, 227,
	440, 463, 464, 465, 467, 361, 247, 397, 0, 362,
	344, 469, 470, 289, 78, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 0, 628, 0, 0, 0, 251, 633, 0, 0,
	0, 335, 248, 0, 0, 394, 0, 197, 0, 442,
	235, 345, 342, 475, 263, 254, 250, 234, 290, 352,
	392, 462, 386, 640, 339, 0, 0, 452, 365, 0,
	0, 0, 0, 0, 635, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 233, 298, 196, 377, 453,
	267, 0, 87, 0, 0, 188, 189, 190, 709, 716,
	717, 718, 719, 720, 710, 712, 0, 0, 224, 711,
	231, 651, 653, 652, 662, 663, 664, 665, 666, 667,
	668, 649, 714, 721, 722, 0, 246, 294, 253, 245,
	472, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 611, 625, 0, 639,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 622, 623,
	0, 0, 0, 0, 689, 0, 624, 0, 0, 632,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 366, 238, 0, 688, 0, 0,
	508, 0, 0, 686, 0, 0, 0, 0, 334, 0,
	303, 192, 211, 0, 0, 376, 419, 429, 0, 0,
	0, 236, 0, 427, 390, 491, 219, 265, 416, 396,
	425, 403, 268, 0, 0, 426, 340, 477, 410, 488,
	509, 510, 244, 370, 499, 466, 505, 523, 212, 241,
	384, 459, 494, 449, 363, 473, 474, 302, 448, 275,
	195, 338, 515, 210, 435, 228, 217, 479, 497, 270,
	414, 202, 461, 486, 225, 439, 0, 0, 525, 204,
	484, 458, 359, 299, 300, 203, 0, 415, 249, 273,
	239, 379, 481, 482, 237, 526, 214, 504, 206, 0,
	503, 372, 476, 485, 360, 350, 205, 483, 358, 349,
	305, 657, 658, 261, 284, 408, 343, 409, 285, 368,
	367, 369, 198, 495, 0, 199, 0, 454, 496, 527,
	220, 221, 223, 0, 260, 264, 272, 274, 280, 281,
	288, 336, 383, 407, 405, 411, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	371, 287, 450, 304, 341, 0, 0, 389, 428, 226,
	493, 451, 695, 687, 644, 699, 646, 696, 697, 641,
	642, 645, 698, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 690, 631, 630, 0, 637, 638, 0, 647,
	648, 650, 654, 655, 656, 659, 660, 661, 669, 671,
	672, 670, 673, 674, 675, 678, 679, 680, 681, 676,
	677, 682, 700, 701, 702, 703, 629, 191, 207, 337,
	86, 412, 269, 524, 502, 498, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	353, 354, 355, 356, 373, 374, 375, 378, 381, 382,
	385, 387, 388, 391, 395, 399, 400, 401, 402, 404,
	406, 413, 418, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 279, 487, 512, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 501, 457, 213, 424,
	271, 201, 232, 216, 240, 255, 258, 297, 357, 364,
	393, 398, 276, 252, 230, 417, 227, 440, 463, 464,
	465, 467, 361, 247, 397, 362, 0, 344, 469, 470,
	289, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 0, 628, 0,
	0, 0, 251, 633, 0, 0, 0, 335, 248, 0,
	0, 394, 0, 197, 0, 442, 235, 345, 342, 475,
	263, 254, 250, 234, 290, 352, 392, 462, 386, 640,
	339, 0, 0, 452, 365, 0, 0, 0, 0, 0,
	635, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 377, 453, 267, 0, 87, 0,
	0, 188, 189, 190, 709, 716, 717, 718, 719, 720,
	710, 712, 0, 0, 224, 711, 231, 651, 653, 652,
	662, 663, 664, 665, 666, 667, 668, 649, 714, 721,
	722, 0, 246, 294, 253, 245, 472, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 611, 625, 0, 639, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 622, 623, 0, 0, 0, 0,
	689, 0, 624, 0, 0, 632, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	366, 238, 0, 688, 0, 0, 508, 0, 0, 686,
	0, 0, 0, 0, 334, 0, 303, 192, 211, 0,
	0, 376, 419, 429, 0, 0, 0, 236, 0, 427,
	390, 491, 219, 265, 416, 396, 425, 403, 268, 3005,
	0, 426, 340, 477, 410, 488, 509, 510, 244, 370,
	499, 466, 505, 523, 212, 241, 384, 459, 494, 449,
	363, 473, 474, 302, 448, 275, 195, 338, 515, 210,
	435, 228, 217, 479, 497, 270, 414, 202, 461, 486,
	225, 439, 0, 0, 525, 204, 484, 458, 359, 299,
	300, 203, 0, 415, 249, 273, 239, 379, 481, 482,
	237, 526, 214, 504, 206, 0, 503, 372, 476, 485,
	360, 350, 205, 483, 358, 349, 305, 657, 658, 261,
	284, 408, 343, 409, 285, 368, 367, 369, 198, 495,
	0, 199, 0, 454, 496, 527, 220, 221, 223, 0,
	260, 264, 272, 274, 280, 281, 288, 336, 383, 407,
	405, 411, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 371, 287, 450, 304,
	341, 0, 0, 389, 428, 226, 493, 451, 695, 687,
	644, 699, 646, 696, 697, 641, 642, 645, 698, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 690, 631,
	630, 0, 637, 638, 0, 647, 648, 650, 654, 655,
	656, 659, 660, 661, 669, 671, 672, 670, 673, 674,
	675, 678, 679, 680, 681, 676, 677, 682, 700, 701,
	702, 703, 629, 191, 207, 337, 0, 412, 269, 524,
	502, 498, 0, 209, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 218, 222, 229, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 301, 347, 353, 354, 355, 356,
	373, 374, 375, 378, 381, 382, 385, 387, 388, 391,
	395, 399, 400, 401, 402, 404, 406, 413, 418, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	279, 487, 512, 0, 346, 0, 0, 348, 262, 282,
	293, 0, 501, 457, 213, 424, 271, 201, 232, 216,
	240, 255, 258, 297, 357, 364, 393, 398, 276, 252,
	230, 417, 227, 440, 463, 464, 465, 467, 361, 247,
	397, 362, 0, 344, 469, 470, 289, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 0, 0, 628, 0, 0, 0, 251, 633,
	0, 0, 0, 335, 248, 0, 0, 394, 0, 197,
	0, 442, 235, 345, 342, 475, 263, 254, 250, 234,
	290, 352, 392, 462, 386, 640, 339, 0, 0, 452,
	365, 0, 0, 0, 0, 0, 635, 636, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 233, 298, 196,
	377, 453, 267, 0, 87, 0, 1349, 188, 189, 190,
	709, 716, 717, 718, 719, 720, 710, 712, 0, 0,
	224, 711, 231, 651, 653, 652, 662, 663, 664, 665,
	666, 667, 668, 649, 714, 721, 722, 0, 246, 294,
	253, 245, 472, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 611, 625,
	0, 639, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	622, 623, 0, 0, 0, 0, 689, 0, 624, 0,
	0, 632, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 366, 238, 0, 688,
	0, 0, 508, 0, 0, 686, 0, 0, 0, 0,
	334, 0, 303, 192, 211, 0, 0, 376, 419, 429,
	0, 0, 0, 236, 0, 427, 390, 491, 219, 265,
	416, 396, 425, 403, 268, 0, 0, 426, 340, 477,
	410, 488, 509, 510, 244, 370, 499, 466, 505, 523,
	212, 241, 384, 459, 494, 449, 363, 473, 474, 302,
	448, 275, 195, 338, 515, 210, 435, 228, 217, 479,
	497, 270, 414, 202, 461, 486, 225, 439, 0, 0,
	525, 204, 484, 458, 359, 299, 300, 203, 0, 415,
	249, 273, 239, 379, 481, 482, 237, 526, 214, 504,
	206, 0, 503, 372, 476, 485, 360, 350, 205, 483,
	358, 349, 305, 657, 658, 261, 284, 408, 343, 409,
	285, 368, 367, 369, 198, 495, 0, 199, 0, 454,
	496, 527, 220, 221, 223, 0, 260, 264, 272, 274,
	280, 281, 288, 336, 383, 407, 405, 411, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 371, 287, 450, 304, 341, 0, 0, 389,
	428, 226, 493, 451, 695, 687, 644, 699, 646, 696,
	697, 641, 642, 645, 698, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 690, 631, 630, 0, 637, 638,
	0, 647, 648, 650, 654, 655, 656, 659, 660, 661,
	669, 671, 672, 670, 673, 674, 675, 678, 679, 680,
	681, 676, 677, 682, 700, 701, 702, 703, 629, 191,
	207, 337, 0, 412, 269, 524, 502, 498, 0, 209,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 218, 222, 229,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	301, 347, 353, 354, 355, 356, 373, 374, 375, 378,
	381, 382, 385, 387, 388, 391, 395, 399, 400, 401,
	402, 404, 406, 413, 418, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 279, 487, 512, 0,
	346, 0, 0, 348, 262, 282, 293, 0, 501, 457,
	213, 424, 271, 201, 232, 216, 240, 255, 258, 297,
	357, 364, 393, 398, 276, 252, 230, 417, 227, 440,
	463, 464, 465, 467, 361, 247, 397, 362, 0, 344,
	469, 470, 289, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 0,
	628, 0, 0, 0, 251, 633, 0, 0, 0, 335,
	248, 0, 0, 394, 0, 197, 0, 442, 235, 345,
	342, 475, 263, 254, 250, 234, 290, 352, 392, 462,
	386, 640, 339, 0, 0, 452, 365, 0, 0, 0,
	0, 0, 635, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 233, 298, 196, 377, 453, 267, 0,
	87, 0, 0, 188, 189, 190, 709, 716, 717, 718,
	719, 720, 710, 712, 0, 0, 224, 711, 231, 651,
	653, 652, 662, 663, 664, 665, 666, 667, 668, 649,
	714, 721, 722, 0, 246, 294, 253, 245, 472, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 611, 625, 0, 639, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 622, 623, 804, 0,
	0, 0, 689, 0, 624, 0, 0, 632, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 366, 238, 0, 688, 0, 0, 508, 0,
	0, 686, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 376, 419, 429, 0, 0, 0, 236,
	0, 427, 390, 491, 219, 265, 416, 396, 425, 403,
	268, 0, 0, 426, 340, 477, 410, 488, 509, 510,
	244, 370, 499, 466, 505, 523, 212, 241, 384, 459,
	494, 449, 363, 473, 474, 302, 448, 275, 195, 338,
	515, 210, 435, 228, 217, 479, 497, 270, 414, 202,
	461, 486, 225, 439, 0, 0, 525, 204, 484, 458,
	359, 299, 300, 203, 0, 415, 249, 273, 239, 379,
	481, 482, 237, 526, 214, 504, 206, 0, 503, 372,
	476, 485, 360, 350, 205, 483, 358, 349, 305, 657,
	658, 261, 284, 408, 343, 409, 285, 368, 367, 369,
	198, 495, 0, 199, 0, 454, 496, 527, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	383, 407, 405, 411, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 371, 287,
	450, 304, 341, 0, 0, 389, 428, 226, 493, 451,
	695, 687, 644, 699, 646, 696, 697, 641, 642, 645,
	698, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	690, 631, 630, 0, 637, 638, 0, 647, 648, 650,
	654, 655, 656, 659, 660, 661, 669, 671, 672, 670,
	673, 674, 675, 678, 679, 680, 681, 676, 677, 682,
	700, 701, 702, 703, 629, 191, 207, 337, 0, 412,
	269, 524, 502, 498, 0, 209, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 218, 222, 229, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 301, 347, 353, 354,
	355, 356, 373, 374, 375, 378, 381, 382, 385, 387,
	388, 391, 395, 399, 400, 401, 402, 404, 406, 413,
	418, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 279, 487, 512, 0, 346, 0, 0, 348,
	262, 282, 293, 0, 501, 457, 213, 424, 271, 201,
	232, 216, 240, 255, 258, 297, 357, 364, 393, 398,
	276, 252, 230, 417, 227, 440, 463, 464, 465, 467,
	361, 247, 397, 362, 0, 344, 469, 470, 289, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 0, 0, 0, 628, 0, 0, 0,
	251, 633, 0, 0, 0, 335, 248, 0, 0, 394,
	0, 197, 0, 442, 235, 345, 342, 475, 263, 254,
	250, 234, 290, 352, 392, 462, 386, 640, 339, 0,
	0, 452, 365, 0, 0, 0, 0, 0, 635, 636,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 233,
	298, 196, 377, 453, 267, 0, 87, 0, 0, 188,
	189, 190, 709, 716, 717, 718, 719, 720, 710, 712,
	0, 0, 224, 711, 231, 651, 653, 652, 662, 663,
	664, 665, 666, 667, 668, 649, 714, 721, 722, 0,
	246, 294, 253, 245, 472, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	611, 625, 0, 639, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 622, 623, 0, 0, 0, 0, 689, 0,
	624, 0, 0, 632, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 366, 238,
	0, 688, 0, 0, 508, 0, 0, 686, 0, 0,
	0, 0, 334, 0, 303, 192, 211, 0, 0, 376,
	419, 429, 0, 0, 0, 236, 0, 427, 390, 491,
	219, 265, 416, 396, 425, 403, 268, 0, 0, 426,
	340, 477, 410, 488, 509, 510, 244, 370, 499, 466,
	505, 523, 212, 241, 384, 459, 494, 449, 363, 473,
	474, 302, 448, 275, 195, 338, 515, 210, 435, 228,
	217, 479, 497, 270, 414, 202, 461, 486, 225, 439,
	0, 0, 525, 204, 484, 458, 359, 299, 300, 203,
	0, 415, 249, 273, 239, 379, 481, 482, 237, 526,
	214, 504, 206, 0, 503, 372, 476, 485, 360, 350,
	205, 483, 358, 349, 305, 657, 658, 261, 284, 408,
	343, 409, 285, 368, 367, 369, 198, 495, 0, 199,
	0, 454, 496, 527, 220, 221, 223, 0, 260, 264,
	272, 274, 280, 281, 288, 336, 383, 407, 405, 411,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 371, 287, 450, 304, 341, 0,
	0, 389, 428, 226, 493, 451, 695, 687, 644, 699,
	646, 696, 697, 641, 642, 645, 698, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 690, 631, 630, 0,
	637, 638, 0, 647, 648, 650, 654, 655, 656, 659,
	660, 661, 669, 671, 672, 670, 673, 674, 675, 678,
	679, 680, 681, 676, 677, 682, 700, 701, 702, 703,
	629, 191, 207, 337, 0, 412, 269, 524, 502, 498,
	0, 209, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 218,
	222, 229, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 301, 347, 353, 354, 355, 356, 373, 374,
	375, 378, 381, 382, 385, 387, 388, 391, 395, 399,
	400, 401, 402, 404, 406, 413, 418, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 279, 487,
	512, 0, 346, 0, 0, 348, 262, 282, 293, 0,
	501, 457, 213, 424, 271, 201, 232, 216, 240, 255,
	258, 297, 357, 364, 393, 398, 276, 252, 230, 417,
	227, 440, 463, 464, 465, 467, 361, 247, 397, 362,
	0, 344, 469, 470, 289, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 0, 628, 0, 0, 0, 251, 633, 0, 0,
	0, 335, 248, 0, 0, 394, 0, 197, 0, 442,
	235, 345, 342, 475, 263, 254, 250, 234, 290, 352,
	392, 462, 386, 640, 339, 0, 0, 452, 365, 0,
	0, 0, 0, 0, 635, 636, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 233, 298, 196, 377, 453,
	267, 0, 87, 0, 0, 188, 189, 190, 709, 716,
	717, 718, 719, 720, 710, 712, 0, 0, 224, 711,
	231, 651, 653, 652, 662, 663, 664, 665, 666, 667,
	668, 649, 714, 721, 722, 0, 246, 294, 253, 245,
	472, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 625, 0, 639,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 622, 623,
	0, 0, 0, 0, 689, 0, 624, 0, 0, 632,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 366, 238, 0, 688, 0, 0,
	508, 0, 0, 686, 0, 0, 0, 0, 334, 0,
	303, 192, 211, 0, 0, 376, 419, 429, 0, 0,
	0, 236, 0, 427, 390, 491, 219, 265, 416, 396,
	425, 403, 268, 0, 0, 426, 340, 477, 410, 488,
	509, 510, 244, 370, 499, 466, 505, 523, 212, 241,
	384, 459, 494, 449, 363, 473, 474, 302, 448, 275,
	195, 338, 515, 210, 435, 228, 217, 479, 497, 270,
	414, 202, 461, 486, 225, 439, 0, 0, 525, 204,
	484, 458, 359, 299, 300, 203, 0, 415, 249, 273,
	239, 379, 481, 482, 237, 526, 214, 504, 206, 0,
	503, 372, 476, 485, 360, 350, 205, 483, 358, 349,
	305, 657, 658, 261, 284, 408, 343, 409, 285, 368,
	367, 369, 198, 495, 0, 199, 0, 454, 496, 527,
	220, 221, 223, 0, 260, 264, 272, 274, 280, 281,
	288, 336, 383, 407, 405, 411, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	371, 287, 450, 304, 341, 0, 0, 389, 428, 226,
	493, 451, 695, 687, 644, 699, 646, 696, 697, 641,
	642, 645, 698, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 690, 631, 630, 0, 637, 638, 0, 647,
	648, 650, 654, 655, 656, 659, 660, 661, 669, 671,
	672, 670, 673, 674, 675, 678, 679, 680, 681, 676,
	677, 682, 700, 701, 702, 703, 629, 191, 207, 337,
	0, 412, 269, 524, 502, 498, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	353, 354, 355, 356, 373, 374, 375, 378, 381, 382,
	385, 387, 388, 391, 395, 399, 400, 401, 402, 404,
	406, 413, 418, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 279, 487, 512, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 501, 457, 213, 424,
	271, 201, 232, 216, 240, 255, 258, 297, 357, 364,
	393, 398, 276, 252, 230, 417, 227, 440, 463, 464,
	465, 467, 361, 247, 397, 362, 0, 344, 469, 470,
	289, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 394, 0, 197, 0, 442, 235, 345, 342, 475,
	263, 254, 250, 234, 290, 352, 392, 462, 386, 0,
	339, 0, 0, 452, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 377, 453, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 716, 717, 0, 0, 0,
	0, 1698, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 472, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	366, 238, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 303, 192, 211, 0,
	0, 376, 419, 429, 0, 0, 0, 236, 0, 427,
	390, 491, 219, 265, 416, 396, 425, 403, 268, 0,
	0, 426, 340, 477, 410, 488, 509, 510, 244, 370,
	499, 466, 505, 523, 212, 241, 384, 459, 494, 449,
	363, 473, 474, 302, 448, 275, 195, 338, 515, 210,
	435, 228, 217, 479, 497, 270, 414, 202, 461, 486,
	225, 439, 0, 0, 525, 204, 484, 458, 359, 299,
	300, 203, 0, 415, 249, 273, 239, 379, 481, 482,
	237, 526, 214, 504, 206, 0, 503, 372, 476, 485,
	360, 350, 205, 483, 358, 349, 305, 324, 325, 261,
	284, 408, 343, 409, 285, 368, 367, 369, 198, 495,
	0, 199, 0, 454, 496, 527, 220, 221, 223, 0,
	260, 264, 272, 274, 280, 281, 288, 336, 383, 407,
	405, 411, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 371, 287, 450, 304,
	341, 0, 0, 389, 428, 226, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 351, 441,
	490, 306, 318, 321, 311, 330, 0, 331, 307, 308,
	313, 315, 316, 317, 322, 323, 327, 333, 420, 421,
	422, 423, 0, 191, 207, 337, 0, 412, 269, 524,
	502, 498, 0, 209, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 218, 222, 229, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 301, 347, 353, 354, 355, 356,
	373, 374, 375, 378, 381, 382, 385, 387, 388, 391,
	395, 399, 400, 401, 402, 404, 406, 413, 418, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	279, 487, 512, 0, 346, 0, 0, 348, 262, 282,
	293, 0, 501, 457, 213, 424, 271, 201, 232, 216,
	240, 255, 258, 297, 357, 364, 393, 398, 276, 252,
	230, 417, 227, 440, 463, 464, 465, 467, 361, 247,
	397, 362, 0, 344, 469, 470, 289, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 335, 248, 0, 0, 394, 0, 197,
	0, 442, 235, 345, 342, 475, 263, 254, 250, 234,
	290, 352, 392, 462, 386, 0, 339, 0, 0, 452,
	365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 233, 298, 196,
	377, 453, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 231, 320, 329, 328, 309, 310, 312, 314,
	319, 326, 332, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 472, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 1024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 366, 238, 0, 0,
	0, 1023, 508, 0, 0, 0, 0, 0, 1020, 1021,
	334, 981, 303, 192, 211, 1014, 1018, 376, 419, 429,
	0, 0, 0, 236, 0, 427, 390, 491, 219, 265,
	416, 396, 425, 403, 268, 0, 0, 426, 340, 477,
	410, 488, 509, 510, 244, 370, 499, 466, 505, 523,
	212, 241, 384, 459, 494, 449, 363, 473, 474, 302,
	448, 275, 195, 338, 515, 210, 435, 228, 217, 479,
	497, 270, 414, 202, 461, 486, 225, 439, 0, 0,
	525, 204, 484, 458, 359, 299, 300, 203, 0, 415,
	249, 273, 239, 379, 481, 482, 237, 526, 214, 504,
	206, 0, 503, 372, 476, 485, 360, 350, 205, 483,
	358, 349, 305, 324, 325, 261, 284, 408, 343, 409,
	285, 368, 367, 369, 198, 495, 0, 199, 0, 454,
	496, 527, 220, 221, 223, 0, 260, 264, 272, 274,
	280, 281, 288, 336, 383, 407, 405, 411, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 371, 287, 450, 304, 341, 0, 0, 389,
	428, 226, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 351, 441, 490, 306, 318, 321,
	311, 330, 0, 331, 307, 308, 313, 315, 316, 317,
	322, 323, 327, 333, 420, 421, 422, 423, 0, 191,
	207, 337, 0, 412, 269, 524, 502, 498, 0, 209,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 218, 222, 229,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	301, 347, 353, 354, 355, 356, 373, 374, 375, 378,
	381, 382, 385, 387, 388, 391, 395, 399, 400, 401,
	402, 404, 406, 413, 418, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 279, 487, 512, 0,
	346, 0, 0, 348, 262, 282, 293, 0, 501, 457,
	213, 424, 271, 201, 232, 216, 240, 255, 258, 297,
	357, 364, 393, 398, 276, 252, 230, 417, 227, 440,
	463, 464, 465, 467, 361, 247, 397, 1368, 1200, 344,
	469, 470, 289, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 1370,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 335,
	248, 0, 0, 394, 0, 197, 0, 442, 235, 345,
	342, 475, 263, 254, 250, 234, 290, 352, 392, 462,
	386, 0, 339, 0, 0, 452, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 233, 298, 196, 377, 453, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 1372, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 231, 320,
	329, 328, 309, 310, 312, 314, 319, 326, 332, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 472, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	1196, 0, 1197, 1198, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 366, 238, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 376, 419, 429, 0, 0, 0, 236,
	0, 427, 390, 491, 219, 265, 416, 396, 425, 403,
	268, 0, 0, 426, 340, 477, 410, 488, 509, 510,
	244, 370, 499, 466, 505, 523, 212, 241, 384, 459,
	494, 449, 363, 473, 474, 302, 448, 275, 195, 338,
	515, 210, 435, 228, 217, 479, 497, 270, 414, 202,
	461, 486, 225, 439, 0, 0, 525, 204, 484, 458,
	359, 299, 300, 203, 0, 415, 249, 273, 239, 379,
	481, 482, 237, 526, 214, 504, 206, 0, 503, 372,
	476, 485, 360, 350, 205, 483, 358, 349, 305, 324,
	325, 261, 284, 408, 343, 409, 285, 368, 367, 369,
	198, 495, 0, 199, 0, 454, 496, 527, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	383, 407, 405, 411, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 371, 287,
	450, 304, 341, 0, 0, 389, 428, 226, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	351, 441, 490, 306, 318, 321, 311, 330, 0, 331,
	307, 308, 313, 315, 316, 317, 322, 323, 327, 333,
	420, 421, 422, 423, 0, 191, 207, 337, 0, 412,
	269, 524, 502, 498, 0, 209, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 218, 222, 229, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 301, 347, 353, 354,
	355, 356, 373, 374, 375, 378, 381, 382, 385, 387,
	388, 391, 395, 399, 400, 401, 402, 404, 406, 413,
	418, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 279, 487, 512, 0, 346, 0, 0, 348,
	262, 282, 293, 0, 501, 457, 213, 424, 271, 201,
	232, 216, 240, 255, 258, 297, 357, 364, 393, 398,
	276, 252, 230, 417, 227, 440, 463, 464, 465, 467,
	361, 247, 397, 0, 362, 344, 469, 470, 289, 78,
	468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 335, 248, 0, 0,
	394, 0, 197, 0, 442, 235, 345, 342, 475, 263,
	254, 250, 234, 290, 352, 392, 462, 386, 0, 339,
	0, 0, 452, 365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	233, 298, 196, 377, 453, 267, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 231, 320, 329, 328, 309,
	310, 312, 314, 319, 326, 332, 0, 0, 0, 0,
	0, 246, 294, 253, 245, 472, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 366,
	238, 0, 0, 0, 0, 508, 0, 0, 0, 0,
	0, 0, 0, 334, 0, 303, 192, 211, 0, 0,
	376, 419, 429, 0, 0, 0, 236, 0, 427, 390,
	491, 219, 265, 416, 396, 425, 403, 268, 0, 0,
	426, 340, 477, 410, 488, 509, 510, 244, 370, 499,
	466, 505, 523, 212, 241, 384, 459, 494, 449, 363,
	473, 474, 302, 448, 275, 195, 338, 515, 210, 435,
	228, 217, 479, 497, 270, 414, 202, 461, 486, 225,
	439, 0, 0, 525, 204, 484, 458, 359, 299, 300,
	203, 0, 415, 249, 273, 239, 379, 481, 482, 237,
	526, 214, 504, 206, 0, 503, 372, 476, 485, 360,
	350, 205, 483, 358, 349, 305, 324, 325, 261, 284,
	408, 343, 409, 285, 368, 367, 369, 198, 495, 0,
	199, 0, 454, 496, 527, 220, 221, 223, 0, 260,
	264, 272, 274, 280, 281, 288, 336, 383, 407, 405,
	411, 0, 471, 489, 500, 507, 513, 514, 516, 517,
	518, 519, 520, 522, 521, 371, 287, 450, 304, 341,
	0, 0, 389, 428, 226, 493, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 351, 441, 490,
	306, 318, 321, 311, 330, 0, 331, 307, 308, 313,
	315, 316, 317, 322, 323, 327, 333, 420, 421, 422,
	423, 0, 191, 207, 337, 86, 412, 269, 524, 502,
	498, 0, 209, 0, 243, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	218, 222, 229, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 301, 347, 353, 354, 355, 356, 373,
	374, 375, 378, 381, 382, 385, 387, 388, 391, 395,
	399, 400, 401, 402, 404, 406, 413, 418, 430, 431,
	432, 433, 434, 437, 438, 443, 444, 445, 446, 447,
	455, 456, 460, 478, 480, 492, 506, 511, 436, 279,
	487, 512, 0, 346, 0, 0, 348, 262, 282, 293,
	0, 501, 457, 213, 424, 271, 201, 232, 216, 240,
	255, 258, 297, 357, 364, 393, 398, 276, 252, 230,
	417, 227, 440, 463, 464, 465, 467, 361, 247, 397,
	362, 0, 344, 469, 470, 289, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 335, 248, 0, 0, 394, 0, 197, 0,
	442, 235, 345, 342, 475, 263, 254, 250, 234, 290,
	352, 392, 462, 386, 0, 339, 0, 0, 452, 365,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 233, 298, 196, 377,
	453, 267, 0, 0, 0, 0, 188, 189, 190, 1311,
	1314, 0, 0, 0, 0, 1310, 1313, 0, 0, 224,
	1309, 231, 320, 329, 328, 309, 310, 312, 314, 319,
	326, 332, 0, 0, 0, 0, 0, 246, 294, 253,
	245, 472, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 366, 238, 0, 0, 0,
	0, 508, 0, 0, 0, 0, 0, 0, 0, 334,
	0, 303, 192, 211, 0, 0, 376, 419, 429, 0,
	0, 0, 236, 0, 427, 390, 491, 219, 265, 416,
	396, 425, 403, 268, 0, 0, 426, 340, 477, 410,
	488, 509, 510, 244, 370, 499, 466, 505, 523, 212,
	241, 384, 459, 494, 449, 363, 473, 474, 302, 448,
	275, 195, 338, 515, 210, 435, 228, 217, 479, 497,
	270, 414, 202, 461, 486, 225, 439, 0, 0, 525,
	204, 484, 458, 359, 299, 300, 203, 0, 415, 249,
	273, 239, 379, 481, 482, 237, 526, 214, 504, 206,
	0, 503, 372, 476, 485, 360, 350, 205, 483, 358,
	349, 305, 324, 325, 261, 284, 408, 343, 409, 285,
	368, 367, 369, 198, 495, 0, 199, 0, 454, 496,
	527, 220, 221, 223, 0, 260, 264, 272, 274, 280,
	281, 288, 336, 383, 407, 405, 411, 0, 471, 489,
	500, 507, 513, 514, 516, 517, 518, 519, 520, 522,
	521, 371, 287, 450, 304, 341, 0, 0, 389, 428,
	226, 493, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 351, 441, 490, 306, 318, 321, 311,
	330, 0, 331, 307, 308, 313, 315, 316, 317, 322,
	323, 327, 333, 420, 421, 422, 423, 0, 191, 207,
	337, 0, 412, 269, 524, 502, 498, 0, 209, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 218, 222, 229, 242,
	257, 259, 266, 278, 283, 286, 291, 292, 295, 301,
	347, 353, 354, 355, 356, 373, 374, 375, 378, 381,
	382, 385, 387, 388, 391, 395, 399, 400, 401, 402,
	404, 406, 413, 418, 430, 431, 432, 433, 434, 437,
	438, 443, 444, 445, 446, 447, 455, 456, 460, 478,
	480, 492, 506, 511, 436, 279, 487, 512, 0, 346,
	0, 0, 348, 262, 282, 293, 0, 501, 457, 213,
	424, 271, 201, 232, 216, 240, 255, 258, 297, 357,
	364, 393, 398, 276, 252, 230, 417, 227, 440, 463,
	464, 465, 467, 361, 247, 397, 0, 362, 344, 469,
	470, 289, 78, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 335,
	248, 0, 0, 394, 0, 197, 0, 442, 235, 345,
	342, 475, 263, 254, 250, 234, 290, 352, 392, 462,
	386, 0, 339, 0, 0, 452, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 233, 298, 196, 377, 453, 267, 0,
	87, 0, 1349, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 231, 320,
	329, 328, 309, 310, 312, 314, 319, 326, 332, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 472, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 366, 238, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 376, 419, 429, 0, 0, 0, 236,
	0, 427, 390, 491, 219, 265, 416, 396, 425, 403,
	268, 0, 0, 426, 340, 477, 410, 488, 509, 510,
	244, 370, 499, 466, 505, 523, 212, 241, 384, 459,
	494, 449, 363, 473, 474, 302, 448, 275, 195, 338,
	515, 210, 435, 228, 217, 479, 497, 270, 414, 202,
	461, 486, 225, 439, 0, 0, 525, 204, 484, 458,
	359, 299, 300, 203, 0, 415, 249, 273, 239, 379,
	481, 482, 237, 526, 214, 504, 206, 0, 503, 372,
	476, 485, 360, 350, 205, 483, 358, 349, 305, 324,
	325, 261, 284, 408, 343, 409, 285, 368, 367, 369,
	198, 495, 0, 199, 0, 454, 496, 527, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	383, 407, 405, 411, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 371, 287,
	450, 304, 341, 0, 0, 389, 428, 226, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	351, 441, 490, 306, 318, 321, 311, 330, 0, 331,
	307, 308, 313, 315, 316, 317, 322, 323, 327, 333,
	420, 421, 422, 423, 0, 191, 207, 337, 86, 412,
	269, 524, 502, 498, 0, 209, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 218, 222, 229, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 301, 347, 353, 354,
	355, 356, 373, 374, 375, 378, 381, 382, 385, 387,
	388, 391, 395, 399, 400, 401, 402, 404, 406, 413,
	418, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 279, 487, 512, 0, 346, 0, 0, 348,
	262, 282, 293, 0, 501, 457, 213, 424, 271, 201,
	232, 216, 240, 255, 258, 297, 357, 364, 393, 398,
	276, 252, 230, 417, 227, 440, 463, 464, 465, 467,
	361, 247, 397, 362, 0, 344, 469, 470, 289, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 335, 248, 0, 0, 394,
	0, 197, 0, 442, 235, 345, 342, 475, 263, 254,
	250, 234, 290, 352, 392, 462, 386, 0, 339, 0,
	0, 452, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 233,
	298, 196, 377, 453, 267, 0, 87, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 231, 320, 329, 328, 309, 310,
	312, 314, 319, 326, 332, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 472, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 366, 238,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 303, 192, 211, 0, 0, 376,
	419, 429, 0, 0, 0, 236, 0, 427, 390, 491,
	219, 265, 416, 396, 425, 403, 268, 0, 0, 426,
	340, 477, 410, 488, 509, 510, 244, 370, 499, 466,
	505, 523, 212, 241, 384, 459, 494, 449, 363, 473,
	474, 302, 448, 275, 195, 338, 515, 210, 435, 228,
	217, 479, 497, 270, 414, 202, 461, 486, 225, 439,
	0, 0, 525, 204, 484, 458, 359, 299, 300, 203,
	0, 415, 249, 273, 239, 379, 481, 482, 237, 526,
	214, 504, 206, 0, 503, 372, 476, 485, 360, 350,
	205, 483, 358, 349, 305, 324, 325, 261, 284, 408,
	343, 409, 285, 368, 367, 369, 198, 495, 0, 199,
	0, 454, 496, 527, 220, 221, 223, 0, 260, 264,
	272, 274, 280, 281, 288, 336, 383, 407, 405, 411,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 371, 287, 450, 304, 341, 0,
	0, 389, 428, 226, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 351, 441, 490, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 420, 421, 422, 423,
	0, 191, 207, 337, 0, 412, 269, 524, 502, 498,
	0, 209, 0, 243, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 218,
	222, 229, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 301, 347, 353, 354, 355, 356, 373, 374,
	375, 378, 381, 382, 385, 387, 388, 391, 395, 399,
	400, 401, 402, 404, 406, 413, 418, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 279, 487,
	512, 0, 346, 0, 0, 348, 262, 282, 293, 0,
	501, 457, 213, 424, 271, 201, 232, 216, 240, 255,
	258, 297, 357, 364, 393, 398, 276, 252, 230, 417,
	227, 440, 463, 464, 465, 467, 361, 247, 397, 362,
	0, 344, 469, 470, 289, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 1813, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 335, 248, 0, 0, 394, 0, 197, 0, 442,
	235, 345, 342, 475, 263, 254, 250, 234, 290, 352,
	392, 462, 386, 0, 339, 0, 0, 452, 365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 233, 298, 196, 377, 453,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 1550,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	231, 320, 329, 328, 309, 310, 312, 314, 319, 326,
	332, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	472, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 366, 238, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	303, 192, 211, 0, 0, 376, 419, 429, 0, 0,
	0, 236, 0, 427, 390, 491, 219, 265, 416, 396,
	425, 403, 268, 0, 1811, 426, 340, 477, 410, 488,
	509, 510, 244, 370, 499, 466, 505, 523, 212, 241,
	384, 459, 494, 449, 363, 473, 474, 302, 448, 275,
	195, 338, 515, 210, 435, 228, 217, 479, 497, 270,
	414, 202, 461, 486, 225, 439, 0, 0, 525, 204,
	484, 458, 359, 299, 300, 203, 0, 415, 249, 273,
	239, 379, 481, 482, 237, 526, 214, 504, 206, 0,
	503, 372, 476, 485, 360, 350, 205, 483, 358, 349,
	305, 324, 325, 261, 284, 408, 343, 409, 285, 368,
	367, 369, 198, 495, 0, 199, 0, 454, 496, 527,
	220, 221, 223, 0, 260, 264, 272, 274, 280, 281,
	288, 336, 383, 407, 405, 411, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	371, 287, 450, 304, 341, 0, 0, 389, 428, 226,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 351, 441, 490, 306, 318, 321, 311, 330,
	0, 331, 307, 308, 313, 315, 316, 317, 322, 323,
	327, 333, 420, 421, 422, 423, 0, 191, 207, 337,
	0, 412, 269, 524, 502, 498, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	353, 354, 355, 356, 373, 374, 375, 378, 381, 382,
	385, 387, 388, 391, 395, 399, 400, 401, 402, 404,
	406, 413, 418, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 279, 487, 512, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 501, 457, 213, 424,
	271, 201, 232, 216, 240, 255, 258, 297, 357, 364,
	393, 398, 276, 252, 230, 417, 227, 440, 463, 464,
	465, 467, 361, 247, 397, 362, 0, 344, 469, 470,
	289, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 394, 0, 197, 0, 442, 235, 345, 342, 475,
	263, 254, 250, 234, 290, 352, 392, 462, 386, 0,
	339, 0, 0, 452, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 377, 453, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 472, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	366, 238, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 334, 981, 303, 192, 211, 979,
	0, 376, 419, 429, 0, 0, 0, 236, 0, 427,
	390, 491, 219, 265, 416, 396, 425, 403, 268, 0,
	0, 426, 340, 477, 410, 488, 509, 510, 244, 370,
	499, 466, 505, 523, 212, 241, 384, 459, 494, 449,
	363, 473, 474, 302, 448, 275, 195, 338, 515, 210,
	435, 228, 217, 479, 497, 270, 414, 202, 461, 486,
	225, 439, 0, 0, 525, 204, 484, 458, 359, 299,
	300, 203, 0, 415, 249, 273, 239, 379, 481, 482,
	237, 526, 214, 504, 206, 0, 503, 372, 476, 485,
	360, 350, 205, 483, 358, 349, 305, 324, 325, 261,
	284, 408, 343, 409, 285, 368, 367, 369, 198, 495,
	0, 199, 0, 454, 496, 527, 220, 221, 223, 0,
	260, 264, 272, 274, 280, 281, 288, 336, 383, 407,
	405, 411, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 371, 287, 450, 304,
	341, 0, 0, 389, 428, 226, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 351, 441,
	490, 306, 318, 321, 311, 330, 0, 331, 307, 308,
	313, 315, 316, 317, 322, 323, 327, 333, 420, 421,
	422, 423, 0, 191, 207, 337, 0, 412, 269, 524,
	502, 498, 0, 209, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 218, 222, 229, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 301, 347, 353, 354, 355, 356,
	373, 374, 375, 378, 381, 382, 385, 387, 388, 391,
	395, 399, 400, 401, 402, 404, 406, 413, 418, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	279, 487, 512, 0, 346, 0, 0, 348, 262, 282,
	293, 0, 501, 457, 213, 424, 271, 201, 232, 216,
	240, 255, 258, 297, 357, 364, 393, 398, 276, 252,
	230, 417, 227, 440, 463, 464, 465, 467, 361, 247,
	397, 362, 0, 344, 469, 470, 289, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 0, 1813, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 335, 248, 0, 0, 394, 0, 197,
	0, 442, 235, 345, 342, 475, 263, 254, 250, 234,
	290, 352, 392, 462, 386, 0, 339, 0, 0, 452,
	365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 233, 298, 196,
	377, 453, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 231, 320, 329, 328, 309, 310, 312, 314,
	319, 326, 332, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 472, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 366, 238, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 303, 192, 211, 0, 0, 376, 419, 429,
	0, 0, 0, 236, 0, 427, 390, 491, 219, 265,
	416, 396, 425, 403, 268, 0, 0, 426, 340, 477,
	410, 488, 509, 510, 244, 370, 499, 466, 505, 523,
	212, 241, 384, 459, 494, 449, 363, 473, 474, 302,
	448, 275, 195, 338, 515, 210, 435, 228, 217, 479,
	497, 270, 414, 202, 461, 486, 225, 439, 0, 0,
	525, 204, 484, 458, 359, 299, 300, 203, 0, 415,
	249, 273, 239, 379, 481, 482, 237, 526, 214, 504,
	206, 0, 503, 372, 476, 485, 360, 350, 205, 483,
	358, 349, 305, 324, 325, 261, 284, 408, 343, 409,
	285, 368, 367, 369, 198, 495, 0, 199, 0, 454,
	496, 527, 220, 221, 223, 0, 260, 264, 272, 274,
	280, 281, 288, 336, 383, 407, 405, 411, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 371, 287, 450, 304, 341, 0, 0, 389,
	428, 226, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 351, 441, 490, 306, 318, 321,
	311, 330, 0, 331, 307, 308, 313, 315, 316, 317,
	322, 323, 327, 333, 420, 421, 422, 423, 0, 191,
	207, 337, 0, 412, 269, 524, 502, 498, 0, 209,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 218, 222, 229,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	301, 347, 353, 354, 355, 356, 373, 374, 375, 378,
	381, 382, 385, 387, 388, 391, 395, 399, 400, 401,
	402, 404, 406, 413, 418, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 279, 487, 512, 0,
	346, 0, 0, 348, 262, 282, 293, 0, 501, 457,
	213, 424, 271, 201, 232, 216, 240, 255, 258, 297,
	357, 364, 393, 398, 276, 252, 230, 417, 227, 440,
	463, 464, 465, 467, 361, 247, 397, 362, 0, 344,
	469, 470, 289, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 335,
	248, 0, 0, 394, 0, 197, 0, 442, 235, 345,
	342, 475, 263, 254, 250, 234, 290, 352, 392, 462,
	386, 0, 339, 0, 0, 452, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 233, 298, 196, 377, 453, 267, 0,
	0, 0, 1349, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 231, 320,
	329, 328, 309, 310, 312, 314, 319, 326, 332, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 472, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 366, 238, 0, 0, 0, 0, 508, 0,
	0, 0, 2930, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 376, 419, 429, 0, 0, 0, 236,
	0, 427, 390, 491, 219, 265, 416, 396, 425, 403,
	268, 0, 0, 426, 340, 477, 410, 488, 509, 510,
	244, 370, 499, 466, 505, 523, 212, 241, 384, 459,
	494, 449, 363, 473, 474, 302, 448, 275, 195, 338,
	515, 210, 435, 228, 217, 479, 497, 270, 414, 202,
	461, 486, 225, 439, 0, 0, 525, 204, 484, 458,
	359, 299, 300, 203, 0, 415, 249, 273, 239, 379,
	481, 482, 237, 526, 214, 504, 206, 0, 503, 372,
	476, 485, 360, 350, 205, 483, 358, 349, 305, 324,
	325, 261, 284, 408, 343, 409, 285, 368, 367, 369,
	198, 495, 0, 199, 0, 454, 496, 527, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	383, 407, 405, 411, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 371, 287,
	450, 304, 341, 0, 0, 389, 428, 226, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	351, 441, 490, 306, 318, 321, 311, 330, 0, 331,
	307, 308, 313, 315, 316, 317, 322, 323, 327, 333,
	420, 421, 422, 423, 0, 191, 207, 337, 0, 412,
	269, 524, 502, 498, 0, 209, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 218, 222, 229, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 301, 347, 353, 354,
	355, 356, 373, 374, 375, 378, 381, 382, 385, 387,
	388, 391, 395, 399, 400, 401, 402, 404, 406, 413,
	418, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 279, 487, 512, 0, 346, 0, 0, 348,
	262, 282, 293, 0, 501, 457, 213, 424, 271, 201,
	232, 216, 240, 255, 258, 297, 357, 364, 393, 398,
	276, 252, 230, 417, 227, 440, 463, 464, 465, 467,
	361, 247, 397, 362, 0, 344, 469, 470, 289, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 335, 248, 0, 0, 394,
	0, 197, 0, 442, 235, 345, 342, 475, 263, 254,
	250, 234, 290, 352, 392, 462, 386, 0, 339, 0,
	0, 452, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 233,
	298, 196, 377, 453, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 231, 320, 329, 328, 309, 310,
	312, 314, 319, 326, 332, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 472, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 366, 238,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 303, 192, 211, 0, 0, 376,
	419, 429, 0, 0, 0, 236, 0, 427, 390, 491,
	219, 265, 416, 396, 425, 403, 268, 0, 0, 426,
	340, 477, 410, 488, 509, 510, 244, 370, 499, 466,
	505, 523, 212, 241, 384, 459, 494, 449, 363, 473,
	474, 302, 448, 275, 195, 338, 515, 210, 435, 228,
	217, 479, 497, 270, 414, 202, 461, 486, 225, 439,
	0, 0, 525, 204, 484, 458, 359, 299, 300, 203,
	0, 415, 249, 273, 239, 379, 481, 482, 237, 526,
	214, 504, 206, 0, 503, 372, 476, 485, 360, 350,
	205, 483, 358, 349, 305, 324, 325, 261, 284, 408,
	343, 409, 285, 368, 367, 369, 198, 495, 0, 199,
	0, 454, 496, 527, 220, 221, 223, 0, 260, 264,
	272, 274, 280, 281, 288, 336, 383, 407, 405, 411,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 371, 287, 450, 304, 341, 0,
	0, 389, 428, 226, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 351, 441, 490, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 420, 421, 422, 423,
	0, 191, 207, 337, 0, 412, 269, 524, 502, 498,
	0, 209, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 218,
	222, 229, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 301, 347, 353, 354, 355, 356, 373, 374,
	375, 378, 381, 382, 385, 387, 388, 391, 395, 399,
	400, 401, 402, 404, 406, 413, 418, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 279, 487,
	512, 0, 346, 0, 0, 348, 262, 282, 293, 0,
	501, 457, 213, 424, 271, 201, 232, 216, 240, 255,
	258, 297, 357, 364, 393, 398, 276, 252, 230, 417,
	227, 440, 463, 464, 465, 467, 361, 247, 397, 362,
	0, 344, 469, 470, 289, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 335, 248, 0, 0, 394, 0, 197, 0, 442,
	235, 345, 342, 475, 263, 254, 250, 234, 290, 352,
	392, 462, 386, 0, 339, 0, 0, 452, 365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 233, 298, 196, 377, 453,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 2159,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	231, 320, 329, 328, 309, 310, 312, 314, 319, 326,
	332, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	472, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 366, 238, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	303, 192, 211, 0, 0, 376, 419, 429, 0, 0,
	0, 236, 0, 427, 390, 491, 219, 265, 416, 396,
	425, 403, 268, 0, 0, 426, 340, 477, 410, 488,
	509, 510, 244, 370, 499, 466, 505, 523, 212, 241,
	384, 459, 494, 449, 363, 473, 474, 302, 448, 275,
	195, 338, 515, 210, 435, 228, 217, 479, 497, 270,
	414, 202, 461, 486, 225, 439, 0, 0, 525, 204,
	484, 458, 359, 299, 300, 203, 0, 415, 249, 273,
	239, 379, 481, 482, 237, 526, 214, 504, 206, 0,
	503, 372, 476, 485, 360, 350, 205, 483, 358, 349,
	305, 324, 325, 261, 284, 408, 343, 409, 285, 368,
	367, 369, 198, 495, 0, 199, 0, 454, 496, 527,
	220, 221, 223, 0, 260, 264, 272, 274, 280, 281,
	288, 336, 383, 407, 405, 411, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	371, 287, 450, 304, 341, 0, 0, 389, 428, 226,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 351, 441, 490, 306, 318, 321, 311, 330,
	0, 331, 307, 308, 313, 315, 316, 317, 322, 323,
	327, 333, 420, 421, 422, 423, 0, 191, 207, 337,
	0, 412, 269, 524, 502, 498, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	353, 354, 355, 356, 373, 374, 375, 378, 381, 382,
	385, 387, 388, 391, 395, 399, 400, 401, 402, 404,
	406, 413, 418, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 279, 487, 512, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 501, 457, 213, 424,
	271, 201, 232, 216, 240, 255, 258, 297, 357, 364,
	393, 398, 276, 252, 230, 417, 227, 440, 463, 464,
	465, 467, 361, 247, 397, 362, 0, 344, 469, 470,
	289, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 394, 0, 197, 0, 442, 235, 345, 342, 475,
	263, 254, 250, 234, 290, 352, 392, 462, 386, 0,
	339, 0, 0, 452, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 377, 453, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 2144, 0, 0,
	0, 2145, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 472, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	366, 238, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 303, 192, 211, 0,
	0, 376, 419, 429, 0, 0, 0, 236, 0, 427,
	390, 491, 219, 265, 416, 396, 425, 403, 268, 0,
	0, 426, 340, 477, 410, 488, 509, 510, 244, 370,
	499, 466, 505, 523, 212, 241, 384, 459, 494, 449,
	363, 473, 474, 302, 448, 275, 195, 338, 515, 210,
	435, 228, 217, 479, 497, 270, 414, 202, 461, 486,
	225, 439, 0, 0, 525, 204, 484, 458, 359, 299,
	300, 203, 0, 415, 249, 273, 239, 379, 481, 482,
	237, 526, 214, 504, 206, 0, 503, 372, 476, 485,
	360, 350, 205, 483, 358, 349, 305, 324, 325, 261,
	284, 408, 343, 409, 285, 368, 367, 369, 198, 495,
	0, 199, 0, 454, 496, 527, 220, 221, 223, 0,
	260, 264, 272, 274, 280, 281, 288, 336, 383, 407,
	405, 411, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 371, 287, 450, 304,
	341, 0, 0, 389, 428, 226, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 351, 441,
	490, 306, 318, 321, 311, 330, 0, 331, 307, 308,
	313, 315, 316, 317, 322, 323, 327, 333, 420, 421,
	422, 423, 0, 191, 207, 337, 0, 412, 269, 524,
	502, 498, 0, 209, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 218, 222, 229, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 301, 347, 353, 354, 355, 356,
	373, 374, 375, 378, 381, 382, 385, 387, 388, 391,
	395, 399, 400, 401, 402, 404, 406, 413, 418, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	279, 487, 512, 0, 346, 0, 0, 348, 262, 282,
	293, 0, 501, 457, 213, 424, 271, 201, 232, 216,
	240, 255, 258, 297, 357, 364, 393, 398, 276, 252,
	230, 417, 227, 440, 463, 464, 465, 467, 361, 247,
	397, 362, 0, 344, 469, 470, 289, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 1393,
	0, 0, 0, 335, 248, 0, 0, 394, 0, 197,
	0, 442, 235, 345, 342, 475, 263, 254, 250, 234,
	290, 352, 392, 462, 386, 0, 339, 0, 0, 452,
	365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 233, 298, 196,
	377, 453, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 1392, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 231, 320, 329, 328, 309, 310, 312, 314,
	319, 326, 332, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 472, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 366, 238, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 303, 192, 211, 0, 0, 376, 419, 429,
	0, 0, 0, 236, 0, 427, 390, 491, 219, 265,
	416, 396, 425, 403, 268, 0, 0, 426, 340, 477,
	410, 488, 509, 510, 244, 370, 499, 466, 505, 523,
	212, 241, 384, 459, 494, 449, 363, 473, 474, 302,
	448, 275, 195, 338, 515, 210, 435, 228, 217, 479,
	497, 270, 414, 202, 461, 486, 225, 439, 0, 0,
	525, 204, 484, 458, 359, 299, 300, 203, 0, 415,
	249, 273, 239, 379, 481, 482, 237, 526, 214, 504,
	206, 0, 503, 372, 476, 485, 360, 350, 205, 483,
	358, 349, 305, 324, 325, 261, 284, 408, 343, 409,
	285, 368, 367, 369, 198, 495, 0, 199, 0, 454,
	496, 527, 220, 221, 223, 0, 260, 264, 272, 274,
	280, 281, 288, 336, 383, 407, 405, 411, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 371, 287, 450, 304, 341, 0, 0, 389,
	428, 226, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 351, 441, 490, 306, 318, 321,
	311, 330, 0, 331, 307, 308, 313, 315, 316, 317,
	322, 323, 327, 333, 420, 421, 422, 423, 0, 191,
	207, 337, 0, 412, 269, 524, 502, 498, 0, 209,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 218, 222, 229,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	301, 347, 353, 354, 355, 356, 373, 374, 375, 378,
	381, 382, 385, 387, 388, 391, 395, 399, 400, 401,
	402, 404, 406, 413, 418, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 279, 487, 512, 0,
	346, 0, 0, 348, 262, 282, 293, 0, 501, 457,
	213, 424, 271, 201, 232, 216, 240, 255, 258, 297,
	357, 364, 393, 398, 276, 252, 230, 417, 227, 440,
	463, 464, 465, 467, 361, 247, 397, 362, 0, 344,
	469, 470, 289, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 335,
	248, 0, 0, 394, 0, 197, 0, 442, 235, 345,
	342, 475, 263, 254, 250, 234, 290, 352, 392, 462,
	386, 0, 339, 0, 0, 452, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 233, 298, 196, 377, 453, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 231, 320,
	329, 328, 309, 310, 312, 314, 319, 326, 332, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 472, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 366, 238, 0, 0, 0, 0, 508, 0,
	0, 0, 3032, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 376, 419, 429, 0, 0, 0, 236,
	0, 427, 390, 491, 219, 265, 416, 396, 425, 403,
	268, 0, 0, 426, 340, 477, 410, 488, 509, 510,
	244, 370, 499, 466, 505, 523, 212, 241, 384, 459,
	494, 449, 363, 473, 474, 302, 448, 275, 195, 338,
	515, 210, 435, 228, 217, 479, 497, 270, 414, 202,
	461, 486, 225, 439, 0, 0, 525, 204, 484, 458,
	359, 299, 300, 203, 0, 415, 249, 273, 239, 379,
	481, 482, 237, 526, 214, 504, 206, 0, 503, 372,
	476, 485, 360, 350, 205, 483, 358, 349, 305, 324,
	325, 261, 284, 408, 343, 409, 285, 368, 367, 369,
	198, 495, 0, 199, 0, 454, 496, 527, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	383, 407, 405, 411, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 371, 287,
	450, 304, 341, 0, 0, 389, 428, 226, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	351, 441, 490, 306, 318, 321, 311, 330, 0, 331,
	307, 308, 313, 315, 316, 317, 322, 323, 327, 333,
	420, 421, 422, 423, 0, 191, 207, 337, 0, 412,
	269, 524, 502, 498, 0, 209, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 218, 222, 229, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 301, 347, 353, 354,
	355, 356, 373, 374, 375, 378, 381, 382, 385, 387,
	388, 391, 395, 399, 400, 401, 402, 404, 406, 413,
	418, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 279, 487, 512, 0, 346, 0, 0, 348,
	262, 282, 293, 0, 501, 457, 213, 424, 271, 201,
	232, 216, 240, 255, 258, 297, 357, 364, 393, 398,
	276, 252, 230, 417, 227, 440, 463, 464, 465, 467,
	361, 247, 397, 362, 0, 344, 469, 470, 289, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 335, 248, 0, 0, 394,
	0, 197, 0, 442, 235, 345, 342, 475, 263, 254,
	250, 234, 290, 352, 392, 462, 386, 0, 339, 0,
	0, 452, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 233,
	298, 196, 377, 453, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 1550, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 231, 320, 329, 328, 309, 310,
	312, 314, 319, 326, 332, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 472, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 366, 238,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 303, 192, 211, 0, 0, 376,
	419, 429, 0, 0, 0, 236, 0, 427, 390, 491,
	219, 265, 416, 396, 425, 403, 268, 0, 0, 426,
	340, 477, 410, 488, 509, 510, 244, 370, 499, 466,
	505, 523, 212, 241, 384, 459, 494, 449, 363, 473,
	474, 302, 448, 275, 195, 338, 515, 210, 435, 228,
	217, 479, 497, 270, 414, 202, 461, 486, 225, 439,
	0, 0, 525, 204, 484, 458, 359, 299, 300, 203,
	0, 415, 249, 273, 239, 379, 481, 482, 237, 526,
	214, 504, 206, 0, 503, 372, 476, 485, 360, 350,
	205, 483, 358, 349, 305, 324, 325, 261, 284, 408,
	343, 409, 285, 368, 367, 369, 198, 495, 0, 199,
	0, 454, 496, 527, 220, 221, 223, 0, 260, 264,
	272, 274, 280, 281, 288, 336, 383, 407, 405, 411,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 371, 287, 450, 304, 341, 0,
	0, 389, 428, 226, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 351, 441, 490, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 420, 421, 422, 423,
	0, 191, 207, 337, 0, 412, 269, 524, 502, 498,
	0, 209, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 218,
	222, 229, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 301, 347, 353, 354, 355, 356, 373, 374,
	375, 378, 381, 382, 385, 387, 388, 391, 395, 399,
	400, 401, 402, 404, 406, 413, 418, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 279, 487,
	512, 0, 346, 0, 0, 348, 262, 282, 293, 0,
	501, 457, 213, 424, 271, 201, 232, 216, 240, 255,
	258, 297, 357, 364, 393, 398, 276, 252, 230, 417,
	227, 440, 463, 464, 465, 467, 361, 247, 397, 362,
	0, 344, 469, 470, 289, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 335, 248, 0, 0, 394, 0, 197, 0, 442,
	235, 345, 342, 475, 263, 254, 250, 234, 290, 352,
	392, 462, 386, 0, 339, 0, 0, 452, 365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 233, 298, 196, 377, 453,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	231, 320, 329, 328, 309, 310, 312, 314, 319, 326,
	332, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	472, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 366, 238, 0, 0, 0, 0,
	508, 0, 0, 0, 2930, 0, 0, 0, 334, 0,
	303, 192, 211, 0, 0, 376, 419, 429, 0, 0,
	0, 236, 0, 427, 390, 491, 219, 265, 416, 396,
	425, 403, 268, 0, 0, 426, 340, 477, 410, 488,
	509, 510, 244, 370, 499, 466, 505, 523, 212, 241,
	384, 459, 494, 449, 363, 473, 474, 302, 448, 275,
	195, 338, 515, 210, 435, 228, 217, 479, 497, 270,
	414, 202, 461, 486, 225, 439, 0, 0, 525, 204,
	484, 458, 359, 299, 300, 203, 0, 415, 249, 273,
	239, 379, 481, 482, 237, 526, 214, 504, 206, 0,
	503, 372, 476, 485, 360, 350, 205, 483, 358, 349,
	305, 324, 325, 261, 284, 408, 343, 409, 285, 368,
	367, 369, 198, 495, 0, 199, 0, 454, 496, 527,
	220, 221, 223, 0, 260, 264, 272, 274, 280, 281,
	288, 336, 383, 407, 405, 411, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	371, 287, 450, 304, 341, 0, 0, 389, 428, 226,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 351, 441, 490, 306, 318, 321, 311, 330,
	0, 331, 307, 308, 313, 315, 316, 317, 322, 323,
	327, 333, 420, 421, 422, 423, 0, 191, 207, 337,
	0, 412, 269, 524, 502, 498, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	353, 354, 355, 356, 373, 374, 375, 378, 381, 382,
	385, 387, 388, 391, 395, 399, 400, 401, 402, 404,
	406, 413, 418, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 279, 487, 512, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 501, 457, 213, 424,
	271, 201, 232, 216, 240, 255, 258, 297, 357, 364,
	393, 398, 276, 252, 230, 417, 227, 440, 463, 464,
	465, 467, 361, 247, 397, 362, 0, 344, 469, 470,
	289, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 394, 0, 197, 0, 442, 235, 345, 342, 475,
	263, 254, 250, 234, 290, 352, 392, 462, 386, 0,
	339, 0, 0, 452, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 377, 453, 267, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 472, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	366, 238, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 303, 192, 211, 0,
	0, 376, 419, 429, 0, 0, 0, 236, 0, 427,
	390, 491, 219, 265, 416, 396, 425, 403, 268, 0,
	0, 426, 340, 477, 410, 488, 509, 510, 244, 370,
	499, 466, 505, 523, 212, 241, 384, 459, 494, 449,
	363, 473, 474, 302, 448, 275, 195, 338, 515, 210,
	435, 228, 217, 479, 497, 270, 414, 202, 461, 486,
	225, 439, 0, 0, 525, 204, 484, 458, 359, 299,
	300, 203, 0, 415, 249, 273, 239, 379, 481, 482,
	237, 526, 214, 504, 206, 0, 503, 372, 476, 485,
	360, 350, 205, 483, 358, 349, 305, 324, 325, 261,
	284, 408, 343, 409, 285, 368, 367, 369, 198, 495,
	0, 199, 0, 454, 496, 527, 220, 221, 223, 0,
	260, 264, 272, 274, 280, 281, 288, 336, 383, 407,
	405, 411, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 371, 287, 450, 304,
	341, 0, 0, 389, 428, 226, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 351, 441,
	490, 306, 318, 321, 311, 330, 0, 331, 307, 308,
	313, 315, 316, 317, 322, 323, 327, 333, 420, 421,
	422, 423, 0, 191, 207, 337, 0, 412, 269, 524,
	502, 498, 0, 209, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 218, 222, 229, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 301, 347, 353, 354, 355, 356,
	373, 374, 375, 378, 381, 382, 385, 387, 388, 391,
	395, 399, 400, 401, 402, 404, 406, 413, 418, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	279, 487, 512, 0, 346, 0, 0, 348, 262, 282,
	293, 0, 501, 457, 213, 424, 271, 201, 232, 216,
	240, 255, 258, 297, 357, 364, 393, 398, 276, 252,
	230, 417, 227, 440, 463, 464, 465, 467, 361, 247,
	397, 362, 0, 344, 469, 470, 289, 468, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 335, 248, 0, 0, 394, 0, 197,
	0, 442, 235, 345, 342, 475, 263, 254, 250, 234,
	290, 352, 392, 462, 386, 0, 339, 0, 0, 452,
	365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 233, 298, 196,
	377, 453, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 231, 320, 329, 328, 309, 310, 312, 314,
	319, 326, 332, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 472, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 366, 238, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 303, 192, 211, 0, 0, 376, 419, 429,
	0, 0, 0, 236, 0, 427, 390, 491, 219, 265,
	416, 396, 425, 403, 268, 0, 0, 426, 340, 477,
	410, 488, 509, 510, 244, 370, 499, 466, 505, 523,
	212, 241, 384, 459, 494, 449, 363, 473, 474, 302,
	448, 275, 195, 338, 515, 210, 435, 228, 217, 479,
	497, 270, 414, 202, 461, 486, 225, 439, 0, 0,
	525, 204, 484, 458, 359, 299, 300, 203, 0, 415,
	249, 273, 239, 379, 481, 482, 237, 526, 214, 504,
	206, 0, 503, 372, 476, 485, 360, 350, 205, 483,
	358, 349, 305, 324, 325, 261, 284, 408, 343, 409,
	285, 368, 367, 369, 198, 495, 0, 199, 0, 454,
	496, 527, 220, 221, 223, 0, 260, 264, 272, 274,
	280, 281, 288, 336, 383, 407, 405, 411, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 371, 287, 450, 304, 341, 0, 0, 389,
	428, 226, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 351, 441, 490, 306, 318, 321,
	311, 330, 0, 331, 307, 308, 313, 315, 316, 317,
	322, 323, 327, 333, 420, 421, 422, 423, 0, 191,
	207, 337, 0, 412, 269, 524, 502, 498, 0, 209,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 218, 222, 229,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	301, 347, 353, 354, 355, 356, 373, 374, 375, 378,
	381, 382, 385, 387, 388, 391, 395, 399, 400, 401,
	402, 404, 406, 413, 418, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 279, 487, 512, 0,
	346, 0, 0, 348, 262, 282, 293, 0, 501, 457,
	213, 424, 271, 201, 232, 216, 240, 255, 258, 297,
	357, 364, 393, 398, 276, 252, 230, 417, 227, 440,
	463, 464, 465, 467, 361, 247, 397, 362, 0, 344,
	469, 470, 289, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 335,
	248, 0, 0, 394, 0, 197, 0, 442, 235, 345,
	342, 475, 263, 254, 250, 234, 290, 352, 392, 462,
	386, 0, 339, 0, 0, 452, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 233, 298, 196, 377, 453, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 1372, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 231, 320,
	329, 328, 309, 310, 312, 314, 319, 326, 332, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 472, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 366, 238, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 376, 419, 429, 0, 0, 0, 236,
	0, 427, 390, 491, 219, 265, 416, 396, 425, 403,
	268, 0, 0, 426, 340, 477, 410, 488, 509, 510,
	244, 370, 499, 466, 505, 523, 212, 241, 384, 459,
	494, 449, 363, 473, 474, 302, 448, 275, 195, 338,
	515, 210, 435, 228, 217, 479, 497, 270, 414, 202,
	461, 486, 225, 439, 0, 0, 525, 204, 484, 458,
	359, 299, 300, 203, 0, 415, 249, 273, 239, 379,
	481, 482, 237, 526, 214, 504, 206, 0, 503, 372,
	476, 485, 360, 350, 205, 483, 358, 349, 305, 324,
	325, 261, 284, 408, 343, 409, 285, 368, 367, 369,
	198, 495, 0, 199, 0, 454, 496, 527, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	383, 407, 405, 411, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 371, 287,
	450, 304, 341, 0, 0, 389, 428, 226, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	351, 441, 490, 306, 318, 321, 311, 330, 0, 331,
	307, 308, 313, 315, 316, 317, 322, 323, 327, 333,
	420, 421, 422, 423, 0, 191, 207, 337, 0, 412,
	269, 524, 502, 498, 0, 209, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 218, 222, 229, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 301, 347, 353, 354,
	355, 356, 373, 374, 375, 378, 381, 382, 385, 387,
	388, 391, 395, 399, 400, 401, 402, 404, 406, 413,
	418, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 279, 487, 512, 0, 346, 0, 0, 348,
	262, 282, 293, 0, 501, 457, 213, 424, 271, 201,
	232, 216, 240, 255, 258, 297, 357, 364, 393, 398,
	276, 252, 230, 417, 227, 440, 463, 464, 465, 467,
	361, 247, 397, 362, 0, 344, 469, 470, 289, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 335, 248, 0, 0, 394,
	0, 197, 0, 442, 235, 345, 342, 475, 263, 254,
	250, 234, 290, 352, 392, 462, 386, 0, 339, 0,
	0, 452, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 233,
	298, 196, 377, 453, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 231, 320, 329, 328, 309, 310,
	312, 314, 319, 326, 332, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 472, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 366, 238,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 303, 192, 211, 0, 0, 376,
	419, 429, 0, 0, 0, 236, 0, 427, 390, 491,
	219, 265, 416, 396, 425, 403, 268, 0, 0, 426,
	340, 477, 410, 488, 509, 510, 244, 370, 499, 466,
	505, 523, 212, 241, 384, 459, 494, 449, 363, 473,
	474, 302, 448, 275, 195, 338, 515, 210, 435, 228,
	217, 479, 497, 270, 414, 202, 461, 486, 225, 439,
	0, 0, 525, 204, 484, 458, 359, 299, 300, 203,
	0, 415, 249, 273, 239, 379, 481, 482, 237, 526,
	214, 504, 206, 0, 503, 372, 476, 485, 360, 350,
	205, 483, 358, 349, 305, 324, 325, 261, 284, 408,
	343, 409, 285, 368, 367, 369, 198, 495, 0, 199,
	0, 454, 496, 527, 220, 221, 223, 0, 260, 264,
	272, 274, 280, 281, 288, 336, 383, 407, 405, 411,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 371, 287, 450, 304, 341, 0,
	0, 389, 428, 226, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 351, 441, 490, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 420, 421, 422, 423,
	0, 191, 207, 337, 0, 412, 269, 524, 502, 498,
	0, 209, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 218,
	222, 229, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 301, 347, 353, 354, 355, 356, 373, 374,
	375, 378, 381, 382, 385, 387, 388, 391, 395, 399,
	400, 401, 402, 404, 406, 413, 418, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 279, 487,
	512, 0, 346, 0, 0, 348, 262, 282, 293, 0,
	501, 457, 213, 424, 271, 201, 232, 216, 240, 255,
	258, 297, 357, 364, 393, 398, 276, 252, 230, 417,
	227, 440, 463, 464, 465, 467, 361, 247, 397, 362,
	0, 344, 469, 470, 289, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 335, 248, 0, 0, 394, 0, 197, 0, 442,
	235, 345, 342, 475, 263, 254, 250, 234, 290, 352,
	392, 462, 386, 0, 339, 0, 0, 452, 365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 233, 298, 196, 377, 453,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	231, 320, 329, 328, 309, 310, 312, 314, 319, 326,
	332, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	472, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 366, 238, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	303, 192, 211, 0, 0, 376, 419, 429, 0, 0,
	0, 236, 0, 427, 390, 491, 219, 265, 416, 396,
	425, 403, 268, 0, 0, 426, 340, 477, 410, 488,
	509, 510, 244, 370, 499, 466, 505, 523, 212, 241,
	384, 459, 494, 449, 363, 473, 474, 302, 448, 275,
	195, 338, 515, 210, 435, 228, 217, 479, 497, 270,
	414, 202, 461, 486, 225, 439, 0, 0, 525, 204,
	484, 458, 359, 299, 300, 203, 0, 415, 249, 273,
	239, 379, 481, 482, 237, 526, 214, 504, 206, 0,
	503, 372, 476, 485, 360, 350, 205, 483, 358, 349,
	305, 324, 325, 261, 284, 408, 343, 409, 285, 368,
	367, 369, 198, 495, 0, 199, 0, 454, 496, 527,
	220, 221, 223, 0, 260, 264, 272, 274, 280, 281,
	288, 336, 383, 407, 405, 411, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	371, 287, 450, 304, 341, 0, 0, 389, 428, 226,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 351, 441, 490, 306, 318, 321, 311, 330,
	0, 331, 307, 308, 313, 315, 316, 317, 322, 323,
	327, 333, 420, 421, 422, 423, 0, 191, 207, 337,
	1648, 412, 269, 524, 502, 498, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	353, 354, 355, 356, 373, 374, 375, 378, 381, 382,
	385, 387, 388, 391, 395, 399, 400, 401, 402, 404,
	406, 413, 418, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 279, 487, 512, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 501, 457, 213, 424,
	271, 201, 232, 216, 240, 255, 258, 297, 357, 364,
	393, 398, 276, 252, 230, 417, 227, 440, 463, 464,
	465, 467, 361, 247, 397, 362, 0, 344, 469, 470,
	289, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 1518, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 394, 0, 197, 0, 442, 235, 345, 342, 475,
	263, 254, 250, 234, 290, 352, 392, 462, 386, 0,
	339, 0, 0, 452, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 377, 453, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 472, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	366, 238, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 303, 192, 211, 0,
	0, 376, 419, 429, 0, 0, 0, 236, 0, 427,
	390, 491, 219, 265, 416, 396, 425, 403, 268, 0,
	0, 426, 340, 477, 410, 488, 509, 510, 244, 370,
	499, 466, 505, 523, 212, 241, 384, 459, 494, 449,
	363, 473, 474, 302, 448, 275, 195, 338, 515, 210,
	435, 228, 217, 479, 497, 270, 414, 202, 461, 486,
	225, 439, 0, 0, 525, 204, 484, 458, 359, 299,
	300, 203, 0, 415, 249, 273, 239, 379, 481, 482,
	237, 526, 214, 504, 206, 0, 503, 372, 476, 485,
	360, 350, 205, 483, 358, 349, 305, 324, 325, 261,
	284, 408, 343, 409, 285, 368, 367, 369, 198, 495,
	0, 199, 0, 454, 496, 527, 220, 221, 223, 0,
	260, 264, 272, 274, 280, 281, 288, 336, 383, 407,
	405, 411, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 371, 287, 450, 304,
	341, 0, 0, 389, 428, 226, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 351, 441,
	490, 306, 318, 321, 311, 330, 0, 331, 307, 308,
	313, 315, 316, 317, 322, 323, 327, 333, 420, 421,
	422, 423, 0, 191, 207, 337, 0, 412, 269, 524,
	502, 498, 0, 209, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 218, 222, 229, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 301, 347, 353, 354, 355, 356,
	373, 374, 375, 378, 381, 382, 385, 387, 388, 391,
	395, 399, 400, 401, 402, 404, 406, 413, 418, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	279, 487, 512, 0, 346, 0, 0, 348, 262, 282,
	293, 0, 501, 457, 213, 424, 271, 201, 232, 216,
	240, 255, 258, 297, 357, 364, 393, 398, 276, 252,
	230, 417, 227, 440, 463, 464, 465, 467, 361, 247,
	397, 362, 0, 344, 469, 470, 289, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 1516, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 335, 248, 0, 0, 394, 0, 197,
	0, 442, 235, 345, 342, 475, 263, 254, 250, 234,
	290, 352, 392, 462, 386, 0, 339, 0, 0, 452,
	365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 233, 298, 196,
	377, 453, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 231, 320, 329, 328, 309, 310, 312, 314,
	319, 326, 332, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 472, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 366, 238, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 303, 192, 211, 0, 0, 376, 419, 429,
	0, 0, 0, 236, 0, 427, 390, 491, 219, 265,
	416, 396, 425, 403, 268, 0, 0, 426, 340, 477,
	410, 488, 509, 510, 244, 370, 499, 466, 505, 523,
	212, 241, 384, 459, 494, 449, 363, 473, 474, 302,
	448, 275, 195, 338, 515, 210, 435, 228, 217, 479,
	497, 270, 414, 202, 461, 486, 225, 439, 0, 0,
	525, 204, 484, 458, 359, 299, 300, 203, 0, 415,
	249, 273, 239, 379, 481, 482, 237, 526, 214, 504,
	206, 0, 503, 372, 476, 485, 360, 350, 205, 483,
	358, 349, 305, 324, 325, 261, 284, 408, 343, 409,
	285, 368, 367, 369, 198, 495, 0, 199, 0, 454,
	496, 527, 220, 221, 223, 0, 260, 264, 272, 274,
	280, 281, 288, 336, 383, 407, 405, 411, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 371, 287, 450, 304, 341, 0, 0, 389,
	428, 226, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 351, 441, 490, 306, 318, 321,
	311, 330, 0, 331, 307, 308, 313, 315, 316, 317,
	322, 323, 327, 333, 420, 421, 422, 423, 0, 191,
	207, 337, 0, 412, 269, 524, 502, 498, 0, 209,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 218, 222, 229,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	301, 347, 353, 354, 355, 356, 373, 374, 375, 378,
	381, 382, 385, 387, 388, 391, 395, 399, 400, 401,
	402, 404, 406, 413, 418, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 279, 487, 512, 0,
	346, 0, 0, 348, 262, 282, 293, 0, 501, 457,
	213, 424, 271, 201, 232, 216, 240, 255, 258, 297,
	357, 364, 393, 398, 276, 252, 230, 417, 227, 440,
	463, 464, 465, 467, 361, 247, 397, 362, 0, 344,
	469, 470, 289, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 1514, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 335,
	248, 0, 0, 394, 0, 197, 0, 442, 235, 345,
	342, 475, 263, 254, 250, 234, 290, 352, 392, 462,
	386, 0, 339, 0, 0, 452, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 233, 298, 196, 377, 453, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 231, 320,
	329, 328, 309, 310, 312, 314, 319, 326, 332, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 472, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 366, 238, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 376, 419, 429, 0, 0, 0, 236,
	0, 427, 390, 491, 219, 265, 416, 396, 425, 403,
	268, 0, 0, 426, 340, 477, 410, 488, 509, 510,
	244, 370, 499, 466, 505, 523, 212, 241, 384, 459,
	494, 449, 363, 473, 474, 302, 448, 275, 195, 338,
	515, 210, 435, 228, 217, 479, 497, 270, 414, 202,
	461, 486, 225, 439, 0, 0, 525, 204, 484, 458,
	359, 299, 300, 203, 0, 415, 249, 273, 239, 379,
	481, 482, 237, 526, 214, 504, 206, 0, 503, 372,
	476, 485, 360, 350, 205, 483, 358, 349, 305, 324,
	325, 261, 284, 408, 343, 409, 285, 368, 367, 369,
	198, 495, 0, 199, 0, 454, 496, 527, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	383, 407, 405, 411, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 371, 287,
	450, 304, 341, 0, 0, 389, 428, 226, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	351, 441, 490, 306, 318, 321, 311, 330, 0, 331,
	307, 308, 313, 315, 316, 317, 322, 323, 327, 333,
	420, 421, 422, 423, 0, 191, 207, 337, 0, 412,
	269, 524, 502, 498, 0, 209, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 218, 222, 229, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 301, 347, 353, 354,
	355, 356, 373, 374, 375, 378, 381, 382, 385, 387,
	388, 391, 395, 399, 400, 401, 402, 404, 406, 413,
	418, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 279, 487, 512, 0, 346, 0, 0, 348,
	262, 282, 293, 0, 501, 457, 213, 424, 271, 201,
	232, 216, 240, 255, 258, 297, 357, 364, 393, 398,
	276, 252, 230, 417, 227, 440, 463, 464, 465, 467,
	361, 247, 397, 362, 0, 344, 469, 470, 289, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 1512, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 335, 248, 0, 0, 394,
	0, 197, 0, 442, 235, 345, 342, 475, 263, 254,
	250, 234, 290, 352, 392, 462, 386, 0, 339, 0,
	0, 452, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 233,
	298, 196, 377, 453, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 231, 320, 329, 328, 309, 310,
	312, 314, 319, 326, 332, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 472, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 366, 238,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 303, 192, 211, 0, 0, 376,
	419, 429, 0, 0, 0, 236, 0, 427, 390, 491,
	219, 265, 416, 396, 425, 403, 268, 0, 0, 426,
	340, 477, 410, 488, 509, 510, 244, 370, 499, 466,
	505, 523, 212, 241, 384, 459, 494, 449, 363, 473,
	474, 302, 448, 275, 195, 338, 515, 210, 435, 228,
	217, 479, 497, 270, 414, 202, 461, 486, 225, 439,
	0, 0, 525, 204, 484, 458, 359, 299, 300, 203,
	0, 415, 249, 273, 239, 379, 481, 482, 237, 526,
	214, 504, 206, 0, 503, 372, 476, 485, 360, 350,
	205, 483, 358, 349, 305, 324, 325, 261, 284, 408,
	343, 409, 285, 368, 367, 369, 198, 495, 0, 199,
	0, 454, 496, 527, 220, 221, 223, 0, 260, 264,
	272, 274, 280, 281, 288, 336, 383, 407, 405, 411,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 371, 287, 450, 304, 341, 0,
	0, 389, 428, 226, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 351, 441, 490, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 420, 421, 422, 423,
	0, 191, 207, 337, 0, 412, 269, 524, 502, 498,
	0, 209, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 218,
	222, 229, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 301, 347, 353, 354, 355, 356, 373, 374,
	375, 378, 381, 382, 385, 387, 388, 391, 395, 399,
	400, 401, 402, 404, 406, 413, 418, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 279, 487,
	512, 0, 346, 0, 0, 348, 262, 282, 293, 0,
	501, 457, 213, 424, 271, 201, 232, 216, 240, 255,
	258, 297, 357, 364, 393, 398, 276, 252, 230, 417,
	227, 440, 463, 464, 465, 467, 361, 247, 397, 362,
	0, 344, 469, 470, 289, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 1510,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 335, 248, 0, 0, 394, 0, 197, 0, 442,
	235, 345, 342, 475, 263, 254, 250, 234, 290, 352,
	392, 462, 386, 0, 339, 0, 0, 452, 365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 233, 298, 196, 377, 453,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	231, 320, 329, 328, 309, 310, 312, 314, 319, 326,
	332, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	472, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 366, 238, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	303, 192, 211, 0, 0, 376, 419, 429, 0, 0,
	0, 236, 0, 427, 390, 491, 219, 265, 416, 396,
	425, 403, 268, 0, 0, 426, 340, 477, 410, 488,
	509, 510, 244, 370, 499, 466, 505, 523, 212, 241,
	384, 459, 494, 449, 363, 473, 474, 302, 448, 275,
	195, 338, 515, 210, 435, 228, 217, 479, 497, 270,
	414, 202, 461, 486, 225, 439, 0, 0, 525, 204,
	484, 458, 359, 299, 300, 203, 0, 415, 249, 273,
	239, 379, 481, 482, 237, 526, 214, 504, 206, 0,
	503, 372, 476, 485, 360, 350, 205, 483, 358, 349,
	305, 324, 325, 261, 284, 408, 343, 409, 285, 368,
	367, 369, 198, 495, 0, 199, 0, 454, 496, 527,
	220, 221, 223, 0, 260, 264, 272, 274, 280, 281,
	288, 336, 383, 407, 405, 411, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	371, 287, 450, 304, 341, 0, 0, 389, 428, 226,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 351, 441, 490, 306, 318, 321, 311, 330,
	0, 331, 307, 308, 313, 315, 316, 317, 322, 323,
	327, 333, 420, 421, 422, 423, 0, 191, 207, 337,
	0, 412, 269, 524, 502, 498, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	353, 354, 355, 356, 373, 374, 375, 378, 381, 382,
	385, 387, 388, 391, 395, 399, 400, 401, 402, 404,
	406, 413, 418, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 279, 487, 512, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 501, 457, 213, 424,
	271, 201, 232, 216, 240, 255, 258, 297, 357, 364,
	393, 398, 276, 252, 230, 417, 227, 440, 463, 464,
	465, 467, 361, 247, 397, 362, 0, 344, 469, 470,
	289, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 1506, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 394, 0, 197, 0, 442, 235, 345, 342, 475,
	263, 254, 250, 234, 290, 352, 392, 462, 386, 0,
	339, 0, 0, 452, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 377, 453, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 472, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	366, 238, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 303, 192, 211, 0,
	0, 376, 419, 429, 0, 0, 0, 236, 0, 427,
	390, 491, 219, 265, 416, 396, 425, 403, 268, 0,
	0, 426, 340, 477, 410, 488, 509, 510, 244, 370,
	499, 466, 505, 523, 212, 241, 384, 459, 494, 449,
	363, 473, 474, 302, 448, 275, 195, 338, 515, 210,
	435, 228, 217, 479, 497, 270, 414, 202, 461, 486,
	225, 439, 0, 0, 525, 204, 484, 458, 359, 299,
	300, 203, 0, 415, 249, 273, 239, 379, 481, 482,
	237, 526, 214, 504, 206, 0, 503, 372, 476, 485,
	360, 350, 205, 483, 358, 349, 305, 324, 325, 261,
	284, 408, 343, 409, 285, 368, 367, 369, 198, 495,
	0, 199, 0, 454, 496, 527, 220, 221, 223, 0,
	260, 264, 272, 274, 280, 281, 288, 336, 383, 407,
	405, 411, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 371, 287, 450, 304,
	341, 0, 0, 389, 428, 226, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 351, 441,
	490, 306, 318, 321, 311, 330, 0, 331, 307, 308,
	313, 315, 316, 317, 322, 323, 327, 333, 420, 421,
	422, 423, 0, 191, 207, 337, 0, 412, 269, 524,
	502, 498, 0, 209, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 218, 222, 229, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 301, 347, 353, 354, 355, 356,
	373, 374, 375, 378, 381, 382, 385, 387, 388, 391,
	395, 399, 400, 401, 402, 404, 406, 413, 418, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	279, 487, 512, 0, 346, 0, 0, 348, 262, 282,
	293, 0, 501, 457, 213, 424, 271, 201, 232, 216,
	240, 255, 258, 297, 357, 364, 393, 398, 276, 252,
	230, 417, 227, 440, 463, 464, 465, 467, 361, 247,
	397, 362, 0, 344, 469, 470, 289, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 1504, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 335, 248, 0, 0, 394, 0, 197,
	0, 442, 235, 345, 342, 475, 263, 254, 250, 234,
	290, 352, 392, 462, 386, 0, 339, 0, 0, 452,
	365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 233, 298, 196,
	377, 453, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 231, 320, 329, 328, 309, 310, 312, 314,
	319, 326, 332, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 472, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 366, 238, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 303, 192, 211, 0, 0, 376, 419, 429,
	0, 0, 0, 236, 0, 427, 390, 491, 219, 265,
	416, 396, 425, 403, 268, 0, 0, 426, 340, 477,
	410, 488, 509, 510, 244, 370, 499, 466, 505, 523,
	212, 241, 384, 459, 494, 449, 363, 473, 474, 302,
	448, 275, 195, 338, 515, 210, 435, 228, 217, 479,
	497, 270, 414, 202, 461, 486, 225, 439, 0, 0,
	525, 204, 484, 458, 359, 299, 300, 203, 0, 415,
	249, 273, 239, 379, 481, 482, 237, 526, 214, 504,
	206, 0, 503, 372, 476, 485, 360, 350, 205, 483,
	358, 349, 305, 324, 325, 261, 284, 408, 343, 409,
	285, 368, 367, 369, 198, 495, 0, 199, 0, 454,
	496, 527, 220, 221, 223, 0, 260, 264, 272, 274,
	280, 281, 288, 336, 383, 407, 405, 411, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 371, 287, 450, 304, 341, 0, 0, 389,
	428, 226, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 351, 441, 490, 306, 318, 321,
	311, 330, 0, 331, 307, 308, 313, 315, 316, 317,
	322, 323, 327, 333, 420, 421, 422, 423, 0, 191,
	207, 337, 0, 412, 269, 524, 502, 498, 0, 209,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 218, 222, 229,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	301, 347, 353, 354, 355, 356, 373, 374, 375, 378,
	381, 382, 385, 387, 388, 391, 395, 399, 400, 401,
	402, 404, 406, 413, 418, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 279, 487, 512, 0,
	346, 0, 0, 348, 262, 282, 293, 0, 501, 457,
	213, 424, 271, 201, 232, 216, 240, 255, 258, 297,
	357, 364, 393, 398, 276, 252, 230, 417, 227, 440,
	463, 464, 465, 467, 361, 247, 397, 362, 0, 344,
	469, 470, 289, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 1502, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 335,
	248, 0, 0, 394, 0, 197, 0, 442, 235, 345,
	342, 475, 263, 254, 250, 234, 290, 352, 392, 462,
	386, 0, 339, 0, 0, 452, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 233, 298, 196, 377, 453, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 231, 320,
	329, 328, 309, 310, 312, 314, 319, 326, 332, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 472, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 366, 238, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 376, 419, 429, 0, 0, 0, 236,
	0, 427, 390, 491, 219, 265, 416, 396, 425, 403,
	268, 0, 0, 426, 340, 477, 410, 488, 509, 510,
	244, 370, 499, 466, 505, 523, 212, 241, 384, 459,
	494, 449, 363, 473, 474, 302, 448, 275, 195, 338,
	515, 210, 435, 228, 217, 479, 497, 270, 414, 202,
	461, 486, 225, 439, 0, 0, 525, 204, 484, 458,
	359, 299, 300, 203, 0, 415, 249, 273, 239, 379,
	481, 482, 237, 526, 214, 504, 206, 0, 503, 372,
	476, 485, 360, 350, 205, 483, 358, 349, 305, 324,
	325, 261, 284, 408, 343, 409, 285, 368, 367, 369,
	198, 495, 0, 199, 0, 454, 496, 527, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	383, 407, 405, 411, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 371, 287,
	450, 304, 341, 0, 0, 389, 428, 226, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	351, 441, 490, 306, 318, 321, 311, 330, 0, 331,
	307, 308, 313, 315, 316, 317, 322, 323, 327, 333,
	420, 421, 422, 423, 0, 191, 207, 337, 0, 412,
	269, 524, 502, 498, 0, 209, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 218, 222, 229, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 301, 347, 353, 354,
	355, 356, 373, 374, 375, 378, 381, 382, 385, 387,
	388, 391, 395, 399, 400, 401, 402, 404, 406, 413,
	418, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 279, 487, 512, 0, 346, 0, 0, 348,
	262, 282, 293, 0, 501, 457, 213, 424, 271, 201,
	232, 216, 240, 255, 258, 297, 357, 364, 393, 398,
	276, 252, 230, 417, 227, 440, 463, 464, 465, 467,
	361, 247, 397, 362, 0, 344, 469, 470, 289, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 335, 248, 0, 0, 394,
	0, 197, 0, 442, 235, 345, 342, 475, 263, 254,
	250, 234, 290, 352, 392, 462, 386, 0, 339, 0,
	0, 452, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 233,
	298, 196, 377, 453, 267, 0, 1477, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 231, 320, 329, 328, 309, 310,
	312, 314, 319, 326, 332, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 472, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 366, 238,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 303, 192, 211, 0, 0, 376,
	419, 429, 0, 0, 0, 236, 0, 427, 390, 491,
	219, 265, 416, 396, 425, 403, 268, 0, 0, 426,
	340, 477, 410, 488, 509, 510, 244, 370, 499, 466,
	505, 523, 212, 241, 384, 459, 494, 449, 363, 473,
	474, 302, 448, 275, 195, 338, 515, 210, 435, 228,
	217, 479, 497, 270, 414, 202, 461, 486, 225, 439,
	0, 0, 525, 204, 484, 458, 359, 299, 300, 203,
	0, 415, 249, 273, 239, 379, 481, 482, 237, 526,
	214, 504, 206, 0, 503, 372, 476, 485, 360, 350,
	205, 483, 358, 349, 305, 324, 325, 261, 284, 408,
	343, 409, 285, 368, 367, 369, 198, 495, 0, 199,
	0, 454, 496, 527, 220, 221, 223, 0, 260, 264,
	272, 274, 280, 281, 288, 336, 383, 407, 405, 411,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 371, 287, 450, 304, 341, 0,
	0, 389, 428, 226, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 351, 441, 490, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 420, 421, 422, 423,
	0, 191, 207, 337, 0, 412, 269, 524, 502, 498,
	0, 209, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 218,
	222, 229, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 301, 347, 353, 354, 355, 356, 373, 374,
	375, 378, 381, 382, 385, 387, 388, 391, 395, 399,
	400, 401, 402, 404, 406, 413, 418, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 279, 487,
	512, 0, 346, 0, 0, 348, 262, 282, 293, 0,
	501, 457, 213, 424, 271, 201, 232, 216, 240, 255,
	258, 297, 357, 364, 393, 398, 276, 252, 230, 417,
	227, 440, 463, 464, 465, 467, 361, 247, 397, 362,
	0, 344, 469, 470, 289, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 1377, 251, 0, 0, 0,
	0, 335, 248, 0, 0, 394, 0, 197, 0, 442,
	235, 345, 342, 475, 263, 254, 250, 234, 290, 352,
	392, 462, 386, 0, 339, 0, 0, 452, 365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 233, 298, 196, 377, 453,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	231, 320, 329, 328, 309, 310, 312, 314, 319, 326,
	332, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	472, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 366, 238, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	303, 192, 211, 0, 0, 376, 419, 429, 0, 0,
	0, 236, 0, 427, 390, 491, 219, 265, 416, 396,
	425, 403, 268, 0, 0, 426, 340, 477, 410, 488,
	509, 510, 244, 370, 499, 466, 505, 523, 212, 241,
	384, 459, 494, 449, 363, 473, 474, 302, 448, 275,
	195, 338, 515, 210, 435, 228, 217, 479, 497, 270,
	414, 202, 461, 486, 225, 439, 0, 0, 525, 204,
	484, 458, 359, 299, 300, 203, 0, 415, 249, 273,
	239, 379, 481, 482, 237, 526, 214, 504, 206, 0,
	503, 372, 476, 485, 360, 350, 205, 483, 358, 349,
	305, 324, 325, 261, 284, 408, 343, 409, 285, 368,
	367, 369, 198, 495, 0, 199, 0, 454, 496, 527,
	220, 221, 223, 0, 260, 264, 272, 274, 280, 281,
	288, 336, 383, 407, 405, 411, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	371, 287, 450, 304, 341, 0, 0, 389, 428, 226,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 351, 441, 490, 306, 318, 321, 311, 330,
	0, 331, 307, 308, 313, 315, 316, 317, 322, 323,
	327, 333, 420, 421, 422, 423, 0, 191, 207, 337,
	0, 412, 269, 524, 502, 498, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	353, 354, 355, 356, 373, 374, 375, 378, 381, 382,
	385, 387, 388, 391, 395, 399, 400, 401, 402, 404,
	406, 413, 418, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 279, 487, 512, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 501, 457, 213, 424,
	271, 201, 232, 216, 240, 255, 258, 297, 357, 364,
	393, 398, 276, 252, 230, 417, 227, 440, 463, 464,
	465, 467, 361, 247, 397, 362, 0, 344, 469, 470,
	289, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 394, 0, 197, 0, 442, 235, 345, 342, 475,
	263, 254, 250, 234, 290, 352, 392, 462, 386, 0,
	339, 0, 0, 452, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 377, 453, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 1173, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 472, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	366, 238, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 303, 192, 211, 0,
	0, 376, 419, 429, 0, 0, 0, 236, 0, 427,
	390, 491, 219, 265, 416, 396, 425, 403, 268, 0,
	0, 426, 340, 477, 410, 488, 509, 510, 244, 370,
	499, 466, 505, 523, 212, 241, 384, 459, 494, 449,
	363, 473, 474, 302, 448, 275, 195, 338, 515, 210,
	435, 228, 217, 479, 497, 270, 414, 202, 461, 486,
	225, 439, 0, 0, 525, 204, 484, 458, 359, 299,
	300, 203, 0, 415, 249, 273, 239, 379, 481, 482,
	237, 526, 214, 504, 206, 0, 503, 372, 476, 485,
	360, 350, 205, 483, 358, 349, 305, 324, 325, 261,
	284, 408, 343, 409, 285, 368, 367, 369, 198, 495,
	0, 199, 0, 454, 496, 527, 220, 221, 223, 0,
	260, 264, 272, 274, 280, 281, 288, 336, 383, 407,
	405, 411, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 371, 287, 450, 304,
	341, 0, 0, 389, 428, 226, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 351, 441,
	490, 306, 318, 321, 311, 330, 0, 331, 307, 308,
	313, 315, 316, 317, 322, 323, 327, 333, 420, 421,
	422, 423, 0, 191, 207, 337, 0, 412, 269, 524,
	502, 498, 0, 209, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 218, 222, 229, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 301, 347, 353, 354, 355, 356,
	373, 374, 375, 378, 381, 382, 385, 387, 388, 391,
	395, 399, 400, 401, 402, 404, 406, 413, 418, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	279, 487, 512, 0, 346, 0, 0, 348, 262, 282,
	293, 0, 501, 457, 213, 424, 271, 201, 232, 216,
	240, 255, 258, 297, 357, 364, 393, 398, 276, 252,
	230, 417, 227, 440, 463, 464, 465, 467, 361, 247,
	397, 362, 0, 344, 469, 470, 289, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 335, 248, 0, 0, 394, 0, 197,
	0, 442, 235, 345, 342, 475, 263, 254, 250, 234,
	290, 352, 392, 462, 386, 0, 339, 0, 0, 452,
	365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 233, 298, 196,
	377, 453, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 231, 320, 329, 328, 309, 310, 312, 314,
	319, 326, 332, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 472, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 366, 238, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 303, 192, 211, 0, 0, 376, 419, 429,
	0, 0, 0, 236, 0, 427, 390, 491, 219, 265,
	416, 396, 425, 403, 268, 0, 0, 426, 340, 477,
	410, 488, 509, 510, 244, 370, 499, 466, 505, 523,
	212, 241, 384, 459, 494, 449, 363, 473, 474, 302,
	448, 275, 195, 338, 515, 210, 435, 228, 217, 479,
	497, 270, 414, 202, 461, 486, 225, 439, 0, 0,
	525, 204, 484, 458, 359, 299, 300, 203, 0, 415,
	249, 273, 239, 379, 481, 482, 237, 526, 214, 504,
	206, 0, 503, 372, 476, 485, 360, 350, 205, 483,
	358, 349, 305, 324, 325, 261, 284, 408, 343, 409,
	285, 368, 367, 369, 198, 495, 0, 199, 0, 454,
	496, 527, 220, 221, 223, 0, 260, 264, 272, 274,
	280, 281, 288, 336, 383, 407, 405, 411, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 371, 287, 450, 304, 341, 0, 0, 389,
	428, 226, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 351, 441, 490, 306, 318, 321,
	311, 330, 0, 331, 307, 308, 313, 315, 316, 317,
	322, 323, 327, 333, 420, 421, 422, 423, 0, 191,
	207, 337, 0, 412, 269, 524, 502, 498, 0, 209,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 786,
	0, 0, 0, 193, 194, 200, 208, 218, 222, 229,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	301, 347, 353, 354, 355, 356, 373, 374, 375, 378,
	381, 382, 385, 387, 388, 391, 395, 399, 400, 401,
	402, 404, 406, 413, 418, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 279, 487, 512, 0,
	346, 0, 0, 348, 262, 282, 293, 0, 501, 457,
	213, 424, 271, 201, 232, 216, 240, 255, 258, 297,
	357, 364, 393, 398, 276, 252, 230, 417, 227, 440,
	463, 464, 465, 467, 361, 247, 397, 362, 0, 344,
	469, 470, 289, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 335,
	248, 0, 0, 394, 0, 197, 0, 442, 235, 345,
	342, 475, 263, 254, 250, 234, 290, 352, 392, 462,
	386, 0, 339, 0, 0, 452, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 233, 298, 196, 377, 453, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 231, 320,
	329, 328, 309, 310, 312, 314, 319, 326, 332, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 472, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 603, 0,
	277, 0, 366, 238, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 376, 419, 429, 0, 0, 0, 236,
	0, 427, 390, 491, 219, 265, 416, 396, 425, 403,
	268, 0, 0, 426, 340, 477, 410, 488, 509, 510,
	244, 370, 499, 466, 505, 523, 212, 241, 384, 459,
	494, 449, 363, 473, 474, 302, 448, 275, 195, 338,
	515, 210, 435, 228, 217, 479, 497, 270, 414, 202,
	461, 486, 225, 439, 0, 0, 525, 204, 484, 458,
	359, 299, 300, 203, 0, 415, 249, 273, 239, 379,
	481, 482, 237, 526, 214, 504, 206, 0, 503, 372,
	476, 485, 360, 350, 205, 483, 358, 349, 305, 324,
	325, 261, 284, 408, 343, 409, 285, 368, 367, 369,
	198, 495, 0, 199, 0, 454, 496, 527, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	383, 407, 405, 411, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 371, 287,
	450, 304, 341, 0, 0, 389, 428, 226, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	351, 441, 490, 306, 318, 321, 311, 330, 0, 331,
	307, 308, 313, 315, 316, 317, 322, 323, 327, 333,
	420, 421, 422, 423, 0, 191, 207, 337, 0, 412,
	269, 524, 502, 498, 0, 209, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 218, 222, 229, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 301, 347, 353, 354,
	355, 356, 373, 374, 375, 378, 381, 382, 385, 387,
	388, 391, 395, 399, 400, 401, 402, 404, 406, 413,
	418, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 602, 487, 512, 0, 346, 0, 0, 348,
	262, 282, 293, 0, 501, 457, 213, 424, 271, 201,
	232, 216, 240, 255, 258, 297, 357, 364, 393, 398,
	276, 252, 230, 417, 227, 440, 463, 464, 465, 467,
	361, 247, 397, 362, 0, 344, 469, 470, 289, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 335, 248, 0, 0, 394,
	0, 197, 0, 442, 235, 345, 342, 475, 263, 254,
	250, 234, 290, 352, 392, 462, 386, 0, 339, 0,
	0, 452, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 233,
	298, 196, 377, 453, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 231, 320, 329, 328, 309, 310,
	312, 314, 319, 326, 332, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 472, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 366, 238,
	0, 0, 549, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 334, 0, 303, 192, 211, 0, 0, 376,
	419, 429, 0, 0, 0, 236, 0, 427, 390, 491,
	219, 265, 416, 396, 425, 403, 268, 0, 0, 426,
	340, 477, 410, 488, 509, 510, 244, 370, 499, 466,
	505, 523, 212, 241, 384, 459, 494, 449, 363, 473,
	474, 302, 448, 275, 195, 338, 515, 210, 435, 228,
	217, 479, 497, 270, 414, 202, 461, 486, 225, 439,
	0, 0, 525, 204, 484, 458, 359, 299, 300, 203,
	0, 415, 249, 273, 239, 379, 481, 482, 237, 526,
	214, 504, 206, 0, 503, 372, 476, 485, 360, 350,
	205, 483, 358, 349, 305, 324, 325, 261, 284, 408,
	343, 409, 285, 368, 367, 369, 198, 495, 0, 199,
	0, 454, 496, 527, 220, 221, 223, 0, 260, 264,
	272, 274, 280, 281, 288, 336, 383, 407, 405, 411,
	0, 471, 489, 500, 507, 513, 514, 516, 517, 518,
	519, 520, 522, 521, 371, 287, 450, 304, 341, 0,
	0, 389, 428, 226, 493, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 351, 441, 490, 306,
	318, 321, 311, 330, 0, 331, 307, 308, 313, 315,
	316, 317, 322, 323, 327, 333, 420, 421, 422, 423,
	0, 191, 207, 337, 0, 412, 269, 524, 502, 498,
	0, 209, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 218,
	222, 229, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 301, 347, 353, 354, 355, 356, 373, 374,
	375, 378, 381, 382, 385, 387, 388, 391, 395, 399,
	400, 401, 402, 404, 406, 413, 418, 430, 431, 432,
	433, 434, 437, 438, 443, 444, 445, 446, 447, 455,
	456, 460, 478, 480, 492, 506, 511, 436, 279, 487,
	512, 0, 346, 0, 0, 348, 262, 282, 293, 0,
	501, 457, 213, 424, 271, 201, 232, 216, 240, 255,
	258, 297, 357, 364, 393, 398, 276, 252, 230, 417,
	227, 440, 463, 464, 465, 467, 361, 247, 397, 362,
	0, 344, 469, 470, 289, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 335, 248, 0, 0, 394, 0, 197, 0, 442,
	235, 345, 342, 475, 263, 254, 250, 234, 290, 352,
	392, 462, 386, 0, 339, 0, 0, 452, 365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 233, 298, 196, 377, 453,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	231, 320, 329, 328, 309, 310, 312, 314, 319, 326,
	332, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	472, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 366, 238, 0, 0, 0, 0,
	508, 0, 0, 0, 0, 0, 0, 0, 334, 0,
	303, 192, 211, 0, 0, 376, 419, 429, 0, 0,
	0, 236, 0, 427, 390, 491, 219, 265, 416, 396,
	425, 403, 268, 0, 0, 426, 340, 477, 410, 488,
	509, 510, 244, 370, 499, 466, 505, 523, 212, 241,
	384, 459, 494, 449, 363, 473, 474, 302, 448, 275,
	195, 338, 515, 210, 435, 228, 217, 479, 497, 270,
	414, 202, 461, 486, 225, 439, 0, 0, 525, 204,
	484, 458, 359, 299, 300, 203, 0, 415, 249, 273,
	239, 379, 481, 482, 237, 526, 214, 504, 206, 0,
	503, 372, 476, 485, 360, 350, 205, 483, 358, 349,
	305, 324, 325, 261, 284, 408, 343, 409, 285, 368,
	367, 369, 198, 495, 0, 199, 0, 454, 496, 527,
	220, 221, 223, 0, 260, 264, 272, 274, 280, 281,
	288, 336, 383, 407, 405, 411, 0, 471, 489, 500,
	507, 513, 514, 516, 517, 518, 519, 520, 522, 521,
	371, 287, 450, 304, 341, 0, 0, 389, 428, 226,
	493, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 351, 441, 490, 306, 318, 321, 311, 330,
	0, 331, 307, 308, 313, 315, 316, 317, 322, 323,
	327, 333, 420, 421, 422, 423, 0, 191, 207, 337,
	0, 412, 269, 524, 502, 498, 0, 209, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 218, 222, 229, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 301, 347,
	353, 354, 355, 356, 3037, 374, 375, 378, 381, 382,
	385, 387, 388, 391, 395, 399, 400, 401, 402, 404,
	406, 413, 418, 430, 431, 432, 433, 434, 437, 438,
	443, 444, 445, 446, 447, 455, 456, 460, 478, 480,
	492, 506, 511, 436, 279, 487, 512, 0, 346, 0,
	0, 348, 262, 282, 293, 0, 501, 457, 213, 424,
	271, 201, 232, 216, 240, 255, 258, 297, 357, 364,
	393, 398, 276, 252, 230, 417, 227, 440, 463, 464,
	465, 467, 361, 247, 397, 362, 0, 344, 469, 470,
	289, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 335, 248, 0,
	0, 394, 0, 197, 0, 442, 235, 345, 342, 475,
	263, 254, 250, 234, 290, 352, 392, 462, 386, 0,
	339, 0, 0, 452, 365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 233, 298, 196, 377, 453, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 231, 320, 329, 328,
	309, 310, 312, 314, 319, 326, 332, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 472, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	366, 238, 0, 0, 0, 0, 508, 0, 0, 0,
	0, 0, 0, 0, 334, 0, 303, 192, 211, 0,
	0, 376, 419, 429, 0, 0, 0, 236, 0, 427,
	390, 491, 219, 265, 416, 396, 425, 403, 268, 0,
	0, 426, 340, 477, 410, 488, 509, 510, 244, 370,
	499, 466, 505, 523, 212, 241, 384, 459, 494, 449,
	363, 473, 474, 302, 448, 275, 195, 338, 515, 210,
	435, 228, 217, 479, 497, 270, 414, 202, 461, 486,
	225, 439, 0, 0, 525, 204, 484, 458, 359, 299,
	300, 203, 0, 415, 249, 273, 239, 379, 481, 482,
	237, 526, 214, 504, 206, 0, 503, 372, 476, 485,
	360, 350, 205, 483, 358, 349, 305, 324, 325, 261,
	284, 408, 343, 409, 285, 368, 367, 369, 198, 495,
	0, 199, 0, 454, 496, 527, 220, 221, 223, 0,
	260, 264, 272, 274, 280, 281, 288, 336, 383, 407,
	405, 411, 0, 471, 489, 500, 507, 513, 514, 516,
	517, 518, 519, 520, 522, 521, 371, 287, 450, 304,
	341, 0, 0, 389, 428, 226, 493, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 351, 441,
	490, 306, 318, 321, 311, 330, 0, 331, 307, 308,
	313, 315, 316, 317, 322, 323, 327, 333, 420, 421,
	422, 423, 0, 191, 207, 337, 0, 412, 269, 524,
	502, 498, 0, 209, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 218, 222, 229, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 301, 347, 353, 354, 355, 356,
	373, 374, 375, 378, 381, 382, 385, 387, 388, 391,
	395, 399, 400, 401, 402, 404, 406, 413, 418, 430,
	431, 432, 433, 434, 437, 438, 443, 444, 445, 446,
	447, 455, 456, 460, 478, 480, 492, 506, 511, 436,
	279, 487, 512, 0, 346, 0, 0, 348, 262, 282,
	293, 0, 501, 457, 213, 424, 271, 201, 232, 216,
	240, 255, 258, 297, 357, 364, 393, 398, 276, 252,
	230, 417, 227, 440, 463, 464, 465, 467, 361, 247,
	397, 362, 0, 344, 469, 470, 289, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 335, 248, 0, 0, 394, 0, 197,
	0, 442, 235, 345, 342, 475, 263, 254, 250, 234,
	290, 352, 392, 462, 386, 0, 339, 0, 0, 452,
	365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 233, 298, 196,
	377, 453, 267, 0, 0, 0, 0, 188, 2637, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 231, 320, 329, 328, 309, 310, 312, 314,
	319, 326, 332, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 472, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 366, 238, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	334, 0, 303, 192, 211, 0, 0, 376, 419, 429,
	0, 0, 0, 236, 0, 427, 390, 491, 219, 265,
	416, 396, 425, 403, 268, 0, 0, 426, 340, 477,
	410, 488, 509, 510, 244, 370, 499, 466, 505, 523,
	212, 241, 384, 459, 494, 449, 363, 473, 474, 302,
	448, 275, 195, 338, 515, 210, 435, 228, 217, 479,
	497, 270, 414, 202, 461, 486, 225, 439, 0, 0,
	525, 204, 484, 458, 359, 299, 300, 203, 0, 415,
	249, 273, 239, 379, 481, 482, 237, 526, 214, 504,
	206, 0, 503, 372, 476, 485, 360, 350, 205, 483,
	358, 349, 305, 324, 325, 261, 284, 408, 343, 409,
	285, 368, 367, 369, 198, 495, 0, 199, 0, 454,
	496, 527, 220, 221, 223, 0, 260, 264, 272, 274,
	280, 281, 288, 336, 383, 407, 405, 411, 0, 471,
	489, 500, 507, 513, 514, 516, 517, 518, 519, 520,
	522, 521, 371, 287, 450, 304, 341, 0, 0, 389,
	428, 226, 493, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 351, 441, 490, 306, 318, 321,
	311, 330, 0, 331, 307, 308, 313, 315, 316, 317,
	322, 323, 327, 333, 420, 421, 422, 423, 0, 191,
	207, 337, 0, 412, 269, 524, 502, 498, 0, 209,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 218, 222, 229,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	301, 347, 353, 354, 355, 356, 373, 374, 375, 378,
	381, 382, 385, 387, 388, 391, 395, 399, 400, 401,
	402, 404, 406, 413, 418, 430, 431, 432, 433, 434,
	437, 438, 443, 444, 445, 446, 447, 455, 456, 460,
	478, 480, 492, 506, 511, 436, 279, 487, 512, 0,
	346, 0, 0, 348, 262, 282, 293, 0, 501, 457,
	213, 424, 271, 201, 232, 216, 240, 255, 258, 297,
	357, 364, 393, 398, 276, 252, 230, 417, 227, 440,
	463, 464, 465, 467, 361, 247, 397, 362, 0, 344,
	469, 470, 289, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 335,
	248, 0, 0, 394, 0, 197, 0, 442, 235, 345,
	342, 475, 263, 254, 250, 234, 290, 352, 392, 462,
	386, 0, 339, 0, 0, 452, 365, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 233, 298, 196, 377, 453, 267, 0,
	0, 0, 0, 188, 2140, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 231, 320,
	329, 328, 309, 310, 312, 314, 319, 326, 332, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 472, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 366, 238, 0, 0, 0, 0, 508, 0,
	0, 0, 0, 0, 0, 0, 334, 0, 303, 192,
	211, 0, 0, 376, 419, 429, 0, 0, 0, 236,
	0, 427, 390, 491, 219, 265, 416, 396, 425, 403,
	268, 0, 0, 426, 340, 477, 410, 488, 509, 510,
	244, 370, 499, 466, 505, 523, 212, 241, 384, 459,
	494, 449, 363, 473, 474, 302, 448, 275, 195, 338,
	515, 210, 435, 228, 217, 479, 497, 270, 414, 202,
	461, 486, 225, 439, 0, 0, 525, 204, 484, 458,
	359, 299, 300, 203, 0, 415, 249, 273, 239, 379,
	481, 482, 237, 526, 214, 504, 206, 0, 503, 372,
	476, 485, 360, 350, 205, 483, 358, 349, 305, 324,
	325, 261, 284, 408, 343, 409, 285, 368, 367, 369,
	198, 495, 0, 199, 0, 454, 496, 527, 220, 221,
	223, 0, 260, 264, 272, 274, 280, 281, 288, 336,
	383, 407, 405, 411, 0, 471, 489, 500, 507, 513,
	514, 516, 517, 518, 519, 520, 522, 521, 371, 287,
	450, 304, 341, 0, 0, 389, 428, 226, 493, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	351, 441, 490, 306, 318, 321, 311, 330, 0, 331,
	307, 308, 313, 315, 316, 317, 322, 323, 327, 333,
	420, 421, 422, 423, 0, 191, 207, 337, 0, 412,
	269, 524, 502, 498, 0, 209, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 218, 222, 229, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 301, 347, 353, 354,
	355, 356, 373, 374, 375, 378, 381, 382, 385, 387,
	388, 391, 395, 399, 400, 401, 402, 404, 406, 413,
	418, 430, 431, 432, 433, 434, 437, 438, 443, 444,
	445, 446, 447, 455, 456, 460, 478, 480, 492, 506,
	511, 436, 279, 487, 512, 0, 346, 0, 0, 348,
	262, 282, 293, 0, 501, 457, 213, 424, 271, 201,
	232, 216, 240, 255, 258, 297, 357, 364, 393, 398,
	276, 252, 230, 417, 227, 440, 463, 464, 465, 467,
	361, 247, 397, 0, 0, 344, 469, 470, 289,
}

var yyPact = [...]int{
	5050, -1000, -411, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2077, 2136, -1000, -1000,
	-1000, -1000, 2301, -1000, 806, 1809, -1000, 2035, 4602, -1000,
	43301, 599, -1000, 42089, 583, 150, 43301, -1000, 175, -1000,
	168, 43301, 171, 41483, -1000, -1000, -271, 19059, 2002, 66,
	61, 43301, -1000, -1000, -1000, -1000, 2248, 1746, -1000, 355,
	-1000, -1000, -1000, -1000, -1000, -1000, 40877, -1000, -1000, -1000,
	2072, 2069, 2318, 729, 2000, -1000, 2171, 1746, -1000, 19059,
	2227, 2109, 18453, -1000, 18453, 488, -1000, -1000, 14204, -1000,
	-1000, 25121, 43301, 31181, 527, -1000, 2035, -1000, -1000, -1000,
	101, -1000, 363, 1641, -1000, 1640, -1000, 667, 755, 399,
	491, 486, 394, 388, 382, 381, 380, 379, 370, 367,
	408, -1000, 753, 753, -120, -125, 477, 539, 462, 462,
	544, 2017, 2014, -1000, 750, -1000, 753, 753, 753, 335,
	753, 753, 753, 753, 322, 320, 753, 753, 753, 753,
	753, 753, 753, 753, 753, 753, 753, 753, 753, 753,
	753, 753, 753, 453, 2035, 251, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 43301, 170, 43301,
	-1000, 650, 43301, 902, 902, 74, 902, 902, 902, 902,
	214, 678, 58, -1000, 193, 323, 206, 233, 877, 373,
	-1000, -1000, 244, 877, 1249, -1000, 732, 169, -1000, 902,
	902, -1000, 11756, 189, 11756, 11756, -1000, 2024, -1000, -1000,
	-1000, -1000, 1240, -1000, 542, -1000, -1000, -1000, -1000, 43301,
	40271, 383, 779, -1000, -1000, -1000, 119, -1000, -1000, 1395,
	1340, 19059, 1237, -1000, 1620, 701, -1000, -1000, -1000, -1000,
	-1000, 614, 19665, 19665, 19665, 19665, -1000, -1000, 1670, 1670,
	1670, 1670, 19665, 1670, 19665, 1670, 1670, 1670, 1670, 19059,
	1670, 1670, 1670, -1000, 1670, 1670, 1670, 1670, 1670, 1670,
	1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670,
	1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670,
	1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670,
	1670, 1670, 1670, -1000, 1670, 647, 1670, 1670, 1670, 1670,
	1670, -1000, -1000, -1000, -1000, 1670, 1670, 1670, 1670, 1670,
	1670, 1670, 1670, 1670, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 22696, -1000, 16635, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 43301, -1000, 1670, 199,
	43301, 43301, 375, 2171, 1746, -1000, 2248, 2223, 355, -1000,
	2385, 1354, 1479, 1272, 1746, 1603, 43301, -1000, 1685, -1000,
	-1000, -1000, 1913, 1163, 1244, -1000, -1000, -1000, -1000, 1565,
	19059, -1000, -1000, 2298, -1000, 21483, 642, 896, 2283, 39665,
	-1000, 488, 488, 1633, 13592, 31, -1000, -1000, -1000, 777,
	28757, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2024, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1623, 43301, -1000, -1000, 4033, 1164,
	-1000, 1794, -1000, 1621, -1000, 1750, 19059, 1822, 580, 1164,
	567, 566, 563, -1000, -43, -1000, -1000, -1000, -1000, -1000,
	-1000, 753, 753, 753, -1000, 407, 2226, 4602, 5406, -1000,
	-1000, -1000, 39059, 1793, 1164, -1000, 1791, -1000, 848, 611,
	649, 649, 1164, -1000, -1000, 43301, 1164, 846, 839, 1164,
	1164, 43301, 43301, -1000, 38453, -1000, 37847, 37241, 1118, 43301,
	36635, 36029, 35423, 34817, 34211, -1000, 1900, -1000, 1788, -1000,
	-1000, -1000, 43301, 1164, 1164, 43301, 43301, 318, -1000, -1000,
	43301, 1164, -1000, -1000, 1117, 1114, 1110, 753, 753, 1108,
	1243, 1242, 1238, 753, 753, 1099, 1235, 29969, 1234, 339,
	1097, 1096, 1085, 1102, 1230, 192, 1229, 1076, 1073, 1066,
	43301, 1790, 43301, -1000, 236, 799, 406, 771, 2035, 1983,
	1630, 530, 572, 1164, 475, 475, 43301, -1000, 12368, -1000,
	-1000, 1228, 19059, -1000, 915, 877, 877, -1000, -1000, -1000,
	-1000, -1000, -1000, 902, 43301, 915, -1000, -1000, -1000, 877,
	902, 43301, 902, 902, 902, 902, 877, 877, 877, 902,
	43301, 43301, 43301, 43301, 43301, 43301, 43301, 43301, 43301, 11756,
	732, 902, -275, -1000, 1224, -1000, 1907, -1000, -1000, -1000,
	-1000, -1000, -1000, 11756, 11756, -1000, -1000, -1000, -1000, 161,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -16,
	1627, 33605, -1000, -276, -277, -286, -291, -1000, -1000, -1000,
	-294, -300, -1000, -1000, -1000, 19059, 19059, 19059, 19059, -157,
	19059, -1000, 829, 19665, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1023, 782, 19665, 19665, 19665, 19665, 19665, 19665, 19665,
	19665, 19665, 19665, 19665, 19665, 19665, 19665, 19665, 26939, 6094,
	6094, 701, 701, 701, 701, -1000, 18453, 19059, 19059, 701,
	-1000, 1164, 32999, 18453, 18453, 19059, 2023, 759, 1340, 43301,
	-1000, 1272, -1000, -1000, -1000, 1067, -1000, 43301, 43301, 141,
	19059, 19059, 19059, 19059, 19059, 19059, 15422, 19059, 19059, 19059,
	19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059,
	19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059,
	19059, 19059, 19059, 14816, 12368, 18453, 18453, 18453, 18453, 18453,
	-1000, -1000, -1000, -1000, -1000, 19059, 19059, 19059, 19059, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 637, 1718, 1330, 1483,
	-1000, 1615, -1000, -112, 24515, 19059, 1223, 2278, 1842, 43301,
	-1000, -1000, -1000, 2171, -1000, 2171, 1718, 2198, 1925, 18453,
	-1000, -1000, 2198, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1353, -1000, 43301, 1603, 2106, 43301, 1906, 1215, 505,
	-1000, 19059, 19059, 1593, -1000, 1123, 43301, -1000, -157, -1000,
	32393, -1000, -1000, 11144, -1000, 43301, 362, 43301, -1000, 23909,
	31787, 12980, 31, -1000, 12980, 1510, -1000, 39, 26, 16028,
	697, -1000, -1000, -1000, 477, 20877, 1372, 697, 102, -1000,
	-1000, -1000, 1750, -1000, 1750, 1750, 1750, 1750, 505, 505,
	505, 505, -1000, -1000, -1000, -1000, -1000, 1789, 1783, -1000,
	1750, 1750, 1750, 1750, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1782, 1782, 1782, 1751, 1751, 439, -1000, 19059, 231,
	31181, 2060, 1057, 1585, 236, 484, 1838, 1164, 1164, 1164,
	484, -1000, 1532, 1452, 1320, -1000, -402, 1590, -1000, -1000,
	2225, -1000, -1000, 768, 871, 868, 872, 43301, 208, 360,
	-1000, 429, -1000, 31181, 1164, 838, 649, 1164, -1000, 1164,
	-1000, -1000, -1000, -1000, -1000, 1164, -1000, -1000, 1584, -1000,
	1524, 931, 863, 903, 862, 1584, -1000, -1000, -97, 1584,
	-1000, 1584, -1000, 1584, -1000, 1584, -1000, 1584, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 816, 198, -205,
	43301, 208, 26939, -1000, 512, -1000, -1000, -1000, 26939, 26939,
	-1000, -1000, -1000, -1000, 1186, 1182, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -389, 43301, -1000, 220, 761,
	334, 384, 324, 43301, 321, 2149, 2143, 2140, 305, 316,
	43301, 43301, 475, 1865, 43301, 2082, 43301, -1000, -1000, -1000,
	-1000, -1000, 1340, 43301, -1000, -1000, 902, 902, -1000, -1000,
	43301, 902, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	902, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 43301, -1000, -1000, -1000,
	-1000, 43301, -1000, -1000, -1000, -1000, -1000, 153, 37, 356,
	-1000, -1000, -1000, -1000, -1000, 2165, -1000, 1340, 822, 794,
	-1000, 1670, 805, -1000, -1000, 966, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1023, 19665, 19665, 19665, 1725, 517, 1745,
	1266, 933, 1021, 1021, 881, 881, 705, 705, 705, 705,
	705, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1179,
	-1000, 1575, -1000, 1691, 1335, 1272, -1000, 1575, 1575, 1919,
	18453, -1000, -1000, 784, -1000, 19059, 1272, -1000, -1000, 1272,
	1272, 1550, 1526, 2276, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1219, 1585, 1585, 1585, 1585,
	1585, 19059, 1808, -1000, -1000, -1000, 2975, 2971, 1272, 1395,
	1272, 1522, -1000, 2963, 1585, 2949, 2932, 2928, 1934, 2905,
	2899, 2823, 1585, 1585, 1585, 1703, 2819, 2805, 2757, 2751,
	2744, 2714, 2694, 2644, 2591, 1585, 1272, 18453, 18453, 1515,
	1670, 636, -1000, 1575, 1272, 1272, 1575, 1575, 2416, 2411,
	2353, 2331, 12368, 1272, -1000, 43301, -1000, -267, -1000, -3,
	676, 1670, -1000, 29969, 1272, -1000, 5878, -1000, 44513, -1000,
	-1000, -1000, -1000, -1000, 28151, 1712, 2198, -1000, -1000, 1670,
	1611, -1000, -1000, 505, 91, 27545, 685, 685, 118, 1340,
	1340, 19059, -1000, -1000, -1000, -1000, -1000, -1000, 635, 2255,
	352, 1670, -1000, 1486, 1956, -1000, -1000, -1000, 2103, 22090,
	-1000, 1670, 1670, 43301, 1717, 1610, -1000, 630, -1000, 1510,
	31, 0, -1000, -1000, -1000, -1000, 1340, -1000, 1200, 365,
	364, -1000, 433, -1000, -1000, -1000, -1000, 1991, 86, -1000,
	-1000, -1000, 256, 505, -1000, -1000, -1000, -1000, -1000, -1000,
	1176, 1176, -1000, -1000, -1000, -1000, -1000, 1042, -1000, -1000,
	-1000, 1040, -1000, -1000, 2249, 1867, 231, -1000, -1000, 753,
	1174, -1000, -1000, 2004, 753, 753, 43301, -1000, -1000, 1316,
	2060, 220, 43301, 791, 1864, -1000, 1838, 1838, 1838, 43301,
	-1000, -1000, -1000, -1000, -1000, -1000, -390, 69, 372, -1000,
	-1000, -1000, 3326, 43301, 1598, -1000, 200, -1000, 1313, -1000,
	43301, -1000, 1582, 1781, 1164, 1164, -1000, -1000, -1000, 43301,
	1670, -1000, -1000, -1000, -1000, 571, 2031, 284, -1000, -1000,
	-174, -1000, -1000, 208, 200, 697, 1164, -1000, -1000, -1000,
	-1000, -1000, -392, 1577, 551, 211, 307, 43301, 43301, 43301,
	43301, 43301, 641, -1000, -1000, -1000, -1000, 186, -1000, -1000,
	186, -1000, -1000, -1000, -1000, 267, 479, -1000, 43301, 43301,
	619, -1000, -1000, -1000, 877, -1000, -1000, 877, -1000, -1000,
	-1000, -1000, -1000, 2027, 43301, 34, -353, -1000, -350, 19059,
	-1000, -1000, -1000, -1000, 1689, 501, 1745, 19665, 19665, 18453,
	-85, 331, 331, 26939, -1000, -1000, -1000, 19059, 19059, 1403,
	769, -1000, 19059, 1135, -1000, -1000, -1000, 19059, 19059, 19059,
	1272, 287, -1000, -1000, -1000, -1000, -1000, 2264, -1000, 19059,
	19059, 19059, -1000, -1000, 19059, 19059, -1000, 19059, 19059, 20271,
	1272, 20271, 19059, 19059, 20271, -1000, -1000, -1000, -1000, 20271,
	19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059, 19059, -1000,
	-1000, 1575, 1575, 18453, 12368, -1000, -1000, -1000, -1000, -1000,
	19059, 19059, 19059, 19059, -1000, -1000, -1000, -1000, -1000, 676,
	-1000, 649, 649, 649, 43301, -1000, -1000, -1000, -1000, -1000,
	-1000, 1505, 2168, -1000, 1935, 1932, 2250, 2255, -1000, 23909,
	2198, -1000, -1000, 43301, -262, -1000, 1970, 1992, 685, 685,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10532, 2171, 19059,
	1860, 43301, 1670, -1000, 23303, 43301, 43301, 23909, 23909, 23909,
	23909, 23909, -1000, 1884, 1883, -1000, 1891, 1890, 1927, 43301,
	-1000, 1567, 1272, 2223, 22090, 355, 19059, 25727, 1388, 23909,
	-1000, -1000, 23909, 43301, 9920, -1000, -1000, 7, 20, -1000,
	-1000, -1000, -1000, 477, -1000, -1000, 376, 2099, 2003, -1000,
	-1000, -1000, -1000, -1000, 1563, -1000, 1561, 1500, 1539, 198,
	-1000, 1818, 2026, 753, 753, -1000, 1030, -1000, 1164, 1157,
	1156, -1000, -1000, -1000, 518, -1000, 2079, 43301, 1859, 1858,
	1854, -1000, -400, 1026, 1775, 1766, 19059, 1774, 2216, 1440,
	43301, -1000, -1000, 43301, -1000, 263, -1000, 231, 43301, -1000,
	-1000, -1000, 360, 43301, -1000, 6373, -1000, -1000, -1000, 200,
	-1000, -1000, -1000, -1000, -1000, -1000, 43301, 215, -1000, 1754,
	1126, -1000, -1000, 1666, -1000, -1000, -1000, -1000, 228, 330,
	183, 1153, 183, -1000, 43301, 600, 1867, 43301, -1000, -1000,
	-1000, 902, 902, -1000, -1000, 2021, -1000, 1164, 1585, 19665,
	19665, -1000, 701, -1000, 1670, 1272, 1750, 1750, -1000, 1750,
	1751, -1000, 1750, 159, 1750, 158, 1750, -1000, -1000, 1272,
	1272, 1678, 1671, -50, -1000, 1340, 19059, 2291, 2268, 1585,
	-1000, 1747, 1729, 19059, 1585, 1585, 1585, -1000, 1340, 1934,
	2253, 1393, -1000, -1000, -1000, -1000, 1497, 1585, 2213, -258,
	1272, 1530, 1530, 1530, 1530, 1530, 1483, 1483, 1483, 1483,
	-1000, -1000, 1272, -1000, 1664, 1657, 2144, 1631, -1000, 2154,
	2154, 2154, 1472, 43907, 43301, -1000, -1000, -1000, -1000, 2255,
	2243, 1491, -1000, -1000, 91, 405, -1000, 1990, 1992, -1000,
	2215, 1965, 2214, -1000, -1000, -1000, -1000, -1000, 1340, -1000,
	2054, 1433, -1000, 757, 1321, -1000, -1000, 17847, 1477, 1931,
	623, 1472, 1438, 1956, 1841, 1853, 2013, -1000, -1000, -1000,
	-1000, 1877, -1000, 1876, -1000, -1000, 1685, -1000, -1000, 1330,
	1272, 2032, 362, 23909, 1401, 1401, -1000, 622, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 888, 6979, 2315, -1000, 1152,
	-1000, 1111, 197, 1017, -1000, -1000, 753, 753, -1000, 836,
	830, -1000, 43301, 1722, -1000, 505, 1150, 505, 996, -1000,
	990, -1000, -1000, -1000, -1000, 1761, 1893, -1000, -1000, -1000,
	-1000, 43301, -1000, -1000, 43301, 43301, 43301, 1711, 2191, -1000,
	19059, 1688, 756, 2112, 43301, 43301, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 478, 753, -363,
	275, 257, 753, 753, 753, -401, -1000, -1000, 1470, 1460,
	-1000, -122, -1000, 19059, -1000, -1000, -1000, 1061, 1061, -1000,
	1685, -1000, -1000, -1000, 1310, -1000, -1000, -102, 43301, 43301,
	43301, 43301, -1000, 1035, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 701, 19665, -1000, -1000,
	505, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	19059, -1000, 19059, -1000, 2171, 1147, 1340, 19059, 19059, -1000,
	981, 964, 1585, -1000, -1000, -1000, 1272, 20271, -1000, 20271,
	-1000, 19059, 205, 331, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19059, -1000, 19059, 19059,
	-1000, 19059, 1670, 1999, 1670, 1670, 25727, -1000, -1000, 2243,
	2241, 2189, 1960, 1957, 1957, 1990, -1000, 2188, 2182, -1000,
	1145, 2177, 1144, 802, -1000, 43301, 19059, 1670, -1000, 368,
	43301, 1670, 43301, -1000, 2224, -1000, -1000, 19059, 1687, -1000,
	19059, -1000, -1000, -1000, -1000, -1000, -1000, 6094, 2255, 1401,
	-1000, -1000, 712, -1000, 19059, -1000, -1000, -1000, 4285, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1142, 1139, -1000,
	-1000, 1686, 19059, -1000, -1000, -1000, 1308, 1290, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1685, -1000, -1000, -1000,
	-1000, 360, -396, 2073, 43301, 930, -1000, 1419, 1440, 338,
	1670, 1134, 753, 753, 753, 925, 922, 29969, 1398, -1000,
	43301, 419, -1000, 360, -1000, -128, -136, 1585, -1000, -1000,
	2097, -1000, -1000, 12368, -1000, -1000, 1672, 1721, -1000, -1000,
	-1000, 252, -1000, 1585, 1585, 1272, -1000, 1585, 1585, 1288,
	1281, -1000, -1000, 1393, -1000, 1625, -1000, 205, 1272, 1852,
	-1000, -1000, 6094, -1000, 1601, 1585, 1596, 1494, 26333, -1000,
	2176, 2173, 30575, 30575, 676, 2241, -1000, 19059, 19059, 1950,
	999, -1000, -1000, -1000, -1000, 1133, 1132, -1000, 1128, -1000,
	2313, -1000, 1340, -1000, 1670, -1000, 617, 1321, -1000, 2171,
	1340, 43301, 1340, 82, 2224, -1000, 1585, -1000, 1670, 1670,
	1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670,
	1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670,
	1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670, 1670,
	1670, 1670, 1670, 1670, -1000, -1000, 43301, 1987, -1000, -1000,
	2088, 1380, 67, -1000, 1368, -1000, -1000, 543, -1000, 19059,
	-1000, 29969, 1121, 935, -1000, -1000, -1000, -1000, -401, -1000,
	-1000, -1000, -1000, -1000, -1000, 355, 1426, -1000, 751, 43301,
	43301, 1272, 312, -107, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 19059, -1000, 1272, 1851, -1000, -247, -1000,
	-1000, 19059, -1000, -1000, 19059, -1000, 19059, 1361, -1000, -1000,
	-1000, -1000, -1000, 1361, 1361, -1000, -1000, 1340, 1395, -1000,
	998, -1000, -1000, -1000, -1000, -1000, 43301, 1321, 43301, -1000,
	1359, 1272, 1670, 2171, -1000, 1350, -1000, 355, -1000, 1662,
	1766, -1000, -1000, -1000, 17241, -1000, -1000, -1000, -1000, -1000,
	232, -101, 12368, 9308, 1332, -1000, -1000, 1905, -90, -114,
	1934, -1000, -331, -1000, -1000, 1441, 1436, 1364, 29363, -1000,
	-1000, -1000, -1000, -1000, 1267, -1000, -1000, 25727, 42695, -1000,
	-80, 241, -101, 19059, 1660, 1272, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 22, -1000, -1000, -1000, -1000, -1000,
	1666, -1000, 1901, -1000, 1272, -1000, 19059, -1000, 19059, -1000,
	19059, -1000, -1000, -1000, 1263, -1000, 4443, -203, 1849, -1000,
	-48, -1000, -1000, -1000, 847, 917, -1000, -1000, -1000, -1000,
	-1000, -1000, 1894, 43301, -1000, 431, -1000, -1000, -102, -105,
	-1000, 1261, 1226, 1585, -1000, 42695, -198, 697, 6094, -1000,
	1844, 1755, 2297, -1000, -1000, -1000, -1000, -1000, -1000, -407,
	1258, 229, -1000, -111, -1000, 19059, -1000, 19059, -1000, -1000,
	-1000, 2078, 82, -1000, 2306, -1000, 2292, 672, 672, -1000,
	910, -407, -1000, -117, 1585, 1585, -207, -1000, -1000, -1000,
	-1000, -1000, 434, 1020, -1000, -1000, -1000, -1000, -1000, -1000,
	6094, -1000, -1000, -1000, 219, 219, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2712, 2707, 29, 3, 36, 35, 2701, 24, 107,
	197, 23, 200, 105, 2697, 2685, 2681, 2678, 2676, 2674,
	2673, 227, 226, 222, 2672, 2667, 2666, 2665, 2662, 2660,
	2659, 2658, 2656, 2655, 220, 168, 192, 2651, 2650, 2647,
	126, 186, 96, 98, 191, 2643, 2642, 89, 2640, 2639,
	2635, 180, 179, 178, 873, 2634, 170, 128, 46, 2632,
	2631, 2630, 2629, 2627, 2625, 2624, 2618, 2613, 2611, 2610,
	2609, 2608, 2607, 2605, 2604, 2603, 273, 2601, 2599, 15,
	2598, 94, 2597, 2594, 2593, 2592, 141, 2591, 2584, 2581,
	40, 2579, 2576, 2575, 2574, 2573, 2572, 2570, 154, 2568,
	2567, 2566, 2565, 201, 2557, 2554, 171, 127, 120, 2552,
	2549, 119, 195, 2547, 132, 2546, 2545, 2542, 165, 2541,
	2878, 2540, 71, 69, 2539, 79, 93, 63, 68, 18,
	22, 2535, 2533, 70, 115, 2532, 2531, 108, 75, 2528,
	111, 106, 2526, 2525, 13, 6, 2524, 1, 5, 2,
	76, 2520, 2519, 124, 2518, 2517, 2514, 101, 2512, 2511,
	139, 2510, 103, 147, 110, 84, 2509, 45, 67, 2508,
	2501, 2498, 2497, 2495, 53, 2494, 2491, 2488, 152, 78,
	174, 42, 77, 50, 148, 2486, 61, 90, 2485, 153,
	151, 2484, 73, 30, 37, 2482, 41, 144, 134, 38,
	100, 145, 2481, 2480, 58, 82, 2479, 2478, 2477, 2474,
	2473, 2469, 80, 2465, 59, 2463, 194, 2461, 28, 2460,
	49, 44, 2458, 74, 133, 81, 39, 2455, 182, 2452,
	55, 175, 142, 173, 2448, 2446, 2445, 2443, 188, 328,
	2442, 2440, 85, 169, 155, 160, 97, 2439, 332, 2438,
	2437, 99, 1545, 3870, 21, 176, 2436, 2434, 4601, 149,
	52, 16, 2433, 196, 2432, 2429, 2427, 206, 177, 140,
	1014, 66, 2425, 2422, 12, 2418, 2417, 2412, 2411, 2406,
	2404, 129, 34, 33, 32, 198, 83, 9, 117, 172,
	92, 2403, 2402, 2401, 137, 116, 2399, 167, 166, 159,
	190, 2385, 184, 158, 156, 2384, 86, 31, 2383, 2382,
	2381, 2378, 123, 2376, 2375, 2374, 2373, 162, 164, 135,
	91, 2372, 95, 131, 157, 161, 48, 2371, 47, 2369,
	2368, 26, 189, 27, 2367, 11, 65, 60, 20, 121,
	125, 2365, 0, 2364, 14, 181, 331, 163, 2362, 2361,
	7, 8, 10, 2354, 2349, 2348, 2347, 150, 2346, 2344,
	2343, 2342, 19, 43, 17, 4, 136, 88, 2340, 2334,
	6361, 1516, 143, 2333, 199,
}

//line sql.y:7199
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 368, 369, 369, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 342, 342,
	342, 345, 345, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	372, 372, 155, 155, 153, 153, 154, 154, 223, 223,
	24, 25, 25, 233, 233, 232, 232, 232, 234, 234,
	234, 234, 270, 270, 26, 26, 26, 26, 26, 104,
	104, 344, 344, 343, 335, 335, 334, 334, 333, 341,
	341, 340, 340, 339, 38, 39, 48, 48, 48, 48,
	49, 50, 346, 346, 308, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 310, 310, 296, 296, 309, 309, 309, 309, 309,
	309, 309, 295, 295, 115, 115, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 361, 361, 361, 360, 360, 203, 203,
	203, 203, 203, 203, 203, 203, 124, 124, 133, 133,
	133, 133, 133, 122, 122, 123, 121, 121, 121, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 132, 132, 128, 128, 128, 129, 129,
	129, 130, 130, 362, 362, 362, 362, 274, 274, 274,
	274, 277, 277, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 276, 276, 276, 276, 276, 278, 278, 278,
	278, 278, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 280, 280,
	280, 280, 280, 280, 280, 280, 294, 294, 281, 281,
	289, 289, 290, 290, 290, 291, 291, 291, 292, 292,
	286, 286, 286, 286, 286, 286, 286, 286, 286, 288,
	288, 287, 287, 287, 297, 322, 322, 321, 321, 319,
	319, 319, 319, 319, 319, 319, 319, 306, 306, 316,
	316, 316, 316, 316, 305, 305, 301, 301, 301, 302,
	302, 303, 303, 300, 300, 304, 304, 318, 318, 317,
	317, 298, 298, 299, 299, 324, 363, 363, 363, 363,
	363, 364, 364, 325, 353, 355, 355, 355, 354, 354,
	351, 352, 350, 350, 350, 350, 350, 81, 81, 81,
	246, 246, 247, 247, 314, 314, 313, 313, 313, 315,
	315, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 241, 241, 241, 349, 349, 349, 349, 349,
	349, 348, 348, 348, 311, 311, 311, 347, 347, 57,
	57, 187, 187, 366, 366, 367, 367, 367, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 86, 86, 87, 87, 87, 87, 89,
	89, 89, 327, 327, 58, 58, 3, 3, 143, 145,
	146, 146, 144, 144, 144, 144, 144, 144, 60, 60,
	59, 59, 148, 147, 149, 149, 149, 1, 1, 2,
	2, 4, 4, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 332, 332, 293, 293, 293, 326, 326,
	328, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 92, 91, 91, 90, 93, 93, 93, 93, 93,
	93, 93, 93, 330, 330, 330, 61, 61, 331, 282,
	283, 284, 5, 6, 307, 329, 100, 100, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 240,
	240, 249, 249, 239, 239, 263, 263, 263, 242, 242,
	242, 243, 243, 359, 359, 359, 236, 236, 64, 64,
	64, 66, 66, 67, 68, 68, 265, 265, 266, 266,
	69, 70, 82, 82, 82, 82, 82, 82, 85, 85,
	85, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 356, 356, 357, 358, 358, 358, 358,
	73, 75, 31, 31, 31, 31, 31, 31, 110, 110,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 105, 105, 105, 99, 99, 373, 76, 77,
	77, 103, 103, 103, 96, 96, 96, 102, 102, 102,
	16, 16, 17, 222, 222, 18, 18, 107, 107, 109,
	109, 109, 109, 109, 111, 111, 111, 111, 111, 111,
	111, 106, 106, 108, 108, 108, 108, 256, 256, 256,
	255, 255, 137, 137, 139, 138, 138, 140, 140, 141,
	141, 141, 141, 185, 185, 163, 163, 220, 220, 218,
	218, 219, 219, 221, 221, 221, 221, 224, 224, 142,
	142, 142, 142, 150, 150, 151, 151, 152, 152, 264,
	264, 261, 261, 261, 260, 260, 156, 156, 156, 158,
	157, 157, 157, 157, 159, 159, 161, 161, 160, 160,
	162, 167, 167, 166, 166, 164, 164, 164, 164, 165,
	165, 165, 165, 168, 168, 120, 120, 120, 120, 120,
	120, 120, 120, 131, 131, 131, 131, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 83, 83, 83, 237, 237, 169,
	169, 177, 177, 177, 177, 170, 170, 170, 170, 170,
	170, 170, 178, 178, 178, 184, 179, 179, 175, 175,
	175, 175, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 272, 272, 338, 338,
	337, 337, 336, 336, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 374, 374, 285, 285, 285,
	285, 176, 176, 176, 176, 176, 101, 101, 101, 101,
	101, 269, 269, 269, 273, 273, 273, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 190, 190, 97, 97, 188, 188, 189, 191,
	191, 186, 186, 186, 172, 172, 172, 192, 192, 193,
	193, 194, 194, 196, 195, 195, 197, 198, 198, 198,
	199, 199, 200, 200, 200, 47, 47, 47, 47, 47,
	42, 42, 42, 42, 43, 43, 43, 43, 112, 112,
	112, 112, 114, 114, 113, 113, 79, 79, 80, 80,
	80, 118, 118, 119, 119, 119, 116, 116, 117, 117,
	216, 216, 201, 201, 201, 208, 208, 208, 204, 204,
	206, 206, 206, 207, 207, 207, 205, 213, 213, 215,
	215, 214, 214, 210, 210, 211, 211, 212, 212, 212,
	209, 209, 171, 171, 171, 171, 171, 217, 217, 217,
	217, 225, 225, 181, 181, 183, 183, 182, 135, 226,
	226, 230, 227, 227, 231, 231, 231, 231, 231, 228,
	228, 229, 229, 257, 257, 257, 235, 235, 248, 248,
	244, 244, 245, 245, 238, 238, 250, 250, 250, 74,
	180, 180, 323, 323, 320, 253, 253, 254, 254, 258,
	258, 262, 262, 259, 259, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 370,
	371, 267, 268, 268, 268,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 1, 1, 1, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 6, 6,
	6, 4, 4, 4, 7, 8, 6, 5, 6, 8,
	11, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	1, 6, 8, 10, 12, 14, 6, 8, 8, 10,
	12, 14, 6, 8, 10, 12, 0, 2, 0, 2,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -368, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 10,
	11, -84, -33, 33, -38, -48, 221, -49, -39, 222,
	-50, 224, 223, 260, 225, 253, 75, 306, 307, 309,
	310, 311, 312, -85, 258, 259, 227, 37, 46, 34,
	35, 38, 231, 266, 267, 230, -10, -34, 9, -370,
	12, 437, 255, 254, 29, -12, 475, 87, -369, 616,
	-216, -201, 23, 34, 30, -200, -196, -103, -201, 21,
	19, 8, -76, -373, -76, -76, 13, 14, -76, -308,
	-310, 87, 157, 87, -76, -55, -54, -52, -51, -53,
	-56, 32, -45, -46, -332, -44, -41, 226, 223, 270,
	121, 122, 260, 261, 262, 225, 244, 259, 263, 258,
	279, -40, 82, 34, 475, 478, -315, 222, 228, 229,
	438, 124, 123, 76, 224, -312, 360, 508, 586, -56,
	588, 103, 105, 587, 45, 234, 589, 590, 591, 515,
	592, 243, 593, 594, 595, 596, 602, 557, 603, 604,
	605, 125, 8, -76, -262, -258, -342, -252, 90, 91,
	92, 472, 246, 506, 507, 295, 82, 42, 357, 360,
	508, 586, 306, 320, 314, 341, 333, 473, 509, 482,
	298, 247, 283, 583, 331, 133, 588, 301, 510, 261,
	365, 366, 511, 367, 103, 309, 404, 601, 300, 512,
	599, 105, 587, 80, 52, 45, 256, 329, 230, 325,
	589, 284, 513, 484, 277, 124, 121, 608, 37, 323,
	51, 31, 598, 123, 50, 590, 148, 514, 591, 515,
	369, 348, 577, 49, 370, 262, 516, 85, 267, 477,
	304, 585, 371, 324, 372, 294, 597, 227, 517, 569,
	373, 374, 578, 518, 349, 353, 519, 396, 375, 615,
	53, 520, 521, 579, 122, 522, 79, 592, 81, 318,
	319, 523, 292, 245, 398, 345, 450, 457, 458, 109,
	110, 453, 111, 459, 112, 460, 461, 462, 451, 113,
	106, 452, 463, 464, 346, 347, 114, 465, 108, 107,
	454, 456, 115, 466, 243, 36, 376, 474, 296, 59,
	271, 399, 47, 351, 612, 46, 573, 524, 576, 344,
	340, 447, 54, 525, 526, 527, 528, 593, 343, 317,
	339, 607, 4, 289, 594, 63, 229, 355, 354, 356,
	278, 395, 336, 529, 530, 531, 250, 83, 532, 326,
	22, 533, 534, 377, 285, 535, 57, 536, 537, 402,
	259, 538, 55, 595, 40, 539, 264, 609, 596, 540,
	541, 542, 543, 266, 544, 379, 545, 378, 350, 352,
	273, 380, 476, 546, 305, 322, 263, 600, 547, 251,
	467, 468, 469, 470, 584, 265, 270, 258, 403, 252,
	548, 549, 550, 551, 552, 299, 568, 553, 554, 310,
	602, 448, 44, 555, 556, 557, 558, 559, 293, 288,
	397, 406, 62, 84, 362, 560, 561, 582, 316, 286,
	562, 307, 56, 603, 604, 605, 280, 606, 10, 613,
	614, 382, 125, 290, 291, 48, 337, 272, 563, 302,
	564, 327, 328, 342, 315, 338, 308, 570, 274, 383,
	449, 260, 565, 405, 287, 358, 363, 303, 480, 279,
	384, 581, 479, 335, 332, 281, 566, 385, 235, 275,
	276, 567, 571, 386, 387, 297, 388, 389, 390, 391,
	392, 394, 393, 282, 478, 313, 330, 364, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 446, 233, -76, 233,
	-160, -258, 233, -228, 366, -249, 368, 381, 376, 386,
	374, -240, 377, 379, 273, -359, 396, 233, 383, 221,
	369, 378, 387, 388, 297, 394, 389, 393, 282, 390,
	391, 392, -342, 174, 591, 606, 133, 334, 373, 371,
	397, 573, -258, 308, -265, 313, -253, -342, -252, 311,
	-160, -82, 569, 225, -267, -267, -105, 573, 575, -179,
	-120, 141, -131, -134, -125, -126, -173, -174, -175, -176,
	-132, -186, 163, 164, 171, 142, -184, -135, 27, 471,
	439, 438, 174, 32, 217, 69, 70, 441, 442, 144,
	58, 414, 415, -133, 409, 416, 411, 444, 445, 116,
	446, 106, 108, 107, 447, 448, 449, 346, 347, 450,
	451, 452, 109, 110, 111, 112, 113, 114, 115, 453,
	456, 454, 455, 457, 458, 459, 464, 465, 460, 461,
	462, 463, 466, -136, -253, -258, 238, 408, 232, 169,
	437, -127, -123, -8, -182, 407, 412, 413, 417, 410,
	467, 468, 469, 470, -342, -252, -129, -128, -169, 93,
	99, 104, 100, -365, 117, -370, 94, 95, 96, 97,
	98, 118, 119, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 45, 382, 382, -160, -76,
	-76, -76, -76, -194, -103, -196, -10, -8, -370, 9,
	-76, -8, -9, -13, -34, -36, 502, -35, -258, -201,
	-216, 13, 159, 43, 51, -199, -200, -12, -8, -120,
	20, 24, 25, -108, 165, -120, -258, -77, -108, -238,
	237, -76, -76, -227, -270, 308, -231, 397, 396, -254,
	-229, -253, -251, -228, 395, 226, 24, 481, 140, 26,
	28, 143, 174, 128, 20, 144, 38, 228, 334, 244,
	173, 240, 438, 221, 73, 483, 409, 411, 407, 414,
	440, 441, 408, 368, 32, 14, 485, 29, 254, 25,
	39, 167, 223, 147, 486, 257, 27, 255, 116, 119,
	488, 23, 76, 249, 15, 242, 41, 17, 489, 490,
	18, 238, 237, 159, 234, 71, 12, 217, 30, 156,
	67, 491, 135, 492, 493, 494, 495, 129, 69, 157,
	21, 610, 412, 413, 34, 574, 471, 268, 169, 74,
	60, 575, 141, 410, 496, 497, 117, 498, 120, 77,
	580, 137, 19, 72, 43, 499, 269, 500, 239, 611,
	501, 400, 502, 158, 224, 437, 70, 5, 503, 232,
	381, 9, 443, 33, 253, 241, 127, 68, 504, 233,
	146, 444, 445, 236, 130, 118, 8, 134, 35, 13,
	75, 78, 415, 416, 417, 58, 126, 475, 145, 16,
	505, 401, 139, 133, -309, 157, -295, -299, -253, 248,
	-325, 244, -160, -318, -317, -253, -370, -104, -248, 234,
	242, 241, 134, -346, 137, 290, 408, 232, -51, -52,
	-53, -228, 173, 590, -86, 265, 269, 88, 88, -299,
	-298, -297, -347, 269, 248, -324, -316, 240, 249, -305,
	241, 242, -300, 234, 135, -347, -300, 239, 249, 244,
	248, 269, 269, 125, 269, 125, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 264, -306, 149, -306, 479,
	479, -312, -347, 244, 234, -347, -347, 236, 36, 36,
	-250, -300, 236, 26, -306, -306, -306, -228, 173, -306,
	-306, -306, -306, 277, 277, -306, -306, -306, -306, -306,
	-306, -306, -306, -306, -306, -306, -306, -306, -306, -306,
	-306, -306, 233, -346, -112, 393, 297, 82, -54, 279,
	-37, -160, -248, 234, 235, -346, 266, -160, 218, -160,
	-242, 157, 16, -242, -239, 382, 380, 367, 372, -242,
	-242, -242, -242, 280, 365, -301, 234, 36, 245, 382,
	280, 365, 280, 281, 280, 281, 375, 385, 280, -263,
	15, 159, 408, 370, 374, 273, 233, 274, 235, 384,
	281, -263, 94, -243, 157, 382, 276, -242, -242, -268,
	-370, -254, 334, -342, 576, -268, -268, 33, 91, 236,
	-253, -78, -253, 94, -15, -11, -22, -21, -23, 149,
	-110, 382, -98, 174, 591, 577, 578, 579, 576, 379,
	584, 582, 580, 280, 581, 88, 137, 139, 140, 4,
	5, -120, 156, -170, 149, 150, 151, 152, 153, 154,
	155, 159, 141, 143, 157, 158, 138, 160, 161, 162,
	163, 164, 165, 166, 168, 167, 169, 170, 173, 219,
	220, -126, -126, -126, -126, -184, -370, -370, -370, -126,
	-237, -370, -126, -370, -370, -370, -370, -190, -120, -370,
	-374, -370, -374, -374, -285, -370, -285, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, 218, -370, -370, -370, -370, -370,
	-285, -285, -285, -285, -285, -370, -370, -370, -370, 104,
	99, 93, -186, 100, 94, -253, -258, -8, -9, -179,
	-267, -356, -357, -163, -160, -370, 297, -253, -253, 266,
	-199, -12, -8, -194, -200, -196, -8, -76, -96, -109,
	64, 65, -111, 25, 39, 68, 66, 24, -371, 89,
	-371, -216, -371, 88, -36, -220, 87, 62, 44, 94,
	94, 88, 22, -195, -197, -120, 15, -256, 4, -255,
	26, -253, 94, 218, 102, 15, -161, 30, -160, -238,
	-238, 88, 308, -231, -270, -233, -232, 398, 400, 149,
	-257, -253, 94, 32, 89, 88, -160, -274, -277, -279,
	-278, -280, -275, -276, 331, 332, 174, 335, 337, 338,
	339, 340, 341, 342, 343, 344, 345, 348, 33, 256,
	327, 328, 329, 330, 349, 350, 351, 352, 353, 354,
	355, 356, 314, 333, 473, 315, 316, 317, 318, 319,
	320, 322, 323, 324, 325, 326, -345, -342, 87, 89,
	88, -281, 87, -120, -112, 233, -342, 234, 234, 234,
	-76, 437, -306, -306, -306, 264, 20, -44, -41, -332,
	19, -40, -41, 226, 121, 122, 223, 87, -295, 87,
	-304, -345, -342, 87, 135, 239, 134, -303, -300, -303,
	-304, -342, -186, -342, 135, 135, -342, -342, -224, -253,
	-224, -224, 24, -224, 24, -224, 24, 96, -253, -224,
	24, -224, 24, -224, 24, -224, 24, -224, 24, 32,
	79, 80, 81, 32, 83, 84, 85, -186, -342, -342,
	-186, -295, -228, -160, -342, 96, 96, 96, -306, -306,
	96, 94, 94, 94, -306, -306, 96, 94, -260, -258,
	94, 94, -348, 250, 294, 296, 96, 96, 96, 96,
	32, 94, -349, 32, 598, 597, 599, 600, 601, 94,
	96, 32, 96, 32, 96, -253, 87, -160, -118, 284,
	221, 223, 226, 77, 94, 298, 302, 303, 149, 45,
	88, 236, 233, -342, -244, 238, -244, -253, -259, -258,
	-251, 94, -120, -302, 15, 159, -263, -263, -242, -160,
	-302, -263, -242, -160, -242, -242, -242, -242, -263, -263,
	-263, -242, -258, -258, -160, -160, -160, -160, -160, -160,
	-160, -268, -243, -242, 576, 94, -236, 15, 77, -268,
	-268, -266, 311, 345, 570, 571, 572, 88, 475, -153,
	-160, 576, 576, 576, 576, 576, 576, -120, -120, -120,
	-120, 498, -120, -177, 117, 141, 118, 119, -134, -178,
	-182, -184, 101, 159, 143, 157, 158, -125, -126, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -125, -269, -253, 94, 174, -130, -129, 100, -365,
	-130, -106, -108, -120, -120, -342, -253, -106, -106, -120,
	-102, 25, 39, -188, -189, 145, -186, -371, -371, 96,
	100, -253, -253, -95, -94, 419, 420, 421, 422, 424,
	425, 426, 429, 430, 434, 435, 418, 436, 423, 428,
	431, 432, 433, 427, 330, -120, -120, -120, -120, -120,
	-120, -83, -120, 128, 129, 130, -120, -120, -180, -179,
	-341, -340, -339, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -107, 25, 39, -106,
	-254, -259, -251, -106, -107, -107, -106, -106, -120, -120,
	-120, -120, 218, -216, -371, 88, -358, 400, 401, 574,
	-261, 269, -260, 26, -180, 94, 15, -222, 78, -253,
	-199, -199, 64, 65, 60, -106, -111, -371, -35, 26,
	-218, -253, 63, 94, -286, -228, 357, 358, 174, -120,
	-120, 88, -198, 28, 29, -160, -255, 165, -259, -160,
	-223, 269, -160, -138, -140, -141, -142, -163, -185, -370,
	-143, 494, 491, 15, -153, -154, -162, -258, -231, -233,
	88, 399, 401, 402, 77, 120, -120, -287, 173, -314,
	-313, -312, -295, -297, -298, -299, 89, -287, -291, 363,
	362, -281, -281, -281, -281, -281, -286, -286, -286, -286,
	87, 87, -281, -281, -281, -281, -289, 87, -289, -289,
	-290, 87, -290, -325, -120, -322, -321, -319, -320, 243,
	103, 567, 523, 475, 515, 557, 78, -317, -198, 96,
	-371, -118, -245, 238, -323, -320, -342, -342, -342, -245,
	-342, 94, -342, 94, -342, 94, -87, -58, -1, 610,
	611, 612, 88, 20, -296, -295, -57, 294, -328, -329,
	269, -324, -318, -304, 135, -303, -304, -304, -342, 88,
	30, 125, 125, 125, 125, 475, 223, 33, -246, 514,
	141, 567, 523, -295, -57, -269, 236, -269, -269, 94,
	94, -241, 606, -153, -114, 286, 149, 275, 275, 233,
	233, 288, -160, 299, 301, 300, 298, 302, 303, 24,
	24, 24, 287, 289, 291, 277, -160, -160, -244, 77,
	-155, -160, 27, -258, -160, -242, -242, -160, -242, -242,
	-160, -253, -98, 400, 88, 475, 23, -99, 23, -370,
	117, 118, 119, -178, -125, -126, -125, 140, 257, 88,
	-371, 26, 88, 78, -371, -371, -371, 88, 15, -106,
	-191, -189, 147, -120, -371, -371, -371, 88, 88, 15,
	-273, 26, -371, -371, -371, -371, -371, -190, -371, 15,
	88, 88, -371, -371, 88, 88, -371, 88, 88, 88,
	-338, 88, 88, 88, 88, -371, -371, -371, -371, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, -371,
	-371, -106, -106, -370, 218, -371, -371, -371, -371, -371,
	88, 88, 88, 88, -254, -357, 573, 401, -167, -166,
	-164, 75, 237, 76, -370, -260, -371, -130, 91, -219,
	91, -218, -172, -253, 96, 100, -201, -137, -139, 15,
	-111, -184, 89, 88, -286, -205, -210, -239, -253, 94,
	174, -288, 174, -288, 357, 358, -197, 218, -168, 16,
	-171, 33, 58, -11, -370, -370, 33, 88, -156, -158,
	-157, -159, 67, 71, 73, 68, 69, 70, 74, -264,
	26, -138, -9, -8, -370, -370, -370, -160, -153, -372,
	15, 78, -372, 88, 218, -232, -234, 403, 400, 406,
	-342, 94, -86, 88, -312, -299, -202, -115, 41, -292,
	364, -286, 482, -286, -294, 94, -294, 96, 96, 89,
	-47, -42, -43, 34, 82, -319, -306, 94, 40, -306,
	-306, -253, 89, -198, -114, -160, 141, 77, -323, -323,
	-323, -258, -2, 609, 615, 135, 87, 367, 19, -218,
	88, 89, -187, 295, 89, -88, -253, 89, 87, -304,
	-304, -253, -370, 233, 32, 32, 567, 523, 514, -57,
	-187, -287, -342, 608, 607, 89, 235, 293, -119, 414,
	-116, 94, 90, -160, -160, -160, -160, -160, 226, 223,
	-366, 304, -366, 278, 236, -153, -160, 88, -81, 252,
	247, -263, -263, 34, -160, 400, 585, 583, -120, 140,
	257, -134, -126, -108, 472, -271, 174, 331, 256, 329,
	325, 345, 336, 362, 327, 363, 324, 323, 322, -271,
	-269, -120, -120, -194, 148, -120, 146, -120, -120, -120,
	-371, 174, 331, 15, -120, -120, -120, -339, -120, -120,
	-120, -337, -336, -130, -186, -371, -337, -120, -120, -336,
	-336, -340, -340, -340, -340, -340, -179, -179, -179, -179,
	-371, -371, -107, -254, -120, -120, -120, -120, -164, -300,
	-300, -300, -224, 88, -235, 23, 15, 58, 58, -137,
	-168, -138, -111, -253, -208, 569, -213, 47, -211, -212,
	48, -209, 49, 57, -288, -288, 165, -199, -120, -225,
	77, -226, -230, -186, -181, -183, -182, -370, -217, -371,
	-253, -224, -226, -140, -141, -141, -140, -141, 67, 67,
	67, 72, 67, 72, 67, -157, -258, -371, -371, -9,
	-9, -120, -261, 78, -138, -138, -162, -258, 165, 400,
	404, 405, -312, -364, 117, 141, 32, 77, 360, 103,
	-362, 173, 511, 562, 567, 523, 515, 557, -363, 239,
	134, 135, 251, 26, 42, 89, 88, 89, 88, 89,
	88, -247, -246, -43, -42, -306, -306, 96, -342, 94,
	94, 235, 27, -160, 77, 77, 77, -89, 613, 96,
	87, -3, 82, -120, 87, 20, -295, -186, -330, -282,
	-331, -283, -284, -5, -6, -307, -92, 58, 103, -61,
	45, 234, 593, 594, 125, -370, 606, -322, -218, -326,
	-328, -160, -122, -370, -121, -123, -127, 163, 164, -187,
	-160, -113, 284, 292, 87, -117, 91, -344, 78, 275,
	360, 275, -367, 305, 94, -367, -160, -81, -47, -160,
	-242, -242, 34, -342, -371, -134, -126, -370, -371, -281,
	-281, -281, -290, -281, 319, -281, 319, -281, -371, -371,
	88, -371, 23, -371, -97, 443, -120, 88, 88, -371,
	87, 87, -120, -371, -371, -371, -338, 88, -371, 88,
	-371, 88, -272, 568, -371, -371, -371, -371, -371, -371,
	-371, -371, -371, -371, -371, -371, 88, -371, 88, 88,
	-371, 88, -165, 23, -165, -165, -371, 91, -160, -168,
	-192, 17, -205, 52, 337, -215, -214, 56, 48, -212,
	20, 50, 20, 31, -225, 88, 149, 88, -371, -371,
	88, 58, 218, -371, -168, -151, -150, 77, 78, -152,
	77, -150, 67, 67, -220, -371, -371, 88, -223, -138,
	-168, -168, 218, 117, -370, -124, -133, -122, 13, 94,
	94, -342, -361, 597, 598, 32, 96, -306, -306, 135,
	135, -160, 87, -286, 94, -286, 96, 96, 32, 83,
	84, 85, 32, 79, 80, 81, -160, -160, -160, -160,
	-327, 87, 20, -120, 87, 149, 89, -218, -218, 271,
	159, -306, 591, 277, 277, -306, -306, -306, -91, -90,
	613, 89, -371, 88, -293, 475, 478, -120, -128, -128,
	-220, 89, -335, 475, -343, -253, -253, -253, -253, 96,
	98, -125, -286, -120, -120, -199, 94, -120, -120, 96,
	96, -371, -371, -337, -336, -120, -371, -148, -147, -149,
	577, 117, 32, -271, -120, -120, -120, -120, -370, 67,
	19, 17, -370, -370, -261, -192, -193, 18, 20, -206,
	54, -204, 53, -204, -214, 20, 20, 94, 20, 94,
	135, -230, -120, -183, 58, -11, -253, -181, -253, -194,
	-120, 87, -120, -130, -168, -168, -120, -174, 446, 106,
	108, 107, 447, 448, 449, 346, 347, 450, 451, 452,
	109, 110, 111, 112, 113, 114, 115, 453, 456, 454,
	457, 458, 459, 464, 465, 460, 461, 462, 463, 466,
	467, 468, 469, 470, 94, 94, 87, -120, 89, 89,
	-220, -326, -58, 89, -218, 96, 89, 272, -182, -370,
	94, -306, -306, -306, 96, 96, -260, -371, 88, -253,
	-363, -328, 479, 479, -371, 26, -334, -333, -254, 87,
	78, -101, 159, 475, -371, -371, -371, -371, -371, 89,
	89, -371, -371, 88, -371, -147, -149, -371, 77, -130,
	-371, 88, -371, -371, 88, -371, 88, -221, -371, -253,
	239, 20, 20, -221, -221, -167, -193, -120, -179, -207,
	55, 77, 120, 94, 94, 94, 13, -181, 218, -199,
	-218, -145, 367, -194, -371, -218, 89, 26, 89, 615,
	135, 89, -182, -100, -370, 268, -260, 94, 94, -90,
	-93, -11, 88, 149, -218, -160, -371, 473, 74, 476,
	-120, -371, 77, 486, 577, -120, -120, -120, 88, -371,
	-371, -371, 77, 120, -226, -253, 89, -371, -370, -199,
	89, -203, -11, 87, -3, 268, -282, -331, -283, -284,
	-5, -6, -307, -79, 475, -333, -311, -254, 94, 96,
	89, 63, 474, 477, -338, -371, 88, -371, 88, -371,
	88, -253, 239, -261, -146, -144, -253, 529, -354, -353,
	471, -364, -360, 117, 141, 103, -362, 567, 523, 126,
	127, -79, -120, 87, -371, -80, 283, 573, -344, 63,
	-371, -120, -120, -120, -371, 88, 23, -274, -60, 540,
	-351, -352, 77, -355, 373, 539, 560, 117, 94, 89,
	-218, 244, -335, 475, -371, 88, -371, 88, -371, -144,
	536, -287, -130, -352, 77, -351, 77, 14, 13, -4,
	614, 89, 285, 476, -120, -120, -59, 27, -145, -350,
	252, 247, 250, 33, -350, 96, -4, 477, -371, -371,
	540, 246, 32, 117, -130, -148, -147, -147,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1331, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1841, 1841, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1191, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1839, 1, 3,
	69, 73, 0, 0, 0, 56, 1200, 0, 76, 0,
	0, 831, 0, 829, 0, 1314, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1316, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1218, 153, 1332, 1329, 1330, 38, 39,
	40, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 0, 1308, 0,
	686, 928, 0, 748, 748, 0, 748, 748, 748, 748,
	0, 0, 0, 698, 0, 0, 0, 0, 745, 0,
	714, 715, 0, 745, 0, 721, 751, 0, 726, 748,
	748, 729, 1842, 0, 1842, 1842, 1299, 0, 742, 740,
	754, 755, 758, 762, 0, 767, 770, 1325, 1326, 0,
	785, 47, 1571, 777, 790, 791, 0, 823, 824, 43,
	1026, 0, 950, 956, 967, 980, 981, 982, 983, 984,
	986, 987, 0, 0, 0, 0, 992, 993, 0, 0,
	0, 0, 0, 1007, 0, 0, 0, 0, 0, 1172,
	0, 1135, 1135, 1043, 1135, 1137, 1137, 0, 0, 0,
	1838, 1612, 1620, 1621, 1643, 1733, 1782, 1616, 1617, 1598,
	1610, 1613, 1601, 1602, 1604, 1606, 1611, 1618, 1624, 1603,
	1623, 1622, 0, 1599, 1600, 1605, 1615, 1619, 1607, 1608,
	1609, 1614, 1625, 1090, 1181, 0, 0, 0, 0, 0,
	0, 273, 274, 1025, 1288, 1137, 1137, 1137, 1137, 1137,
	1712, 1713, 1714, 1715, -2, -2, 219, 220, 221, 222,
	223, 224, 225, 0, 215, 0, 278, 279, 275, 276,
	277, 1009, 1010, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 1841, 0, 800, 0, 0,
	0, 0, 0, 1200, 0, 1192, 1191, 61, 0, 827,
	-2, 0, 0, 0, 0, 45, 0, 50, 887, 75,
	74, 1240, 0, 0, 0, 57, 1201, 65, 67, 1202,
	0, 832, 833, 0, 863, 867, 0, 828, 0, 0,
	1315, 1314, 1314, 100, 0, 1778, 1292, -2, -2, 0,
	0, 1327, 1328, 1301, -2, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, -2, 0, 0, 165, 166, 0, 41,
	404, 0, 161, 0, 397, 338, 0, 1218, 0, 0,
	0, 0, 0, 827, 0, 1309, 142, 143, 150, 151,
	152, 377, 377, 377, 549, 0, 0, 153, 153, 508,
	509, 510, 0, 0, -2, 402, 0, 488, 0, 0,
	391, 391, 395, 393, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 378, 0, 547,
	548, 440, 0, 0, 0, 0, 0, 0, 524, 525,
	0, 0, 1317, 1318, 0, 0, 0, 377, 377, 0,
	0, 0, 0, 377, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1231, 0, 0, 0, -2, 0,
	678, 0, 0, 0, 1310, 1310, 0, 685, 0, 687,
	688, 0, 0, 689, 0, 745, 745, 743, 744, 691,
	692, 693, 694, 748, 0, 0, 386, 387, 388, 745,
	748, 0, 748, 748, 748, 748, 745, 745, 745, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1842,
	751, 748, 0, 722, 0, 723, 724, 727, 728, 730,
	1843, 1844, 1348, 1842, 1842, 734, 738, 1300, 760, 768,
	771, 788, 786, 787, 789, 781, 782, 783, 784, 0,
	802, 803, 808, 0, 0, 0, 0, 814, 815, 816,
	0, 0, 819, 820, 821, 0, 0, 0, 0, 0,
	0, 948, 0, 0, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 988, 989, 990, 991, 994, 0, 0, 0, 999,
	1000, 0, 0, 0, 0, 0, 837, 0, 1173, 0,
	1041, 0, 1042, 1044, 1045, 0, 1046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1320,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 847, 0, 0, 847, 847, 0, 0,
	208, 209, 210, 211, 212, 0, 0, 0, 0, 226,
	227, 228, 229, 230, 280, 1181, 0, 1025, 0, 0,
	44, 792, 793, 0, 911, 1320, 0, 0, 843, 0,
	55, 64, 66, 1200, 59, 1200, 0, 849, 0, 0,
	-2, -2, 850, 856, 857, 858, 859, 860, 52, 1840,
	53, 0, 72, 0, 46, 0, 0, 0, 0, 350,
	1243, 0, 0, 1193, 1194, 1197, 0, 864, 1654, 868,
	0, 870, 871, 0, 830, 0, 98, 0, 927, 0,
	0, 0, 1778, 1298, 0, 102, 103, 0, 0, 0,
	361, 1303, 1304, 1305, -2, 384, 0, 361, 345, 288,
	289, 290, 338, 292, 338, 338, 338, 338, 350, 350,
	350, 350, 321, 322, 323, 324, 325, 0, 0, 307,
	338, 338, 338, 338, 328, 329, 330, 331, 332, 333,
	334, 335, 293, 294, 295, 296, 297, 298, 299, 300,
	301, 340, 340, 340, 342, 342, 0, 42, 0, 365,
	0, 1197, 0, 0, 1231, 1312, 1322, 0, 0, 0,
	1312, 120, 0, 0, 0, 550, 584, 502, 538, 551,
	0, 505, 506, -2, 0, 0, 487, 0, 489, 0,
	385, 0, -2, 0, 395, 0, 391, 395, 392, 395,
	383, 396, 528, 529, 530, 0, 532, 533, 614, 897,
	0, 0, 0, 0, 0, 620, 621, 622, 0, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 539,
	540, 541, 542, 543, 544, 545, 546, 0, 0, 0,
	0, 489, 0, 535, 0, 441, 442, 443, 0, 0,
	446, 447, 448, 449, 0, 0, 452, 453, 454, 914,
	915, 455, 456, 481, 482, 483, 457, 458, 459, 460,
	461, 462, 463, 475, 476, 477, 478, 479, 480, 464,
	465, 466, 467, 468, 469, 472, 0, 135, 1222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 0, 0, 0, 0, 846, 929, 1333,
	1334, 749, 750, 0, 389, 390, 748, 748, 695, 735,
	0, 748, 699, 736, 700, 702, 701, 703, 716, 717,
	748, 706, 746, 747, 707, 708, 709, 710, 711, 712,
	713, 731, 718, 719, 720, 752, 0, 756, 757, 732,
	733, 0, 769, 773, 774, 775, 776, 0, 0, 805,
	94, 810, 811, 812, 813, 825, 818, 1027, 945, 946,
	947, 0, -2, 949, 953, 0, 1011, 1013, 955, 957,
	1022, 1023, 1024, 0, 0, 0, 0, 0, 961, 965,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 985, 1151, 1152, 1153, 1002, 281, 282, 0,
	1003, 0, 861, 0, 0, 0, 1001, 0, 0, 0,
	0, 838, 839, 1179, 1176, 0, 0, 1136, 1138, 0,
	0, 0, 0, 0, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1154, 0, 0, 0, 0,
	0, 1172, 0, 1004, 1005, 1006, 0, 0, 0, 1321,
	0, 130, 131, 0, 0, 0, 0, 0, 1108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 848,
	1182, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1287, 0, 795, 796, 798, 0,
	931, 0, 912, 0, 0, 801, 0, 842, 0, 845,
	58, 60, 854, 855, 0, 872, 851, 54, 49, 0,
	0, 889, 1241, 350, 1263, 0, 359, 359, 356, 1203,
	1204, 0, 1196, 1198, 1199, 77, 869, 865, 0, 943,
	0, 0, 926, 0, 875, 877, 878, 879, 909, 0,
	882, 0, 0, 0, 0, 0, 96, 928, 1293, 101,
	0, 0, 106, 107, 1294, 1295, 1296, 1297, 0, 573,
	-2, 436, 167, 169, 170, 171, 162, -2, 348, 346,
	347, 291, 350, 350, 315, 316, 317, 318, 319, 320,
	0, 0, 308, 309, 310, 311, 302, 0, 303, 304,
	305, 0, 306, 403, 0, 1205, 366, 367, 369, 377,
	0, 372, 373, 0, 377, 377, 0, 398, 399, 0,
	1197, 1222, 0, 0, 0, 1323, 1322, 1322, 1322, 0,
	155, 156, 157, 158, 159, 160, 609, 0, 0, 585,
	607, 608, 153, 0, 0, 163, 491, 490, 0, 641,
	0, 401, 0, 0, 395, 395, 380, 381, 531, 0,
	0, 616, 617, 618, 619, 0, 0, 0, 518, 430,
	0, 519, 520, 489, 491, 361, 0, 444, 445, 450,
	451, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 565, 566, 567, 493, 571, 568,
	493, 572, 1219, 1220, 1221, 0, 0, 679, 0, 0,
	427, 92, 1311, 684, 745, 705, 737, 745, 697, 704,
	725, 765, 809, 0, 0, 0, 0, 817, 0, 0,
	954, 1012, 1014, 958, 0, 962, 966, 0, 0, 0,
	0, 0, 0, 0, 1008, 1032, 1033, 0, 0, 1191,
	0, 1177, 0, 0, 1040, 1139, 1140, 0, 0, 0,
	0, 0, 1051, 1052, 1053, 1054, 1055, 0, 1057, 0,
	0, 0, 1061, 1062, 0, 0, 1063, 0, 0, 0,
	0, 0, 0, 0, 0, 1075, 1076, 1077, 1078, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1089,
	1028, 0, 0, 847, 0, 1141, 1142, 1143, 1144, 1145,
	0, 0, 0, 0, 1182, 794, 797, 799, 885, 932,
	933, 0, 0, 0, 0, 913, 1319, 840, 841, 844,
	-2, 0, 0, 1184, 0, 0, 872, 943, 873, 0,
	852, 51, 888, 0, 1245, 1244, 1257, 1270, 359, 359,
	353, 354, 360, 355, 357, 358, 1195, 0, 1200, 0,
	1281, 0, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 916, 0, 0, 919, 0, 0, 0, 0,
	910, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	90, 91, 0, 0, 0, 104, 105, 0, 0, 111,
	362, 363, 144, 153, 438, 168, 411, 0, 0, 287,
	349, 312, 313, 314, 0, 336, 0, 0, 0, 432,
	116, 1209, 1208, 377, 377, 368, 0, 371, 0, 0,
	0, 1324, 339, 400, 0, 134, 0, 0, 0, 0,
	0, 140, 579, 0, 0, 586, 0, 0, 0, 500,
	0, 511, 512, 0, 613, -2, 675, 365, 0, 379,
	382, 898, 0, 0, 513, 0, 516, 517, 431, 491,
	522, 523, 536, 473, 474, 471, 0, 0, 1232, 1233,
	1238, 1236, 1237, 121, 557, 559, 558, 562, 0, 0,
	495, 0, 495, 555, 0, 427, 1205, 0, 683, 428,
	429, 748, 748, 804, 95, 0, 807, 0, 0, 0,
	0, 959, 963, 862, 0, 0, 338, 338, 1159, 338,
	342, 1162, 338, 1164, 338, 1167, 338, 1170, 1171, 0,
	0, 0, 0, 1174, 1039, 1180, 0, 0, 0, 0,
	1050, 0, 0, 0, 0, 0, 0, 132, 133, 1108,
	0, 0, 1110, 1112, 1113, 1067, 1109, 0, 0, 1106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1029, 1030, 0, 1183, 0, 0, 0, 0, 934, 939,
	939, 939, 0, 0, 0, 1306, 1307, 1185, 1186, 943,
	1187, 874, 853, 890, 1263, 0, 1256, 0, -2, 1265,
	0, 0, 0, 1271, 351, 352, 866, 78, 944, 81,
	0, 1281, 1289, 0, 1272, 1283, 1285, 0, 0, 0,
	1277, 0, 943, 876, 905, 907, 0, 902, 917, 918,
	920, 0, 922, 0, 924, 925, 887, 881, 883, 0,
	0, 0, 98, 0, 943, 943, 97, 0, 930, 108,
	109, 110, 437, 172, 177, 0, 0, 0, 182, 0,
	184, 0, 0, 0, 189, 190, 377, 377, 412, 0,
	284, 286, 0, 0, 175, 350, 0, 350, 0, 343,
	0, 413, 433, 1206, 1207, 0, 0, 370, 374, 375,
	376, 0, 1313, 136, 0, 0, 0, 582, 0, 610,
	0, 0, 0, 0, 0, 0, 164, 492, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 0, 377, 0,
	0, 0, 377, 377, 377, 0, 667, 364, 0, 0,
	638, 635, 514, 0, 213, 214, 216, 0, 0, 521,
	887, 1223, 1224, 1225, 0, 1235, 1239, 124, 0, 0,
	0, 0, 569, 0, 494, 570, 680, 681, 682, 93,
	690, 696, 806, 826, 951, 960, 964, 0, 996, 1157,
	350, 1160, 1161, 1163, 1165, 1166, 1168, 1169, 997, 998,
	0, 1035, 0, 1037, 1200, 0, 1178, 0, 0, 1049,
	0, 0, 0, 1058, 1059, 1060, 0, 0, 1066, 0,
	1068, 0, 0, 0, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1088, 1031, 1091, 0, 1096, 0, 0,
	1102, 0, 0, 0, 0, 0, 911, -2, 62, 1187,
	1189, 0, 1250, 1248, 1248, 1258, 1259, 0, 0, 1266,
	0, 0, 0, 0, 82, 0, 0, 0, 1286, 0,
	0, 0, 0, 99, 1191, 899, 906, 0, 0, 900,
	0, 901, 921, 923, 880, -2, 884, 0, 943, 943,
	88, 89, 0, 178, 0, 180, 206, 207, 0, 183,
	185, 186, 187, 193, 194, 195, 188, 0, 0, 283,
	285, 0, 0, 326, 337, 327, 0, 0, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 887, 137, 138, 139,
	574, 0, 584, 0, 0, 0, 577, 0, 503, 0,
	0, 0, 377, 377, 377, 0, 0, 0, 0, 652,
	0, 0, 615, 0, 623, 0, 0, 0, 217, 218,
	0, 1234, 556, 0, 122, 123, 0, 0, 561, 496,
	497, 1146, 1158, 0, 0, 0, 1175, 0, 0, 0,
	0, 1056, 1064, 0, 1111, 0, 1071, 0, 0, 0,
	604, 605, 0, 1107, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 931, 1189, 80, 0, 0, 1253,
	0, 1246, 1249, 1247, 1260, 0, 0, 1267, 0, 1269,
	0, 1290, 1291, 1284, 0, 1276, 1279, 1275, 1278, 1200,
	903, 0, 908, 0, 1191, 87, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 192, 0, 0, 341, 344,
	0, 0, 0, 575, 0, 587, 578, 0, 665, 0,
	669, 0, 0, 0, 672, 673, 674, 651, 0, 655,
	405, 639, 636, 637, 515, 0, 125, 126, 0, 0,
	0, 0, 0, 0, 1034, 1036, 1038, 1047, 1048, 1155,
	1156, 1065, 1069, 0, 1072, 0, 0, 1073, 0, 606,
	1092, 0, 1097, 1098, 0, 1103, 0, 0, 936, 893,
	894, 941, 942, 0, 0, 886, 79, 1190, 1188, 1242,
	0, 1251, 1252, 1261, 1262, 1268, 0, 1274, 0, 85,
	0, 0, 0, 1200, 179, 0, 198, 0, 583, 0,
	586, 576, 663, 664, 0, 676, 668, 670, 671, 653,
	-2, 1226, 0, 0, 0, 563, 995, 0, 0, 0,
	1108, 1074, 0, 602, 603, 0, 0, 0, 0, 935,
	937, 938, 1254, 1255, 1282, 1280, 904, 911, 0, 86,
	418, 411, 1226, 0, 0, 0, 656, 657, 658, 659,
	660, 661, 662, 553, 1228, 127, 128, 484, 485, 486,
	121, 1147, 0, 1150, 0, 1093, 0, 1099, 0, 1104,
	0, 895, 896, 588, 0, 590, 0, -2, 406, 419,
	0, 173, 199, 200, 0, 0, 203, 204, 205, 196,
	197, 117, 0, 0, 677, 0, 1229, 1230, 124, 1148,
	1070, 0, 0, 0, 589, 0, 0, 361, 0, 599,
	407, 408, 0, 414, 415, 416, 417, 201, 202, 611,
	0, 0, 560, 0, 1094, 0, 1100, 0, 1105, 591,
	592, 600, 0, 409, 0, 410, 0, 0, 0, 580,
	0, 611, 1227, 0, 0, 0, 0, 601, 597, 420,
	422, 423, 0, 0, 421, 612, 581, 1149, 1095, 1101,
	0, 424, 425, 426, 593, 594, 595, 596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 142, 3, 3, 3, 168, 160, 3,
	87, 89, 165, 163, 88, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 616,
	150, 149, 151, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 138, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 139, 140, 141, 143, 144, 145, 146,
	147, 148, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:533
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:538
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:539
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:543
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:579
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:589
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:593
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:598
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:602
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:608
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:614
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:620
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:624
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:633
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:643
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:649
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:655
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:663
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:686
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:703
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:716
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:723
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:802
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:808
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:816
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:828
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:840
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:852
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:856
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:872
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:880
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:885
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:890
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:900
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:904
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:910
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:914
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:923
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:935
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:939
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:945
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:949
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:955
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:959
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:963
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:969
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:973
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:977
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:981
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:987
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:991
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:997
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1010
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1019
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1023
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1030
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1034
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1039
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1049
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1054
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1059
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1065
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1070
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1085
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1091
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1095
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1101
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1107
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1114
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1121
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1126
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1131
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1136
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1143
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1150
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1161
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1172
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1178
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1182
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1186
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1204
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1208
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1214
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1218
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1224
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1228
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1234
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1238
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1244
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1248
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1254
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1264
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1269
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1274
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1278
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1302
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1311
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1337
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1343
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1349
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1354
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1359
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1364
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1369
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1374
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1392
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1397
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1403
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1409
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1413
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1419
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1423
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1427
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1433
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1437
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1442
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1446
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1451
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1457
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1463
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1468
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1473
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1494
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1498
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1502
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1506
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1510
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1521
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1528
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1532
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1554
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1562
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1575
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1579
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1583
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1764
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1768
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1772
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1778
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1782
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1786
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1792
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1796
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1803
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1807
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1811
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1815
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2043
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2052
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2057
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2061
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2069
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2073
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2079
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2087
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2091
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2095
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2100
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2104
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2125
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2151
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2160
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2175
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2184
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2190
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2194
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2200
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2204
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2209
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2213
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2217
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2221
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2225
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2229
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2235
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2245
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2249
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2253
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2257
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2261
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2284
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2300
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2304
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2319
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2329
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2333
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2339
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2343
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2349
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2353
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2359
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2363
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2369
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2375
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2379
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2383
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2387
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2391
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2400
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2406
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2412
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2418
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2422
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2426
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2431
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2435
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2441
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2447
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2453
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2457
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2461
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2465
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2469
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2488
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2492
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2497
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2501
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2506
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2510
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2516
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2524
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2530
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2540
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2544
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2548
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2552
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2556
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2560
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2564
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2568
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2572
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2576
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2580
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2584
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2588
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2592
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2604
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2608
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2612
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2616
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2620
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2624
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2628
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2632
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2636
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2640
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2644
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2648
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2652
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2656
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2660
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2665
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2715
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2724
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2729
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2733
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2738
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2742
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2746
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2755
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2759
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2763
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2767
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2771
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2777
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2781
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2785
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2791
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2795
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2799
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2803
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2807
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2811
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2815
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2819
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2823
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2827
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2832
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2837
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2841
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2845
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2849
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2853
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2857
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2861
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2865
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2869
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2873
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2877
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2881
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2885
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2889
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2893
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2897
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2901
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2905
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2909
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2915
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2919
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2925
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2929
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2933
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2937
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2941
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2945
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2949
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2953
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2957
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2961
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2967
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2974
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2981
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2988
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2994
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3004
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3011
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3018
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3030
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3040
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3048
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3061
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3086
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3093
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3100
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3120
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3129
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3137
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3144
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3155
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3164
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3172
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3181
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3188
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3200
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3209
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3224
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3229
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3233
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3238
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3242
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3248
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3254
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3260
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3264
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3270
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3274
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3280
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3286
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3292
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3298
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3304
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3308
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3312
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3316
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3322
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3328
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3334
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3338
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3342
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3348
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3352
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3357
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3361
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3366
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3370
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3376
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3380
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3384
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3388
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3392
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3396
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3400
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3404
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3408
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3412
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3416
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3420
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3424
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3428
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3432
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3436
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3440
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3444
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3448
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3452
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3456
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3460
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3465
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3469
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3473
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3480
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3490
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3495
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3499
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3504
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3509
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3514
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3519
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3524
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3530
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3536
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3541
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3547
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3553
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3557
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3563
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3568
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3572
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3577
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3582
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3587
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3592
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3598
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3604
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3611
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3618
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3625
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3633
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3637
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3643
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3649
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3655
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3661
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3667
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3673
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3685
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3701
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3707
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3711
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3717
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3721
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3734
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3740
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3744
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3749
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3755
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3759
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3763
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3775
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3783
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3791
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3815
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3847
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3851
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3855
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3863
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3883
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3887
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3919
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3934
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3938
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3974
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3978
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3994
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3998
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4002
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4012
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4016
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4026
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4032
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4036
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4070
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4074
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4086
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4090
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4095
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4100
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4102
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4118
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4122
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4126
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4130
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4134
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4138
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4158
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4162
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4175
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4203
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4215
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4219
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4225
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4231
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4235
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4239
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4243
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4249
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4255
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4261
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4265
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4269
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4273
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4277
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4281
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4291
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4297
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4301
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4305
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4309
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4317
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4325
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4329
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4346
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4350
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4359
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4363
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4368
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4372
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4378
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4382
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4392
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4396
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4414
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4418
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4422
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4428
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4432
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4444
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4453
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4459
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4463
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4468
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4472
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4477
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4485
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4489
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4493
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4503
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4507
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4519
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4529
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4533
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4539
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4543
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4547
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4551
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4556
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4564
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4571
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4576
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4580
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4586
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4592
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4596
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4606
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4610
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4614
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4618
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4624
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4628
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4634
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4638
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4647
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4653
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4657
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4663
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4667
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4673
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4677
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4681
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4685
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4691
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4695
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4708
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4712
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4716
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4720
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4726
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4728
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4732
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4738
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4740
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4743
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4745
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4748
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4752
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4756
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4763
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4769
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4773
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4777
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4783
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4789
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4793
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4797
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4801
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4807
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4811
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4821
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4825
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4835
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4850
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4856
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4860
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4866
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4870
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4874
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4878
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4883
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4887
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4891
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4895
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4905
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4912
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4916
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4920
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4924
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4928
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4936
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4940
		{
			yyLOCAL = &RLikeExpr{Expr: yyDollar[1].exprUnion(), Pattern: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4946
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4950
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4958
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4964
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4972
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4976
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4980
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4984
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4988
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4992
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4996
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5004
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5010
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5018
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5104
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5132
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5144
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5166
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5170
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5174
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5180
		{
			yyVAL.str = ""
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5184
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5190
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5194
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5201
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5205
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5209
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5213
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5219
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5223
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5227
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5231
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5235
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5239
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5243
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5249
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5253
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5257
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5264
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5270
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5274
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5306
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5310
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5314
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5380
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5384
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5388
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5392
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5396
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5408
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5428
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5432
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5436
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5440
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5444
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5448
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5452
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5456
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5460
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5484
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5488
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5492
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5496
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5504
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5508
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5512
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5524
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5528
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5544
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5555
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5572
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5576
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5580
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5597
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5601
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5605
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5609
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5615
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5619
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5628
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5634
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5638
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5644
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5648
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5654
		{
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5656
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5660
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5664
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5668
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5672
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5676
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5680
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5684
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5688
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5692
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5696
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5702
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5706
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5710
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5714
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5718
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5722
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5726
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5730
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5734
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5744
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5752
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5756
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5767
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5771
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5775
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5779
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5789
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5793
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5797
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5801
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5805
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5811
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5815
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5819
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5829
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5833
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5839
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5843
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5847
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5851
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5855
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5861
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5865
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5869
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5873
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5877
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5881
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5885
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5889
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5893
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5897
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5912
		{
			yyVAL.str = string("")
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5916
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5922
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5926
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5932
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5947
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5951
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5955
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5984
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6002
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6008
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6014
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6018
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6024
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6029
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6033
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6037
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6046
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6052
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6056
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6060
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6069
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6073
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6077
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6081
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6088
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6092
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6096
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6100
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6106
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6110
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6114
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6118
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6123
		{
			yyVAL.str = ""
		}
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6127
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6131
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6140
		{
			yyVAL.str = ""
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6144
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6150
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6154
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6159
		{
			yyVAL.str = ""
		}
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6163
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6168
		{
			yyVAL.str = "cascaded"
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6172
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6185
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6191
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6197
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6203
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6212
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6216
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6221
		{
			yyVAL.str = ""
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6225
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6231
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6235
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6241
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6245
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6249
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6254
		{
			yyVAL.str = ""
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6258
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6262
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6267
		{
			yyVAL.str = ""
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6271
		{
			yyVAL.str = " header"
		}
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6276
		{
			yyVAL.str = ""
		}
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6280
		{
			yyVAL.str = " manifest on"
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6284
		{
			yyVAL.str = " manifest off"
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6289
		{
			yyVAL.str = ""
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6293
		{
			yyVAL.str = " overwrite on"
		}
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6297
		{
			yyVAL.str = " overwrite off"
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6303
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6308
		{
			yyVAL.str = ""
		}
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6312
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6318
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6322
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6328
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6332
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6337
		{
			yyVAL.str = ""
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6341
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6347
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6351
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6357
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6361
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6365
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6370
		{
			yyVAL.str = ""
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6374
		{
			yyVAL.str = " optionally"
		}
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6387
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6391
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6395
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6399
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6403
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6409
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6413
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6417
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6421
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6430
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6436
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6440
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6446
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6450
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6456
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6471
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6475
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6481
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6487
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6491
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6497
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6501
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6505
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6509
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6513
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6521
		{
			yyVAL.str = "charset"
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6548
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6550
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6553
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6555
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6558
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6560
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6563
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6565
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6568
		{
			yyVAL.empty = struct{}{}
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6570
		{
			yyVAL.empty = struct{}{}
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6572
		{
			yyVAL.empty = struct{}{}
		}
	case 1319:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6576
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6581
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6585
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6592
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6596
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6602
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6606
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6613
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6619
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6623
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6629
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6633
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6640
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7169
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7178
		{
			decNesting(yylex)
		}
	case 1841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7183
		{
			skipToEnd(yylex)
		}
	case 1842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7188
		{
			skipToEnd(yylex)
		}
	case 1843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7192
		{
			skipToEnd(yylex)
		}
	case 1844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7196
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
