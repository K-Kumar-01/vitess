// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const WINDOW_EXPR = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const IN = 57492
const SHIFT_LEFT = 57493
const SHIFT_RIGHT = 57494
const DIV = 57495
const MOD = 57496
const UNARY = 57497
const COLLATE = 57498
const BINARY = 57499
const UNDERSCORE_ARMSCII8 = 57500
const UNDERSCORE_ASCII = 57501
const UNDERSCORE_BIG5 = 57502
const UNDERSCORE_BINARY = 57503
const UNDERSCORE_CP1250 = 57504
const UNDERSCORE_CP1251 = 57505
const UNDERSCORE_CP1256 = 57506
const UNDERSCORE_CP1257 = 57507
const UNDERSCORE_CP850 = 57508
const UNDERSCORE_CP852 = 57509
const UNDERSCORE_CP866 = 57510
const UNDERSCORE_CP932 = 57511
const UNDERSCORE_DEC8 = 57512
const UNDERSCORE_EUCJPMS = 57513
const UNDERSCORE_EUCKR = 57514
const UNDERSCORE_GB18030 = 57515
const UNDERSCORE_GB2312 = 57516
const UNDERSCORE_GBK = 57517
const UNDERSCORE_GEOSTD8 = 57518
const UNDERSCORE_GREEK = 57519
const UNDERSCORE_HEBREW = 57520
const UNDERSCORE_HP8 = 57521
const UNDERSCORE_KEYBCS2 = 57522
const UNDERSCORE_KOI8R = 57523
const UNDERSCORE_KOI8U = 57524
const UNDERSCORE_LATIN1 = 57525
const UNDERSCORE_LATIN2 = 57526
const UNDERSCORE_LATIN5 = 57527
const UNDERSCORE_LATIN7 = 57528
const UNDERSCORE_MACCE = 57529
const UNDERSCORE_MACROMAN = 57530
const UNDERSCORE_SJIS = 57531
const UNDERSCORE_SWE7 = 57532
const UNDERSCORE_TIS620 = 57533
const UNDERSCORE_UCS2 = 57534
const UNDERSCORE_UJIS = 57535
const UNDERSCORE_UTF16 = 57536
const UNDERSCORE_UTF16LE = 57537
const UNDERSCORE_UTF32 = 57538
const UNDERSCORE_UTF8 = 57539
const UNDERSCORE_UTF8MB4 = 57540
const INTERVAL = 57541
const JSON_EXTRACT_OP = 57542
const JSON_UNQUOTE_EXTRACT_OP = 57543
const CREATE = 57544
const ALTER = 57545
const DROP = 57546
const RENAME = 57547
const ANALYZE = 57548
const ADD = 57549
const FLUSH = 57550
const CHANGE = 57551
const MODIFY = 57552
const DEALLOCATE = 57553
const REVERT = 57554
const SCHEMA = 57555
const TABLE = 57556
const INDEX = 57557
const VIEW = 57558
const TO = 57559
const IGNORE = 57560
const IF = 57561
const PRIMARY = 57562
const COLUMN = 57563
const SPATIAL = 57564
const FULLTEXT = 57565
const KEY_BLOCK_SIZE = 57566
const CHECK = 57567
const INDEXES = 57568
const ACTION = 57569
const CASCADE = 57570
const CONSTRAINT = 57571
const FOREIGN = 57572
const NO = 57573
const REFERENCES = 57574
const RESTRICT = 57575
const SHOW = 57576
const DESCRIBE = 57577
const EXPLAIN = 57578
const DATE = 57579
const ESCAPE = 57580
const REPAIR = 57581
const OPTIMIZE = 57582
const TRUNCATE = 57583
const COALESCE = 57584
const EXCHANGE = 57585
const REBUILD = 57586
const PARTITIONING = 57587
const REMOVE = 57588
const PREPARE = 57589
const EXECUTE = 57590
const MAXVALUE = 57591
const PARTITION = 57592
const REORGANIZE = 57593
const LESS = 57594
const THAN = 57595
const PROCEDURE = 57596
const TRIGGER = 57597
const VINDEX = 57598
const VINDEXES = 57599
const DIRECTORY = 57600
const NAME = 57601
const UPGRADE = 57602
const STATUS = 57603
const VARIABLES = 57604
const WARNINGS = 57605
const CASCADED = 57606
const DEFINER = 57607
const OPTION = 57608
const SQL = 57609
const UNDEFINED = 57610
const SEQUENCE = 57611
const MERGE = 57612
const TEMPORARY = 57613
const TEMPTABLE = 57614
const INVOKER = 57615
const SECURITY = 57616
const FIRST = 57617
const AFTER = 57618
const LAST = 57619
const VITESS_MIGRATION = 57620
const CANCEL = 57621
const RETRY = 57622
const COMPLETE = 57623
const CLEANUP = 57624
const BEGIN = 57625
const START = 57626
const TRANSACTION = 57627
const COMMIT = 57628
const ROLLBACK = 57629
const SAVEPOINT = 57630
const RELEASE = 57631
const WORK = 57632
const BIT = 57633
const TINYINT = 57634
const SMALLINT = 57635
const MEDIUMINT = 57636
const INT = 57637
const INTEGER = 57638
const BIGINT = 57639
const INTNUM = 57640
const REAL = 57641
const DOUBLE = 57642
const FLOAT_TYPE = 57643
const DECIMAL_TYPE = 57644
const NUMERIC = 57645
const TIME = 57646
const TIMESTAMP = 57647
const DATETIME = 57648
const YEAR = 57649
const CHAR = 57650
const VARCHAR = 57651
const BOOL = 57652
const CHARACTER = 57653
const VARBINARY = 57654
const NCHAR = 57655
const TEXT = 57656
const TINYTEXT = 57657
const MEDIUMTEXT = 57658
const LONGTEXT = 57659
const BLOB = 57660
const TINYBLOB = 57661
const MEDIUMBLOB = 57662
const LONGBLOB = 57663
const JSON = 57664
const JSON_SCHEMA_VALID = 57665
const JSON_SCHEMA_VALIDATION_REPORT = 57666
const ENUM = 57667
const GEOMETRY = 57668
const POINT = 57669
const LINESTRING = 57670
const POLYGON = 57671
const GEOMETRYCOLLECTION = 57672
const MULTIPOINT = 57673
const MULTILINESTRING = 57674
const MULTIPOLYGON = 57675
const ASCII = 57676
const UNICODE = 57677
const NULLX = 57678
const AUTO_INCREMENT = 57679
const APPROXNUM = 57680
const SIGNED = 57681
const UNSIGNED = 57682
const ZEROFILL = 57683
const CODE = 57684
const COLLATION = 57685
const COLUMNS = 57686
const DATABASES = 57687
const ENGINES = 57688
const EVENT = 57689
const EXTENDED = 57690
const FIELDS = 57691
const FULL = 57692
const FUNCTION = 57693
const GTID_EXECUTED = 57694
const KEYSPACES = 57695
const OPEN = 57696
const PLUGINS = 57697
const PRIVILEGES = 57698
const PROCESSLIST = 57699
const SCHEMAS = 57700
const TABLES = 57701
const TRIGGERS = 57702
const USER = 57703
const VGTID_EXECUTED = 57704
const VITESS_KEYSPACES = 57705
const VITESS_METADATA = 57706
const VITESS_MIGRATIONS = 57707
const VITESS_REPLICATION_STATUS = 57708
const VITESS_SHARDS = 57709
const VITESS_TABLETS = 57710
const VITESS_TARGET = 57711
const VSCHEMA = 57712
const NAMES = 57713
const GLOBAL = 57714
const SESSION = 57715
const ISOLATION = 57716
const LEVEL = 57717
const READ = 57718
const WRITE = 57719
const ONLY = 57720
const REPEATABLE = 57721
const COMMITTED = 57722
const UNCOMMITTED = 57723
const SERIALIZABLE = 57724
const CURRENT_TIMESTAMP = 57725
const DATABASE = 57726
const CURRENT_DATE = 57727
const NOW = 57728
const CURRENT_TIME = 57729
const LOCALTIME = 57730
const LOCALTIMESTAMP = 57731
const CURRENT_USER = 57732
const UTC_DATE = 57733
const UTC_TIME = 57734
const UTC_TIMESTAMP = 57735
const DAY = 57736
const DAY_HOUR = 57737
const DAY_MICROSECOND = 57738
const DAY_MINUTE = 57739
const DAY_SECOND = 57740
const HOUR = 57741
const HOUR_MICROSECOND = 57742
const HOUR_MINUTE = 57743
const HOUR_SECOND = 57744
const MICROSECOND = 57745
const MINUTE = 57746
const MINUTE_MICROSECOND = 57747
const MINUTE_SECOND = 57748
const MONTH = 57749
const QUARTER = 57750
const SECOND = 57751
const SECOND_MICROSECOND = 57752
const YEAR_MONTH = 57753
const WEEK = 57754
const REPLACE = 57755
const CONVERT = 57756
const CAST = 57757
const SUBSTR = 57758
const SUBSTRING = 57759
const GROUP_CONCAT = 57760
const SEPARATOR = 57761
const TIMESTAMPADD = 57762
const TIMESTAMPDIFF = 57763
const WEIGHT_STRING = 57764
const LTRIM = 57765
const RTRIM = 57766
const TRIM = 57767
const JSON_ARRAY = 57768
const JSON_OBJECT = 57769
const JSON_QUOTE = 57770
const JSON_DEPTH = 57771
const JSON_TYPE = 57772
const JSON_LENGTH = 57773
const JSON_VALID = 57774
const JSON_ARRAY_APPEND = 57775
const JSON_ARRAY_INSERT = 57776
const JSON_INSERT = 57777
const JSON_MERGE = 57778
const JSON_MERGE_PATCH = 57779
const JSON_MERGE_PRESERVE = 57780
const JSON_REMOVE = 57781
const JSON_REPLACE = 57782
const JSON_SET = 57783
const JSON_UNQUOTE = 57784
const MATCH = 57785
const AGAINST = 57786
const BOOLEAN = 57787
const LANGUAGE = 57788
const WITH = 57789
const QUERY = 57790
const EXPANSION = 57791
const WITHOUT = 57792
const VALIDATION = 57793
const UNUSED = 57794
const ARRAY = 57795
const CUME_DIST = 57796
const DESCRIPTION = 57797
const DENSE_RANK = 57798
const EMPTY = 57799
const EXCEPT = 57800
const FIRST_VALUE = 57801
const GROUPING = 57802
const GROUPS = 57803
const JSON_TABLE = 57804
const LAG = 57805
const LAST_VALUE = 57806
const LATERAL = 57807
const LEAD = 57808
const NTH_VALUE = 57809
const NTILE = 57810
const OF = 57811
const OVER = 57812
const PERCENT_RANK = 57813
const RANK = 57814
const RECURSIVE = 57815
const ROW_NUMBER = 57816
const SYSTEM = 57817
const WINDOW = 57818
const ACTIVE = 57819
const ADMIN = 57820
const BUCKETS = 57821
const CLONE = 57822
const COMPONENT = 57823
const DEFINITION = 57824
const ENFORCED = 57825
const EXCLUDE = 57826
const FOLLOWING = 57827
const GEOMCOLLECTION = 57828
const GET_MASTER_PUBLIC_KEY = 57829
const HISTOGRAM = 57830
const HISTORY = 57831
const INACTIVE = 57832
const INVISIBLE = 57833
const LOCKED = 57834
const MASTER_COMPRESSION_ALGORITHMS = 57835
const MASTER_PUBLIC_KEY_PATH = 57836
const MASTER_TLS_CIPHERSUITES = 57837
const MASTER_ZSTD_COMPRESSION_LEVEL = 57838
const NESTED = 57839
const NETWORK_NAMESPACE = 57840
const NOWAIT = 57841
const NULLS = 57842
const OJ = 57843
const OLD = 57844
const OPTIONAL = 57845
const ORDINALITY = 57846
const ORGANIZATION = 57847
const OTHERS = 57848
const PATH = 57849
const PERSIST = 57850
const PERSIST_ONLY = 57851
const PRECEDING = 57852
const PRIVILEGE_CHECKS_USER = 57853
const PROCESS = 57854
const RANDOM = 57855
const REFERENCE = 57856
const REQUIRE_ROW_FORMAT = 57857
const RESOURCE = 57858
const RESPECT = 57859
const RESTART = 57860
const RETAIN = 57861
const REUSE = 57862
const ROLE = 57863
const SECONDARY = 57864
const SECONDARY_ENGINE = 57865
const SECONDARY_LOAD = 57866
const SECONDARY_UNLOAD = 57867
const SKIP = 57868
const SRID = 57869
const THREAD_PRIORITY = 57870
const TIES = 57871
const UNBOUNDED = 57872
const VCPU = 57873
const VISIBLE = 57874
const FORMAT = 57875
const TREE = 57876
const VITESS = 57877
const TRADITIONAL = 57878
const LOCAL = 57879
const LOW_PRIORITY = 57880
const NO_WRITE_TO_BINLOG = 57881
const LOGS = 57882
const ERROR = 57883
const GENERAL = 57884
const HOSTS = 57885
const OPTIMIZER_COSTS = 57886
const USER_RESOURCES = 57887
const SLOW = 57888
const CHANNEL = 57889
const RELAY = 57890
const EXPORT = 57891
const CURRENT = 57892
const ROW = 57893
const ROWS = 57894
const AVG_ROW_LENGTH = 57895
const CONNECTION = 57896
const CHECKSUM = 57897
const DELAY_KEY_WRITE = 57898
const ENCRYPTION = 57899
const ENGINE = 57900
const INSERT_METHOD = 57901
const MAX_ROWS = 57902
const MIN_ROWS = 57903
const PACK_KEYS = 57904
const PASSWORD = 57905
const FIXED = 57906
const DYNAMIC = 57907
const COMPRESSED = 57908
const REDUNDANT = 57909
const COMPACT = 57910
const ROW_FORMAT = 57911
const STATS_AUTO_RECALC = 57912
const STATS_PERSISTENT = 57913
const STATS_SAMPLE_PAGES = 57914
const STORAGE = 57915
const MEMORY = 57916
const DISK = 57917
const PARTITIONS = 57918
const LINEAR = 57919
const RANGE = 57920
const LIST = 57921
const SUBPARTITION = 57922
const SUBPARTITIONS = 57923
const HASH = 57924

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"WINDOW_EXPR",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	600, 145,
	-2, 151,
	-1, 48,
	131, 151,
	172, 151,
	328, 151,
	-2, 455,
	-1, 55,
	35, 670,
	232, 670,
	243, 670,
	278, 684,
	279, 684,
	-2, 672,
	-1, 60,
	234, 697,
	-2, 695,
	-1, 114,
	231, 1276,
	-2, 119,
	-1, 116,
	1, 146,
	600, 146,
	-2, 151,
	-1, 126,
	132, 358,
	237, 358,
	-2, 449,
	-1, 145,
	131, 151,
	172, 151,
	328, 151,
	-2, 464,
	-1, 691,
	216, 1297,
	-2, 1293,
	-1, 692,
	216, 1298,
	-2, 1294,
	-1, 767,
	59, 765,
	-2, 780,
	-1, 804,
	148, 1698,
	-2, 112,
	-1, 805,
	148, 1544,
	-2, 113,
	-1, 811,
	148, 1627,
	-2, 1270,
	-1, 961,
	148, 1474,
	-2, 1267,
	-1, 999,
	242, 41,
	247, 41,
	-2, 369,
	-1, 1076,
	1, 503,
	600, 503,
	-2, 151,
	-1, 1319,
	59, 766,
	-2, 785,
	-1, 1320,
	59, 767,
	-2, 786,
	-1, 1373,
	131, 151,
	172, 151,
	328, 151,
	-2, 399,
	-1, 1450,
	132, 358,
	237, 358,
	-2, 449,
	-1, 1459,
	242, 42,
	247, 42,
	-2, 370,
	-1, 1765,
	216, 1302,
	-2, 1296,
	-1, 1849,
	131, 151,
	172, 151,
	328, 151,
	-2, 400,
	-1, 1856,
	25, 170,
	-2, 172,
	-1, 2099,
	86, 39,
	-2, 822,
	-1, 2151,
	77, 94,
	86, 94,
	-2, 842,
	-1, 2215,
	575, 598,
	-2, 585,
	-1, 2365,
	49, 1237,
	-2, 1231,
	-1, 2586,
	86, 39,
	-2, 823,
	-1, 2624,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 814,
	-1, 2978,
	22, 1629,
	32, 1629,
	173, 1629,
	254, 1629,
	308, 1629,
	309, 1629,
	310, 1629,
	311, 1629,
	312, 1629,
	313, 1629,
	314, 1629,
	316, 1629,
	317, 1629,
	318, 1629,
	319, 1629,
	320, 1629,
	321, 1629,
	322, 1629,
	323, 1629,
	324, 1629,
	325, 1629,
	326, 1629,
	327, 1629,
	329, 1629,
	331, 1629,
	332, 1629,
	333, 1629,
	334, 1629,
	335, 1629,
	336, 1629,
	337, 1629,
	338, 1629,
	339, 1629,
	342, 1629,
	343, 1629,
	344, 1629,
	345, 1629,
	346, 1629,
	347, 1629,
	348, 1629,
	349, 1629,
	350, 1629,
	462, 1629,
	-2, 543,
}

const yyPrivate = 57344

const yyLast = 44048

var yyAct = [...]int{
	691, 2307, 3032, 3051, 700, 3050, 2887, 3026, 1846, 2976,
	2565, 2980, 2691, 2935, 1376, 2916, 2503, 2951, 1800, 2418,
	2425, 693, 2871, 2827, 2043, 1780, 2459, 3, 1139, 2376,
	2869, 1782, 2063, 2735, 2859, 2087, 2845, 2486, 782, 1909,
	2379, 760, 1029, 2427, 675, 37, 2485, 2380, 595, 676,
	2717, 182, 2377, 2567, 182, 1334, 560, 182, 2305, 2122,
	2589, 592, 575, 2595, 182, 2740, 1297, 2306, 694, 2326,
	673, 621, 182, 2488, 2615, 2374, 1819, 2366, 2114, 2576,
	2581, 2145, 1879, 1088, 1430, 593, 2183, 182, 2252, 591,
	1804, 2212, 1899, 674, 2184, 1884, 2185, 964, 1835, 809,
	599, 2134, 783, 762, 36, 1321, 1824, 38, 2106, 575,
	2089, 1823, 575, 182, 575, 1759, 1658, 154, 1728, 1918,
	140, 1668, 764, 1898, 768, 1007, 1727, 1951, 1886, 1473,
	1616, 2269, 2177, 994, 587, 989, 1365, 806, 1343, 2153,
	95, 96, 785, 604, 91, 1826, 1301, 1565, 1224, 1160,
	1680, 1457, 1635, 1561, 971, 1464, 997, 1896, 968, 1547,
	972, 1000, 1811, 1875, 995, 996, 1364, 1131, 1362, 774,
	1348, 1805, 1724, 117, 1570, 1425, 118, 123, 1137, 1449,
	124, 796, 98, 1072, 769, 1031, 1117, 770, 772, 97,
	157, 76, 582, 2896, 85, 1772, 1231, 1227, 1045, 1046,
	2205, 1049, 1050, 1051, 1052, 89, 3033, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 2456, 102, 790, 2848, 795, 532, 125, 1911,
	1912, 1913, 90, 1911, 2203, 776, 1762, 2477, 119, 2231,
	2230, 1949, 8, 1161, 7, 965, 771, 77, 6, 2674,
	2474, 2849, 87, 1011, 2966, 2260, 2261, 87, 583, 3054,
	87, 1533, 3060, 1034, 104, 105, 761, 108, 1161, 763,
	114, 178, 3061, 179, 1638, 1623, 527, 803, 1622, 1042,
	810, 1621, 1777, 1778, 1010, 1620, 1619, 777, 1618, 1601,
	986, 987, 784, 985, 2475, 120, 756, 757, 758, 759,
	1610, 2085, 767, 1035, 1036, 1037, 2362, 119, 162, 2330,
	184, 185, 186, 585, 2995, 586, 2481, 980, 975, 2116,
	3047, 178, 3008, 3023, 2968, 1177, 2571, 2570, 2650, 1047,
	798, 799, 2442, 2872, 2064, 1628, 2823, 2822, 2684, 78,
	1033, 2685, 78, 3053, 1032, 120, 3061, 142, 1171, 2967,
	2167, 3046, 2961, 78, 1989, 178, 80, 1891, 162, 3036,
	2913, 3019, 2692, 2125, 2952, 159, 1937, 160, 2960, 2268,
	2537, 119, 2912, 1171, 1439, 1193, 78, 2162, 2239, 120,
	2161, 1889, 2238, 2163, 1366, 1710, 1367, 177, 2126, 152,
	2086, 2753, 162, 979, 141, 2414, 981, 2832, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1202, 1201, 1203, 1204, 2415,
	2416, 1841, 1842, 2259, 1986, 159, 87, 160, 1987, 87,
	1124, 1840, 1126, 1107, 754, 2478, 1095, 1112, 1113, 1134,
	87, 1096, 753, 129, 130, 151, 150, 177, 2901, 1094,
	1095, 1093, 2206, 1167, 1779, 1096, 1159, 2888, 2174, 159,
	2592, 160, 2295, 87, 1859, 1858, 1174, 2528, 1175, 1176,
	1123, 1125, 1108, 1101, 2505, 2526, 573, 564, 1167, 1609,
	564, 177, 1702, 1691, 1692, 1693, 1694, 1704, 1695, 1696,
	1697, 1709, 1705, 1698, 1699, 1706, 1707, 1708, 1700, 1701,
	1703, 984, 984, 976, 1081, 1082, 163, 1071, 564, 577,
	978, 977, 571, 564, 1305, 168, 1553, 2852, 1048, 2853,
	2213, 988, 1611, 1612, 1613, 1919, 2234, 1952, 1114, 3035,
	1548, 1888, 1963, 1960, 1962, 1961, 1084, 182, 1115, 182,
	1128, 1133, 182, 2270, 146, 127, 153, 134, 126, 1523,
	147, 148, 1957, 1109, 1102, 2506, 163, 2247, 1116, 982,
	982, 2498, 1077, 1121, 2507, 168, 135, 1122, 1075, 2499,
	2676, 575, 1141, 575, 575, 1110, 1111, 1127, 2675, 1968,
	138, 136, 131, 132, 133, 137, 1054, 1053, 575, 575,
	163, 1956, 128, 1524, 1018, 1525, 1954, 2996, 2810, 168,
	1120, 139, 1965, 2672, 1966, 1922, 1967, 1958, 1987, 1308,
	2568, 990, 1016, 1442, 2296, 991, 3041, 1153, 2329, 1820,
	991, 1027, 2431, 1026, 2272, 1009, 1025, 1091, 155, 1097,
	1098, 1099, 1100, 1955, 37, 1024, 1023, 1166, 1163, 1164,
	1165, 1170, 1172, 1169, 3017, 1168, 1022, 1021, 1020, 1028,
	1015, 1135, 1136, 1205, 1205, 1162, 3030, 969, 969, 1002,
	1105, 967, 1166, 1163, 1164, 1165, 1170, 1172, 1169, 2895,
	1168, 1463, 983, 983, 565, 1562, 2204, 565, 155, 969,
	1162, 2248, 1897, 797, 1003, 1943, 2282, 2281, 2280, 2274,
	1558, 2278, 1147, 2273, 1038, 2271, 1208, 1209, 1210, 1211,
	2276, 2449, 2441, 1009, 1437, 565, 1216, 2236, 1219, 2275,
	565, 2233, 155, 2833, 2671, 2090, 2092, 1436, 984, 1070,
	1554, 2884, 1435, 2631, 1008, 2223, 2277, 2279, 2207, 1012,
	1002, 1559, 1433, 1806, 1807, 531, 2264, 2001, 1019, 1013,
	2593, 526, 1206, 1207, 2246, 703, 2611, 2245, 2158, 1129,
	703, 1143, 1144, 703, 1890, 149, 1017, 1295, 2251, 1014,
	1212, 2121, 1939, 2076, 182, 1771, 1352, 2254, 575, 575,
	1276, 2911, 2253, 1552, 1086, 1044, 1462, 116, 1847, 1205,
	2479, 2480, 1204, 1074, 182, 81, 2413, 779, 143, 1142,
	1132, 144, 2907, 2482, 1030, 2667, 3052, 2605, 1953, 111,
	1555, 1368, 1008, 575, 1157, 86, 1988, 182, 86, 1309,
	1118, 1290, 575, 2288, 1681, 1312, 1311, 1296, 575, 86,
	1315, 1535, 1534, 1536, 1537, 1538, 764, 1571, 1229, 2196,
	1230, 1233, 1156, 2965, 1154, 1681, 77, 2015, 1155, 1090,
	806, 3000, 86, 1009, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 1083, 1080, 1104, 2964, 1176,
	173, 174, 175, 176, 1092, 1009, 1175, 1176, 1106, 3028,
	112, 2749, 3029, 2642, 3027, 1073, 2091, 1313, 1314, 2641,
	1296, 95, 96, 1009, 1282, 1283, 1284, 1285, 1286, 983,
	1009, 1640, 1926, 1472, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 1641, 1642, 1639, 1471, 1302,
	173, 174, 175, 176, 1461, 1936, 1549, 2254, 1550, 3013,
	1934, 1551, 2253, 98, 1931, 1018, 1016, 2632, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 184,
	185, 186, 1008, 1660, 173, 174, 175, 176, 1002, 1005,
	1006, 1938, 969, 1353, 1119, 1299, 999, 1003, 1076, 3044,
	1177, 1935, 2986, 761, 1008, 1931, 1310, 2937, 2818, 1012,
	1002, 1572, 1333, 763, 182, 1330, 2984, 998, 1426, 1013,
	1089, 1177, 1008, 810, 1043, 2988, 2989, 1434, 1542, 1008,
	1358, 1359, 2817, 2429, 2430, 1002, 1005, 1006, 3014, 969,
	1316, 2985, 1933, 999, 1003, 2877, 3042, 1363, 575, 2938,
	1459, 1199, 1200, 1202, 1201, 1203, 1204, 1540, 1468, 1993,
	1994, 1995, 1470, 2904, 1661, 575, 575, 2808, 575, 2707,
	575, 575, 1193, 575, 575, 575, 575, 575, 575, 1328,
	1440, 1441, 2843, 1328, 1177, 1530, 1685, 2878, 575, 2706,
	1686, 1541, 182, 1506, 2649, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1202, 1201, 1203, 1204, 1177, 2648, 182, 1195,
	1196, 1197, 1198, 1199, 1200, 1202, 1201, 1203, 1204, 575,
	1539, 182, 1197, 1198, 1199, 1200, 1202, 1201, 1203, 1204,
	3043, 1174, 1560, 1175, 1176, 575, 2457, 182, 2428, 1519,
	1509, 1510, 706, 707, 708, 1455, 1515, 1516, 1529, 2447,
	2431, 2181, 1174, 182, 1175, 1176, 801, 184, 185, 186,
	182, 1469, 2290, 2338, 1448, 2180, 2532, 1328, 1894, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 575, 1543,
	1528, 1465, 1465, 1527, 701, 1503, 1501, 1502, 2071, 1328,
	1526, 1177, 575, 575, 1517, 1475, 1328, 1476, 1511, 1478,
	1480, 1508, 1507, 1484, 1486, 1488, 1490, 1492, 1432, 1467,
	182, 1482, 1466, 2903, 2881, 1174, 2880, 1175, 1176, 2879,
	1446, 2813, 1445, 1444, 2748, 1458, 1181, 1182, 1183, 1184,
	1185, 1186, 1187, 1179, 1177, 1575, 1567, 1174, 2746, 1175,
	1176, 2703, 1579, 2646, 1581, 1582, 1583, 1584, 184, 185,
	186, 1588, 2639, 2638, 1438, 2024, 1659, 1177, 1662, 1666,
	1504, 1665, 1665, 1600, 1177, 2502, 1193, 2190, 2263, 1671,
	575, 2178, 1337, 2052, 1328, 1292, 1947, 1946, 1663, 1663,
	1812, 1813, 2534, 1803, 1785, 575, 575, 1563, 1636, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1202, 1201, 1203, 1204,
	986, 1602, 1643, 985, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 119, 1568, 1531,
	1634, 1338, 1174, 1755, 1175, 1176, 1518, 1644, 1577, 1514,
	1573, 1574, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202,
	1201, 1203, 1204, 1513, 1578, 2154, 1599, 1328, 1512, 1339,
	1177, 1585, 1586, 1587, 182, 1763, 1598, 1130, 1146, 575,
	2032, 2112, 3034, 1725, 1177, 1174, 94, 1175, 1176, 2840,
	1606, 1607, 2839, 92, 2011, 3004, 1328, 1682, 92, 1630,
	1632, 1633, 1637, 182, 93, 94, 575, 2802, 1174, 93,
	1175, 1176, 2421, 2112, 2958, 1174, 182, 1175, 1176, 2801,
	575, 1790, 2690, 1791, 1631, 182, 2214, 182, 2155, 182,
	182, 575, 2112, 2945, 575, 1774, 1756, 2157, 184, 185,
	186, 1725, 2165, 101, 1328, 575, 1765, 1193, 2123, 2000,
	2375, 1763, 2108, 1328, 100, 1856, 99, 2422, 1328, 806,
	2604, 1177, 806, 1328, 1767, 1768, 2010, 94, 95, 96,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1201, 1203,
	1204, 1177, 2424, 184, 185, 186, 1177, 1907, 95, 96,
	2604, 184, 185, 186, 1764, 1905, 2419, 1796, 1341, 2154,
	575, 1174, 1177, 1175, 1176, 2193, 1900, 1901, 1902, 1855,
	1822, 1904, 1906, 2429, 2430, 1174, 3005, 1175, 1176, 2131,
	1667, 2420, 1765, 1328, 2002, 575, 1397, 1673, 1674, 2112,
	2941, 575, 1468, 2928, 1328, 1468, 1860, 1468, 1861, 1862,
	1863, 1864, 1851, 1930, 3015, 776, 2606, 1784, 1865, 1866,
	1867, 1868, 1173, 2426, 1871, 1872, 1873, 1874, 2408, 2006,
	1833, 1850, 2155, 1340, 1920, 2112, 2897, 1987, 2005, 2933,
	1817, 1987, 1798, 575, 2906, 1659, 1177, 1881, 1854, 2123,
	1659, 1659, 1177, 1327, 1766, 2892, 1177, 1769, 1770, 692,
	1815, 1887, 1174, 2112, 1175, 1176, 2682, 2894, 1838, 1837,
	1177, 2131, 810, 2551, 1328, 810, 184, 185, 186, 1853,
	1852, 1177, 1174, 100, 1175, 1176, 182, 1174, 2428, 1175,
	1176, 2130, 1917, 182, 1177, 1795, 2112, 2809, 182, 182,
	2431, 1177, 182, 1174, 182, 1175, 1176, 1177, 2682, 1328,
	183, 182, 1177, 183, 2112, 2680, 183, 1177, 182, 1011,
	2604, 576, 2577, 183, 1882, 1877, 1878, 1177, 2044, 1465,
	1892, 183, 1895, 1893, 87, 1328, 1903, 1385, 2992, 2806,
	1940, 1931, 1328, 1932, 182, 2131, 183, 2609, 1328, 575,
	1010, 2002, 2626, 1925, 2551, 1924, 1928, 1882, 1929, 1927,
	1923, 1942, 2437, 1941, 2668, 2350, 1944, 1945, 576, 1173,
	1328, 576, 183, 576, 2037, 1328, 2553, 1174, 1839, 1175,
	1176, 2439, 2438, 1174, 2182, 1175, 1176, 1174, 1177, 1175,
	1176, 2435, 2436, 2002, 2549, 2435, 2434, 1978, 1979, 2540,
	1931, 1174, 1981, 1175, 1176, 2423, 2131, 1328, 2037, 2539,
	1177, 1982, 1174, 2021, 1175, 1176, 1950, 2020, 1398, 1931,
	184, 185, 186, 1177, 1914, 1174, 2334, 1175, 1176, 1636,
	2002, 1328, 1174, 1177, 1175, 1176, 1987, 2232, 1174, 1810,
	1175, 1176, 1997, 1174, 1999, 1175, 1176, 701, 1174, 1332,
	1175, 1176, 1177, 1971, 1429, 2217, 2210, 2211, 1174, 1775,
	1175, 1176, 1614, 1177, 2112, 2111, 1557, 1998, 1177, 1360,
	2069, 993, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 992,
	1420, 1421, 1422, 1423, 1424, 1399, 1400, 1401, 1402, 1383,
	1384, 1412, 2061, 1386, 1177, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1985, 2060, 1396, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 2059, 182, 2948, 1177, 1174,
	2829, 1175, 1176, 1637, 182, 1429, 1428, 2651, 2096, 575,
	1497, 1665, 1996, 766, 2058, 575, 1374, 1373, 1335, 2799,
	2082, 1174, 2760, 1175, 1176, 2057, 575, 2100, 1663, 101,
	2056, 2666, 2663, 2644, 1174, 2094, 1175, 1176, 2543, 2542,
	100, 1431, 99, 1880, 1174, 2500, 1175, 1176, 2462, 182,
	2014, 94, 2458, 182, 2218, 1177, 2055, 2652, 2653, 2654,
	1498, 1499, 1500, 1174, 2186, 1175, 1176, 2127, 2164, 184,
	185, 186, 1876, 1870, 1174, 1754, 1175, 1176, 1869, 1174,
	2054, 1175, 1176, 1545, 37, 1460, 2030, 1456, 1177, 1427,
	87, 1765, 113, 2147, 2460, 2187, 701, 2655, 1177, 1075,
	2616, 2617, 1177, 2504, 2830, 1174, 1413, 1175, 1176, 1328,
	1891, 2187, 575, 1788, 2113, 3059, 3057, 182, 1177, 1604,
	3010, 2981, 2109, 2619, 182, 1177, 2454, 2622, 2453, 1174,
	1177, 1175, 1176, 2012, 2452, 2375, 575, 2053, 2197, 1764,
	1972, 1302, 2084, 575, 2656, 2657, 2621, 1468, 1468, 2394,
	2998, 2189, 575, 2146, 2209, 2136, 2139, 2140, 2141, 2137,
	2105, 2138, 2142, 2110, 2229, 2616, 2617, 1494, 2393, 2120,
	2047, 2228, 2175, 2176, 2959, 182, 182, 182, 182, 182,
	2046, 1605, 1177, 2152, 2045, 2397, 1174, 2168, 1175, 1176,
	2398, 1802, 182, 182, 2156, 1336, 2159, 1177, 1887, 1794,
	2042, 2395, 2610, 2004, 2166, 2169, 2396, 2041, 182, 2355,
	2354, 2876, 2040, 2739, 1495, 1496, 2597, 2073, 2074, 1174,
	2741, 1175, 1176, 2179, 2596, 2600, 2730, 1659, 2729, 1174,
	780, 1175, 1176, 1174, 2188, 1175, 1176, 2399, 781, 2140,
	2141, 2367, 2369, 2194, 2198, 2199, 2200, 2364, 1556, 1174,
	2370, 1175, 1176, 2227, 2433, 1448, 1174, 1177, 1175, 1176,
	752, 1174, 2172, 1175, 1176, 2191, 183, 1665, 183, 1665,
	1040, 183, 1665, 1677, 2287, 1039, 2728, 1665, 2514, 2038,
	2226, 2186, 2225, 2257, 1663, 575, 1663, 1678, 1145, 1663,
	2335, 2224, 2339, 1177, 1663, 92, 120, 575, 2219, 2220,
	576, 92, 576, 576, 2602, 94, 93, 2266, 94, 3039,
	2265, 2450, 93, 1174, 575, 1175, 1176, 576, 576, 2331,
	2332, 2333, 2249, 2310, 1975, 2344, 1812, 1813, 1174, 182,
	1175, 1176, 2973, 575, 2893, 2313, 2825, 2432, 2144, 2034,
	2314, 1799, 575, 2284, 2267, 2320, 2321, 2322, 2323, 575,
	575, 1964, 182, 182, 182, 182, 182, 2283, 788, 789,
	2337, 2582, 1991, 2308, 182, 2308, 99, 2864, 2308, 182,
	2344, 2863, 182, 2308, 182, 2033, 2301, 182, 182, 182,
	2387, 2372, 2747, 2336, 2255, 2340, 2357, 2256, 1174, 2745,
	1175, 1176, 2744, 768, 101, 2737, 2381, 2407, 2353, 2716,
	2315, 2316, 2317, 2318, 2319, 100, 2352, 99, 2664, 101,
	2358, 2343, 2448, 1315, 2147, 2601, 94, 2599, 182, 2345,
	100, 101, 99, 2463, 1174, 1915, 1175, 1176, 1443, 787,
	100, 575, 100, 2736, 2356, 2359, 2346, 2347, 2348, 575,
	2590, 2123, 2720, 2349, 182, 2108, 2378, 3012, 3011, 2445,
	2446, 2378, 2297, 769, 182, 2409, 770, 2484, 2410, 2389,
	2390, 2022, 2392, 2388, 2400, 1786, 2391, 1354, 1345, 182,
	95, 96, 182, 2404, 2405, 3012, 2411, 2882, 1567, 2386,
	1326, 1322, 2515, 2136, 2139, 2140, 2141, 2137, 2637, 2138,
	2142, 106, 107, 183, 778, 1323, 103, 576, 576, 88,
	2444, 2443, 1, 1329, 1331, 2417, 2983, 544, 1776, 1300,
	1326, 1322, 2979, 183, 1532, 1522, 2492, 2693, 1726, 2826,
	1792, 1793, 1325, 2468, 1324, 1323, 2466, 1921, 2464, 2662,
	1887, 1885, 576, 2483, 2465, 1001, 183, 145, 2495, 2491,
	1848, 576, 1849, 2954, 110, 575, 962, 576, 2548, 109,
	1319, 1320, 1325, 2473, 1324, 1004, 1103, 2510, 2509, 2512,
	2513, 1916, 2683, 2173, 1857, 2470, 2469, 2467, 1380, 1378,
	2518, 575, 182, 2517, 1379, 2521, 2522, 2524, 2523, 2569,
	1193, 2525, 1377, 2527, 1189, 2529, 1190, 1382, 1381, 2023,
	2575, 1608, 572, 2143, 180, 1369, 1346, 1041, 534, 2440,
	1191, 1192, 1188, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1202, 1201, 1203, 1204, 1948, 540, 1217, 1603, 2351, 2160,
	807, 800, 1787, 2098, 2383, 2594, 2363, 2365, 2115, 182,
	2368, 2361, 2875, 2738, 2946, 2170, 2588, 1342, 2013, 2578,
	2579, 1679, 1827, 1629, 597, 596, 594, 2640, 2583, 2584,
	2101, 2124, 182, 1180, 695, 2088, 1355, 2135, 2133, 2132,
	2591, 1973, 1834, 2598, 2618, 2614, 3049, 2613, 2975, 1829,
	182, 1825, 2603, 182, 182, 182, 2107, 2623, 605, 598,
	590, 2634, 2490, 575, 575, 2235, 2620, 2501, 2237, 2629,
	2630, 2171, 2497, 1158, 1318, 584, 974, 1676, 2831, 2899,
	1990, 2669, 2670, 183, 2627, 2536, 1317, 1689, 1690, 2455,
	2628, 2215, 2492, 2635, 1908, 2636, 63, 41, 2870, 2934,
	665, 662, 2718, 2719, 2327, 575, 575, 575, 575, 2328,
	2846, 661, 2918, 2847, 1717, 2491, 579, 576, 2673, 2994,
	1149, 794, 2677, 2678, 2679, 2645, 32, 2647, 31, 30,
	29, 28, 23, 22, 576, 576, 21, 576, 20, 576,
	576, 19, 576, 576, 576, 576, 576, 576, 25, 18,
	17, 16, 2689, 2476, 1665, 3007, 1665, 576, 3038, 115,
	50, 183, 2687, 2688, 47, 45, 122, 121, 48, 44,
	1078, 1663, 42, 1663, 27, 2702, 26, 183, 15, 14,
	13, 2698, 12, 11, 10, 9, 182, 5, 576, 4,
	183, 35, 34, 33, 1152, 24, 2, 2472, 2471, 2202,
	1910, 0, 0, 0, 576, 0, 183, 0, 2710, 2715,
	575, 2733, 575, 2699, 0, 0, 0, 0, 0, 2711,
	2714, 0, 183, 0, 2721, 2722, 0, 0, 2762, 183,
	0, 1665, 0, 0, 0, 0, 2754, 0, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 576, 1663, 2734,
	2308, 2756, 2308, 37, 2752, 2758, 2381, 2750, 2743, 2742,
	2381, 576, 576, 0, 0, 0, 0, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	182, 0, 0, 0, 0, 2807, 2766, 2763, 2764, 0,
	0, 0, 0, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2805, 2378, 0, 0, 0, 0,
	2804, 2819, 0, 0, 2803, 0, 0, 2814, 2815, 2816,
	2821, 2828, 2811, 0, 2820, 0, 0, 0, 575, 0,
	0, 0, 575, 575, 0, 0, 0, 0, 0, 576,
	0, 0, 1683, 0, 0, 0, 1684, 0, 0, 0,
	0, 0, 0, 0, 576, 576, 2844, 0, 0, 0,
	0, 575, 0, 0, 0, 0, 2865, 2866, 2868, 2867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2886,
	0, 0, 0, 2850, 1752, 0, 0, 2851, 0, 0,
	0, 2854, 2855, 2856, 2883, 2857, 2858, 2885, 0, 0,
	575, 0, 0, 2381, 2874, 2889, 0, 0, 0, 0,
	1329, 1773, 0, 0, 0, 182, 0, 0, 2891, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 576, 0,
	575, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 2902, 0, 2908, 0,
	0, 0, 183, 2905, 0, 576, 0, 0, 0, 0,
	2898, 0, 0, 0, 0, 183, 0, 0, 0, 576,
	37, 0, 0, 575, 183, 0, 183, 0, 183, 183,
	576, 2915, 0, 576, 2922, 575, 0, 2923, 2924, 2925,
	2926, 2927, 0, 0, 576, 0, 0, 0, 0, 2932,
	0, 0, 0, 0, 0, 0, 0, 575, 575, 0,
	0, 0, 2939, 0, 0, 0, 0, 0, 0, 0,
	0, 2947, 0, 2949, 0, 0, 0, 0, 2944, 575,
	2953, 0, 0, 2963, 0, 2828, 2955, 0, 37, 2962,
	0, 0, 0, 182, 575, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 0, 0, 2971, 0, 0, 0,
	0, 0, 0, 0, 0, 2990, 2982, 2987, 2974, 0,
	0, 0, 0, 575, 576, 2997, 0, 0, 0, 0,
	576, 0, 0, 2378, 0, 0, 3001, 0, 0, 0,
	0, 3009, 3006, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 0, 575, 0, 0, 0, 3025,
	3018, 3016, 1665, 3021, 3022, 3024, 3020, 0, 0, 0,
	3031, 0, 576, 0, 0, 0, 0, 0, 0, 1663,
	0, 0, 3040, 0, 0, 0, 0, 3045, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3048,
	0, 0, 1665, 3056, 0, 3055, 3058, 0, 0, 1665,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 1663,
	0, 0, 183, 0, 0, 0, 1663, 183, 183, 0,
	1397, 183, 1303, 183, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 183, 0, 0, 0, 0, 576, 0,
	0, 0, 2208, 0, 0, 0, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 578, 142, 0, 0,
	0, 0, 0, 0, 755, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2003, 0, 0, 0, 2007, 0, 2008, 2009, 152,
	0, 0, 0, 0, 141, 970, 2017, 0, 0, 2018,
	2019, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 160, 0, 0,
	0, 1385, 0, 0, 0, 0, 2025, 2026, 2027, 2028,
	2029, 0, 2031, 1451, 1452, 151, 150, 177, 2035, 0,
	2036, 0, 0, 0, 2039, 0, 0, 0, 0, 0,
	0, 0, 2048, 2049, 2050, 2051, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2062, 0, 2065, 2066, 2067,
	2068, 0, 2070, 2072, 0, 0, 0, 0, 0, 0,
	2077, 2078, 2079, 2080, 2081, 0, 1797, 0, 2083, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 2095, 0,
	0, 0, 1398, 183, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 1453, 153, 0, 1450, 0,
	147, 148, 0, 0, 0, 0, 163, 0, 183, 0,
	0, 0, 183, 0, 0, 168, 1411, 1414, 1415, 1416,
	1417, 1418, 1419, 0, 1420, 1421, 1422, 1423, 1424, 1399,
	1400, 1401, 1402, 1383, 1384, 1412, 0, 1386, 0, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 0, 0,
	1396, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 183, 183, 183, 183, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2294, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2309, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 144, 0, 0, 576, 0, 0, 2341, 2342, 0,
	0, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1079,
	0, 1085, 0, 576, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 2384, 0, 0, 0, 0, 0, 576, 576,
	0, 183, 183, 183, 183, 183, 0, 0, 0, 2402,
	2403, 0, 0, 183, 0, 0, 0, 0, 183, 0,
	0, 183, 0, 183, 0, 0, 183, 183, 183, 0,
	0, 0, 666, 0, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 0, 0, 0, 0, 0,
	173, 174, 175, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 183, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 183, 0, 0, 0, 0, 2516, 0, 0, 0,
	0, 0, 0, 2520, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 966, 0, 973, 2530, 2531, 2533,
	2535, 0, 0, 0, 0, 0, 0, 2541, 0, 0,
	0, 0, 2545, 2546, 2547, 0, 0, 0, 0, 2550,
	0, 0, 0, 0, 0, 2552, 0, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 0, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 2572, 2573,
	2574, 0, 0, 0, 0, 0, 0, 2580, 0, 0,
	0, 0, 0, 2585, 0, 0, 0, 0, 0, 0,
	576, 183, 0, 0, 0, 0, 0, 0, 0, 1357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2607, 2608, 0, 0,
	2612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2624, 2625,
	0, 0, 702, 79, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 183, 183, 183, 0, 0, 0, 0, 0,
	0, 0, 576, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2681,
	765, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	765, 0, 0, 0, 576, 576, 576, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1375, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 2708, 0,
	0, 1447, 2709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 0, 142, 0, 0, 2713,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	2723, 0, 2725, 2726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 141, 1505, 0, 0, 0, 0, 576,
	0, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 160, 0, 0, 0,
	0, 0, 0, 1546, 0, 0, 0, 0, 0, 0,
	0, 0, 1451, 1452, 151, 150, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1576, 576, 0, 0, 0,
	0, 0, 1580, 0, 0, 0, 0, 0, 0, 183,
	2824, 0, 0, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	0, 0, 576, 0, 2834, 2835, 2836, 0, 2837, 2838,
	0, 0, 0, 0, 2841, 0, 2842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2860, 1617, 808, 0, 808, 808, 576, 0, 0,
	0, 576, 576, 0, 0, 0, 0, 0, 0, 0,
	1148, 1150, 0, 146, 1453, 153, 0, 1450, 0, 147,
	148, 0, 0, 0, 0, 163, 0, 0, 0, 2890,
	576, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2910, 0, 0, 0, 576,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2929, 0, 0, 0, 0, 0, 2930,
	2931, 0, 0, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 155, 0, 0,
	0, 2942, 0, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 576, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 1821,
	1306, 1307, 1617, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 576, 2993, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 1350, 2999, 0, 0, 0,
	0, 0, 0, 1138, 808, 1138, 1138, 0, 0, 3003,
	1370, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 143, 0, 0,
	144, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 576, 0, 576, 0, 0, 0, 0, 765,
	1213, 1214, 1215, 0, 1218, 3037, 1220, 1221, 1222, 1223,
	0, 1226, 1228, 1228, 0, 1228, 1232, 1232, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	0, 1277, 1278, 1279, 1280, 1281, 184, 185, 186, 0,
	1232, 1232, 1232, 1232, 1232, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 0, 0, 1298, 0, 1617, 173,
	174, 175, 176, 0, 0, 1959, 0, 0, 0, 564,
	1969, 1970, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1304, 0,
	966, 561, 0, 0, 765, 0, 1983, 0, 765, 0,
	0, 0, 0, 1293, 765, 0, 0, 1474, 1474, 0,
	1474, 0, 1474, 1474, 0, 1483, 1474, 1474, 1474, 1474,
	1474, 0, 78, 39, 40, 80, 0, 0, 1293, 1293,
	966, 0, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 84, 0, 0, 0, 43, 69, 70, 546,
	67, 71, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 1544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 56, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 808, 808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 0,
	535, 549, 0, 567, 0, 566, 539, 0, 537, 541,
	550, 542, 0, 536, 0, 547, 0, 0, 538, 551,
	552, 554, 557, 558, 559, 555, 0, 545, 568, 0,
	0, 0, 1672, 0, 0, 0, 0, 0, 0, 1293,
	0, 0, 0, 0, 0, 2151, 0, 1687, 1688, 0,
	588, 0, 0, 46, 49, 52, 51, 54, 0, 66,
	0, 0, 75, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 786, 0, 0, 55, 83, 82, 0, 808,
	64, 65, 53, 0, 0, 0, 0, 0, 73, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 58, 0, 59, 60, 61,
	62, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 2768, 2770, 2769, 2779, 2780, 2781, 2782, 2783, 2784,
	2785, 627, 1350, 0, 0, 808, 0, 2240, 2241, 2242,
	2243, 2244, 0, 808, 0, 0, 808, 0, 0, 0,
	1138, 0, 0, 0, 1617, 2250, 0, 966, 0, 0,
	0, 0, 569, 0, 1138, 1138, 0, 0, 0, 0,
	2258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 973, 0, 0, 87, 0, 0, 0, 0,
	0, 696, 704, 705, 706, 707, 708, 697, 699, 0,
	0, 0, 698, 0, 81, 0, 0, 966, 0, 0,
	0, 0, 0, 973, 0, 701, 709, 710, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 966, 0, 0, 0, 0,
	0, 0, 2493, 2494, 0, 0, 0, 0, 0, 667,
	0, 0, 0, 0, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 0, 0, 0, 0, 0,
	181, 0, 0, 530, 0, 0, 570, 2774, 2775, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	2451, 1828, 0, 0, 0, 0, 775, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 793, 0, 793, 0, 2487, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 2496, 677, 0, 622,
	681, 624, 678, 679, 0, 620, 623, 680, 0, 0,
	0, 2508, 0, 0, 2511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 626, 2767, 2771, 2772, 2773,
	2776, 2777, 2778, 2786, 2788, 650, 2787, 2789, 2790, 2791,
	2794, 2795, 2796, 2797, 2792, 2793, 2798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 682, 0,
	683, 0, 0, 687, 0, 0, 0, 689, 688, 0,
	690, 664, 663, 0, 0, 684, 685, 0, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	677, 0, 0, 681, 2587, 678, 679, 0, 0, 0,
	680, 0, 1178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1225, 1801, 0, 0, 0, 0, 0, 2102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2658, 0, 0, 2659, 2660, 2661, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1992, 87, 0, 0, 588, 0, 0, 696, 704,
	705, 706, 707, 708, 697, 699, 0, 0, 0, 698,
	0, 0, 0, 0, 2192, 0, 0, 0, 0, 0,
	0, 0, 701, 709, 710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 2216, 0, 0, 0, 0,
	0, 0, 0, 0, 2221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2493,
	2494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 0, 0, 0, 0, 2075, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 765, 0, 0, 1293, 530, 1293, 530, 2097,
	1293, 530, 704, 705, 0, 1293, 0, 0, 1664, 0,
	0, 0, 2128, 2129, 0, 0, 0, 2325, 0, 0,
	0, 2148, 0, 2149, 2150, 0, 0, 0, 0, 808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2360, 0, 0, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 0, 1293, 0,
	0, 2385, 1474, 1293, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 2222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 966, 0, 0, 1293, 0, 0, 0,
	1294, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2909, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2324, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2566, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1624, 1625, 1626, 1627,
	0, 1828, 0, 2360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2382,
	0, 79, 0, 0, 1828, 1828, 1828, 1828, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 1669, 1670, 0,
	0, 2148, 765, 0, 0, 1675, 1828, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1711, 1712, 1713, 1714, 1715, 1716, 1718, 1722, 1723, 588,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 0, 1753, 0, 1757, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 1801, 0, 2489, 0,
	0, 588, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2694, 2695, 2696,
	2697, 2519, 0, 1808, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1293, 0, 1293, 1294, 1294, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 0, 0, 0, 0, 1566, 1293, 0, 0,
	0, 0, 2755, 0, 2757, 0, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 1589, 1590,
	530, 530, 530, 530, 530, 530, 530, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2633, 0, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 808, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2861, 0, 0, 793, 2861, 2861, 0, 0, 0, 0,
	793, 793, 0, 0, 0, 0, 1294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 793, 1566, 793, 793, 793,
	793, 793, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1520, 2727, 0, 2731, 2732, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2382,
	0, 79, 775, 2382, 2016, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 1566, 0, 530, 2936, 530, 0, 530, 1836,
	0, 0, 0, 0, 0, 1293, 0, 2940, 0, 0,
	1225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 808,
	808, 0, 0, 0, 0, 2812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2936, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 2382, 0, 0, 0,
	0, 0, 0, 0, 0, 2566, 0, 2977, 0, 0,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2900, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 0, 0, 79, 0,
	0, 0, 530, 0, 0, 0, 0, 530, 530, 0,
	0, 530, 0, 1976, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 2943, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 705, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 2262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2285, 2286, 0, 0, 0, 2289, 0,
	0, 0, 0, 2291, 2292, 2293, 793, 0, 0, 0,
	0, 0, 0, 0, 0, 2298, 2299, 2300, 0, 0,
	1729, 2302, 0, 2303, 2304, 0, 3002, 0, 2311, 2312,
	0, 0, 0, 0, 0, 0, 1729, 1729, 1729, 1729,
	1729, 588, 588, 588, 588, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 0, 0, 0, 0,
	793, 793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1566, 0, 0, 0, 530, 2373, 0, 0, 0,
	0, 0, 0, 1520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 2201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2538, 0, 0, 0, 0, 0, 0,
	2544, 0, 0, 0, 530, 530, 530, 530, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 0,
	0, 0, 1294, 0, 1294, 0, 0, 1294, 0, 0,
	0, 0, 1294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 2665, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1294, 0, 0, 0, 0,
	1294, 530, 530, 530, 530, 530, 0, 0, 0, 0,
	0, 0, 2686, 2401, 0, 0, 0, 0, 530, 0,
	0, 1520, 0, 530, 0, 0, 530, 2412, 1566, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2700, 0, 2701, 0, 0,
	0, 0, 2704, 2705, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 2712, 0, 0, 0,
	0, 0, 0, 1294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	2724, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 2751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2759,
	0, 0, 2761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2873,
	588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	0, 0, 530, 530, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2914, 0, 0, 0,
	2919, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1294,
	0, 1294, 0, 588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2919, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2991, 0, 0, 1294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2919, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 0, 0, 944, 929, 450, 0, 873,
	947, 842, 861, 957, 864, 867, 909, 821, 887, 371,
	858, 813, 846, 816, 853, 817, 844, 875, 245, 841,
	931, 891, 946, 326, 242, 823, 847, 385, 863, 193,
	911, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 953, 330, 897, 0, 435,
	356, 0, 0, 0, 877, 935, 885, 923, 872, 910,
	831, 896, 948, 859, 906, 949, 288, 226, 192, 368,
	436, 260, 0, 0, 1520, 0, 184, 185, 186, 0,
	2956, 0, 2957, 0, 0, 0, 0, 0, 0, 217,
	530, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 855, 903, 943, 856, 905, 240, 286, 247,
	239, 454, 954, 934, 820, 884, 942, 0, 0, 209,
	945, 879, 0, 908, 0, 960, 815, 0, 899, 0,
	818, 822, 956, 938, 850, 250, 0, 0, 0, 0,
	0, 0, 1294, 876, 886, 920, 870, 0, 0, 0,
	0, 0, 0, 0, 848, 0, 895, 0, 0, 0,
	827, 819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 874, 0, 0, 0, 830, 0, 849,
	921, 0, 812, 269, 824, 357, 232, 0, 927, 937,
	871, 488, 941, 869, 868, 915, 828, 933, 862, 325,
	826, 294, 188, 205, 0, 860, 367, 408, 414, 932,
	845, 854, 230, 852, 412, 381, 472, 213, 258, 405,
	386, 410, 393, 261, 894, 913, 411, 331, 459, 400,
	469, 489, 490, 238, 361, 479, 448, 485, 502, 206,
	235, 375, 441, 475, 432, 354, 455, 456, 293, 431,
	267, 191, 329, 495, 204, 420, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 350,
	290, 291, 198, 0, 404, 243, 265, 233, 370, 462,
	463, 231, 505, 208, 484, 201, 1140, 483, 363, 458,
	466, 351, 341, 200, 464, 349, 340, 296, 315, 316,
	254, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	840, 253, 257, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 928, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 362, 279, 433, 295,
	332, 918, 959, 380, 413, 219, 474, 434, 835, 839,
	833, 900, 834, 889, 890, 836, 950, 951, 952, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 922, 829,
	0, 837, 838, 0, 930, 939, 940, 525, 342, 425,
	471, 297, 309, 312, 302, 321, 0, 322, 298, 299,
	304, 306, 307, 308, 313, 314, 318, 324, 893, 187,
	202, 328, 955, 402, 262, 503, 482, 478, 814, 832,
	237, 843, 851, 0, 857, 865, 866, 878, 880, 881,
	882, 883, 901, 902, 904, 912, 914, 917, 919, 924,
	936, 958, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 338, 344, 345,
	346, 347, 364, 365, 366, 369, 372, 373, 376, 378,
	379, 382, 389, 390, 391, 392, 394, 396, 403, 407,
	415, 416, 417, 418, 419, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 271, 468,
	492, 0, 337, 892, 898, 339, 255, 274, 285, 907,
	481, 439, 207, 409, 263, 228, 925, 926, 196, 225,
	210, 234, 249, 252, 289, 348, 355, 384, 388, 268,
	246, 223, 406, 220, 424, 445, 446, 447, 449, 352,
	241, 387, 888, 916, 335, 451, 452, 281, 353, 0,
	0, 944, 929, 450, 0, 873, 947, 842, 861, 957,
	864, 867, 909, 821, 887, 371, 858, 813, 846, 816,
	853, 817, 844, 875, 245, 841, 931, 891, 946, 326,
	242, 823, 847, 385, 863, 193, 911, 426, 229, 336,
	333, 457, 256, 248, 244, 227, 282, 343, 383, 444,
	377, 953, 330, 897, 0, 435, 356, 0, 0, 0,
	877, 935, 885, 923, 872, 910, 831, 896, 948, 859,
	906, 949, 288, 226, 192, 368, 436, 260, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 311, 320,
	319, 300, 301, 303, 305, 310, 317, 323, 855, 903,
	943, 856, 905, 240, 286, 247, 239, 454, 954, 934,
	820, 884, 942, 0, 0, 209, 945, 879, 0, 908,
	0, 960, 815, 0, 899, 0, 818, 822, 956, 938,
	850, 250, 0, 0, 0, 0, 0, 0, 0, 876,
	886, 920, 870, 0, 0, 0, 0, 0, 2413, 0,
	848, 0, 895, 0, 0, 0, 827, 819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 874,
	0, 0, 0, 830, 0, 849, 921, 0, 812, 269,
	824, 357, 232, 0, 927, 937, 871, 488, 941, 869,
	868, 915, 828, 933, 862, 325, 826, 294, 188, 205,
	0, 860, 367, 408, 414, 932, 845, 854, 230, 852,
	412, 381, 472, 213, 258, 405, 386, 410, 393, 261,
	894, 913, 411, 331, 459, 400, 469, 489, 490, 238,
	361, 479, 448, 485, 502, 206, 235, 375, 441, 475,
	432, 354, 455, 456, 293, 431, 267, 191, 329, 495,
	204, 420, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 350, 290, 291, 198, 0,
	404, 243, 265, 233, 370, 462, 463, 231, 505, 208,
	484, 201, 1140, 483, 363, 458, 466, 351, 341, 200,
	464, 349, 340, 296, 315, 316, 254, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 840, 253, 257, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 928,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 362, 279, 433, 295, 332, 918, 959, 380,
	413, 219, 474, 434, 835, 839, 833, 900, 834, 889,
	890, 836, 950, 951, 952, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 922, 829, 0, 837, 838, 0,
	930, 939, 940, 525, 342, 425, 471, 297, 309, 312,
	302, 321, 0, 322, 298, 299, 304, 306, 307, 308,
	313, 314, 318, 324, 893, 187, 202, 328, 955, 402,
	262, 503, 482, 478, 814, 832, 237, 843, 851, 0,
	857, 865, 866, 878, 880, 881, 882, 883, 901, 902,
	904, 912, 914, 917, 919, 924, 936, 958, 189, 190,
	203, 212, 222, 236, 251, 259, 270, 275, 278, 283,
	284, 287, 292, 338, 344, 345, 346, 347, 364, 365,
	366, 369, 372, 373, 376, 378, 379, 382, 389, 390,
	391, 392, 394, 396, 403, 407, 415, 416, 417, 418,
	419, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 271, 468, 492, 0, 337, 892,
	898, 339, 255, 274, 285, 907, 481, 439, 207, 409,
	263, 228, 925, 926, 196, 225, 210, 234, 249, 252,
	289, 348, 355, 384, 388, 268, 246, 223, 406, 220,
	424, 445, 446, 447, 449, 352, 241, 387, 888, 916,
	335, 451, 452, 281, 353, 0, 0, 944, 929, 450,
	0, 873, 947, 842, 861, 957, 864, 867, 909, 821,
	887, 371, 858, 813, 846, 816, 853, 817, 844, 875,
	245, 841, 931, 891, 946, 326, 242, 823, 847, 385,
	863, 193, 911, 426, 229, 336, 333, 457, 256, 248,
	244, 227, 282, 343, 383, 444, 377, 953, 330, 897,
	0, 435, 356, 0, 0, 0, 877, 935, 885, 923,
	872, 910, 831, 896, 948, 859, 906, 949, 288, 226,
	192, 368, 436, 260, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 311, 320, 319, 300, 301, 303,
	305, 310, 317, 323, 855, 903, 943, 856, 905, 240,
	286, 247, 239, 454, 954, 934, 820, 884, 942, 0,
	0, 209, 945, 879, 0, 908, 0, 960, 815, 0,
	899, 0, 818, 822, 956, 938, 850, 250, 0, 0,
	0, 0, 0, 0, 0, 876, 886, 920, 870, 0,
	0, 0, 0, 0, 2371, 0, 848, 0, 895, 0,
	0, 0, 827, 819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 874, 0, 0, 0, 830,
	0, 849, 921, 0, 812, 269, 824, 357, 232, 0,
	927, 937, 871, 488, 941, 869, 868, 915, 828, 933,
	862, 325, 826, 294, 188, 205, 0, 860, 367, 408,
	414, 932, 845, 854, 230, 852, 412, 381, 472, 213,
	258, 405, 386, 410, 393, 261, 894, 913, 411, 331,
	459, 400, 469, 489, 490, 238, 361, 479, 448, 485,
	502, 206, 235, 375, 441, 475, 432, 354, 455, 456,
	293, 431, 267, 191, 329, 495, 204, 420, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 350, 290, 291, 198, 0, 404, 243, 265, 233,
	370, 462, 463, 231, 505, 208, 484, 201, 1140, 483,
	363, 458, 466, 351, 341, 200, 464, 349, 340, 296,
	315, 316, 254, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 840, 253, 257, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 928, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 362, 279,
	433, 295, 332, 918, 959, 380, 413, 219, 474, 434,
	835, 839, 833, 900, 834, 889, 890, 836, 950, 951,
	952, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	922, 829, 0, 837, 838, 0, 930, 939, 940, 525,
	342, 425, 471, 297, 309, 312, 302, 321, 0, 322,
	298, 299, 304, 306, 307, 308, 313, 314, 318, 324,
	893, 187, 202, 328, 955, 402, 262, 503, 482, 478,
	814, 832, 237, 843, 851, 0, 857, 865, 866, 878,
	880, 881, 882, 883, 901, 902, 904, 912, 914, 917,
	919, 924, 936, 958, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 338,
	344, 345, 346, 347, 364, 365, 366, 369, 372, 373,
	376, 378, 379, 382, 389, 390, 391, 392, 394, 396,
	403, 407, 415, 416, 417, 418, 419, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	271, 468, 492, 0, 337, 892, 898, 339, 255, 274,
	285, 907, 481, 439, 207, 409, 263, 228, 925, 926,
	196, 225, 210, 234, 249, 252, 289, 348, 355, 384,
	388, 268, 246, 223, 406, 220, 424, 445, 446, 447,
	449, 352, 241, 387, 888, 916, 335, 451, 452, 281,
	353, 0, 0, 944, 929, 450, 0, 873, 947, 842,
	861, 957, 864, 867, 909, 821, 887, 371, 858, 813,
	846, 816, 853, 817, 844, 875, 245, 841, 931, 891,
	946, 326, 242, 823, 847, 385, 863, 193, 911, 426,
	229, 336, 333, 457, 256, 248, 244, 227, 282, 343,
	383, 444, 377, 953, 330, 897, 0, 435, 356, 0,
	0, 0, 877, 935, 885, 923, 872, 910, 831, 896,
	948, 859, 906, 949, 288, 226, 192, 368, 436, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	311, 320, 319, 300, 301, 303, 305, 310, 317, 323,
	855, 903, 943, 856, 905, 240, 286, 247, 239, 454,
	954, 934, 820, 884, 942, 0, 0, 209, 945, 879,
	0, 908, 0, 960, 815, 0, 899, 0, 818, 822,
	956, 938, 850, 250, 0, 0, 0, 0, 0, 0,
	0, 876, 886, 920, 870, 0, 0, 0, 0, 0,
	1816, 0, 848, 0, 895, 0, 0, 0, 827, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 830, 0, 849, 921, 0,
	812, 269, 824, 357, 232, 0, 927, 937, 871, 488,
	941, 869, 868, 915, 828, 933, 862, 325, 826, 294,
	188, 205, 0, 860, 367, 408, 414, 932, 845, 854,
	230, 852, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 894, 913, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 1140, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 840, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 928, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 918,
	959, 380, 413, 219, 474, 434, 835, 839, 833, 900,
	834, 889, 890, 836, 950, 951, 952, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 922, 829, 0, 837,
	838, 0, 930, 939, 940, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 893, 187, 202, 328,
	955, 402, 262, 503, 482, 478, 814, 832, 237, 843,
	851, 0, 857, 865, 866, 878, 880, 881, 882, 883,
	901, 902, 904, 912, 914, 917, 919, 924, 936, 958,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 892, 898, 339, 255, 274, 285, 907, 481, 439,
	207, 409, 263, 228, 925, 926, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	888, 916, 335, 451, 452, 281, 353, 0, 0, 944,
	929, 450, 0, 873, 947, 842, 861, 957, 864, 867,
	909, 821, 887, 371, 858, 813, 846, 816, 853, 817,
	844, 875, 245, 841, 931, 891, 946, 326, 242, 823,
	847, 385, 863, 193, 911, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 953,
	330, 897, 0, 435, 356, 0, 0, 0, 877, 935,
	885, 923, 872, 910, 831, 896, 948, 859, 906, 949,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 855, 903, 943, 856,
	905, 240, 286, 247, 239, 454, 954, 934, 820, 884,
	942, 0, 0, 209, 945, 879, 0, 908, 0, 960,
	815, 0, 899, 0, 818, 822, 956, 938, 850, 250,
	0, 0, 0, 0, 0, 0, 0, 876, 886, 920,
	870, 0, 0, 0, 0, 0, 0, 0, 848, 0,
	895, 0, 0, 0, 827, 819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 874, 0, 0,
	0, 830, 0, 849, 921, 0, 812, 269, 824, 357,
	232, 0, 927, 937, 871, 488, 941, 869, 868, 915,
	828, 933, 862, 325, 826, 294, 188, 205, 0, 860,
	367, 408, 414, 932, 845, 854, 230, 852, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 894, 913,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	1140, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 840, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 928, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 918, 959, 380, 413, 219,
	474, 434, 835, 839, 833, 900, 834, 889, 890, 836,
	950, 951, 952, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 922, 829, 0, 837, 838, 0, 930, 939,
	940, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 893, 187, 202, 328, 955, 402, 262, 503,
	482, 478, 814, 832, 237, 843, 851, 0, 857, 865,
	866, 878, 880, 881, 882, 883, 901, 902, 904, 912,
	914, 917, 919, 924, 936, 958, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 892, 898, 339,
	255, 274, 285, 907, 481, 439, 207, 409, 263, 228,
	925, 926, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 888, 916, 335, 451,
	452, 281, 353, 0, 0, 944, 929, 450, 0, 873,
	947, 842, 861, 957, 864, 867, 909, 821, 887, 371,
	858, 813, 846, 816, 853, 817, 844, 875, 245, 841,
	931, 891, 946, 326, 242, 823, 847, 385, 863, 193,
	911, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 953, 330, 897, 0, 435,
	356, 0, 0, 0, 877, 935, 885, 923, 872, 910,
	831, 896, 948, 859, 906, 949, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 855, 903, 943, 856, 905, 240, 286, 247,
	239, 454, 954, 934, 820, 884, 942, 0, 0, 209,
	945, 879, 0, 908, 0, 960, 815, 0, 899, 0,
	818, 822, 956, 938, 850, 250, 0, 0, 0, 0,
	0, 0, 0, 876, 886, 920, 870, 0, 0, 0,
	0, 0, 0, 0, 848, 0, 895, 0, 0, 0,
	827, 819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 874, 0, 0, 0, 830, 0, 849,
	921, 0, 812, 269, 824, 357, 232, 0, 927, 937,
	871, 488, 941, 869, 868, 915, 828, 933, 862, 325,
	826, 294, 188, 205, 0, 860, 367, 408, 414, 932,
	845, 854, 230, 852, 412, 381, 472, 213, 258, 405,
	386, 410, 393, 261, 894, 913, 411, 331, 459, 400,
	469, 489, 490, 238, 361, 479, 448, 485, 502, 206,
	235, 375, 441, 475, 432, 354, 455, 456, 293, 431,
	267, 191, 329, 495, 204, 420, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 350,
	290, 291, 198, 0, 404, 243, 265, 233, 370, 462,
	463, 231, 505, 208, 484, 201, 1140, 483, 363, 458,
	466, 351, 341, 200, 464, 349, 340, 296, 315, 316,
	254, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	840, 253, 257, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 928, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 362, 279, 433, 295,
	332, 918, 959, 380, 413, 219, 474, 434, 835, 839,
	833, 900, 834, 889, 890, 836, 950, 951, 952, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 922, 829,
	0, 837, 838, 0, 930, 939, 940, 525, 342, 425,
	471, 297, 309, 312, 302, 321, 0, 322, 298, 299,
	304, 306, 307, 308, 313, 314, 318, 324, 893, 187,
	202, 328, 955, 402, 262, 503, 482, 478, 814, 832,
	237, 843, 851, 0, 857, 865, 866, 878, 880, 881,
	882, 883, 901, 902, 904, 912, 914, 917, 919, 924,
	936, 958, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 338, 344, 345,
	346, 347, 364, 365, 366, 369, 372, 373, 376, 378,
	379, 382, 389, 390, 391, 392, 394, 396, 403, 407,
	415, 416, 417, 418, 419, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 271, 468,
	492, 0, 337, 892, 898, 339, 255, 274, 285, 907,
	481, 439, 207, 409, 263, 228, 925, 926, 196, 225,
	210, 234, 249, 252, 289, 348, 355, 384, 388, 268,
	246, 223, 406, 220, 424, 445, 446, 447, 449, 352,
	241, 387, 888, 916, 335, 451, 452, 281, 353, 0,
	0, 944, 929, 450, 0, 873, 947, 842, 861, 957,
	864, 867, 909, 821, 887, 371, 858, 813, 846, 816,
	853, 817, 844, 875, 245, 841, 931, 891, 946, 326,
	242, 823, 847, 385, 863, 193, 911, 426, 229, 336,
	333, 457, 256, 248, 244, 227, 282, 343, 383, 444,
	377, 953, 330, 897, 0, 435, 356, 0, 0, 0,
	877, 935, 885, 923, 872, 910, 831, 896, 948, 859,
	906, 949, 288, 226, 192, 368, 436, 260, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 311, 320,
	319, 300, 301, 303, 305, 310, 317, 323, 855, 903,
	943, 856, 905, 240, 286, 247, 239, 454, 954, 934,
	820, 884, 942, 0, 0, 961, 945, 879, 0, 908,
	0, 960, 815, 0, 899, 0, 818, 822, 956, 938,
	850, 250, 0, 0, 0, 0, 0, 0, 0, 876,
	886, 920, 870, 0, 0, 0, 0, 0, 0, 0,
	848, 0, 895, 0, 0, 0, 827, 819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 874,
	0, 0, 0, 830, 0, 849, 921, 0, 812, 269,
	824, 357, 232, 0, 927, 937, 871, 488, 941, 869,
	868, 915, 828, 933, 862, 325, 826, 294, 188, 205,
	0, 860, 367, 408, 414, 932, 845, 854, 230, 852,
	412, 381, 472, 213, 258, 405, 386, 410, 393, 261,
	894, 913, 411, 331, 459, 400, 469, 489, 490, 238,
	361, 479, 448, 485, 502, 206, 235, 375, 441, 475,
	432, 354, 455, 456, 293, 431, 267, 191, 329, 495,
	204, 420, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 350, 290, 291, 198, 0,
	404, 243, 265, 233, 370, 462, 463, 231, 505, 208,
	484, 201, 825, 483, 363, 458, 466, 351, 341, 200,
	464, 349, 340, 296, 315, 316, 254, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 840, 253, 257, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 928,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 811, 805, 804, 295, 332, 918, 959, 380,
	413, 219, 474, 434, 835, 839, 833, 900, 834, 889,
	890, 836, 950, 951, 952, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 922, 829, 0, 837, 838, 0,
	930, 939, 940, 525, 342, 425, 471, 297, 309, 312,
	302, 321, 0, 322, 298, 299, 304, 306, 307, 308,
	313, 314, 318, 324, 893, 187, 202, 328, 955, 402,
	262, 503, 482, 478, 814, 832, 237, 843, 851, 0,
	857, 865, 866, 878, 880, 881, 882, 883, 901, 902,
	904, 912, 914, 917, 919, 924, 936, 958, 189, 190,
	203, 212, 222, 236, 251, 259, 270, 275, 278, 283,
	284, 287, 292, 338, 344, 345, 346, 347, 364, 365,
	366, 369, 372, 373, 376, 378, 379, 382, 389, 390,
	391, 392, 394, 396, 403, 407, 415, 416, 417, 418,
	419, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 271, 468, 492, 0, 337, 892,
	898, 339, 255, 274, 285, 907, 481, 439, 207, 409,
	263, 228, 925, 926, 196, 225, 210, 234, 249, 252,
	289, 348, 355, 384, 388, 268, 246, 223, 406, 220,
	424, 445, 446, 447, 449, 352, 241, 387, 888, 916,
	335, 451, 452, 281, 353, 0, 0, 944, 929, 450,
	0, 873, 947, 842, 861, 957, 864, 867, 909, 821,
	887, 371, 858, 813, 846, 816, 853, 817, 844, 875,
	245, 841, 931, 891, 946, 326, 242, 823, 847, 385,
	863, 193, 911, 426, 229, 336, 333, 457, 256, 248,
	244, 227, 282, 343, 383, 444, 377, 953, 330, 897,
	0, 435, 356, 0, 0, 0, 877, 935, 885, 923,
	872, 910, 831, 896, 948, 859, 906, 949, 288, 226,
	192, 368, 436, 260, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 311, 320, 319, 300, 301, 303,
	305, 310, 317, 323, 855, 903, 943, 856, 905, 240,
	286, 247, 239, 454, 954, 934, 820, 884, 942, 0,
	0, 961, 945, 879, 0, 908, 0, 960, 815, 0,
	899, 0, 818, 822, 956, 938, 850, 250, 0, 0,
	0, 0, 0, 0, 0, 876, 886, 920, 870, 0,
	0, 0, 0, 0, 0, 0, 848, 0, 895, 0,
	0, 0, 827, 819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 874, 0, 0, 0, 830,
	0, 849, 921, 0, 812, 269, 824, 357, 232, 0,
	927, 937, 871, 488, 941, 869, 868, 915, 828, 933,
	862, 325, 826, 294, 188, 205, 0, 860, 367, 408,
	414, 932, 845, 854, 230, 852, 412, 381, 472, 213,
	258, 405, 386, 410, 393, 261, 894, 913, 411, 331,
	459, 400, 469, 489, 490, 238, 361, 479, 448, 485,
	502, 206, 235, 375, 441, 475, 432, 354, 455, 456,
	293, 431, 267, 191, 329, 495, 204, 420, 221, 211,
	197, 443, 1361, 218, 423, 0, 0, 504, 199, 465,
	440, 350, 290, 291, 198, 0, 404, 243, 265, 233,
	370, 462, 463, 231, 505, 208, 484, 201, 825, 483,
	363, 458, 466, 351, 341, 200, 464, 349, 340, 296,
	315, 316, 254, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 840, 253, 257, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 928, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 811, 805,
	804, 295, 332, 918, 959, 380, 413, 219, 474, 434,
	835, 839, 833, 900, 834, 889, 890, 836, 950, 951,
	952, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	922, 829, 0, 837, 838, 0, 930, 939, 940, 525,
	342, 425, 471, 297, 309, 312, 302, 321, 0, 322,
	298, 299, 304, 306, 307, 308, 313, 314, 318, 324,
	893, 187, 202, 328, 955, 402, 262, 503, 482, 478,
	814, 832, 237, 843, 851, 0, 857, 865, 866, 878,
	880, 881, 882, 883, 901, 902, 904, 912, 914, 917,
	919, 924, 936, 958, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 338,
	344, 345, 346, 347, 364, 365, 366, 369, 372, 373,
	376, 378, 379, 382, 389, 390, 391, 392, 394, 396,
	403, 407, 415, 416, 417, 418, 419, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	271, 468, 492, 0, 337, 892, 898, 339, 255, 274,
	285, 907, 481, 439, 207, 409, 263, 228, 925, 926,
	196, 225, 210, 234, 249, 252, 289, 348, 355, 384,
	388, 268, 246, 223, 406, 220, 424, 445, 446, 447,
	449, 352, 241, 387, 888, 916, 335, 451, 452, 281,
	353, 0, 0, 944, 929, 450, 0, 873, 947, 842,
	861, 957, 864, 867, 909, 821, 887, 371, 858, 813,
	846, 816, 853, 817, 844, 875, 245, 841, 931, 891,
	946, 326, 242, 823, 847, 385, 863, 193, 911, 426,
	229, 336, 333, 457, 256, 248, 244, 227, 282, 343,
	383, 444, 377, 953, 330, 897, 0, 435, 356, 0,
	0, 0, 877, 935, 885, 923, 872, 910, 831, 896,
	948, 859, 906, 949, 288, 226, 192, 368, 436, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	311, 320, 319, 300, 301, 303, 305, 310, 317, 323,
	855, 903, 943, 856, 905, 240, 286, 247, 239, 454,
	954, 934, 820, 884, 942, 0, 0, 961, 945, 879,
	0, 908, 0, 960, 815, 0, 899, 0, 818, 822,
	956, 938, 850, 250, 0, 0, 0, 0, 0, 0,
	0, 876, 886, 920, 870, 0, 0, 0, 0, 0,
	0, 0, 848, 0, 895, 0, 0, 0, 827, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 0, 830, 0, 849, 921, 0,
	812, 269, 824, 357, 232, 0, 927, 937, 871, 488,
	941, 869, 868, 915, 828, 933, 862, 325, 826, 294,
	188, 205, 0, 860, 367, 408, 414, 932, 845, 854,
	230, 852, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 894, 913, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 802, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 825, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 840, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 928, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 811, 805, 804, 295, 332, 918,
	959, 380, 413, 219, 474, 434, 835, 839, 833, 900,
	834, 889, 890, 836, 950, 951, 952, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 922, 829, 0, 837,
	838, 0, 930, 939, 940, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 893, 187, 202, 328,
	955, 402, 262, 503, 482, 478, 814, 832, 237, 843,
	851, 0, 857, 865, 866, 878, 880, 881, 882, 883,
	901, 902, 904, 912, 914, 917, 919, 924, 936, 958,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 892, 898, 339, 255, 274, 285, 907, 481, 439,
	207, 409, 263, 228, 925, 926, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	888, 916, 335, 451, 452, 281, 353, 0, 0, 0,
	0, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 1760, 0, 606, 0,
	0, 0, 245, 611, 0, 0, 0, 326, 242, 0,
	1761, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 618,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 696, 704, 705, 706, 707, 708, 697,
	699, 0, 0, 217, 698, 224, 629, 631, 630, 640,
	641, 642, 643, 644, 645, 646, 627, 701, 709, 710,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 603, 0, 617, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 791, 0, 0, 0,
	671, 0, 602, 0, 0, 610, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 670, 0, 0, 488, 0, 0, 668, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 635, 636, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 677, 669, 622, 681, 624, 678, 679, 619,
	620, 623, 680, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 672, 609, 608, 0, 615, 616, 0, 625,
	626, 628, 632, 633, 634, 637, 638, 639, 647, 649,
	650, 648, 651, 652, 653, 656, 657, 658, 659, 654,
	655, 660, 607, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 682, 237, 683, 0, 0, 687, 0,
	0, 0, 689, 688, 0, 690, 664, 663, 0, 0,
	684, 685, 0, 686, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	703, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 353, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 606,
	0, 0, 0, 245, 611, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	618, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 87, 0,
	0, 184, 185, 186, 696, 704, 705, 706, 707, 708,
	697, 699, 0, 0, 217, 698, 224, 629, 631, 630,
	640, 641, 642, 643, 644, 645, 646, 627, 701, 709,
	710, 0, 240, 286, 247, 239, 454, 0, 0, 1719,
	1720, 1721, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 603, 0, 617, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 601, 0, 0, 0,
	0, 671, 0, 602, 0, 0, 610, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	357, 232, 0, 670, 0, 0, 488, 0, 0, 668,
	0, 0, 0, 0, 325, 0, 294, 188, 205, 0,
	0, 367, 408, 414, 0, 0, 0, 230, 0, 412,
	381, 472, 213, 258, 405, 386, 410, 393, 261, 0,
	0, 411, 331, 459, 400, 469, 489, 490, 238, 361,
	479, 448, 485, 502, 206, 235, 375, 441, 475, 432,
	354, 455, 456, 293, 431, 267, 191, 329, 495, 204,
	420, 221, 211, 197, 443, 467, 218, 423, 0, 0,
	504, 199, 465, 440, 350, 290, 291, 198, 0, 404,
	243, 265, 233, 370, 462, 463, 231, 505, 208, 484,
	201, 0, 483, 363, 458, 466, 351, 341, 200, 464,
	349, 340, 296, 635, 636, 254, 276, 398, 334, 399,
	277, 359, 358, 360, 194, 476, 0, 195, 0, 437,
	477, 506, 214, 215, 216, 0, 253, 257, 264, 266,
	272, 273, 280, 327, 374, 397, 395, 401, 0, 453,
	470, 480, 487, 493, 494, 496, 497, 498, 499, 500,
	501, 362, 279, 433, 295, 332, 0, 0, 380, 413,
	219, 474, 434, 677, 669, 622, 681, 624, 678, 679,
	619, 620, 623, 680, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 672, 609, 608, 0, 615, 616, 0,
	625, 626, 628, 632, 633, 634, 637, 638, 639, 647,
	649, 650, 648, 651, 652, 653, 656, 657, 658, 659,
	654, 655, 660, 607, 187, 202, 328, 0, 402, 262,
	503, 482, 478, 0, 682, 237, 683, 0, 0, 687,
	0, 0, 0, 689, 688, 0, 690, 664, 663, 0,
	0, 684, 685, 0, 686, 0, 0, 189, 190, 203,
	212, 222, 236, 251, 259, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 407, 415, 416, 417, 418, 419,
	421, 422, 427, 428, 429, 430, 438, 442, 460, 461,
	473, 486, 491, 271, 468, 492, 0, 337, 0, 0,
	339, 255, 274, 285, 0, 481, 439, 207, 409, 263,
	228, 703, 0, 196, 225, 210, 234, 249, 252, 289,
	348, 355, 384, 388, 268, 246, 223, 406, 220, 424,
	445, 446, 447, 449, 352, 241, 387, 0, 353, 335,
	451, 452, 281, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	606, 0, 0, 0, 245, 611, 0, 0, 0, 326,
	242, 0, 0, 385, 0, 193, 0, 426, 229, 336,
	333, 457, 256, 248, 244, 227, 282, 343, 383, 444,
	377, 618, 330, 0, 0, 435, 356, 0, 0, 0,
	0, 0, 613, 614, 0, 0, 0, 0, 0, 0,
	1843, 0, 288, 226, 192, 368, 436, 260, 0, 87,
	0, 0, 184, 185, 186, 696, 704, 705, 706, 707,
	708, 697, 699, 0, 0, 217, 698, 224, 629, 631,
	630, 640, 641, 642, 643, 644, 645, 646, 627, 701,
	709, 710, 1844, 240, 286, 247, 239, 454, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 603, 0, 617, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 601, 0, 0,
	0, 0, 671, 0, 602, 0, 0, 610, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 612,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 232, 0, 670, 0, 0, 488, 0, 0,
	668, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 408, 414, 0, 0, 0, 230, 0,
	412, 381, 472, 213, 258, 405, 386, 410, 393, 261,
	0, 0, 411, 331, 459, 400, 469, 489, 490, 238,
	361, 479, 448, 485, 502, 206, 235, 375, 441, 475,
	432, 354, 455, 456, 293, 431, 267, 191, 329, 495,
	204, 420, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 350, 290, 291, 198, 0,
	404, 243, 265, 233, 370, 462, 463, 231, 505, 208,
	484, 201, 0, 483, 363, 458, 466, 351, 341, 200,
	464, 349, 340, 296, 635, 636, 254, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 253, 257, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 362, 279, 433, 295, 332, 0, 0, 380,
	413, 219, 474, 434, 677, 669, 622, 681, 624, 678,
	679, 619, 620, 623, 680, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 672, 609, 608, 0, 615, 616,
	0, 625, 626, 628, 632, 633, 634, 637, 638, 639,
	647, 649, 650, 648, 651, 652, 653, 656, 657, 658,
	659, 654, 655, 660, 607, 187, 202, 328, 0, 402,
	262, 503, 482, 478, 0, 682, 237, 683, 0, 0,
	687, 0, 0, 0, 689, 688, 0, 690, 664, 663,
	0, 0, 684, 685, 0, 686, 0, 0, 189, 190,
	203, 212, 222, 236, 251, 259, 270, 275, 278, 283,
	284, 287, 292, 338, 344, 345, 346, 347, 364, 365,
	366, 369, 372, 373, 376, 378, 379, 382, 389, 390,
	391, 392, 394, 396, 403, 407, 415, 416, 417, 418,
	419, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 271, 468, 492, 0, 337, 0,
	0, 339, 255, 274, 285, 0, 481, 439, 207, 409,
	263, 228, 703, 0, 196, 225, 210, 234, 249, 252,
	289, 348, 355, 384, 388, 268, 246, 223, 406, 220,
	424, 445, 446, 447, 449, 352, 241, 387, 0, 0,
	335, 451, 452, 281, 353, 0, 0, 0, 78, 450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 606, 0, 0, 0,
	245, 611, 0, 0, 0, 326, 242, 0, 0, 385,
	0, 193, 0, 426, 229, 336, 333, 457, 256, 248,
	244, 227, 282, 343, 383, 444, 377, 618, 330, 0,
	0, 435, 356, 0, 0, 0, 0, 0, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 226,
	192, 368, 436, 260, 0, 87, 0, 0, 184, 185,
	186, 696, 704, 705, 706, 707, 708, 697, 699, 0,
	0, 217, 698, 224, 629, 631, 630, 640, 641, 642,
	643, 644, 645, 646, 627, 701, 709, 710, 0, 240,
	286, 247, 239, 454, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 603, 0, 617, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 601, 0, 0, 0, 0, 671, 0,
	602, 0, 0, 610, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 232, 0,
	670, 0, 0, 488, 0, 0, 668, 0, 0, 0,
	0, 325, 0, 294, 188, 205, 0, 0, 367, 408,
	414, 0, 0, 0, 230, 0, 412, 381, 472, 213,
	258, 405, 386, 410, 393, 261, 0, 0, 411, 331,
	459, 400, 469, 489, 490, 238, 361, 479, 448, 485,
	502, 206, 235, 375, 441, 475, 432, 354, 455, 456,
	293, 431, 267, 191, 329, 495, 204, 420, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 350, 290, 291, 198, 0, 404, 243, 265, 233,
	370, 462, 463, 231, 505, 208, 484, 201, 0, 483,
	363, 458, 466, 351, 341, 200, 464, 349, 340, 296,
	635, 636, 254, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 253, 257, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 362, 279,
	433, 295, 332, 0, 0, 380, 413, 219, 474, 434,
	677, 669, 622, 681, 624, 678, 679, 619, 620, 623,
	680, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	672, 609, 608, 0, 615, 616, 0, 625, 626, 628,
	632, 633, 634, 637, 638, 639, 647, 649, 650, 648,
	651, 652, 653, 656, 657, 658, 659, 654, 655, 660,
	607, 187, 202, 328, 86, 402, 262, 503, 482, 478,
	0, 682, 237, 683, 0, 0, 687, 0, 0, 0,
	689, 688, 0, 690, 664, 663, 0, 0, 684, 685,
	0, 686, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 338,
	344, 345, 346, 347, 364, 365, 366, 369, 372, 373,
	376, 378, 379, 382, 389, 390, 391, 392, 394, 396,
	403, 407, 415, 416, 417, 418, 419, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	271, 468, 492, 0, 337, 0, 0, 339, 255, 274,
	285, 0, 481, 439, 207, 409, 263, 228, 703, 0,
	196, 225, 210, 234, 249, 252, 289, 348, 355, 384,
	388, 268, 246, 223, 406, 220, 424, 445, 446, 447,
	449, 352, 241, 387, 0, 353, 335, 451, 452, 281,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 606, 0, 0,
	0, 245, 611, 0, 0, 0, 326, 242, 0, 0,
	385, 0, 193, 0, 426, 229, 336, 333, 457, 256,
	248, 244, 227, 282, 343, 383, 444, 377, 618, 330,
	0, 0, 435, 356, 0, 0, 0, 0, 0, 613,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 436, 260, 0, 87, 0, 0, 184,
	185, 186, 696, 704, 705, 706, 707, 708, 697, 699,
	0, 0, 217, 698, 224, 629, 631, 630, 640, 641,
	642, 643, 644, 645, 646, 627, 701, 709, 710, 0,
	240, 286, 247, 239, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 589, 603, 0, 617, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 601, 0, 0, 0, 0, 671,
	0, 602, 0, 0, 610, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 670, 0, 0, 488, 0, 0, 668, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 2950, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 635, 636, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 677, 669, 622, 681, 624, 678, 679, 619, 620,
	623, 680, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 672, 609, 608, 0, 615, 616, 0, 625, 626,
	628, 632, 633, 634, 637, 638, 639, 647, 649, 650,
	648, 651, 652, 653, 656, 657, 658, 659, 654, 655,
	660, 607, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 682, 237, 683, 0, 0, 687, 0, 0,
	0, 689, 688, 0, 690, 664, 663, 0, 0, 684,
	685, 0, 686, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 703,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 606, 0,
	0, 0, 245, 611, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 618,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 87, 0, 0,
	184, 185, 186, 696, 704, 705, 706, 707, 708, 697,
	699, 0, 0, 217, 698, 224, 629, 631, 630, 640,
	641, 642, 643, 644, 645, 646, 627, 701, 709, 710,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 603, 2917, 617, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 0, 0, 0, 0,
	671, 0, 602, 0, 0, 610, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 670, 0, 0, 488, 0, 0, 668, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 635, 636, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 677, 669, 622, 681, 624, 678, 679, 619,
	620, 623, 680, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 672, 609, 608, 0, 615, 616, 0, 625,
	626, 628, 632, 633, 634, 637, 638, 639, 647, 649,
	650, 648, 651, 652, 653, 656, 657, 658, 659, 654,
	655, 660, 607, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 682, 237, 683, 0, 0, 687, 0,
	0, 0, 689, 688, 0, 690, 664, 663, 0, 0,
	684, 685, 0, 686, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 2921,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 2920,
	703, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 353, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 606,
	0, 0, 0, 245, 611, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	618, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 87, 0,
	1328, 184, 185, 186, 696, 704, 705, 706, 707, 708,
	697, 699, 0, 0, 217, 698, 224, 629, 631, 630,
	640, 641, 642, 643, 644, 645, 646, 627, 701, 709,
	710, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 589, 603, 0, 617, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 601, 0, 0, 0,
	0, 671, 0, 602, 0, 0, 610, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 612, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	357, 232, 0, 670, 0, 0, 488, 0, 0, 668,
	0, 0, 0, 0, 325, 0, 294, 188, 205, 0,
	0, 367, 408, 414, 0, 0, 0, 230, 0, 412,
	381, 472, 213, 258, 405, 386, 410, 393, 261, 0,
	0, 411, 331, 459, 400, 469, 489, 490, 238, 361,
	479, 448, 485, 502, 206, 235, 375, 441, 475, 432,
	354, 455, 456, 293, 431, 267, 191, 329, 495, 204,
	420, 221, 211, 197, 443, 467, 218, 423, 0, 0,
	504, 199, 465, 440, 350, 290, 291, 198, 0, 404,
	243, 265, 233, 370, 462, 463, 231, 505, 208, 484,
	201, 0, 483, 363, 458, 466, 351, 341, 200, 464,
	349, 340, 296, 635, 636, 254, 276, 398, 334, 399,
	277, 359, 358, 360, 194, 476, 0, 195, 0, 437,
	477, 506, 214, 215, 216, 0, 253, 257, 264, 266,
	272, 273, 280, 327, 374, 397, 395, 401, 0, 453,
	470, 480, 487, 493, 494, 496, 497, 498, 499, 500,
	501, 362, 279, 433, 295, 332, 0, 0, 380, 413,
	219, 474, 434, 677, 669, 622, 681, 624, 678, 679,
	619, 620, 623, 680, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 672, 609, 608, 0, 615, 616, 0,
	625, 626, 628, 632, 633, 634, 637, 638, 639, 647,
	649, 650, 648, 651, 652, 653, 656, 657, 658, 659,
	654, 655, 660, 607, 187, 202, 328, 0, 402, 262,
	503, 482, 478, 0, 682, 237, 683, 0, 0, 687,
	0, 0, 0, 689, 688, 0, 690, 664, 663, 0,
	0, 684, 685, 0, 686, 0, 0, 189, 190, 203,
	212, 222, 236, 251, 259, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 407, 415, 416, 417, 418, 419,
	421, 422, 427, 428, 429, 430, 438, 442, 460, 461,
	473, 486, 491, 271, 468, 492, 0, 337, 0, 0,
	339, 255, 274, 285, 0, 481, 439, 207, 409, 263,
	228, 703, 0, 196, 225, 210, 234, 249, 252, 289,
	348, 355, 384, 388, 268, 246, 223, 406, 220, 424,
	445, 446, 447, 449, 352, 241, 387, 0, 353, 335,
	451, 452, 281, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	606, 0, 0, 0, 245, 611, 0, 0, 0, 326,
	242, 0, 0, 385, 0, 193, 0, 426, 229, 336,
	333, 457, 256, 248, 244, 227, 282, 343, 383, 444,
	377, 618, 330, 0, 0, 435, 356, 0, 0, 0,
	0, 0, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 226, 192, 368, 436, 260, 0, 87,
	0, 0, 184, 185, 186, 696, 704, 705, 706, 707,
	708, 697, 699, 0, 0, 217, 698, 224, 629, 631,
	630, 640, 641, 642, 643, 644, 645, 646, 627, 701,
	709, 710, 0, 240, 286, 247, 239, 454, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 603, 0, 617, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 601, 791, 0,
	0, 0, 671, 0, 602, 0, 0, 610, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 612,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 232, 0, 670, 0, 0, 488, 0, 0,
	668, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 408, 414, 0, 0, 0, 230, 0,
	412, 381, 472, 213, 258, 405, 386, 410, 393, 261,
	0, 0, 411, 331, 459, 400, 469, 489, 490, 238,
	361, 479, 448, 485, 502, 206, 235, 375, 441, 475,
	432, 354, 455, 456, 293, 431, 267, 191, 329, 495,
	204, 420, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 350, 290, 291, 198, 0,
	404, 243, 265, 233, 370, 462, 463, 231, 505, 208,
	484, 201, 0, 483, 363, 458, 466, 351, 341, 200,
	464, 349, 340, 296, 635, 636, 254, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 253, 257, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 362, 279, 433, 295, 332, 0, 0, 380,
	413, 219, 474, 434, 677, 669, 622, 681, 624, 678,
	679, 619, 620, 623, 680, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 672, 609, 608, 0, 615, 616,
	0, 625, 626, 628, 632, 633, 634, 637, 638, 639,
	647, 649, 650, 648, 651, 652, 653, 656, 657, 658,
	659, 654, 655, 660, 607, 187, 202, 328, 0, 402,
	262, 503, 482, 478, 0, 682, 237, 683, 0, 0,
	687, 0, 0, 0, 689, 688, 0, 690, 664, 663,
	0, 0, 684, 685, 0, 686, 0, 0, 189, 190,
	203, 212, 222, 236, 251, 259, 270, 275, 278, 283,
	284, 287, 292, 338, 344, 345, 346, 347, 364, 365,
	366, 369, 372, 373, 376, 378, 379, 382, 389, 390,
	391, 392, 394, 396, 403, 407, 415, 416, 417, 418,
	419, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 271, 468, 492, 0, 337, 0,
	0, 339, 255, 274, 285, 0, 481, 439, 207, 409,
	263, 228, 703, 0, 196, 225, 210, 234, 249, 252,
	289, 348, 355, 384, 388, 268, 246, 223, 406, 220,
	424, 445, 446, 447, 449, 352, 241, 387, 0, 353,
	335, 451, 452, 281, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 606, 0, 0, 0, 245, 611, 0, 0, 0,
	326, 242, 0, 0, 385, 0, 193, 0, 426, 229,
	336, 333, 457, 256, 248, 244, 227, 282, 343, 383,
	444, 377, 618, 330, 0, 0, 435, 356, 0, 0,
	0, 0, 0, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 436, 260, 0,
	87, 0, 0, 184, 185, 186, 696, 704, 705, 706,
	707, 708, 697, 699, 0, 0, 217, 698, 224, 629,
	631, 630, 640, 641, 642, 643, 644, 645, 646, 627,
	701, 709, 710, 0, 240, 286, 247, 239, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 589, 603, 0, 617, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 601, 0,
	0, 0, 0, 671, 0, 602, 0, 0, 610, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 357, 232, 0, 670, 0, 0, 488, 0,
	0, 668, 0, 0, 0, 0, 325, 0, 294, 188,
	205, 0, 0, 367, 408, 414, 0, 0, 0, 230,
	0, 412, 381, 472, 213, 258, 405, 386, 410, 393,
	261, 0, 0, 411, 331, 459, 400, 469, 489, 490,
	238, 361, 479, 448, 485, 502, 206, 235, 375, 441,
	475, 432, 354, 455, 456, 293, 431, 267, 191, 329,
	495, 204, 420, 221, 211, 197, 443, 467, 218, 423,
	0, 0, 504, 199, 465, 440, 350, 290, 291, 198,
	0, 404, 243, 265, 233, 370, 462, 463, 231, 505,
	208, 484, 201, 0, 483, 363, 458, 466, 351, 341,
	200, 464, 349, 340, 296, 635, 636, 254, 276, 398,
	334, 399, 277, 359, 358, 360, 194, 476, 0, 195,
	0, 437, 477, 506, 214, 215, 216, 0, 253, 257,
	264, 266, 272, 273, 280, 327, 374, 397, 395, 401,
	0, 453, 470, 480, 487, 493, 494, 496, 497, 498,
	499, 500, 501, 362, 279, 433, 295, 332, 0, 0,
	380, 413, 219, 474, 434, 677, 669, 622, 681, 624,
	678, 679, 619, 620, 623, 680, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 672, 609, 608, 0, 615,
	616, 0, 625, 626, 628, 632, 633, 634, 637, 638,
	639, 647, 649, 650, 648, 651, 652, 653, 656, 657,
	658, 659, 654, 655, 660, 607, 187, 202, 328, 0,
	402, 262, 503, 482, 478, 0, 682, 237, 683, 0,
	0, 687, 0, 0, 0, 689, 688, 0, 690, 664,
	663, 0, 0, 684, 685, 0, 686, 0, 0, 189,
	190, 203, 212, 222, 236, 251, 259, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 407, 415, 416, 417,
	418, 419, 421, 422, 427, 428, 429, 430, 438, 442,
	460, 461, 2921, 486, 491, 271, 468, 492, 0, 337,
	0, 0, 339, 255, 274, 285, 0, 481, 439, 207,
	409, 263, 2920, 703, 0, 196, 225, 210, 234, 249,
	252, 289, 348, 355, 384, 388, 268, 246, 223, 406,
	220, 424, 445, 446, 447, 449, 352, 241, 387, 0,
	353, 335, 451, 452, 281, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 606, 0, 0, 0, 245, 611, 0, 0,
	0, 326, 242, 0, 0, 385, 0, 193, 0, 426,
	229, 336, 333, 457, 256, 248, 244, 227, 282, 343,
	383, 444, 377, 618, 330, 0, 0, 435, 356, 0,
	0, 0, 0, 0, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 368, 436, 260,
	0, 87, 0, 0, 184, 185, 186, 696, 704, 705,
	706, 707, 708, 697, 699, 0, 0, 217, 698, 224,
	629, 631, 630, 640, 641, 642, 643, 644, 645, 646,
	627, 701, 709, 710, 0, 240, 286, 247, 239, 454,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 589, 603, 0, 617,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 601,
	0, 0, 0, 0, 671, 0, 602, 0, 0, 610,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 232, 0, 670, 0, 0, 488,
	0, 0, 668, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 408, 414, 0, 0, 0,
	230, 0, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 0, 0, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 0, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 635, 636, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 0,
	0, 380, 413, 219, 474, 434, 677, 669, 622, 681,
	624, 678, 679, 619, 620, 623, 680, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 672, 609, 608, 0,
	615, 616, 0, 625, 626, 628, 632, 633, 634, 637,
	638, 639, 647, 649, 650, 648, 651, 652, 653, 656,
	657, 658, 659, 654, 655, 660, 607, 187, 202, 328,
	0, 402, 262, 503, 482, 478, 0, 682, 237, 683,
	0, 0, 687, 0, 0, 0, 689, 688, 0, 690,
	664, 663, 0, 0, 684, 685, 0, 686, 0, 0,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 0, 0, 339, 255, 274, 285, 0, 481, 439,
	207, 409, 263, 228, 703, 0, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	0, 353, 335, 451, 452, 281, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 606, 0, 0, 0, 245, 611, 0,
	0, 0, 326, 242, 0, 0, 385, 0, 193, 0,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 618, 330, 0, 0, 435, 356,
	0, 0, 0, 0, 0, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 436,
	260, 0, 87, 0, 0, 184, 185, 186, 696, 704,
	705, 706, 707, 708, 697, 699, 0, 0, 217, 698,
	224, 629, 631, 630, 640, 641, 642, 643, 644, 645,
	646, 627, 701, 709, 710, 0, 240, 286, 247, 239,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 671, 0, 602, 0, 0,
	610, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 670, 0, 0,
	488, 0, 0, 668, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 677, 669, 622,
	681, 624, 678, 679, 619, 620, 623, 680, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 672, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 682, 237,
	683, 0, 0, 687, 0, 0, 0, 689, 688, 0,
	690, 664, 663, 0, 0, 684, 685, 0, 686, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 703, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	704, 705, 0, 0, 0, 0, 1664, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 232, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 408, 414, 0,
	0, 0, 230, 0, 412, 381, 472, 213, 258, 405,
	386, 410, 393, 261, 0, 0, 411, 331, 459, 400,
	469, 489, 490, 238, 361, 479, 448, 485, 502, 206,
	235, 375, 441, 475, 432, 354, 455, 456, 293, 431,
	267, 191, 329, 495, 204, 420, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 350,
	290, 291, 198, 0, 404, 243, 265, 233, 370, 462,
	463, 231, 505, 208, 484, 201, 0, 483, 363, 458,
	466, 351, 341, 200, 464, 349, 340, 296, 315, 316,
	254, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 253, 257, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 362, 279, 433, 295,
	332, 0, 0, 380, 413, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 342, 425,
	471, 297, 309, 312, 302, 321, 0, 322, 298, 299,
	304, 306, 307, 308, 313, 314, 318, 324, 0, 187,
	202, 328, 0, 402, 262, 503, 482, 478, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 338, 344, 345,
	346, 347, 364, 365, 366, 369, 372, 373, 376, 378,
	379, 382, 389, 390, 391, 392, 394, 396, 403, 407,
	415, 416, 417, 418, 419, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 271, 468,
	492, 0, 337, 0, 0, 339, 255, 274, 285, 0,
	481, 439, 207, 409, 263, 228, 0, 0, 196, 225,
	210, 234, 249, 252, 289, 348, 355, 384, 388, 268,
	246, 223, 406, 220, 424, 445, 446, 447, 449, 352,
	241, 387, 0, 353, 335, 451, 452, 281, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 326, 242, 0, 0, 385, 0,
	193, 0, 426, 229, 336, 333, 457, 256, 248, 244,
	227, 282, 343, 383, 444, 377, 0, 330, 0, 0,
	435, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 436, 260, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 0, 0, 0, 0, 0, 240, 286,
	247, 239, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 1009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 357, 232, 0, 0,
	0, 1008, 488, 0, 0, 0, 0, 0, 1005, 1006,
	325, 969, 294, 188, 205, 999, 1003, 367, 408, 414,
	0, 0, 0, 230, 0, 412, 381, 472, 213, 258,
	405, 386, 410, 393, 261, 0, 0, 411, 331, 459,
	400, 469, 489, 490, 238, 361, 479, 448, 485, 502,
	206, 235, 375, 441, 475, 432, 354, 455, 456, 293,
	431, 267, 191, 329, 495, 204, 420, 221, 211, 197,
	443, 467, 218, 423, 0, 0, 504, 199, 465, 440,
	350, 290, 291, 198, 0, 404, 243, 265, 233, 370,
	462, 463, 231, 505, 208, 484, 201, 0, 483, 363,
	458, 466, 351, 341, 200, 464, 349, 340, 296, 315,
	316, 254, 276, 398, 334, 399, 277, 359, 358, 360,
	194, 476, 0, 195, 0, 437, 477, 506, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 327,
	374, 397, 395, 401, 0, 453, 470, 480, 487, 493,
	494, 496, 497, 498, 499, 500, 501, 362, 279, 433,
	295, 332, 0, 0, 380, 413, 219, 474, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 342,
	425, 471, 297, 309, 312, 302, 321, 0, 322, 298,
	299, 304, 306, 307, 308, 313, 314, 318, 324, 0,
	187, 202, 328, 0, 402, 262, 503, 482, 478, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 236, 251,
	259, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	407, 415, 416, 417, 418, 419, 421, 422, 427, 428,
	429, 430, 438, 442, 460, 461, 473, 486, 491, 271,
	468, 492, 0, 337, 0, 0, 339, 255, 274, 285,
	0, 481, 439, 207, 409, 263, 228, 0, 0, 196,
	225, 210, 234, 249, 252, 289, 348, 355, 384, 388,
	268, 246, 223, 406, 220, 424, 445, 446, 447, 449,
	352, 241, 387, 0, 0, 335, 451, 452, 281, 353,
	0, 0, 0, 78, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	326, 242, 0, 0, 385, 0, 193, 0, 426, 229,
	336, 333, 457, 256, 248, 244, 227, 282, 343, 383,
	444, 377, 0, 330, 0, 0, 435, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 436, 260, 0,
	87, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 357, 232, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 294, 188,
	205, 0, 0, 367, 408, 414, 0, 0, 0, 230,
	0, 412, 381, 472, 213, 258, 405, 386, 410, 393,
	261, 0, 0, 411, 331, 459, 400, 469, 489, 490,
	238, 361, 479, 448, 485, 502, 206, 235, 375, 441,
	475, 432, 354, 455, 456, 293, 431, 267, 191, 329,
	495, 204, 420, 221, 211, 197, 443, 467, 218, 423,
	0, 0, 504, 199, 465, 440, 350, 290, 291, 198,
	0, 404, 243, 265, 233, 370, 462, 463, 231, 505,
	208, 484, 201, 0, 483, 363, 458, 466, 351, 341,
	200, 464, 349, 340, 296, 315, 316, 254, 276, 398,
	334, 399, 277, 359, 358, 360, 194, 476, 0, 195,
	0, 437, 477, 506, 214, 215, 216, 0, 253, 257,
	264, 266, 272, 273, 280, 327, 374, 397, 395, 401,
	0, 453, 470, 480, 487, 493, 494, 496, 497, 498,
	499, 500, 501, 362, 279, 433, 295, 332, 0, 0,
	380, 413, 219, 474, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 525, 342, 425, 471, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 86,
	402, 262, 503, 482, 478, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 236, 251, 259, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 407, 415, 416, 417,
	418, 419, 421, 422, 427, 428, 429, 430, 438, 442,
	460, 461, 473, 486, 491, 271, 468, 492, 0, 337,
	0, 0, 339, 255, 274, 285, 0, 481, 439, 207,
	409, 263, 228, 0, 0, 196, 225, 210, 234, 249,
	252, 289, 348, 355, 384, 388, 268, 246, 223, 406,
	220, 424, 445, 446, 447, 449, 352, 241, 387, 0,
	1347, 335, 451, 452, 281, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 1349, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 326, 242, 0, 0, 385, 0, 193, 0, 426,
	229, 336, 333, 457, 256, 248, 244, 227, 282, 343,
	383, 444, 377, 0, 330, 0, 0, 435, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 368, 436, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	311, 320, 319, 300, 301, 303, 305, 310, 317, 323,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 454,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 1174, 0, 1175, 1176, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 232, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 408, 414, 0, 0, 0,
	230, 0, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 0, 0, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 0, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 0,
	0, 380, 413, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 0, 187, 202, 328,
	0, 402, 262, 503, 482, 478, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 0, 0, 339, 255, 274, 285, 0, 481, 439,
	207, 409, 263, 228, 0, 0, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	0, 353, 335, 451, 452, 281, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 326, 242, 0, 0, 385, 0, 193, 0,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 0, 330, 0, 0, 435, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 436,
	260, 0, 0, 0, 0, 184, 185, 186, 1289, 1292,
	0, 0, 0, 0, 1288, 1291, 0, 0, 217, 1287,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 240, 286, 247, 239,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 0, 335, 451, 452, 281, 353, 0, 0,
	0, 78, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	0, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 87, 0,
	1328, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	357, 232, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 294, 188, 205, 0,
	0, 367, 408, 414, 0, 0, 0, 230, 0, 412,
	381, 472, 213, 258, 405, 386, 410, 393, 261, 0,
	0, 411, 331, 459, 400, 469, 489, 490, 238, 361,
	479, 448, 485, 502, 206, 235, 375, 441, 475, 432,
	354, 455, 456, 293, 431, 267, 191, 329, 495, 204,
	420, 221, 211, 197, 443, 467, 218, 423, 0, 0,
	504, 199, 465, 440, 350, 290, 291, 198, 0, 404,
	243, 265, 233, 370, 462, 463, 231, 505, 208, 484,
	201, 0, 483, 363, 458, 466, 351, 341, 200, 464,
	349, 340, 296, 315, 316, 254, 276, 398, 334, 399,
	277, 359, 358, 360, 194, 476, 0, 195, 0, 437,
	477, 506, 214, 215, 216, 0, 253, 257, 264, 266,
	272, 273, 280, 327, 374, 397, 395, 401, 0, 453,
	470, 480, 487, 493, 494, 496, 497, 498, 499, 500,
	501, 362, 279, 433, 295, 332, 0, 0, 380, 413,
	219, 474, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 342, 425, 471, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 0, 187, 202, 328, 86, 402, 262,
	503, 482, 478, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 236, 251, 259, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 407, 415, 416, 417, 418, 419,
	421, 422, 427, 428, 429, 430, 438, 442, 460, 461,
	473, 486, 491, 271, 468, 492, 0, 337, 0, 0,
	339, 255, 274, 285, 0, 481, 439, 207, 409, 263,
	228, 0, 0, 196, 225, 210, 234, 249, 252, 289,
	348, 355, 384, 388, 268, 246, 223, 406, 220, 424,
	445, 446, 447, 449, 352, 241, 387, 0, 353, 335,
	451, 452, 281, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 326,
	242, 0, 0, 385, 0, 193, 0, 426, 229, 336,
	333, 457, 256, 248, 244, 227, 282, 343, 383, 444,
	377, 0, 330, 0, 0, 435, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 226, 192, 368, 436, 260, 0, 87,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 311, 320,
	319, 300, 301, 303, 305, 310, 317, 323, 0, 0,
	0, 0, 0, 240, 286, 247, 239, 454, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 232, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 408, 414, 0, 0, 0, 230, 0,
	412, 381, 472, 213, 258, 405, 386, 410, 393, 261,
	0, 0, 411, 331, 459, 400, 469, 489, 490, 238,
	361, 479, 448, 485, 502, 206, 235, 375, 441, 475,
	432, 354, 455, 456, 293, 431, 267, 191, 329, 495,
	204, 420, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 350, 290, 291, 198, 0,
	404, 243, 265, 233, 370, 462, 463, 231, 505, 208,
	484, 201, 0, 483, 363, 458, 466, 351, 341, 200,
	464, 349, 340, 296, 315, 316, 254, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 253, 257, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 362, 279, 433, 295, 332, 0, 0, 380,
	413, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 342, 425, 471, 297, 309, 312,
	302, 321, 0, 322, 298, 299, 304, 306, 307, 308,
	313, 314, 318, 324, 0, 187, 202, 328, 0, 402,
	262, 503, 482, 478, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 236, 251, 259, 270, 275, 278, 283,
	284, 287, 292, 338, 344, 345, 346, 347, 364, 365,
	366, 369, 372, 373, 376, 378, 379, 382, 389, 390,
	391, 392, 394, 396, 403, 407, 415, 416, 417, 418,
	419, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 271, 468, 492, 0, 337, 0,
	0, 339, 255, 274, 285, 0, 481, 439, 207, 409,
	263, 228, 0, 0, 196, 225, 210, 234, 249, 252,
	289, 348, 355, 384, 388, 268, 246, 223, 406, 220,
	424, 445, 446, 447, 449, 352, 241, 387, 0, 353,
	335, 451, 452, 281, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	1783, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	326, 242, 0, 0, 385, 0, 193, 0, 426, 229,
	336, 333, 457, 256, 248, 244, 227, 282, 343, 383,
	444, 377, 0, 330, 0, 0, 435, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 436, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 1521, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 357, 232, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 294, 188,
	205, 0, 0, 367, 408, 414, 0, 0, 0, 230,
	0, 412, 381, 472, 213, 258, 405, 386, 410, 393,
	261, 0, 1781, 411, 331, 459, 400, 469, 489, 490,
	238, 361, 479, 448, 485, 502, 206, 235, 375, 441,
	475, 432, 354, 455, 456, 293, 431, 267, 191, 329,
	495, 204, 420, 221, 211, 197, 443, 467, 218, 423,
	0, 0, 504, 199, 465, 440, 350, 290, 291, 198,
	0, 404, 243, 265, 233, 370, 462, 463, 231, 505,
	208, 484, 201, 0, 483, 363, 458, 466, 351, 341,
	200, 464, 349, 340, 296, 315, 316, 254, 276, 398,
	334, 399, 277, 359, 358, 360, 194, 476, 0, 195,
	0, 437, 477, 506, 214, 215, 216, 0, 253, 257,
	264, 266, 272, 273, 280, 327, 374, 397, 395, 401,
	0, 453, 470, 480, 487, 493, 494, 496, 497, 498,
	499, 500, 501, 362, 279, 433, 295, 332, 0, 0,
	380, 413, 219, 474, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 525, 342, 425, 471, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 0,
	402, 262, 503, 482, 478, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 236, 251, 259, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 407, 415, 416, 417,
	418, 419, 421, 422, 427, 428, 429, 430, 438, 442,
	460, 461, 473, 486, 491, 271, 468, 492, 0, 337,
	0, 0, 339, 255, 274, 285, 0, 481, 439, 207,
	409, 263, 228, 0, 0, 196, 225, 210, 234, 249,
	252, 289, 348, 355, 384, 388, 268, 246, 223, 406,
	220, 424, 445, 446, 447, 449, 352, 241, 387, 0,
	353, 335, 451, 452, 281, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 326, 242, 0, 0, 385, 0, 193, 0, 426,
	229, 336, 333, 457, 256, 248, 244, 227, 282, 343,
	383, 444, 377, 0, 330, 0, 0, 435, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 368, 436, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	311, 320, 319, 300, 301, 303, 305, 310, 317, 323,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 454,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 232, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 325, 969, 294,
	188, 205, 967, 0, 367, 408, 414, 0, 0, 0,
	230, 0, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 0, 0, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 0, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 0,
	0, 380, 413, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 0, 187, 202, 328,
	0, 402, 262, 503, 482, 478, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 0, 0, 339, 255, 274, 285, 0, 481, 439,
	207, 409, 263, 228, 0, 0, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	0, 353, 335, 451, 452, 281, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 1783, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 326, 242, 0, 0, 385, 0, 193, 0,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 0, 330, 0, 0, 435, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 436,
	260, 0, 0, 0, 0, 184, 185, 186, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 240, 286, 247, 239,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 1328, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 232, 0, 0, 0,
	0, 488, 0, 0, 0, 2862, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 408, 414, 0,
	0, 0, 230, 0, 412, 381, 472, 213, 258, 405,
	386, 410, 393, 261, 0, 0, 411, 331, 459, 400,
	469, 489, 490, 238, 361, 479, 448, 485, 502, 206,
	235, 375, 441, 475, 432, 354, 455, 456, 293, 431,
	267, 191, 329, 495, 204, 420, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 350,
	290, 291, 198, 0, 404, 243, 265, 233, 370, 462,
	463, 231, 505, 208, 484, 201, 0, 483, 363, 458,
	466, 351, 341, 200, 464, 349, 340, 296, 315, 316,
	254, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 253, 257, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 362, 279, 433, 295,
	332, 0, 0, 380, 413, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 342, 425,
	471, 297, 309, 312, 302, 321, 0, 322, 298, 299,
	304, 306, 307, 308, 313, 314, 318, 324, 0, 187,
	202, 328, 0, 402, 262, 503, 482, 478, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 338, 344, 345,
	346, 347, 364, 365, 366, 369, 372, 373, 376, 378,
	379, 382, 389, 390, 391, 392, 394, 396, 403, 407,
	415, 416, 417, 418, 419, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 271, 468,
	492, 0, 337, 0, 0, 339, 255, 274, 285, 0,
	481, 439, 207, 409, 263, 228, 0, 0, 196, 225,
	210, 234, 249, 252, 289, 348, 355, 384, 388, 268,
	246, 223, 406, 220, 424, 445, 446, 447, 449, 352,
	241, 387, 0, 353, 335, 451, 452, 281, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 326, 242, 0, 0, 385, 0,
	193, 0, 426, 229, 336, 333, 457, 256, 248, 244,
	227, 282, 343, 383, 444, 377, 0, 330, 0, 0,
	435, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 436, 260, 0, 0, 0, 0, 184, 185, 186,
	0, 2118, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 0, 0, 0, 0, 0, 240, 286,
	247, 239, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2119, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 357, 232, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 294, 188, 205, 0, 0, 367, 408, 414,
	0, 0, 0, 230, 0, 412, 381, 472, 213, 258,
	405, 386, 410, 393, 261, 0, 0, 411, 331, 459,
	400, 469, 489, 490, 238, 361, 479, 448, 485, 502,
	206, 235, 375, 441, 475, 432, 354, 455, 456, 293,
	431, 267, 191, 329, 495, 204, 420, 221, 211, 197,
	443, 467, 218, 423, 0, 0, 504, 199, 465, 440,
	350, 290, 291, 198, 0, 404, 243, 265, 233, 370,
	462, 463, 231, 505, 208, 484, 201, 0, 483, 363,
	458, 466, 351, 341, 200, 464, 349, 340, 296, 315,
	316, 254, 276, 398, 334, 399, 277, 359, 358, 360,
	194, 476, 0, 195, 0, 437, 477, 506, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 327,
	374, 397, 395, 401, 0, 453, 470, 480, 487, 493,
	494, 496, 497, 498, 499, 500, 501, 362, 279, 433,
	295, 332, 0, 0, 380, 413, 219, 474, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 342,
	425, 471, 297, 309, 312, 302, 321, 0, 322, 298,
	299, 304, 306, 307, 308, 313, 314, 318, 324, 0,
	187, 202, 328, 0, 402, 262, 503, 482, 478, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 236, 251,
	259, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	407, 415, 416, 417, 418, 419, 421, 422, 427, 428,
	429, 430, 438, 442, 460, 461, 473, 486, 491, 271,
	468, 492, 0, 337, 0, 0, 339, 255, 274, 285,
	0, 481, 439, 207, 409, 263, 228, 0, 0, 196,
	225, 210, 234, 249, 252, 289, 348, 355, 384, 388,
	268, 246, 223, 406, 220, 424, 445, 446, 447, 449,
	352, 241, 387, 0, 353, 335, 451, 452, 281, 450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 326, 242, 0, 0, 385,
	0, 193, 0, 426, 229, 336, 333, 457, 256, 248,
	244, 227, 282, 343, 383, 444, 377, 0, 330, 0,
	0, 435, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 226,
	192, 368, 436, 260, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 2103, 0, 0, 0, 2104, 0,
	0, 217, 0, 224, 311, 320, 319, 300, 301, 303,
	305, 310, 317, 323, 0, 0, 0, 0, 0, 240,
	286, 247, 239, 454, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 232, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 294, 188, 205, 0, 0, 367, 408,
	414, 0, 0, 0, 230, 0, 412, 381, 472, 213,
	258, 405, 386, 410, 393, 261, 0, 0, 411, 331,
	459, 400, 469, 489, 490, 238, 361, 479, 448, 485,
	502, 206, 235, 375, 441, 475, 432, 354, 455, 456,
	293, 431, 267, 191, 329, 495, 204, 420, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 350, 290, 291, 198, 0, 404, 243, 265, 233,
	370, 462, 463, 231, 505, 208, 484, 201, 0, 483,
	363, 458, 466, 351, 341, 200, 464, 349, 340, 296,
	315, 316, 254, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 253, 257, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 362, 279,
	433, 295, 332, 0, 0, 380, 413, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	342, 425, 471, 297, 309, 312, 302, 321, 0, 322,
	298, 299, 304, 306, 307, 308, 313, 314, 318, 324,
	0, 187, 202, 328, 0, 402, 262, 503, 482, 478,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 338,
	344, 345, 346, 347, 364, 365, 366, 369, 372, 373,
	376, 378, 379, 382, 389, 390, 391, 392, 394, 396,
	403, 407, 415, 416, 417, 418, 419, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	271, 468, 492, 0, 337, 0, 0, 339, 255, 274,
	285, 0, 481, 439, 207, 409, 263, 228, 0, 0,
	196, 225, 210, 234, 249, 252, 289, 348, 355, 384,
	388, 268, 246, 223, 406, 220, 424, 445, 446, 447,
	449, 352, 241, 387, 0, 353, 335, 451, 452, 281,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 1372, 0, 0, 0, 326, 242, 0, 0,
	385, 0, 193, 0, 426, 229, 336, 333, 457, 256,
	248, 244, 227, 282, 343, 383, 444, 377, 0, 330,
	0, 0, 435, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 436, 260, 0, 0, 0, 0, 184,
	185, 186, 0, 1371, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 311, 320, 319, 300, 301,
	303, 305, 310, 317, 323, 0, 0, 0, 0, 0,
	240, 286, 247, 239, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 2568,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 0, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	0, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 353, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	0, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	357, 232, 0, 0, 0, 0, 488, 0, 0, 0,
	2970, 0, 0, 0, 325, 0, 294, 188, 205, 0,
	0, 367, 408, 414, 0, 0, 0, 230, 0, 412,
	381, 472, 213, 258, 405, 386, 410, 393, 261, 0,
	0, 411, 331, 459, 400, 469, 489, 490, 238, 361,
	479, 448, 485, 502, 206, 235, 375, 441, 475, 432,
	354, 455, 456, 293, 431, 267, 191, 329, 495, 204,
	420, 221, 211, 197, 443, 467, 218, 423, 0, 0,
	504, 199, 465, 440, 350, 290, 291, 198, 0, 404,
	243, 265, 233, 370, 462, 463, 231, 505, 208, 484,
	201, 0, 483, 363, 458, 466, 351, 341, 200, 464,
	349, 340, 296, 315, 316, 254, 276, 398, 334, 399,
	277, 359, 358, 360, 194, 476, 0, 195, 0, 437,
	477, 506, 214, 215, 216, 0, 253, 257, 264, 266,
	272, 273, 280, 327, 374, 397, 395, 401, 0, 453,
	470, 480, 487, 493, 494, 496, 497, 498, 499, 500,
	501, 362, 279, 433, 295, 332, 0, 0, 380, 413,
	219, 474, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 342, 425, 471, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 0, 187, 202, 328, 0, 402, 262,
	503, 482, 478, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 236, 251, 259, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 407, 415, 416, 417, 418, 419,
	421, 422, 427, 428, 429, 430, 438, 442, 460, 461,
	473, 486, 491, 271, 468, 492, 0, 337, 0, 0,
	339, 255, 274, 285, 0, 481, 439, 207, 409, 263,
	228, 0, 0, 196, 225, 210, 234, 249, 252, 289,
	348, 355, 384, 388, 268, 246, 223, 406, 220, 424,
	445, 446, 447, 449, 352, 241, 387, 0, 353, 335,
	451, 452, 281, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 326,
	242, 0, 0, 385, 0, 193, 0, 426, 229, 336,
	333, 457, 256, 248, 244, 227, 282, 343, 383, 444,
	377, 0, 330, 0, 0, 435, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 226, 192, 368, 436, 260, 0, 0,
	0, 0, 184, 185, 186, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 311, 320,
	319, 300, 301, 303, 305, 310, 317, 323, 0, 0,
	0, 0, 0, 240, 286, 247, 239, 454, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 232, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 408, 414, 0, 0, 0, 230, 0,
	412, 381, 472, 213, 258, 405, 386, 410, 393, 261,
	0, 0, 411, 331, 459, 400, 469, 489, 490, 238,
	361, 479, 448, 485, 502, 206, 235, 375, 441, 475,
	432, 354, 455, 456, 293, 431, 267, 191, 329, 495,
	204, 420, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 350, 290, 291, 198, 0,
	404, 243, 265, 233, 370, 462, 463, 231, 505, 208,
	484, 201, 0, 483, 363, 458, 466, 351, 341, 200,
	464, 349, 340, 296, 315, 316, 254, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 253, 257, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 362, 279, 433, 295, 332, 0, 0, 380,
	413, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 342, 425, 471, 297, 309, 312,
	302, 321, 0, 322, 298, 299, 304, 306, 307, 308,
	313, 314, 318, 324, 0, 187, 202, 328, 0, 402,
	262, 503, 482, 478, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 236, 251, 259, 270, 275, 278, 283,
	284, 287, 292, 338, 344, 345, 346, 347, 364, 365,
	366, 369, 372, 373, 376, 378, 379, 382, 389, 390,
	391, 392, 394, 396, 403, 407, 415, 416, 417, 418,
	419, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 271, 468, 492, 0, 337, 0,
	0, 339, 255, 274, 285, 0, 481, 439, 207, 409,
	263, 228, 0, 0, 196, 225, 210, 234, 249, 252,
	289, 348, 355, 384, 388, 268, 246, 223, 406, 220,
	424, 445, 446, 447, 449, 352, 241, 387, 0, 353,
	335, 451, 452, 281, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	326, 242, 0, 0, 385, 0, 193, 0, 426, 229,
	336, 333, 457, 256, 248, 244, 227, 282, 343, 383,
	444, 377, 0, 330, 0, 0, 435, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 436, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 357, 232, 0, 0, 0, 0, 488, 0,
	0, 0, 2862, 0, 0, 0, 325, 0, 294, 188,
	205, 0, 0, 367, 408, 414, 0, 0, 0, 230,
	0, 412, 381, 472, 213, 258, 405, 386, 410, 393,
	261, 0, 0, 411, 331, 459, 400, 469, 489, 490,
	238, 361, 479, 448, 485, 502, 206, 235, 375, 441,
	475, 432, 354, 455, 456, 293, 431, 267, 191, 329,
	495, 204, 420, 221, 211, 197, 443, 467, 218, 423,
	0, 0, 504, 199, 465, 440, 350, 290, 291, 198,
	0, 404, 243, 265, 233, 370, 462, 463, 231, 505,
	208, 484, 201, 0, 483, 363, 458, 466, 351, 341,
	200, 464, 349, 340, 296, 315, 316, 254, 276, 398,
	334, 399, 277, 359, 358, 360, 194, 476, 0, 195,
	0, 437, 477, 506, 214, 215, 216, 0, 253, 257,
	264, 266, 272, 273, 280, 327, 374, 397, 395, 401,
	0, 453, 470, 480, 487, 493, 494, 496, 497, 498,
	499, 500, 501, 362, 279, 433, 295, 332, 0, 0,
	380, 413, 219, 474, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 525, 342, 425, 471, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 0,
	402, 262, 503, 482, 478, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 236, 251, 259, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 407, 415, 416, 417,
	418, 419, 421, 422, 427, 428, 429, 430, 438, 442,
	460, 461, 473, 486, 491, 271, 468, 492, 0, 337,
	0, 0, 339, 255, 274, 285, 0, 481, 439, 207,
	409, 263, 228, 0, 0, 196, 225, 210, 234, 249,
	252, 289, 348, 355, 384, 388, 268, 246, 223, 406,
	220, 424, 445, 446, 447, 449, 352, 241, 387, 0,
	353, 335, 451, 452, 281, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 326, 242, 0, 0, 385, 0, 193, 0, 426,
	229, 336, 333, 457, 256, 248, 244, 227, 282, 343,
	383, 444, 377, 0, 330, 0, 0, 435, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 368, 436, 260,
	0, 87, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	311, 320, 319, 300, 301, 303, 305, 310, 317, 323,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 454,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 232, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 408, 414, 0, 0, 0,
	230, 0, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 0, 0, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 0, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 0,
	0, 380, 413, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 0, 187, 202, 328,
	0, 402, 262, 503, 482, 478, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 0, 0, 339, 255, 274, 285, 0, 481, 439,
	207, 409, 263, 228, 0, 0, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	0, 353, 335, 451, 452, 281, 450, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 326, 242, 0, 0, 385, 0, 193, 0,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 0, 330, 0, 0, 435, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 436,
	260, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 240, 286, 247, 239,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 232, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 408, 414, 0,
	0, 0, 230, 0, 412, 381, 472, 213, 258, 405,
	386, 410, 393, 261, 0, 0, 411, 331, 459, 400,
	469, 489, 490, 238, 361, 479, 448, 485, 502, 206,
	235, 375, 441, 475, 432, 354, 455, 456, 293, 431,
	267, 191, 329, 495, 204, 420, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 350,
	290, 291, 198, 0, 404, 243, 265, 233, 370, 462,
	463, 231, 505, 208, 484, 201, 0, 483, 363, 458,
	466, 351, 341, 200, 464, 349, 340, 296, 315, 316,
	254, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 253, 257, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 362, 279, 433, 295,
	332, 0, 0, 380, 413, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 342, 425,
	471, 297, 309, 312, 302, 321, 0, 322, 298, 299,
	304, 306, 307, 308, 313, 314, 318, 324, 0, 187,
	202, 328, 0, 402, 262, 503, 482, 478, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 338, 344, 345,
	346, 347, 364, 365, 366, 369, 372, 373, 376, 378,
	379, 382, 389, 390, 391, 392, 394, 396, 403, 407,
	415, 416, 417, 418, 419, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 271, 468,
	492, 0, 337, 0, 0, 339, 255, 274, 285, 0,
	481, 439, 207, 409, 263, 228, 0, 0, 196, 225,
	210, 234, 249, 252, 289, 348, 355, 384, 388, 268,
	246, 223, 406, 220, 424, 445, 446, 447, 449, 352,
	241, 387, 0, 353, 335, 451, 452, 281, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 326, 242, 0, 0, 385, 0,
	193, 0, 426, 229, 336, 333, 457, 256, 248, 244,
	227, 282, 343, 383, 444, 377, 0, 330, 0, 0,
	435, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 436, 260, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 0, 0, 0, 0, 0, 240, 286,
	247, 239, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 357, 232, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 294, 188, 205, 0, 0, 367, 408, 414,
	0, 0, 0, 230, 0, 412, 381, 472, 213, 258,
	405, 386, 410, 393, 261, 0, 0, 411, 331, 459,
	400, 469, 489, 490, 238, 361, 479, 448, 485, 502,
	206, 235, 375, 441, 475, 432, 354, 455, 456, 293,
	431, 267, 191, 329, 495, 204, 420, 221, 211, 197,
	443, 467, 218, 423, 0, 0, 504, 199, 465, 440,
	350, 290, 291, 198, 0, 404, 243, 265, 233, 370,
	462, 463, 231, 505, 208, 484, 201, 0, 483, 363,
	458, 466, 351, 341, 200, 464, 349, 340, 296, 315,
	316, 254, 276, 398, 334, 399, 277, 359, 358, 360,
	194, 476, 0, 195, 0, 437, 477, 506, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 327,
	374, 397, 395, 401, 0, 453, 470, 480, 487, 493,
	494, 496, 497, 498, 499, 500, 501, 362, 279, 433,
	295, 332, 0, 0, 380, 413, 219, 474, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 342,
	425, 471, 297, 309, 312, 302, 321, 0, 322, 298,
	299, 304, 306, 307, 308, 313, 314, 318, 324, 0,
	187, 202, 328, 0, 402, 262, 503, 482, 478, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 236, 251,
	259, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	407, 415, 416, 417, 418, 419, 421, 422, 427, 428,
	429, 430, 438, 442, 460, 461, 473, 486, 491, 271,
	468, 492, 0, 337, 0, 0, 339, 255, 274, 285,
	0, 481, 439, 207, 409, 263, 228, 0, 0, 196,
	225, 210, 234, 249, 252, 289, 348, 355, 384, 388,
	268, 246, 223, 406, 220, 424, 445, 446, 447, 449,
	352, 241, 387, 0, 353, 335, 451, 452, 281, 450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 326, 242, 0, 0, 385,
	0, 193, 0, 426, 229, 336, 333, 457, 256, 248,
	244, 227, 282, 343, 383, 444, 377, 0, 330, 0,
	0, 435, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 226,
	192, 368, 436, 260, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 311, 320, 319, 300, 301, 303,
	305, 310, 317, 323, 0, 0, 0, 0, 0, 240,
	286, 247, 239, 454, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 232, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 294, 188, 205, 0, 0, 367, 408,
	414, 0, 0, 0, 230, 0, 412, 381, 472, 213,
	258, 405, 386, 410, 393, 261, 0, 0, 411, 331,
	459, 400, 469, 489, 490, 238, 361, 479, 448, 485,
	502, 206, 235, 375, 441, 475, 432, 354, 455, 456,
	293, 431, 267, 191, 329, 495, 204, 420, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 350, 290, 291, 198, 0, 404, 243, 265, 233,
	370, 462, 463, 231, 505, 208, 484, 201, 0, 483,
	363, 458, 466, 351, 341, 200, 464, 349, 340, 296,
	315, 316, 254, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 253, 257, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 362, 279,
	433, 295, 332, 0, 0, 380, 413, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	342, 425, 471, 297, 309, 312, 302, 321, 0, 322,
	298, 299, 304, 306, 307, 308, 313, 314, 318, 324,
	0, 187, 202, 328, 1615, 402, 262, 503, 482, 478,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 338,
	344, 345, 346, 347, 364, 365, 366, 369, 372, 373,
	376, 378, 379, 382, 389, 390, 391, 392, 394, 396,
	403, 407, 415, 416, 417, 418, 419, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	271, 468, 492, 0, 337, 0, 0, 339, 255, 274,
	285, 0, 481, 439, 207, 409, 263, 228, 0, 0,
	196, 225, 210, 234, 249, 252, 289, 348, 355, 384,
	388, 268, 246, 223, 406, 220, 424, 445, 446, 447,
	449, 352, 241, 387, 0, 353, 335, 451, 452, 281,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 1493, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 326, 242, 0, 0,
	385, 0, 193, 0, 426, 229, 336, 333, 457, 256,
	248, 244, 227, 282, 343, 383, 444, 377, 0, 330,
	0, 0, 435, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 436, 260, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 311, 320, 319, 300, 301,
	303, 305, 310, 317, 323, 0, 0, 0, 0, 0,
	240, 286, 247, 239, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 1491, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 0, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	0, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 353, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 1489, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	0, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	357, 232, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 294, 188, 205, 0,
	0, 367, 408, 414, 0, 0, 0, 230, 0, 412,
	381, 472, 213, 258, 405, 386, 410, 393, 261, 0,
	0, 411, 331, 459, 400, 469, 489, 490, 238, 361,
	479, 448, 485, 502, 206, 235, 375, 441, 475, 432,
	354, 455, 456, 293, 431, 267, 191, 329, 495, 204,
	420, 221, 211, 197, 443, 467, 218, 423, 0, 0,
	504, 199, 465, 440, 350, 290, 291, 198, 0, 404,
	243, 265, 233, 370, 462, 463, 231, 505, 208, 484,
	201, 0, 483, 363, 458, 466, 351, 341, 200, 464,
	349, 340, 296, 315, 316, 254, 276, 398, 334, 399,
	277, 359, 358, 360, 194, 476, 0, 195, 0, 437,
	477, 506, 214, 215, 216, 0, 253, 257, 264, 266,
	272, 273, 280, 327, 374, 397, 395, 401, 0, 453,
	470, 480, 487, 493, 494, 496, 497, 498, 499, 500,
	501, 362, 279, 433, 295, 332, 0, 0, 380, 413,
	219, 474, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 342, 425, 471, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 0, 187, 202, 328, 0, 402, 262,
	503, 482, 478, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 236, 251, 259, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 407, 415, 416, 417, 418, 419,
	421, 422, 427, 428, 429, 430, 438, 442, 460, 461,
	473, 486, 491, 271, 468, 492, 0, 337, 0, 0,
	339, 255, 274, 285, 0, 481, 439, 207, 409, 263,
	228, 0, 0, 196, 225, 210, 234, 249, 252, 289,
	348, 355, 384, 388, 268, 246, 223, 406, 220, 424,
	445, 446, 447, 449, 352, 241, 387, 0, 353, 335,
	451, 452, 281, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 1487, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 326,
	242, 0, 0, 385, 0, 193, 0, 426, 229, 336,
	333, 457, 256, 248, 244, 227, 282, 343, 383, 444,
	377, 0, 330, 0, 0, 435, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 226, 192, 368, 436, 260, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 311, 320,
	319, 300, 301, 303, 305, 310, 317, 323, 0, 0,
	0, 0, 0, 240, 286, 247, 239, 454, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 232, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 408, 414, 0, 0, 0, 230, 0,
	412, 381, 472, 213, 258, 405, 386, 410, 393, 261,
	0, 0, 411, 331, 459, 400, 469, 489, 490, 238,
	361, 479, 448, 485, 502, 206, 235, 375, 441, 475,
	432, 354, 455, 456, 293, 431, 267, 191, 329, 495,
	204, 420, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 350, 290, 291, 198, 0,
	404, 243, 265, 233, 370, 462, 463, 231, 505, 208,
	484, 201, 0, 483, 363, 458, 466, 351, 341, 200,
	464, 349, 340, 296, 315, 316, 254, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 253, 257, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 362, 279, 433, 295, 332, 0, 0, 380,
	413, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 342, 425, 471, 297, 309, 312,
	302, 321, 0, 322, 298, 299, 304, 306, 307, 308,
	313, 314, 318, 324, 0, 187, 202, 328, 0, 402,
	262, 503, 482, 478, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 236, 251, 259, 270, 275, 278, 283,
	284, 287, 292, 338, 344, 345, 346, 347, 364, 365,
	366, 369, 372, 373, 376, 378, 379, 382, 389, 390,
	391, 392, 394, 396, 403, 407, 415, 416, 417, 418,
	419, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 271, 468, 492, 0, 337, 0,
	0, 339, 255, 274, 285, 0, 481, 439, 207, 409,
	263, 228, 0, 0, 196, 225, 210, 234, 249, 252,
	289, 348, 355, 384, 388, 268, 246, 223, 406, 220,
	424, 445, 446, 447, 449, 352, 241, 387, 0, 353,
	335, 451, 452, 281, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 1485, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	326, 242, 0, 0, 385, 0, 193, 0, 426, 229,
	336, 333, 457, 256, 248, 244, 227, 282, 343, 383,
	444, 377, 0, 330, 0, 0, 435, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 436, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 357, 232, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 294, 188,
	205, 0, 0, 367, 408, 414, 0, 0, 0, 230,
	0, 412, 381, 472, 213, 258, 405, 386, 410, 393,
	261, 0, 0, 411, 331, 459, 400, 469, 489, 490,
	238, 361, 479, 448, 485, 502, 206, 235, 375, 441,
	475, 432, 354, 455, 456, 293, 431, 267, 191, 329,
	495, 204, 420, 221, 211, 197, 443, 467, 218, 423,
	0, 0, 504, 199, 465, 440, 350, 290, 291, 198,
	0, 404, 243, 265, 233, 370, 462, 463, 231, 505,
	208, 484, 201, 0, 483, 363, 458, 466, 351, 341,
	200, 464, 349, 340, 296, 315, 316, 254, 276, 398,
	334, 399, 277, 359, 358, 360, 194, 476, 0, 195,
	0, 437, 477, 506, 214, 215, 216, 0, 253, 257,
	264, 266, 272, 273, 280, 327, 374, 397, 395, 401,
	0, 453, 470, 480, 487, 493, 494, 496, 497, 498,
	499, 500, 501, 362, 279, 433, 295, 332, 0, 0,
	380, 413, 219, 474, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 525, 342, 425, 471, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 0,
	402, 262, 503, 482, 478, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 236, 251, 259, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 364,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 407, 415, 416, 417,
	418, 419, 421, 422, 427, 428, 429, 430, 438, 442,
	460, 461, 473, 486, 491, 271, 468, 492, 0, 337,
	0, 0, 339, 255, 274, 285, 0, 481, 439, 207,
	409, 263, 228, 0, 0, 196, 225, 210, 234, 249,
	252, 289, 348, 355, 384, 388, 268, 246, 223, 406,
	220, 424, 445, 446, 447, 449, 352, 241, 387, 0,
	353, 335, 451, 452, 281, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 1481,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 326, 242, 0, 0, 385, 0, 193, 0, 426,
	229, 336, 333, 457, 256, 248, 244, 227, 282, 343,
	383, 444, 377, 0, 330, 0, 0, 435, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 368, 436, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	311, 320, 319, 300, 301, 303, 305, 310, 317, 323,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 454,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 232, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 408, 414, 0, 0, 0,
	230, 0, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 0, 0, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 0, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 0,
	0, 380, 413, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 0, 187, 202, 328,
	0, 402, 262, 503, 482, 478, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 0, 0, 339, 255, 274, 285, 0, 481, 439,
	207, 409, 263, 228, 0, 0, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	0, 353, 335, 451, 452, 281, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	1479, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 326, 242, 0, 0, 385, 0, 193, 0,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 0, 330, 0, 0, 435, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 436,
	260, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 240, 286, 247, 239,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1477, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 232, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 408, 414, 0,
	0, 0, 230, 0, 412, 381, 472, 213, 258, 405,
	386, 410, 393, 261, 0, 0, 411, 331, 459, 400,
	469, 489, 490, 238, 361, 479, 448, 485, 502, 206,
	235, 375, 441, 475, 432, 354, 455, 456, 293, 431,
	267, 191, 329, 495, 204, 420, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 350,
	290, 291, 198, 0, 404, 243, 265, 233, 370, 462,
	463, 231, 505, 208, 484, 201, 0, 483, 363, 458,
	466, 351, 341, 200, 464, 349, 340, 296, 315, 316,
	254, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 253, 257, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 362, 279, 433, 295,
	332, 0, 0, 380, 413, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 342, 425,
	471, 297, 309, 312, 302, 321, 0, 322, 298, 299,
	304, 306, 307, 308, 313, 314, 318, 324, 0, 187,
	202, 328, 0, 402, 262, 503, 482, 478, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 338, 344, 345,
	346, 347, 364, 365, 366, 369, 372, 373, 376, 378,
	379, 382, 389, 390, 391, 392, 394, 396, 403, 407,
	415, 416, 417, 418, 419, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 271, 468,
	492, 0, 337, 0, 0, 339, 255, 274, 285, 0,
	481, 439, 207, 409, 263, 228, 0, 0, 196, 225,
	210, 234, 249, 252, 289, 348, 355, 384, 388, 268,
	246, 223, 406, 220, 424, 445, 446, 447, 449, 352,
	241, 387, 0, 353, 335, 451, 452, 281, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 326, 242, 0, 0, 385, 0,
	193, 0, 426, 229, 336, 333, 457, 256, 248, 244,
	227, 282, 343, 383, 444, 377, 0, 330, 0, 0,
	435, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 226, 192,
	368, 436, 260, 0, 1454, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 311, 320, 319, 300, 301, 303, 305,
	310, 317, 323, 0, 0, 0, 0, 0, 240, 286,
	247, 239, 454, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 357, 232, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 0, 0, 0,
	325, 0, 294, 188, 205, 0, 0, 367, 408, 414,
	0, 0, 0, 230, 0, 412, 381, 472, 213, 258,
	405, 386, 410, 393, 261, 0, 0, 411, 331, 459,
	400, 469, 489, 490, 238, 361, 479, 448, 485, 502,
	206, 235, 375, 441, 475, 432, 354, 455, 456, 293,
	431, 267, 191, 329, 495, 204, 420, 221, 211, 197,
	443, 467, 218, 423, 0, 0, 504, 199, 465, 440,
	350, 290, 291, 198, 0, 404, 243, 265, 233, 370,
	462, 463, 231, 505, 208, 484, 201, 0, 483, 363,
	458, 466, 351, 341, 200, 464, 349, 340, 296, 315,
	316, 254, 276, 398, 334, 399, 277, 359, 358, 360,
	194, 476, 0, 195, 0, 437, 477, 506, 214, 215,
	216, 0, 253, 257, 264, 266, 272, 273, 280, 327,
	374, 397, 395, 401, 0, 453, 470, 480, 487, 493,
	494, 496, 497, 498, 499, 500, 501, 362, 279, 433,
	295, 332, 0, 0, 380, 413, 219, 474, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 508, 509, 510, 511, 512, 513, 514, 515, 516,
	517, 518, 519, 520, 521, 522, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 342,
	425, 471, 297, 309, 312, 302, 321, 0, 322, 298,
	299, 304, 306, 307, 308, 313, 314, 318, 324, 0,
	187, 202, 328, 0, 402, 262, 503, 482, 478, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 236, 251,
	259, 270, 275, 278, 283, 284, 287, 292, 338, 344,
	345, 346, 347, 364, 365, 366, 369, 372, 373, 376,
	378, 379, 382, 389, 390, 391, 392, 394, 396, 403,
	407, 415, 416, 417, 418, 419, 421, 422, 427, 428,
	429, 430, 438, 442, 460, 461, 473, 486, 491, 271,
	468, 492, 0, 337, 0, 0, 339, 255, 274, 285,
	0, 481, 439, 207, 409, 263, 228, 0, 0, 196,
	225, 210, 234, 249, 252, 289, 348, 355, 384, 388,
	268, 246, 223, 406, 220, 424, 445, 446, 447, 449,
	352, 241, 387, 0, 353, 335, 451, 452, 281, 450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 0, 1356,
	245, 0, 0, 0, 0, 326, 242, 0, 0, 385,
	0, 193, 0, 426, 229, 336, 333, 457, 256, 248,
	244, 227, 282, 343, 383, 444, 377, 0, 330, 0,
	0, 435, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 226,
	192, 368, 436, 260, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 311, 320, 319, 300, 301, 303,
	305, 310, 317, 323, 0, 0, 0, 0, 0, 240,
	286, 247, 239, 454, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 357, 232, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 325, 0, 294, 188, 205, 0, 0, 367, 408,
	414, 0, 0, 0, 230, 0, 412, 381, 472, 213,
	258, 405, 386, 410, 393, 261, 0, 0, 411, 331,
	459, 400, 469, 489, 490, 238, 361, 479, 448, 485,
	502, 206, 235, 375, 441, 475, 432, 354, 455, 456,
	293, 431, 267, 191, 329, 495, 204, 420, 221, 211,
	197, 443, 467, 218, 423, 0, 0, 504, 199, 465,
	440, 350, 290, 291, 198, 0, 404, 243, 265, 233,
	370, 462, 463, 231, 505, 208, 484, 201, 0, 483,
	363, 458, 466, 351, 341, 200, 464, 349, 340, 296,
	315, 316, 254, 276, 398, 334, 399, 277, 359, 358,
	360, 194, 476, 0, 195, 0, 437, 477, 506, 214,
	215, 216, 0, 253, 257, 264, 266, 272, 273, 280,
	327, 374, 397, 395, 401, 0, 453, 470, 480, 487,
	493, 494, 496, 497, 498, 499, 500, 501, 362, 279,
	433, 295, 332, 0, 0, 380, 413, 219, 474, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 508, 509, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	342, 425, 471, 297, 309, 312, 302, 321, 0, 322,
	298, 299, 304, 306, 307, 308, 313, 314, 318, 324,
	0, 187, 202, 328, 0, 402, 262, 503, 482, 478,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 236,
	251, 259, 270, 275, 278, 283, 284, 287, 292, 338,
	344, 345, 346, 347, 364, 365, 366, 369, 372, 373,
	376, 378, 379, 382, 389, 390, 391, 392, 394, 396,
	403, 407, 415, 416, 417, 418, 419, 421, 422, 427,
	428, 429, 430, 438, 442, 460, 461, 473, 486, 491,
	271, 468, 492, 0, 337, 0, 0, 339, 255, 274,
	285, 0, 481, 439, 207, 409, 263, 228, 0, 0,
	196, 225, 210, 234, 249, 252, 289, 348, 355, 384,
	388, 268, 246, 223, 406, 220, 424, 445, 446, 447,
	449, 352, 241, 387, 0, 353, 335, 451, 452, 281,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 326, 242, 0, 0,
	385, 0, 193, 0, 426, 229, 336, 333, 457, 256,
	248, 244, 227, 282, 343, 383, 444, 377, 0, 330,
	0, 0, 435, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	226, 192, 368, 436, 260, 0, 0, 0, 0, 184,
	185, 186, 0, 1151, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 311, 320, 319, 300, 301,
	303, 305, 310, 317, 323, 0, 0, 0, 0, 0,
	240, 286, 247, 239, 454, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 357, 232,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 325, 0, 294, 188, 205, 0, 0, 367,
	408, 414, 0, 0, 0, 230, 0, 412, 381, 472,
	213, 258, 405, 386, 410, 393, 261, 0, 0, 411,
	331, 459, 400, 469, 489, 490, 238, 361, 479, 448,
	485, 502, 206, 235, 375, 441, 475, 432, 354, 455,
	456, 293, 431, 267, 191, 329, 495, 204, 420, 221,
	211, 197, 443, 467, 218, 423, 0, 0, 504, 199,
	465, 440, 350, 290, 291, 198, 0, 404, 243, 265,
	233, 370, 462, 463, 231, 505, 208, 484, 201, 0,
	483, 363, 458, 466, 351, 341, 200, 464, 349, 340,
	296, 315, 316, 254, 276, 398, 334, 399, 277, 359,
	358, 360, 194, 476, 0, 195, 0, 437, 477, 506,
	214, 215, 216, 0, 253, 257, 264, 266, 272, 273,
	280, 327, 374, 397, 395, 401, 0, 453, 470, 480,
	487, 493, 494, 496, 497, 498, 499, 500, 501, 362,
	279, 433, 295, 332, 0, 0, 380, 413, 219, 474,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 508, 509, 510, 511, 512, 513, 514,
	515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 342, 425, 471, 297, 309, 312, 302, 321, 0,
	322, 298, 299, 304, 306, 307, 308, 313, 314, 318,
	324, 0, 187, 202, 328, 0, 402, 262, 503, 482,
	478, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	236, 251, 259, 270, 275, 278, 283, 284, 287, 292,
	338, 344, 345, 346, 347, 364, 365, 366, 369, 372,
	373, 376, 378, 379, 382, 389, 390, 391, 392, 394,
	396, 403, 407, 415, 416, 417, 418, 419, 421, 422,
	427, 428, 429, 430, 438, 442, 460, 461, 473, 486,
	491, 271, 468, 492, 0, 337, 0, 0, 339, 255,
	274, 285, 0, 481, 439, 207, 409, 263, 228, 0,
	0, 196, 225, 210, 234, 249, 252, 289, 348, 355,
	384, 388, 268, 246, 223, 406, 220, 424, 445, 446,
	447, 449, 352, 241, 387, 0, 353, 335, 451, 452,
	281, 450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 326, 242, 0,
	0, 385, 0, 193, 0, 426, 229, 336, 333, 457,
	256, 248, 244, 227, 282, 343, 383, 444, 377, 0,
	330, 0, 0, 435, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 226, 192, 368, 436, 260, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 311, 320, 319, 300,
	301, 303, 305, 310, 317, 323, 0, 0, 0, 0,
	0, 240, 286, 247, 239, 454, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 0, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 0, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	0, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 353, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	0, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 581, 0, 269, 0,
	357, 232, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 0, 0, 0, 325, 0, 294, 188, 205, 0,
	0, 367, 408, 414, 0, 0, 0, 230, 0, 412,
	381, 472, 213, 258, 405, 386, 410, 393, 261, 0,
	0, 411, 331, 459, 400, 469, 489, 490, 238, 361,
	479, 448, 485, 502, 206, 235, 375, 441, 475, 432,
	354, 455, 456, 293, 431, 267, 191, 329, 495, 204,
	420, 221, 211, 197, 443, 467, 218, 423, 0, 0,
	504, 199, 465, 440, 350, 290, 291, 198, 0, 404,
	243, 265, 233, 370, 462, 463, 231, 505, 208, 484,
	201, 0, 483, 363, 458, 466, 351, 341, 200, 464,
	349, 340, 296, 315, 316, 254, 276, 398, 334, 399,
	277, 359, 358, 360, 194, 476, 0, 195, 0, 437,
	477, 506, 214, 215, 216, 0, 253, 257, 264, 266,
	272, 273, 280, 327, 374, 397, 395, 401, 0, 453,
	470, 480, 487, 493, 494, 496, 497, 498, 499, 500,
	501, 362, 279, 433, 295, 332, 0, 0, 380, 413,
	219, 474, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 516, 517, 518, 519, 520, 521, 522,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 525, 342, 425, 471, 297, 309, 312, 302,
	321, 0, 322, 298, 299, 304, 306, 307, 308, 313,
	314, 318, 324, 0, 187, 202, 328, 0, 402, 262,
	503, 482, 478, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 236, 251, 259, 270, 275, 278, 283, 284,
	287, 292, 338, 344, 345, 346, 347, 364, 365, 366,
	369, 372, 373, 376, 378, 379, 382, 389, 390, 391,
	392, 394, 396, 403, 407, 415, 416, 417, 418, 419,
	421, 422, 427, 428, 429, 430, 438, 442, 460, 461,
	473, 486, 491, 580, 468, 492, 0, 337, 0, 0,
	339, 255, 274, 285, 0, 481, 439, 207, 409, 263,
	228, 0, 0, 196, 225, 210, 234, 249, 252, 289,
	348, 355, 384, 388, 268, 246, 223, 406, 220, 424,
	445, 446, 447, 449, 352, 241, 387, 0, 353, 335,
	451, 452, 281, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 326,
	242, 0, 0, 385, 0, 193, 0, 426, 229, 336,
	333, 457, 256, 248, 244, 227, 282, 343, 383, 444,
	377, 0, 330, 0, 0, 435, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 226, 192, 368, 436, 260, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 311, 320,
	319, 300, 301, 303, 305, 310, 317, 323, 0, 0,
	0, 0, 0, 240, 286, 247, 239, 454, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 357, 232, 0, 0, 528, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 294, 188, 205,
	0, 0, 367, 408, 414, 0, 0, 0, 230, 0,
	412, 381, 472, 213, 258, 405, 386, 410, 393, 261,
	0, 0, 411, 331, 459, 400, 469, 489, 490, 238,
	361, 479, 448, 485, 502, 206, 235, 375, 441, 475,
	432, 354, 455, 456, 293, 431, 267, 191, 329, 495,
	204, 420, 221, 211, 197, 443, 467, 218, 423, 0,
	0, 504, 199, 465, 440, 350, 290, 291, 198, 0,
	404, 243, 265, 233, 370, 462, 463, 231, 505, 208,
	484, 201, 0, 483, 363, 458, 466, 351, 341, 200,
	464, 349, 340, 296, 315, 316, 254, 276, 398, 334,
	399, 277, 359, 358, 360, 194, 476, 0, 195, 0,
	437, 477, 506, 214, 215, 216, 0, 253, 257, 264,
	266, 272, 273, 280, 327, 374, 397, 395, 401, 0,
	453, 470, 480, 487, 493, 494, 496, 497, 498, 499,
	500, 501, 362, 279, 433, 295, 332, 0, 0, 380,
	413, 219, 474, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 508, 509, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 342, 425, 471, 297, 309, 312,
	302, 321, 0, 322, 298, 299, 304, 306, 307, 308,
	313, 314, 318, 324, 0, 187, 202, 328, 0, 402,
	262, 503, 482, 478, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 236, 251, 259, 270, 275, 278, 283,
	284, 287, 292, 338, 344, 345, 346, 347, 364, 365,
	366, 369, 372, 373, 376, 378, 379, 382, 389, 390,
	391, 392, 394, 396, 403, 407, 415, 416, 417, 418,
	419, 421, 422, 427, 428, 429, 430, 438, 442, 460,
	461, 473, 486, 491, 271, 468, 492, 0, 337, 0,
	0, 339, 255, 274, 285, 0, 481, 439, 207, 409,
	263, 228, 0, 0, 196, 225, 210, 234, 249, 252,
	289, 348, 355, 384, 388, 268, 246, 223, 406, 220,
	424, 445, 446, 447, 449, 352, 241, 387, 0, 353,
	335, 451, 452, 281, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	326, 242, 0, 0, 385, 0, 193, 0, 426, 229,
	336, 333, 457, 256, 248, 244, 227, 282, 343, 383,
	444, 377, 0, 330, 0, 0, 435, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 226, 192, 368, 436, 260, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 311,
	320, 319, 300, 301, 303, 305, 310, 317, 323, 0,
	0, 0, 0, 0, 240, 286, 247, 239, 454, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 357, 232, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 325, 0, 294, 188,
	205, 0, 0, 367, 408, 414, 0, 0, 0, 230,
	0, 412, 381, 472, 213, 258, 405, 386, 410, 393,
	261, 0, 0, 411, 331, 459, 400, 469, 489, 490,
	238, 361, 479, 448, 485, 502, 206, 235, 375, 441,
	475, 432, 354, 455, 456, 293, 431, 267, 191, 329,
	495, 204, 420, 221, 211, 197, 443, 467, 218, 423,
	0, 0, 504, 199, 465, 440, 350, 290, 291, 198,
	0, 404, 243, 265, 233, 370, 462, 463, 231, 505,
	208, 484, 201, 0, 483, 363, 458, 466, 351, 341,
	200, 464, 349, 340, 296, 315, 316, 254, 276, 398,
	334, 399, 277, 359, 358, 360, 194, 476, 0, 195,
	0, 437, 477, 506, 214, 215, 216, 0, 253, 257,
	264, 266, 272, 273, 280, 327, 374, 397, 395, 401,
	0, 453, 470, 480, 487, 493, 494, 496, 497, 498,
	499, 500, 501, 362, 279, 433, 295, 332, 0, 0,
	380, 413, 219, 474, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 508, 509, 510,
	511, 512, 513, 514, 515, 516, 517, 518, 519, 520,
	521, 522, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 525, 342, 425, 471, 297, 309,
	312, 302, 321, 0, 322, 298, 299, 304, 306, 307,
	308, 313, 314, 318, 324, 0, 187, 202, 328, 0,
	402, 262, 503, 482, 478, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 236, 251, 259, 270, 275, 278,
	283, 284, 287, 292, 338, 344, 345, 346, 347, 2978,
	365, 366, 369, 372, 373, 376, 378, 379, 382, 389,
	390, 391, 392, 394, 396, 403, 407, 415, 416, 417,
	418, 419, 421, 422, 427, 428, 429, 430, 438, 442,
	460, 461, 473, 486, 491, 271, 468, 492, 0, 337,
	0, 0, 339, 255, 274, 285, 0, 481, 439, 207,
	409, 263, 228, 0, 0, 196, 225, 210, 234, 249,
	252, 289, 348, 355, 384, 388, 268, 246, 223, 406,
	220, 424, 445, 446, 447, 449, 352, 241, 387, 0,
	353, 335, 451, 452, 281, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 326, 242, 0, 0, 385, 0, 193, 0, 426,
	229, 336, 333, 457, 256, 248, 244, 227, 282, 343,
	383, 444, 377, 0, 330, 0, 0, 435, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 226, 192, 368, 436, 260,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	311, 320, 319, 300, 301, 303, 305, 310, 317, 323,
	0, 0, 0, 0, 0, 240, 286, 247, 239, 454,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 357, 232, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 294,
	188, 205, 0, 0, 367, 408, 414, 0, 0, 0,
	230, 0, 412, 381, 472, 213, 258, 405, 386, 410,
	393, 261, 0, 0, 411, 331, 459, 400, 469, 489,
	490, 238, 361, 479, 448, 485, 502, 206, 235, 375,
	441, 475, 432, 354, 455, 456, 293, 431, 267, 191,
	329, 495, 204, 420, 221, 211, 197, 443, 467, 218,
	423, 0, 0, 504, 199, 465, 440, 350, 290, 291,
	198, 0, 404, 243, 265, 233, 370, 462, 463, 231,
	505, 208, 484, 201, 0, 483, 363, 458, 466, 351,
	341, 200, 464, 349, 340, 296, 315, 316, 254, 276,
	398, 334, 399, 277, 359, 358, 360, 194, 476, 0,
	195, 0, 437, 477, 506, 214, 215, 216, 0, 253,
	257, 264, 266, 272, 273, 280, 327, 374, 397, 395,
	401, 0, 453, 470, 480, 487, 493, 494, 496, 497,
	498, 499, 500, 501, 362, 279, 433, 295, 332, 0,
	0, 380, 413, 219, 474, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 342, 425, 471, 297,
	309, 312, 302, 321, 0, 322, 298, 299, 304, 306,
	307, 308, 313, 314, 318, 324, 0, 187, 202, 328,
	0, 402, 262, 503, 482, 478, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 236, 251, 259, 270, 275,
	278, 283, 284, 287, 292, 338, 344, 345, 346, 347,
	364, 365, 366, 369, 372, 373, 376, 378, 379, 382,
	389, 390, 391, 392, 394, 396, 403, 407, 415, 416,
	417, 418, 419, 421, 422, 427, 428, 429, 430, 438,
	442, 460, 461, 473, 486, 491, 271, 468, 492, 0,
	337, 0, 0, 339, 255, 274, 285, 0, 481, 439,
	207, 409, 263, 228, 0, 0, 196, 225, 210, 234,
	249, 252, 289, 348, 355, 384, 388, 268, 246, 223,
	406, 220, 424, 445, 446, 447, 449, 352, 241, 387,
	0, 353, 335, 451, 452, 281, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 326, 242, 0, 0, 385, 0, 193, 0,
	426, 229, 336, 333, 457, 256, 248, 244, 227, 282,
	343, 383, 444, 377, 0, 330, 0, 0, 435, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 226, 192, 368, 436,
	260, 0, 0, 0, 0, 184, 2586, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 311, 320, 319, 300, 301, 303, 305, 310, 317,
	323, 0, 0, 0, 0, 0, 240, 286, 247, 239,
	454, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 2099, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 357, 232, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 294, 188, 205, 0, 0, 367, 408, 414, 0,
	0, 0, 230, 0, 412, 381, 472, 213, 258, 405,
	386, 410, 393, 261, 0, 0, 411, 331, 459, 400,
	469, 489, 490, 238, 361, 479, 448, 485, 502, 206,
	235, 375, 441, 475, 432, 354, 455, 456, 293, 431,
	267, 191, 329, 495, 204, 420, 221, 211, 197, 443,
	467, 218, 423, 0, 0, 504, 199, 465, 440, 350,
	290, 291, 198, 0, 404, 243, 265, 233, 370, 462,
	463, 231, 505, 208, 484, 201, 0, 483, 363, 458,
	466, 351, 341, 200, 464, 349, 340, 296, 315, 316,
	254, 276, 398, 334, 399, 277, 359, 358, 360, 194,
	476, 0, 195, 0, 437, 477, 506, 214, 215, 216,
	0, 253, 257, 264, 266, 272, 273, 280, 327, 374,
	397, 395, 401, 0, 453, 470, 480, 487, 493, 494,
	496, 497, 498, 499, 500, 501, 362, 279, 433, 295,
	332, 0, 0, 380, 413, 219, 474, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	508, 509, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 342, 425,
	471, 297, 309, 312, 302, 321, 0, 322, 298, 299,
	304, 306, 307, 308, 313, 314, 318, 324, 0, 187,
	202, 328, 0, 402, 262, 503, 482, 478, 0, 0,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 236, 251, 259,
	270, 275, 278, 283, 284, 287, 292, 338, 344, 345,
	346, 347, 364, 365, 366, 369, 372, 373, 376, 378,
	379, 382, 389, 390, 391, 392, 394, 396, 403, 407,
	415, 416, 417, 418, 419, 421, 422, 427, 428, 429,
	430, 438, 442, 460, 461, 473, 486, 491, 271, 468,
	492, 0, 337, 0, 0, 339, 255, 274, 285, 0,
	481, 439, 207, 409, 263, 228, 0, 0, 196, 225,
	210, 234, 249, 252, 289, 348, 355, 384, 388, 268,
	246, 223, 406, 220, 424, 445, 446, 447, 449, 352,
	241, 387, 0, 0, 335, 451, 452, 281,
}

var yyPact = [...]int{
	4704, -1000, -395, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2059, 2167, -1000, -1000,
	-1000, -1000, 2259, -1000, 704, 1787, -1000, 2045, 314, -1000,
	42266, 500, -1000, 41084, 494, 4508, 42266, -1000, 200, -1000,
	159, 42266, 194, 40493, -1000, -1000, -241, 18616, 1996, 56,
	48, 42266, -1000, -1000, -1000, -1000, 2194, 1785, -1000, 368,
	-1000, -1000, -1000, -1000, -1000, -1000, 39902, -1000, -1000, -1000,
	2056, 2053, 2262, 619, 1968, -1000, 2126, 1785, -1000, 18616,
	2190, 2115, 17434, -1000, 17434, 438, -1000, -1000, 12696, -1000,
	-1000, 24536, 42266, 42266, 261, -1000, 2045, -1000, -1000, 339,
	-1000, 338, 1653, -1000, 1645, -1000, 700, 482, 373, 479,
	461, 371, 370, 369, 359, 358, 349, 346, 344, 377,
	-1000, 636, 636, -124, -128, 348, 411, 411, 411, 450,
	2020, 2015, -1000, 740, -1000, 636, 636, 336, 636, 636,
	636, 636, 302, 301, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 478,
	2045, 275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 42266, 262, 42266, -1000,
	548, 42266, 814, 814, 65, 814, 814, 814, 814, 185,
	615, 47, -1000, 184, 287, 149, 270, 786, 189, -1000,
	-1000, 251, 786, 1215, 624, 155, -1000, 814, 814, -1000,
	10312, 222, 10312, 10312, -1000, 2036, -1000, -1000, -1000, -1000,
	1219, -1000, 448, -1000, -1000, -1000, -1000, 42266, 39311, 345,
	646, -1000, -1000, -1000, 70, -1000, -1000, 1396, 1563, 18616,
	1028, -1000, 2224, 597, -1000, -1000, -1000, -1000, -1000, 515,
	19207, 19207, 19207, 19207, -1000, -1000, 1509, 1509, 1509, 1509,
	19207, 1509, 19207, 1509, 1509, 1509, 1509, 18616, 1509, 1509,
	1509, -1000, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509,
	1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509,
	1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509,
	1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509,
	1509, 1509, 1509, 1509, 1509, 1509, 1509, 544, 1509, 1509,
	1509, 1509, 1509, -1000, -1000, -1000, -1000, 1509, 1509, 1509,
	1509, 1509, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22167, -1000, 15070, 1509, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 42266, -1000, 1509, 209, 42266, 42266, 335,
	2126, 1785, -1000, 2194, 2182, 368, -1000, 2267, 1802, 1306,
	1059, 1785, 1623, 42266, -1000, 1713, -1000, -1000, -1000, 1914,
	1179, 1207, -1000, -1000, -1000, -1000, 1407, 18616, -1000, -1000,
	2234, -1000, 21576, 540, 843, 2233, 38720, -1000, 438, 438,
	1643, 12100, -7, -1000, -1000, -1000, 643, 27491, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2036, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1710, 42266, -1000, -1000, 3048, 1448, -1000, 1784,
	-1000, 1699, -1000, 1736, 1799, 491, 1448, 480, 475, 462,
	-1000, -56, -1000, -1000, -1000, -1000, -1000, 636, 636, -1000,
	341, 2189, 314, 4043, -1000, -1000, -1000, 38129, 1782, 1448,
	-1000, 1780, -1000, 771, 529, 560, 560, 1448, -1000, -1000,
	42266, 1448, 765, 750, 42266, 42266, -1000, 37538, -1000, 36947,
	36356, 1067, 42266, 35765, 35174, 34583, 33992, 33401, -1000, 1916,
	-1000, 1759, -1000, -1000, -1000, 42266, 42266, 42266, 367, -1000,
	-1000, 42266, 1448, -1000, -1000, 1058, 1057, 636, 636, 1054,
	1206, 1201, 1187, 636, 636, 1050, 1184, 29264, 291, 1046,
	1039, 1036, 1004, 1177, 230, 976, 947, 1035, 42266, 1778,
	42266, -1000, 238, 687, 414, 642, 2045, 1984, 1640, 446,
	490, 1448, 429, 429, 42266, -1000, 10908, -1000, -1000, 1176,
	18616, -1000, 803, 786, 786, -1000, -1000, -1000, -1000, -1000,
	-1000, 814, 42266, 803, -1000, -1000, -1000, 786, 814, 42266,
	814, 814, 814, 814, 786, 786, 786, 814, 42266, 42266,
	42266, 42266, 42266, 42266, 42266, 42266, 42266, 10312, 624, 814,
	-268, -1000, 1159, -1000, 1885, -1000, -1000, -1000, -1000, -1000,
	-1000, 10312, 10312, -1000, -1000, -1000, -1000, 164, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -39, 1636, 32810,
	-1000, -269, -271, -272, -276, -1000, -1000, -1000, -279, -282,
	-1000, -1000, -1000, 18616, 18616, 18616, 18616, -151, -1000, 1214,
	19207, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 175, 739,
	19207, 19207, 19207, 19207, 19207, 19207, 19207, 19207, 19207, 19207,
	19207, 19207, 19207, 19207, 19207, 841, 6741, 6741, 597, 597,
	597, 597, -1000, 17434, 18616, 18616, 597, -1000, 1448, 32219,
	17434, 17434, 18616, 2029, 660, 1563, 42266, -1000, 1059, -1000,
	-1000, -1000, 942, -1000, 42266, 42266, 61, 18616, 18616, 18616,
	18616, 18616, 18616, 13883, 18616, 18616, 18616, 18616, 18616, 18616,
	18616, 18616, 18616, 18616, 18616, 18616, 18616, 18616, 18616, 18616,
	18616, 18616, 18616, 18616, 18616, 18616, 18616, 18616, 18616, 18616,
	1059, 18616, 1761, 18616, 18616, 13292, 10908, 17434, 17434, 17434,
	17434, 17434, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 539, 1366, 1301, 1543, 18616, -1000,
	1633, -1000, -111, 23945, 18616, 1142, 2231, 1816, 42266, -1000,
	-1000, -1000, 2126, -1000, 2126, 1366, 2237, 1920, 17434, -1000,
	-1000, 2237, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1287, -1000, 42266, 1623, 2096, 42266, 1909, 1141, 372, -1000,
	18616, 18616, 1613, -1000, 1203, 42266, -1000, -151, -1000, 31628,
	-1000, -1000, 9716, -1000, 42266, 342, 42266, -1000, 23354, 31037,
	11504, -7, -1000, 11504, 1552, -1000, 29, 17, 14474, 596,
	-1000, -1000, -1000, 348, 20389, 1352, 596, 98, -1000, -1000,
	-1000, 1736, -1000, 1736, 1736, 1736, 1736, 372, 372, 372,
	372, -1000, -1000, -1000, -1000, -1000, 1773, 1768, -1000, 1736,
	1736, 1736, 1736, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1767, 1767, 1767, 1738, 1738, 406, -1000, 18616, 280, 42266,
	2079, 1024, 238, 436, 1813, 1448, 1448, 1448, 436, -1000,
	1333, 1325, -1000, -365, 1598, -1000, -1000, 2186, -1000, -1000,
	747, 793, 792, 722, 42266, 223, 328, -1000, 427, -1000,
	42266, 1448, 749, 560, 1448, -1000, 1448, -1000, -1000, -1000,
	-1000, -1000, 1448, 1593, -1000, 1574, 869, 787, 828, 782,
	1593, -1000, -1000, -98, 1593, -1000, 1593, -1000, 1593, -1000,
	1593, -1000, 1593, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 720, 42266, 223, 841, -1000, 441, -1000, -1000, 841,
	841, -1000, -1000, -1000, -1000, 1135, 1134, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -349, 42266, -1000, 233, 640, 313,
	350, 311, 42266, 226, 2108, 307, 294, 42266, 42266, 429,
	1844, 42266, 2078, 42266, -1000, -1000, -1000, -1000, -1000, 1563,
	42266, -1000, -1000, 814, 814, -1000, -1000, 42266, 814, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 814, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 42266, -1000, -1000, -1000, -1000, 42266, -1000,
	-1000, -1000, -1000, -1000, 95, 21, 332, -1000, -1000, -1000,
	-1000, -1000, 2120, -1000, 1563, 719, 711, -1000, 1509, -1000,
	-1000, 894, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 175,
	19207, 19207, 19207, 1241, 472, 886, 1123, 899, 910, 910,
	837, 837, 603, 603, 603, 603, 603, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1133, -1000, 1604, -1000, 1958,
	1412, 1059, -1000, 1604, 1604, 1310, 17434, -1000, -1000, 681,
	-1000, 18616, 1059, -1000, -1000, 1059, 1059, 1591, 1587, 2227,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1180, 1508, 1508, 1508, 1508, 1508, 18616, 1296, -1000,
	-1000, -1000, 2069, 2033, 1059, 1396, 1059, 1582, -1000, 1973,
	1508, 1906, 1901, 1894, 1502, 1878, 1874, 1864, 1508, 1508,
	1508, 1137, 1831, 1774, 1750, 1724, 1719, 1708, 1689, 1679,
	1666, 1508, -153, 1508, 1059, 1059, 1059, 1644, 1052, 1059,
	17434, 17434, 1567, 1509, 537, -1000, 1604, 1059, 1059, 1604,
	1604, 10908, 1059, -1000, 1543, 42266, -1000, -253, -1000, -4,
	631, 1509, -1000, 29264, 1059, -1000, 5640, -1000, 43448, -1000,
	-1000, -1000, -1000, -1000, 26900, 1368, 2237, -1000, -1000, 1509,
	1638, -1000, -1000, 372, 79, 26309, -1000, -1000, 1563, 1563,
	18616, -1000, -1000, -1000, -1000, -1000, -1000, 535, 2206, 331,
	1509, -1000, 1519, 2197, -1000, -1000, -1000, 2093, 20985, -1000,
	1509, 1509, 42266, 1415, 1281, -1000, 522, -1000, 1552, -7,
	-16, -1000, -1000, -1000, -1000, 1563, -1000, 1280, 343, 264,
	-1000, 405, -1000, -1000, -1000, -1000, 2002, 90, -1000, -1000,
	-1000, 372, 372, -1000, -1000, -1000, -1000, -1000, -1000, 1129,
	1129, -1000, -1000, -1000, -1000, -1000, 1021, -1000, -1000, -1000,
	1007, -1000, -1000, 1557, 1811, 280, -1000, -1000, 636, 1125,
	2006, 42266, -1000, -1000, 1348, 233, 42266, 679, 1842, -1000,
	1813, 1813, 1813, 42266, -1000, -1000, -1000, -1000, -359, 67,
	357, -1000, -1000, -1000, 3114, 42266, 1630, -1000, 217, -1000,
	1269, -1000, 42266, -1000, 1628, 1749, 1448, 1448, -1000, -1000,
	-1000, 42266, 1509, -1000, -1000, -1000, -1000, 484, 2040, 2031,
	223, 217, 596, 1448, -1000, -1000, -1000, -1000, -1000, -352,
	1610, 468, 225, 290, 42266, 42266, 42266, 42266, 42266, 513,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 271, 437,
	-1000, 42266, 42266, 662, -1000, -1000, -1000, 786, -1000, -1000,
	786, -1000, -1000, -1000, -1000, -1000, 2030, 42266, 20, -311,
	-1000, -308, 18616, -1000, -1000, -1000, -1000, 1080, 471, 886,
	19207, 19207, 17434, -92, 360, 360, 841, -1000, -1000, -1000,
	18616, 18616, 1525, 656, -1000, 18616, 967, -1000, -1000, -1000,
	18616, 18616, 18616, 1059, 279, -1000, -1000, -1000, -1000, -1000,
	2218, -1000, 18616, 18616, 18616, -1000, -1000, 18616, 18616, -1000,
	18616, 18616, 19798, 1059, 19798, 18616, 18616, 19798, -1000, -1000,
	-1000, -1000, 19798, 18616, 18616, 18616, 18616, 18616, 18616, 18616,
	18616, 18616, -1000, -1000, 30446, 74, -153, -153, -153, 1592,
	74, 1019, -1000, 1604, 1604, 17434, 10908, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 631, -1000,
	560, 560, 560, 42266, -1000, -1000, -1000, -1000, -1000, -1000,
	1539, 2164, -1000, 1933, 1932, 2211, 2206, -1000, 23354, 2237,
	-1000, -1000, 42266, -244, -1000, 1981, 1974, -1000, -1000, -1000,
	-1000, 9120, 2126, 18616, 1839, 42266, 167, -1000, 22763, 42266,
	42266, 23354, 23354, 23354, 23354, 23354, -1000, 1882, 1863, -1000,
	1915, 1899, 1951, 42266, -1000, 1580, 1059, 2182, 20985, 368,
	18616, 25127, 1411, 23354, -1000, -1000, 23354, 42266, 8524, -1000,
	-1000, 2, 12, -1000, -1000, -1000, -1000, 348, -1000, -1000,
	1311, 2092, 1993, -1000, -1000, -1000, -1000, 1569, -1000, 1565,
	1536, 1555, 192, -1000, 1795, 2028, 636, 636, -1000, 1005,
	-1000, 1448, -1000, -1000, 458, -1000, 2065, 42266, 1838, 1832,
	1830, -1000, -375, 992, 1747, 1794, 18616, 1743, 2184, 1437,
	42266, -1000, -1000, 42266, -1000, 193, -1000, 280, 42266, -1000,
	-1000, -1000, 328, 42266, -1000, 5467, 217, -1000, -1000, -1000,
	-1000, -1000, -1000, 42266, 269, -1000, 1740, 1126, -1000, -1000,
	1806, -1000, -1000, -1000, -1000, 191, 281, -1000, 42266, 512,
	1811, 42266, -1000, -1000, -1000, 814, 814, -1000, -1000, 2025,
	-1000, 1448, 1508, 19207, 19207, -1000, 597, -1000, 1509, 1059,
	1736, 1736, -1000, 1736, 1738, -1000, 1736, 152, 1736, 144,
	1736, -1000, -1000, 1059, 1059, 1030, 1210, -66, -1000, 1563,
	18616, 1583, 1573, 1508, -1000, 1734, 1733, 18616, 1508, 1508,
	1508, -1000, 1563, 1502, 1568, 1447, -1000, -1000, -1000, -1000,
	1528, 1508, 1550, 1059, 1059, 1548, 1548, 1548, 1548, 1548,
	1543, 1543, 1543, 1543, 28082, -1000, -153, -1000, -1000, -190,
	-191, -1000, -1000, -1000, 1059, 1059, 1059, -153, 1496, 1496,
	1496, -1000, -1000, 1059, -1000, -1000, 2119, 2119, 2119, 1515,
	42857, 42266, -1000, -1000, -1000, -1000, 2206, 2204, 1445, -1000,
	-1000, 79, 399, -1000, 1949, 1974, -1000, 2178, 1956, 2176,
	-1000, -1000, -1000, 1563, -1000, 2054, 1304, -1000, 639, 1390,
	-1000, -1000, 16843, 1521, 1925, 520, 1515, 1494, 2197, 1804,
	1827, 1869, -1000, -1000, -1000, -1000, 1860, -1000, 1841, -1000,
	-1000, 1713, -1000, -1000, 1301, 1059, 1526, 342, 23354, 1363,
	1363, -1000, 497, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	802, 5030, 2256, -1000, 1111, -1000, 1110, -1000, 736, 730,
	-1000, 42266, 1728, -1000, 372, 1101, 372, 963, -1000, 950,
	-1000, -1000, -172, -1000, -1000, 1756, 1846, -1000, -1000, 42266,
	-1000, -1000, 42266, 42266, 42266, 1727, 2169, -1000, 18616, 1726,
	637, 1537, 42266, 42266, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 435, 636, -326, 293, 285, 636,
	636, 636, -1000, -1000, 1488, 1482, -1000, -126, -1000, 18616,
	-1000, -1000, -1000, 998, 998, -1000, 1713, -1000, -1000, -1000,
	1265, -1000, -1000, -102, 42266, 42266, 42266, 42266, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 597, 19207,
	-1000, -1000, 372, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 18616, -1000, 18616, -1000, 2126, 1099, 1563, 18616,
	18616, -1000, 945, 925, 1508, -1000, -1000, -1000, 1059, 19798,
	-1000, 19798, -1000, 18616, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1059, 333, 2192, 2160, -1000,
	-1000, -1000, 2208, 2208, 2208, -1000, 1059, 18616, 1059, 1059,
	-1000, 1509, 1990, 1509, 1509, 25127, -1000, -1000, 2204, 2196,
	2156, 1940, 1948, 1948, 1949, -1000, 2153, 2150, -1000, 1096,
	2143, 1082, 728, -1000, 42266, 18616, 167, -1000, 334, 42266,
	167, 42266, -1000, 2192, -1000, -1000, 18616, 1717, -1000, 18616,
	-1000, -1000, -1000, -1000, -1000, -1000, 6741, 2206, 1363, -1000,
	-1000, 612, -1000, 18616, -1000, -1000, -1000, 4917, -1000, -1000,
	-1000, -1000, -1000, 1714, 18616, -1000, -1000, -1000, 1262, 1250,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1713, -1000,
	-1000, -1000, -1000, 328, -361, 1512, 42266, 923, -1000, 1470,
	1437, 318, 167, 1079, 636, 636, 636, 888, 864, 29264,
	363, -1000, 328, -1000, -131, -132, 1508, -1000, -1000, 2091,
	-1000, -1000, 10908, -1000, -1000, 1695, 1807, -1000, 239, -1000,
	1508, 1508, 1059, -1000, 1508, 1508, 1235, 1232, -1000, -1000,
	1447, -1000, 946, -1000, 2192, -344, 18616, 74, -1000, -1000,
	215, 74, 74, 74, 1563, 74, 74, 25718, -1000, 2132,
	2128, 29855, 29855, 631, 2196, -160, 18616, 18616, 1937, 919,
	-1000, -1000, -1000, -1000, 1077, 1074, -1000, 1072, -1000, 2245,
	-1000, 1563, -1000, 167, -1000, 495, 1390, -1000, 2126, 1563,
	42266, 1563, 86, 2192, -1000, 1508, -1000, 1509, 1509, 1509,
	1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509,
	1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509,
	1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 1509, 42266,
	1428, -1000, -1000, 2089, 1440, 60, -1000, 1409, -1000, -1000,
	172, -1000, 18616, -1000, 29264, 1071, 921, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 368, 1418, -1000, 634, 42266,
	42266, 1059, 299, -105, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 18616, -344, -1000, -1000, 16252, -1000, -1000,
	1396, -153, -1000, -1000, -153, -153, -153, -153, -153, 1377,
	-1000, -1000, -1000, -1000, -1000, 1377, 1377, -1000, -160, -1000,
	1413, -1000, 42266, 1563, 1396, -1000, 881, -1000, -1000, -1000,
	-1000, -1000, 42266, 1390, 42266, -1000, 1373, 1059, 1509, 2126,
	-1000, 1276, -1000, 368, -1000, 1692, 1794, -1000, -1000, -1000,
	15661, -1000, -1000, -1000, -1000, -100, 10908, 7928, 1257, -1000,
	-1000, 1892, -95, -114, 1502, -1000, -1000, 18025, -1000, 321,
	-314, -178, -1000, -1000, -1000, -1000, -1000, -1000, 28673, -1000,
	-1000, -1000, -1000, -160, -1000, -1000, 2087, -1000, -1000, 1334,
	-1000, -1000, 25127, 41675, -1000, 1825, 851, -100, 18616, 1513,
	1059, -1000, 33, -1000, -1000, -1000, -1000, -1000, 1806, -1000,
	1868, -1000, 1059, 693, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 42266, 1509, -1000, 1239, -1000, 1424, -202, 1824,
	-1000, 2215, -1000, -1000, -1000, 794, 896, -1000, -1000, -1000,
	-1000, 1387, 42266, -1000, 392, -1000, -1000, -102, -103, -1000,
	18025, -1000, 28082, -1000, 41675, -198, 596, 6741, -1000, -1000,
	2243, 614, 614, -1000, -1000, -392, 1225, 236, -1000, -106,
	-1000, 1059, -1000, -1000, 2063, 86, -1000, -1000, -1000, 362,
	965, -1000, -1000, 855, -392, -1000, -115, -1000, -204, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 6741, 228, 228,
	-1000, 1820, -1000, -1000, 6741, -1000, 1819, -212, -1000, -286,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 2600, 2599, 26, 2, 2598, 2597, 2596, 44, 104,
	191, 27, 194, 107, 2595, 2594, 2593, 2592, 2591, 2589,
	2587, 248, 244, 242, 2585, 2584, 2583, 2582, 2580, 2579,
	2578, 2576, 2574, 2572, 246, 169, 188, 2570, 2569, 2568,
	120, 179, 94, 96, 180, 2567, 2566, 86, 2565, 2564,
	2560, 176, 173, 767, 2559, 190, 119, 39, 2558, 2555,
	2553, 2551, 2550, 2549, 2548, 2541, 2538, 2536, 2533, 2532,
	2531, 2530, 2529, 2528, 2526, 223, 2521, 2520, 17, 2519,
	88, 2516, 2514, 2513, 2512, 2511, 15, 2510, 36, 10,
	32, 2509, 2504, 69, 2503, 2502, 50, 2501, 2500, 13,
	2499, 22, 2498, 30, 2497, 2496, 135, 2494, 2491, 2489,
	2488, 2487, 2486, 2485, 149, 2480, 2479, 2478, 2477, 189,
	2476, 2475, 236, 115, 121, 2474, 2473, 105, 183, 2472,
	127, 2471, 2468, 2467, 159, 2465, 4852, 2462, 73, 93,
	2461, 61, 85, 70, 68, 21, 1, 2460, 2459, 71,
	89, 2458, 108, 81, 2456, 111, 106, 2451, 2449, 9,
	6, 2448, 5, 2446, 3, 74, 2445, 2444, 130, 2442,
	2441, 2439, 101, 2438, 2437, 3082, 2436, 98, 145, 110,
	80, 2435, 35, 59, 2434, 2433, 2431, 2430, 2426, 48,
	2425, 2424, 2423, 152, 66, 172, 53, 40, 49, 47,
	143, 2422, 100, 91, 2421, 150, 148, 2418, 79, 60,
	33, 41, 2417, 103, 138, 162, 38, 102, 144, 2415,
	2414, 65, 78, 2413, 2412, 2411, 2410, 2408, 2407, 77,
	2406, 63, 2405, 195, 2404, 18, 2403, 55, 34, 2402,
	76, 129, 75, 29, 2401, 171, 2400, 52, 168, 136,
	166, 2399, 2398, 2397, 2396, 181, 319, 2395, 2394, 83,
	167, 153, 157, 2379, 318, 2378, 2377, 99, 1519, 3682,
	28, 170, 2376, 2375, 5199, 147, 31, 25, 2374, 186,
	2373, 2372, 2371, 192, 178, 116, 997, 131, 2369, 14,
	2368, 2367, 2362, 2354, 2349, 2348, 84, 2347, 2346, 2345,
	196, 90, 8, 163, 82, 2344, 2343, 2342, 132, 97,
	2341, 165, 164, 133, 125, 2336, 174, 155, 151, 2335,
	42, 2333, 2329, 2326, 2324, 2323, 117, 2322, 2320, 2317,
	2315, 160, 154, 128, 92, 2311, 95, 123, 161, 158,
	46, 2309, 37, 2307, 2306, 2303, 177, 23, 2299, 12,
	67, 58, 24, 118, 126, 2298, 0, 2297, 16, 175,
	317, 156, 2295, 2294, 7, 2292, 11, 2289, 146, 2288,
	2287, 2286, 20, 43, 19, 4, 2282, 2279, 3922, 1513,
	139, 2276, 197,
}

//line sql.y:7050
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 376, 377, 377, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 356, 356,
	356, 359, 359, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 104, 104, 22, 23, 23, 23, 23,
	380, 380, 170, 170, 168, 168, 169, 169, 240, 240,
	24, 25, 25, 250, 250, 249, 249, 249, 251, 251,
	251, 251, 286, 286, 26, 26, 26, 26, 26, 120,
	120, 358, 358, 357, 349, 349, 348, 348, 347, 355,
	355, 354, 354, 353, 38, 39, 48, 48, 48, 48,
	49, 50, 360, 360, 322, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 324, 324, 310,
	310, 323, 323, 323, 323, 323, 323, 323, 309, 309,
	131, 131, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 371, 371, 220, 220, 220, 220, 220,
	220, 140, 140, 149, 149, 149, 149, 149, 138, 138,
	139, 137, 137, 137, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 148, 148, 144,
	144, 144, 145, 145, 145, 146, 146, 372, 372, 372,
	372, 289, 289, 289, 289, 292, 292, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 291, 291, 291, 291,
	291, 293, 293, 293, 293, 293, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 295, 295, 295, 295, 295, 295, 295, 295, 308,
	308, 296, 296, 303, 303, 304, 304, 304, 305, 305,
	305, 306, 306, 301, 301, 301, 301, 301, 301, 302,
	302, 302, 311, 336, 336, 335, 335, 333, 333, 333,
	333, 320, 320, 330, 330, 330, 330, 330, 319, 319,
	315, 315, 315, 316, 316, 317, 317, 314, 314, 318,
	318, 332, 332, 331, 312, 312, 313, 313, 338, 373,
	373, 373, 373, 374, 374, 339, 365, 366, 364, 364,
	364, 364, 364, 80, 80, 80, 263, 263, 263, 328,
	328, 327, 327, 327, 329, 329, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 258, 258, 258, 363, 363, 363,
	363, 363, 363, 362, 362, 362, 325, 325, 325, 361,
	361, 56, 56, 203, 203, 45, 45, 45, 45, 45,
	45, 44, 44, 44, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 106, 106,
	107, 107, 107, 107, 109, 109, 109, 341, 341, 57,
	57, 3, 3, 158, 160, 161, 161, 159, 159, 159,
	159, 159, 159, 59, 59, 58, 58, 163, 162, 164,
	164, 164, 1, 1, 2, 2, 4, 4, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	307, 307, 307, 340, 340, 342, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 344, 344, 344, 60, 60,
	345, 297, 298, 299, 5, 6, 321, 343, 116, 116,
	28, 37, 37, 29, 29, 29, 29, 30, 30, 61,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	257, 257, 265, 265, 256, 256, 279, 279, 279, 259,
	259, 259, 260, 260, 370, 370, 370, 253, 253, 63,
	63, 63, 65, 65, 66, 67, 67, 281, 281, 282,
	282, 68, 69, 81, 81, 81, 81, 81, 81, 105,
	105, 105, 15, 15, 15, 15, 77, 77, 77, 14,
	14, 64, 64, 71, 367, 367, 368, 369, 369, 369,
	369, 72, 74, 31, 31, 31, 31, 31, 31, 126,
	126, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 121, 121, 121, 115, 115, 381, 75,
	76, 76, 119, 119, 119, 112, 112, 112, 118, 118,
	118, 16, 16, 17, 239, 239, 18, 18, 123, 123,
	125, 125, 125, 125, 125, 127, 127, 127, 127, 127,
	127, 127, 122, 122, 124, 124, 124, 124, 272, 272,
	272, 271, 271, 152, 152, 154, 153, 153, 155, 155,
	156, 156, 156, 156, 201, 201, 178, 178, 237, 237,
	235, 235, 236, 236, 238, 238, 238, 238, 241, 241,
	157, 157, 157, 157, 165, 165, 166, 166, 167, 167,
	280, 280, 277, 277, 277, 276, 276, 171, 171, 171,
	173, 172, 172, 172, 172, 174, 174, 176, 176, 175,
	175, 177, 182, 182, 181, 181, 179, 179, 179, 179,
	180, 180, 180, 180, 183, 183, 136, 136, 136, 136,
	136, 136, 136, 147, 147, 147, 147, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 82, 82, 82, 83, 83, 84,
	84, 84, 85, 85, 85, 85, 85, 86, 86, 86,
	88, 88, 87, 87, 196, 196, 89, 89, 90, 90,
	93, 93, 92, 91, 91, 97, 97, 94, 94, 96,
	96, 95, 98, 98, 99, 100, 100, 254, 254, 184,
	184, 192, 192, 192, 192, 185, 185, 185, 185, 185,
	185, 185, 193, 193, 193, 200, 194, 194, 190, 190,
	190, 190, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 208,
	208, 352, 352, 351, 351, 350, 350, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 382, 382,
	300, 300, 300, 300, 191, 191, 191, 191, 191, 117,
	117, 117, 117, 117, 285, 285, 285, 288, 288, 288,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 206, 206, 113, 113, 204,
	204, 205, 207, 207, 202, 202, 202, 187, 187, 187,
	209, 209, 210, 210, 101, 102, 102, 103, 103, 211,
	211, 213, 212, 212, 214, 215, 215, 215, 216, 216,
	217, 217, 217, 47, 47, 47, 47, 47, 42, 42,
	42, 42, 43, 43, 43, 128, 128, 128, 128, 130,
	130, 129, 129, 78, 78, 79, 79, 79, 134, 134,
	135, 135, 135, 132, 132, 133, 133, 233, 233, 218,
	218, 218, 225, 225, 225, 221, 221, 223, 223, 223,
	224, 224, 224, 222, 230, 230, 232, 232, 231, 231,
	227, 227, 228, 228, 229, 229, 229, 226, 226, 186,
	186, 186, 186, 186, 234, 234, 234, 234, 242, 242,
	197, 197, 199, 199, 198, 198, 151, 243, 243, 247,
	244, 244, 248, 248, 248, 248, 248, 245, 245, 246,
	246, 273, 273, 273, 252, 252, 264, 264, 261, 261,
	262, 262, 255, 255, 266, 266, 266, 73, 195, 195,
	337, 337, 334, 269, 269, 270, 270, 274, 274, 278,
	278, 275, 275, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 378, 379, 283, 284, 284, 284,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 7, 5,
	6, 6, 7, 0, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 4, 4, 3, 0, 1,
	4, 3, 4, 4, 3, 3, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 3, 3, 3, 5, 2, 3, 3,
	2, 3, 4, 4, 4, 3, 4, 4, 5, 3,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 1, 1, 2,
	1, 3, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 1, 2, 5, 0, 3, 4, 3, 4, 2,
	0, 1, 1, 2, 2, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 5, 1, 3, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 6, 6,
	6, 4, 4, 4, 7, 8, 6, 5, 6, 8,
	11, 6, 4, 4, 4, 4, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 4, 4, 6, 5,
	5, 5, 9, 9, 9, 6, 9, 9, 9, 0,
	2, 0, 2, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 2, 2,
	0, 3, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 1, 0, 1, 2, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 4, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -376, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 219, -49, -39, 220,
	-50, 222, 221, 258, 223, 251, 74, 300, 301, 303,
	304, 305, 306, -105, 256, 257, 225, 36, 45, 33,
	34, 37, 229, 264, 265, 228, -10, -34, 8, -378,
	11, 430, 253, 252, 28, -12, 464, 85, -377, 600,
	-233, -218, 22, 33, 29, -217, -213, -119, -218, 20,
	18, 7, -75, -381, -75, -75, 12, 13, -75, -322,
	-324, 85, 156, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -346, -44, -41, 224, 221, 268, 119,
	120, 258, 259, 260, 223, 242, 257, 261, 256, 277,
	-40, 80, 33, 464, 467, -329, 220, 226, 227, 431,
	122, 121, 75, 222, -326, 354, 570, -55, 572, 101,
	103, 571, 44, 232, 573, 574, 575, 576, 241, 577,
	578, 579, 580, 586, 587, 588, 589, 123, 7, -75,
	-278, -274, -356, -268, 88, 89, 90, 461, 244, 494,
	495, 293, 80, 41, 351, 354, 570, 300, 314, 308,
	335, 327, 462, 496, 296, 245, 281, 564, 325, 131,
	572, 299, 497, 259, 359, 360, 361, 101, 303, 397,
	585, 298, 498, 583, 103, 571, 79, 51, 567, 44,
	254, 323, 228, 319, 573, 282, 499, 472, 275, 122,
	119, 592, 36, 317, 50, 30, 582, 121, 49, 574,
	147, 500, 575, 363, 342, 558, 48, 364, 260, 501,
	83, 265, 466, 566, 365, 318, 366, 292, 581, 225,
	502, 550, 367, 368, 559, 503, 343, 347, 504, 389,
	369, 599, 52, 505, 506, 560, 120, 507, 78, 576,
	312, 313, 508, 290, 243, 391, 339, 443, 450, 451,
	107, 108, 446, 109, 452, 110, 453, 454, 455, 444,
	111, 104, 445, 456, 457, 340, 341, 112, 458, 106,
	105, 447, 449, 113, 459, 241, 35, 370, 463, 294,
	58, 269, 392, 46, 345, 596, 45, 554, 509, 557,
	338, 334, 440, 53, 510, 511, 512, 513, 577, 337,
	311, 333, 591, 4, 287, 578, 62, 227, 349, 348,
	350, 276, 388, 330, 514, 515, 516, 248, 81, 517,
	320, 21, 518, 519, 371, 283, 520, 56, 521, 522,
	395, 257, 523, 54, 579, 39, 262, 593, 580, 524,
	525, 526, 527, 264, 528, 373, 529, 372, 344, 346,
	271, 374, 465, 530, 316, 261, 584, 531, 249, 565,
	263, 268, 256, 396, 250, 532, 533, 534, 535, 536,
	297, 537, 538, 304, 586, 441, 43, 539, 540, 541,
	542, 291, 286, 390, 399, 61, 82, 356, 543, 563,
	310, 284, 544, 301, 55, 587, 588, 589, 278, 590,
	9, 597, 598, 376, 123, 288, 289, 47, 331, 270,
	545, 546, 321, 322, 336, 309, 332, 302, 551, 272,
	377, 442, 258, 547, 398, 285, 352, 357, 469, 277,
	378, 562, 468, 329, 326, 279, 548, 379, 233, 273,
	274, 549, 552, 380, 381, 295, 382, 383, 384, 385,
	386, 387, 280, 467, 307, 324, 358, 411, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 439, 231, -75, 231, -175,
	-274, 231, -245, 360, -265, 362, 375, 370, 380, 368,
	-257, 371, 373, 271, -370, 389, 231, 377, 219, 363,
	372, 381, 382, 295, 383, 387, 280, 384, 385, 386,
	-356, 173, 575, 590, 131, 328, 367, 365, 390, 554,
	-274, 302, -281, 307, -269, -356, -268, 305, -175, -81,
	550, 223, -283, -283, -121, 554, 556, -194, -136, 140,
	-147, -150, -141, -142, -188, -189, -190, -191, -148, -202,
	162, 163, 170, 141, -200, -151, 26, 460, 432, 431,
	173, 31, 215, 68, 69, 434, 435, 143, 57, 407,
	408, -149, 402, 409, 404, 437, 438, 114, 439, 104,
	106, 105, 440, 441, 442, 340, 341, 443, 444, 445,
	107, 108, 109, 110, 111, 112, 113, 446, 449, 447,
	448, 450, 451, 452, 457, 458, 453, 454, 455, 456,
	459, -85, -97, 485, 484, -98, -269, -274, 236, 401,
	230, 168, 430, -143, -139, -8, -198, 400, 405, 406,
	410, 403, 471, 473, 488, 489, 491, 476, 481, 480,
	483, -356, -268, -145, -144, -184, 91, 97, 102, 98,
	-375, 115, -378, 568, 92, 93, 94, 95, 96, 116,
	117, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 44, 376, 376, -175, -75, -75, -75, -75,
	-211, -119, -213, -10, -8, -378, 8, -75, -8, -9,
	-13, -34, -36, 490, -35, -274, -218, -233, 12, 158,
	42, 50, -216, -217, -12, -8, -136, 19, 23, 24,
	-124, 164, -136, -274, -76, -124, -255, 235, -75, -75,
	-244, -286, 302, -248, 390, 389, -270, -246, -269, -267,
	-245, 388, 224, 23, 470, 138, 25, 27, 142, 173,
	126, 19, 143, 37, 226, 328, 242, 172, 238, 431,
	219, 72, 471, 402, 404, 400, 407, 433, 434, 401,
	362, 31, 13, 473, 28, 252, 24, 38, 166, 221,
	146, 474, 255, 26, 253, 114, 117, 476, 22, 75,
	247, 14, 240, 40, 16, 477, 478, 17, 236, 235,
	158, 232, 70, 11, 215, 29, 155, 66, 479, 133,
	480, 481, 482, 483, 127, 68, 156, 20, 594, 405,
	406, 33, 555, 460, 266, 168, 73, 59, 556, 140,
	403, 484, 485, 115, 486, 118, 76, 561, 135, 18,
	71, 42, 487, 267, 488, 237, 595, 489, 393, 490,
	157, 222, 430, 69, 491, 568, 569, 230, 375, 8,
	436, 32, 251, 239, 125, 67, 492, 231, 145, 437,
	438, 234, 128, 116, 7, 132, 34, 12, 74, 77,
	408, 409, 410, 57, 124, 464, 144, 15, 493, 394,
	137, 131, -323, 156, -309, -313, -269, 246, -339, 242,
	-175, -332, -331, -269, -120, -264, 232, 240, 239, 132,
	-360, 135, 288, 401, 230, -51, -52, -245, 172, -106,
	263, 267, 86, 86, -313, -312, -311, -361, 267, 246,
	-338, -330, 238, 247, -319, 239, 240, -314, 232, 133,
	-361, -314, 237, 247, 267, 267, 123, 267, 123, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 262, -320,
	148, -320, 468, 468, -326, -361, -361, -361, 234, 35,
	35, -266, -314, 234, 25, -320, -320, -245, 172, -320,
	-320, -320, -320, 275, 275, -320, -320, -320, -320, -320,
	-320, -320, -320, -320, -320, -320, -320, -320, -320, -320,
	231, -360, -128, 387, 295, 80, -53, 277, -37, -175,
	-264, 232, 233, -360, 264, -175, 216, -175, -259, 156,
	15, -259, -256, 376, 374, 361, 366, -259, -259, -259,
	-259, 278, 359, -315, 232, 35, 243, 376, 278, 359,
	278, 279, 278, 279, 369, 379, 278, -279, 14, 158,
	401, 364, 368, 271, 231, 272, 233, 378, 279, -279,
	92, -260, 156, 376, 274, -259, -259, -284, -378, -270,
	328, -356, 557, -284, -284, 32, 89, 234, -269, -77,
	-269, 92, -15, -11, -22, -21, -23, 148, -126, 376,
	-114, 173, 575, 558, 559, 560, 557, 373, 565, 563,
	561, 278, 562, 86, 135, 137, 138, 4, -136, 155,
	-185, 148, 149, 150, 151, 152, 153, 154, 158, 140,
	142, 156, 157, 136, 159, 160, 161, 162, 163, 164,
	165, 167, 166, 168, 169, 172, 217, 218, -142, -142,
	-142, -142, -200, -378, -378, -378, -142, -254, -378, -142,
	-378, -378, -378, -378, -206, -136, -378, -382, -378, -382,
	-382, -300, -378, -300, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, 216, -378, -378, -378,
	-378, -378, -300, -300, -300, -300, -300, 102, 97, 91,
	-202, 98, 92, -269, -274, -8, -9, -194, -378, -283,
	-367, -368, -178, -175, -378, 295, -269, -269, 264, -216,
	-12, -8, -211, -217, -213, -8, -75, -112, -125, 63,
	64, -127, 24, 38, 67, 65, 23, -379, 87, -379,
	-233, -379, 86, -36, -237, 85, 61, 43, 92, 92,
	86, 21, -212, -214, -136, 14, -272, 4, -271, 25,
	-269, 92, 216, 100, 14, -176, 29, -175, -255, -255,
	86, 302, -248, -286, -250, -249, 391, 393, 148, -273,
	-269, 92, 31, 87, 86, -175, -289, -292, -294, -293,
	-295, -290, -291, 325, 326, 173, 329, 331, 332, 333,
	334, 335, 336, 337, 338, 339, 342, 32, 254, 321,
	322, 323, 324, 343, 344, 345, 346, 347, 348, 349,
	350, 308, 327, 462, 309, 310, 311, 312, 313, 314,
	316, 317, 318, 319, 320, -359, -356, 85, 87, 86,
	-296, 85, -128, 231, -356, 232, 232, 232, -75, 430,
	-320, -320, 262, 19, -44, -41, -346, 18, -40, -41,
	224, 119, 120, 221, 85, -309, 85, -318, -359, -356,
	85, 133, 237, 132, -317, -314, -317, -318, -356, -202,
	-356, 133, 133, -241, -269, -241, -241, 23, -241, 23,
	-241, 23, 94, -269, -241, 23, -241, 23, -241, 23,
	-241, 23, -241, 23, 31, 78, 79, 31, 81, 82,
	83, -202, -202, -309, -245, -175, -356, 94, 94, -320,
	-320, 94, 92, 92, 92, -320, -320, 94, 92, -276,
	-274, 92, -362, 248, 292, 294, 94, 94, 94, 94,
	31, 92, -363, 31, 582, 581, 583, 584, 585, 94,
	31, 94, 31, 94, -269, 85, -175, -134, 282, 219,
	221, 224, 76, 92, 296, 148, 44, 86, 234, 231,
	-356, -261, 236, -261, -269, -275, -274, -267, 92, -136,
	-316, 14, 158, -279, -279, -259, -175, -316, -279, -259,
	-175, -259, -259, -259, -259, -279, -279, -279, -259, -274,
	-274, -175, -175, -175, -175, -175, -175, -175, -284, -260,
	-259, 557, 92, -253, 14, 76, -284, -284, -282, 305,
	339, 551, 552, 553, 86, 464, -168, -175, 557, 557,
	557, 557, 557, 557, -136, -136, -136, -136, 486, -192,
	115, 140, 116, 117, -150, -193, -198, -200, 99, 158,
	142, 156, 157, -141, -142, -141, -141, -141, -141, -141,
	-141, -141, -141, -141, -141, -141, -141, -141, -285, -356,
	92, 173, -146, -145, 98, -375, -146, -122, -124, -136,
	-136, -356, -269, -122, -122, -136, -118, 24, 38, -204,
	-205, 144, -202, -379, -379, 94, 98, -269, -269, -111,
	-110, 412, 413, 414, 415, 417, 418, 419, 422, 423,
	427, 428, 411, 429, 416, 421, 424, 425, 426, 420,
	324, -136, -136, -136, -136, -136, -136, -82, -136, 126,
	127, 128, -136, -136, -195, -194, -355, -354, -353, -136,
	-136, -136, -136, -136, -136, -136, -136, -136, -136, -136,
	-136, -136, -136, -136, -136, -136, -136, -136, -136, -136,
	-136, -136, -379, -136, 94, -356, -139, -136, -136, -123,
	24, 38, -122, -270, -275, -267, -122, -123, -123, -122,
	-122, 216, -233, -379, -194, 86, -369, 393, 394, 555,
	-277, 267, -276, 25, -195, 92, 14, -239, 77, -269,
	-216, -216, 63, 64, 59, -122, -127, -379, -35, 25,
	-235, -269, 62, 92, -301, -245, 351, 352, -136, -136,
	86, -215, 27, 28, -175, -271, 164, -275, -175, -240,
	267, -175, -153, -155, -156, -157, -178, -201, -378, -158,
	482, 479, 14, -168, -169, -177, -274, -248, -250, 86,
	392, 394, 395, 76, 118, -136, -302, 172, -328, -327,
	-326, -309, -311, -312, -313, 87, -302, -305, 357, 356,
	-296, -296, -296, -296, -296, -301, -301, -301, -301, 85,
	85, -296, -296, -296, -296, -303, 85, -303, -303, -304,
	85, -304, -339, -136, -336, -335, -333, -334, 241, 101,
	464, 77, -331, -215, 94, -134, -262, 236, -337, -334,
	-356, -356, -356, -262, -356, 92, -356, 92, -107, -57,
	-1, 594, 595, 596, 86, 19, -310, -309, -56, 292,
	-342, -343, 267, -338, -332, -318, 133, -317, -318, -318,
	-356, 86, 29, 123, 123, 123, 123, 464, 221, 32,
	-309, -56, -285, 234, -285, -285, 92, 92, -258, 590,
	-168, -130, 284, 148, 273, 273, 231, 231, 286, -175,
	297, 299, 298, 296, 23, 285, 287, 289, 275, -175,
	-175, -261, 76, -170, -175, 26, -274, -175, -259, -259,
	-175, -259, -259, -175, -269, -114, 393, 86, 464, 22,
	-115, 22, -378, 115, 116, 117, -193, -141, -142, -141,
	138, 255, 86, -379, 25, 86, 77, -379, -379, -379,
	86, 14, -122, -207, -205, 146, -136, -379, -379, -379,
	86, 86, 14, -288, 25, -379, -379, -379, -379, -379,
	-206, -379, 14, 86, 86, -379, -379, 86, 86, -379,
	86, 86, 86, -352, 86, 86, 86, 86, -379, -379,
	-379, -379, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, -379, -90, 487, -379, -379, -379, -379, 86,
	-379, 86, -379, -122, -122, -378, 216, -379, -379, -379,
	-379, -379, -270, -379, -368, 554, 394, -182, -181, -179,
	74, 235, 75, -378, -276, -379, -146, 89, -236, 89,
	-235, -187, -269, 94, 98, -218, -152, -154, 14, -127,
	-200, 87, 86, -301, -222, -227, -256, -269, 92, 173,
	-214, 216, -183, 15, -186, 32, 57, -11, -378, -378,
	32, 86, -171, -173, -172, -174, 66, 70, 72, 67,
	68, 69, 73, -280, 25, -153, -9, -8, -378, -378,
	-378, -175, -168, -380, 14, 77, -380, 86, 216, -249,
	-251, 396, 393, 399, -356, 92, -106, 86, -326, -313,
	-219, -131, 40, -306, 358, -301, -301, -308, 92, -308,
	94, 94, 87, -47, -42, -43, 33, 80, -333, -320,
	92, 39, -269, 87, -130, -175, 140, 76, -337, -337,
	-337, -274, -2, 593, 599, 133, 85, 361, 18, -235,
	86, 87, -203, 293, 87, -108, -269, 87, 85, -318,
	-318, -269, -378, 231, 31, 31, -56, -203, -302, -356,
	592, 591, 87, 233, 291, -135, 407, -132, 92, 88,
	-175, -175, -175, -175, -175, 224, 221, 276, 234, -168,
	-175, 86, -80, 250, 245, -279, -279, 33, -175, 393,
	566, 564, -136, 138, 255, -150, -142, -124, 461, -287,
	173, 325, 254, 323, 319, 339, 330, 356, 321, 357,
	318, 317, 316, -287, -285, -136, -136, -211, 147, -136,
	145, -136, -136, -136, -379, 173, 325, 14, -136, -136,
	-136, -353, -136, -136, -136, -351, -350, -146, -202, -379,
	-351, -136, -136, -350, -350, -354, -354, -354, -354, -354,
	-194, -194, -194, -194, -378, -269, -93, -92, -91, 534,
	235, -90, -90, -90, 94, -356, -139, -93, 94, -356,
	-139, -379, -379, -123, -270, -179, -314, -314, -314, -241,
	86, -252, 22, 14, 57, 57, -152, -183, -153, -127,
	-269, -225, 550, -230, 46, -228, -229, 47, -226, 48,
	56, 164, -216, -136, -242, 76, -243, -247, -202, -197,
	-199, -198, -378, -234, -379, -269, -241, -243, -155, -156,
	-156, -155, -156, 66, 66, 66, 71, 66, 71, 66,
	-172, -274, -379, -379, -9, -9, -136, -277, 77, -153,
	-153, -177, -274, 164, 393, 397, 398, -326, -374, 115,
	140, 31, 76, 354, 101, -372, 172, -373, 237, 132,
	133, 249, 25, 41, 87, 86, 87, 86, 87, 86,
	-263, 500, 140, -43, -42, -320, -320, 94, -356, 233,
	26, -175, 76, 76, 76, -109, 597, 94, 85, -3,
	80, -136, 85, 19, -309, -202, -344, -297, -345, -298,
	-299, -5, -6, -321, 57, 101, -60, 44, 232, 577,
	578, 123, 590, -336, -235, -340, -342, -175, -138, -378,
	-137, -139, -143, 162, 163, -203, -175, -129, 282, 290,
	85, -133, 89, -358, 77, 273, 354, 273, -175, -80,
	-47, -175, -259, -259, 33, -356, -379, -150, -142, -378,
	-379, -296, -296, -296, -304, -296, 313, -296, 313, -296,
	-379, -379, 86, -379, 22, -379, -113, 436, -136, 86,
	86, -379, 85, 85, -136, -379, -379, -379, -352, 86,
	-379, 86, -379, 86, -379, -379, -379, -379, -379, -379,
	-379, -379, -379, -379, -379, -89, -269, -196, 267, -90,
	517, 517, -379, -379, -379, -90, -208, 86, -208, -208,
	-379, -180, 22, -180, -180, -379, 89, -175, -183, -209,
	16, -222, 51, 331, -232, -231, 55, 47, -229, 19,
	49, 19, 30, -242, 86, 148, 86, -379, -379, 86,
	57, 216, -379, -183, -166, -165, 76, 77, -167, 76,
	-165, 66, 66, -237, -379, -379, 86, -240, -153, -183,
	-183, 216, 115, -378, -140, -149, -138, 12, 92, 92,
	-356, 133, 133, -175, 85, -301, 92, -301, 94, 94,
	500, 31, 81, 82, 83, 31, 78, 79, -175, -175,
	-175, -175, -341, 85, 19, -136, 85, 148, 87, -235,
	-235, 269, 158, -320, 575, 275, 275, -320, -320, -320,
	87, -379, 86, -307, 464, 467, -136, -144, -144, -237,
	87, -349, 464, -357, -269, -269, -269, -269, -141, -301,
	-136, -136, -216, 92, -136, -136, 94, 94, -379, -379,
	-351, -350, -136, -379, -196, -211, 19, -96, -95, -94,
	14, -96, -96, -379, -136, -379, -379, -378, 66, 18,
	16, -378, -378, -277, -209, -210, 17, 19, -223, 53,
	-221, 52, -221, -231, 19, 19, 92, 19, 92, 133,
	-247, -136, -199, 57, -11, -269, -197, -269, -211, -136,
	85, -136, -146, -183, -183, -136, -189, 439, 104, 106,
	105, 440, 441, 442, 340, 341, 443, 444, 445, 107,
	108, 109, 110, 111, 112, 113, 446, 449, 447, 450,
	451, 452, 457, 458, 453, 454, 455, 456, 459, 85,
	-136, 87, 87, -237, -340, -57, 87, -235, 94, 87,
	270, -198, -378, 92, -320, -320, -320, 94, 94, -276,
	-373, -342, 468, 468, -379, 25, -348, -347, -270, 85,
	77, -117, 158, 464, -379, -379, -379, -379, -379, 87,
	87, -379, -379, 86, -211, -88, -87, -83, 569, 595,
	-194, -93, 292, 294, -93, -93, -93, -93, -93, -238,
	-379, -269, 237, 19, 19, -238, -238, -182, -210, -103,
	-102, -101, 493, -136, -194, -224, 54, 76, 118, 92,
	92, 92, 12, -197, 216, -216, -235, -160, 361, -211,
	-379, -235, 87, 25, 87, 599, 133, 87, -198, -116,
	-378, 266, -276, 92, 92, -11, 86, 148, -235, -175,
	-379, 462, 73, 465, -136, -88, -86, 142, -84, -136,
	567, 547, -90, -90, -90, -90, -90, -90, 86, -379,
	-379, -379, -103, 86, -100, -99, -269, 76, 118, -243,
	-269, 87, -379, -378, -216, 87, -220, -11, 85, -3,
	266, -78, 464, -347, -325, -270, 92, 94, 87, 62,
	463, 466, -352, -86, 527, 502, 568, 527, 502, -269,
	237, -101, 86, 25, -277, -161, -159, -269, 514, -365,
	-366, 76, -374, -371, 115, 140, 101, -372, 124, 125,
	-78, -136, 85, -379, -79, 281, 554, -358, 62, -379,
	138, -99, -378, -379, 86, 22, -289, -59, 524, -366,
	76, 13, 12, 115, 92, 87, -235, 242, -349, 464,
	-86, -89, -159, 521, -302, -146, -364, 250, 245, 248,
	32, -364, -4, 598, 87, 283, 465, -379, -58, 26,
	-160, 244, 31, 115, 94, -4, 466, 524, -146, -163,
	-162, -164, 558, 115, 31, -162, -164, 76, -146, 76,
	474, 558,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 758,
	758, 758, 0, 758, 0, 0, 758, -2, -2, 758,
	1299, 0, 758, 0, 0, -2, 690, 692, 0, 694,
	-2, 0, 0, 703, 1793, 1793, 753, 0, 0, 0,
	0, 0, 758, 758, 758, 758, 1159, 48, 758, 0,
	83, 84, 709, 710, 711, 63, 0, 1791, 1, 3,
	69, 73, 0, 0, 0, 56, 1168, 0, 76, 0,
	0, 762, 0, 760, 0, 1282, 758, 758, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 518, 458, 501, 456, 487, -2, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 351, 351, 0, 0, -2, 449, 449, 449, 0,
	0, 0, 484, 1284, 404, 351, 351, 0, 351, 351,
	351, 351, 0, 0, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 1185,
	151, 1300, 1297, 1298, 38, 39, 40, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 0, 1276, 0, 618,
	859, 0, 679, 679, 0, 679, 679, 679, 679, 0,
	0, 0, 630, 0, 0, 0, 0, 676, 0, 646,
	647, 0, 676, 0, 682, 0, 657, 679, 679, 660,
	1794, 0, 1794, 1794, 1267, 0, 673, 671, 685, 686,
	689, 693, 0, 698, 701, 1293, 1294, 0, 716, 47,
	1536, 708, 721, 722, 0, 754, 755, 43, 996, 0,
	881, 886, 897, 910, 911, 912, 913, 914, 916, 917,
	0, 0, 0, 0, 922, 923, 0, 0, 0, 0,
	0, 977, 0, 0, 0, 0, 0, 1135, 0, 1098,
	1098, 1013, 1098, 1100, 1100, 0, 0, 0, 1790, 1576,
	1584, 1585, 1607, 1690, 1736, 1580, 1581, 1562, 1574, 1577,
	1565, 1566, 1568, 1570, 1575, 1582, 1588, 1567, 1587, 1586,
	0, 1563, 1564, 1569, 1579, 1583, 1571, 1572, 1573, 1578,
	1589, 0, 0, 0, 0, 0, 1144, 0, 0, 0,
	0, 0, 0, 257, 258, 995, 1256, 1100, 1100, 1100,
	1100, 1100, 942, 943, 944, 945, 946, 965, 966, 972,
	973, -2, -2, 204, 205, 206, 207, 208, 209, 210,
	0, 200, 0, 0, 262, 263, 259, 260, 261, 979,
	980, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 1793, 0, 731, 0, 0, 0, 0, 0,
	1168, 0, 1160, 1159, 61, 0, 758, -2, 0, 0,
	0, 0, 45, 0, 50, 818, 75, 74, 1207, 0,
	0, 0, 57, 1169, 65, 67, 1170, 0, 763, 764,
	0, 794, 798, 0, 759, 0, 0, 1283, 1282, 1282,
	100, 0, 1732, 1260, -2, -2, 0, 0, 1295, 1296,
	1269, -2, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, -2, 0, 0, 161, 162, 0, 41, 377, 0,
	157, 0, 371, 321, 1185, 0, 0, 0, 0, 0,
	758, 0, 1277, 142, 143, 149, 150, 351, 351, 498,
	0, 0, 151, 151, 465, 466, 467, 0, 0, -2,
	375, 0, 450, 0, 0, 365, 365, 369, 367, 368,
	0, 0, 0, 0, 0, 0, 478, 0, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 579, 0,
	352, 0, 496, 497, 405, 0, 0, 0, 0, 476,
	477, 0, 0, 1285, 1286, 0, 0, 351, 351, 0,
	0, 0, 0, 351, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 1198, 0, 0, 0, -2, 0, 610, 0,
	0, 0, 1278, 1278, 0, 617, 0, 619, 620, 0,
	0, 621, 0, 676, 676, 674, 675, 623, 624, 625,
	626, 679, 0, 0, 360, 361, 362, 676, 679, 0,
	679, 679, 679, 679, 676, 676, 676, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 682, 679,
	0, 653, 0, 654, 655, 658, 659, 661, 1795, 1796,
	1316, 1794, 1794, 665, 669, 1268, 691, 699, 702, 719,
	717, 718, 720, 712, 713, 714, 715, 0, 733, 734,
	739, 0, 0, 0, 0, 745, 746, 747, 0, 0,
	750, 751, 752, 0, 0, 0, 0, 0, 879, 0,
	0, 985, 986, 987, 988, 989, 990, 991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 918, 919,
	920, 921, 924, 0, 0, 0, 929, 930, 0, 0,
	0, 0, 0, 768, 0, 1136, 0, 1011, 0, 1012,
	1014, 1015, 0, 1016, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 778, 0, 0, 778, 778,
	0, 0, 193, 194, 195, 196, 197, 211, 212, 213,
	214, 215, 264, 1144, 0, 995, 0, 0, 0, 44,
	723, 724, 0, 842, 1288, 0, 0, 774, 0, 55,
	64, 66, 1168, 59, 1168, 0, 780, 0, 0, -2,
	-2, 781, 787, 788, 789, 790, 791, 52, 1792, 53,
	0, 72, 0, 46, 0, 0, 0, 0, 333, 1210,
	0, 0, 1161, 1162, 1165, 0, 795, 1618, 799, 0,
	801, 802, 0, 761, 0, 98, 0, 858, 0, 0,
	0, 1732, 1266, 0, 102, 103, 0, 0, 0, 339,
	1271, 1272, 1273, -2, 358, 0, 339, 328, 272, 273,
	274, 321, 276, 321, 321, 321, 321, 333, 333, 333,
	333, 304, 305, 306, 307, 308, 0, 0, 291, 321,
	321, 321, 321, 311, 312, 313, 314, 315, 316, 317,
	318, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	323, 323, 323, 325, 325, 0, 42, 0, 343, 0,
	1165, 0, 1198, 1280, 1290, 0, 0, 0, 1280, 120,
	0, 0, 499, 529, 459, 488, 500, 0, 462, 463,
	-2, 0, 0, 449, 0, 451, 0, 359, 0, -2,
	0, 369, 0, 365, 369, 366, 369, 357, 370, 480,
	481, 482, 0, 559, 828, 0, 0, 0, 0, 0,
	565, 566, 567, 0, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 489, 490, 491, 492, 493, 494,
	495, 0, 0, 451, 0, 485, 0, 406, 407, 0,
	0, 410, 411, 412, 413, 0, 0, 416, 417, 418,
	845, 846, 419, 443, 444, 445, 420, 421, 422, 423,
	424, 425, 426, 437, 438, 439, 440, 441, 442, 427,
	428, 429, 430, 431, 434, 0, 135, 1189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1278,
	0, 0, 0, 0, 777, 860, 1301, 1302, 680, 681,
	0, 363, 364, 679, 679, 627, 666, 0, 679, 631,
	667, 632, 634, 633, 635, 648, 649, 679, 638, 677,
	678, 639, 640, 641, 642, 643, 644, 645, 662, 650,
	651, 652, 683, 0, 687, 688, 663, 664, 0, 700,
	704, 705, 706, 707, 0, 0, 736, 94, 741, 742,
	743, 744, 756, 749, 997, 876, 877, 878, 0, 880,
	883, 0, 981, 983, 885, 887, 992, 993, 994, 0,
	0, 0, 0, 0, 891, 895, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 907, 908, 909, 915, 1114,
	1115, 1116, 932, 265, 266, 0, 933, 0, 792, 0,
	0, 0, 931, 0, 0, 0, 0, 769, 770, 1142,
	1139, 0, 0, 1099, 1101, 0, 0, 0, 0, 0,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1117, 0, 0, 0, 0, 0, 1135, 0, 934,
	935, 936, 0, 0, 0, 1289, 0, 130, 131, 0,
	0, 0, 0, 0, 1071, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 779, 1145, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 1254, 0, 0, 726, 727, 729, 0,
	862, 0, 843, 0, 0, 732, 0, 773, 0, 776,
	58, 60, 785, 786, 0, 803, 782, 54, 49, 0,
	0, 820, 1208, 333, 1230, 0, 337, 338, 1171, 1172,
	0, 1164, 1166, 1167, 77, 800, 796, 0, 874, 0,
	0, 857, 0, 806, 808, 809, 810, 840, 0, 813,
	0, 0, 0, 0, 0, 96, 859, 1261, 101, 0,
	0, 106, 107, 1262, 1263, 1264, 1265, 0, 518, -2,
	401, 163, 165, 166, 167, 158, -2, 331, 329, 330,
	275, 333, 333, 298, 299, 300, 301, 302, 303, 0,
	0, 292, 293, 294, 295, 286, 0, 287, 288, 289,
	0, 290, 376, 0, 1173, 344, 345, 347, 351, 0,
	0, 0, 372, 373, 0, 1189, 0, 0, 0, 1291,
	1290, 1290, 1290, 0, 153, 154, 155, 156, 554, 0,
	0, 530, 552, 553, 151, 0, 0, 159, 453, 452,
	0, 586, 0, 374, 0, 0, 369, 369, 354, 355,
	483, 0, 0, 561, 562, 563, 564, 0, 0, 0,
	451, 453, 339, 0, 408, 409, 414, 415, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 514, 515, 516, 517, 1186, 1187, 1188, 0, 0,
	611, 0, 0, 393, 92, 1279, 616, 676, 637, 668,
	676, 629, 636, 656, 696, 740, 0, 0, 0, 0,
	748, 0, 0, 884, 982, 984, 888, 0, 892, 896,
	0, 0, 0, 0, 0, 0, 0, 978, 1002, 1003,
	0, 0, 1159, 0, 1140, 0, 0, 1010, 1102, 1103,
	0, 0, 0, 0, 0, 1021, 1022, 1023, 1024, 1025,
	0, 1027, 0, 0, 0, 1031, 1032, 0, 0, 1033,
	0, 0, 0, 0, 0, 0, 0, 0, 1042, 1043,
	1044, 1045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1056, 1057, 0, 960, 0, 0, 0, 0,
	960, 0, 998, 0, 0, 778, 0, 1104, 1105, 1106,
	1107, 1108, 1145, 1255, 725, 728, 730, 816, 863, 864,
	0, 0, 0, 0, 844, 1287, 771, 772, 775, -2,
	0, 0, 1147, 0, 0, 803, 874, 804, 0, 783,
	51, 819, 0, 1212, 1211, 1224, 1237, 334, 335, 336,
	1163, 0, 1168, 0, 1248, 0, 0, 1240, 0, 0,
	0, 0, 0, 0, 0, 0, 847, 0, 0, 850,
	0, 0, 0, 0, 841, 0, 0, 0, 0, 0,
	0, -2, 0, 0, 90, 91, 0, 0, 0, 104,
	105, 0, 0, 111, 340, 341, 144, 151, 403, 164,
	383, 0, 0, 271, 332, 296, 297, 0, 319, 0,
	0, 0, 396, 116, 1177, 1176, 351, 351, 346, 0,
	349, 0, 1292, 322, 0, 134, 0, 0, 0, 0,
	0, 140, 524, 0, 0, 531, 0, 0, 0, 457,
	0, 468, 469, 0, 558, -2, 607, 343, 0, 353,
	356, 829, 0, 0, 470, 0, 453, 474, 475, 486,
	435, 436, 433, 0, 0, 1199, 1200, 1205, 1203, 1204,
	121, 506, 508, 507, 511, 0, 0, 504, 0, 393,
	1173, 0, 615, 394, 395, 679, 679, 735, 95, 0,
	738, 0, 0, 0, 0, 889, 893, 793, 0, 0,
	321, 321, 1122, 321, 325, 1125, 321, 1127, 321, 1130,
	321, 1133, 1134, 0, 0, 0, 0, 1137, 1009, 1143,
	0, 0, 0, 0, 1020, 0, 0, 0, 0, 0,
	0, 132, 133, 1071, 0, 0, 1073, 1075, 1076, 1037,
	1072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 954, 959, 0, 961, 962, 0,
	0, 1059, 1060, 1061, 0, 0, 0, 0, 1069, 1069,
	1069, 999, 1000, 0, 1146, 865, 870, 870, 870, 0,
	0, 0, 1274, 1275, 1148, 1149, 874, 1150, 805, 784,
	821, 1230, 0, 1223, 0, -2, 1232, 0, 0, 0,
	1238, 797, 78, 875, 81, 0, 1248, 1257, 0, 1239,
	1250, 1252, 0, 0, 0, 1244, 0, 874, 807, 836,
	838, 0, 833, 848, 849, 851, 0, 853, 0, 855,
	856, 818, 812, 814, 0, 0, 0, 98, 0, 874,
	874, 97, 0, 861, 108, 109, 110, 402, 168, 173,
	0, 0, 0, 178, 0, 180, 0, 384, 0, 268,
	270, 0, 0, 171, 333, 0, 333, 0, 326, 0,
	385, 397, 0, 1174, 1175, 0, 0, 348, 350, 0,
	1281, 136, 0, 0, 0, 527, 0, 555, 0, 0,
	0, 0, 0, 0, 160, 454, 587, 588, 589, 590,
	591, 592, 593, 594, 0, 351, 0, 0, 0, 351,
	351, 351, 599, 342, 0, 0, 583, 580, 471, 0,
	198, 199, 201, 0, 0, 473, 818, 1190, 1191, 1192,
	0, 1202, 1206, 124, 0, 0, 0, 0, 612, 613,
	614, 93, 622, 628, 737, 757, 882, 890, 894, 0,
	926, 1120, 333, 1123, 1124, 1126, 1128, 1129, 1131, 1132,
	927, 928, 0, 1005, 0, 1007, 1168, 0, 1141, 0,
	0, 1019, 0, 0, 0, 1028, 1029, 1030, 0, 0,
	1036, 0, 1038, 0, 1041, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 0, 954, 1159, 0, 1058,
	963, 964, 969, 969, 969, 1065, 0, 0, 0, 0,
	1001, 0, 0, 0, 0, 842, -2, 62, 1150, 1152,
	0, 1217, 1215, 1215, 1225, 1226, 0, 0, 1233, 0,
	0, 0, 0, 82, 0, 0, 0, 1253, 0, 0,
	0, 0, 99, 1159, 830, 837, 0, 0, 831, 0,
	832, 852, 854, 811, -2, 815, 0, 874, 874, 88,
	89, 0, 174, 0, 176, 191, 192, 0, 179, 181,
	182, 267, 269, 0, 0, 309, 320, 310, 0, 0,
	398, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 818, 137,
	138, 139, 519, 0, 529, 0, 0, 0, 522, 0,
	460, 0, 0, 0, 351, 351, 351, 0, 0, 0,
	0, 560, 0, 568, 0, 0, 0, 202, 203, 0,
	1201, 505, 0, 122, 123, 0, 0, 510, 1109, 1121,
	0, 0, 0, 1138, 0, 0, 0, 0, 1026, 1034,
	0, 1074, 0, 958, 1159, 950, 0, 960, 970, 971,
	0, 960, 960, 960, 1070, 960, 960, 0, 871, 0,
	0, 0, 0, 862, 1152, 1157, 0, 0, 1220, 0,
	1213, 1216, 1214, 1227, 0, 0, 1234, 0, 1236, 0,
	1258, 1259, 1251, 0, 1243, 1246, 1242, 1245, 1168, 834,
	0, 839, 0, 1159, 87, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 327, 0, 0, 0, 520, 0, 532, 523,
	0, 597, 0, 601, 0, 0, 0, 604, 605, 606,
	378, 584, 581, 582, 472, 0, 125, 126, 0, 0,
	0, 0, 0, 0, 1004, 1006, 1008, 1017, 1018, 1118,
	1119, 1035, 1039, 0, 950, 957, 951, 0, 937, 938,
	955, 0, 967, 968, 0, 0, 0, 0, 0, 0,
	867, 824, 825, 872, 873, 0, 0, 817, 1157, 80,
	1158, 1155, 0, 1153, 1151, 1209, 0, 1218, 1219, 1228,
	1229, 1235, 0, 1241, 0, 85, 0, 0, 0, 1168,
	175, 0, 185, 0, 528, 0, 531, 521, 595, 596,
	0, 608, 600, 602, 603, 1193, 0, 0, 0, 512,
	925, 0, 0, 0, 1071, 956, 952, 0, 947, 0,
	1493, 1738, 1062, 1063, 1064, 1066, 1067, 1068, 0, 866,
	868, 869, 79, 0, 1154, 975, 0, 1221, 1222, 1249,
	1247, 835, 842, 0, 86, 379, 383, 1193, 0, 0,
	0, 502, 1195, 127, 128, 446, 447, 448, 121, 1110,
	0, 1113, 0, 0, 948, 949, 939, 940, 941, 826,
	827, 1156, 0, 0, 533, 0, 535, 0, -2, 380,
	381, 0, 169, 186, 187, 0, 0, 190, 183, 184,
	117, 0, 0, 609, 0, 1196, 1197, 124, 1111, 1040,
	0, 976, 954, 534, 0, 0, 339, 0, 544, 382,
	0, 0, 0, 188, 189, 556, 0, 0, 509, 0,
	953, 0, 536, 537, 545, 0, 386, 388, 389, 0,
	0, 387, 525, 0, 556, 1194, 0, 974, 0, 546,
	542, 390, 391, 392, 557, 526, 1112, 0, 538, 539,
	540, 0, 549, 550, 0, 541, 0, 0, 551, 0,
	547, 548,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 167, 159, 3,
	85, 87, 164, 162, 86, 163, 216, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 600,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 169, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 170,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 160,
	161, 166, 168, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:555
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:560
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:561
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:565
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:601
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:607
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:615
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:620
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:624
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:630
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:636
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:642
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:646
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:651
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:655
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:661
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:665
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:671
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:685
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:708
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:714
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:745
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:824
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:830
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:842
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:850
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:874
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:878
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:884
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:890
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:898
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:902
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:907
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:908
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:912
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:916
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:922
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:926
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:932
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:936
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:941
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:945
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:951
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:957
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:967
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:971
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:977
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:981
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:985
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:991
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:995
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:999
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1003
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1009
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1013
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1019
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1025
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1032
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1041
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1045
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1052
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1056
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1061
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1065
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1071
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1076
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1081
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1087
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1092
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1098
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1103
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1107
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1113
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1123
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1129
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1136
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1143
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1148
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1153
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1158
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1165
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1172
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1183
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1194
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1200
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1204
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1208
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1218
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1222
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1228
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1232
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1238
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1242
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1249
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1253
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1259
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1269
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1274
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1283
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1296
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1307
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1316
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1325
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1342
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1348
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1354
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1359
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1364
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1369
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1374
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1379
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1388
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1395
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1399
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1404
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1408
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1413
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1419
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1425
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1430
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1437
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1444
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1448
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1452
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1456
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1460
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1471
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1478
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1482
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1488
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1492
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1496
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1500
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1504
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1508
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1512
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1517
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1521
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1525
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1529
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1533
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1710
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1714
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1718
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1724
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1728
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1738
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1742
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1749
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1753
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1757
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1761
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1938
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1983
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1992
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1997
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2001
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2009
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2013
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2019
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2031
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2035
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2040
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2044
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2049
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2053
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2076
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2080
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2091
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2100
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2106
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2116
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2120
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2125
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2129
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2145
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2149
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2153
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2157
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2161
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2170
		{
			yyVAL.str = yyDollar[2].str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2200
		{
			yyVAL.str = "key"
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.str = yyDollar[1].str
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2219
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2229
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2233
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2239
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2245
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2249
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2255
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2259
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2265
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2271
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2275
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2279
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2283
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2288
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2292
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2298
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2304
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2310
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2316
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2320
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2324
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2328
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2332
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2337
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2350
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2358
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2367
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2373
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2377
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2381
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2387
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2391
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2397
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2401
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2405
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2409
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2413
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2417
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2421
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2425
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2429
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2433
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2437
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2441
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2445
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2449
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2453
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2457
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2461
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2465
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2469
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2473
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2477
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2481
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2485
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2489
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2493
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2497
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2501
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2505
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2510
		{
			yyVAL.str = ""
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2537
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2545
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2550
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2556
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2560
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2565
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2569
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2574
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2578
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2582
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2586
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2590
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2594
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2600
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2604
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2608
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2614
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2618
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2622
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2626
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2630
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2634
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2638
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2642
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2646
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2650
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2654
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2658
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2662
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2666
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2670
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2674
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2678
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2682
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2686
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2690
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2694
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2698
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2702
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2708
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2712
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2718
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2722
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2726
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2730
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2734
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2738
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2742
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2746
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2750
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2756
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2763
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2770
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2777
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2783
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2787
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2794
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2801
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2813
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2823
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2827
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2831
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2844
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2854
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2858
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2869
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2876
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2883
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2890
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2897
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2904
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2908
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2917
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2925
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2934
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2941
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2953
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2962
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2977
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2982
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2986
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2991
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2995
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3001
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3007
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3013
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3017
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3023
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3027
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3033
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3039
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3045
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3051
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3057
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3061
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3075
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3081
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3087
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3091
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3095
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3101
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3105
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3110
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3114
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3119
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3123
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3129
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3133
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3137
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3141
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3145
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3149
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3153
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3157
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3161
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3165
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3169
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3173
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3177
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3181
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3185
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3189
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3193
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3197
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3201
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3205
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3209
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3213
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3218
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3222
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3226
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3233
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3237
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3243
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3248
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3252
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3257
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3262
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3267
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3272
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3277
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3283
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3289
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3296
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3303
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3310
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3318
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3322
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3328
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3334
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3340
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3346
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3352
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3358
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3364
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3370
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3376
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = ""
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3386
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3392
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3396
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 613:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3406
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3415
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3419
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3434
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3440
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3444
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3448
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3456
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3460
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3464
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3468
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3472
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3476
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3480
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3484
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3488
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3492
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3496
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3500
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3504
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3508
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3512
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3516
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3520
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3524
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3528
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3532
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3536
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3540
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3544
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3552
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3556
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3560
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3564
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3568
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3576
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3580
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3584
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3588
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3596
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3600
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3607
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3611
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3615
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3619
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3623
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3627
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3631
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3635
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3639
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3645
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3649
		{
			yyVAL.str = "extended "
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3655
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3659
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3665
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3675
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3683
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3689
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3693
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3697
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3707
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3713
		{
			yyVAL.empty = struct{}{}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3717
		{
			yyVAL.empty = struct{}{}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3721
		{
			yyVAL.empty = struct{}{}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3731
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3745
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3751
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3755
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3776
		{
			yyVAL.empty = struct{}{}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3778
		{
			yyVAL.empty = struct{}{}
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3781
		{
			yyVAL.empty = struct{}{}
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.empty = struct{}{}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3788
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3799
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3803
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3807
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3811
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3815
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3819
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = yyDollar[1].str
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.str = yyDollar[1].str
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.str = yyDollar[1].str
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3847
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3851
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3856
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3860
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3870
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3890
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3896
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3900
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3906
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3912
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3916
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3920
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3924
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3972
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3978
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3982
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3986
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3990
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3998
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4002
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4014
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4031
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4040
		{
			yyVAL.str = ""
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4044
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4049
		{
			setAllowComments(yylex, true)
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4053
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4059
		{
			yyVAL.strs = nil
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4063
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4073
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4077
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4082
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
			yyVAL.str = SQLCacheStr
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4095
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4099
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4103
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4134
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4149
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4153
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4158
		{
			yyVAL.strs = nil
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4166
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4170
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4174
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.str = SQLCacheStr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.str = DistinctStr
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.str = DistinctStr
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4196
		{
			yyVAL.str = StraightJoinHint
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4210
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4214
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4220
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4224
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4228
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4232
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4237
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4241
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4245
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4257
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4261
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4267
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4273
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4277
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4287
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4291
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4295
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4299
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4305
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4309
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4315
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4319
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4328
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4334
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4338
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4344
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4348
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4354
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4358
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4362
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4366
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4372
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4376
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4389
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4393
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4397
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4401
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4409
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4413
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4419
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4421
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4424
		{
			yyVAL.empty = struct{}{}
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4429
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4433
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4437
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4450
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4454
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4458
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4464
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4470
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4474
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4478
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4482
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4488
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4492
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4502
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4516
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4522
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4531
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4537
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4541
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4547
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4551
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4555
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4559
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4564
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4568
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4572
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4576
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4582
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4586
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4593
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4597
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4601
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4605
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4609
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4613
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4617
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4665
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4677
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4681
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4687
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4691
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4695
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4699
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4703
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4707
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4711
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4715
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4719
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4723
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4727
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4731
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4735
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4741
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4745
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4749
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4753
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4757
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4761
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4765
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4769
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4773
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4777
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4781
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4785
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4789
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4793
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4797
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4801
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4805
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4809
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4813
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4821
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4825
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4833
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4837
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4843
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4847
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4851
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:4857
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:4861
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:4867
		{
			yyLOCAL = CurrentRowType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:4871
		{
			yyLOCAL = UnboundedPrecedingType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:4875
		{
			yyLOCAL = UnboundedFollowingType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4881
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4885
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4889
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4893
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4897
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:4903
		{
			yyLOCAL = &FramePoint{Type: yyDollar[1].framePointTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:4907
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:4911
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4920
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4926
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4930
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion(), IsBetween: true}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4935
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4939
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:4945
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent.String(), PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:4950
		{
			yyLOCAL = &WindowSpecification{PartitionClause: yyDollar[1].exprsUnion(), OrderClause: yyDollar[2].orderByUnion(), FrameClause: yyDollar[3].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:4956
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:4960
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:4965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:4972
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:4978
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:4982
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:4988
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:4992
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:4998
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5002
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5014
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5020
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5024
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5030
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5036
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5040
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5046
		{
			yyVAL.str = ""
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5050
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5056
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5060
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5067
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5071
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5075
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5079
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5085
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5089
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5093
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5097
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5101
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5105
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5109
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5115
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5119
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5123
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5130
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5136
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5140
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5180
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5184
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5192
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5196
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5200
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5204
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5208
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5242
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5254
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5258
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5266
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5270
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5274
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5278
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5282
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5302
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5306
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5310
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5314
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			val := convertStringToInt(yyDollar[3].str)
			yyLOCAL = &NtileExpr{IntValue: &val, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = &NtileExpr{VarValue: yyDollar[3].colIdent, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = &NtileExpr{IsNull: true, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			val := convertStringToInt(yyDollar[5].str)
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), IntValue: &val, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), VarValue: yyDollar[5].colIdent, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5434
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), IsNull: true, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			val := convertStringToInt(yyDollar[5].str)
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), IntValue: &val, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5448
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), VarValue: yyDollar[5].colIdent, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5452
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), IsNull: true, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5470
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5476
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5480
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5486
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5490
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5496
		{
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5498
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5502
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5506
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5510
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5514
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5518
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5522
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5526
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5530
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5534
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5538
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5544
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5548
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5552
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5556
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5560
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5564
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5568
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5572
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5576
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5598
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5609
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5613
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5617
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5621
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5625
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5631
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5635
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5639
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5643
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5647
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5653
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5657
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5661
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5671
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5675
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5681
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5685
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5689
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5693
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5697
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5703
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5707
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5711
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5715
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5719
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5723
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5727
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5731
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5735
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5739
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5745
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5749
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5754
		{
			yyVAL.str = string("")
		}
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5758
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5764
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5768
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5774
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5789
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5793
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5797
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5803
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5812
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5816
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5822
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5826
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5835
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:5841
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:5847
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5851
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:5856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:5860
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5869
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5875
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5881
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5885
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5891
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5896
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5900
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5904
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5909
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5913
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5919
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5923
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5927
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5932
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5936
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5940
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5944
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5948
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5955
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5959
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5963
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5967
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5973
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5977
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5981
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5986
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5990
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5994
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5998
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6003
		{
			yyVAL.str = ""
		}
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6007
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6013
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6017
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6022
		{
			yyVAL.str = ""
		}
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6026
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6031
		{
			yyVAL.str = "cascaded"
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6035
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6039
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6048
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6054
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6060
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6066
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6075
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6079
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6084
		{
			yyVAL.str = ""
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6088
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6094
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6098
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6104
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6108
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6112
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6117
		{
			yyVAL.str = ""
		}
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6121
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6125
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6130
		{
			yyVAL.str = ""
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6134
		{
			yyVAL.str = " header"
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6139
		{
			yyVAL.str = ""
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6143
		{
			yyVAL.str = " manifest on"
		}
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6147
		{
			yyVAL.str = " manifest off"
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6152
		{
			yyVAL.str = ""
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6156
		{
			yyVAL.str = " overwrite on"
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6160
		{
			yyVAL.str = " overwrite off"
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6166
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6171
		{
			yyVAL.str = ""
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6175
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6181
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6185
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6191
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6195
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6200
		{
			yyVAL.str = ""
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6204
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6210
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6214
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6220
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6224
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6228
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6233
		{
			yyVAL.str = ""
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6237
		{
			yyVAL.str = " optionally"
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6250
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6254
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6258
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6262
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6266
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6272
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6276
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6280
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1247:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6284
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6293
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6299
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6303
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6309
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6313
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6319
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6323
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6338
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6342
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6348
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6354
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6358
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6364
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6368
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6372
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6376
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6380
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6388
		{
			yyVAL.str = "charset"
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6415
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6420
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6422
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6425
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6427
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6430
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6432
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6435
		{
			yyVAL.empty = struct{}{}
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6437
		{
			yyVAL.empty = struct{}{}
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6439
		{
			yyVAL.empty = struct{}{}
		}
	case 1287:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6443
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6452
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6459
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6463
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6469
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6473
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6480
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6486
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6490
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6496
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6500
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6507
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7020
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7029
		{
			decNesting(yylex)
		}
	case 1793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7034
		{
			skipToEnd(yylex)
		}
	case 1794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7039
		{
			skipToEnd(yylex)
		}
	case 1795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7043
		{
			skipToEnd(yylex)
		}
	case 1796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7047
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
