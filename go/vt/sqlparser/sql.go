// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const NOW = 57727
const CURRENT_TIME = 57728
const LOCALTIME = 57729
const LOCALTIMESTAMP = 57730
const CURRENT_USER = 57731
const UTC_DATE = 57732
const UTC_TIME = 57733
const UTC_TIMESTAMP = 57734
const DAY = 57735
const DAY_HOUR = 57736
const DAY_MICROSECOND = 57737
const DAY_MINUTE = 57738
const DAY_SECOND = 57739
const HOUR = 57740
const HOUR_MICROSECOND = 57741
const HOUR_MINUTE = 57742
const HOUR_SECOND = 57743
const MICROSECOND = 57744
const MINUTE = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const MONTH = 57748
const QUARTER = 57749
const SECOND = 57750
const SECOND_MICROSECOND = 57751
const YEAR_MONTH = 57752
const WEEK = 57753
const REPLACE = 57754
const CONVERT = 57755
const CAST = 57756
const SUBSTR = 57757
const SUBSTRING = 57758
const GROUP_CONCAT = 57759
const SEPARATOR = 57760
const TIMESTAMPADD = 57761
const TIMESTAMPDIFF = 57762
const WEIGHT_STRING = 57763
const LTRIM = 57764
const RTRIM = 57765
const TRIM = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const CUME_DIST = 57795
const DESCRIPTION = 57796
const DENSE_RANK = 57797
const EMPTY = 57798
const EXCEPT = 57799
const FIRST_VALUE = 57800
const GROUPING = 57801
const GROUPS = 57802
const JSON_TABLE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LATERAL = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const OF = 57810
const OVER = 57811
const PERCENT_RANK = 57812
const RANK = 57813
const RECURSIVE = 57814
const ROW_NUMBER = 57815
const SYSTEM = 57816
const WINDOW = 57817
const ACTIVE = 57818
const ADMIN = 57819
const BUCKETS = 57820
const CLONE = 57821
const COMPONENT = 57822
const DEFINITION = 57823
const ENFORCED = 57824
const EXCLUDE = 57825
const FOLLOWING = 57826
const GEOMCOLLECTION = 57827
const GET_MASTER_PUBLIC_KEY = 57828
const HISTOGRAM = 57829
const HISTORY = 57830
const INACTIVE = 57831
const INVISIBLE = 57832
const LOCKED = 57833
const MASTER_COMPRESSION_ALGORITHMS = 57834
const MASTER_PUBLIC_KEY_PATH = 57835
const MASTER_TLS_CIPHERSUITES = 57836
const MASTER_ZSTD_COMPRESSION_LEVEL = 57837
const NESTED = 57838
const NETWORK_NAMESPACE = 57839
const NOWAIT = 57840
const NULLS = 57841
const OJ = 57842
const OLD = 57843
const OPTIONAL = 57844
const ORDINALITY = 57845
const ORGANIZATION = 57846
const OTHERS = 57847
const PATH = 57848
const PERSIST = 57849
const PERSIST_ONLY = 57850
const PRECEDING = 57851
const PRIVILEGE_CHECKS_USER = 57852
const PROCESS = 57853
const RANDOM = 57854
const REFERENCE = 57855
const REQUIRE_ROW_FORMAT = 57856
const RESOURCE = 57857
const RESPECT = 57858
const RESTART = 57859
const RETAIN = 57860
const REUSE = 57861
const ROLE = 57862
const SECONDARY = 57863
const SECONDARY_ENGINE = 57864
const SECONDARY_LOAD = 57865
const SECONDARY_UNLOAD = 57866
const SKIP = 57867
const SRID = 57868
const THREAD_PRIORITY = 57869
const TIES = 57870
const UNBOUNDED = 57871
const VCPU = 57872
const VISIBLE = 57873
const FORMAT = 57874
const TREE = 57875
const VITESS = 57876
const TRADITIONAL = 57877
const LOCAL = 57878
const LOW_PRIORITY = 57879
const NO_WRITE_TO_BINLOG = 57880
const LOGS = 57881
const ERROR = 57882
const GENERAL = 57883
const HOSTS = 57884
const OPTIMIZER_COSTS = 57885
const USER_RESOURCES = 57886
const SLOW = 57887
const CHANNEL = 57888
const RELAY = 57889
const EXPORT = 57890
const CURRENT = 57891
const ROW = 57892
const ROWS = 57893
const AVG_ROW_LENGTH = 57894
const CONNECTION = 57895
const CHECKSUM = 57896
const DELAY_KEY_WRITE = 57897
const ENCRYPTION = 57898
const ENGINE = 57899
const INSERT_METHOD = 57900
const MAX_ROWS = 57901
const MIN_ROWS = 57902
const PACK_KEYS = 57903
const PASSWORD = 57904
const FIXED = 57905
const DYNAMIC = 57906
const COMPRESSED = 57907
const REDUNDANT = 57908
const COMPACT = 57909
const ROW_FORMAT = 57910
const STATS_AUTO_RECALC = 57911
const STATS_PERSISTENT = 57912
const STATS_SAMPLE_PAGES = 57913
const STORAGE = 57914
const MEMORY = 57915
const DISK = 57916
const PARTITIONS = 57917
const LINEAR = 57918
const RANGE = 57919
const LIST = 57920
const SUBPARTITION = 57921
const SUBPARTITIONS = 57922
const HASH = 57923

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	599, 145,
	-2, 151,
	-1, 48,
	131, 151,
	171, 151,
	327, 151,
	-2, 455,
	-1, 55,
	35, 670,
	231, 670,
	242, 670,
	277, 684,
	278, 684,
	-2, 672,
	-1, 60,
	233, 697,
	-2, 695,
	-1, 114,
	230, 1252,
	-2, 119,
	-1, 116,
	1, 146,
	599, 146,
	-2, 151,
	-1, 126,
	132, 358,
	236, 358,
	-2, 449,
	-1, 145,
	131, 151,
	171, 151,
	327, 151,
	-2, 464,
	-1, 687,
	215, 1273,
	-2, 1269,
	-1, 688,
	215, 1274,
	-2, 1270,
	-1, 763,
	59, 765,
	-2, 780,
	-1, 800,
	147, 1674,
	-2, 112,
	-1, 801,
	147, 1520,
	-2, 113,
	-1, 807,
	147, 1603,
	-2, 1246,
	-1, 957,
	147, 1450,
	-2, 1243,
	-1, 995,
	241, 41,
	246, 41,
	-2, 369,
	-1, 1072,
	1, 503,
	599, 503,
	-2, 151,
	-1, 1313,
	59, 766,
	-2, 785,
	-1, 1314,
	59, 767,
	-2, 786,
	-1, 1367,
	131, 151,
	171, 151,
	327, 151,
	-2, 399,
	-1, 1444,
	132, 358,
	236, 358,
	-2, 449,
	-1, 1453,
	241, 42,
	246, 42,
	-2, 370,
	-1, 1757,
	215, 1278,
	-2, 1272,
	-1, 1841,
	131, 151,
	171, 151,
	327, 151,
	-2, 400,
	-1, 1848,
	25, 170,
	-2, 172,
	-1, 2088,
	86, 39,
	-2, 822,
	-1, 2140,
	77, 94,
	86, 94,
	-2, 842,
	-1, 2204,
	574, 598,
	-2, 585,
	-1, 2347,
	49, 1213,
	-2, 1207,
	-1, 2560,
	86, 39,
	-2, 823,
	-1, 2598,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 814,
	-1, 2916,
	22, 1605,
	32, 1605,
	172, 1605,
	253, 1605,
	307, 1605,
	308, 1605,
	309, 1605,
	310, 1605,
	311, 1605,
	312, 1605,
	313, 1605,
	315, 1605,
	316, 1605,
	317, 1605,
	318, 1605,
	319, 1605,
	320, 1605,
	321, 1605,
	322, 1605,
	323, 1605,
	324, 1605,
	325, 1605,
	326, 1605,
	328, 1605,
	330, 1605,
	331, 1605,
	332, 1605,
	333, 1605,
	334, 1605,
	335, 1605,
	336, 1605,
	337, 1605,
	338, 1605,
	341, 1605,
	342, 1605,
	343, 1605,
	344, 1605,
	345, 1605,
	346, 1605,
	347, 1605,
	348, 1605,
	349, 1605,
	461, 1605,
	-2, 543,
}

const yyPrivate = 57344

const yyLast = 44377

var yyAct = [...]int{
	687, 2296, 2985, 696, 2984, 2967, 2839, 689, 2961, 1838,
	2868, 2918, 2914, 2485, 2665, 2892, 1370, 2400, 2791, 2407,
	2358, 2441, 2035, 3, 778, 1772, 673, 37, 1135, 2809,
	1774, 2361, 2699, 1291, 2076, 2409, 599, 2815, 1901, 674,
	756, 2468, 2467, 595, 2362, 2549, 1328, 2359, 2569, 2111,
	2704, 182, 621, 592, 182, 2295, 560, 182, 2563, 2294,
	1792, 671, 575, 2470, 182, 1811, 672, 2356, 690, 2589,
	2348, 2103, 182, 2134, 2555, 1084, 1871, 2172, 593, 2241,
	2201, 1876, 2173, 1891, 591, 2174, 154, 182, 1827, 779,
	1025, 36, 1424, 960, 805, 758, 2123, 1815, 1796, 38,
	2055, 587, 1315, 2095, 760, 2078, 764, 1722, 1751, 575,
	2258, 1816, 575, 182, 575, 1652, 1890, 1662, 1910, 140,
	1943, 985, 1878, 1359, 781, 2166, 1337, 95, 1721, 990,
	2142, 604, 1818, 96, 1295, 1674, 1220, 802, 91, 1629,
	1451, 1467, 1610, 1559, 1156, 1555, 1458, 967, 1888, 993,
	1541, 1803, 996, 964, 968, 991, 1358, 1342, 1867, 992,
	1127, 1356, 1564, 1133, 770, 1797, 1718, 1003, 768, 582,
	1419, 765, 1068, 792, 1223, 76, 98, 97, 1443, 766,
	1764, 2848, 157, 117, 1113, 118, 123, 124, 1227, 2194,
	85, 89, 2968, 1903, 1904, 1905, 1903, 2438, 2812, 184,
	185, 186, 2220, 2219, 1941, 2192, 767, 77, 2648, 2907,
	1527, 8, 7, 2249, 2250, 2995, 6, 90, 1617, 2988,
	786, 532, 791, 2994, 2813, 1769, 1770, 125, 1616, 772,
	119, 87, 1030, 1027, 87, 583, 87, 102, 1615, 1614,
	1613, 961, 564, 1612, 1595, 1604, 1041, 1042, 1632, 1045,
	1046, 1047, 1048, 759, 757, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	799, 2933, 773, 2459, 806, 2074, 2105, 1006, 104, 105,
	585, 108, 586, 561, 114, 983, 2456, 179, 780, 2344,
	527, 2319, 971, 2909, 976, 1007, 1031, 1032, 1033, 119,
	982, 2981, 981, 2987, 184, 185, 186, 2995, 1754, 1157,
	752, 753, 754, 755, 2944, 2958, 763, 1173, 2908, 2553,
	1157, 1038, 2552, 1043, 2424, 2624, 2056, 178, 1622, 548,
	2457, 2787, 2786, 2658, 1029, 1028, 2659, 2980, 1883, 2902,
	2971, 546, 2865, 2955, 794, 795, 1981, 1189, 2666, 2893,
	1929, 120, 2463, 78, 78, 78, 80, 2901, 2864, 2257,
	78, 2519, 1881, 119, 162, 1433, 2397, 2398, 2796, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1198, 1197, 1199, 1200,
	2075, 543, 1833, 1834, 2114, 2228, 1120, 1771, 1122, 2227,
	556, 1360, 2151, 1361, 980, 2150, 1077, 1078, 2152, 2396,
	2248, 1978, 1832, 2717, 1103, 553, 2156, 750, 1071, 2115,
	1979, 2853, 178, 1130, 1167, 749, 1108, 1109, 2840, 975,
	2163, 159, 977, 160, 1104, 1167, 1119, 1121, 1080, 1091,
	87, 87, 87, 564, 1092, 1091, 120, 87, 565, 564,
	1092, 2259, 1090, 177, 1089, 2195, 1851, 1850, 1170, 162,
	1171, 1172, 978, 1097, 2487, 2566, 2284, 1605, 1606, 1607,
	2460, 564, 564, 573, 2510, 2508, 1603, 577, 571, 1547,
	533, 1299, 535, 549, 1067, 567, 2202, 566, 539, 1044,
	537, 541, 550, 542, 1911, 536, 2223, 547, 1944, 2970,
	538, 551, 552, 554, 557, 558, 559, 555, 1949, 545,
	568, 1880, 984, 1517, 1542, 1105, 159, 1110, 160, 1163,
	1106, 1107, 1155, 2480, 1124, 1129, 980, 1111, 972, 1117,
	1163, 2481, 2261, 1118, 1112, 974, 973, 182, 177, 182,
	1073, 1948, 182, 1123, 1098, 2488, 1955, 1952, 1954, 1953,
	2236, 1957, 2489, 1958, 2934, 1959, 2650, 1518, 2649, 1519,
	1960, 163, 1050, 1950, 1049, 1946, 1116, 980, 1066, 2774,
	168, 575, 1137, 575, 575, 979, 2646, 986, 1436, 1914,
	2550, 987, 1014, 1947, 978, 1812, 1012, 987, 575, 575,
	1023, 1022, 1021, 1020, 2271, 2270, 2269, 2263, 1019, 2267,
	2318, 2262, 1018, 2260, 2975, 1017, 1024, 2413, 2265, 1016,
	1011, 1302, 2953, 1149, 2965, 1201, 37, 2264, 2285, 1087,
	1979, 1093, 1094, 1095, 1096, 965, 965, 2924, 998, 1201,
	2240, 999, 1070, 965, 2266, 2268, 1457, 963, 1556, 565,
	1889, 2922, 793, 1131, 1132, 565, 163, 1005, 1005, 1040,
	2926, 2927, 1101, 2079, 2081, 168, 2847, 2237, 2411, 2412,
	1935, 1552, 1798, 1799, 2193, 2923, 1143, 565, 565, 1034,
	2431, 2222, 1431, 1430, 569, 2836, 1429, 2212, 1553, 1427,
	531, 526, 1548, 155, 2797, 2235, 2605, 2645, 2234, 1204,
	1205, 1206, 1207, 1931, 2423, 562, 2585, 979, 2253, 1212,
	2147, 1215, 2110, 1162, 1159, 1160, 1161, 1166, 1168, 1165,
	563, 1164, 1993, 2225, 1162, 1159, 1160, 1161, 1166, 1168,
	1165, 1158, 1164, 699, 1069, 1015, 699, 2065, 699, 1013,
	2196, 1763, 1158, 1346, 1882, 1289, 1139, 1140, 979, 1005,
	1456, 1202, 1203, 1284, 2567, 1004, 1004, 1125, 1208, 116,
	1270, 1008, 998, 1082, 1839, 2986, 2863, 1005, 1005, 1201,
	182, 1009, 2410, 1200, 575, 575, 2395, 1114, 155, 1529,
	1528, 1530, 1531, 1532, 2413, 775, 111, 1546, 2243, 1565,
	182, 1010, 1138, 2242, 81, 1005, 1128, 1086, 2243, 2859,
	1026, 1303, 2641, 2242, 1305, 2579, 77, 1980, 1309, 575,
	1290, 1152, 1150, 182, 760, 1225, 1151, 1226, 575, 1945,
	1306, 1549, 1362, 2080, 575, 2461, 2462, 1153, 86, 86,
	86, 1088, 2277, 1229, 2906, 86, 2963, 1675, 2464, 2964,
	1076, 2962, 1079, 1675, 2185, 2007, 802, 1004, 2938, 1171,
	1172, 1172, 2403, 998, 1001, 1002, 112, 965, 1100, 2905,
	2713, 995, 999, 1634, 2616, 1004, 1004, 1039, 2615, 1102,
	1307, 1008, 998, 1290, 95, 1173, 1308, 1635, 1636, 1633,
	96, 1009, 994, 1918, 1276, 1277, 1278, 1279, 1280, 1466,
	1465, 1930, 1455, 1004, 1928, 1926, 1173, 2404, 1923, 998,
	1001, 1002, 1296, 965, 1014, 2949, 1012, 995, 999, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	1115, 2976, 2406, 98, 1923, 173, 174, 175, 176, 1543,
	2606, 1544, 1566, 1347, 1545, 1927, 2401, 1085, 1293, 1173,
	1072, 184, 185, 186, 2878, 1654, 1357, 1189, 2829, 2252,
	1985, 1986, 1987, 2411, 2412, 1536, 1534, 757, 1327, 2978,
	2402, 1925, 1322, 759, 2782, 2484, 1324, 2781, 1304, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1198, 1197, 1199, 1200,
	182, 2772, 2681, 806, 1420, 2680, 2879, 2623, 1352, 1353,
	2830, 2622, 2408, 1428, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 2977, 1170, 2439, 1171, 1172,
	173, 174, 175, 176, 575, 2279, 1453, 1173, 1535, 1533,
	1310, 2807, 1322, 2429, 1462, 1655, 2170, 1170, 1464, 1171,
	1172, 575, 575, 1524, 575, 2516, 575, 575, 2169, 575,
	575, 575, 575, 575, 575, 1193, 1194, 1195, 1196, 1198,
	1197, 1199, 1200, 1322, 575, 797, 1886, 2410, 182, 1500,
	1679, 1537, 1522, 1463, 1680, 1521, 1624, 1626, 1627, 2413,
	1170, 1520, 1171, 1172, 182, 1191, 1192, 1193, 1194, 1195,
	1196, 1198, 1197, 1199, 1200, 575, 1189, 182, 1495, 1496,
	1625, 702, 703, 704, 1434, 1435, 1523, 1511, 1554, 1505,
	1322, 575, 1502, 182, 1513, 1501, 1476, 1449, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1198, 1197, 1199, 1200, 182,
	1195, 1196, 1198, 1197, 1199, 1200, 182, 2950, 2856, 1442,
	184, 185, 186, 2855, 2613, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 575, 1331, 2833, 1497, 1170, 2832,
	1171, 1172, 2831, 2777, 1503, 1504, 2712, 1173, 575, 575,
	1509, 1510, 2710, 1426, 1461, 2677, 1173, 2620, 2612, 1460,
	184, 185, 186, 1469, 2405, 1470, 182, 1472, 1474, 2179,
	2167, 1478, 1480, 1482, 1484, 1486, 1452, 1439, 1286, 1459,
	1459, 1939, 1938, 1569, 1332, 1440, 1438, 1561, 1795, 1777,
	1573, 1596, 1575, 1576, 1577, 1578, 1562, 1525, 1512, 1582,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1175, 1508, 1507,
	1498, 1594, 1653, 1173, 1656, 1660, 1659, 1659, 1173, 1506,
	1657, 1657, 1173, 2024, 1432, 1665, 575, 1333, 2003, 2514,
	1322, 1126, 2804, 1142, 1630, 1557, 2803, 92, 2044, 1322,
	2766, 575, 575, 2578, 94, 1804, 1805, 2765, 93, 1173,
	1637, 2664, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 119, 982, 94, 981, 1676,
	2203, 1628, 1571, 2101, 2969, 2182, 1638, 1173, 1170, 1749,
	1171, 1172, 2940, 1322, 1567, 1568, 1719, 1170, 1173, 1171,
	1172, 2112, 1189, 2357, 1992, 1593, 1322, 1592, 1572, 1173,
	2002, 2390, 1322, 2578, 1173, 1579, 1580, 1581, 182, 1755,
	1979, 1600, 1601, 575, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1198, 1197, 1199, 1200, 1322, 1631, 1173, 2580, 184,
	185, 186, 2951, 2154, 2101, 2899, 1766, 182, 2101, 2886,
	575, 1782, 1719, 1783, 1170, 1750, 1171, 1172, 2016, 1170,
	182, 1171, 1172, 1170, 575, 1171, 1172, 1847, 92, 182,
	2844, 182, 2120, 182, 182, 575, 2101, 2882, 575, 93,
	2036, 1169, 1998, 2874, 1322, 1757, 2101, 2849, 2858, 575,
	1170, 1997, 1171, 1172, 2101, 1755, 2930, 1322, 2120, 95,
	1848, 1759, 1760, 802, 2533, 96, 802, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1198, 1197, 1199, 1200, 1170, 95,
	1171, 1172, 1173, 2656, 2846, 96, 2119, 2941, 2112, 1170,
	2419, 1171, 1172, 1322, 1756, 2533, 1322, 1391, 1788, 1335,
	1170, 2332, 1171, 1172, 575, 1170, 1814, 1171, 1172, 101,
	1892, 1893, 1894, 2101, 2773, 1896, 1898, 184, 185, 186,
	100, 1757, 99, 1748, 2656, 1322, 2101, 2654, 1170, 575,
	1171, 1172, 1923, 1322, 1842, 575, 1462, 688, 1173, 1462,
	2120, 1462, 1843, 772, 697, 1776, 1831, 1922, 1852, 100,
	1853, 1854, 1855, 1856, 2583, 1322, 1173, 1169, 1322, 2578,
	1857, 1858, 1859, 1860, 1334, 1994, 1863, 1864, 1865, 1866,
	1809, 1790, 1912, 2029, 1322, 1873, 1825, 575, 1846, 1653,
	1173, 1807, 2421, 2420, 1653, 1653, 1879, 2029, 183, 1322,
	2013, 183, 1830, 2012, 183, 1923, 1829, 1906, 1661, 576,
	806, 183, 1173, 806, 1845, 1667, 1668, 1802, 1844, 183,
	1173, 2417, 2418, 1170, 1173, 1171, 1172, 1994, 101, 1326,
	182, 2770, 1909, 1996, 183, 1173, 1767, 182, 1608, 100,
	1173, 99, 182, 182, 2417, 2416, 182, 1379, 182, 2642,
	94, 2120, 1322, 1994, 1322, 182, 576, 1979, 2221, 576,
	183, 576, 182, 1874, 1869, 1870, 1885, 1887, 1884, 2143,
	1758, 1895, 2600, 1761, 1762, 1423, 2206, 2199, 2200, 1170,
	1932, 1171, 1172, 2101, 2100, 1924, 1917, 1006, 182, 1920,
	1551, 1921, 1916, 575, 1919, 1915, 1874, 1170, 1354, 1171,
	1172, 989, 2535, 988, 1934, 1007, 1933, 2171, 1322, 1936,
	1937, 1787, 184, 185, 186, 1459, 1899, 2531, 1423, 1422,
	1173, 1170, 2522, 1171, 1172, 184, 185, 186, 1392, 1897,
	1368, 1367, 2144, 1970, 1971, 2889, 87, 762, 1973, 2793,
	2442, 2146, 1923, 1170, 1329, 1171, 1172, 1974, 2763, 2724,
	1173, 1170, 2640, 1171, 1172, 1170, 1173, 1171, 1172, 2637,
	1173, 2097, 2143, 1630, 1173, 2618, 1170, 2525, 1171, 1172,
	1173, 1170, 1942, 1171, 1172, 1173, 94, 2524, 1989, 1173,
	1991, 1425, 1405, 1408, 1409, 1410, 1411, 1412, 1413, 1963,
	1414, 1415, 1416, 1417, 1418, 1393, 1394, 1395, 1396, 1377,
	1378, 1406, 2521, 1380, 1990, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 87, 1872, 1390, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 2144, 2482, 2444, 2625, 2440,
	2207, 2936, 2053, 1994, 1979, 1868, 1862, 1173, 2052, 1861,
	1539, 2176, 2051, 1977, 1173, 2175, 2050, 1454, 1450, 1421,
	113, 1170, 2049, 1171, 1172, 1631, 1071, 2048, 182, 2486,
	1173, 2047, 1704, 1988, 2590, 2591, 182, 2794, 1883, 2629,
	2085, 575, 1659, 1780, 1488, 2993, 1657, 575, 2626, 2627,
	2628, 1170, 2071, 1171, 1172, 1598, 2991, 1170, 575, 1171,
	1172, 1170, 2176, 1171, 1172, 1170, 2083, 1171, 1172, 2006,
	2946, 1170, 2919, 1171, 1172, 2593, 1170, 2436, 1171, 1172,
	1170, 182, 1171, 1172, 2900, 182, 2630, 2631, 2435, 2046,
	788, 1489, 1490, 2434, 2357, 2116, 2045, 2186, 37, 1964,
	2153, 2089, 2596, 1173, 2379, 2377, 1407, 2136, 2022, 2380,
	2378, 2381, 2039, 2129, 2130, 2595, 2376, 1599, 1757, 1696,
	1685, 1686, 1687, 1688, 1698, 1689, 1690, 1691, 1703, 1699,
	1692, 1693, 1700, 1701, 1702, 1694, 1695, 1697, 1170, 2375,
	1171, 1172, 1794, 1330, 575, 1170, 1786, 1171, 1172, 182,
	1491, 2098, 2584, 2694, 2102, 2693, 182, 2337, 588, 1173,
	1296, 1170, 2073, 1171, 1172, 2349, 2351, 1756, 575, 2336,
	2571, 2828, 2135, 2703, 2352, 575, 2705, 2574, 2570, 1462,
	1462, 2346, 1173, 2099, 575, 2038, 2094, 776, 2157, 2109,
	782, 1550, 748, 2415, 1173, 777, 2218, 2161, 2180, 1036,
	1492, 1493, 1494, 2692, 2217, 1035, 1671, 182, 182, 182,
	182, 182, 2164, 2165, 2496, 2148, 2175, 2145, 92, 1173,
	1672, 1879, 2155, 1141, 182, 182, 2246, 2141, 2198, 93,
	2214, 2178, 2213, 2158, 1170, 120, 1171, 1172, 2576, 2004,
	182, 2037, 1173, 94, 183, 2973, 183, 2432, 2168, 183,
	1967, 2125, 2128, 2129, 2130, 2126, 1173, 2127, 2131, 1653,
	2177, 2590, 2591, 2556, 2034, 2845, 92, 2789, 2183, 2187,
	2188, 2189, 101, 94, 2216, 2414, 2033, 93, 576, 1173,
	576, 576, 2133, 100, 1791, 99, 1442, 1804, 1805, 1956,
	1170, 2335, 1171, 1172, 94, 576, 576, 2820, 1659, 2334,
	1659, 2032, 1657, 1659, 1657, 2276, 1983, 1657, 1659, 784,
	785, 2215, 1657, 1170, 99, 1171, 1172, 575, 2819, 2208,
	2209, 2062, 2063, 2711, 2030, 1170, 575, 1171, 1172, 101,
	2709, 2297, 2255, 2297, 2708, 2701, 2297, 2254, 2026, 2690,
	100, 2297, 99, 575, 2309, 2310, 2311, 2312, 2638, 2575,
	1170, 2573, 1171, 1172, 2326, 2302, 2299, 2445, 182, 1907,
	2303, 2025, 575, 1437, 783, 100, 2238, 2700, 2272, 101,
	2564, 575, 2256, 1170, 2273, 1171, 1172, 2097, 575, 575,
	100, 182, 182, 182, 182, 182, 2112, 1170, 2286, 1171,
	1172, 2948, 2947, 182, 2014, 1778, 2354, 2290, 182, 2326,
	2369, 182, 1348, 182, 764, 2339, 182, 182, 182, 1339,
	1170, 2360, 1171, 1172, 2244, 2363, 2360, 2245, 2948, 2320,
	2321, 2322, 106, 107, 1309, 2136, 2389, 2834, 2611, 774,
	103, 2340, 88, 2325, 2304, 2305, 2306, 2307, 2308, 1,
	2921, 2430, 544, 2327, 1768, 1294, 2917, 182, 2125, 2128,
	2129, 2130, 2126, 1526, 2127, 2131, 1516, 2667, 2338, 1720,
	575, 2341, 2790, 2450, 2448, 1913, 2636, 183, 575, 765,
	1877, 576, 576, 182, 997, 145, 2391, 766, 2370, 2392,
	1840, 2373, 1841, 182, 2331, 2895, 95, 183, 2382, 2386,
	2387, 110, 96, 2371, 2372, 2393, 2374, 958, 182, 2447,
	109, 182, 1561, 2399, 2455, 1000, 576, 2328, 2329, 2330,
	183, 2497, 1099, 1908, 2657, 576, 2162, 2426, 1849, 2425,
	2368, 576, 2452, 2451, 2449, 1374, 2427, 2428, 2466, 1372,
	1373, 1371, 1376, 1375, 2015, 1602, 2474, 572, 2132, 1189,
	180, 2473, 1185, 1363, 1186, 1340, 1037, 534, 2465, 2422,
	1879, 1940, 540, 2446, 1213, 1597, 2477, 2333, 1187, 1188,
	1184, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1197,
	1199, 1200, 2149, 803, 575, 2530, 796, 2492, 2491, 1779,
	2494, 2495, 2087, 1320, 1316, 2365, 2568, 2345, 1320, 1316,
	2347, 2104, 2500, 575, 182, 2350, 2343, 2499, 1317, 2827,
	2506, 2702, 2887, 1317, 2159, 1336, 2005, 1673, 1819, 1623,
	597, 596, 2503, 2504, 594, 2505, 2090, 2113, 2507, 1176,
	2509, 691, 2511, 1784, 1785, 1319, 2077, 1318, 1313, 1314,
	1319, 1349, 1318, 2124, 2122, 2121, 1965, 1826, 2592, 2588,
	2983, 2913, 1821, 1817, 2096, 605, 598, 590, 2562, 2608,
	2472, 182, 2224, 2483, 2226, 2160, 2479, 1154, 1312, 584,
	970, 1670, 2795, 2851, 2557, 2558, 1982, 2518, 1311, 2614,
	1683, 1684, 2437, 2204, 182, 2565, 2551, 183, 2572, 2587,
	1174, 1900, 63, 41, 662, 2315, 2577, 2316, 2317, 2547,
	2597, 2810, 182, 661, 2870, 182, 182, 182, 2811, 1711,
	579, 2603, 2604, 2594, 2932, 575, 575, 1145, 1221, 790,
	32, 576, 31, 30, 29, 2601, 2609, 28, 23, 22,
	21, 20, 19, 25, 2602, 2474, 18, 2610, 576, 576,
	2473, 576, 17, 576, 576, 16, 576, 576, 576, 576,
	576, 576, 2458, 2943, 2972, 115, 50, 575, 575, 575,
	575, 576, 47, 45, 122, 183, 121, 48, 44, 1074,
	42, 27, 26, 15, 14, 2643, 2644, 13, 12, 11,
	10, 183, 9, 5, 4, 2619, 35, 2621, 34, 33,
	1148, 24, 576, 2, 183, 2663, 2454, 2453, 2191, 588,
	1902, 0, 0, 0, 0, 1659, 0, 1659, 576, 1657,
	183, 1657, 0, 2676, 2661, 2662, 0, 0, 2647, 0,
	0, 0, 2651, 2652, 2653, 2672, 183, 0, 0, 0,
	182, 0, 0, 183, 0, 0, 0, 0, 2297, 0,
	2297, 0, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 576, 0, 0, 575, 2697, 575, 0, 0, 2685,
	2689, 2684, 0, 0, 2688, 576, 576, 0, 0, 0,
	0, 0, 2726, 2673, 1659, 0, 2718, 0, 1657, 37,
	0, 0, 0, 183, 1338, 2360, 2720, 2707, 2706, 0,
	2363, 2698, 0, 0, 2363, 2716, 2714, 0, 2722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2727, 2728, 0, 182, 2730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 2769, 0, 2767,
	2768, 0, 0, 0, 2783, 0, 2775, 0, 576, 576,
	2784, 0, 575, 0, 0, 2792, 575, 575, 2785, 0,
	0, 2771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2814, 575, 0, 0, 0, 2808,
	0, 2824, 2823, 2821, 2822, 2826, 0, 0, 0, 2778,
	2779, 2780, 0, 0, 0, 0, 0, 2837, 0, 2835,
	0, 0, 0, 0, 0, 183, 0, 2363, 0, 0,
	576, 0, 0, 0, 575, 0, 0, 0, 2841, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 183, 2838, 0, 576, 0, 0,
	0, 0, 0, 0, 575, 182, 0, 183, 0, 0,
	0, 576, 0, 0, 0, 0, 183, 0, 183, 2854,
	183, 183, 576, 2857, 2850, 576, 37, 0, 0, 0,
	0, 0, 0, 0, 2843, 0, 576, 1321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 2867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2860, 2880, 0, 0, 0, 575,
	575, 0, 0, 0, 0, 0, 2885, 0, 0, 2888,
	2890, 2360, 37, 0, 0, 575, 0, 2894, 0, 0,
	2904, 576, 0, 0, 182, 575, 0, 2792, 2896, 2903,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2928, 2920, 576, 2925, 0, 2912,
	0, 0, 576, 2935, 0, 0, 0, 1563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2945,
	0, 575, 2942, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 0, 0, 0, 2960, 0, 1659, 0, 2956,
	2954, 1657, 2959, 2957, 576, 0, 0, 2966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2974, 0, 0,
	0, 0, 0, 0, 0, 2979, 0, 0, 0, 0,
	0, 0, 0, 2982, 0, 1659, 2990, 0, 2989, 1657,
	2992, 2952, 1659, 0, 0, 0, 1657, 183, 0, 0,
	1618, 1619, 1620, 1621, 183, 0, 0, 0, 0, 183,
	183, 0, 0, 183, 0, 183, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1663, 1664, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	576, 0, 0, 0, 1705, 1706, 1707, 1708, 1709, 1710,
	1712, 1716, 1717, 588, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 0, 1747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 0, 0, 0, 0, 0,
	0, 2732, 2734, 2733, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 627, 0, 0, 0, 1800, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 0, 142, 0, 574, 0, 0, 0,
	87, 0, 0, 0, 0, 162, 692, 700, 701, 702,
	703, 704, 693, 695, 0, 183, 0, 694, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 576, 0,
	697, 705, 706, 0, 576, 0, 152, 0, 0, 0,
	0, 141, 1875, 804, 0, 576, 962, 0, 969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 160, 0, 0, 0, 183, 0,
	0, 0, 183, 0, 0, 0, 2475, 2476, 0, 0,
	129, 130, 151, 150, 177, 0, 0, 0, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 0,
	0, 576, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 2738, 2739, 0, 0,
	146, 127, 153, 134, 126, 0, 147, 148, 0, 0,
	0, 0, 163, 0, 183, 183, 183, 183, 183, 0,
	0, 168, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 183, 0, 0, 0, 138, 136, 131, 132,
	133, 137, 0, 0, 0, 0, 0, 183, 128, 0,
	0, 0, 0, 0, 0, 0, 675, 139, 622, 679,
	624, 676, 677, 0, 620, 623, 678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 625, 626, 2731, 2735, 2736, 2737, 2740,
	2741, 2742, 2750, 2752, 650, 2751, 2753, 2754, 2755, 2758,
	2759, 2760, 2761, 2756, 2757, 2762, 2008, 0, 0, 0,
	0, 0, 0, 0, 576, 0, 0, 680, 0, 681,
	0, 0, 685, 576, 155, 0, 0, 686, 0, 0,
	0, 663, 0, 0, 682, 683, 0, 684, 0, 0,
	576, 0, 1221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 576, 576, 0, 183, 183,
	183, 183, 183, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 1323, 1325, 183, 0, 0, 183, 0,
	183, 149, 0, 183, 183, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 143, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 1391, 0, 183, 0,
	0, 0, 0, 0, 0, 804, 0, 804, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1144, 1146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 0, 0, 0, 0, 0, 173, 174, 175, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2274, 2275, 0, 1379, 0, 2278, 0,
	0, 1287, 0, 2280, 2281, 2282, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 2287, 2288, 2289, 0, 0,
	1723, 2291, 0, 2292, 2293, 0, 0, 0, 2300, 2301,
	0, 183, 0, 0, 0, 0, 1723, 1723, 1723, 1723,
	1723, 588, 588, 588, 588, 0, 0, 0, 0, 183,
	0, 0, 183, 183, 183, 0, 0, 0, 1300, 1301,
	0, 0, 576, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 2355, 576, 576, 576, 576, 1364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2388, 1405, 1408, 1409, 1410, 1411, 1412, 1413, 0, 1414,
	1415, 1416, 1417, 1418, 1393, 1394, 1395, 1396, 1377, 1378,
	1406, 0, 1380, 0, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 0, 0, 1390, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 2443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 1677, 0, 0, 0, 1678, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2520, 183, 0, 0, 0, 0, 0, 2526, 1323, 1765,
	0, 0, 0, 0, 576, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 576,
	0, 1287, 1789, 576, 576, 1468, 1468, 0, 1468, 0,
	1468, 1468, 0, 1477, 1468, 1468, 1468, 1468, 1468, 0,
	0, 0, 0, 0, 0, 0, 1287, 1287, 962, 0,
	0, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 0, 2197, 1558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 120, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 576, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 0,
	0, 2639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 804, 804, 0, 0, 141, 0, 0, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 2660, 0, 0, 0, 0, 159, 0, 160,
	0, 0, 0, 0, 0, 0, 576, 576, 0, 0,
	0, 0, 0, 0, 0, 1445, 1446, 151, 150, 177,
	0, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 576, 0, 0, 2674, 0, 2675, 0, 0,
	0, 0, 2678, 2679, 0, 0, 0, 0, 0, 0,
	1666, 0, 0, 0, 0, 0, 2686, 1287, 0, 0,
	0, 0, 0, 0, 0, 1681, 1682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2715, 0, 0, 0, 0, 804, 0, 0, 0, 0,
	0, 2723, 0, 0, 2725, 146, 1447, 153, 0, 1444,
	0, 147, 148, 0, 0, 0, 0, 163, 2729, 0,
	0, 0, 0, 0, 0, 0, 168, 1781, 0, 2764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1344, 1995,
	0, 804, 0, 1999, 0, 2000, 2001, 0, 0, 804,
	0, 0, 804, 0, 2009, 0, 0, 2010, 2011, 0,
	0, 0, 0, 962, 0, 0, 0, 0, 0, 0,
	0, 588, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2825, 588, 0, 2017, 2018, 2019, 2020, 2021, 0,
	2023, 0, 0, 0, 0, 0, 2027, 0, 2028, 0,
	0, 0, 2031, 0, 0, 0, 0, 0, 0, 155,
	2040, 2041, 2042, 2043, 0, 0, 0, 0, 969, 0,
	0, 0, 0, 2054, 0, 2057, 2058, 2059, 2060, 2061,
	0, 0, 0, 0, 0, 0, 2066, 2067, 2068, 2069,
	2070, 0, 1789, 962, 2072, 0, 0, 0, 0, 969,
	0, 0, 0, 0, 2084, 0, 0, 588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 39, 40, 80, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 2866, 0,
	0, 962, 2871, 0, 0, 84, 0, 0, 0, 43,
	69, 70, 0, 67, 71, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 0, 0, 0,
	0, 56, 0, 0, 0, 0, 0, 0, 0, 0,
	2871, 665, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1441, 1976, 0, 0,
	0, 0, 181, 0, 0, 530, 0, 0, 570, 120,
	0, 142, 0, 0, 0, 530, 0, 0, 0, 2871,
	0, 0, 162, 530, 0, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 0, 0, 771, 0,
	0, 173, 174, 175, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 789, 0, 789, 0, 141, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 160, 0, 0, 0, 46, 49, 52, 51, 54,
	0, 66, 0, 2283, 75, 72, 0, 1445, 1446, 151,
	150, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2298, 0, 0, 0, 55, 83, 82,
	0, 0, 64, 65, 53, 0, 0, 0, 0, 0,
	73, 74, 0, 0, 0, 2086, 0, 0, 700, 701,
	2323, 2324, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 59,
	60, 61, 62, 0, 0, 1793, 0, 0, 0, 0,
	0, 2091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2106, 0, 0, 2366, 0, 146, 1447, 153,
	0, 1444, 0, 147, 148, 0, 0, 0, 0, 163,
	0, 0, 2384, 2385, 0, 0, 0, 0, 168, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 1793, 0, 0, 0, 0, 0, 0, 2205,
	0, 0, 0, 0, 0, 0, 0, 0, 2210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2498,
	86, 155, 0, 0, 0, 0, 2502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2512, 2513, 2515, 2517, 0, 0, 0, 0, 0, 0,
	2523, 0, 0, 0, 0, 2527, 2528, 2529, 0, 0,
	0, 0, 2532, 0, 0, 0, 0, 0, 2534, 0,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2554, 0, 0, 0, 0, 149, 2559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1287,
	0, 1287, 0, 0, 1287, 0, 0, 0, 0, 1287,
	0, 143, 2581, 2582, 144, 0, 2586, 1297, 0, 0,
	0, 2314, 0, 0, 0, 0, 0, 0, 0, 0,
	804, 0, 0, 0, 2598, 2599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1468, 530, 0,
	530, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2342, 0, 0, 0,
	0, 529, 0, 0, 0, 804, 0, 0, 0, 1287,
	0, 578, 2367, 1468, 1287, 0, 0, 0, 0, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2655, 0, 156, 161, 158,
	164, 165, 166, 167, 169, 170, 171, 172, 0, 0,
	966, 0, 0, 173, 174, 175, 176, 0, 700, 701,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 962, 0, 0, 1287, 0, 0,
	0, 0, 1793, 0, 2682, 0, 0, 0, 2683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2687, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 2548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 0, 0, 0, 0, 2342, 0, 0,
	0, 0, 698, 79, 0, 0, 0, 0, 2788, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 2798, 2799, 2800, 0, 2801, 2802, 0, 0,
	0, 0, 2805, 0, 2806, 0, 0, 0, 0, 2816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2842, 0, 0,
	761, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2862, 0, 0, 0, 0, 0, 0,
	0, 2668, 2669, 2670, 2671, 0, 0, 0, 0, 0,
	0, 0, 0, 2875, 0, 0, 0, 0, 0, 2876,
	2877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 2883, 0, 0,
	0, 0, 0, 0, 0, 0, 1287, 0, 1287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2931,
	0, 0, 0, 1287, 1075, 0, 1081, 0, 2719, 1083,
	2721, 2937, 0, 1288, 1288, 0, 0, 0, 0, 530,
	0, 2939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1560, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 804, 0, 0, 0, 0, 1583, 1584, 530, 530,
	530, 530, 530, 530, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2817, 0, 0, 0,
	2817, 2817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 789, 0, 0, 0, 0, 0, 0, 789, 789,
	0, 0, 0, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 789, 1560, 789, 789, 789, 789, 789, 0, 1287,
	0, 2881, 0, 0, 0, 0, 0, 0, 0, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 0, 0, 804, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 789, 0, 0, 0, 0, 2910,
	0, 0, 0, 0, 0, 0, 0, 0, 771, 2915,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 1134, 0, 1134, 1134, 0, 1560, 0,
	530, 0, 530, 0, 530, 1828, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2915, 0, 0, 0, 761,
	1209, 1210, 1211, 0, 1214, 0, 1216, 1217, 1218, 1219,
	0, 1222, 1224, 1224, 0, 1224, 1228, 1228, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 0, 1271,
	1272, 1273, 1274, 1275, 0, 0, 0, 1369, 1228, 1228,
	1228, 1228, 1228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1298, 1499, 0, 0, 0, 0,
	761, 530, 0, 0, 761, 0, 0, 0, 530, 0,
	761, 0, 0, 530, 530, 0, 0, 530, 0, 1968,
	0, 0, 0, 0, 1540, 0, 530, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1570, 0, 0, 530,
	0, 0, 0, 1574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 692, 700, 701, 702,
	703, 704, 693, 695, 0, 0, 0, 694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	697, 705, 706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 789, 789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1560, 2475, 2476, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 1514, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 0,
	0, 0, 530, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 0, 1813, 0,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 0, 0, 0, 0, 2190, 0, 0,
	0, 0, 0, 0, 0, 0, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1134, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 530,
	530, 530, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 789, 0, 0, 0,
	0, 0, 0, 0, 675, 0, 0, 679, 0, 676,
	677, 0, 0, 0, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 1611, 1288, 0,
	0, 1288, 0, 0, 1951, 0, 1288, 0, 0, 1961,
	1962, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 789, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 0, 0, 0,
	0, 1288, 530, 530, 530, 530, 530, 0, 0, 0,
	0, 0, 0, 0, 2383, 1820, 0, 0, 0, 530,
	0, 0, 1514, 0, 530, 0, 0, 530, 2394, 1560,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2184, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 0, 530, 530, 530, 0,
	0, 0, 0, 0, 2229, 2230, 2231, 2232, 2233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1611, 2239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1288, 0, 1288, 0, 0, 2064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2082, 0, 0, 0,
	0, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 0, 0, 0, 0, 0,
	1288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2117, 2118, 0, 0, 0, 0,
	0, 0, 0, 2137, 0, 2138, 2139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2211, 0, 0,
	2469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2490, 0, 0, 2493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2561, 0, 0, 0, 0, 1288, 0, 0, 2313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 0, 0, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2364, 0,
	79, 0, 0, 1820, 1820, 1820, 1820, 1820, 0, 0,
	0, 2617, 0, 0, 0, 0, 0, 0, 0, 0,
	2137, 761, 0, 0, 0, 1820, 0, 0, 1820, 2632,
	0, 0, 2633, 2634, 2635, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2691, 0,
	2695, 2696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2364, 0, 79, 0, 2364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 2884, 0, 940, 925, 450, 79, 869,
	943, 838, 857, 953, 860, 863, 905, 817, 883, 371,
	854, 809, 842, 812, 849, 813, 840, 871, 245, 837,
	927, 887, 942, 326, 242, 819, 843, 385, 859, 193,
	907, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 949, 330, 893, 0, 435,
	356, 0, 0, 0, 873, 931, 881, 919, 868, 906,
	827, 892, 944, 855, 902, 945, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	2897, 0, 2898, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 851, 899, 939, 852, 901, 240, 286, 247,
	239, 454, 950, 930, 816, 880, 938, 0, 0, 209,
	941, 875, 0, 904, 0, 956, 811, 895, 0, 814,
	818, 952, 934, 846, 250, 0, 0, 0, 0, 0,
	0, 0, 872, 882, 916, 866, 0, 0, 0, 0,
	0, 0, 0, 844, 0, 891, 0, 0, 0, 823,
	815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 870, 0, 0, 0, 826, 0, 845, 917,
	0, 808, 269, 820, 357, 232, 0, 923, 933, 867,
	488, 937, 865, 864, 911, 824, 929, 858, 325, 822,
	294, 188, 205, 0, 856, 367, 408, 414, 928, 841,
	850, 230, 848, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 890, 909, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 1136, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 836,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 924, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	914, 955, 380, 413, 219, 474, 434, 831, 835, 829,
	896, 830, 885, 886, 832, 946, 947, 948, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 918, 825, 0,
	833, 834, 0, 926, 935, 936, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 889, 187, 202,
	328, 951, 402, 262, 503, 482, 478, 810, 828, 237,
	839, 847, 0, 853, 861, 862, 874, 876, 877, 878,
	879, 897, 898, 900, 908, 910, 913, 915, 920, 932,
	954, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 888, 894, 339, 255, 274, 285, 903, 481,
	439, 207, 409, 263, 228, 921, 922, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 884, 912, 335, 451, 452, 281, 353, 0, 0,
	940, 925, 450, 0, 869, 943, 838, 857, 953, 860,
	863, 905, 817, 883, 371, 854, 809, 842, 812, 849,
	813, 840, 871, 245, 837, 927, 887, 942, 326, 242,
	819, 843, 385, 859, 193, 907, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	949, 330, 893, 0, 435, 356, 0, 0, 0, 873,
	931, 881, 919, 868, 906, 827, 892, 944, 855, 902,
	945, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 851, 899, 939,
	852, 901, 240, 286, 247, 239, 454, 950, 930, 816,
	880, 938, 0, 0, 209, 941, 875, 0, 904, 0,
	956, 811, 895, 0, 814, 818, 952, 934, 846, 250,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 2395, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 870, 0, 0,
	0, 826, 0, 845, 917, 0, 808, 269, 820, 357,
	232, 0, 923, 933, 867, 488, 937, 865, 864, 911,
	824, 929, 858, 325, 822, 294, 188, 205, 0, 856,
	367, 408, 414, 928, 841, 850, 230, 848, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 890, 909,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	1136, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 836, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 924, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 914, 955, 380, 413, 219,
	474, 434, 831, 835, 829, 896, 830, 885, 886, 832,
	946, 947, 948, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 918, 825, 0, 833, 834, 0, 926, 935,
	936, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 889, 187, 202, 328, 951, 402, 262, 503,
	482, 478, 810, 828, 237, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 897, 898, 900, 908,
	910, 913, 915, 920, 932, 954, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 888, 894, 339,
	255, 274, 285, 903, 481, 439, 207, 409, 263, 228,
	921, 922, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 884, 912, 335, 451,
	452, 281, 353, 0, 0, 940, 925, 450, 0, 869,
	943, 838, 857, 953, 860, 863, 905, 817, 883, 371,
	854, 809, 842, 812, 849, 813, 840, 871, 245, 837,
	927, 887, 942, 326, 242, 819, 843, 385, 859, 193,
	907, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 949, 330, 893, 0, 435,
	356, 0, 0, 0, 873, 931, 881, 919, 868, 906,
	827, 892, 944, 855, 902, 945, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 851, 899, 939, 852, 901, 240, 286, 247,
	239, 454, 950, 930, 816, 880, 938, 0, 0, 209,
	941, 875, 0, 904, 0, 956, 811, 895, 0, 814,
	818, 952, 934, 846, 250, 0, 0, 0, 0, 0,
	0, 0, 872, 882, 916, 866, 0, 0, 0, 0,
	0, 2353, 0, 844, 0, 891, 0, 0, 0, 823,
	815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 870, 0, 0, 0, 826, 0, 845, 917,
	0, 808, 269, 820, 357, 232, 0, 923, 933, 867,
	488, 937, 865, 864, 911, 824, 929, 858, 325, 822,
	294, 188, 205, 0, 856, 367, 408, 414, 928, 841,
	850, 230, 848, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 890, 909, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 1136, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 836,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 924, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	914, 955, 380, 413, 219, 474, 434, 831, 835, 829,
	896, 830, 885, 886, 832, 946, 947, 948, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 918, 825, 0,
	833, 834, 0, 926, 935, 936, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 889, 187, 202,
	328, 951, 402, 262, 503, 482, 478, 810, 828, 237,
	839, 847, 0, 853, 861, 862, 874, 876, 877, 878,
	879, 897, 898, 900, 908, 910, 913, 915, 920, 932,
	954, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 888, 894, 339, 255, 274, 285, 903, 481,
	439, 207, 409, 263, 228, 921, 922, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 884, 912, 335, 451, 452, 281, 353, 0, 0,
	940, 925, 450, 0, 869, 943, 838, 857, 953, 860,
	863, 905, 817, 883, 371, 854, 809, 842, 812, 849,
	813, 840, 871, 245, 837, 927, 887, 942, 326, 242,
	819, 843, 385, 859, 193, 907, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	949, 330, 893, 0, 435, 356, 0, 0, 0, 873,
	931, 881, 919, 868, 906, 827, 892, 944, 855, 902,
	945, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 851, 899, 939,
	852, 901, 240, 286, 247, 239, 454, 950, 930, 816,
	880, 938, 0, 0, 209, 941, 875, 0, 904, 0,
	956, 811, 895, 0, 814, 818, 952, 934, 846, 250,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 1808, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 870, 0, 0,
	0, 826, 0, 845, 917, 0, 808, 269, 820, 357,
	232, 0, 923, 933, 867, 488, 937, 865, 864, 911,
	824, 929, 858, 325, 822, 294, 188, 205, 0, 856,
	367, 408, 414, 928, 841, 850, 230, 848, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 890, 909,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	1136, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 836, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 924, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 914, 955, 380, 413, 219,
	474, 434, 831, 835, 829, 896, 830, 885, 886, 832,
	946, 947, 948, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 918, 825, 0, 833, 834, 0, 926, 935,
	936, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 889, 187, 202, 328, 951, 402, 262, 503,
	482, 478, 810, 828, 237, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 897, 898, 900, 908,
	910, 913, 915, 920, 932, 954, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 888, 894, 339,
	255, 274, 285, 903, 481, 439, 207, 409, 263, 228,
	921, 922, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 884, 912, 335, 451,
	452, 281, 353, 0, 0, 940, 925, 450, 0, 869,
	943, 838, 857, 953, 860, 863, 905, 817, 883, 371,
	854, 809, 842, 812, 849, 813, 840, 871, 245, 837,
	927, 887, 942, 326, 242, 819, 843, 385, 859, 193,
	907, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 949, 330, 893, 0, 435,
	356, 0, 0, 0, 873, 931, 881, 919, 868, 906,
	827, 892, 944, 855, 902, 945, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 851, 899, 939, 852, 901, 240, 286, 247,
	239, 454, 950, 930, 816, 880, 938, 0, 0, 209,
	941, 875, 0, 904, 0, 956, 811, 895, 0, 814,
	818, 952, 934, 846, 250, 0, 0, 0, 0, 0,
	0, 0, 872, 882, 916, 866, 0, 0, 0, 0,
	0, 0, 0, 844, 0, 891, 0, 0, 0, 823,
	815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 870, 0, 0, 0, 826, 0, 845, 917,
	0, 808, 269, 820, 357, 232, 0, 923, 933, 867,
	488, 937, 865, 864, 911, 824, 929, 858, 325, 822,
	294, 188, 205, 0, 856, 367, 408, 414, 928, 841,
	850, 230, 848, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 890, 909, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 1136, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 836,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 924, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	914, 955, 380, 413, 219, 474, 434, 831, 835, 829,
	896, 830, 885, 886, 832, 946, 947, 948, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 918, 825, 0,
	833, 834, 0, 926, 935, 936, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 889, 187, 202,
	328, 951, 402, 262, 503, 482, 478, 810, 828, 237,
	839, 847, 0, 853, 861, 862, 874, 876, 877, 878,
	879, 897, 898, 900, 908, 910, 913, 915, 920, 932,
	954, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 888, 894, 339, 255, 274, 285, 903, 481,
	439, 207, 409, 263, 228, 921, 922, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 884, 912, 335, 451, 452, 281, 353, 0, 0,
	940, 925, 450, 0, 869, 943, 838, 857, 953, 860,
	863, 905, 817, 883, 371, 854, 809, 842, 812, 849,
	813, 840, 871, 245, 837, 927, 887, 942, 326, 242,
	819, 843, 385, 859, 193, 907, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	949, 330, 893, 0, 435, 356, 0, 0, 0, 873,
	931, 881, 919, 868, 906, 827, 892, 944, 855, 902,
	945, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 851, 899, 939,
	852, 901, 240, 286, 247, 239, 454, 950, 930, 816,
	880, 938, 0, 0, 209, 941, 875, 0, 904, 0,
	956, 811, 895, 0, 814, 818, 952, 934, 846, 250,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 0, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 870, 0, 0,
	0, 826, 0, 845, 917, 0, 808, 269, 820, 357,
	232, 0, 923, 933, 867, 488, 937, 865, 864, 911,
	824, 929, 858, 325, 822, 294, 188, 205, 0, 856,
	367, 408, 414, 928, 841, 850, 230, 848, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 890, 909,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	1136, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 836, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 924, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 914, 955, 380, 413, 219,
	474, 434, 831, 835, 829, 896, 830, 885, 886, 832,
	946, 947, 948, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 918, 825, 0, 833, 834, 0, 926, 935,
	936, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 889, 187, 202, 328, 951, 402, 262, 503,
	482, 478, 810, 828, 237, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 897, 898, 900, 908,
	910, 913, 915, 920, 932, 954, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 888, 894, 339,
	255, 274, 285, 903, 481, 439, 207, 409, 263, 228,
	921, 922, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 884, 912, 335, 451,
	452, 281, 353, 0, 0, 940, 925, 450, 0, 869,
	943, 838, 857, 953, 860, 863, 905, 817, 883, 371,
	854, 809, 842, 812, 849, 813, 840, 871, 245, 837,
	927, 887, 942, 326, 242, 819, 843, 385, 859, 193,
	907, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 949, 330, 893, 0, 435,
	356, 0, 0, 0, 873, 931, 881, 919, 868, 906,
	827, 892, 944, 855, 902, 945, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 851, 899, 939, 852, 901, 240, 286, 247,
	239, 454, 950, 930, 816, 880, 938, 0, 0, 957,
	941, 875, 0, 904, 0, 956, 811, 895, 0, 814,
	818, 952, 934, 846, 250, 0, 0, 0, 0, 0,
	0, 0, 872, 882, 916, 866, 0, 0, 0, 0,
	0, 0, 0, 844, 0, 891, 0, 0, 0, 823,
	815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 870, 0, 0, 0, 826, 0, 845, 917,
	0, 808, 269, 820, 357, 232, 0, 923, 933, 867,
	488, 937, 865, 864, 911, 824, 929, 858, 325, 822,
	294, 188, 205, 0, 856, 367, 408, 414, 928, 841,
	850, 230, 848, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 890, 909, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 821, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 836,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 924, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 807, 801, 800, 295, 332,
	914, 955, 380, 413, 219, 474, 434, 831, 835, 829,
	896, 830, 885, 886, 832, 946, 947, 948, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 918, 825, 0,
	833, 834, 0, 926, 935, 936, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 889, 187, 202,
	328, 951, 402, 262, 503, 482, 478, 810, 828, 237,
	839, 847, 0, 853, 861, 862, 874, 876, 877, 878,
	879, 897, 898, 900, 908, 910, 913, 915, 920, 932,
	954, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 888, 894, 339, 255, 274, 285, 903, 481,
	439, 207, 409, 263, 228, 921, 922, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 884, 912, 335, 451, 452, 281, 353, 0, 0,
	940, 925, 450, 0, 869, 943, 838, 857, 953, 860,
	863, 905, 817, 883, 371, 854, 809, 842, 812, 849,
	813, 840, 871, 245, 837, 927, 887, 942, 326, 242,
	819, 843, 385, 859, 193, 907, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	949, 330, 893, 0, 435, 356, 0, 0, 0, 873,
	931, 881, 919, 868, 906, 827, 892, 944, 855, 902,
	945, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 851, 899, 939,
	852, 901, 240, 286, 247, 239, 454, 950, 930, 816,
	880, 938, 0, 0, 957, 941, 875, 0, 904, 0,
	956, 811, 895, 0, 814, 818, 952, 934, 846, 250,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 0, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 870, 0, 0,
	0, 826, 0, 845, 917, 0, 808, 269, 820, 357,
	232, 0, 923, 933, 867, 488, 937, 865, 864, 911,
	824, 929, 858, 325, 822, 294, 188, 205, 0, 856,
	367, 408, 414, 928, 841, 850, 230, 848, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 890, 909,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 1355, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	821, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 836, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 924, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	807, 801, 800, 295, 332, 914, 955, 380, 413, 219,
	474, 434, 831, 835, 829, 896, 830, 885, 886, 832,
	946, 947, 948, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 918, 825, 0, 833, 834, 0, 926, 935,
	936, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 889, 187, 202, 328, 951, 402, 262, 503,
	482, 478, 810, 828, 237, 839, 847, 0, 853, 861,
	862, 874, 876, 877, 878, 879, 897, 898, 900, 908,
	910, 913, 915, 920, 932, 954, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 888, 894, 339,
	255, 274, 285, 903, 481, 439, 207, 409, 263, 228,
	921, 922, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 884, 912, 335, 451,
	452, 281, 353, 0, 0, 940, 925, 450, 0, 869,
	943, 838, 857, 953, 860, 863, 905, 817, 883, 371,
	854, 809, 842, 812, 849, 813, 840, 871, 245, 837,
	927, 887, 942, 326, 242, 819, 843, 385, 859, 193,
	907, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 949, 330, 893, 0, 435,
	356, 0, 0, 0, 873, 931, 881, 919, 868, 906,
	827, 892, 944, 855, 902, 945, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 851, 899, 939, 852, 901, 240, 286, 247,
	239, 454, 950, 930, 816, 880, 938, 0, 0, 957,
	941, 875, 0, 904, 0, 956, 811, 895, 0, 814,
	818, 952, 934, 846, 250, 0, 0, 0, 0, 0,
	0, 0, 872, 882, 916, 866, 0, 0, 0, 0,
	0, 0, 0, 844, 0, 891, 0, 0, 0, 823,
	815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 870, 0, 0, 0, 826, 0, 845, 917,
	0, 808, 269, 820, 357, 232, 0, 923, 933, 867,
	488, 937, 865, 864, 911, 824, 929, 858, 325, 822,
	294, 188, 205, 0, 856, 367, 408, 414, 928, 841,
	850, 230, 848, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 890, 909, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 798,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 821, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 836,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 924, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 807, 801, 800, 295, 332,
	914, 955, 380, 413, 219, 474, 434, 831, 835, 829,
	896, 830, 885, 886, 832, 946, 947, 948, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 918, 825, 0,
	833, 834, 0, 926, 935, 936, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 889, 187, 202,
	328, 951, 402, 262, 503, 482, 478, 810, 828, 237,
	839, 847, 0, 853, 861, 862, 874, 876, 877, 878,
	879, 897, 898, 900, 908, 910, 913, 915, 920, 932,
	954, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 888, 894, 339, 255, 274, 285, 903, 481,
	439, 207, 409, 263, 228, 921, 922, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 884, 912, 335, 451, 452, 281, 353, 0, 0,
	0, 0, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 1752, 0, 606,
	0, 0, 0, 245, 611, 0, 0, 0, 326, 242,
	0, 1753, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	618, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 87, 0,
	0, 184, 185, 186, 692, 700, 701, 702, 703, 704,
	693, 695, 0, 0, 217, 694, 224, 629, 631, 630,
	640, 641, 642, 643, 644, 645, 646, 627, 697, 705,
	706, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 589, 603, 0, 617, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 787, 0, 0, 0,
	669, 0, 602, 0, 0, 610, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 668, 0, 0, 488, 0, 0, 666, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 635, 636, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 675, 667, 622, 679, 624, 676, 677, 619,
	620, 623, 678, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 670, 609, 608, 0, 615, 616, 0, 625,
	626, 628, 632, 633, 634, 637, 638, 639, 647, 649,
	650, 648, 651, 652, 653, 656, 657, 658, 659, 654,
	655, 660, 607, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 680, 237, 681, 0, 0, 685, 0,
	0, 0, 0, 686, 0, 0, 0, 663, 0, 0,
	682, 683, 0, 684, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	699, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 353, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 606,
	0, 0, 0, 245, 611, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	618, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 87, 0,
	0, 184, 185, 186, 692, 700, 701, 702, 703, 704,
	693, 695, 0, 0, 217, 694, 224, 629, 631, 630,
	640, 641, 642, 643, 644, 645, 646, 627, 697, 705,
	706, 0, 240, 286, 247, 239, 454, 0, 0, 1713,
	1714, 1715, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 589, 603, 0, 617, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 0, 0, 0, 0,
	669, 0, 602, 0, 0, 610, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 668, 0, 0, 488, 0, 0, 666, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 635, 636, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 675, 667, 622, 679, 624, 676, 677, 619,
	620, 623, 678, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 670, 609, 608, 0, 615, 616, 0, 625,
	626, 628, 632, 633, 634, 637, 638, 639, 647, 649,
	650, 648, 651, 652, 653, 656, 657, 658, 659, 654,
	655, 660, 607, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 680, 237, 681, 0, 0, 685, 0,
	0, 0, 0, 686, 0, 0, 0, 663, 0, 0,
	682, 683, 0, 684, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	699, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 353, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 606,
	0, 0, 0, 245, 611, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	618, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 613, 614, 0, 0, 0, 0, 0, 0, 1835,
	0, 288, 226, 192, 368, 436, 260, 0, 87, 0,
	0, 184, 185, 186, 692, 700, 701, 702, 703, 704,
	693, 695, 0, 0, 217, 694, 224, 629, 631, 630,
	640, 641, 642, 643, 644, 645, 646, 627, 697, 705,
	706, 1836, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 589, 603, 0, 617, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 601, 0, 0, 0, 0,
	669, 0, 602, 0, 0, 610, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 668, 0, 0, 488, 0, 0, 666, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 635, 636, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 675, 667, 622, 679, 624, 676, 677, 619,
	620, 623, 678, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 670, 609, 608, 0, 615, 616, 0, 625,
	626, 628, 632, 633, 634, 637, 638, 639, 647, 649,
	650, 648, 651, 652, 653, 656, 657, 658, 659, 654,
	655, 660, 607, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 680, 237, 681, 0, 0, 685, 0,
	0, 0, 0, 686, 0, 0, 0, 663, 0, 0,
	682, 683, 0, 684, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	699, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 0, 335, 451,
	452, 281, 353, 0, 0, 0, 78, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 692,
	700, 701, 702, 703, 704, 693, 695, 0, 0, 217,
	694, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 697, 705, 706, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 669, 0, 602, 0, 0,
	610, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 668, 0, 0,
	488, 0, 0, 666, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 675, 667, 622,
	679, 624, 676, 677, 619, 620, 623, 678, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 670, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 86, 402, 262, 503, 482, 478, 0, 680, 237,
	681, 0, 0, 685, 0, 0, 0, 0, 686, 0,
	0, 0, 663, 0, 0, 682, 683, 0, 684, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 699, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 692,
	700, 701, 702, 703, 704, 693, 695, 0, 0, 217,
	694, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 697, 705, 706, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 669, 0, 602, 0, 0,
	610, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 668, 0, 0,
	488, 0, 0, 666, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 2891, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 675, 667, 622,
	679, 624, 676, 677, 619, 620, 623, 678, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 670, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 680, 237,
	681, 0, 0, 685, 0, 0, 0, 0, 686, 0,
	0, 0, 663, 0, 0, 682, 683, 0, 684, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 699, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 692,
	700, 701, 702, 703, 704, 693, 695, 0, 0, 217,
	694, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 697, 705, 706, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 2869,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 669, 0, 602, 0, 0,
	610, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 668, 0, 0,
	488, 0, 0, 666, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 675, 667, 622,
	679, 624, 676, 677, 619, 620, 623, 678, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 670, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 680, 237,
	681, 0, 0, 685, 0, 0, 0, 0, 686, 0,
	0, 0, 663, 0, 0, 682, 683, 0, 684, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 2873, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 2872, 699, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 1322, 184, 185, 186, 692,
	700, 701, 702, 703, 704, 693, 695, 0, 0, 217,
	694, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 697, 705, 706, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 669, 0, 602, 0, 0,
	610, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 668, 0, 0,
	488, 0, 0, 666, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 675, 667, 622,
	679, 624, 676, 677, 619, 620, 623, 678, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 670, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 680, 237,
	681, 0, 0, 685, 0, 0, 0, 0, 686, 0,
	0, 0, 663, 0, 0, 682, 683, 0, 684, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 699, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 692,
	700, 701, 702, 703, 704, 693, 695, 0, 0, 217,
	694, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 697, 705, 706, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 787, 0, 0, 0, 669, 0, 602, 0, 0,
	610, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 668, 0, 0,
	488, 0, 0, 666, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 675, 667, 622,
	679, 624, 676, 677, 619, 620, 623, 678, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 670, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 680, 237,
	681, 0, 0, 685, 0, 0, 0, 0, 686, 0,
	0, 0, 663, 0, 0, 682, 683, 0, 684, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 699, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 692,
	700, 701, 702, 703, 704, 693, 695, 0, 0, 217,
	694, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 697, 705, 706, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 669, 0, 602, 0, 0,
	610, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 668, 0, 0,
	488, 0, 0, 666, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 675, 667, 622,
	679, 624, 676, 677, 619, 620, 623, 678, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 670, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 680, 237,
	681, 0, 0, 685, 0, 0, 0, 0, 686, 0,
	0, 0, 663, 0, 0, 682, 683, 0, 684, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 2873, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 2872, 699, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 692,
	700, 701, 702, 703, 704, 693, 695, 0, 0, 217,
	694, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 697, 705, 706, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 589, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 669, 0, 602, 0, 0,
	610, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 668, 0, 0,
	488, 0, 0, 666, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 675, 667, 622,
	679, 624, 676, 677, 619, 620, 623, 678, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 670, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 680, 237,
	681, 0, 0, 685, 0, 0, 0, 0, 686, 0,
	0, 0, 663, 0, 0, 682, 683, 0, 684, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 699, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 606, 0, 0, 0, 245, 611,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 618, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 692,
	700, 701, 702, 703, 704, 693, 695, 0, 0, 217,
	694, 224, 629, 631, 630, 640, 641, 642, 643, 644,
	645, 646, 627, 697, 705, 706, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 603, 0,
	617, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	601, 0, 0, 0, 0, 669, 0, 602, 0, 0,
	610, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 668, 0, 0,
	488, 0, 0, 666, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 635, 636, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 675, 667, 622,
	679, 624, 676, 677, 619, 620, 623, 678, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 670, 609, 608,
	0, 615, 616, 0, 625, 626, 628, 632, 633, 634,
	637, 638, 639, 647, 649, 650, 648, 651, 652, 653,
	656, 657, 658, 659, 654, 655, 660, 607, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 680, 237,
	681, 0, 0, 685, 0, 0, 0, 0, 686, 0,
	0, 0, 663, 0, 0, 682, 683, 0, 684, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 699, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	700, 701, 0, 0, 0, 0, 1658, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 1005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 1004,
	488, 0, 0, 0, 0, 0, 1001, 1002, 325, 965,
	294, 188, 205, 995, 999, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 0, 335, 451, 452, 281, 353, 0, 0,
	0, 78, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	0, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 0, 187, 202, 328, 86, 402, 262, 503,
	482, 478, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	0, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 1341, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 1343, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	0, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 0, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 1170, 0,
	1171, 1172, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 0, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	0, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 353, 335, 451,
	452, 281, 450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 326, 242,
	0, 0, 385, 0, 193, 0, 426, 229, 336, 333,
	457, 256, 248, 244, 227, 282, 343, 383, 444, 377,
	0, 330, 0, 0, 435, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 226, 192, 368, 436, 260, 0, 0, 0,
	0, 184, 185, 186, 1283, 1286, 0, 0, 0, 0,
	1282, 1285, 0, 0, 217, 1281, 224, 311, 320, 319,
	300, 301, 303, 305, 310, 317, 323, 0, 0, 0,
	0, 0, 240, 286, 247, 239, 454, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 357,
	232, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 325, 0, 294, 188, 205, 0, 0,
	367, 408, 414, 0, 0, 0, 230, 0, 412, 381,
	472, 213, 258, 405, 386, 410, 393, 261, 0, 0,
	411, 331, 459, 400, 469, 489, 490, 238, 361, 479,
	448, 485, 502, 206, 235, 375, 441, 475, 432, 354,
	455, 456, 293, 431, 267, 191, 329, 495, 204, 420,
	221, 211, 197, 443, 467, 218, 423, 0, 0, 504,
	199, 465, 440, 350, 290, 291, 198, 0, 404, 243,
	265, 233, 370, 462, 463, 231, 505, 208, 484, 201,
	0, 483, 363, 458, 466, 351, 341, 200, 464, 349,
	340, 296, 315, 316, 254, 276, 398, 334, 399, 277,
	359, 358, 360, 194, 476, 0, 195, 0, 437, 477,
	506, 214, 215, 216, 0, 253, 257, 264, 266, 272,
	273, 280, 327, 374, 397, 395, 401, 0, 453, 470,
	480, 487, 493, 494, 496, 497, 498, 499, 500, 501,
	362, 279, 433, 295, 332, 0, 0, 380, 413, 219,
	474, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 342, 425, 471, 297, 309, 312, 302, 321,
	0, 322, 298, 299, 304, 306, 307, 308, 313, 314,
	318, 324, 0, 187, 202, 328, 0, 402, 262, 503,
	482, 478, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 236, 251, 259, 270, 275, 278, 283, 284, 287,
	292, 338, 344, 345, 346, 347, 364, 365, 366, 369,
	372, 373, 376, 378, 379, 382, 389, 390, 391, 392,
	394, 396, 403, 407, 415, 416, 417, 418, 419, 421,
	422, 427, 428, 429, 430, 438, 442, 460, 461, 473,
	486, 491, 271, 468, 492, 0, 337, 0, 0, 339,
	255, 274, 285, 0, 481, 439, 207, 409, 263, 228,
	0, 0, 196, 225, 210, 234, 249, 252, 289, 348,
	355, 384, 388, 268, 246, 223, 406, 220, 424, 445,
	446, 447, 449, 352, 241, 387, 0, 0, 335, 451,
	452, 281, 353, 0, 0, 0, 78, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 1322, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 86, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 1775, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 1773, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 965,
	294, 188, 205, 963, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 1775, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 1322, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 2818, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	2107, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 2092, 0, 0, 0, 2093, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 1366,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1365, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 2911, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 2818, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 2550, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 1609, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1487, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1485, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1483, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1481, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1479, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1475, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1473, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 1471, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 1448, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 1350, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	1147, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 769, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 580, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 528, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 2916, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 2560, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 353, 335, 451, 452, 281, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 326, 242, 0, 0, 385, 0, 193,
	0, 426, 229, 336, 333, 457, 256, 248, 244, 227,
	282, 343, 383, 444, 377, 0, 330, 0, 0, 435,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 226, 192, 368,
	436, 260, 0, 0, 0, 0, 184, 2088, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 311, 320, 319, 300, 301, 303, 305, 310,
	317, 323, 0, 0, 0, 0, 0, 240, 286, 247,
	239, 454, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 357, 232, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	294, 188, 205, 0, 0, 367, 408, 414, 0, 0,
	0, 230, 0, 412, 381, 472, 213, 258, 405, 386,
	410, 393, 261, 0, 0, 411, 331, 459, 400, 469,
	489, 490, 238, 361, 479, 448, 485, 502, 206, 235,
	375, 441, 475, 432, 354, 455, 456, 293, 431, 267,
	191, 329, 495, 204, 420, 221, 211, 197, 443, 467,
	218, 423, 0, 0, 504, 199, 465, 440, 350, 290,
	291, 198, 0, 404, 243, 265, 233, 370, 462, 463,
	231, 505, 208, 484, 201, 0, 483, 363, 458, 466,
	351, 341, 200, 464, 349, 340, 296, 315, 316, 254,
	276, 398, 334, 399, 277, 359, 358, 360, 194, 476,
	0, 195, 0, 437, 477, 506, 214, 215, 216, 0,
	253, 257, 264, 266, 272, 273, 280, 327, 374, 397,
	395, 401, 0, 453, 470, 480, 487, 493, 494, 496,
	497, 498, 499, 500, 501, 362, 279, 433, 295, 332,
	0, 0, 380, 413, 219, 474, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 342, 425, 471,
	297, 309, 312, 302, 321, 0, 322, 298, 299, 304,
	306, 307, 308, 313, 314, 318, 324, 0, 187, 202,
	328, 0, 402, 262, 503, 482, 478, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 236, 251, 259, 270,
	275, 278, 283, 284, 287, 292, 338, 344, 345, 346,
	347, 364, 365, 366, 369, 372, 373, 376, 378, 379,
	382, 389, 390, 391, 392, 394, 396, 403, 407, 415,
	416, 417, 418, 419, 421, 422, 427, 428, 429, 430,
	438, 442, 460, 461, 473, 486, 491, 271, 468, 492,
	0, 337, 0, 0, 339, 255, 274, 285, 0, 481,
	439, 207, 409, 263, 228, 0, 0, 196, 225, 210,
	234, 249, 252, 289, 348, 355, 384, 388, 268, 246,
	223, 406, 220, 424, 445, 446, 447, 449, 352, 241,
	387, 0, 0, 335, 451, 452, 281,
}

var yyPact = [...]int{
	4617, -1000, -408, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1984, 2005, -1000, -1000,
	-1000, -1000, 2150, -1000, 681, 1675, -1000, 1944, 3171, -1000,
	42598, 441, -1000, 41418, 440, 111, 42598, -1000, 167, -1000,
	157, 42598, 163, 40828, -1000, -1000, -273, 18988, 1888, 40,
	32, 42598, -1000, -1000, -1000, -1000, 2102, 1639, -1000, 347,
	-1000, -1000, -1000, -1000, -1000, -1000, 40238, -1000, -1000, -1000,
	1954, 1936, 2157, 608, 1885, -1000, 2034, 1639, -1000, 18988,
	2085, 2026, 17808, -1000, 17808, 398, -1000, -1000, 13078, -1000,
	-1000, 24898, 42598, 42598, 287, -1000, 1944, -1000, -1000, 331,
	-1000, 305, 1527, -1000, 1525, -1000, 596, 505, 334, 453,
	449, 333, 329, 326, 322, 317, 316, 315, 314, 335,
	-1000, 633, 633, -132, -133, 405, 381, 381, 381, 426,
	1910, 1904, -1000, 614, -1000, 633, 633, 308, 633, 633,
	633, 633, 280, 278, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 328,
	1944, 254, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 42598, 165, 42598, -1000,
	528, 42598, 762, 762, 69, 762, 762, 762, 762, 176,
	607, 29, -1000, 147, 233, 139, 247, 743, 156, -1000,
	-1000, 236, 743, 1129, 621, 140, -1000, 762, 762, -1000,
	10698, 216, 10698, 10698, -1000, 1931, -1000, -1000, -1000, -1000,
	1134, -1000, 423, -1000, -1000, -1000, -1000, 42598, 39648, 345,
	660, -1000, -1000, -1000, 137, -1000, -1000, 1275, 872, 18988,
	1043, -1000, 2143, 578, -1000, -1000, -1000, -1000, -1000, 515,
	19578, 19578, 19578, 19578, -1000, -1000, 1561, 1561, 1561, 1561,
	19578, 1561, 19578, 1561, 1561, 1561, 1561, 18988, 1561, 1561,
	1561, -1000, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561,
	1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561,
	1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561,
	1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561,
	1561, 1561, 1561, 1561, 1561, 525, 1561, 1561, 1561, 1561,
	1561, -1000, -1000, -1000, -1000, 1561, 1561, 1561, 1561, 1561,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 22533, -1000, 15448, 1561,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 42598,
	-1000, 1561, 177, 42598, 42598, 338, 2034, 1639, -1000, 2102,
	2062, 347, -1000, 2305, 1531, 1205, 855, 1639, 1453, 42598,
	-1000, 1569, -1000, -1000, -1000, 1822, 1082, 1125, -1000, -1000,
	-1000, -1000, 1398, 18988, -1000, -1000, 2135, -1000, 21943, 508,
	813, 2128, 39058, -1000, 398, 398, 1522, 12483, 1, -1000,
	-1000, -1000, 655, 27848, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1931, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1554, 42598,
	-1000, -1000, 3664, 1062, -1000, 1674, -1000, 1542, -1000, 1606,
	1686, 439, 1062, 435, 432, 431, -1000, -64, -1000, -1000,
	-1000, -1000, -1000, 633, 633, -1000, 307, 2084, 3171, 4728,
	-1000, -1000, -1000, 38468, 1673, 1062, -1000, 1672, -1000, 739,
	494, 504, 504, 1062, -1000, -1000, 42598, 1062, 737, 736,
	42598, 42598, -1000, 37878, -1000, 37288, 36698, 992, 42598, 36108,
	35518, 34928, 34338, 33748, -1000, 1753, -1000, 1859, -1000, -1000,
	-1000, 42598, 42598, 42598, 330, -1000, -1000, 42598, 1062, -1000,
	-1000, 991, 988, 633, 633, 985, 1117, 1107, 1106, 633,
	633, 983, 1096, 29028, 256, 957, 951, 948, 982, 1095,
	179, 905, 904, 947, 42598, 1665, 42598, -1000, 223, 691,
	377, 654, 1944, 1887, 1514, 418, 438, 1062, 393, 393,
	42598, -1000, 11293, -1000, -1000, 1094, 18988, -1000, 755, 743,
	743, -1000, -1000, -1000, -1000, -1000, -1000, 762, 42598, 755,
	-1000, -1000, -1000, 743, 762, 42598, 762, 762, 762, 762,
	743, 743, 743, 762, 42598, 42598, 42598, 42598, 42598, 42598,
	42598, 42598, 42598, 10698, 621, 762, -312, -1000, 1089, -1000,
	1781, -1000, -1000, -1000, -1000, -1000, -1000, 10698, 10698, -1000,
	-1000, -1000, -1000, 162, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -93, 1462, 33158, -1000, -313, -316, -317,
	-318, -1000, -1000, -1000, -328, -338, -1000, -1000, -1000, 18988,
	18988, 18988, 18988, -157, -1000, 931, 19578, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 149, 702, 19578, 19578, 19578, 19578,
	19578, 19578, 19578, 19578, 19578, 19578, 19578, 19578, 19578, 19578,
	19578, 833, 5226, 5226, 578, 578, 578, 578, -1000, 17808,
	18988, 18988, 578, -1000, 1062, 32568, 17808, 17808, 18988, 1922,
	674, 872, 42598, -1000, 855, -1000, -1000, -1000, 946, -1000,
	42598, 42598, 1449, 18988, 18988, 18988, 18988, 18988, 18988, 14263,
	18988, 18988, 18988, 18988, 18988, 18988, 18988, 18988, 18988, 18988,
	18988, 18988, 18988, 18988, 18988, 18988, 18988, 18988, 18988, 18988,
	18988, 18988, 18988, 18988, 18988, 18988, 855, 18988, 1349, 13673,
	11293, 17808, 17808, 17808, 17808, 17808, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 506, 1422,
	1326, 1391, 18988, -1000, 1460, -1000, -167, 24308, 18988, 1087,
	2121, 1706, 42598, -1000, -1000, -1000, 2034, -1000, 2034, 1422,
	2300, 1827, 17808, -1000, -1000, 2300, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1228, -1000, 42598, 1453, 1999, 42598,
	1820, 1086, 302, -1000, 18988, 18988, 1441, -1000, 1208, 42598,
	-1000, -157, -1000, 31978, -1000, -1000, 10103, -1000, 42598, 309,
	42598, -1000, 23718, 31388, 11888, 1, -1000, 11888, 1380, -1000,
	11, -11, 14853, 573, -1000, -1000, -1000, 405, 20758, 1260,
	573, 91, -1000, -1000, -1000, 1606, -1000, 1606, 1606, 1606,
	1606, 302, 302, 302, 302, -1000, -1000, -1000, -1000, -1000,
	1664, 1661, -1000, 1606, 1606, 1606, 1606, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1660, 1660, 1660, 1640, 1640, 374,
	-1000, 18988, 261, 42598, 2000, 942, 223, 395, 1701, 1062,
	1062, 1062, 395, -1000, 1547, 1534, -1000, -400, 1431, -1000,
	-1000, 2080, -1000, -1000, 642, 763, 761, 615, 42598, 193,
	303, -1000, 375, -1000, 42598, 1062, 730, 504, 1062, -1000,
	1062, -1000, -1000, -1000, -1000, -1000, 1062, 1429, -1000, 1566,
	818, 752, 792, 751, 1429, -1000, -1000, -113, 1429, -1000,
	1429, -1000, 1429, -1000, 1429, -1000, 1429, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 651, 42598, 193, 833, -1000,
	417, -1000, -1000, 833, 833, -1000, -1000, -1000, -1000, 1080,
	1079, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -385, 42598,
	-1000, 205, 652, 283, 301, 268, 42598, 241, 2006, 257,
	276, 42598, 42598, 393, 1763, 42598, 1964, 42598, -1000, -1000,
	-1000, -1000, -1000, 872, 42598, -1000, -1000, 762, 762, -1000,
	-1000, 42598, 762, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 762, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 42598, -1000, -1000,
	-1000, -1000, 42598, -1000, -1000, -1000, -1000, -1000, 148, 9,
	324, -1000, -1000, -1000, -1000, -1000, 2024, -1000, 872, 692,
	693, -1000, 1561, -1000, -1000, 815, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 149, 19578, 19578, 19578, 1146, 448, 930,
	1229, 896, 864, 864, 937, 937, 585, 585, 585, 585,
	585, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1076,
	-1000, 1477, -1000, 1518, 1285, 855, -1000, 1477, 1477, 1204,
	17808, -1000, -1000, 680, -1000, 18988, 855, -1000, -1000, 855,
	855, 1427, 1424, 2120, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1313, 1290, 1290, 1290, 1290,
	1290, 18988, 1199, -1000, -1000, -1000, 2015, 1992, 855, 1275,
	855, 1421, -1000, 1978, 1290, 1955, 1930, 1918, 1274, 1895,
	1839, 1766, 1290, 1290, 1290, 1142, 1750, 1743, 1685, 1681,
	1676, 1670, 1666, 1662, 1656, 1290, -160, 1290, 855, 855,
	855, 855, 17808, 17808, 1399, 1561, 502, -1000, 1477, 855,
	855, 1477, 1477, 11293, 855, -1000, 1391, 42598, -1000, -278,
	-1000, -13, 569, 1561, -1000, 29028, 855, -1000, 4796, -1000,
	43778, -1000, -1000, -1000, -1000, -1000, 27258, 1657, 2300, -1000,
	-1000, 1561, 1507, -1000, -1000, 302, 75, 26668, -1000, -1000,
	872, 872, 18988, -1000, -1000, -1000, -1000, -1000, -1000, 477,
	2111, 352, 1561, -1000, 1374, 2122, -1000, -1000, -1000, 1997,
	21353, -1000, 1561, 1561, 42598, 1658, 1565, -1000, 475, -1000,
	1380, 1, 0, -1000, -1000, -1000, -1000, 872, -1000, 1231,
	311, 320, -1000, 382, -1000, -1000, -1000, -1000, 1897, 63,
	-1000, -1000, -1000, 302, 302, -1000, -1000, -1000, -1000, -1000,
	-1000, 1068, 1068, -1000, -1000, -1000, -1000, -1000, 924, -1000,
	-1000, -1000, 912, -1000, -1000, 1530, 1722, 261, -1000, -1000,
	633, 1067, 1899, 42598, -1000, -1000, 1178, 205, 42598, 685,
	1761, -1000, 1701, 1701, 1701, 42598, -1000, -1000, -1000, -1000,
	-387, 56, 360, -1000, -1000, -1000, 4206, 42598, 1501, -1000,
	184, -1000, 1173, -1000, 42598, -1000, 1499, 1655, 1062, 1062,
	-1000, -1000, -1000, 42598, 1561, -1000, -1000, -1000, -1000, 437,
	1941, 1939, 193, 184, 573, 1062, -1000, -1000, -1000, -1000,
	-1000, -388, 1481, 429, 196, 297, 42598, 42598, 42598, 42598,
	42598, 455, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	265, 414, -1000, 42598, 42598, 534, -1000, -1000, -1000, 743,
	-1000, -1000, 743, -1000, -1000, -1000, -1000, -1000, 1933, 42598,
	8, -352, -1000, -349, 18988, -1000, -1000, -1000, -1000, 791,
	434, 930, 19578, 19578, 17808, -101, 269, 269, 833, -1000,
	-1000, -1000, 18988, 18988, 1451, 666, -1000, 18988, 851, -1000,
	-1000, -1000, 18988, 18988, 18988, 855, 284, -1000, -1000, -1000,
	-1000, -1000, 2114, -1000, 18988, 18988, 18988, -1000, -1000, 18988,
	18988, -1000, 18988, 18988, 20168, 855, 20168, 18988, 18988, 20168,
	-1000, -1000, -1000, -1000, 20168, 18988, 18988, 18988, 18988, 18988,
	18988, 18988, 18988, 18988, -1000, -1000, 30798, 57, -160, -160,
	-160, -1000, 1477, 1477, 17808, 11293, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 569, -1000, 504,
	504, 504, 42598, -1000, -1000, -1000, -1000, -1000, -1000, 1335,
	2017, -1000, 1852, 1840, 2103, 2111, -1000, 23718, 2300, -1000,
	-1000, 42598, -260, -1000, 1875, 1858, -1000, -1000, -1000, -1000,
	9508, 2034, 18988, 1758, 42598, 151, -1000, 23128, 42598, 42598,
	23718, 23718, 23718, 23718, 23718, -1000, 1813, 1790, -1000, 1779,
	1778, 1785, 42598, -1000, 1475, 855, 2062, 21353, 347, 18988,
	25488, 1214, 23718, -1000, -1000, 23718, 42598, 8913, -1000, -1000,
	7, -30, -1000, -1000, -1000, -1000, 405, -1000, -1000, 801,
	1990, 1892, -1000, -1000, -1000, -1000, 1468, -1000, 1445, 1324,
	1416, 185, -1000, 1671, 1923, 633, 633, -1000, 909, -1000,
	1062, -1000, -1000, 428, -1000, 1961, 42598, 1757, 1752, 1741,
	-1000, -399, 893, 1654, 1570, 18988, 1652, 2078, 1288, 42598,
	-1000, -1000, 42598, -1000, 229, -1000, 261, 42598, -1000, -1000,
	-1000, 303, 42598, -1000, 3125, 184, -1000, -1000, -1000, -1000,
	-1000, -1000, 42598, 232, -1000, 1651, 856, -1000, -1000, 1692,
	-1000, -1000, -1000, -1000, 182, 270, -1000, 42598, 524, 1722,
	42598, -1000, -1000, -1000, 762, 762, -1000, -1000, 1921, -1000,
	1062, 1290, 19578, 19578, -1000, 578, -1000, 1561, 855, 1606,
	1606, -1000, 1606, 1640, -1000, 1606, 153, 1606, 152, 1606,
	-1000, -1000, 855, 855, 1133, 993, -74, -1000, 872, 18988,
	1626, 1546, 1290, -1000, 1602, 1592, 18988, 1290, 1290, 1290,
	-1000, 872, 1274, 1541, 1329, -1000, -1000, -1000, -1000, 1298,
	1290, 1526, 855, 855, 1407, 1407, 1407, 1407, 1407, 1391,
	1391, 1391, 1391, 30208, -1000, -160, -1000, -1000, -194, -197,
	-1000, -1000, -1000, -1000, -1000, 855, -1000, -1000, 1981, 1981,
	1981, 1366, 43188, 42598, -1000, -1000, -1000, -1000, 2111, 2094,
	1292, -1000, -1000, 75, 404, -1000, 1863, 1858, -1000, 2072,
	1868, 2070, -1000, -1000, -1000, 872, -1000, 1948, 1207, -1000,
	638, 1232, -1000, -1000, 17218, 1388, 1835, 471, 1366, 1393,
	2122, 1698, 1739, 1925, -1000, -1000, -1000, -1000, 1789, -1000,
	1776, -1000, -1000, 1569, -1000, -1000, 1326, 855, 1496, 309,
	23718, 1266, 1266, -1000, 461, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 795, 6305, 2156, -1000, 1056, -1000, 1022, -1000,
	715, 711, -1000, 42598, 1590, -1000, 302, 1055, 302, 877,
	-1000, 873, -1000, -1000, -174, -1000, -1000, 1707, 1748, -1000,
	-1000, 42598, -1000, -1000, 42598, 42598, 42598, 1584, 2069, -1000,
	18988, 1577, 635, 1472, 42598, 42598, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 409, 633, -366, 274,
	272, 633, 633, 633, -1000, -1000, 1360, 1358, -1000, -130,
	-1000, 18988, -1000, -1000, -1000, 977, 977, -1000, 1569, -1000,
	-1000, -1000, 1154, -1000, -1000, -115, 42598, 42598, 42598, 42598,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	578, 19578, -1000, -1000, 302, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 18988, -1000, 18988, -1000, 2034, 1053,
	872, 18988, 18988, -1000, 871, 868, 1290, -1000, -1000, -1000,
	855, 20168, -1000, 20168, -1000, 18988, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 855, 304, 2087,
	2060, -1000, -1000, -1000, -1000, 1561, 1877, 1561, 1561, 25488,
	-1000, -1000, 2094, 2090, 2056, 1860, 1864, 1864, 1863, -1000,
	2055, 2051, -1000, 1050, 2044, 1044, 707, -1000, 42598, 18988,
	151, -1000, 346, 42598, 151, 42598, -1000, 2087, -1000, -1000,
	18988, 1574, -1000, 18988, -1000, -1000, -1000, -1000, -1000, -1000,
	5226, 2111, 1266, -1000, -1000, 593, -1000, 18988, -1000, -1000,
	-1000, 3047, -1000, -1000, -1000, -1000, -1000, 1573, 18988, -1000,
	-1000, -1000, 1150, 1143, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1569, -1000, -1000, -1000, -1000, 303, -397, 1454,
	42598, 867, -1000, 1347, 1288, 290, 151, 1041, 633, 633,
	633, 853, 850, 29028, 349, -1000, 303, -1000, -135, -136,
	1290, -1000, -1000, 1982, -1000, -1000, 11293, -1000, -1000, 1564,
	1700, -1000, 211, -1000, 1290, 1290, 855, -1000, 1290, 1290,
	1139, 1135, -1000, -1000, 1329, -1000, 915, -1000, 2087, -370,
	18988, 26078, -1000, 2039, 2018, 29618, 29618, 569, 2090, -1000,
	18988, 18988, 1857, 852, -1000, -1000, -1000, -1000, 1040, 1037,
	-1000, 1034, -1000, 2155, -1000, 872, -1000, 151, -1000, 450,
	1232, -1000, 2034, 872, 42598, 872, 58, 2087, -1000, 1290,
	-1000, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561,
	1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561,
	1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561, 1561,
	1561, 1561, 1561, 42598, 1263, -1000, -1000, 1980, 1317, 48,
	-1000, 1280, -1000, -1000, 146, -1000, 18988, -1000, 29028, 1021,
	1016, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 347,
	1282, -1000, 632, 42598, 42598, 855, 285, -122, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18988, -370, -1000,
	-1000, 16628, -1000, -1000, 1275, 1277, -1000, -1000, -1000, -1000,
	-1000, 1277, 1277, -1000, -1000, 872, 1275, -1000, 848, -1000,
	-1000, -1000, -1000, -1000, 42598, 1232, 42598, -1000, 1270, 855,
	1561, 2034, -1000, 1242, -1000, 347, -1000, 1560, 1570, -1000,
	-1000, -1000, 16038, -1000, -1000, -1000, -1000, -114, 11293, 8318,
	1238, -1000, -1000, 1762, -105, -126, 1274, -1000, -1000, 18398,
	-1000, 313, -358, -208, 28438, -1000, -1000, -1000, -1000, -1000,
	1147, -1000, -1000, 25488, 42008, -1000, 1736, 516, -114, 18988,
	1291, 855, -1000, -9, -1000, -1000, -1000, -1000, -1000, 1692,
	-1000, 1679, -1000, 855, 690, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1186, -1000, 1385, -209, 1734, -1000, 2119,
	-1000, -1000, -1000, 770, 1015, -1000, -1000, -1000, -1000, 1235,
	42598, -1000, 361, -1000, -1000, -115, -120, -1000, 18398, -1000,
	42008, -205, 573, 5226, -1000, -1000, 2146, 572, 572, -1000,
	-1000, -405, 1177, 207, -1000, -124, -1000, -1000, -1000, 1959,
	58, -1000, -1000, -1000, 351, 870, -1000, -1000, 845, -405,
	-1000, -128, -222, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 5226, 188, 188, -1000, 1720, -1000, -1000, 5226, -1000,
	1709, -250, -1000, -342, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2530, 2528, 21, 5, 2527, 2526, 2523, 26, 91,
	175, 23, 190, 99, 2521, 2520, 2519, 2518, 2516, 2514,
	2513, 216, 212, 211, 2512, 2510, 2509, 2508, 2507, 2504,
	2503, 2502, 2501, 2500, 206, 164, 168, 2499, 2498, 2497,
	119, 178, 82, 85, 187, 2496, 2494, 77, 2493, 2492,
	2486, 185, 183, 739, 2485, 182, 118, 38, 2484, 2483,
	2482, 2475, 2472, 2466, 2463, 2462, 2461, 2460, 2459, 2458,
	2457, 2454, 2453, 2452, 2450, 237, 2449, 2447, 15, 2444,
	79, 2440, 2439, 2438, 2434, 2433, 10, 2431, 29, 2429,
	100, 2428, 2427, 2425, 2424, 2423, 2422, 121, 2421, 2413,
	2412, 2411, 2410, 2408, 2407, 144, 2406, 2403, 2402, 2401,
	177, 2400, 2399, 308, 108, 117, 2398, 2397, 102, 172,
	2396, 120, 2395, 2394, 2393, 150, 2392, 1830, 2390, 63,
	66, 2389, 53, 78, 61, 68, 7, 1, 2387, 2386,
	52, 84, 2385, 103, 73, 2384, 97, 111, 2383, 2382,
	12, 6, 2381, 4, 2380, 2, 69, 2379, 2378, 142,
	2377, 2376, 2375, 96, 2374, 2373, 5197, 2371, 88, 132,
	105, 74, 2366, 34, 49, 2361, 2359, 2357, 2356, 2354,
	43, 2351, 2350, 2349, 139, 33, 166, 45, 31, 39,
	44, 131, 2348, 36, 80, 2347, 135, 136, 2346, 58,
	32, 40, 2345, 95, 126, 151, 24, 89, 138, 2344,
	2342, 50, 71, 2341, 2339, 2336, 2335, 2331, 2330, 70,
	2327, 48, 2326, 180, 2325, 60, 2322, 46, 37, 2319,
	65, 141, 67, 20, 2316, 165, 2313, 47, 161, 123,
	156, 2312, 2297, 2295, 2294, 173, 276, 2292, 2291, 75,
	160, 145, 148, 2289, 292, 2287, 2286, 94, 1457, 3144,
	28, 157, 2285, 2283, 4701, 143, 30, 25, 2280, 184,
	2278, 2277, 2275, 169, 163, 115, 926, 110, 2274, 16,
	2273, 2272, 2271, 2270, 2269, 2265, 92, 2264, 2263, 2262,
	188, 98, 9, 158, 76, 2258, 2256, 2254, 125, 93,
	2253, 159, 155, 129, 167, 2252, 162, 146, 140, 2245,
	90, 2244, 2240, 2237, 2231, 2225, 86, 2222, 2220, 2215,
	2214, 154, 147, 122, 83, 2210, 81, 116, 152, 153,
	42, 2206, 41, 2205, 2204, 2203, 186, 18, 2202, 14,
	55, 59, 22, 107, 128, 2199, 0, 2197, 13, 170,
	294, 149, 2196, 2193, 8, 2186, 11, 2185, 134, 2184,
	2182, 2180, 19, 35, 17, 3, 2179, 2172, 5482, 2827,
	130, 2170, 174,
}

//line sql.y:6922
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 366, 367, 367, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 346, 346,
	346, 349, 349, 32, 70, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 95, 95, 22, 23, 23, 23, 23,
	370, 370, 161, 161, 159, 159, 160, 160, 230, 230,
	24, 25, 25, 240, 240, 239, 239, 239, 241, 241,
	241, 241, 276, 276, 26, 26, 26, 26, 26, 111,
	111, 348, 348, 347, 339, 339, 338, 338, 337, 345,
	345, 344, 344, 343, 38, 39, 48, 48, 48, 48,
	49, 50, 350, 350, 312, 54, 54, 53, 53, 53,
	53, 55, 55, 52, 52, 51, 51, 314, 314, 300,
	300, 313, 313, 313, 313, 313, 313, 313, 299, 299,
	122, 122, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 361, 361, 210, 210, 210, 210, 210,
	210, 131, 131, 140, 140, 140, 140, 140, 129, 129,
	130, 128, 128, 128, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 139, 139, 135,
	135, 135, 136, 136, 136, 137, 137, 362, 362, 362,
	362, 279, 279, 279, 279, 282, 282, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 281, 281, 281, 281,
	281, 283, 283, 283, 283, 283, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 285, 285, 285, 285, 285, 285, 285, 285, 298,
	298, 286, 286, 293, 293, 294, 294, 294, 295, 295,
	295, 296, 296, 291, 291, 291, 291, 291, 291, 292,
	292, 292, 301, 326, 326, 325, 325, 323, 323, 323,
	323, 310, 310, 320, 320, 320, 320, 320, 309, 309,
	305, 305, 305, 306, 306, 307, 307, 304, 304, 308,
	308, 322, 322, 321, 302, 302, 303, 303, 328, 363,
	363, 363, 363, 364, 364, 329, 355, 356, 354, 354,
	354, 354, 354, 80, 80, 80, 253, 253, 253, 318,
	318, 317, 317, 317, 319, 319, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 248, 248, 248, 353, 353, 353,
	353, 353, 353, 352, 352, 352, 315, 315, 315, 351,
	351, 56, 56, 194, 194, 45, 45, 45, 45, 45,
	45, 44, 44, 44, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 97, 97,
	98, 98, 98, 98, 100, 100, 100, 331, 331, 57,
	57, 3, 3, 149, 151, 152, 152, 150, 150, 150,
	150, 150, 150, 59, 59, 58, 58, 154, 153, 155,
	155, 155, 1, 1, 2, 2, 4, 4, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	297, 297, 297, 330, 330, 332, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 334, 334, 334, 60, 60,
	335, 287, 288, 289, 5, 6, 311, 333, 107, 107,
	28, 37, 37, 29, 29, 29, 29, 30, 30, 61,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	247, 247, 255, 255, 246, 246, 269, 269, 269, 249,
	249, 249, 250, 250, 360, 360, 360, 243, 243, 63,
	63, 63, 65, 65, 66, 67, 67, 271, 271, 272,
	272, 68, 69, 81, 81, 81, 81, 81, 81, 96,
	96, 96, 15, 15, 15, 15, 77, 77, 77, 14,
	14, 64, 64, 71, 357, 357, 358, 359, 359, 359,
	359, 72, 74, 31, 31, 31, 31, 31, 31, 117,
	117, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 112, 112, 112, 106, 106, 371, 75,
	76, 76, 110, 110, 110, 103, 103, 103, 109, 109,
	109, 16, 16, 17, 229, 229, 18, 18, 114, 114,
	116, 116, 116, 116, 116, 118, 118, 118, 118, 118,
	118, 118, 113, 113, 115, 115, 115, 115, 262, 262,
	262, 261, 261, 143, 143, 145, 144, 144, 146, 146,
	147, 147, 147, 147, 192, 192, 169, 169, 227, 227,
	225, 225, 226, 226, 228, 228, 228, 228, 231, 231,
	148, 148, 148, 148, 156, 156, 157, 157, 158, 158,
	270, 270, 267, 267, 267, 266, 266, 162, 162, 162,
	164, 163, 163, 163, 163, 165, 165, 167, 167, 166,
	166, 168, 173, 173, 172, 172, 170, 170, 170, 170,
	171, 171, 171, 171, 174, 174, 127, 127, 127, 127,
	127, 127, 127, 138, 138, 138, 138, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 82, 82, 82, 83, 83, 84,
	84, 84, 85, 85, 85, 85, 85, 86, 86, 86,
	88, 88, 87, 87, 187, 187, 89, 89, 90, 90,
	93, 93, 92, 91, 91, 94, 94, 244, 244, 175,
	175, 183, 183, 183, 183, 176, 176, 176, 176, 176,
	176, 176, 184, 184, 184, 191, 185, 185, 181, 181,
	181, 181, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 342, 342, 341, 341, 340, 340, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 372,
	372, 290, 290, 290, 290, 182, 182, 182, 182, 182,
	108, 108, 108, 108, 108, 275, 275, 275, 278, 278,
	278, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 197, 197, 104, 104,
	195, 195, 196, 198, 198, 193, 193, 193, 178, 178,
	178, 199, 199, 200, 200, 201, 201, 203, 202, 202,
	204, 205, 205, 205, 206, 206, 207, 207, 207, 47,
	47, 47, 47, 47, 42, 42, 42, 42, 43, 43,
	43, 119, 119, 119, 119, 121, 121, 120, 120, 78,
	78, 79, 79, 79, 125, 125, 126, 126, 126, 123,
	123, 124, 124, 223, 223, 208, 208, 208, 215, 215,
	215, 211, 211, 213, 213, 213, 214, 214, 214, 212,
	220, 220, 222, 222, 221, 221, 217, 217, 218, 218,
	219, 219, 219, 216, 216, 177, 177, 177, 177, 177,
	224, 224, 224, 224, 232, 232, 188, 188, 190, 190,
	189, 189, 142, 233, 233, 237, 234, 234, 238, 238,
	238, 238, 238, 235, 235, 236, 236, 263, 263, 263,
	242, 242, 254, 254, 251, 251, 252, 252, 245, 245,
	256, 256, 256, 73, 186, 186, 327, 327, 324, 259,
	259, 260, 260, 264, 264, 268, 268, 265, 265, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 368, 369, 273,
	274, 274, 274,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 7, 5,
	6, 6, 7, 0, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 4, 4, 3, 0, 1,
	4, 3, 4, 4, 3, 3, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 3, 3, 3, 5, 2, 3, 3,
	2, 3, 4, 4, 4, 3, 4, 4, 5, 3,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 1, 1, 2,
	1, 3, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 1, 1, 1, 1, 1, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 1, 2, 5, 0, 3, 4, 3, 4, 2,
	0, 1, 1, 2, 2, 1, 1, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 6, 6,
	6, 4, 4, 4, 7, 8, 6, 5, 6, 8,
	11, 6, 4, 4, 4, 4, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 4, 4, 6, 5,
	5, 5, 0, 2, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 2,
	2, 0, 3, 0, 2, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -366, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -61, -62, -63, -65,
	-66, -67, -68, -69, -14, -64, -31, -32, -70, -71,
	-72, -73, -74, -16, -17, -18, -9, -8, -13, 9,
	10, -95, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -96, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -368,
	11, 429, 252, 251, 28, -12, 463, 85, -367, 599,
	-223, -208, 22, 33, 29, -207, -203, -110, -208, 20,
	18, 7, -75, -371, -75, -75, 12, 13, -75, -312,
	-314, 85, 155, 85, -75, -54, -53, -52, -51, -55,
	31, -45, -46, -336, -44, -41, 223, 220, 267, 119,
	120, 257, 258, 259, 222, 241, 256, 260, 255, 276,
	-40, 80, 33, 463, 466, -319, 219, 225, 226, 430,
	122, 121, 75, 221, -316, 353, 569, -55, 571, 101,
	103, 570, 44, 231, 572, 573, 574, 575, 240, 576,
	577, 578, 579, 585, 586, 587, 588, 123, 7, -75,
	-268, -264, -346, -258, 88, 89, 90, 460, 243, 493,
	494, 292, 80, 41, 350, 353, 569, 299, 313, 307,
	334, 326, 461, 495, 295, 244, 280, 563, 324, 131,
	571, 298, 496, 258, 358, 359, 360, 101, 302, 396,
	584, 297, 497, 582, 103, 570, 79, 51, 566, 44,
	253, 322, 227, 318, 572, 281, 498, 471, 274, 122,
	119, 591, 36, 316, 50, 30, 581, 121, 49, 573,
	146, 499, 574, 362, 341, 557, 48, 363, 259, 500,
	83, 264, 465, 565, 364, 317, 365, 291, 580, 224,
	501, 549, 366, 367, 558, 502, 342, 346, 503, 388,
	368, 598, 52, 504, 505, 559, 120, 506, 78, 575,
	311, 312, 507, 289, 242, 390, 338, 442, 449, 450,
	107, 108, 445, 109, 451, 110, 452, 453, 454, 443,
	111, 104, 444, 455, 456, 339, 340, 112, 457, 106,
	105, 446, 448, 113, 458, 240, 35, 369, 462, 293,
	58, 268, 391, 46, 344, 595, 45, 553, 508, 556,
	337, 333, 439, 53, 509, 510, 511, 512, 576, 336,
	310, 332, 590, 4, 286, 577, 62, 226, 348, 347,
	349, 275, 387, 329, 513, 514, 515, 247, 81, 516,
	319, 21, 517, 518, 370, 282, 519, 56, 520, 521,
	394, 256, 522, 54, 578, 39, 261, 592, 579, 523,
	524, 525, 526, 263, 527, 372, 528, 371, 343, 345,
	270, 373, 464, 529, 315, 260, 583, 530, 248, 564,
	262, 267, 255, 395, 249, 531, 532, 533, 534, 535,
	296, 536, 537, 303, 585, 440, 43, 538, 539, 540,
	541, 290, 285, 389, 398, 61, 82, 355, 542, 562,
	309, 283, 543, 300, 55, 586, 587, 588, 277, 589,
	9, 596, 597, 375, 123, 287, 288, 47, 330, 269,
	544, 545, 320, 321, 335, 308, 331, 301, 550, 271,
	376, 441, 257, 546, 397, 284, 351, 356, 468, 276,
	377, 561, 467, 328, 325, 278, 547, 378, 232, 272,
	273, 548, 551, 379, 380, 294, 381, 382, 383, 384,
	385, 386, 279, 466, 306, 323, 357, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 438, 230, -75, 230, -166,
	-264, 230, -235, 359, -255, 361, 374, 369, 379, 367,
	-247, 370, 372, 270, -360, 388, 230, 376, 218, 362,
	371, 380, 381, 294, 382, 386, 279, 383, 384, 385,
	-346, 172, 574, 589, 131, 327, 366, 364, 389, 553,
	-264, 301, -271, 306, -259, -346, -258, 304, -166, -81,
	549, 222, -273, -273, -112, 553, 555, -185, -127, 139,
	-138, -141, -132, -133, -179, -180, -181, -182, -139, -193,
	161, 162, 169, 140, -191, -142, 26, 459, 431, 430,
	172, 31, 214, 68, 69, 433, 434, 142, 57, 406,
	407, -140, 401, 408, 403, 436, 437, 114, 438, 104,
	106, 105, 439, 440, 441, 339, 340, 442, 443, 444,
	107, 108, 109, 110, 111, 112, 113, 445, 448, 446,
	447, 449, 450, 451, 456, 457, 452, 453, 454, 455,
	458, -85, -94, 484, -259, -264, 235, 400, 229, 167,
	429, -134, -130, -8, -189, 399, 404, 405, 409, 402,
	470, 472, 487, 488, 490, 475, 480, -346, -258, -136,
	-135, -175, 91, 97, 102, 98, -365, 115, -368, 567,
	92, 93, 94, 95, 96, 116, 117, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 44, 375,
	375, -166, -75, -75, -75, -75, -201, -110, -203, -10,
	-8, -368, 8, -75, -8, -9, -13, -34, -36, 489,
	-35, -264, -208, -223, 12, 157, 42, 50, -206, -207,
	-12, -8, -127, 19, 23, 24, -115, 163, -127, -264,
	-76, -115, -245, 234, -75, -75, -234, -276, 301, -238,
	389, 388, -260, -236, -259, -257, -235, 387, 223, 23,
	469, 138, 25, 27, 141, 172, 126, 19, 142, 37,
	225, 327, 241, 171, 237, 430, 218, 72, 470, 401,
	403, 399, 406, 432, 433, 400, 361, 31, 13, 472,
	28, 251, 24, 38, 165, 220, 145, 473, 254, 26,
	252, 114, 117, 475, 22, 75, 246, 14, 239, 40,
	16, 476, 477, 17, 235, 234, 157, 231, 70, 11,
	214, 29, 154, 66, 478, 133, 479, 480, 481, 482,
	127, 68, 155, 20, 593, 404, 405, 33, 554, 459,
	265, 167, 73, 59, 555, 139, 402, 483, 484, 115,
	485, 118, 76, 560, 135, 18, 71, 42, 486, 266,
	487, 236, 594, 488, 392, 489, 156, 221, 429, 69,
	490, 567, 568, 229, 374, 8, 435, 32, 250, 238,
	125, 67, 491, 230, 144, 436, 437, 233, 128, 116,
	7, 132, 34, 12, 74, 77, 407, 408, 409, 57,
	124, 463, 143, 15, 492, 393, 137, 131, -313, 155,
	-299, -303, -259, 245, -329, 241, -166, -322, -321, -259,
	-111, -254, 231, 239, 238, 132, -350, 135, 287, 400,
	229, -51, -52, -235, 171, -97, 262, 266, 86, 86,
	-303, -302, -301, -351, 266, 245, -328, -320, 237, 246,
	-309, 238, 239, -304, 231, 133, -351, -304, 236, 246,
	266, 266, 123, 266, 123, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 261, -310, 147, -310, 467, 467,
	-316, -351, -351, -351, 233, 35, 35, -256, -304, 233,
	25, -310, -310, -235, 171, -310, -310, -310, -310, 274,
	274, -310, -310, -310, -310, -310, -310, -310, -310, -310,
	-310, -310, -310, -310, -310, -310, 230, -350, -119, 386,
	294, 80, -53, 276, -37, -166, -254, 231, 232, -350,
	263, -166, 215, -166, -249, 155, 15, -249, -246, 375,
	373, 360, 365, -249, -249, -249, -249, 277, 358, -305,
	231, 35, 242, 375, 277, 358, 277, 278, 277, 278,
	368, 378, 277, -269, 14, 157, 400, 363, 367, 270,
	230, 271, 232, 377, 278, -269, 92, -250, 155, 375,
	273, -249, -249, -274, -368, -260, 327, -346, 556, -274,
	-274, 32, 89, 233, -259, -77, -259, 92, -15, -11,
	-22, -21, -23, 147, -117, 375, -105, 172, 574, 557,
	558, 559, 556, 372, 564, 562, 560, 277, 561, 86,
	135, 137, 138, 4, -127, 154, -176, 147, 148, 149,
	150, 151, 152, 153, 157, 139, 141, 155, 156, 136,
	158, 159, 160, 161, 162, 163, 164, 166, 165, 167,
	168, 171, 216, 217, -133, -133, -133, -133, -191, -368,
	-368, -368, -133, -244, -368, -133, -368, -368, -368, -368,
	-197, -127, -368, -372, -368, -372, -372, -290, -368, -290,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	215, -368, -368, -368, -368, -368, -290, -290, -290, -290,
	-290, 102, 97, 91, -193, 98, 92, -259, -264, -8,
	-9, -185, -368, -273, -357, -358, -169, -166, -368, 294,
	-259, -259, 263, -206, -12, -8, -201, -207, -203, -8,
	-75, -103, -116, 63, 64, -118, 24, 38, 67, 65,
	23, -369, 87, -369, -223, -369, 86, -36, -227, 85,
	61, 43, 92, 92, 86, 21, -202, -204, -127, 14,
	-262, 4, -261, 25, -259, 92, 215, 100, 14, -167,
	29, -166, -245, -245, 86, 301, -238, -276, -240, -239,
	390, 392, 147, -263, -259, 92, 31, 87, 86, -166,
	-279, -282, -284, -283, -285, -280, -281, 324, 325, 172,
	328, 330, 331, 332, 333, 334, 335, 336, 337, 338,
	341, 32, 253, 320, 321, 322, 323, 342, 343, 344,
	345, 346, 347, 348, 349, 307, 326, 461, 308, 309,
	310, 311, 312, 313, 315, 316, 317, 318, 319, -349,
	-346, 85, 87, 86, -286, 85, -119, 230, -346, 231,
	231, 231, -75, 429, -310, -310, 261, 19, -44, -41,
	-336, 18, -40, -41, 223, 119, 120, 220, 85, -299,
	85, -308, -349, -346, 85, 133, 236, 132, -307, -304,
	-307, -308, -346, -193, -346, 133, 133, -231, -259, -231,
	-231, 23, -231, 23, -231, 23, 94, -259, -231, 23,
	-231, 23, -231, 23, -231, 23, -231, 23, 31, 78,
	79, 31, 81, 82, 83, -193, -193, -299, -235, -166,
	-346, 94, 94, -310, -310, 94, 92, 92, 92, -310,
	-310, 94, 92, -266, -264, 92, -352, 247, 291, 293,
	94, 94, 94, 94, 31, 92, -353, 31, 581, 580,
	582, 583, 584, 94, 31, 94, 31, 94, -259, 85,
	-166, -125, 281, 218, 220, 223, 76, 92, 295, 147,
	44, 86, 233, 230, -346, -251, 235, -251, -259, -265,
	-264, -257, 92, -127, -306, 14, 157, -269, -269, -249,
	-166, -306, -269, -249, -166, -249, -249, -249, -249, -269,
	-269, -269, -249, -264, -264, -166, -166, -166, -166, -166,
	-166, -166, -274, -250, -249, 556, 92, -243, 14, 76,
	-274, -274, -272, 304, 338, 550, 551, 552, 86, 463,
	-159, -166, 556, 556, 556, 556, 556, 556, -127, -127,
	-127, -127, 485, -183, 115, 139, 116, 117, -141, -184,
	-189, -191, 99, 157, 141, 155, 156, -132, -133, -132,
	-132, -132, -132, -132, -132, -132, -132, -132, -132, -132,
	-132, -132, -275, -346, 92, 172, -137, -136, 98, -365,
	-137, -113, -115, -127, -127, -346, -259, -113, -113, -127,
	-109, 24, 38, -195, -196, 143, -193, -369, -369, 94,
	98, -259, -259, -102, -101, 411, 412, 413, 414, 416,
	417, 418, 421, 422, 426, 427, 410, 428, 415, 420,
	423, 424, 425, 419, 323, -127, -127, -127, -127, -127,
	-127, -82, -127, 126, 127, 128, -127, -127, -186, -185,
	-345, -344, -343, -127, -127, -127, -127, -127, -127, -127,
	-127, -127, -127, -127, -127, -127, -127, -127, -127, -127,
	-127, -127, -127, -127, -127, -127, -369, -127, 94, -346,
	-130, -114, 24, 38, -113, -260, -265, -257, -113, -114,
	-114, -113, -113, 215, -223, -369, -185, 86, -359, 392,
	393, 554, -267, 266, -266, 25, -186, 92, 14, -229,
	77, -259, -206, -206, 63, 64, 59, -113, -118, -369,
	-35, 25, -225, -259, 62, 92, -291, -235, 350, 351,
	-127, -127, 86, -205, 27, 28, -166, -261, 163, -265,
	-166, -230, 266, -166, -144, -146, -147, -148, -169, -192,
	-368, -149, 481, 478, 14, -159, -160, -168, -264, -238,
	-240, 86, 391, 393, 394, 76, 118, -127, -292, 171,
	-318, -317, -316, -299, -301, -302, -303, 87, -292, -295,
	356, 355, -286, -286, -286, -286, -286, -291, -291, -291,
	-291, 85, 85, -286, -286, -286, -286, -293, 85, -293,
	-293, -294, 85, -294, -329, -127, -326, -325, -323, -324,
	240, 101, 463, 77, -321, -205, 94, -125, -252, 235,
	-327, -324, -346, -346, -346, -252, -346, 92, -346, 92,
	-98, -57, -1, 593, 594, 595, 86, 19, -300, -299,
	-56, 291, -332, -333, 266, -328, -322, -308, 133, -307,
	-308, -308, -346, 86, 29, 123, 123, 123, 123, 463,
	220, 32, -299, -56, -275, 233, -275, -275, 92, 92,
	-248, 589, -159, -121, 283, 147, 272, 272, 230, 230,
	285, -166, 296, 298, 297, 295, 23, 284, 286, 288,
	274, -166, -166, -251, 76, -161, -166, 26, -264, -166,
	-249, -249, -166, -249, -249, -166, -259, -105, 392, 86,
	463, 22, -106, 22, -368, 115, 116, 117, -184, -132,
	-133, -132, 138, 254, 86, -369, 25, 86, 77, -369,
	-369, -369, 86, 14, -113, -198, -196, 145, -127, -369,
	-369, -369, 86, 86, 14, -278, 25, -369, -369, -369,
	-369, -369, -197, -369, 14, 86, 86, -369, -369, 86,
	86, -369, 86, 86, 86, -342, 86, 86, 86, 86,
	-369, -369, -369, -369, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, -369, -90, 486, -369, -369, -369,
	-369, -369, -113, -113, -368, 215, -369, -369, -369, -369,
	-369, -260, -369, -358, 553, 393, -173, -172, -170, 74,
	234, 75, -368, -266, -369, -137, 89, -226, 89, -225,
	-178, -259, 94, 98, -208, -143, -145, 14, -118, -191,
	87, 86, -291, -212, -217, -246, -259, 92, 172, -204,
	215, -174, 15, -177, 32, 57, -11, -368, -368, 32,
	86, -162, -164, -163, -165, 66, 70, 72, 67, 68,
	69, 73, -270, 25, -144, -9, -8, -368, -368, -368,
	-166, -159, -370, 14, 77, -370, 86, 215, -239, -241,
	395, 392, 398, -346, 92, -97, 86, -316, -303, -209,
	-122, 40, -296, 357, -291, -291, -298, 92, -298, 94,
	94, 87, -47, -42, -43, 33, 80, -323, -310, 92,
	39, -259, 87, -121, -166, 139, 76, -327, -327, -327,
	-264, -2, 592, 598, 133, 85, 360, 18, -225, 86,
	87, -194, 292, 87, -99, -259, 87, 85, -308, -308,
	-259, -368, 230, 31, 31, -56, -194, -292, -346, 591,
	590, 87, 232, 290, -126, 406, -123, 92, 88, -166,
	-166, -166, -166, -166, 223, 220, 275, 233, -159, -166,
	86, -80, 249, 244, -269, -269, 33, -166, 392, 565,
	563, -127, 138, 254, -141, -133, -115, 460, -277, 172,
	324, 253, 322, 318, 338, 329, 355, 320, 356, 317,
	316, 315, -277, -275, -127, -127, -201, 146, -127, 144,
	-127, -127, -127, -369, 172, 324, 14, -127, -127, -127,
	-343, -127, -127, -127, -341, -340, -137, -193, -369, -341,
	-127, -127, -340, -340, -344, -344, -344, -344, -344, -185,
	-185, -185, -185, -368, -259, -93, -92, -91, 533, 234,
	-90, -90, -90, -369, -369, -114, -260, -170, -304, -304,
	-304, -231, 86, -242, 22, 14, 57, 57, -143, -174,
	-144, -118, -259, -215, 549, -220, 46, -218, -219, 47,
	-216, 48, 56, 163, -206, -127, -232, 76, -233, -237,
	-193, -188, -190, -189, -368, -224, -369, -259, -231, -233,
	-146, -147, -147, -146, -147, 66, 66, 66, 71, 66,
	71, 66, -163, -264, -369, -369, -9, -9, -127, -267,
	77, -144, -144, -168, -264, 163, 392, 396, 397, -316,
	-364, 115, 139, 31, 76, 353, 101, -362, 171, -363,
	236, 132, 133, 248, 25, 41, 87, 86, 87, 86,
	87, 86, -253, 499, 139, -43, -42, -310, -310, 94,
	-346, 232, 26, -166, 76, 76, 76, -100, 596, 94,
	85, -3, 80, -127, 85, 19, -299, -193, -334, -287,
	-335, -288, -289, -5, -6, -311, 57, 101, -60, 44,
	231, 576, 577, 123, 589, -326, -225, -330, -332, -166,
	-129, -368, -128, -130, -134, 161, 162, -194, -166, -120,
	281, 289, 85, -124, 89, -348, 77, 272, 353, 272,
	-166, -80, -47, -166, -249, -249, 33, -346, -369, -141,
	-133, -368, -369, -286, -286, -286, -294, -286, 312, -286,
	312, -286, -369, -369, 86, -369, 22, -369, -104, 435,
	-127, 86, 86, -369, 85, 85, -127, -369, -369, -369,
	-342, 86, -369, 86, -369, 86, -369, -369, -369, -369,
	-369, -369, -369, -369, -369, -369, -369, -89, -259, -187,
	266, -90, 516, 516, -369, -171, 22, -171, -171, -369,
	89, -166, -174, -199, 16, -212, 51, 330, -222, -221,
	55, 47, -219, 19, 49, 19, 30, -232, 86, 147,
	86, -369, -369, 86, 57, 215, -369, -174, -157, -156,
	76, 77, -158, 76, -156, 66, 66, -227, -369, -369,
	86, -230, -144, -174, -174, 215, 115, -368, -131, -140,
	-129, 12, 92, 92, -346, 133, 133, -166, 85, -291,
	92, -291, 94, 94, 499, 31, 81, 82, 83, 31,
	78, 79, -166, -166, -166, -166, -331, 85, 19, -127,
	85, 147, 87, -225, -225, 268, 157, -310, 574, 274,
	274, -310, -310, -310, 87, -369, 86, -297, 463, 466,
	-127, -135, -135, -227, 87, -339, 463, -347, -259, -259,
	-259, -259, -132, -291, -127, -127, -206, 92, -127, -127,
	94, 94, -369, -369, -341, -340, -127, -369, -187, -201,
	19, -368, 66, 18, 16, -368, -368, -267, -199, -200,
	17, 19, -213, 53, -211, 52, -211, -221, 19, 19,
	92, 19, 92, 133, -237, -127, -190, 57, -11, -259,
	-188, -259, -201, -127, 85, -127, -137, -174, -174, -127,
	-180, 438, 104, 106, 105, 439, 440, 441, 339, 340,
	442, 443, 444, 107, 108, 109, 110, 111, 112, 113,
	445, 448, 446, 449, 450, 451, 456, 457, 452, 453,
	454, 455, 458, 85, -127, 87, 87, -227, -330, -57,
	87, -225, 94, 87, 269, -189, -368, 92, -310, -310,
	-310, 94, 94, -266, -363, -332, 467, 467, -369, 25,
	-338, -337, -260, 85, 77, -108, 157, 463, -369, -369,
	-369, -369, -369, 87, 87, -369, -369, 86, -201, -88,
	-87, -83, 568, 594, -185, -228, -369, -259, 236, 19,
	19, -228, -228, -173, -200, -127, -185, -214, 54, 76,
	118, 92, 92, 92, 12, -188, 215, -206, -225, -151,
	360, -201, -369, -225, 87, 25, 87, 598, 133, 87,
	-189, -107, -368, 265, -266, 92, 92, -11, 86, 147,
	-225, -166, -369, 461, 73, 464, -127, -88, -86, 141,
	-84, -127, 566, 546, 86, -369, -369, -369, 76, 118,
	-233, -259, 87, -369, -368, -206, 87, -210, -11, 85,
	-3, 265, -78, 463, -337, -315, -260, 92, 94, 87,
	62, 462, 465, -342, -86, 526, 501, 567, 526, 501,
	-259, 236, -267, -152, -150, -259, 513, -355, -356, 76,
	-364, -361, 115, 139, 101, -362, 124, 125, -78, -127,
	85, -369, -79, 280, 553, -348, 62, -369, 138, -369,
	86, 22, -279, -59, 523, -356, 76, 13, 12, 115,
	92, 87, -225, 241, -339, 463, -86, -150, 520, -292,
	-137, -354, 249, 244, 247, 32, -354, -4, 597, 87,
	282, 464, -58, 26, -151, 243, 31, 115, 94, -4,
	465, 523, -137, -154, -153, -155, 557, 115, 31, -153,
	-155, 76, -137, 76, 473, 557,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 758,
	758, 758, 0, 758, 0, 0, 758, -2, -2, 758,
	1275, 0, 758, 0, 0, -2, 690, 692, 0, 694,
	-2, 0, 0, 703, 1769, 1769, 753, 0, 0, 0,
	0, 0, 758, 758, 758, 758, 1135, 48, 758, 0,
	83, 84, 709, 710, 711, 63, 0, 1767, 1, 3,
	69, 73, 0, 0, 0, 56, 1144, 0, 76, 0,
	0, 762, 0, 760, 0, 1258, 758, 758, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 518, 458, 501, 456, 487, -2, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 351, 351, 0, 0, -2, 449, 449, 449, 0,
	0, 0, 484, 1260, 404, 351, 351, 0, 351, 351,
	351, 351, 0, 0, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 1161,
	151, 1276, 1273, 1274, 38, 39, 40, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 0, 1252, 0, 618,
	859, 0, 679, 679, 0, 679, 679, 679, 679, 0,
	0, 0, 630, 0, 0, 0, 0, 676, 0, 646,
	647, 0, 676, 0, 682, 0, 657, 679, 679, 660,
	1770, 0, 1770, 1770, 1243, 0, 673, 671, 685, 686,
	689, 693, 0, 698, 701, 1269, 1270, 0, 716, 47,
	1512, 708, 721, 722, 0, 754, 755, 43, 986, 0,
	881, 886, 897, 910, 911, 912, 913, 914, 916, 917,
	0, 0, 0, 0, 922, 923, 0, 0, 0, 0,
	0, 967, 0, 0, 0, 0, 0, 1116, 0, 1079,
	1079, 1003, 1079, 1081, 1081, 0, 0, 0, 1766, 1552,
	1560, 1561, 1583, 1666, 1712, 1556, 1557, 1538, 1550, 1553,
	1541, 1542, 1544, 1546, 1551, 1558, 1564, 1543, 1563, 1562,
	0, 1539, 1540, 1545, 1555, 1559, 1547, 1548, 1549, 1554,
	1565, 0, 0, 0, 1125, 0, 0, 0, 0, 0,
	0, 257, 258, 985, 1232, 1081, 1081, 1081, 1081, 1081,
	942, 943, 944, 945, 946, 965, 966, -2, -2, 204,
	205, 206, 207, 208, 209, 210, 0, 200, 0, 0,
	262, 263, 259, 260, 261, 969, 970, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 1769, 0,
	731, 0, 0, 0, 0, 0, 1144, 0, 1136, 1135,
	61, 0, 758, -2, 0, 0, 0, 0, 45, 0,
	50, 818, 75, 74, 1183, 0, 0, 0, 57, 1145,
	65, 67, 1146, 0, 763, 764, 0, 794, 798, 0,
	759, 0, 0, 1259, 1258, 1258, 100, 0, 1708, 1236,
	-2, -2, 0, 0, 1271, 1272, 1245, -2, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, -2, 0, 0,
	161, 162, 0, 41, 377, 0, 157, 0, 371, 321,
	1161, 0, 0, 0, 0, 0, 758, 0, 1253, 142,
	143, 149, 150, 351, 351, 498, 0, 0, 151, 151,
	465, 466, 467, 0, 0, -2, 375, 0, 450, 0,
	0, 365, 365, 369, 367, 368, 0, 0, 0, 0,
	0, 0, 478, 0, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 579, 0, 352, 0, 496, 497,
	405, 0, 0, 0, 0, 476, 477, 0, 0, 1261,
	1262, 0, 0, 351, 351, 0, 0, 0, 0, 351,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 1174, 0,
	0, 0, -2, 0, 610, 0, 0, 0, 1254, 1254,
	0, 617, 0, 619, 620, 0, 0, 621, 0, 676,
	676, 674, 675, 623, 624, 625, 626, 679, 0, 0,
	360, 361, 362, 676, 679, 0, 679, 679, 679, 679,
	676, 676, 676, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 682, 679, 0, 653, 0, 654,
	655, 658, 659, 661, 1771, 1772, 1292, 1770, 1770, 665,
	669, 1244, 691, 699, 702, 719, 717, 718, 720, 712,
	713, 714, 715, 0, 733, 734, 739, 0, 0, 0,
	0, 745, 746, 747, 0, 0, 750, 751, 752, 0,
	0, 0, 0, 0, 879, 0, 0, 975, 976, 977,
	978, 979, 980, 981, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 918, 919, 920, 921, 924, 0,
	0, 0, 929, 930, 0, 0, 0, 0, 0, 768,
	0, 1117, 0, 1001, 0, 1002, 1004, 1005, 0, 1006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 778,
	0, 0, 778, 778, 0, 0, 193, 194, 195, 196,
	197, 211, 212, 213, 214, 215, 264, 1125, 0, 985,
	0, 0, 0, 44, 723, 724, 0, 842, 1264, 0,
	0, 774, 0, 55, 64, 66, 1144, 59, 1144, 0,
	780, 0, 0, -2, -2, 781, 787, 788, 789, 790,
	791, 52, 1768, 53, 0, 72, 0, 46, 0, 0,
	0, 0, 333, 1186, 0, 0, 1137, 1138, 1141, 0,
	795, 1594, 799, 0, 801, 802, 0, 761, 0, 98,
	0, 858, 0, 0, 0, 1708, 1242, 0, 102, 103,
	0, 0, 0, 339, 1247, 1248, 1249, -2, 358, 0,
	339, 328, 272, 273, 274, 321, 276, 321, 321, 321,
	321, 333, 333, 333, 333, 304, 305, 306, 307, 308,
	0, 0, 291, 321, 321, 321, 321, 311, 312, 313,
	314, 315, 316, 317, 318, 277, 278, 279, 280, 281,
	282, 283, 284, 285, 323, 323, 323, 325, 325, 0,
	42, 0, 343, 0, 1141, 0, 1174, 1256, 1266, 0,
	0, 0, 1256, 120, 0, 0, 499, 529, 459, 488,
	500, 0, 462, 463, -2, 0, 0, 449, 0, 451,
	0, 359, 0, -2, 0, 369, 0, 365, 369, 366,
	369, 357, 370, 480, 481, 482, 0, 559, 828, 0,
	0, 0, 0, 0, 565, 566, 567, 0, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 489, 490,
	491, 492, 493, 494, 495, 0, 0, 451, 0, 485,
	0, 406, 407, 0, 0, 410, 411, 412, 413, 0,
	0, 416, 417, 418, 845, 846, 419, 443, 444, 445,
	420, 421, 422, 423, 424, 425, 426, 437, 438, 439,
	440, 441, 442, 427, 428, 429, 430, 431, 434, 0,
	135, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1254, 0, 0, 0, 0, 777, 860,
	1277, 1278, 680, 681, 0, 363, 364, 679, 679, 627,
	666, 0, 679, 631, 667, 632, 634, 633, 635, 648,
	649, 679, 638, 677, 678, 639, 640, 641, 642, 643,
	644, 645, 662, 650, 651, 652, 683, 0, 687, 688,
	663, 664, 0, 700, 704, 705, 706, 707, 0, 0,
	736, 94, 741, 742, 743, 744, 756, 749, 987, 876,
	877, 878, 0, 880, 883, 0, 971, 973, 885, 887,
	982, 983, 984, 0, 0, 0, 0, 0, 891, 895,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 915, 1095, 1096, 1097, 932, 265, 266, 0,
	933, 0, 792, 0, 0, 0, 931, 0, 0, 0,
	0, 769, 770, 1123, 1120, 0, 0, 1080, 1082, 0,
	0, 0, 0, 0, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1078, 1098, 0, 0, 0, 0,
	0, 1116, 0, 934, 935, 936, 0, 0, 0, 1265,
	0, 130, 131, 0, 0, 0, 0, 0, 1052, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 779, 1126, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 1230, 0, 0, 726, 727,
	729, 0, 862, 0, 843, 0, 0, 732, 0, 773,
	0, 776, 58, 60, 785, 786, 0, 803, 782, 54,
	49, 0, 0, 820, 1184, 333, 1206, 0, 337, 338,
	1147, 1148, 0, 1140, 1142, 1143, 77, 800, 796, 0,
	874, 0, 0, 857, 0, 806, 808, 809, 810, 840,
	0, 813, 0, 0, 0, 0, 0, 96, 859, 1237,
	101, 0, 0, 106, 107, 1238, 1239, 1240, 1241, 0,
	518, -2, 401, 163, 165, 166, 167, 158, -2, 331,
	329, 330, 275, 333, 333, 298, 299, 300, 301, 302,
	303, 0, 0, 292, 293, 294, 295, 286, 0, 287,
	288, 289, 0, 290, 376, 0, 1149, 344, 345, 347,
	351, 0, 0, 0, 372, 373, 0, 1165, 0, 0,
	0, 1267, 1266, 1266, 1266, 0, 153, 154, 155, 156,
	554, 0, 0, 530, 552, 553, 151, 0, 0, 159,
	453, 452, 0, 586, 0, 374, 0, 0, 369, 369,
	354, 355, 483, 0, 0, 561, 562, 563, 564, 0,
	0, 0, 451, 453, 339, 0, 408, 409, 414, 415,
	432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 513, 514, 515, 516, 517, 1162, 1163, 1164,
	0, 0, 611, 0, 0, 393, 92, 1255, 616, 676,
	637, 668, 676, 629, 636, 656, 696, 740, 0, 0,
	0, 0, 748, 0, 0, 884, 972, 974, 888, 0,
	892, 896, 0, 0, 0, 0, 0, 0, 0, 968,
	992, 993, 0, 0, 1135, 0, 1121, 0, 0, 1000,
	1083, 1084, 0, 0, 0, 0, 0, 1011, 1012, 1013,
	1014, 1015, 0, 1017, 0, 0, 0, 1021, 1022, 0,
	0, 1023, 0, 0, 0, 0, 0, 0, 0, 0,
	1032, 1033, 1034, 1035, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1046, 1047, 0, 960, 0, 0,
	0, 988, 0, 0, 778, 0, 1085, 1086, 1087, 1088,
	1089, 1126, 1231, 725, 728, 730, 816, 863, 864, 0,
	0, 0, 0, 844, 1263, 771, 772, 775, -2, 0,
	0, 1128, 0, 0, 803, 874, 804, 0, 783, 51,
	819, 0, 1188, 1187, 1200, 1213, 334, 335, 336, 1139,
	0, 1144, 0, 1224, 0, 0, 1216, 0, 0, 0,
	0, 0, 0, 0, 0, 847, 0, 0, 850, 0,
	0, 0, 0, 841, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 90, 91, 0, 0, 0, 104, 105,
	0, 0, 111, 340, 341, 144, 151, 403, 164, 383,
	0, 0, 271, 332, 296, 297, 0, 319, 0, 0,
	0, 396, 116, 1153, 1152, 351, 351, 346, 0, 349,
	0, 1268, 322, 0, 134, 0, 0, 0, 0, 0,
	140, 524, 0, 0, 531, 0, 0, 0, 457, 0,
	468, 469, 0, 558, -2, 607, 343, 0, 353, 356,
	829, 0, 0, 470, 0, 453, 474, 475, 486, 435,
	436, 433, 0, 0, 1175, 1176, 1181, 1179, 1180, 121,
	506, 508, 507, 511, 0, 0, 504, 0, 393, 1149,
	0, 615, 394, 395, 679, 679, 735, 95, 0, 738,
	0, 0, 0, 0, 889, 893, 793, 0, 0, 321,
	321, 1103, 321, 325, 1106, 321, 1108, 321, 1111, 321,
	1114, 1115, 0, 0, 0, 0, 1118, 999, 1124, 0,
	0, 0, 0, 1010, 0, 0, 0, 0, 0, 0,
	132, 133, 1052, 0, 0, 1054, 1056, 1057, 1027, 1053,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 954, 959, 0, 961, 962, 0, 0,
	1049, 1050, 1051, 989, 990, 0, 1127, 865, 870, 870,
	870, 0, 0, 0, 1250, 1251, 1129, 1130, 874, 1131,
	805, 784, 821, 1206, 0, 1199, 0, -2, 1208, 0,
	0, 0, 1214, 797, 78, 875, 81, 0, 1224, 1233,
	0, 1215, 1226, 1228, 0, 0, 0, 1220, 0, 874,
	807, 836, 838, 0, 833, 848, 849, 851, 0, 853,
	0, 855, 856, 818, 812, 814, 0, 0, 0, 98,
	0, 874, 874, 97, 0, 861, 108, 109, 110, 402,
	168, 173, 0, 0, 0, 178, 0, 180, 0, 384,
	0, 268, 270, 0, 0, 171, 333, 0, 333, 0,
	326, 0, 385, 397, 0, 1150, 1151, 0, 0, 348,
	350, 0, 1257, 136, 0, 0, 0, 527, 0, 555,
	0, 0, 0, 0, 0, 0, 160, 454, 587, 588,
	589, 590, 591, 592, 593, 594, 0, 351, 0, 0,
	0, 351, 351, 351, 599, 342, 0, 0, 583, 580,
	471, 0, 198, 199, 201, 0, 0, 473, 818, 1166,
	1167, 1168, 0, 1178, 1182, 124, 0, 0, 0, 0,
	612, 613, 614, 93, 622, 628, 737, 757, 882, 890,
	894, 0, 926, 1101, 333, 1104, 1105, 1107, 1109, 1110,
	1112, 1113, 927, 928, 0, 995, 0, 997, 1144, 0,
	1122, 0, 0, 1009, 0, 0, 0, 1018, 1019, 1020,
	0, 0, 1026, 0, 1028, 0, 1031, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 0, 954, 1135,
	0, 1048, 963, 964, 991, 0, 0, 0, 0, 842,
	-2, 62, 1131, 1133, 0, 1193, 1191, 1191, 1201, 1202,
	0, 0, 1209, 0, 0, 0, 0, 82, 0, 0,
	0, 1229, 0, 0, 0, 0, 99, 1135, 830, 837,
	0, 0, 831, 0, 832, 852, 854, 811, -2, 815,
	0, 874, 874, 88, 89, 0, 174, 0, 176, 191,
	192, 0, 179, 181, 182, 267, 269, 0, 0, 309,
	320, 310, 0, 0, 398, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 818, 137, 138, 139, 519, 0, 529, 0,
	0, 0, 522, 0, 460, 0, 0, 0, 351, 351,
	351, 0, 0, 0, 0, 560, 0, 568, 0, 0,
	0, 202, 203, 0, 1177, 505, 0, 122, 123, 0,
	0, 510, 1090, 1102, 0, 0, 0, 1119, 0, 0,
	0, 0, 1016, 1024, 0, 1055, 0, 958, 1135, 950,
	0, 0, 871, 0, 0, 0, 0, 862, 1133, 80,
	0, 0, 1196, 0, 1189, 1192, 1190, 1203, 0, 0,
	1210, 0, 1212, 0, 1234, 1235, 1227, 0, 1219, 1222,
	1218, 1221, 1144, 834, 0, 839, 0, 1135, 87, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 327, 0, 0, 0,
	520, 0, 532, 523, 0, 597, 0, 601, 0, 0,
	0, 604, 605, 606, 378, 584, 581, 582, 472, 0,
	125, 126, 0, 0, 0, 0, 0, 0, 994, 996,
	998, 1007, 1008, 1099, 1100, 1025, 1029, 0, 950, 957,
	951, 0, 937, 938, 955, 0, 867, 824, 825, 872,
	873, 0, 0, 817, 79, 1134, 1132, 1185, 0, 1194,
	1195, 1204, 1205, 1211, 0, 1217, 0, 85, 0, 0,
	0, 1144, 175, 0, 185, 0, 528, 0, 531, 521,
	595, 596, 0, 608, 600, 602, 603, 1169, 0, 0,
	0, 512, 925, 0, 0, 0, 1052, 956, 952, 0,
	947, 0, 1469, 1714, 0, 866, 868, 869, 1197, 1198,
	1225, 1223, 835, 842, 0, 86, 379, 383, 1169, 0,
	0, 0, 502, 1171, 127, 128, 446, 447, 448, 121,
	1091, 0, 1094, 0, 0, 948, 949, 939, 940, 941,
	826, 827, 533, 0, 535, 0, -2, 380, 381, 0,
	169, 186, 187, 0, 0, 190, 183, 184, 117, 0,
	0, 609, 0, 1172, 1173, 124, 1092, 1030, 0, 534,
	0, 0, 339, 0, 544, 382, 0, 0, 0, 188,
	189, 556, 0, 0, 509, 0, 953, 536, 537, 545,
	0, 386, 388, 389, 0, 0, 387, 525, 0, 556,
	1170, 0, 0, 546, 542, 390, 391, 392, 557, 526,
	1093, 0, 538, 539, 540, 0, 549, 550, 0, 541,
	0, 0, 551, 0, 547, 548,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 599,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:540
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:545
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:546
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:550
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:586
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:596
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:600
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:605
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:609
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:615
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:621
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:627
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:631
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:640
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:646
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:650
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:656
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:662
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:666
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:699
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:730
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:815
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:835
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:847
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:859
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:863
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:869
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:875
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:879
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:883
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:887
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:892
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:893
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:897
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:901
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:907
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:911
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:917
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:921
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:930
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:942
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:952
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:956
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:962
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:966
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:970
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:976
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:980
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:984
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:988
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:994
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:998
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1010
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1017
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1026
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1030
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1037
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1041
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1046
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1056
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1061
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1066
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1072
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1077
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1092
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1098
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1102
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1114
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1121
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1128
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1133
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1138
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1143
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1150
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1157
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1168
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1179
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1185
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1189
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1193
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1203
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1207
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1213
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1217
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1223
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1227
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1234
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1238
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1244
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1254
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1259
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1264
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1268
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1273
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1281
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1292
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1301
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1310
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1327
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1339
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1344
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1349
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1354
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1359
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1364
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1373
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1380
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1384
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1398
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1404
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1410
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1415
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1422
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1429
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1437
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1441
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1445
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1456
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1463
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1467
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1473
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1477
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1481
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1485
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1489
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1493
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1497
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1502
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1506
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1510
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1514
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1518
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1525
		{
			yyVAL.str = Armscii8Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.str = ASCIIStr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1533
		{
			yyVAL.str = Big5Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			yyVAL.str = UBinaryStr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1541
		{
			yyVAL.str = Cp1250Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.str = Cp1251Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1549
		{
			yyVAL.str = Cp1256Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.str = Cp1257Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.str = Cp850Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1561
		{
			yyVAL.str = Cp852Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1565
		{
			yyVAL.str = Cp866Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.str = Cp932Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1573
		{
			yyVAL.str = Dec8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1577
		{
			yyVAL.str = EucjpmsStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1581
		{
			yyVAL.str = EuckrStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.str = Gb18030Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.str = Gb2312Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.str = GbkStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1597
		{
			yyVAL.str = Geostd8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.str = GreekStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = HebrewStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = Hp8Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = Keybcs2Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = Koi8rStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = Koi8uStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = Latin1Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = Latin2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.str = Latin5Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = Latin7Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = MacceStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = MacromanStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = SjisStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = Swe7Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = Tis620Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = Ucs2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = UjisStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = Utf16Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = Utf16leStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = Utf32Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.str = Utf8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.str = Utf8mb4Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1727
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1734
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1738
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1742
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1746
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1752
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1763
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1870
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1882
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1968
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1977
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1982
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1986
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1994
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1998
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2004
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2012
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2016
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2020
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2025
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2029
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = ""
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2055
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = ""
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2076
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2085
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2091
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2101
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2105
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2110
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2114
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2120
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2130
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2134
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2138
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2142
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2146
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.str = yyDollar[2].str
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2185
		{
			yyVAL.str = "key"
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.str = yyDollar[1].str
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2204
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2208
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2214
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2224
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2230
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2234
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2240
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2244
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2250
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2256
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2260
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2264
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2268
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2273
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2277
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2283
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2289
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2295
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2301
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2305
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2309
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2313
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2317
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2322
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2330
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2335
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2339
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2343
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2348
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2352
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2358
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2366
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2372
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2376
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2382
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2386
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2390
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2394
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2398
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2402
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2406
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2410
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2414
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2418
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2422
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2426
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2430
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2434
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2438
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2442
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2446
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2450
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2454
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2458
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2462
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2466
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2470
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2474
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2478
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2482
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2486
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2490
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = ""
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2526
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2530
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2541
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2545
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2550
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2554
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2559
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2563
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2567
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2571
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2575
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2579
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2585
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2589
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2593
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2599
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2603
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2607
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2611
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2615
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2619
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2623
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2627
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2631
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2635
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2639
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2643
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2647
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2651
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2655
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2659
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2663
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2667
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2671
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2675
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2679
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2683
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2687
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2693
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2697
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2703
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2707
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2711
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2715
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2719
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2723
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2727
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2731
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2735
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2741
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2748
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2755
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2762
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2772
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2779
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2786
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2798
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2808
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2812
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2816
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2829
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2839
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2843
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2854
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2861
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2868
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2875
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2882
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2893
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2902
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2910
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2919
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2926
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2938
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2947
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2962
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2967
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2971
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2976
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2980
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2986
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2992
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2998
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3002
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3008
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3012
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3018
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3024
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3030
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3036
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3042
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3046
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3050
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3054
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3060
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3066
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3072
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3076
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3080
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3086
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3090
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3095
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3099
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3104
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3108
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3114
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3118
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3122
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3126
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3130
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3134
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3138
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3142
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3146
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3150
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3154
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3158
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3162
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3166
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3170
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3174
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3178
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3182
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3186
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3190
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3194
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3198
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3203
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3207
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3211
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3218
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3228
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3233
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3237
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3242
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3247
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3252
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3257
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3262
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3268
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3274
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3281
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3288
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3295
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3303
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3307
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3313
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3319
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3325
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3331
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3337
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3343
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3349
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3355
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3361
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3365
		{
			yyVAL.str = ""
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3371
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3377
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3381
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 613:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3387
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3391
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3400
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3404
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3414
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3419
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3433
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3437
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3441
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3445
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3449
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3453
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3457
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3461
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3465
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3469
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3473
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3477
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3481
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3485
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3489
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3493
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3497
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3501
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3505
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3509
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3513
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3517
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3521
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3525
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3529
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3533
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3537
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3541
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3545
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3549
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3553
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3557
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3561
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3565
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3569
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3596
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3600
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3604
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3608
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3612
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3616
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3620
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3624
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3630
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3634
		{
			yyVAL.str = "extended "
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3640
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3644
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3650
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3654
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3660
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3664
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3668
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3678
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3682
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3688
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3692
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3698
		{
			yyVAL.empty = struct{}{}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.empty = struct{}{}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3706
		{
			yyVAL.empty = struct{}{}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3712
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3716
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3722
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3726
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3736
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3740
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3752
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3756
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3761
		{
			yyVAL.empty = struct{}{}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3763
		{
			yyVAL.empty = struct{}{}
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3766
		{
			yyVAL.empty = struct{}{}
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			yyVAL.empty = struct{}{}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3784
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3788
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3792
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3796
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3800
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3804
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3810
		{
			yyVAL.str = yyDollar[1].str
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3814
		{
			yyVAL.str = yyDollar[1].str
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3818
		{
			yyVAL.str = yyDollar[1].str
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3855
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3865
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3869
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3881
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3885
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3891
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3897
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3901
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3905
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3909
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3931
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3953
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3957
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3963
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3967
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3971
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3975
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3979
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3983
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3987
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3991
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3995
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3999
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4012
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4016
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4020
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4025
		{
			yyVAL.str = ""
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4029
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4034
		{
			setAllowComments(yylex, true)
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4044
		{
			yyVAL.strs = nil
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4048
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4054
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4058
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4062
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4067
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			yyVAL.str = SQLCacheStr
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4080
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4084
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4088
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4094
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4098
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4115
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4119
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4138
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4143
		{
			yyVAL.strs = nil
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4147
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4151
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4155
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4159
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.str = SQLCacheStr
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			yyVAL.str = DistinctStr
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4177
		{
			yyVAL.str = DistinctStr
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4181
		{
			yyVAL.str = StraightJoinHint
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4195
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4199
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4205
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4209
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4213
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4217
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4222
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4230
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4242
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4246
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4252
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4258
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4262
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4272
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4276
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4280
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4284
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4290
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4294
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4300
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4304
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4313
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4319
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4329
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4333
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4339
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4343
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4347
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4351
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4357
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4361
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4374
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4378
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4382
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4386
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4392
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4394
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4398
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4400
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4404
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4406
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4409
		{
			yyVAL.empty = struct{}{}
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4411
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4414
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4418
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4422
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4435
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4439
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4443
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4449
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4455
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4459
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4463
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4467
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4473
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4477
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4487
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4491
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4501
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4507
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4516
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4522
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4526
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4532
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4536
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4540
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4544
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4549
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4553
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4557
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4561
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4567
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4571
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4578
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4582
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4586
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4590
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4594
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4598
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4602
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4609
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4613
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4617
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4651
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4655
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4659
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4663
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4677
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4681
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4685
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4689
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4693
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4697
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4701
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4705
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4709
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4713
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4717
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4721
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4727
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4731
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4735
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4739
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4743
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4747
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4751
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4755
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4759
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4763
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4767
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4771
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4775
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4779
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4783
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4791
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4795
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4799
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4807
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4811
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4819
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4823
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4829
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4833
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4837
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:4843
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:4847
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:4853
		{
			yyLOCAL = CurrentRowType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:4857
		{
			yyLOCAL = UnboundedPrecedingType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:4861
		{
			yyLOCAL = UnboundedFollowingType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4867
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4871
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4875
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4879
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:4883
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:4889
		{
			yyLOCAL = &FramePoint{Type: yyDollar[1].framePointTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:4893
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:4897
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4906
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4912
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:4916
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion(), IsBetween: true}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4925
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:4931
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent.String(), PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:4936
		{
			yyLOCAL = &WindowSpecification{PartitionClause: yyDollar[1].exprsUnion(), OrderClause: yyDollar[2].orderByUnion(), FrameClause: yyDollar[3].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:4942
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:4946
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:4951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:4958
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:4964
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:4968
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:4974
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:4978
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4984
		{
			yyVAL.str = ""
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4988
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4994
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4998
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5005
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5009
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5013
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5017
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5023
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5027
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5031
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5035
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5039
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5043
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5047
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5053
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5057
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5061
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5068
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5074
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5078
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5161
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5171
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5180
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5184
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5192
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5196
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5200
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5204
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5208
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5212
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5216
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5220
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5224
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5228
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5232
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5236
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5240
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5244
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5256
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5260
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			val := convertStringToInt(yyDollar[3].str)
			yyLOCAL = &NtileExpr{IntValue: &val, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &NtileExpr{VarValue: yyDollar[3].colIdent, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &NtileExpr{IsNull: true, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5367
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5373
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5377
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5383
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5387
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5395
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5399
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5403
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5407
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5411
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5415
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5419
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5423
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5427
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5431
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5435
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5441
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5445
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5449
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5453
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5457
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5461
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5465
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5469
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5473
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5491
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5528
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5532
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5536
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5540
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5544
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5554
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5558
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5568
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5572
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5578
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5582
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5586
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5590
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5594
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5600
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5604
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5608
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5612
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5616
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5620
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5624
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5628
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5632
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5636
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5651
		{
			yyVAL.str = string("")
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5655
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5661
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5665
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5671
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5686
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5690
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5694
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5700
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5723
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5741
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5747
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5753
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5757
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5763
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5768
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5772
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5776
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5785
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5791
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5795
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5799
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5808
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5812
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5816
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5820
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5827
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5831
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5835
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5839
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5845
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5849
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5853
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5858
		{
			yyVAL.str = ""
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5862
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5866
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5870
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5875
		{
			yyVAL.str = ""
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5879
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5885
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5889
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5894
		{
			yyVAL.str = ""
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5898
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5903
		{
			yyVAL.str = "cascaded"
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5907
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5911
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5920
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5926
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5932
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5938
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5947
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5951
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5956
		{
			yyVAL.str = ""
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5960
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5966
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5970
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5976
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5980
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5984
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5989
		{
			yyVAL.str = ""
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5993
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5997
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6002
		{
			yyVAL.str = ""
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6006
		{
			yyVAL.str = " header"
		}
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6011
		{
			yyVAL.str = ""
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6015
		{
			yyVAL.str = " manifest on"
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6019
		{
			yyVAL.str = " manifest off"
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6024
		{
			yyVAL.str = ""
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6028
		{
			yyVAL.str = " overwrite on"
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6032
		{
			yyVAL.str = " overwrite off"
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6038
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6043
		{
			yyVAL.str = ""
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6047
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6053
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6057
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6063
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6072
		{
			yyVAL.str = ""
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6076
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6082
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6086
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6092
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6096
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6100
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6105
		{
			yyVAL.str = ""
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6109
		{
			yyVAL.str = " optionally"
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6122
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6126
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6130
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6134
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6138
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6144
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6148
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6152
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6156
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6165
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6171
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6181
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6185
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6191
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6195
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6210
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6214
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6220
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6226
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6230
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6236
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6240
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6244
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6248
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6252
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6260
		{
			yyVAL.str = "charset"
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6287
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6289
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6292
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6297
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6299
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6302
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6304
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6307
		{
			yyVAL.empty = struct{}{}
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6309
		{
			yyVAL.empty = struct{}{}
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6311
		{
			yyVAL.empty = struct{}{}
		}
	case 1263:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6315
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6324
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6331
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6335
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6341
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6345
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6352
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6358
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6362
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6368
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6372
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6379
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6892
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6901
		{
			decNesting(yylex)
		}
	case 1769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6906
		{
			skipToEnd(yylex)
		}
	case 1770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6911
		{
			skipToEnd(yylex)
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6915
		{
			skipToEnd(yylex)
		}
	case 1772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6919
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
