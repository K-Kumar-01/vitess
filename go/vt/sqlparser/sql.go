// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const JSON_PRETTY = 57441
const JSON_STORAGE_SIZE = 57442
const JSON_STORAGE_FREE = 57443
const JSON_CONTAINS = 57444
const JSON_CONTAINS_PATH = 57445
const JSON_EXTRACT = 57446
const JSON_KEYS = 57447
const JSON_OVERLAPS = 57448
const JSON_SEARCH = 57449
const JSON_VALUE = 57450
const EXTRACT = 57451
const NULL = 57452
const TRUE = 57453
const FALSE = 57454
const OFF = 57455
const DISCARD = 57456
const IMPORT = 57457
const ENABLE = 57458
const DISABLE = 57459
const TABLESPACE = 57460
const VIRTUAL = 57461
const STORED = 57462
const BOTH = 57463
const LEADING = 57464
const TRAILING = 57465
const EMPTY_FROM_CLAUSE = 57466
const LOWER_THAN_CHARSET = 57467
const CHARSET = 57468
const UNIQUE = 57469
const KEY = 57470
const EXPRESSION_PREC_SETTER = 57471
const OR = 57472
const XOR = 57473
const AND = 57474
const NOT = 57475
const BETWEEN = 57476
const CASE = 57477
const WHEN = 57478
const THEN = 57479
const ELSE = 57480
const END = 57481
const LE = 57482
const GE = 57483
const NE = 57484
const NULL_SAFE_EQUAL = 57485
const IS = 57486
const LIKE = 57487
const REGEXP = 57488
const IN = 57489
const SHIFT_LEFT = 57490
const SHIFT_RIGHT = 57491
const DIV = 57492
const MOD = 57493
const UNARY = 57494
const COLLATE = 57495
const BINARY = 57496
const UNDERSCORE_ARMSCII8 = 57497
const UNDERSCORE_ASCII = 57498
const UNDERSCORE_BIG5 = 57499
const UNDERSCORE_BINARY = 57500
const UNDERSCORE_CP1250 = 57501
const UNDERSCORE_CP1251 = 57502
const UNDERSCORE_CP1256 = 57503
const UNDERSCORE_CP1257 = 57504
const UNDERSCORE_CP850 = 57505
const UNDERSCORE_CP852 = 57506
const UNDERSCORE_CP866 = 57507
const UNDERSCORE_CP932 = 57508
const UNDERSCORE_DEC8 = 57509
const UNDERSCORE_EUCJPMS = 57510
const UNDERSCORE_EUCKR = 57511
const UNDERSCORE_GB18030 = 57512
const UNDERSCORE_GB2312 = 57513
const UNDERSCORE_GBK = 57514
const UNDERSCORE_GEOSTD8 = 57515
const UNDERSCORE_GREEK = 57516
const UNDERSCORE_HEBREW = 57517
const UNDERSCORE_HP8 = 57518
const UNDERSCORE_KEYBCS2 = 57519
const UNDERSCORE_KOI8R = 57520
const UNDERSCORE_KOI8U = 57521
const UNDERSCORE_LATIN1 = 57522
const UNDERSCORE_LATIN2 = 57523
const UNDERSCORE_LATIN5 = 57524
const UNDERSCORE_LATIN7 = 57525
const UNDERSCORE_MACCE = 57526
const UNDERSCORE_MACROMAN = 57527
const UNDERSCORE_SJIS = 57528
const UNDERSCORE_SWE7 = 57529
const UNDERSCORE_TIS620 = 57530
const UNDERSCORE_UCS2 = 57531
const UNDERSCORE_UJIS = 57532
const UNDERSCORE_UTF16 = 57533
const UNDERSCORE_UTF16LE = 57534
const UNDERSCORE_UTF32 = 57535
const UNDERSCORE_UTF8 = 57536
const UNDERSCORE_UTF8MB4 = 57537
const INTERVAL = 57538
const JSON_EXTRACT_OP = 57539
const JSON_UNQUOTE_EXTRACT_OP = 57540
const CREATE = 57541
const ALTER = 57542
const DROP = 57543
const RENAME = 57544
const ANALYZE = 57545
const ADD = 57546
const FLUSH = 57547
const CHANGE = 57548
const MODIFY = 57549
const DEALLOCATE = 57550
const REVERT = 57551
const SCHEMA = 57552
const TABLE = 57553
const INDEX = 57554
const VIEW = 57555
const TO = 57556
const IGNORE = 57557
const IF = 57558
const PRIMARY = 57559
const COLUMN = 57560
const SPATIAL = 57561
const FULLTEXT = 57562
const KEY_BLOCK_SIZE = 57563
const CHECK = 57564
const INDEXES = 57565
const ACTION = 57566
const CASCADE = 57567
const CONSTRAINT = 57568
const FOREIGN = 57569
const NO = 57570
const REFERENCES = 57571
const RESTRICT = 57572
const SHOW = 57573
const DESCRIBE = 57574
const EXPLAIN = 57575
const DATE = 57576
const ESCAPE = 57577
const REPAIR = 57578
const OPTIMIZE = 57579
const TRUNCATE = 57580
const COALESCE = 57581
const EXCHANGE = 57582
const REBUILD = 57583
const PARTITIONING = 57584
const REMOVE = 57585
const PREPARE = 57586
const EXECUTE = 57587
const MAXVALUE = 57588
const PARTITION = 57589
const REORGANIZE = 57590
const LESS = 57591
const THAN = 57592
const PROCEDURE = 57593
const TRIGGER = 57594
const VINDEX = 57595
const VINDEXES = 57596
const DIRECTORY = 57597
const NAME = 57598
const UPGRADE = 57599
const STATUS = 57600
const VARIABLES = 57601
const WARNINGS = 57602
const CASCADED = 57603
const DEFINER = 57604
const OPTION = 57605
const SQL = 57606
const UNDEFINED = 57607
const SEQUENCE = 57608
const MERGE = 57609
const TEMPORARY = 57610
const TEMPTABLE = 57611
const INVOKER = 57612
const SECURITY = 57613
const FIRST = 57614
const AFTER = 57615
const LAST = 57616
const VITESS_MIGRATION = 57617
const CANCEL = 57618
const RETRY = 57619
const COMPLETE = 57620
const CLEANUP = 57621
const BEGIN = 57622
const START = 57623
const TRANSACTION = 57624
const COMMIT = 57625
const ROLLBACK = 57626
const SAVEPOINT = 57627
const RELEASE = 57628
const WORK = 57629
const BIT = 57630
const TINYINT = 57631
const SMALLINT = 57632
const MEDIUMINT = 57633
const INT = 57634
const INTEGER = 57635
const BIGINT = 57636
const INTNUM = 57637
const REAL = 57638
const DOUBLE = 57639
const FLOAT_TYPE = 57640
const DECIMAL_TYPE = 57641
const NUMERIC = 57642
const TIME = 57643
const TIMESTAMP = 57644
const DATETIME = 57645
const YEAR = 57646
const CHAR = 57647
const VARCHAR = 57648
const BOOL = 57649
const CHARACTER = 57650
const VARBINARY = 57651
const NCHAR = 57652
const TEXT = 57653
const TINYTEXT = 57654
const MEDIUMTEXT = 57655
const LONGTEXT = 57656
const BLOB = 57657
const TINYBLOB = 57658
const MEDIUMBLOB = 57659
const LONGBLOB = 57660
const JSON = 57661
const ENUM = 57662
const GEOMETRY = 57663
const POINT = 57664
const LINESTRING = 57665
const POLYGON = 57666
const GEOMETRYCOLLECTION = 57667
const MULTIPOINT = 57668
const MULTILINESTRING = 57669
const MULTIPOLYGON = 57670
const ASCII = 57671
const UNICODE = 57672
const NULLX = 57673
const AUTO_INCREMENT = 57674
const APPROXNUM = 57675
const SIGNED = 57676
const UNSIGNED = 57677
const ZEROFILL = 57678
const CODE = 57679
const COLLATION = 57680
const COLUMNS = 57681
const DATABASES = 57682
const ENGINES = 57683
const EVENT = 57684
const EXTENDED = 57685
const FIELDS = 57686
const FULL = 57687
const FUNCTION = 57688
const GTID_EXECUTED = 57689
const KEYSPACES = 57690
const OPEN = 57691
const PLUGINS = 57692
const PRIVILEGES = 57693
const PROCESSLIST = 57694
const SCHEMAS = 57695
const TABLES = 57696
const TRIGGERS = 57697
const USER = 57698
const VGTID_EXECUTED = 57699
const VITESS_KEYSPACES = 57700
const VITESS_METADATA = 57701
const VITESS_MIGRATIONS = 57702
const VITESS_REPLICATION_STATUS = 57703
const VITESS_SHARDS = 57704
const VITESS_TABLETS = 57705
const VSCHEMA = 57706
const NAMES = 57707
const GLOBAL = 57708
const SESSION = 57709
const ISOLATION = 57710
const LEVEL = 57711
const READ = 57712
const WRITE = 57713
const ONLY = 57714
const REPEATABLE = 57715
const COMMITTED = 57716
const UNCOMMITTED = 57717
const SERIALIZABLE = 57718
const CURRENT_TIMESTAMP = 57719
const DATABASE = 57720
const CURRENT_DATE = 57721
const CURRENT_TIME = 57722
const LOCALTIME = 57723
const LOCALTIMESTAMP = 57724
const CURRENT_USER = 57725
const UTC_DATE = 57726
const UTC_TIME = 57727
const UTC_TIMESTAMP = 57728
const DAY = 57729
const DAY_HOUR = 57730
const DAY_MICROSECOND = 57731
const DAY_MINUTE = 57732
const DAY_SECOND = 57733
const HOUR = 57734
const HOUR_MICROSECOND = 57735
const HOUR_MINUTE = 57736
const HOUR_SECOND = 57737
const MICROSECOND = 57738
const MINUTE = 57739
const MINUTE_MICROSECOND = 57740
const MINUTE_SECOND = 57741
const MONTH = 57742
const QUARTER = 57743
const SECOND = 57744
const SECOND_MICROSECOND = 57745
const YEAR_MONTH = 57746
const WEEK = 57747
const REPLACE = 57748
const CONVERT = 57749
const CAST = 57750
const SUBSTR = 57751
const SUBSTRING = 57752
const GROUP_CONCAT = 57753
const SEPARATOR = 57754
const TIMESTAMPADD = 57755
const TIMESTAMPDIFF = 57756
const WEIGHT_STRING = 57757
const LTRIM = 57758
const RTRIM = 57759
const TRIM = 57760
const JSON_ARRAY = 57761
const JSON_OBJECT = 57762
const JSON_QUOTE = 57763
const MATCH = 57764
const AGAINST = 57765
const BOOLEAN = 57766
const LANGUAGE = 57767
const WITH = 57768
const QUERY = 57769
const EXPANSION = 57770
const WITHOUT = 57771
const VALIDATION = 57772
const UNUSED = 57773
const ARRAY = 57774
const CUME_DIST = 57775
const DESCRIPTION = 57776
const DENSE_RANK = 57777
const EMPTY = 57778
const EXCEPT = 57779
const FIRST_VALUE = 57780
const GROUPING = 57781
const GROUPS = 57782
const JSON_TABLE = 57783
const LAG = 57784
const LAST_VALUE = 57785
const LATERAL = 57786
const LEAD = 57787
const MEMBER = 57788
const NTH_VALUE = 57789
const NTILE = 57790
const OF = 57791
const OVER = 57792
const PERCENT_RANK = 57793
const RANK = 57794
const RECURSIVE = 57795
const ROW_NUMBER = 57796
const SYSTEM = 57797
const WINDOW = 57798
const ACTIVE = 57799
const ADMIN = 57800
const BUCKETS = 57801
const CLONE = 57802
const COMPONENT = 57803
const DEFINITION = 57804
const ENFORCED = 57805
const EXCLUDE = 57806
const FOLLOWING = 57807
const GEOMCOLLECTION = 57808
const GET_MASTER_PUBLIC_KEY = 57809
const HISTOGRAM = 57810
const HISTORY = 57811
const INACTIVE = 57812
const INVISIBLE = 57813
const LOCKED = 57814
const MASTER_COMPRESSION_ALGORITHMS = 57815
const MASTER_PUBLIC_KEY_PATH = 57816
const MASTER_TLS_CIPHERSUITES = 57817
const MASTER_ZSTD_COMPRESSION_LEVEL = 57818
const NESTED = 57819
const NETWORK_NAMESPACE = 57820
const NOWAIT = 57821
const NULLS = 57822
const OJ = 57823
const OLD = 57824
const OPTIONAL = 57825
const ORDINALITY = 57826
const ORGANIZATION = 57827
const OTHERS = 57828
const PATH = 57829
const PERSIST = 57830
const PERSIST_ONLY = 57831
const PRECEDING = 57832
const PRIVILEGE_CHECKS_USER = 57833
const PROCESS = 57834
const RANDOM = 57835
const REFERENCE = 57836
const REQUIRE_ROW_FORMAT = 57837
const RESOURCE = 57838
const RESPECT = 57839
const RESTART = 57840
const RETAIN = 57841
const REUSE = 57842
const ROLE = 57843
const SECONDARY = 57844
const SECONDARY_ENGINE = 57845
const SECONDARY_LOAD = 57846
const SECONDARY_UNLOAD = 57847
const SKIP = 57848
const SRID = 57849
const THREAD_PRIORITY = 57850
const TIES = 57851
const UNBOUNDED = 57852
const VCPU = 57853
const VISIBLE = 57854
const FORMAT = 57855
const TREE = 57856
const VITESS = 57857
const TRADITIONAL = 57858
const LOCAL = 57859
const LOW_PRIORITY = 57860
const NO_WRITE_TO_BINLOG = 57861
const LOGS = 57862
const ERROR = 57863
const GENERAL = 57864
const HOSTS = 57865
const OPTIMIZER_COSTS = 57866
const USER_RESOURCES = 57867
const SLOW = 57868
const CHANNEL = 57869
const RELAY = 57870
const EXPORT = 57871
const AVG_ROW_LENGTH = 57872
const CONNECTION = 57873
const CHECKSUM = 57874
const DELAY_KEY_WRITE = 57875
const ENCRYPTION = 57876
const ENGINE = 57877
const INSERT_METHOD = 57878
const MAX_ROWS = 57879
const MIN_ROWS = 57880
const PACK_KEYS = 57881
const PASSWORD = 57882
const FIXED = 57883
const DYNAMIC = 57884
const COMPRESSED = 57885
const REDUNDANT = 57886
const COMPACT = 57887
const ROW_FORMAT = 57888
const STATS_AUTO_RECALC = 57889
const STATS_PERSISTENT = 57890
const STATS_SAMPLE_PAGES = 57891
const STORAGE = 57892
const MEMORY = 57893
const DISK = 57894
const PARTITIONS = 57895
const LINEAR = 57896
const RANGE = 57897
const LIST = 57898
const SUBPARTITION = 57899
const SUBPARTITIONS = 57900
const HASH = 57901

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	577, 145,
	-2, 151,
	-1, 48,
	129, 151,
	169, 151,
	325, 151,
	-2, 452,
	-1, 55,
	33, 650,
	229, 650,
	240, 650,
	275, 664,
	276, 664,
	-2, 652,
	-1, 60,
	231, 675,
	-2, 673,
	-1, 114,
	228, 1175,
	-2, 119,
	-1, 116,
	1, 146,
	577, 146,
	-2, 151,
	-1, 126,
	130, 355,
	234, 355,
	-2, 446,
	-1, 145,
	129, 151,
	169, 151,
	325, 151,
	-2, 461,
	-1, 642,
	213, 1196,
	-2, 1192,
	-1, 643,
	213, 1197,
	-2, 1193,
	-1, 717,
	57, 743,
	-2, 758,
	-1, 754,
	145, 1577,
	-2, 112,
	-1, 755,
	145, 1439,
	-2, 113,
	-1, 761,
	145, 1506,
	-2, 1169,
	-1, 908,
	145, 1370,
	-2, 1166,
	-1, 946,
	239, 41,
	244, 41,
	-2, 366,
	-1, 1023,
	1, 500,
	577, 500,
	-2, 151,
	-1, 1241,
	57, 744,
	-2, 763,
	-1, 1242,
	57, 745,
	-2, 764,
	-1, 1294,
	129, 151,
	169, 151,
	325, 151,
	-2, 396,
	-1, 1371,
	130, 355,
	234, 355,
	-2, 446,
	-1, 1380,
	239, 42,
	244, 42,
	-2, 367,
	-1, 1656,
	213, 1201,
	-2, 1195,
	-1, 1739,
	129, 151,
	169, 151,
	325, 151,
	-2, 397,
	-1, 1746,
	23, 170,
	-2, 172,
	-1, 1960,
	84, 39,
	-2, 800,
	-1, 2012,
	75, 94,
	84, 94,
	-2, 820,
	-1, 2198,
	47, 1137,
	-2, 1131,
	-1, 2376,
	84, 39,
	-2, 801,
	-1, 2414,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 792,
	-1, 2674,
	90, 540,
	91, 540,
	171, 540,
	172, 540,
	173, 540,
	174, 540,
	175, 540,
	176, 540,
	177, 540,
	178, 540,
	179, 540,
	180, 540,
	181, 540,
	182, 540,
	183, 540,
	184, 540,
	185, 540,
	186, 540,
	187, 540,
	188, 540,
	189, 540,
	190, 540,
	191, 540,
	192, 540,
	193, 540,
	194, 540,
	195, 540,
	196, 540,
	197, 540,
	198, 540,
	199, 540,
	200, 540,
	201, 540,
	202, 540,
	203, 540,
	204, 540,
	205, 540,
	206, 540,
	207, 540,
	208, 540,
	209, 540,
	210, 540,
	211, 540,
	-2, 1508,
}

const yyPrivate = 57344

const yyLast = 39464

var yyAct = [...]int{
	642, 2740, 2722, 2739, 651, 2616, 2716, 1736, 2672, 1690,
	2475, 2676, 644, 2321, 1297, 2656, 1670, 2251, 2258, 1929,
	2575, 3, 96, 2212, 1087, 2292, 2592, 1220, 710, 2209,
	581, 2505, 2260, 1948, 2303, 1799, 577, 637, 636, 37,
	2304, 2165, 1256, 2213, 2210, 2385, 574, 2510, 2379, 2164,
	645, 182, 732, 634, 182, 635, 541, 182, 603, 1694,
	2306, 2006, 557, 1709, 182, 2405, 1225, 2199, 2207, 1975,
	1769, 575, 182, 2371, 2044, 573, 2114, 1983, 2073, 1789,
	1774, 2045, 1725, 2046, 154, 976, 1243, 182, 1995, 733,
	1351, 1713, 759, 911, 1035, 569, 1967, 1950, 38, 712,
	1650, 1378, 1640, 1576, 1535, 1714, 2130, 36, 1583, 557,
	1788, 1808, 557, 182, 557, 1776, 714, 140, 718, 1841,
	511, 2038, 936, 941, 1286, 1394, 2014, 95, 1265, 1716,
	560, 586, 1223, 756, 91, 1169, 735, 1595, 705, 1553,
	1672, 954, 1106, 1482, 915, 947, 1786, 1486, 918, 1468,
	1701, 1765, 942, 1385, 919, 943, 944, 1283, 1695, 1269,
	724, 1285, 1080, 1636, 1491, 1346, 722, 1085, 1370, 123,
	124, 746, 98, 157, 117, 118, 1176, 564, 720, 917,
	1019, 1663, 1172, 85, 2625, 2066, 89, 719, 97, 2723,
	76, 1801, 1802, 1803, 1801, 2289, 2064, 1064, 2093, 2092,
	1839, 2122, 721, 77, 8, 7, 2123, 2750, 1542, 2743,
	1541, 740, 6, 745, 514, 2749, 1540, 125, 90, 1667,
	1668, 119, 184, 185, 186, 726, 1539, 1538, 978, 1537,
	981, 1524, 567, 102, 568, 912, 184, 185, 186, 1454,
	1653, 992, 993, 565, 996, 997, 998, 999, 1529, 1946,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 711, 753, 760, 713, 958,
	1107, 2195, 1977, 727, 104, 105, 922, 108, 934, 544,
	114, 734, 927, 179, 957, 2690, 509, 2736, 2700, 2713,
	119, 933, 932, 2742, 2440, 989, 2571, 2570, 980, 979,
	2750, 2275, 1138, 982, 983, 984, 706, 707, 708, 709,
	2468, 78, 717, 2469, 178, 1781, 994, 2735, 78, 78,
	531, 80, 2666, 2580, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 1147, 1146, 1148, 1149, 1986, 78, 2726, 120, 1779,
	748, 749, 1879, 2636, 2711, 2476, 2657, 1827, 2665, 2635,
	2129, 162, 2354, 1360, 119, 2101, 2248, 2249, 2023, 2100,
	1987, 2022, 1731, 1732, 2024, 1947, 530, 1669, 2523, 1287,
	2247, 1288, 2121, 1876, 1022, 1117, 1730, 1054, 528, 704,
	703, 1059, 1060, 178, 926, 1042, 1083, 928, 87, 931,
	1043, 1028, 1029, 2028, 2069, 87, 87, 1042, 1041, 2067,
	1040, 2617, 1043, 1055, 2035, 1048, 1877, 120, 159, 142,
	160, 1749, 1748, 87, 1071, 2323, 1073, 2382, 525, 2156,
	162, 544, 544, 1031, 544, 555, 2345, 539, 2343, 544,
	177, 1528, 553, 559, 1853, 1850, 1852, 1851, 1227, 2074,
	1809, 1444, 536, 1530, 1531, 1532, 2096, 929, 1474, 2316,
	1842, 152, 2725, 1469, 1070, 1072, 141, 2317, 1057, 1058,
	1077, 995, 1018, 1063, 935, 1024, 1847, 1107, 1113, 1858,
	1061, 1105, 1855, 2109, 1856, 545, 1857, 159, 1778, 160,
	1062, 931, 1056, 923, 1049, 1445, 1082, 1446, 1001, 1000,
	925, 924, 2325, 1846, 2324, 1372, 1373, 151, 150, 177,
	1844, 2461, 937, 1812, 1230, 515, 938, 517, 532, 182,
	547, 182, 546, 521, 182, 519, 523, 533, 524, 965,
	518, 1848, 529, 931, 1017, 520, 534, 535, 537, 551,
	550, 538, 1075, 527, 548, 1845, 963, 2300, 163, 929,
	1710, 2691, 557, 557, 557, 1068, 87, 168, 938, 1069,
	974, 973, 972, 971, 970, 956, 2264, 930, 969, 1074,
	557, 557, 968, 967, 916, 962, 1363, 975, 2730, 950,
	916, 2157, 1117, 2709, 914, 1026, 2720, 1032, 916, 949,
	1034, 1067, 956, 1099, 1483, 1384, 1877, 1150, 1021, 991,
	1787, 1150, 747, 2110, 1052, 146, 1374, 153, 1833, 1371,
	37, 147, 148, 956, 1479, 1093, 985, 163, 2085, 2282,
	1038, 2581, 1044, 1045, 1046, 1047, 168, 545, 545, 2113,
	545, 1951, 1953, 956, 2095, 545, 1358, 2613, 1357, 2624,
	2065, 1356, 1480, 1354, 513, 1084, 508, 1112, 1109, 1110,
	1111, 1116, 1118, 1115, 2274, 1114, 1696, 1697, 2299, 930,
	2421, 1475, 1108, 955, 1153, 1154, 1155, 1156, 155, 949,
	952, 953, 966, 916, 1161, 1113, 1164, 946, 950, 2098,
	2125, 2401, 2068, 1076, 1890, 2108, 1737, 1020, 2107, 964,
	955, 1829, 1213, 1780, 549, 959, 949, 2019, 945, 1383,
	1982, 930, 1218, 1151, 1152, 960, 2383, 956, 1938, 1662,
	1273, 955, 542, 1473, 182, 1150, 959, 949, 557, 557,
	1089, 1090, 1200, 1033, 1149, 961, 960, 543, 2741, 2634,
	1157, 955, 116, 2246, 182, 729, 2567, 155, 184, 185,
	186, 1037, 1578, 1078, 1065, 81, 712, 1236, 1492, 111,
	1081, 2131, 1234, 557, 2116, 2630, 2457, 182, 86, 2115,
	1233, 2395, 557, 977, 1237, 86, 86, 1843, 557, 1476,
	714, 1219, 1289, 1231, 77, 1878, 1102, 1100, 1456, 1455,
	1457, 1458, 1459, 86, 1101, 1103, 756, 2116, 2149, 1596,
	2057, 1952, 2115, 1178, 1122, 1174, 1027, 1175, 2718, 1039,
	1051, 2719, 1030, 2717, 1596, 955, 1904, 990, 2254, 1121,
	1122, 1053, 149, 1930, 1235, 2519, 1702, 1703, 95, 112,
	2432, 2431, 1579, 1278, 1816, 1206, 1207, 1208, 1209, 1393,
	1392, 143, 2133, 1219, 144, 1142, 1143, 1144, 1145, 1147,
	1146, 1148, 1149, 1224, 1112, 1109, 1110, 1111, 1116, 1118,
	1115, 1382, 1114, 2255, 1826, 1470, 2707, 1471, 956, 1108,
	1472, 1824, 1120, 98, 1121, 1122, 156, 161, 158, 164,
	165, 166, 167, 169, 170, 171, 172, 1821, 2257, 1828,
	965, 1036, 173, 174, 175, 176, 1821, 1066, 963, 1895,
	1221, 1493, 2252, 2705, 2143, 2142, 2141, 2135, 1894, 2139,
	1255, 2134, 2731, 2132, 1120, 1232, 1121, 1122, 2137, 2262,
	2263, 1252, 711, 1023, 1825, 87, 2253, 2136, 2422, 1274,
	760, 182, 713, 1823, 1120, 1347, 1121, 1122, 1912, 1556,
	1279, 1280, 2138, 2140, 1355, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 2733, 1120, 2259, 1121,
	1122, 173, 174, 175, 176, 557, 955, 1380, 2562, 2491,
	1238, 1250, 949, 952, 953, 1389, 916, 2490, 1600, 1391,
	946, 950, 557, 557, 2642, 557, 2439, 557, 557, 1138,
	557, 557, 557, 557, 557, 557, 2732, 1296, 1144, 1145,
	1147, 1146, 1148, 1149, 2606, 557, 2438, 1263, 1390, 182,
	1427, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1146,
	1148, 1149, 1463, 2261, 2290, 182, 2643, 1893, 1120, 1558,
	1121, 1122, 1284, 1422, 1423, 2264, 557, 2151, 182, 2706,
	1361, 1362, 2682, 1559, 1560, 1557, 2607, 2280, 1120, 1481,
	1121, 1122, 557, 2042, 182, 2041, 2680, 1784, 1376, 1464,
	1548, 1550, 1551, 1449, 1448, 2684, 2685, 1882, 1883, 1884,
	182, 1447, 1262, 2262, 2263, 1426, 1388, 182, 1369, 1438,
	2681, 1432, 2591, 1250, 1549, 1462, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 557, 557, 557, 1424, 1461,
	1430, 1431, 2621, 1429, 1467, 1428, 1436, 1437, 1396, 1920,
	1397, 2351, 1399, 1401, 1386, 1386, 1405, 1407, 1409, 1411,
	1413, 1120, 1353, 1121, 1122, 1451, 182, 1387, 1366, 1367,
	1365, 1120, 1379, 1121, 1122, 1403, 1497, 1120, 2256, 1121,
	1122, 751, 1120, 1501, 1121, 1122, 1488, 2349, 1250, 2610,
	1120, 2609, 1121, 1122, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 2608, 1460, 1496, 1425, 1440, 1900, 656, 657, 658,
	1500, 1577, 1502, 1503, 1504, 1505, 1250, 2261, 2518, 1509,
	1958, 1359, 1250, 1957, 1586, 557, 2320, 1259, 1450, 2264,
	2416, 1554, 1536, 1523, 1484, 2516, 1120, 2487, 1121, 1122,
	557, 557, 1561, 2368, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 119, 933, 932,
	1250, 1552, 1597, 2436, 1120, 1092, 1121, 1122, 1562, 2428,
	1120, 1215, 1121, 1122, 2051, 1498, 1260, 1637, 1899, 1120,
	2039, 1121, 1122, 1837, 2560, 1654, 182, 184, 185, 186,
	1836, 557, 1120, 1693, 1121, 1122, 1675, 1581, 1494, 1495,
	1522, 1580, 1519, 1520, 1521, 184, 185, 186, 1120, 2429,
	1121, 1122, 1499, 1525, 1637, 182, 1489, 1452, 557, 1506,
	1507, 1508, 184, 185, 186, 1555, 2026, 1120, 182, 1121,
	1122, 557, 1120, 1439, 1121, 1122, 182, 2364, 182, 1435,
	182, 182, 557, 1250, 1434, 557, 1433, 1680, 2458, 1681,
	1261, 1079, 1138, 1656, 2357, 1134, 557, 1135, 1654, 92,
	2588, 2356, 2394, 1658, 1659, 1746, 756, 94, 95, 756,
	93, 1136, 1137, 1133, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 1147, 1146, 1148, 1149, 2587, 1120, 95, 1121, 1122,
	1686, 184, 185, 186, 1704, 1797, 1120, 2556, 1121, 1122,
	2555, 1712, 1708, 1120, 1711, 1121, 1122, 1536, 1655, 1984,
	1120, 557, 1121, 1122, 2043, 1973, 2724, 1790, 1791, 1792,
	2696, 1250, 1794, 1796, 1250, 1250, 1656, 2474, 1755, 1756,
	1757, 1758, 2396, 184, 185, 186, 557, 1795, 1984, 1740,
	1973, 2663, 557, 1389, 1991, 1723, 1389, 726, 1389, 1741,
	1674, 1973, 2650, 1750, 1820, 1751, 1752, 1753, 1754, 1582,
	100, 1933, 1120, 2075, 1121, 1122, 1588, 1589, 1973, 2646,
	2015, 1761, 1762, 1763, 1764, 1688, 1771, 2054, 1810, 1744,
	1992, 1707, 2638, 1250, 557, 2241, 1577, 1973, 2626, 1777,
	1705, 1577, 1577, 1138, 1877, 2124, 2466, 2623, 1992, 1727,
	760, 1745, 1657, 760, 1728, 1660, 1661, 1822, 1743, 2394,
	1120, 1742, 1121, 1122, 1119, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1147, 1146, 1148, 1149, 2629, 182, 1891, 1807,
	1932, 2366, 1250, 2016, 182, 1973, 2563, 2466, 1250, 182,
	182, 1685, 2018, 182, 1815, 182, 1973, 1818, 2208, 1819,
	1931, 1772, 182, 1992, 1767, 1768, 1973, 2464, 2394, 182,
	643, 2366, 1783, 1785, 1821, 1782, 1793, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1124, 2270, 958, 1830, 1928, 1120,
	2183, 1121, 1122, 1729, 1772, 1813, 1386, 182, 557, 1832,
	1814, 957, 1891, 1536, 1834, 1835, 1831, 1923, 1817, 1120,
	1849, 1121, 1122, 1821, 1250, 1859, 1860, 1927, 1909, 1864,
	1624, 183, 1908, 1138, 183, 1889, 1821, 183, 1867, 1926,
	2399, 1250, 558, 1804, 183, 1870, 1924, 1120, 1700, 1121,
	1122, 1840, 183, 2272, 2271, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1147, 1146, 1148, 1149, 1254, 183, 1665, 1868,
	1869, 101, 1533, 1873, 1871, 1554, 1120, 1478, 1121, 1122,
	2268, 2269, 100, 1872, 99, 1886, 1281, 1888, 1120, 558,
	1121, 1122, 558, 183, 558, 1120, 92, 1121, 1122, 2268,
	2267, 1992, 1250, 94, 1861, 2293, 940, 93, 1891, 1250,
	939, 1887, 716, 1616, 1605, 1606, 1607, 1608, 1618, 1609,
	1610, 1611, 1623, 1619, 1612, 1613, 1620, 1621, 1622, 1614,
	1615, 1617, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1147,
	1146, 1148, 1149, 2015, 101, 1969, 182, 1877, 2094, 1350,
	2079, 1250, 2071, 2072, 182, 100, 1875, 99, 2441, 557,
	94, 1250, 1973, 1972, 2688, 557, 94, 1944, 1961, 1555,
	1119, 1250, 1350, 1349, 1295, 1294, 557, 1885, 1140, 1141,
	1142, 1143, 1144, 1145, 1147, 1146, 1148, 1149, 1418, 87,
	2653, 87, 2577, 1257, 2553, 2530, 2456, 2453, 2434, 182,
	2360, 2359, 1352, 182, 1770, 2318, 2016, 2295, 2442, 2443,
	2444, 1988, 1903, 2291, 2047, 1877, 2445, 1891, 2025, 1997,
	2000, 2001, 2002, 1998, 1250, 1999, 2003, 2080, 37, 2406,
	2407, 1766, 1760, 1974, 1759, 1656, 1466, 2008, 1419, 1420,
	1421, 1381, 2048, 1377, 1348, 113, 1022, 1918, 1997, 2000,
	2001, 2002, 1998, 1970, 1999, 2003, 2406, 2407, 2412, 1258,
	2322, 2048, 557, 2446, 2447, 2578, 1781, 182, 1415, 2012,
	1678, 2748, 2746, 2702, 182, 1224, 2677, 2409, 1945, 2287,
	2286, 2285, 2208, 2058, 1862, 1526, 557, 2500, 2411, 2499,
	1655, 2036, 2037, 557, 1955, 2070, 2227, 1389, 1389, 2226,
	1966, 1971, 557, 2693, 2029, 2230, 2007, 2013, 2228, 1981,
	2231, 2664, 1901, 2229, 2091, 1416, 1417, 1692, 1684, 2232,
	2090, 2001, 2002, 1248, 1244, 182, 182, 182, 182, 182,
	2400, 2017, 2188, 2056, 2020, 1777, 2187, 2498, 1245, 2200,
	2202, 2027, 182, 182, 2050, 2030, 2077, 2605, 2203, 2387,
	2509, 2511, 730, 2390, 2197, 627, 1477, 2386, 182, 702,
	731, 2266, 2040, 1682, 1683, 1247, 2033, 1246, 2052, 987,
	1592, 2049, 1935, 1936, 986, 92, 1577, 2332, 2047, 2087,
	2119, 2059, 2060, 2061, 1593, 2055, 93, 1091, 1248, 1244,
	2089, 2102, 2103, 2104, 2105, 2106, 94, 2086, 2081, 2082,
	92, 120, 1369, 1245, 712, 2392, 2728, 94, 1536, 2112,
	2148, 93, 2283, 2168, 101, 2168, 1865, 556, 2168, 557,
	2622, 2166, 2088, 2166, 2120, 100, 2166, 99, 1241, 1242,
	1247, 1854, 1246, 1702, 1703, 557, 94, 2573, 2265, 2167,
	2005, 2167, 2127, 2177, 2167, 2126, 2111, 1689, 738, 739,
	182, 2186, 2372, 1881, 557, 2173, 99, 2597, 2596, 2185,
	2170, 2517, 2515, 557, 758, 2514, 2507, 913, 2454, 920,
	557, 557, 2391, 182, 182, 182, 182, 182, 2389, 2145,
	2128, 2144, 2296, 1805, 1364, 182, 737, 2177, 100, 183,
	182, 183, 101, 182, 183, 182, 2506, 2211, 182, 182,
	182, 2220, 2211, 100, 101, 2214, 2160, 2380, 718, 2240,
	1984, 2191, 2704, 2703, 2704, 100, 2205, 99, 2176, 1969,
	2158, 1910, 558, 558, 558, 2190, 1676, 2178, 1237, 2008,
	1275, 1267, 2611, 2281, 106, 107, 2427, 2192, 728, 182,
	558, 558, 103, 2189, 88, 2117, 1, 2679, 2118, 526,
	1666, 1222, 557, 540, 2675, 1453, 2242, 1443, 2477, 2243,
	2182, 557, 1638, 1639, 2221, 2574, 182, 2224, 720, 2076,
	2302, 1811, 2233, 2179, 2180, 2181, 182, 719, 95, 2222,
	2223, 2244, 2225, 2452, 1775, 2298, 948, 145, 1738, 1739,
	2659, 182, 1488, 2250, 182, 110, 2219, 2237, 2238, 909,
	109, 951, 1050, 1806, 2333, 2284, 2467, 2034, 2277, 2276,
	1747, 1301, 1299, 2278, 2279, 1300, 1298, 1303, 1302, 1911,
	1527, 2310, 554, 2309, 2004, 180, 1290, 1268, 988, 516,
	2273, 1838, 2305, 522, 1162, 2184, 2021, 757, 750, 1777,
	2301, 1677, 2314, 1959, 2216, 2297, 2384, 2313, 2196, 2198,
	1976, 2201, 2194, 2604, 2508, 2651, 2031, 2326, 1264, 1902,
	2329, 1594, 2363, 1717, 557, 182, 1547, 2328, 2327, 579,
	578, 576, 1962, 1985, 1125, 646, 1949, 2335, 1276, 1996,
	2334, 1994, 1993, 1863, 183, 1724, 2341, 2408, 558, 558,
	2404, 2738, 2330, 2331, 2671, 1719, 1715, 1968, 587, 580,
	572, 2424, 2338, 2339, 183, 2340, 2308, 2097, 2342, 2319,
	2344, 2099, 2346, 2032, 2315, 1104, 1240, 566, 921, 1591,
	2579, 2565, 182, 558, 1880, 2353, 1239, 183, 1603, 1604,
	2288, 2377, 558, 1798, 2373, 2374, 63, 41, 558, 1631,
	2430, 561, 2689, 1095, 2381, 182, 2388, 2378, 744, 32,
	31, 30, 29, 28, 23, 22, 21, 2413, 2393, 20,
	19, 25, 18, 182, 17, 16, 182, 182, 182, 2699,
	2410, 2727, 115, 50, 47, 45, 557, 557, 2403, 122,
	121, 48, 44, 2418, 2417, 2459, 2460, 1025, 2310, 42,
	2309, 27, 26, 2425, 15, 2426, 14, 13, 12, 11,
	2419, 2420, 10, 557, 557, 557, 557, 2435, 9, 2437,
	5, 2433, 4, 35, 34, 33, 1098, 24, 2462, 2,
	2063, 1800, 0, 0, 0, 0, 0, 0, 0, 2448,
	0, 0, 2449, 2450, 2451, 0, 0, 2473, 0, 0,
	0, 0, 2471, 2472, 0, 0, 0, 0, 0, 2168,
	0, 2168, 0, 0, 0, 0, 182, 2166, 0, 2166,
	0, 0, 0, 2482, 0, 0, 0, 0, 0, 0,
	0, 0, 2503, 0, 0, 2167, 0, 2167, 0, 2483,
	557, 0, 557, 0, 0, 0, 2486, 0, 2495, 0,
	0, 183, 0, 0, 2494, 0, 0, 758, 758, 758,
	2524, 2168, 0, 0, 2526, 2211, 712, 2504, 0, 2532,
	2513, 2512, 2528, 0, 2214, 1094, 1096, 37, 2214, 2520,
	2522, 0, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 558, 558, 2536, 558, 2561, 558, 558, 0,
	558, 558, 558, 558, 558, 558, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 558, 0, 0, 2558, 183,
	2559, 2557, 0, 0, 0, 2533, 2534, 2568, 557, 2564,
	0, 2576, 557, 557, 0, 183, 0, 2569, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 0, 183, 0,
	0, 178, 0, 0, 0, 0, 0, 1216, 2598, 2599,
	0, 557, 558, 0, 183, 2603, 2601, 2600, 0, 0,
	2615, 0, 0, 0, 0, 120, 0, 2612, 0, 0,
	183, 0, 0, 0, 557, 0, 712, 183, 162, 0,
	0, 2214, 2618, 2620, 0, 0, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 558, 558, 558, 557, 182,
	0, 2614, 0, 1228, 1229, 0, 0, 2631, 0, 0,
	0, 0, 0, 0, 0, 2628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 37, 0, 557, 159, 0, 160, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 758, 0, 0,
	557, 557, 0, 1291, 0, 0, 0, 177, 0, 557,
	0, 2644, 2211, 0, 2652, 2632, 0, 0, 182, 557,
	2658, 2654, 0, 0, 2576, 2660, 0, 2667, 0, 0,
	0, 37, 0, 0, 2670, 558, 0, 0, 2686, 2678,
	2683, 2649, 0, 0, 0, 0, 0, 2692, 0, 0,
	558, 558, 0, 0, 0, 0, 0, 2701, 2698, 557,
	0, 0, 0, 0, 0, 0, 0, 557, 2708, 0,
	0, 0, 0, 2710, 2168, 2712, 2714, 0, 0, 0,
	0, 2721, 2715, 0, 0, 0, 0, 0, 0, 0,
	0, 2729, 0, 0, 0, 0, 183, 2734, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	2745, 2168, 2744, 0, 0, 163, 0, 0, 2168, 2737,
	0, 0, 0, 0, 168, 183, 2747, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 558, 0, 0, 0, 0, 183, 0, 183, 0,
	183, 183, 558, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	913, 1249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1216, 0, 0, 0, 1395, 1395, 0,
	1395, 0, 1395, 1395, 0, 1404, 1395, 1395, 1395, 1395,
	1395, 558, 0, 0, 0, 0, 0, 0, 1216, 1216,
	913, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 1465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 0, 1368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 0, 120, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	758, 758, 758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	152, 0, 0, 0, 183, 141, 0, 0, 0, 183,
	183, 0, 0, 183, 0, 183, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 159, 0, 160, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1372, 1373, 151, 150, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1587, 0, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 1601, 1602, 0, 0, 0,
	0, 0, 0, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 0, 0, 758, 0, 0, 173,
	174, 175, 176, 0, 0, 0, 628, 2538, 2540, 2539,
	2547, 2548, 2549, 2550, 624, 2551, 2552, 609, 0, 0,
	0, 0, 0, 0, 0, 0, 1679, 0, 0, 0,
	0, 0, 0, 0, 146, 1374, 153, 0, 1371, 0,
	147, 148, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 1691, 0, 168, 0, 181, 0, 0,
	512, 0, 0, 552, 0, 0, 1271, 0, 0, 758,
	512, 0, 0, 0, 0, 0, 0, 758, 512, 0,
	758, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 913, 0, 725, 183, 0, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 558, 0, 0, 0, 743,
	0, 743, 0, 0, 0, 0, 558, 0, 0, 512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 183, 0, 0, 920, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 913, 0, 0, 0, 0, 0, 920, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 558, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 913,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 149, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 2697, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 1318, 0, 144, 0, 183, 183, 183, 183, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 638,
	0, 604, 606, 639, 640, 0, 602, 605, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 607, 608, 2537, 2541, 2542,
	2543, 2544, 2545, 2546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 0, 0, 156, 161, 158, 164, 165, 166,
	167, 169, 170, 171, 172, 558, 0, 0, 0, 0,
	173, 174, 175, 176, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 558, 0, 0, 0, 0, 0,
	0, 1306, 0, 558, 0, 0, 0, 0, 0, 0,
	558, 558, 0, 183, 183, 183, 183, 183, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	183, 0, 0, 183, 0, 183, 0, 0, 183, 183,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 758, 0,
	0, 1251, 1253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1691, 0, 0, 0, 0, 183,
	1963, 0, 1319, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 183, 512, 0, 0,
	512, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 183, 0, 1332, 1335, 1336, 1337,
	1338, 1339, 1340, 0, 1341, 1342, 1343, 1344, 1345, 1320,
	1321, 1322, 1323, 1304, 1305, 1333, 0, 1307, 0, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 2053, 0, 0,
	0, 0, 0, 742, 0, 0, 0, 0, 0, 0,
	78, 39, 40, 80, 0, 0, 0, 0, 0, 0,
	0, 1691, 0, 0, 558, 183, 0, 0, 2078, 0,
	84, 0, 0, 0, 43, 69, 70, 2083, 67, 71,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 0, 0, 0, 0, 56, 0, 1217, 0,
	0, 0, 183, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 183, 183, 183, 0,
	512, 0, 0, 0, 0, 0, 558, 558, 0, 0,
	0, 0, 0, 0, 1216, 0, 1216, 0, 0, 1216,
	725, 0, 0, 0, 758, 0, 0, 0, 0, 0,
	0, 0, 0, 558, 558, 558, 558, 0, 0, 0,
	1395, 0, 0, 512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2193,
	0, 0, 0, 0, 0, 0, 0, 0, 758, 0,
	0, 0, 1216, 0, 0, 2218, 1395, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	46, 49, 52, 51, 54, 0, 66, 0, 0, 75,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	558, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 83, 82, 0, 0, 64, 65, 53,
	0, 0, 0, 0, 0, 73, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 913, 0, 0,
	1216, 0, 0, 0, 0, 0, 1691, 558, 0, 0,
	0, 57, 58, 0, 59, 60, 61, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 0, 512, 558, 1599,
	0, 0, 558, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1251, 1664, 0, 1217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 0, 2193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1217,
	1217, 0, 0, 0, 1687, 512, 0, 0, 558, 183,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 1441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 0, 0, 86, 0, 0,
	0, 0, 0, 0, 558, 0, 0, 0, 0, 0,
	1487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	558, 558, 0, 0, 0, 0, 512, 0, 0, 558,
	0, 0, 0, 512, 0, 0, 0, 0, 183, 558,
	0, 0, 1510, 1511, 512, 512, 512, 512, 512, 512,
	512, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1691, 1691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 512, 0, 0, 0, 0, 558, 2478, 2479,
	2480, 2481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1123, 0, 0, 0, 0,
	1216, 0, 1216, 0, 0, 743, 0, 0, 0, 0,
	0, 0, 743, 743, 0, 0, 0, 0, 1217, 0,
	0, 0, 0, 1170, 0, 0, 0, 0, 0, 0,
	1216, 0, 0, 0, 0, 2525, 0, 2527, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 1487, 743, 743,
	743, 743, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1441, 0, 0, 0, 0, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 743, 0, 0,
	0, 0, 1691, 0, 0, 0, 0, 0, 0, 0,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 758, 1318, 512, 0, 0, 0, 0, 0,
	1487, 0, 512, 0, 512, 0, 512, 1726, 0, 0,
	0, 0, 0, 2594, 0, 0, 0, 2594, 2594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1266, 0, 0, 1892, 0, 1691, 0, 1896, 0,
	1897, 1898, 0, 0, 0, 0, 0, 0, 0, 1906,
	0, 0, 1907, 0, 0, 0, 0, 0, 0, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1913, 1914,
	1915, 1916, 1917, 1691, 1919, 0, 0, 0, 1921, 0,
	1922, 0, 0, 0, 1925, 0, 0, 0, 0, 0,
	0, 0, 1934, 0, 0, 0, 0, 0, 0, 1939,
	1940, 1941, 1942, 1943, 0, 1687, 0, 1216, 0, 2645,
	0, 0, 0, 1306, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 758, 758, 0, 0, 0,
	0, 0, 0, 0, 2668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 0, 0,
	512, 0, 0, 0, 1691, 512, 512, 0, 0, 512,
	0, 1866, 2673, 0, 1319, 0, 0, 0, 512, 0,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 653, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1332, 1335,
	1336, 1337, 1338, 1339, 1340, 0, 1341, 1342, 1343, 1344,
	1345, 1320, 1321, 1322, 1323, 1304, 1305, 1333, 0, 1307,
	0, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 715, 0, 79, 0, 0, 0, 0, 0,
	0, 1490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2155, 0, 0, 0, 0, 743, 743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1487,
	0, 2169, 512, 0, 0, 0, 0, 2174, 2175, 0,
	1441, 0, 0, 0, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1543, 1544, 1545, 1546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 512,
	0, 2217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1584, 1585, 0, 0, 0, 2235, 2236,
	0, 1590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1625, 1626, 1627, 1628,
	1629, 1630, 1632, 570, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 0, 0,
	2062, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1698, 1699, 0, 0,
	0, 512, 512, 512, 512, 512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 512,
	0, 0, 2337, 1735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 0, 2347, 2348, 2350, 2352,
	0, 0, 0, 0, 0, 0, 2358, 0, 743, 0,
	0, 2362, 0, 0, 0, 0, 2365, 0, 0, 0,
	0, 0, 0, 2367, 0, 2369, 0, 0, 2370, 0,
	0, 0, 0, 0, 2375, 0, 0, 0, 0, 0,
	0, 0, 1773, 0, 0, 1217, 0, 1217, 0, 0,
	1217, 0, 0, 0, 743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2397, 2398, 0,
	0, 2402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 512, 0, 0, 2414,
	2415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 0, 0, 0, 0, 1217, 512,
	512, 512, 512, 512, 0, 0, 0, 0, 0, 0,
	0, 2234, 0, 0, 0, 0, 512, 0, 0, 1441,
	0, 512, 0, 0, 512, 2245, 1487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1086, 1086, 1086, 0,
	0, 1217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 512, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 512, 2492, 0, 2493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 0, 0,
	512, 0, 0, 715, 1158, 1159, 1160, 0, 1163, 0,
	1165, 1166, 1167, 1168, 0, 1171, 1173, 1173, 0, 1173,
	1177, 1177, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 0, 1201, 1202, 1203, 1204, 1205, 0,
	0, 0, 0, 1177, 1177, 1177, 1177, 0, 0, 0,
	1905, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2572, 0, 0, 1170, 0, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 2582, 2583, 2584, 0,
	2585, 2586, 0, 0, 0, 0, 2589, 0, 2590, 2593,
	1226, 120, 0, 142, 0, 0, 715, 0, 512, 0,
	715, 0, 0, 0, 162, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 0, 2619, 0, 0,
	0, 0, 0, 0, 1266, 152, 0, 0, 0, 512,
	141, 0, 512, 512, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 2633, 0, 0, 0, 0, 0, 0, 0, 129,
	130, 151, 150, 177, 2639, 0, 0, 0, 0, 0,
	2640, 2641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2655,
	0, 1217, 0, 1217, 0, 0, 0, 0, 0, 0,
	0, 0, 1441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1217, 0, 0, 0, 0, 0, 0, 0, 2694,
	0, 0, 0, 2695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	127, 153, 134, 126, 0, 147, 148, 654, 655, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 136, 131, 132, 133,
	137, 0, 0, 0, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 2146, 2147, 0, 139, 0, 2150, 0,
	0, 0, 2152, 2153, 2154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2159, 0, 0, 1641, 2161, 0,
	2162, 2163, 0, 0, 0, 2171, 2172, 0, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 2206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 2239, 647, 654, 655, 656,
	657, 658, 648, 650, 0, 0, 0, 649, 0, 1086,
	1086, 1086, 0, 0, 0, 0, 0, 0, 1217, 0,
	652, 659, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2294, 0, 0, 1441, 143, 0, 0, 144, 0,
	0, 0, 0, 0, 0, 0, 2311, 2312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2355, 0, 0, 0, 0,
	87, 0, 2361, 0, 0, 0, 647, 654, 655, 656,
	657, 658, 648, 650, 0, 0, 0, 649, 0, 156,
	161, 158, 164, 165, 166, 167, 169, 170, 171, 172,
	652, 659, 660, 0, 0, 173, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1718, 0, 2311, 2312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 0,
	0, 0, 0, 0, 0, 2455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 0, 0, 0, 639, 640, 0, 0, 0,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2484, 0, 2485, 0, 0, 0, 0,
	2488, 2489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2529, 0, 0, 2531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2602, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2687, 0, 0,
	0, 0, 0, 0, 1989, 1990, 0, 0, 0, 0,
	0, 0, 0, 2009, 0, 2010, 2011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2215, 0, 79, 0, 0, 1718, 1718, 1718,
	1718, 1718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 715, 0, 0, 0, 1718,
	0, 0, 1718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2497, 0, 2501, 2502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2215, 0, 79, 0, 2215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2648, 0, 891, 876, 433, 79, 823, 894,
	792, 811, 904, 814, 817, 858, 771, 837, 354, 808,
	763, 796, 766, 803, 767, 794, 825, 244, 791, 878,
	841, 893, 309, 241, 773, 797, 368, 813, 193, 860,
	409, 228, 319, 316, 440, 255, 247, 243, 227, 281,
	326, 366, 427, 360, 900, 313, 847, 0, 418, 339,
	0, 0, 0, 827, 882, 835, 872, 822, 859, 781,
	846, 895, 809, 855, 896, 287, 226, 192, 351, 419,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 2661,
	0, 2662, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 305, 307, 306, 299, 300, 301, 302, 0, 303,
	304, 805, 852, 890, 806, 854, 239, 285, 246, 238,
	437, 901, 881, 770, 834, 889, 0, 0, 209, 892,
	829, 0, 857, 0, 907, 765, 849, 0, 768, 772,
	903, 885, 800, 249, 0, 0, 0, 0, 0, 0,
	0, 826, 836, 869, 820, 0, 0, 0, 0, 0,
	0, 0, 798, 0, 845, 0, 0, 0, 777, 769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 824, 0, 0, 0, 780, 0, 799, 870, 0,
	762, 268, 774, 340, 231, 0, 874, 884, 821, 471,
	888, 819, 818, 864, 778, 880, 812, 308, 776, 293,
	188, 205, 0, 810, 350, 391, 397, 879, 795, 804,
	229, 802, 395, 364, 455, 213, 257, 388, 369, 393,
	376, 260, 844, 862, 394, 314, 442, 383, 452, 472,
	473, 237, 344, 462, 431, 468, 484, 206, 234, 358,
	424, 458, 415, 337, 438, 439, 292, 414, 266, 191,
	312, 478, 204, 403, 221, 211, 197, 426, 450, 218,
	406, 0, 0, 486, 199, 448, 423, 333, 289, 290,
	198, 0, 387, 242, 264, 232, 353, 445, 446, 230,
	487, 208, 467, 201, 1088, 466, 346, 441, 449, 334,
	324, 200, 447, 332, 323, 295, 253, 275, 381, 317,
	382, 276, 342, 341, 343, 194, 459, 0, 195, 0,
	420, 460, 488, 214, 215, 216, 790, 252, 256, 263,
	265, 271, 272, 279, 310, 357, 380, 378, 384, 875,
	436, 453, 463, 470, 476, 477, 479, 480, 481, 482,
	483, 345, 278, 416, 294, 315, 867, 906, 363, 396,
	219, 457, 417, 785, 789, 783, 784, 839, 840, 786,
	897, 898, 899, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 0, 871, 779, 0, 787, 788, 0, 877, 886,
	887, 507, 325, 408, 454, 296, 297, 298, 843, 187,
	202, 311, 902, 385, 261, 485, 465, 461, 764, 782,
	236, 793, 801, 0, 807, 815, 816, 828, 830, 831,
	832, 833, 336, 850, 851, 853, 861, 863, 866, 868,
	873, 883, 905, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 321, 327,
	328, 329, 330, 347, 348, 349, 352, 355, 356, 359,
	361, 362, 365, 372, 373, 374, 375, 377, 379, 386,
	390, 398, 399, 400, 401, 402, 404, 405, 410, 411,
	412, 413, 421, 425, 443, 444, 456, 469, 474, 270,
	451, 475, 0, 320, 842, 848, 322, 254, 273, 284,
	856, 464, 422, 207, 392, 262, 196, 225, 210, 233,
	248, 251, 288, 331, 338, 367, 371, 267, 245, 223,
	389, 220, 407, 428, 429, 430, 432, 335, 240, 370,
	838, 865, 318, 434, 435, 280, 891, 876, 433, 0,
	823, 894, 792, 811, 904, 814, 817, 858, 771, 837,
	354, 808, 763, 796, 766, 803, 767, 794, 825, 244,
	791, 878, 841, 893, 309, 241, 773, 797, 368, 813,
	193, 860, 409, 228, 319, 316, 440, 255, 247, 243,
	227, 281, 326, 366, 427, 360, 900, 313, 847, 0,
	418, 339, 0, 0, 0, 827, 882, 835, 872, 822,
	859, 781, 846, 895, 809, 855, 896, 287, 226, 192,
	351, 419, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 305, 307, 306, 299, 300, 301, 302,
	0, 303, 304, 805, 852, 890, 806, 854, 239, 285,
	246, 238, 437, 901, 881, 770, 834, 889, 0, 0,
	209, 892, 829, 0, 857, 0, 907, 765, 849, 0,
	768, 772, 903, 885, 800, 249, 0, 0, 0, 0,
	0, 0, 0, 826, 836, 869, 820, 0, 0, 0,
	0, 0, 2246, 0, 798, 0, 845, 0, 0, 0,
	777, 769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 824, 0, 0, 0, 780, 0, 799,
	870, 0, 762, 268, 774, 340, 231, 0, 874, 884,
	821, 471, 888, 819, 818, 864, 778, 880, 812, 308,
	776, 293, 188, 205, 0, 810, 350, 391, 397, 879,
	795, 804, 229, 802, 395, 364, 455, 213, 257, 388,
	369, 393, 376, 260, 844, 862, 394, 314, 442, 383,
	452, 472, 473, 237, 344, 462, 431, 468, 484, 206,
	234, 358, 424, 458, 415, 337, 438, 439, 292, 414,
	266, 191, 312, 478, 204, 403, 221, 211, 197, 426,
	450, 218, 406, 0, 0, 486, 199, 448, 423, 333,
	289, 290, 198, 0, 387, 242, 264, 232, 353, 445,
	446, 230, 487, 208, 467, 201, 1088, 466, 346, 441,
	449, 334, 324, 200, 447, 332, 323, 295, 253, 275,
	381, 317, 382, 276, 342, 341, 343, 194, 459, 0,
	195, 0, 420, 460, 488, 214, 215, 216, 790, 252,
	256, 263, 265, 271, 272, 279, 310, 357, 380, 378,
	384, 875, 436, 453, 463, 470, 476, 477, 479, 480,
	481, 482, 483, 345, 278, 416, 294, 315, 867, 906,
	363, 396, 219, 457, 417, 785, 789, 783, 784, 839,
	840, 786, 897, 898, 899, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 0, 871, 779, 0, 787, 788, 0,
	877, 886, 887, 507, 325, 408, 454, 296, 297, 298,
	843, 187, 202, 311, 902, 385, 261, 485, 465, 461,
	764, 782, 236, 793, 801, 0, 807, 815, 816, 828,
	830, 831, 832, 833, 336, 850, 851, 853, 861, 863,
	866, 868, 873, 883, 905, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	321, 327, 328, 329, 330, 347, 348, 349, 352, 355,
	356, 359, 361, 362, 365, 372, 373, 374, 375, 377,
	379, 386, 390, 398, 399, 400, 401, 402, 404, 405,
	410, 411, 412, 413, 421, 425, 443, 444, 456, 469,
	474, 270, 451, 475, 0, 320, 842, 848, 322, 254,
	273, 284, 856, 464, 422, 207, 392, 262, 196, 225,
	210, 233, 248, 251, 288, 331, 338, 367, 371, 267,
	245, 223, 389, 220, 407, 428, 429, 430, 432, 335,
	240, 370, 838, 865, 318, 434, 435, 280, 891, 876,
	433, 0, 823, 894, 792, 811, 904, 814, 817, 858,
	771, 837, 354, 808, 763, 796, 766, 803, 767, 794,
	825, 244, 791, 878, 841, 893, 309, 241, 773, 797,
	368, 813, 193, 860, 409, 228, 319, 316, 440, 255,
	247, 243, 227, 281, 326, 366, 427, 360, 900, 313,
	847, 0, 418, 339, 0, 0, 0, 827, 882, 835,
	872, 822, 859, 781, 846, 895, 809, 855, 896, 287,
	226, 192, 351, 419, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 305, 307, 306, 299, 300,
	301, 302, 0, 303, 304, 805, 852, 890, 806, 854,
	239, 285, 246, 238, 437, 901, 881, 770, 834, 889,
	0, 0, 209, 892, 829, 0, 857, 0, 907, 765,
	849, 0, 768, 772, 903, 885, 800, 249, 0, 0,
	0, 0, 0, 0, 0, 826, 836, 869, 820, 0,
	0, 0, 0, 0, 2204, 0, 798, 0, 845, 0,
	0, 0, 777, 769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 824, 0, 0, 0, 780,
	0, 799, 870, 0, 762, 268, 774, 340, 231, 0,
	874, 884, 821, 471, 888, 819, 818, 864, 778, 880,
	812, 308, 776, 293, 188, 205, 0, 810, 350, 391,
	397, 879, 795, 804, 229, 802, 395, 364, 455, 213,
	257, 388, 369, 393, 376, 260, 844, 862, 394, 314,
	442, 383, 452, 472, 473, 237, 344, 462, 431, 468,
	484, 206, 234, 358, 424, 458, 415, 337, 438, 439,
	292, 414, 266, 191, 312, 478, 204, 403, 221, 211,
	197, 426, 450, 218, 406, 0, 0, 486, 199, 448,
	423, 333, 289, 290, 198, 0, 387, 242, 264, 232,
	353, 445, 446, 230, 487, 208, 467, 201, 1088, 466,
	346, 441, 449, 334, 324, 200, 447, 332, 323, 295,
	253, 275, 381, 317, 382, 276, 342, 341, 343, 194,
	459, 0, 195, 0, 420, 460, 488, 214, 215, 216,
	790, 252, 256, 263, 265, 271, 272, 279, 310, 357,
	380, 378, 384, 875, 436, 453, 463, 470, 476, 477,
	479, 480, 481, 482, 483, 345, 278, 416, 294, 315,
	867, 906, 363, 396, 219, 457, 417, 785, 789, 783,
	784, 839, 840, 786, 897, 898, 899, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 0, 871, 779, 0, 787,
	788, 0, 877, 886, 887, 507, 325, 408, 454, 296,
	297, 298, 843, 187, 202, 311, 902, 385, 261, 485,
	465, 461, 764, 782, 236, 793, 801, 0, 807, 815,
	816, 828, 830, 831, 832, 833, 336, 850, 851, 853,
	861, 863, 866, 868, 873, 883, 905, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 321, 327, 328, 329, 330, 347, 348, 349,
	352, 355, 356, 359, 361, 362, 365, 372, 373, 374,
	375, 377, 379, 386, 390, 398, 399, 400, 401, 402,
	404, 405, 410, 411, 412, 413, 421, 425, 443, 444,
	456, 469, 474, 270, 451, 475, 0, 320, 842, 848,
	322, 254, 273, 284, 856, 464, 422, 207, 392, 262,
	196, 225, 210, 233, 248, 251, 288, 331, 338, 367,
	371, 267, 245, 223, 389, 220, 407, 428, 429, 430,
	432, 335, 240, 370, 838, 865, 318, 434, 435, 280,
	891, 876, 433, 0, 823, 894, 792, 811, 904, 814,
	817, 858, 771, 837, 354, 808, 763, 796, 766, 803,
	767, 794, 825, 244, 791, 878, 841, 893, 309, 241,
	773, 797, 368, 813, 193, 860, 409, 228, 319, 316,
	440, 255, 247, 243, 227, 281, 326, 366, 427, 360,
	900, 313, 847, 0, 418, 339, 0, 0, 0, 827,
	882, 835, 872, 822, 859, 781, 846, 895, 809, 855,
	896, 287, 226, 192, 351, 419, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 305, 307, 306,
	299, 300, 301, 302, 0, 303, 304, 805, 852, 890,
	806, 854, 239, 285, 246, 238, 437, 901, 881, 770,
	834, 889, 0, 0, 209, 892, 829, 0, 857, 0,
	907, 765, 849, 0, 768, 772, 903, 885, 800, 249,
	0, 0, 0, 0, 0, 0, 0, 826, 836, 869,
	820, 0, 0, 0, 0, 0, 1706, 0, 798, 0,
	845, 0, 0, 0, 777, 769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 824, 0, 0,
	0, 780, 0, 799, 870, 0, 762, 268, 774, 340,
	231, 0, 874, 884, 821, 471, 888, 819, 818, 864,
	778, 880, 812, 308, 776, 293, 188, 205, 0, 810,
	350, 391, 397, 879, 795, 804, 229, 802, 395, 364,
	455, 213, 257, 388, 369, 393, 376, 260, 844, 862,
	394, 314, 442, 383, 452, 472, 473, 237, 344, 462,
	431, 468, 484, 206, 234, 358, 424, 458, 415, 337,
	438, 439, 292, 414, 266, 191, 312, 478, 204, 403,
	221, 211, 197, 426, 450, 218, 406, 0, 0, 486,
	199, 448, 423, 333, 289, 290, 198, 0, 387, 242,
	264, 232, 353, 445, 446, 230, 487, 208, 467, 201,
	1088, 466, 346, 441, 449, 334, 324, 200, 447, 332,
	323, 295, 253, 275, 381, 317, 382, 276, 342, 341,
	343, 194, 459, 0, 195, 0, 420, 460, 488, 214,
	215, 216, 790, 252, 256, 263, 265, 271, 272, 279,
	310, 357, 380, 378, 384, 875, 436, 453, 463, 470,
	476, 477, 479, 480, 481, 482, 483, 345, 278, 416,
	294, 315, 867, 906, 363, 396, 219, 457, 417, 785,
	789, 783, 784, 839, 840, 786, 897, 898, 899, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 0, 871, 779,
	0, 787, 788, 0, 877, 886, 887, 507, 325, 408,
	454, 296, 297, 298, 843, 187, 202, 311, 902, 385,
	261, 485, 465, 461, 764, 782, 236, 793, 801, 0,
	807, 815, 816, 828, 830, 831, 832, 833, 336, 850,
	851, 853, 861, 863, 866, 868, 873, 883, 905, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 321, 327, 328, 329, 330, 347,
	348, 349, 352, 355, 356, 359, 361, 362, 365, 372,
	373, 374, 375, 377, 379, 386, 390, 398, 399, 400,
	401, 402, 404, 405, 410, 411, 412, 413, 421, 425,
	443, 444, 456, 469, 474, 270, 451, 475, 0, 320,
	842, 848, 322, 254, 273, 284, 856, 464, 422, 207,
	392, 262, 196, 225, 210, 233, 248, 251, 288, 331,
	338, 367, 371, 267, 245, 223, 389, 220, 407, 428,
	429, 430, 432, 335, 240, 370, 838, 865, 318, 434,
	435, 280, 891, 876, 433, 0, 823, 894, 792, 811,
	904, 814, 817, 858, 771, 837, 354, 808, 763, 796,
	766, 803, 767, 794, 825, 244, 791, 878, 841, 893,
	309, 241, 773, 797, 368, 813, 193, 860, 409, 228,
	319, 316, 440, 255, 247, 243, 227, 281, 326, 366,
	427, 360, 900, 313, 847, 0, 418, 339, 0, 0,
	0, 827, 882, 835, 872, 822, 859, 781, 846, 895,
	809, 855, 896, 287, 226, 192, 351, 419, 259, 0,
	87, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 305,
	307, 306, 299, 300, 301, 302, 0, 303, 304, 805,
	852, 890, 806, 854, 239, 285, 246, 238, 437, 901,
	881, 770, 834, 889, 0, 0, 209, 892, 829, 0,
	857, 0, 907, 765, 849, 0, 768, 772, 903, 885,
	800, 249, 0, 0, 0, 0, 0, 0, 0, 826,
	836, 869, 820, 0, 0, 0, 0, 0, 0, 0,
	798, 0, 845, 0, 0, 0, 777, 769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	0, 0, 0, 780, 0, 799, 870, 0, 762, 268,
	774, 340, 231, 0, 874, 884, 821, 471, 888, 819,
	818, 864, 778, 880, 812, 308, 776, 293, 188, 205,
	0, 810, 350, 391, 397, 879, 795, 804, 229, 802,
	395, 364, 455, 213, 257, 388, 369, 393, 376, 260,
	844, 862, 394, 314, 442, 383, 452, 472, 473, 237,
	344, 462, 431, 468, 484, 206, 234, 358, 424, 458,
	415, 337, 438, 439, 292, 414, 266, 191, 312, 478,
	204, 403, 221, 211, 197, 426, 450, 218, 406, 0,
	0, 486, 199, 448, 423, 333, 289, 290, 198, 0,
	387, 242, 264, 232, 353, 445, 446, 230, 487, 208,
	467, 201, 1088, 466, 346, 441, 449, 334, 324, 200,
	447, 332, 323, 295, 253, 275, 381, 317, 382, 276,
	342, 341, 343, 194, 459, 0, 195, 0, 420, 460,
	488, 214, 215, 216, 790, 252, 256, 263, 265, 271,
	272, 279, 310, 357, 380, 378, 384, 875, 436, 453,
	463, 470, 476, 477, 479, 480, 481, 482, 483, 345,
	278, 416, 294, 315, 867, 906, 363, 396, 219, 457,
	417, 785, 789, 783, 784, 839, 840, 786, 897, 898,
	899, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 0,
	871, 779, 0, 787, 788, 0, 877, 886, 887, 507,
	325, 408, 454, 296, 297, 298, 843, 187, 202, 311,
	902, 385, 261, 485, 465, 461, 764, 782, 236, 793,
	801, 0, 807, 815, 816, 828, 830, 831, 832, 833,
	336, 850, 851, 853, 861, 863, 866, 868, 873, 883,
	905, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 321, 327, 328, 329,
	330, 347, 348, 349, 352, 355, 356, 359, 361, 362,
	365, 372, 373, 374, 375, 377, 379, 386, 390, 398,
	399, 400, 401, 402, 404, 405, 410, 411, 412, 413,
	421, 425, 443, 444, 456, 469, 474, 270, 451, 475,
	0, 320, 842, 848, 322, 254, 273, 284, 856, 464,
	422, 207, 392, 262, 196, 225, 210, 233, 248, 251,
	288, 331, 338, 367, 371, 267, 245, 223, 389, 220,
	407, 428, 429, 430, 432, 335, 240, 370, 838, 865,
	318, 434, 435, 280, 891, 876, 433, 0, 823, 894,
	792, 811, 904, 814, 817, 858, 771, 837, 354, 808,
	763, 796, 766, 803, 767, 794, 825, 244, 791, 878,
	841, 893, 309, 241, 773, 797, 368, 813, 193, 860,
	409, 228, 319, 316, 440, 255, 247, 243, 227, 281,
	326, 366, 427, 360, 900, 313, 847, 0, 418, 339,
	0, 0, 0, 827, 882, 835, 872, 822, 859, 781,
	846, 895, 809, 855, 896, 287, 226, 192, 351, 419,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 305, 307, 306, 299, 300, 301, 302, 0, 303,
	304, 805, 852, 890, 806, 854, 239, 285, 246, 238,
	437, 901, 881, 770, 834, 889, 0, 0, 209, 892,
	829, 0, 857, 0, 907, 765, 849, 0, 768, 772,
	903, 885, 800, 249, 0, 0, 0, 0, 0, 0,
	0, 826, 836, 869, 820, 0, 0, 0, 0, 0,
	0, 0, 798, 0, 845, 0, 0, 0, 777, 769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 824, 0, 0, 0, 780, 0, 799, 870, 0,
	762, 268, 774, 340, 231, 0, 874, 884, 821, 471,
	888, 819, 818, 864, 778, 880, 812, 308, 776, 293,
	188, 205, 0, 810, 350, 391, 397, 879, 795, 804,
	229, 802, 395, 364, 455, 213, 257, 388, 369, 393,
	376, 260, 844, 862, 394, 314, 442, 383, 452, 472,
	473, 237, 344, 462, 431, 468, 484, 206, 234, 358,
	424, 458, 415, 337, 438, 439, 292, 414, 266, 191,
	312, 478, 204, 403, 221, 211, 197, 426, 450, 218,
	406, 0, 0, 486, 199, 448, 423, 333, 289, 290,
	198, 0, 387, 242, 264, 232, 353, 445, 446, 230,
	487, 208, 467, 201, 1088, 466, 346, 441, 449, 334,
	324, 200, 447, 332, 323, 295, 253, 275, 381, 317,
	382, 276, 342, 341, 343, 194, 459, 0, 195, 0,
	420, 460, 488, 214, 215, 216, 790, 252, 256, 263,
	265, 271, 272, 279, 310, 357, 380, 378, 384, 875,
	436, 453, 463, 470, 476, 477, 479, 480, 481, 482,
	483, 345, 278, 416, 294, 315, 867, 906, 363, 396,
	219, 457, 417, 785, 789, 783, 784, 839, 840, 786,
	897, 898, 899, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 0, 871, 779, 0, 787, 788, 0, 877, 886,
	887, 507, 325, 408, 454, 296, 297, 298, 843, 187,
	202, 311, 902, 385, 261, 485, 465, 461, 764, 782,
	236, 793, 801, 0, 807, 815, 816, 828, 830, 831,
	832, 833, 336, 850, 851, 853, 861, 863, 866, 868,
	873, 883, 905, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 321, 327,
	328, 329, 330, 347, 348, 349, 352, 355, 356, 359,
	361, 362, 365, 372, 373, 374, 375, 377, 379, 386,
	390, 398, 399, 400, 401, 402, 404, 405, 410, 411,
	412, 413, 421, 425, 443, 444, 456, 469, 474, 270,
	451, 475, 0, 320, 842, 848, 322, 254, 273, 284,
	856, 464, 422, 207, 392, 262, 196, 225, 210, 233,
	248, 251, 288, 331, 338, 367, 371, 267, 245, 223,
	389, 220, 407, 428, 429, 430, 432, 335, 240, 370,
	838, 865, 318, 434, 435, 280, 891, 876, 433, 0,
	823, 894, 792, 811, 904, 814, 817, 858, 771, 837,
	354, 808, 763, 796, 766, 803, 767, 794, 825, 244,
	791, 878, 841, 893, 309, 241, 773, 797, 368, 813,
	193, 860, 409, 228, 319, 316, 440, 255, 247, 243,
	227, 281, 326, 366, 427, 360, 900, 313, 847, 0,
	418, 339, 0, 0, 0, 827, 882, 835, 872, 822,
	859, 781, 846, 895, 809, 855, 896, 287, 226, 192,
	351, 419, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 305, 307, 306, 299, 300, 301, 302,
	0, 303, 304, 805, 852, 890, 806, 854, 239, 285,
	246, 238, 437, 901, 881, 770, 834, 889, 0, 0,
	908, 892, 829, 0, 857, 0, 907, 765, 849, 0,
	768, 772, 903, 885, 800, 249, 0, 0, 0, 0,
	0, 0, 0, 826, 836, 869, 820, 0, 0, 0,
	0, 0, 0, 0, 798, 0, 845, 0, 0, 0,
	777, 769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 824, 0, 0, 0, 780, 0, 799,
	870, 0, 762, 268, 774, 340, 231, 0, 874, 884,
	821, 471, 888, 819, 818, 864, 778, 880, 812, 308,
	776, 293, 188, 205, 0, 810, 350, 391, 397, 879,
	795, 804, 229, 802, 395, 364, 455, 213, 257, 388,
	369, 393, 376, 260, 844, 862, 394, 314, 442, 383,
	452, 472, 473, 237, 344, 462, 431, 468, 484, 206,
	234, 358, 424, 458, 415, 337, 438, 439, 292, 414,
	266, 191, 312, 478, 204, 403, 221, 211, 197, 426,
	450, 218, 406, 0, 0, 486, 199, 448, 423, 333,
	289, 290, 198, 0, 387, 242, 264, 232, 353, 445,
	446, 230, 487, 208, 467, 201, 775, 466, 346, 441,
	449, 334, 324, 200, 447, 332, 323, 295, 253, 275,
	381, 317, 382, 276, 342, 341, 343, 194, 459, 0,
	195, 0, 420, 460, 488, 214, 215, 216, 790, 252,
	256, 263, 265, 271, 272, 279, 310, 357, 380, 378,
	384, 875, 436, 453, 463, 470, 476, 477, 479, 480,
	481, 482, 483, 761, 755, 754, 294, 315, 867, 906,
	363, 396, 219, 457, 417, 785, 789, 783, 784, 839,
	840, 786, 897, 898, 899, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 0, 871, 779, 0, 787, 788, 0,
	877, 886, 887, 507, 325, 408, 454, 296, 297, 298,
	843, 187, 202, 311, 902, 385, 261, 485, 465, 461,
	764, 782, 236, 793, 801, 0, 807, 815, 816, 828,
	830, 831, 832, 833, 336, 850, 851, 853, 861, 863,
	866, 868, 873, 883, 905, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	321, 327, 328, 329, 330, 347, 348, 349, 352, 355,
	356, 359, 361, 362, 365, 372, 373, 374, 375, 377,
	379, 386, 390, 398, 399, 400, 401, 402, 404, 405,
	410, 411, 412, 413, 421, 425, 443, 444, 456, 469,
	474, 270, 451, 475, 0, 320, 842, 848, 322, 254,
	273, 284, 856, 464, 422, 207, 392, 262, 196, 225,
	210, 233, 248, 251, 288, 331, 338, 367, 371, 267,
	245, 223, 389, 220, 407, 428, 429, 430, 432, 335,
	240, 370, 838, 865, 318, 434, 435, 280, 891, 876,
	433, 0, 823, 894, 792, 811, 904, 814, 817, 858,
	771, 837, 354, 808, 763, 796, 766, 803, 767, 794,
	825, 244, 791, 878, 841, 893, 309, 241, 773, 797,
	368, 813, 193, 860, 409, 228, 319, 316, 440, 255,
	247, 243, 227, 281, 326, 366, 427, 360, 900, 313,
	847, 0, 418, 339, 0, 0, 0, 827, 882, 835,
	872, 822, 859, 781, 846, 895, 809, 855, 896, 287,
	226, 192, 351, 419, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 305, 307, 306, 299, 300,
	301, 302, 0, 303, 304, 805, 852, 890, 806, 854,
	239, 285, 246, 238, 437, 901, 881, 770, 834, 889,
	0, 0, 908, 892, 829, 0, 857, 0, 907, 765,
	849, 0, 768, 772, 903, 885, 800, 249, 0, 0,
	0, 0, 0, 0, 0, 826, 836, 869, 820, 0,
	0, 0, 0, 0, 0, 0, 798, 0, 845, 0,
	0, 0, 777, 769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 824, 0, 0, 0, 780,
	0, 799, 870, 0, 762, 268, 774, 340, 231, 0,
	874, 884, 821, 471, 888, 819, 818, 864, 778, 880,
	812, 308, 776, 293, 188, 205, 0, 810, 350, 391,
	397, 879, 795, 804, 229, 802, 395, 364, 455, 213,
	257, 388, 369, 393, 376, 260, 844, 862, 394, 314,
	442, 383, 452, 472, 473, 237, 344, 462, 431, 468,
	484, 206, 234, 358, 424, 458, 415, 337, 438, 439,
	292, 414, 266, 191, 312, 478, 204, 403, 221, 211,
	197, 426, 1282, 218, 406, 0, 0, 486, 199, 448,
	423, 333, 289, 290, 198, 0, 387, 242, 264, 232,
	353, 445, 446, 230, 487, 208, 467, 201, 775, 466,
	346, 441, 449, 334, 324, 200, 447, 332, 323, 295,
	253, 275, 381, 317, 382, 276, 342, 341, 343, 194,
	459, 0, 195, 0, 420, 460, 488, 214, 215, 216,
	790, 252, 256, 263, 265, 271, 272, 279, 310, 357,
	380, 378, 384, 875, 436, 453, 463, 470, 476, 477,
	479, 480, 481, 482, 483, 761, 755, 754, 294, 315,
	867, 906, 363, 396, 219, 457, 417, 785, 789, 783,
	784, 839, 840, 786, 897, 898, 899, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 0, 871, 779, 0, 787,
	788, 0, 877, 886, 887, 507, 325, 408, 454, 296,
	297, 298, 843, 187, 202, 311, 902, 385, 261, 485,
	465, 461, 764, 782, 236, 793, 801, 0, 807, 815,
	816, 828, 830, 831, 832, 833, 336, 850, 851, 853,
	861, 863, 866, 868, 873, 883, 905, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 321, 327, 328, 329, 330, 347, 348, 349,
	352, 355, 356, 359, 361, 362, 365, 372, 373, 374,
	375, 377, 379, 386, 390, 398, 399, 400, 401, 402,
	404, 405, 410, 411, 412, 413, 421, 425, 443, 444,
	456, 469, 474, 270, 451, 475, 0, 320, 842, 848,
	322, 254, 273, 284, 856, 464, 422, 207, 392, 262,
	196, 225, 210, 233, 248, 251, 288, 331, 338, 367,
	371, 267, 245, 223, 389, 220, 407, 428, 429, 430,
	432, 335, 240, 370, 838, 865, 318, 434, 435, 280,
	891, 876, 433, 0, 823, 894, 792, 811, 904, 814,
	817, 858, 771, 837, 354, 808, 763, 796, 766, 803,
	767, 794, 825, 244, 791, 878, 841, 893, 309, 241,
	773, 797, 368, 813, 193, 860, 409, 228, 319, 316,
	440, 255, 247, 243, 227, 281, 326, 366, 427, 360,
	900, 313, 847, 0, 418, 339, 0, 0, 0, 827,
	882, 835, 872, 822, 859, 781, 846, 895, 809, 855,
	896, 287, 226, 192, 351, 419, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 305, 307, 306,
	299, 300, 301, 302, 0, 303, 304, 805, 852, 890,
	806, 854, 239, 285, 246, 238, 437, 901, 881, 770,
	834, 889, 0, 0, 908, 892, 829, 0, 857, 0,
	907, 765, 849, 0, 768, 772, 903, 885, 800, 249,
	0, 0, 0, 0, 0, 0, 0, 826, 836, 869,
	820, 0, 0, 0, 0, 0, 0, 0, 798, 0,
	845, 0, 0, 0, 777, 769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 824, 0, 0,
	0, 780, 0, 799, 870, 0, 762, 268, 774, 340,
	231, 0, 874, 884, 821, 471, 888, 819, 818, 864,
	778, 880, 812, 308, 776, 293, 188, 205, 0, 810,
	350, 391, 397, 879, 795, 804, 229, 802, 395, 364,
	455, 213, 257, 388, 369, 393, 376, 260, 844, 862,
	394, 314, 442, 383, 452, 472, 473, 237, 344, 462,
	431, 468, 484, 206, 234, 358, 424, 458, 415, 337,
	438, 439, 292, 414, 266, 191, 312, 478, 204, 403,
	221, 211, 197, 426, 752, 218, 406, 0, 0, 486,
	199, 448, 423, 333, 289, 290, 198, 0, 387, 242,
	264, 232, 353, 445, 446, 230, 487, 208, 467, 201,
	775, 466, 346, 441, 449, 334, 324, 200, 447, 332,
	323, 295, 253, 275, 381, 317, 382, 276, 342, 341,
	343, 194, 459, 0, 195, 0, 420, 460, 488, 214,
	215, 216, 790, 252, 256, 263, 265, 271, 272, 279,
	310, 357, 380, 378, 384, 875, 436, 453, 463, 470,
	476, 477, 479, 480, 481, 482, 483, 761, 755, 754,
	294, 315, 867, 906, 363, 396, 219, 457, 417, 785,
	789, 783, 784, 839, 840, 786, 897, 898, 899, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 0, 871, 779,
	0, 787, 788, 0, 877, 886, 887, 507, 325, 408,
	454, 296, 297, 298, 843, 187, 202, 311, 902, 385,
	261, 485, 465, 461, 764, 782, 236, 793, 801, 0,
	807, 815, 816, 828, 830, 831, 832, 833, 336, 850,
	851, 853, 861, 863, 866, 868, 873, 883, 905, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 321, 327, 328, 329, 330, 347,
	348, 349, 352, 355, 356, 359, 361, 362, 365, 372,
	373, 374, 375, 377, 379, 386, 390, 398, 399, 400,
	401, 402, 404, 405, 410, 411, 412, 413, 421, 425,
	443, 444, 456, 469, 474, 270, 451, 475, 0, 320,
	842, 848, 322, 254, 273, 284, 856, 464, 422, 207,
	392, 262, 196, 225, 210, 233, 248, 251, 288, 331,
	338, 367, 371, 267, 245, 223, 389, 220, 407, 428,
	429, 430, 432, 335, 240, 370, 838, 865, 318, 434,
	435, 280, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 1651, 0, 588,
	0, 0, 0, 244, 593, 0, 0, 0, 309, 241,
	0, 1652, 368, 0, 193, 0, 409, 228, 319, 316,
	440, 255, 247, 243, 227, 281, 326, 366, 427, 360,
	600, 313, 0, 0, 418, 339, 0, 0, 0, 0,
	0, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 351, 419, 259, 0, 87, 0,
	0, 184, 185, 186, 647, 654, 655, 656, 657, 658,
	648, 650, 0, 0, 217, 649, 224, 611, 613, 612,
	620, 621, 622, 623, 624, 625, 626, 609, 652, 659,
	660, 0, 239, 285, 246, 238, 437, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 571, 585, 0, 599, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 582, 583, 741, 0, 0, 0,
	632, 0, 584, 0, 0, 592, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 340,
	231, 0, 631, 0, 0, 471, 0, 0, 629, 0,
	0, 0, 0, 308, 0, 293, 188, 205, 0, 0,
	350, 391, 397, 0, 0, 0, 229, 0, 395, 364,
	455, 213, 257, 388, 369, 393, 376, 260, 0, 0,
	394, 314, 442, 383, 452, 472, 473, 237, 344, 462,
	431, 468, 484, 206, 234, 358, 424, 458, 415, 337,
	438, 439, 292, 414, 266, 191, 312, 478, 204, 403,
	221, 211, 197, 426, 450, 218, 406, 0, 0, 486,
	199, 448, 423, 333, 289, 290, 198, 0, 387, 242,
	264, 232, 353, 445, 446, 230, 487, 208, 467, 201,
	0, 466, 346, 441, 449, 334, 324, 200, 447, 332,
	323, 295, 253, 275, 381, 317, 382, 276, 342, 341,
	343, 194, 459, 0, 195, 0, 420, 460, 488, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	310, 357, 380, 378, 384, 0, 436, 453, 463, 470,
	476, 477, 479, 480, 481, 482, 483, 345, 278, 416,
	294, 315, 0, 0, 363, 396, 219, 457, 417, 638,
	630, 604, 606, 639, 640, 601, 602, 605, 641, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 0, 633, 591,
	590, 0, 597, 598, 0, 607, 608, 610, 614, 615,
	616, 617, 618, 619, 589, 187, 202, 311, 0, 385,
	261, 485, 465, 461, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 321, 327, 328, 329, 330, 347,
	348, 349, 352, 355, 356, 359, 361, 362, 365, 372,
	373, 374, 375, 377, 379, 386, 390, 398, 399, 400,
	401, 402, 404, 405, 410, 411, 412, 413, 421, 425,
	443, 444, 456, 469, 474, 270, 451, 475, 0, 320,
	0, 0, 322, 254, 273, 284, 0, 464, 422, 207,
	392, 262, 196, 225, 210, 233, 248, 251, 288, 331,
	338, 367, 371, 267, 245, 223, 389, 220, 407, 428,
	429, 430, 432, 335, 240, 370, 433, 0, 318, 434,
	435, 280, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 0, 0, 588, 0, 0, 0, 244, 593, 0,
	0, 0, 309, 241, 0, 0, 368, 0, 193, 0,
	409, 228, 319, 316, 440, 255, 247, 243, 227, 281,
	326, 366, 427, 360, 600, 313, 0, 0, 418, 339,
	0, 0, 0, 0, 0, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 351, 419,
	259, 0, 87, 0, 0, 184, 185, 186, 647, 654,
	655, 656, 657, 658, 648, 650, 0, 0, 217, 649,
	224, 611, 613, 612, 620, 621, 622, 623, 624, 625,
	626, 609, 652, 659, 660, 0, 239, 285, 246, 238,
	437, 0, 0, 1633, 1634, 1635, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 571, 585, 0, 599,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 583,
	0, 0, 0, 0, 632, 0, 584, 0, 0, 592,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 340, 231, 0, 631, 0, 0, 471,
	0, 0, 629, 0, 0, 0, 0, 308, 0, 293,
	188, 205, 0, 0, 350, 391, 397, 0, 0, 0,
	229, 0, 395, 364, 455, 213, 257, 388, 369, 393,
	376, 260, 0, 0, 394, 314, 442, 383, 452, 472,
	473, 237, 344, 462, 431, 468, 484, 206, 234, 358,
	424, 458, 415, 337, 438, 439, 292, 414, 266, 191,
	312, 478, 204, 403, 221, 211, 197, 426, 450, 218,
	406, 0, 0, 486, 199, 448, 423, 333, 289, 290,
	198, 0, 387, 242, 264, 232, 353, 445, 446, 230,
	487, 208, 467, 201, 0, 466, 346, 441, 449, 334,
	324, 200, 447, 332, 323, 295, 253, 275, 381, 317,
	382, 276, 342, 341, 343, 194, 459, 0, 195, 0,
	420, 460, 488, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 310, 357, 380, 378, 384, 0,
	436, 453, 463, 470, 476, 477, 479, 480, 481, 482,
	483, 345, 278, 416, 294, 315, 0, 0, 363, 396,
	219, 457, 417, 638, 630, 604, 606, 639, 640, 601,
	602, 605, 641, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 0, 633, 591, 590, 0, 597, 598, 0, 607,
	608, 610, 614, 615, 616, 617, 618, 619, 589, 187,
	202, 311, 0, 385, 261, 485, 465, 461, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 321, 327,
	328, 329, 330, 347, 348, 349, 352, 355, 356, 359,
	361, 362, 365, 372, 373, 374, 375, 377, 379, 386,
	390, 398, 399, 400, 401, 402, 404, 405, 410, 411,
	412, 413, 421, 425, 443, 444, 456, 469, 474, 270,
	451, 475, 0, 320, 0, 0, 322, 254, 273, 284,
	0, 464, 422, 207, 392, 262, 196, 225, 210, 233,
	248, 251, 288, 331, 338, 367, 371, 267, 245, 223,
	389, 220, 407, 428, 429, 430, 432, 335, 240, 370,
	433, 0, 318, 434, 435, 280, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 0, 0, 588, 0, 0,
	0, 244, 593, 0, 0, 0, 309, 241, 0, 0,
	368, 0, 193, 0, 409, 228, 319, 316, 440, 255,
	247, 243, 227, 281, 326, 366, 427, 360, 600, 313,
	0, 0, 418, 339, 0, 0, 0, 0, 0, 595,
	596, 0, 0, 0, 0, 0, 0, 1733, 0, 287,
	226, 192, 351, 419, 259, 0, 87, 0, 0, 184,
	185, 186, 647, 654, 655, 656, 657, 658, 648, 650,
	0, 0, 217, 649, 224, 611, 613, 612, 620, 621,
	622, 623, 624, 625, 626, 609, 652, 659, 660, 1734,
	239, 285, 246, 238, 437, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	571, 585, 0, 599, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 583, 0, 0, 0, 0, 632, 0,
	584, 0, 0, 592, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 340, 231, 0,
	631, 0, 0, 471, 0, 0, 629, 0, 0, 0,
	0, 308, 0, 293, 188, 205, 0, 0, 350, 391,
	397, 0, 0, 0, 229, 0, 395, 364, 455, 213,
	257, 388, 369, 393, 376, 260, 0, 0, 394, 314,
	442, 383, 452, 472, 473, 237, 344, 462, 431, 468,
	484, 206, 234, 358, 424, 458, 415, 337, 438, 439,
	292, 414, 266, 191, 312, 478, 204, 403, 221, 211,
	197, 426, 450, 218, 406, 0, 0, 486, 199, 448,
	423, 333, 289, 290, 198, 0, 387, 242, 264, 232,
	353, 445, 446, 230, 487, 208, 467, 201, 0, 466,
	346, 441, 449, 334, 324, 200, 447, 332, 323, 295,
	253, 275, 381, 317, 382, 276, 342, 341, 343, 194,
	459, 0, 195, 0, 420, 460, 488, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 310, 357,
	380, 378, 384, 0, 436, 453, 463, 470, 476, 477,
	479, 480, 481, 482, 483, 345, 278, 416, 294, 315,
	0, 0, 363, 396, 219, 457, 417, 638, 630, 604,
	606, 639, 640, 601, 602, 605, 641, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 0, 633, 591, 590, 0,
	597, 598, 0, 607, 608, 610, 614, 615, 616, 617,
	618, 619, 589, 187, 202, 311, 0, 385, 261, 485,
	465, 461, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 321, 327, 328, 329, 330, 347, 348, 349,
	352, 355, 356, 359, 361, 362, 365, 372, 373, 374,
	375, 377, 379, 386, 390, 398, 399, 400, 401, 402,
	404, 405, 410, 411, 412, 413, 421, 425, 443, 444,
	456, 469, 474, 270, 451, 475, 0, 320, 0, 0,
	322, 254, 273, 284, 0, 464, 422, 207, 392, 262,
	196, 225, 210, 233, 248, 251, 288, 331, 338, 367,
	371, 267, 245, 223, 389, 220, 407, 428, 429, 430,
	432, 335, 240, 370, 78, 433, 318, 434, 435, 280,
	0, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	0, 0, 588, 0, 0, 0, 244, 593, 0, 0,
	0, 309, 241, 0, 0, 368, 0, 193, 0, 409,
	228, 319, 316, 440, 255, 247, 243, 227, 281, 326,
	366, 427, 360, 600, 313, 0, 0, 418, 339, 0,
	0, 0, 0, 0, 595, 596, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 351, 419, 259,
	0, 87, 0, 0, 184, 185, 186, 647, 654, 655,
	656, 657, 658, 648, 650, 0, 0, 217, 649, 224,
	611, 613, 612, 620, 621, 622, 623, 624, 625, 626,
	609, 652, 659, 660, 0, 239, 285, 246, 238, 437,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 571, 585, 0, 599, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 583, 0,
	0, 0, 0, 632, 0, 584, 0, 0, 592, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 340, 231, 0, 631, 0, 0, 471, 0,
	0, 629, 0, 0, 0, 0, 308, 0, 293, 188,
	205, 0, 0, 350, 391, 397, 0, 0, 0, 229,
	0, 395, 364, 455, 213, 257, 388, 369, 393, 376,
	260, 0, 0, 394, 314, 442, 383, 452, 472, 473,
	237, 344, 462, 431, 468, 484, 206, 234, 358, 424,
	458, 415, 337, 438, 439, 292, 414, 266, 191, 312,
	478, 204, 403, 221, 211, 197, 426, 450, 218, 406,
	0, 0, 486, 199, 448, 423, 333, 289, 290, 198,
	0, 387, 242, 264, 232, 353, 445, 446, 230, 487,
	208, 467, 201, 0, 466, 346, 441, 449, 334, 324,
	200, 447, 332, 323, 295, 253, 275, 381, 317, 382,
	276, 342, 341, 343, 194, 459, 0, 195, 0, 420,
	460, 488, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 310, 357, 380, 378, 384, 0, 436,
	453, 463, 470, 476, 477, 479, 480, 481, 482, 483,
	345, 278, 416, 294, 315, 0, 0, 363, 396, 219,
	457, 417, 638, 630, 604, 606, 639, 640, 601, 602,
	605, 641, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	0, 633, 591, 590, 0, 597, 598, 0, 607, 608,
	610, 614, 615, 616, 617, 618, 619, 589, 187, 202,
	311, 86, 385, 261, 485, 465, 461, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 321, 327, 328,
	329, 330, 347, 348, 349, 352, 355, 356, 359, 361,
	362, 365, 372, 373, 374, 375, 377, 379, 386, 390,
	398, 399, 400, 401, 402, 404, 405, 410, 411, 412,
	413, 421, 425, 443, 444, 456, 469, 474, 270, 451,
	475, 0, 320, 0, 0, 322, 254, 273, 284, 0,
	464, 422, 207, 392, 262, 196, 225, 210, 233, 248,
	251, 288, 331, 338, 367, 371, 267, 245, 223, 389,
	220, 407, 428, 429, 430, 432, 335, 240, 370, 433,
	0, 318, 434, 435, 280, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 0, 0, 588, 0, 0, 0,
	244, 593, 0, 0, 0, 309, 241, 0, 0, 368,
	0, 193, 0, 409, 228, 319, 316, 440, 255, 247,
	243, 227, 281, 326, 366, 427, 360, 600, 313, 0,
	0, 418, 339, 0, 0, 0, 0, 0, 595, 596,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 351, 419, 259, 0, 87, 0, 0, 184, 185,
	186, 647, 654, 655, 656, 657, 658, 648, 650, 0,
	0, 217, 649, 224, 611, 613, 612, 620, 621, 622,
	623, 624, 625, 626, 609, 652, 659, 660, 0, 239,
	285, 246, 238, 437, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 571,
	585, 0, 599, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 583, 0, 0, 0, 0, 632, 0, 584,
	0, 0, 592, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 340, 231, 0, 631,
	0, 0, 471, 0, 0, 629, 0, 0, 0, 0,
	308, 0, 293, 188, 205, 0, 0, 350, 391, 397,
	0, 0, 0, 229, 0, 395, 364, 455, 213, 257,
	388, 369, 393, 376, 260, 2627, 0, 394, 314, 442,
	383, 452, 472, 473, 237, 344, 462, 431, 468, 484,
	206, 234, 358, 424, 458, 415, 337, 438, 439, 292,
	414, 266, 191, 312, 478, 204, 403, 221, 211, 197,
	426, 450, 218, 406, 0, 0, 486, 199, 448, 423,
	333, 289, 290, 198, 0, 387, 242, 264, 232, 353,
	445, 446, 230, 487, 208, 467, 201, 0, 466, 346,
	441, 449, 334, 324, 200, 447, 332, 323, 295, 253,
	275, 381, 317, 382, 276, 342, 341, 343, 194, 459,
	0, 195, 0, 420, 460, 488, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 310, 357, 380,
	378, 384, 0, 436, 453, 463, 470, 476, 477, 479,
	480, 481, 482, 483, 345, 278, 416, 294, 315, 0,
	0, 363, 396, 219, 457, 417, 638, 630, 604, 606,
	639, 640, 601, 602, 605, 641, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 0, 633, 591, 590, 0, 597,
	598, 0, 607, 608, 610, 614, 615, 616, 617, 618,
	619, 589, 187, 202, 311, 0, 385, 261, 485, 465,
	461, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 321, 327, 328, 329, 330, 347, 348, 349, 352,
	355, 356, 359, 361, 362, 365, 372, 373, 374, 375,
	377, 379, 386, 390, 398, 399, 400, 401, 402, 404,
	405, 410, 411, 412, 413, 421, 425, 443, 444, 456,
	469, 474, 270, 451, 475, 0, 320, 0, 0, 322,
	254, 273, 284, 0, 464, 422, 207, 392, 262, 196,
	225, 210, 233, 248, 251, 288, 331, 338, 367, 371,
	267, 245, 223, 389, 220, 407, 428, 429, 430, 432,
	335, 240, 370, 433, 0, 318, 434, 435, 280, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 0, 0,
	588, 0, 0, 0, 244, 593, 0, 0, 0, 309,
	241, 0, 0, 368, 0, 193, 0, 409, 228, 319,
	316, 440, 255, 247, 243, 227, 281, 326, 366, 427,
	360, 600, 313, 0, 0, 418, 339, 0, 0, 0,
	0, 0, 595, 596, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 351, 419, 259, 0, 87,
	0, 1250, 184, 185, 186, 647, 654, 655, 656, 657,
	658, 648, 650, 0, 0, 217, 649, 224, 611, 613,
	612, 620, 621, 622, 623, 624, 625, 626, 609, 652,
	659, 660, 0, 239, 285, 246, 238, 437, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 571, 585, 0, 599, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 583, 0, 0, 0,
	0, 632, 0, 584, 0, 0, 592, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 683,
	684, 685, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 594, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	340, 231, 0, 631, 0, 0, 471, 0, 0, 629,
	0, 0, 0, 0, 308, 0, 293, 188, 205, 0,
	0, 350, 391, 397, 0, 0, 0, 229, 0, 395,
	364, 455, 213, 257, 388, 369, 393, 376, 260, 0,
	0, 394, 314, 442, 383, 452, 472, 473, 237, 344,
	462, 431, 468, 484, 206, 234, 358, 424, 458, 415,
	337, 438, 439, 292, 414, 266, 191, 312, 478, 204,
	403, 221, 211, 197, 426, 450, 218, 406, 0, 0,
	486, 199, 448, 423, 333, 289, 290, 198, 0, 387,
	242, 264, 232, 353, 445, 446, 230, 487, 208, 467,
	201, 0, 466, 346, 441, 449, 334, 324, 200, 447,
	332, 323, 295, 253, 275, 381, 317, 382, 276, 342,
	341, 343, 194, 459, 0, 195, 0, 420, 460, 488,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 310, 357, 380, 378, 384, 0, 436, 453, 463,
	470, 476, 477, 479, 480, 481, 482, 483, 345, 278,
	416, 294, 315, 0, 0, 363, 396, 219, 457, 417,
	638, 630, 604, 606, 639, 640, 601, 602, 605, 641,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 0, 633,
	591, 590, 0, 597, 598, 0, 607, 608, 610, 614,
	615, 616, 617, 618, 619, 589, 187, 202, 311, 0,
	385, 261, 485, 465, 461, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 321, 327, 328, 329, 330,
	347, 348, 349, 352, 355, 356, 359, 361, 362, 365,
	372, 373, 374, 375, 377, 379, 386, 390, 398, 399,
	400, 401, 402, 404, 405, 410, 411, 412, 413, 421,
	425, 443, 444, 456, 469, 474, 270, 451, 475, 0,
	320, 0, 0, 322, 254, 273, 284, 0, 464, 422,
	207, 392, 262, 196, 225, 210, 233, 248, 251, 288,
	331, 338, 367, 371, 267, 245, 223, 389, 220, 407,
	428, 429, 430, 432, 335, 240, 370, 433, 0, 318,
	434, 435, 280, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 0, 0, 588, 0, 0, 0, 244, 593,
	0, 0, 0, 309, 241, 0, 0, 368, 0, 193,
	0, 409, 228, 319, 316, 440, 255, 247, 243, 227,
	281, 326, 366, 427, 360, 600, 313, 0, 0, 418,
	339, 0, 0, 0, 0, 0, 595, 596, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 351,
	419, 259, 0, 87, 0, 0, 184, 185, 186, 647,
	654, 655, 656, 657, 658, 648, 650, 0, 0, 217,
	649, 224, 611, 613, 612, 620, 621, 622, 623, 624,
	625, 626, 609, 652, 659, 660, 0, 239, 285, 246,
	238, 437, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 571, 585, 0,
	599, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	583, 741, 0, 0, 0, 632, 0, 584, 0, 0,
	592, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 340, 231, 0, 631, 0, 0,
	471, 0, 0, 629, 0, 0, 0, 0, 308, 0,
	293, 188, 205, 0, 0, 350, 391, 397, 0, 0,
	0, 229, 0, 395, 364, 455, 213, 257, 388, 369,
	393, 376, 260, 0, 0, 394, 314, 442, 383, 452,
	472, 473, 237, 344, 462, 431, 468, 484, 206, 234,
	358, 424, 458, 415, 337, 438, 439, 292, 414, 266,
	191, 312, 478, 204, 403, 221, 211, 197, 426, 450,
	218, 406, 0, 0, 486, 199, 448, 423, 333, 289,
	290, 198, 0, 387, 242, 264, 232, 353, 445, 446,
	230, 487, 208, 467, 201, 0, 466, 346, 441, 449,
	334, 324, 200, 447, 332, 323, 295, 253, 275, 381,
	317, 382, 276, 342, 341, 343, 194, 459, 0, 195,
	0, 420, 460, 488, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 310, 357, 380, 378, 384,
	0, 436, 453, 463, 470, 476, 477, 479, 480, 481,
	482, 483, 345, 278, 416, 294, 315, 0, 0, 363,
	396, 219, 457, 417, 638, 630, 604, 606, 639, 640,
	601, 602, 605, 641, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 0, 633, 591, 590, 0, 597, 598, 0,
	607, 608, 610, 614, 615, 616, 617, 618, 619, 589,
	187, 202, 311, 0, 385, 261, 485, 465, 461, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 321,
	327, 328, 329, 330, 347, 348, 349, 352, 355, 356,
	359, 361, 362, 365, 372, 373, 374, 375, 377, 379,
	386, 390, 398, 399, 400, 401, 402, 404, 405, 410,
	411, 412, 413, 421, 425, 443, 444, 456, 469, 474,
	270, 451, 475, 0, 320, 0, 0, 322, 254, 273,
	284, 0, 464, 422, 207, 392, 262, 196, 225, 210,
	233, 248, 251, 288, 331, 338, 367, 371, 267, 245,
	223, 389, 220, 407, 428, 429, 430, 432, 335, 240,
	370, 433, 0, 318, 434, 435, 280, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 0, 0, 588, 0,
	0, 0, 244, 593, 0, 0, 0, 309, 241, 0,
	0, 368, 0, 193, 0, 409, 228, 319, 316, 440,
	255, 247, 243, 227, 281, 326, 366, 427, 360, 600,
	313, 0, 0, 418, 339, 0, 0, 0, 0, 0,
	595, 596, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 351, 419, 259, 0, 87, 0, 0,
	184, 185, 186, 647, 654, 655, 656, 657, 658, 648,
	650, 0, 0, 217, 649, 224, 611, 613, 612, 620,
	621, 622, 623, 624, 625, 626, 609, 652, 659, 660,
	0, 239, 285, 246, 238, 437, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 571, 585, 0, 599, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 583, 0, 0, 0, 0, 632,
	0, 584, 0, 0, 592, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 340, 231,
	0, 631, 0, 0, 471, 0, 0, 629, 0, 0,
	0, 0, 308, 0, 293, 188, 205, 0, 0, 350,
	391, 397, 0, 0, 0, 229, 0, 395, 364, 455,
	213, 257, 388, 369, 393, 376, 260, 0, 0, 394,
	314, 442, 383, 452, 472, 473, 237, 344, 462, 431,
	468, 484, 206, 234, 358, 424, 458, 415, 337, 438,
	439, 292, 414, 266, 191, 312, 478, 204, 403, 221,
	211, 197, 426, 450, 218, 406, 0, 0, 486, 199,
	448, 423, 333, 289, 290, 198, 0, 387, 242, 264,
	232, 353, 445, 446, 230, 487, 208, 467, 201, 0,
	466, 346, 441, 449, 334, 324, 200, 447, 332, 323,
	295, 253, 275, 381, 317, 382, 276, 342, 341, 343,
	194, 459, 0, 195, 0, 420, 460, 488, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 310,
	357, 380, 378, 384, 0, 436, 453, 463, 470, 476,
	477, 479, 480, 481, 482, 483, 345, 278, 416, 294,
	315, 0, 0, 363, 396, 219, 457, 417, 638, 630,
	604, 606, 639, 640, 601, 602, 605, 641, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 0, 633, 591, 590,
	0, 597, 598, 0, 607, 608, 610, 614, 615, 616,
	617, 618, 619, 589, 187, 202, 311, 0, 385, 261,
	485, 465, 461, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 321, 327, 328, 329, 330, 347, 348,
	349, 352, 355, 356, 359, 361, 362, 365, 372, 373,
	374, 375, 377, 379, 386, 390, 398, 399, 400, 401,
	402, 404, 405, 410, 411, 412, 413, 421, 425, 443,
	444, 456, 469, 474, 270, 451, 475, 0, 320, 0,
	0, 322, 254, 273, 284, 0, 464, 422, 207, 392,
	262, 196, 225, 210, 233, 248, 251, 288, 331, 338,
	367, 371, 267, 245, 223, 389, 220, 407, 428, 429,
	430, 432, 335, 240, 370, 433, 0, 318, 434, 435,
	280, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	0, 0, 588, 0, 0, 0, 244, 593, 0, 0,
	0, 309, 241, 0, 0, 368, 0, 193, 0, 409,
	228, 319, 316, 440, 255, 247, 243, 227, 281, 326,
	366, 427, 360, 600, 313, 0, 0, 418, 339, 0,
	0, 0, 0, 0, 595, 596, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 351, 419, 259,
	0, 87, 0, 0, 184, 185, 186, 647, 654, 655,
	656, 657, 658, 648, 650, 0, 0, 217, 649, 224,
	611, 613, 612, 620, 621, 622, 623, 624, 625, 626,
	609, 652, 659, 660, 0, 239, 285, 246, 238, 437,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 599, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 583, 0,
	0, 0, 0, 632, 0, 584, 0, 0, 592, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	594, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 340, 231, 0, 631, 0, 0, 471, 0,
	0, 629, 0, 0, 0, 0, 308, 0, 293, 188,
	205, 0, 0, 350, 391, 397, 0, 0, 0, 229,
	0, 395, 364, 455, 213, 257, 388, 369, 393, 376,
	260, 0, 0, 394, 314, 442, 383, 452, 472, 473,
	237, 344, 462, 431, 468, 484, 206, 234, 358, 424,
	458, 415, 337, 438, 439, 292, 414, 266, 191, 312,
	478, 204, 403, 221, 211, 197, 426, 450, 218, 406,
	0, 0, 486, 199, 448, 423, 333, 289, 290, 198,
	0, 387, 242, 264, 232, 353, 445, 446, 230, 487,
	208, 467, 201, 0, 466, 346, 441, 449, 334, 324,
	200, 447, 332, 323, 295, 253, 275, 381, 317, 382,
	276, 342, 341, 343, 194, 459, 0, 195, 0, 420,
	460, 488, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 310, 357, 380, 378, 384, 0, 436,
	453, 463, 470, 476, 477, 479, 480, 481, 482, 483,
	345, 278, 416, 294, 315, 0, 0, 363, 396, 219,
	457, 417, 638, 630, 604, 606, 639, 640, 601, 602,
	605, 641, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	0, 633, 591, 590, 0, 597, 598, 0, 607, 608,
	610, 614, 615, 616, 617, 618, 619, 589, 187, 202,
	311, 0, 385, 261, 485, 465, 461, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 321, 327, 328,
	329, 330, 347, 348, 349, 352, 355, 356, 359, 361,
	362, 365, 372, 373, 374, 375, 377, 379, 386, 390,
	398, 399, 400, 401, 402, 404, 405, 410, 411, 412,
	413, 421, 425, 443, 444, 456, 469, 474, 270, 451,
	475, 0, 320, 0, 0, 322, 254, 273, 284, 0,
	464, 422, 207, 392, 262, 196, 225, 210, 233, 248,
	251, 288, 331, 338, 367, 371, 267, 245, 223, 389,
	220, 407, 428, 429, 430, 432, 335, 240, 370, 433,
	0, 318, 434, 435, 280, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 309, 241, 0, 0, 368,
	0, 193, 0, 409, 228, 319, 316, 440, 255, 247,
	243, 227, 281, 326, 366, 427, 360, 0, 313, 0,
	0, 418, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 351, 419, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 654, 655, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 305, 307, 306, 299, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 437, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 340, 231, 0, 0,
	0, 0, 471, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 293, 188, 205, 0, 0, 350, 391, 397,
	0, 0, 0, 229, 0, 395, 364, 455, 213, 257,
	388, 369, 393, 376, 260, 0, 0, 394, 314, 442,
	383, 452, 472, 473, 237, 344, 462, 431, 468, 484,
	206, 234, 358, 424, 458, 415, 337, 438, 439, 292,
	414, 266, 191, 312, 478, 204, 403, 221, 211, 197,
	426, 450, 218, 406, 0, 0, 486, 199, 448, 423,
	333, 289, 290, 198, 0, 387, 242, 264, 232, 353,
	445, 446, 230, 487, 208, 467, 201, 0, 466, 346,
	441, 449, 334, 324, 200, 447, 332, 323, 295, 253,
	275, 381, 317, 382, 276, 342, 341, 343, 194, 459,
	0, 195, 0, 420, 460, 488, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 310, 357, 380,
	378, 384, 0, 436, 453, 463, 470, 476, 477, 479,
	480, 481, 482, 483, 345, 278, 416, 294, 315, 0,
	0, 363, 396, 219, 457, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 325, 408, 454, 296, 297,
	298, 0, 187, 202, 311, 0, 385, 261, 485, 465,
	461, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 321, 327, 328, 329, 330, 347, 348, 349, 352,
	355, 356, 359, 361, 362, 365, 372, 373, 374, 375,
	377, 379, 386, 390, 398, 399, 400, 401, 402, 404,
	405, 410, 411, 412, 413, 421, 425, 443, 444, 456,
	469, 474, 270, 451, 475, 0, 320, 0, 0, 322,
	254, 273, 284, 0, 464, 422, 207, 392, 262, 196,
	225, 210, 233, 248, 251, 288, 331, 338, 367, 371,
	267, 245, 223, 389, 220, 407, 428, 429, 430, 432,
	335, 240, 370, 433, 0, 318, 434, 435, 280, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 309,
	241, 0, 0, 368, 0, 193, 0, 409, 228, 319,
	316, 440, 255, 247, 243, 227, 281, 326, 366, 427,
	360, 0, 313, 0, 0, 418, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 351, 419, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 305, 307,
	306, 299, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 437, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	340, 231, 0, 0, 0, 955, 471, 0, 0, 0,
	0, 0, 952, 953, 308, 916, 293, 188, 205, 946,
	950, 350, 391, 397, 0, 0, 0, 229, 0, 395,
	364, 455, 213, 257, 388, 369, 393, 376, 260, 0,
	0, 394, 314, 442, 383, 452, 472, 473, 237, 344,
	462, 431, 468, 484, 206, 234, 358, 424, 458, 415,
	337, 438, 439, 292, 414, 266, 191, 312, 478, 204,
	403, 221, 211, 197, 426, 450, 218, 406, 0, 0,
	486, 199, 448, 423, 333, 289, 290, 198, 0, 387,
	242, 264, 232, 353, 445, 446, 230, 487, 208, 467,
	201, 0, 466, 346, 441, 449, 334, 324, 200, 447,
	332, 323, 295, 253, 275, 381, 317, 382, 276, 342,
	341, 343, 194, 459, 0, 195, 0, 420, 460, 488,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 310, 357, 380, 378, 384, 0, 436, 453, 463,
	470, 476, 477, 479, 480, 481, 482, 483, 345, 278,
	416, 294, 315, 0, 0, 363, 396, 219, 457, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 325,
	408, 454, 296, 297, 298, 0, 187, 202, 311, 0,
	385, 261, 485, 465, 461, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 321, 327, 328, 329, 330,
	347, 348, 349, 352, 355, 356, 359, 361, 362, 365,
	372, 373, 374, 375, 377, 379, 386, 390, 398, 399,
	400, 401, 402, 404, 405, 410, 411, 412, 413, 421,
	425, 443, 444, 456, 469, 474, 270, 451, 475, 0,
	320, 0, 0, 322, 254, 273, 284, 0, 464, 422,
	207, 392, 262, 196, 225, 210, 233, 248, 251, 288,
	331, 338, 367, 371, 267, 245, 223, 389, 220, 407,
	428, 429, 430, 432, 335, 240, 370, 78, 433, 318,
	434, 435, 280, 0, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 309, 241, 0, 0, 368, 0,
	193, 0, 409, 228, 319, 316, 440, 255, 247, 243,
	227, 281, 326, 366, 427, 360, 0, 313, 0, 0,
	418, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	351, 419, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 305, 307, 306, 299, 300, 301, 302,
	0, 303, 304, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 437, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 340, 231, 0, 0, 0,
	0, 471, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 293, 188, 205, 0, 0, 350, 391, 397, 0,
	0, 0, 229, 0, 395, 364, 455, 213, 257, 388,
	369, 393, 376, 260, 0, 0, 394, 314, 442, 383,
	452, 472, 473, 237, 344, 462, 431, 468, 484, 206,
	234, 358, 424, 458, 415, 337, 438, 439, 292, 414,
	266, 191, 312, 478, 204, 403, 221, 211, 197, 426,
	450, 218, 406, 0, 0, 486, 199, 448, 423, 333,
	289, 290, 198, 0, 387, 242, 264, 232, 353, 445,
	446, 230, 487, 208, 467, 201, 0, 466, 346, 441,
	449, 334, 324, 200, 447, 332, 323, 295, 253, 275,
	381, 317, 382, 276, 342, 341, 343, 194, 459, 0,
	195, 0, 420, 460, 488, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 310, 357, 380, 378,
	384, 0, 436, 453, 463, 470, 476, 477, 479, 480,
	481, 482, 483, 345, 278, 416, 294, 315, 0, 0,
	363, 396, 219, 457, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 325, 408, 454, 296, 297, 298,
	0, 187, 202, 311, 86, 385, 261, 485, 465, 461,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 1721,
	0, 0, 1720, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	321, 327, 328, 329, 330, 347, 348, 349, 352, 355,
	356, 359, 361, 362, 365, 372, 373, 374, 375, 377,
	379, 386, 390, 398, 399, 400, 401, 402, 404, 405,
	410, 411, 412, 413, 421, 425, 443, 444, 456, 469,
	474, 270, 451, 475, 0, 320, 0, 0, 322, 254,
	273, 284, 0, 464, 422, 207, 392, 262, 196, 225,
	210, 233, 248, 251, 288, 331, 338, 367, 371, 267,
	245, 223, 389, 220, 407, 428, 429, 430, 432, 335,
	240, 370, 433, 0, 318, 434, 435, 280, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 0, 1270, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 309, 241,
	0, 0, 368, 0, 193, 0, 409, 228, 319, 316,
	440, 255, 247, 243, 227, 281, 326, 366, 427, 360,
	0, 313, 0, 0, 418, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 351, 419, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 305, 307, 306,
	299, 300, 301, 302, 0, 303, 304, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 437, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 1120, 0,
	1121, 1122, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 340,
	231, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 293, 188, 205, 0, 0,
	350, 391, 397, 0, 0, 0, 229, 0, 395, 364,
	455, 213, 257, 388, 369, 393, 376, 260, 0, 0,
	394, 314, 442, 383, 452, 472, 473, 237, 344, 462,
	431, 468, 484, 206, 234, 358, 424, 458, 415, 337,
	438, 439, 292, 414, 266, 191, 312, 478, 204, 403,
	221, 211, 197, 426, 450, 218, 406, 0, 0, 486,
	199, 448, 423, 333, 289, 290, 198, 0, 387, 242,
	264, 232, 353, 445, 446, 230, 487, 208, 467, 201,
	0, 466, 346, 441, 449, 334, 324, 200, 447, 332,
	323, 295, 253, 275, 381, 317, 382, 276, 342, 341,
	343, 194, 459, 0, 195, 0, 420, 460, 488, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	310, 357, 380, 378, 384, 0, 436, 453, 463, 470,
	476, 477, 479, 480, 481, 482, 483, 345, 278, 416,
	294, 315, 0, 0, 363, 396, 219, 457, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 325, 408,
	454, 296, 297, 298, 0, 187, 202, 311, 0, 385,
	261, 485, 465, 461, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 321, 327, 328, 329, 330, 347,
	348, 349, 352, 355, 356, 359, 361, 362, 365, 372,
	373, 374, 375, 377, 379, 386, 390, 398, 399, 400,
	401, 402, 404, 405, 410, 411, 412, 413, 421, 425,
	443, 444, 456, 469, 474, 270, 451, 475, 0, 320,
	0, 0, 322, 254, 273, 284, 0, 464, 422, 207,
	392, 262, 196, 225, 210, 233, 248, 251, 288, 331,
	338, 367, 371, 267, 245, 223, 389, 220, 407, 428,
	429, 430, 432, 335, 240, 370, 433, 0, 318, 434,
	435, 280, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 309, 241, 0, 0, 368, 0, 193, 0,
	409, 228, 319, 316, 440, 255, 247, 243, 227, 281,
	326, 366, 427, 360, 0, 313, 0, 0, 418, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 351, 419,
	259, 0, 0, 0, 0, 184, 185, 186, 1212, 1215,
	0, 0, 0, 0, 1211, 1214, 0, 0, 217, 1210,
	224, 305, 307, 306, 299, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	437, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 340, 231, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 293,
	188, 205, 0, 0, 350, 391, 397, 0, 0, 0,
	229, 0, 395, 364, 455, 213, 257, 388, 369, 393,
	376, 260, 0, 0, 394, 314, 442, 383, 452, 472,
	473, 237, 344, 462, 431, 468, 484, 206, 234, 358,
	424, 458, 415, 337, 438, 439, 292, 414, 266, 191,
	312, 478, 204, 403, 221, 211, 197, 426, 450, 218,
	406, 0, 0, 486, 199, 448, 423, 333, 289, 290,
	198, 0, 387, 242, 264, 232, 353, 445, 446, 230,
	487, 208, 467, 201, 0, 466, 346, 441, 449, 334,
	324, 200, 447, 332, 323, 295, 253, 275, 381, 317,
	382, 276, 342, 341, 343, 194, 459, 0, 195, 0,
	420, 460, 488, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 310, 357, 380, 378, 384, 0,
	436, 453, 463, 470, 476, 477, 479, 480, 481, 482,
	483, 345, 278, 416, 294, 315, 0, 0, 363, 396,
	219, 457, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 325, 408, 454, 296, 297, 298, 0, 187,
	202, 311, 0, 385, 261, 485, 465, 461, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 321, 327,
	328, 329, 330, 347, 348, 349, 352, 355, 356, 359,
	361, 362, 365, 372, 373, 374, 375, 377, 379, 386,
	390, 398, 399, 400, 401, 402, 404, 405, 410, 411,
	412, 413, 421, 425, 443, 444, 456, 469, 474, 270,
	451, 475, 0, 320, 0, 0, 322, 254, 273, 284,
	0, 464, 422, 207, 392, 262, 196, 225, 210, 233,
	248, 251, 288, 331, 338, 367, 371, 267, 245, 223,
	389, 220, 407, 428, 429, 430, 432, 335, 240, 370,
	78, 433, 318, 434, 435, 280, 0, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 309, 241, 0,
	0, 368, 0, 193, 0, 409, 228, 319, 316, 440,
	255, 247, 243, 227, 281, 326, 366, 427, 360, 0,
	313, 0, 0, 418, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 351, 419, 259, 0, 87, 0, 1250,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 305, 307, 306, 299,
	300, 301, 302, 0, 303, 304, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 437, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 340, 231,
	0, 0, 0, 0, 471, 0, 0, 0, 0, 0,
	0, 0, 308, 0, 293, 188, 205, 0, 0, 350,
	391, 397, 0, 0, 0, 229, 0, 395, 364, 455,
	213, 257, 388, 369, 393, 376, 260, 0, 0, 394,
	314, 442, 383, 452, 472, 473, 237, 344, 462, 431,
	468, 484, 206, 234, 358, 424, 458, 415, 337, 438,
	439, 292, 414, 266, 191, 312, 478, 204, 403, 221,
	211, 197, 426, 450, 218, 406, 0, 0, 486, 199,
	448, 423, 333, 289, 290, 198, 0, 387, 242, 264,
	232, 353, 445, 446, 230, 487, 208, 467, 201, 0,
	466, 346, 441, 449, 334, 324, 200, 447, 332, 323,
	295, 253, 275, 381, 317, 382, 276, 342, 341, 343,
	194, 459, 0, 195, 0, 420, 460, 488, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 310,
	357, 380, 378, 384, 0, 436, 453, 463, 470, 476,
	477, 479, 480, 481, 482, 483, 345, 278, 416, 294,
	315, 0, 0, 363, 396, 219, 457, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 325, 408, 454,
	296, 297, 298, 0, 187, 202, 311, 86, 385, 261,
	485, 465, 461, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 321, 327, 328, 329, 330, 347, 348,
	349, 352, 355, 356, 359, 361, 362, 365, 372, 373,
	374, 375, 377, 379, 386, 390, 398, 399, 400, 401,
	402, 404, 405, 410, 411, 412, 413, 421, 425, 443,
	444, 456, 469, 474, 270, 451, 475, 0, 320, 0,
	0, 322, 254, 273, 284, 0, 464, 422, 207, 392,
	262, 196, 225, 210, 233, 248, 251, 288, 331, 338,
	367, 371, 267, 245, 223, 389, 220, 407, 428, 429,
	430, 432, 335, 240, 370, 433, 0, 318, 434, 435,
	280, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 309, 241, 0, 0, 368, 0, 193, 0, 409,
	228, 319, 316, 440, 255, 247, 243, 227, 281, 326,
	366, 427, 360, 0, 313, 0, 0, 418, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 351, 419, 259,
	0, 87, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	305, 307, 306, 299, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 437,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 340, 231, 0, 0, 0, 0, 471, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 293, 188,
	205, 0, 0, 350, 391, 397, 0, 0, 0, 229,
	0, 395, 364, 455, 213, 257, 388, 369, 393, 376,
	260, 0, 0, 394, 314, 442, 383, 452, 472, 473,
	237, 344, 462, 431, 468, 484, 206, 234, 358, 424,
	458, 415, 337, 438, 439, 292, 414, 266, 191, 312,
	478, 204, 403, 221, 211, 197, 426, 450, 218, 406,
	0, 0, 486, 199, 448, 423, 333, 289, 290, 198,
	0, 387, 242, 264, 232, 353, 445, 446, 230, 487,
	208, 467, 201, 0, 466, 346, 441, 449, 334, 324,
	200, 447, 332, 323, 295, 253, 275, 381, 317, 382,
	276, 342, 341, 343, 194, 459, 0, 195, 0, 420,
	460, 488, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 310, 357, 380, 378, 384, 0, 436,
	453, 463, 470, 476, 477, 479, 480, 481, 482, 483,
	345, 278, 416, 294, 315, 0, 0, 363, 396, 219,
	457, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 325, 408, 454, 296, 297, 298, 0, 187, 202,
	311, 0, 385, 261, 485, 465, 461, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 1720,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 321, 327, 328,
	329, 330, 347, 348, 349, 352, 355, 356, 359, 361,
	362, 365, 372, 373, 374, 375, 377, 379, 386, 390,
	398, 399, 400, 401, 402, 404, 405, 410, 411, 412,
	413, 421, 425, 443, 444, 456, 469, 474, 270, 451,
	475, 0, 320, 0, 0, 322, 254, 273, 284, 0,
	464, 422, 207, 392, 262, 196, 225, 210, 233, 248,
	251, 288, 331, 338, 367, 371, 267, 245, 223, 389,
	220, 407, 428, 429, 430, 432, 335, 240, 370, 433,
	0, 318, 434, 435, 280, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 0, 1673, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 309, 241, 0, 0, 368,
	0, 193, 0, 409, 228, 319, 316, 440, 255, 247,
	243, 227, 281, 326, 366, 427, 360, 0, 313, 0,
	0, 418, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 351, 419, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1442, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 305, 307, 306, 299, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 437, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 340, 231, 0, 0,
	0, 0, 471, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 293, 188, 205, 0, 0, 350, 391, 397,
	0, 0, 0, 229, 0, 395, 364, 455, 213, 257,
	388, 369, 393, 376, 260, 0, 1671, 394, 314, 442,
	383, 452, 472, 473, 237, 344, 462, 431, 468, 484,
	206, 234, 358, 424, 458, 415, 337, 438, 439, 292,
	414, 266, 191, 312, 478, 204, 403, 221, 211, 197,
	426, 450, 218, 406, 0, 0, 486, 199, 448, 423,
	333, 289, 290, 198, 0, 387, 242, 264, 232, 353,
	445, 446, 230, 487, 208, 467, 201, 0, 466, 346,
	441, 449, 334, 324, 200, 447, 332, 323, 295, 253,
	275, 381, 317, 382, 276, 342, 341, 343, 194, 459,
	0, 195, 0, 420, 460, 488, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 310, 357, 380,
	378, 384, 0, 436, 453, 463, 470, 476, 477, 479,
	480, 481, 482, 483, 345, 278, 416, 294, 315, 0,
	0, 363, 396, 219, 457, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 325, 408, 454, 296, 297,
	298, 0, 187, 202, 311, 0, 385, 261, 485, 465,
	461, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 321, 327, 328, 329, 330, 347, 348, 349, 352,
	355, 356, 359, 361, 362, 365, 372, 373, 374, 375,
	377, 379, 386, 390, 398, 399, 400, 401, 402, 404,
	405, 410, 411, 412, 413, 421, 425, 443, 444, 456,
	469, 474, 270, 451, 475, 0, 320, 0, 0, 322,
	254, 273, 284, 0, 464, 422, 207, 392, 262, 196,
	225, 210, 233, 248, 251, 288, 331, 338, 367, 371,
	267, 245, 223, 389, 220, 407, 428, 429, 430, 432,
	335, 240, 370, 433, 0, 318, 434, 435, 280, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 309,
	241, 0, 0, 368, 0, 193, 0, 409, 228, 319,
	316, 440, 255, 247, 243, 227, 281, 326, 366, 427,
	360, 0, 313, 0, 0, 418, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 351, 419, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 305, 307,
	306, 299, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 437, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 910,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	340, 231, 0, 0, 0, 0, 471, 0, 0, 0,
	0, 0, 0, 0, 308, 916, 293, 188, 205, 914,
	0, 350, 391, 397, 0, 0, 0, 229, 0, 395,
	364, 455, 213, 257, 388, 369, 393, 376, 260, 0,
	0, 394, 314, 442, 383, 452, 472, 473, 237, 344,
	462, 431, 468, 484, 206, 234, 358, 424, 458, 415,
	337, 438, 439, 292, 414, 266, 191, 312, 478, 204,
	403, 221, 211, 197, 426, 450, 218, 406, 0, 0,
	486, 199, 448, 423, 333, 289, 290, 198, 0, 387,
	242, 264, 232, 353, 445, 446, 230, 487, 208, 467,
	201, 0, 466, 346, 441, 449, 334, 324, 200, 447,
	332, 323, 295, 253, 275, 381, 317, 382, 276, 342,
	341, 343, 194, 459, 0, 195, 0, 420, 460, 488,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 310, 357, 380, 378, 384, 0, 436, 453, 463,
	470, 476, 477, 479, 480, 481, 482, 483, 345, 278,
	416, 294, 315, 0, 0, 363, 396, 219, 457, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 325,
	408, 454, 296, 297, 298, 0, 187, 202, 311, 0,
	385, 261, 485, 465, 461, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 321, 327, 328, 329, 330,
	347, 348, 349, 352, 355, 356, 359, 361, 362, 365,
	372, 373, 374, 375, 377, 379, 386, 390, 398, 399,
	400, 401, 402, 404, 405, 410, 411, 412, 413, 421,
	425, 443, 444, 456, 469, 474, 270, 451, 475, 0,
	320, 0, 0, 322, 254, 273, 284, 0, 464, 422,
	207, 392, 262, 196, 225, 210, 233, 248, 251, 288,
	331, 338, 367, 371, 267, 245, 223, 389, 220, 407,
	428, 429, 430, 432, 335, 240, 370, 433, 0, 318,
	434, 435, 280, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 0, 1673, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 309, 241, 0, 0, 368, 0, 193,
	0, 409, 228, 319, 316, 440, 255, 247, 243, 227,
	281, 326, 366, 427, 360, 0, 313, 0, 0, 418,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 351,
	419, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1442, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 305, 307, 306, 299, 300, 301, 302, 0,
	303, 304, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 437, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 340, 231, 0, 0, 0, 0,
	471, 0, 0, 0, 0, 0, 0, 0, 308, 0,
	293, 188, 205, 0, 0, 350, 391, 397, 0, 0,
	0, 229, 0, 395, 364, 455, 213, 257, 388, 369,
	393, 376, 260, 0, 0, 394, 314, 442, 383, 452,
	472, 473, 237, 344, 462, 431, 468, 484, 206, 234,
	358, 424, 458, 415, 337, 438, 439, 292, 414, 266,
	191, 312, 478, 204, 403, 221, 211, 197, 426, 450,
	218, 406, 0, 0, 486, 199, 448, 423, 333, 289,
	290, 198, 0, 387, 242, 264, 232, 353, 445, 446,
	230, 487, 208, 467, 201, 0, 466, 346, 441, 449,
	334, 324, 200, 447, 332, 323, 295, 253, 275, 381,
	317, 382, 276, 342, 341, 343, 194, 459, 0, 195,
	0, 420, 460, 488, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 310, 357, 380, 378, 384,
	0, 436, 453, 463, 470, 476, 477, 479, 480, 481,
	482, 483, 345, 278, 416, 294, 315, 0, 0, 363,
	396, 219, 457, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 325, 408, 454, 296, 297, 298, 0,
	187, 202, 311, 0, 385, 261, 485, 465, 461, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 321,
	327, 328, 329, 330, 347, 348, 349, 352, 355, 356,
	359, 361, 362, 365, 372, 373, 374, 375, 377, 379,
	386, 390, 398, 399, 400, 401, 402, 404, 405, 410,
	411, 412, 413, 421, 425, 443, 444, 456, 469, 474,
	270, 451, 475, 0, 320, 0, 0, 322, 254, 273,
	284, 0, 464, 422, 207, 392, 262, 196, 225, 210,
	233, 248, 251, 288, 331, 338, 367, 371, 267, 245,
	223, 389, 220, 407, 428, 429, 430, 432, 335, 240,
	370, 433, 0, 318, 434, 435, 280, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 309, 241, 0,
	0, 368, 0, 193, 0, 409, 228, 319, 316, 440,
	255, 247, 243, 227, 281, 326, 366, 427, 360, 0,
	313, 0, 0, 418, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 351, 419, 259, 0, 0, 0, 1250,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 305, 307, 306, 299,
	300, 301, 302, 0, 303, 304, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 437, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 340, 231,
	0, 0, 0, 0, 471, 0, 0, 0, 2595, 0,
	0, 0, 308, 0, 293, 188, 205, 0, 0, 350,
	391, 397, 0, 0, 0, 229, 0, 395, 364, 455,
	213, 257, 388, 369, 393, 376, 260, 0, 0, 394,
	314, 442, 383, 452, 472, 473, 237, 344, 462, 431,
	468, 484, 206, 234, 358, 424, 458, 415, 337, 438,
	439, 292, 414, 266, 191, 312, 478, 204, 403, 221,
	211, 197, 426, 450, 218, 406, 0, 0, 486, 199,
	448, 423, 333, 289, 290, 198, 0, 387, 242, 264,
	232, 353, 445, 446, 230, 487, 208, 467, 201, 0,
	466, 346, 441, 449, 334, 324, 200, 447, 332, 323,
	295, 253, 275, 381, 317, 382, 276, 342, 341, 343,
	194, 459, 0, 195, 0, 420, 460, 488, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 310,
	357, 380, 378, 384, 0, 436, 453, 463, 470, 476,
	477, 479, 480, 481, 482, 483, 345, 278, 416, 294,
	315, 0, 0, 363, 396, 219, 457, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 325, 408, 454,
	296, 297, 298, 0, 187, 202, 311, 0, 385, 261,
	485, 465, 461, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 321, 327, 328, 329, 330, 347, 348,
	349, 352, 355, 356, 359, 361, 362, 365, 372, 373,
	374, 375, 377, 379, 386, 390, 398, 399, 400, 401,
	402, 404, 405, 410, 411, 412, 413, 421, 425, 443,
	444, 456, 469, 474, 270, 451, 475, 0, 320, 0,
	0, 322, 254, 273, 284, 0, 464, 422, 207, 392,
	262, 196, 225, 210, 233, 248, 251, 288, 331, 338,
	367, 371, 267, 245, 223, 389, 220, 407, 428, 429,
	430, 432, 335, 240, 370, 433, 0, 318, 434, 435,
	280, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 309, 241, 0, 0, 368, 0, 193, 0, 409,
	228, 319, 316, 440, 255, 247, 243, 227, 281, 326,
	366, 427, 360, 0, 313, 0, 0, 418, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 351, 419, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	305, 307, 306, 299, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 437,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 340, 231, 0, 0, 0, 0, 471, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 293, 188,
	205, 0, 0, 350, 391, 397, 0, 0, 0, 229,
	0, 395, 364, 455, 213, 257, 388, 369, 393, 376,
	260, 0, 0, 394, 314, 442, 383, 452, 472, 473,
	237, 344, 462, 431, 468, 484, 206, 234, 358, 424,
	458, 415, 337, 438, 439, 292, 414, 266, 191, 312,
	478, 204, 403, 221, 211, 197, 426, 450, 218, 406,
	0, 0, 486, 199, 448, 423, 333, 289, 290, 198,
	0, 387, 242, 264, 232, 353, 445, 446, 230, 487,
	208, 467, 201, 0, 466, 346, 441, 449, 334, 324,
	200, 447, 332, 323, 295, 253, 275, 381, 317, 382,
	276, 342, 341, 343, 194, 459, 0, 195, 0, 420,
	460, 488, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 310, 357, 380, 378, 384, 0, 436,
	453, 463, 470, 476, 477, 479, 480, 481, 482, 483,
	345, 278, 416, 294, 315, 0, 0, 363, 396, 219,
	457, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 325, 408, 454, 296, 297, 298, 0, 187, 202,
	311, 0, 385, 261, 485, 465, 461, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 321, 327, 328,
	329, 330, 347, 348, 349, 352, 355, 356, 359, 361,
	362, 365, 372, 373, 374, 375, 377, 379, 386, 390,
	398, 399, 400, 401, 402, 404, 405, 410, 411, 412,
	413, 421, 425, 443, 444, 456, 469, 474, 270, 451,
	475, 0, 320, 0, 0, 322, 254, 273, 284, 0,
	464, 422, 207, 392, 262, 196, 225, 210, 233, 248,
	251, 288, 331, 338, 367, 371, 267, 245, 223, 389,
	220, 407, 428, 429, 430, 432, 335, 240, 370, 433,
	0, 318, 434, 435, 280, 0, 0, 0, 0, 0,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 309, 241, 0, 0, 368,
	0, 193, 0, 409, 228, 319, 316, 440, 255, 247,
	243, 227, 281, 326, 366, 427, 360, 0, 313, 0,
	0, 418, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 351, 419, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 1964, 0, 0, 0, 1965, 0,
	0, 217, 0, 224, 305, 307, 306, 299, 300, 301,
	302, 0, 303, 304, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 437, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 340, 231, 0, 0,
	0, 0, 471, 0, 0, 0, 0, 0, 0, 0,
	308, 0, 293, 188, 205, 0, 0, 350, 391, 397,
	0, 0, 0, 229, 0, 395, 364, 455, 213, 257,
	388, 369, 393, 376, 260, 0, 0, 394, 314, 442,
	383, 452, 472, 473, 237, 344, 462, 431, 468, 484,
	206, 234, 358, 424, 458, 415, 337, 438, 439, 292,
	414, 266, 191, 312, 478, 204, 403, 221, 211, 197,
	426, 450, 218, 406, 0, 0, 486, 199, 448, 423,
	333, 289, 290, 198, 0, 387, 242, 264, 232, 353,
	445, 446, 230, 487, 208, 467, 201, 0, 466, 346,
	441, 449, 334, 324, 200, 447, 332, 323, 295, 253,
	275, 381, 317, 382, 276, 342, 341, 343, 194, 459,
	0, 195, 0, 420, 460, 488, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 310, 357, 380,
	378, 384, 0, 436, 453, 463, 470, 476, 477, 479,
	480, 481, 482, 483, 345, 278, 416, 294, 315, 0,
	0, 363, 396, 219, 457, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 325, 408, 454, 296, 297,
	298, 0, 187, 202, 311, 0, 385, 261, 485, 465,
	461, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 321, 327, 328, 329, 330, 347, 348, 349, 352,
	355, 356, 359, 361, 362, 365, 372, 373, 374, 375,
	377, 379, 386, 390, 398, 399, 400, 401, 402, 404,
	405, 410, 411, 412, 413, 421, 425, 443, 444, 456,
	469, 474, 270, 451, 475, 0, 320, 0, 0, 322,
	254, 273, 284, 0, 464, 422, 207, 392, 262, 196,
	225, 210, 233, 248, 251, 288, 331, 338, 367, 371,
	267, 245, 223, 389, 220, 407, 428, 429, 430, 432,
	335, 240, 370, 433, 0, 318, 434, 435, 280, 0,
	0, 0, 0, 0, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 1293, 0, 0, 0, 309,
	241, 0, 0, 368, 0, 193, 0, 409, 228, 319,
	316, 440, 255, 247, 243, 227, 281, 326, 366, 427,
	360, 0, 313, 0, 0, 418, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 351, 419, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1292, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 305, 307,
	306, 299, 300, 301, 302, 0, 303, 304, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 437, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	340, 231, 0, 0, 0, 0, 471, 0, 0, 0,
	0, 0, 0, 0, 308, 0, 293, 188, 205, 0,
	0, 350, 391, 397, 0, 0, 0, 229, 0, 395,
	364, 455, 213, 257, 388, 369, 393, 376, 260, 0,
	0, 394, 314, 442, 383, 452, 472, 473, 237, 344,
	462, 431, 468, 484, 206, 234, 358, 424, 458, 415,
	337, 438, 439, 292, 414, 266, 191, 312, 478, 204,
	403, 221, 211, 197, 426, 450, 218, 406, 0, 0,
	486, 199, 448, 423, 333, 289, 290, 198, 0, 387,
	242, 264, 232, 353, 445, 446, 230, 487, 208, 467,
	201, 0, 466, 346, 441, 449, 334, 324, 200, 447,
	332, 323, 295, 253, 275, 381, 317, 382, 276, 342,
	341, 343, 194, 459, 0, 195, 0, 420, 460, 488,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 310, 357, 380, 378, 384, 0, 436, 453, 463,
	470, 476, 477, 479, 480, 481, 482, 483, 345, 278,
	416, 294, 315, 0, 0, 363, 396, 219, 457, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 325,
	408, 454, 296, 297, 298, 0, 187, 202, 311, 0,
	385, 261, 485, 465, 461, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 321, 327, 328, 329, 330,
	347, 348, 349, 352, 355, 356, 359, 361, 362, 365,
	372, 373, 374, 375, 377, 379, 386, 390, 398, 399,
	400, 401, 402, 404, 405, 410, 411, 412, 413, 421,
	425, 443, 444, 456, 469, 474, 270, 451, 475, 0,
	320, 0, 0, 322, 254, 273, 284, 0, 464, 422,
	207, 392, 262, 196, 225, 210, 233, 248, 251, 288,
	331, 338, 367, 371, 267, 245, 223, 389, 220, 407,
	428, 429, 430, 432, 335, 240, 370, 433, 0, 318,
	434, 435, 280, 0, 0, 0, 0, 0, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 309, 241, 0, 0, 368, 0, 193,
	0, 409, 228, 319, 316, 440, 255, 247, 243, 227,
	281, 326, 366, 427, 360, 0, 313, 0, 0, 418,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 351,
	419, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 305, 307, 306, 299, 300, 301, 302, 0,
	303, 304, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 437, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 340, 231, 0, 0, 0, 0,
	471, 0, 0, 0, 2669, 0, 0, 0, 308, 0,
	293, 188, 205, 0, 0, 350, 391, 397, 0, 0,
	0, 229, 0, 395, 364, 455, 213, 257, 388, 369,
	393, 376, 260, 0, 0, 394, 314, 442, 383, 452,
	472, 473, 237, 344, 462, 431, 468, 484, 206, 234,
	358, 424, 458, 415, 337, 438, 439, 292, 414, 266,
	191, 312, 478, 204, 403, 221, 211, 197, 426, 450,
	218, 406, 0, 0, 486, 199, 448, 423, 333, 289,
	290, 198, 0, 387, 242, 264, 232, 353, 445, 446,
	230, 487, 208, 467, 201, 0, 466, 346, 441, 449,
	334, 324, 200, 447, 332, 323, 295, 253, 275, 381,
	317, 382, 276, 342, 341, 343, 194, 459, 0, 195,
	0, 420, 460, 488, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 310, 357, 380, 378, 384,
	0, 436, 453, 463, 470, 476, 477, 479, 480, 481,
	482, 483, 345, 278, 416, 294, 315, 0, 0, 363,
	396, 219, 457, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 325, 408, 454, 296, 297, 298, 0,
	187, 202, 311, 0, 385, 261, 485, 465, 461, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 321,
	327, 328, 329, 330, 347, 348, 349, 352, 355, 356,
	359, 361, 362, 365, 372, 373, 374, 375, 377, 379,
	386, 390, 398, 399, 400, 401, 402, 404, 405, 410,
	411, 412, 413, 421, 425, 443, 444, 456, 469, 474,
	270, 451, 475, 0, 320, 0, 0, 322, 254, 273,
	284, 0, 464, 422, 207, 392, 262, 196, 225, 210,
	233, 248, 251, 288, 331, 338, 367, 371, 267, 245,
	223, 389, 220, 407, 428, 429, 430, 432, 335, 240,
	370, 433, 0, 318, 434, 435, 280, 0, 0, 0,
	0, 0, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 309, 241, 0,
	0, 368, 0, 193, 0, 409, 228, 319, 316, 440,
	255, 247, 243, 227, 281, 326, 366, 427, 360, 0,
	313, 0, 0, 418, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 351, 419, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 305, 307, 306, 299,
	300, 301, 302, 0, 303, 304, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 437, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 340, 231,
	0, 0, 0, 0, 471, 0, 0, 0, 2595, 0,
	0, 0, 308, 0, 293, 188, 205, 0, 0, 350,
	391, 397, 0, 0, 0, 229, 0, 395, 364, 455,
	213, 257, 388, 369, 393, 376, 260, 0, 0, 394,
	314, 442, 383, 452, 472, 473, 237, 344, 462, 431,
	468, 484, 206, 234, 358, 424, 458, 415, 337, 438,
	439, 292, 414, 266, 191, 312, 478, 204, 403, 221,
	211, 197, 426, 450, 218, 406, 0, 0, 486, 199,
	448, 423, 333, 289, 290, 198, 0, 387, 242, 264,
	232, 353, 445, 446, 230, 487, 208, 467, 201, 0,
	466, 346, 441, 449, 334, 324, 200, 447, 332, 323,
	295, 253, 275, 381, 317, 382, 276, 342, 341, 343,
	194, 459, 0, 195, 0, 420, 460, 488, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 310,
	357, 380, 378, 384, 0, 436, 453, 463, 470, 476,
	477, 479, 480, 481, 482, 483, 345, 278, 416, 294,
	315, 0, 0, 363, 396, 219, 457, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 325, 408, 454,
	296, 297, 298, 0, 187, 202, 311, 0, 385, 261,
	485, 465, 461, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 321, 327, 328, 329, 330, 347, 348,
	349, 352, 355, 356, 359, 361, 362, 365, 372, 373,
	374, 375, 377, 379, 386, 390, 398, 399, 400, 401,
	402, 404, 405, 410, 411, 412, 413, 421, 425, 443,
	444, 456, 469, 474, 270, 451, 475, 0, 320, 0,
	0, 322, 254, 273, 284, 0, 464, 422, 207, 392,
	262, 196, 225, 210, 233, 248, 251, 288, 331, 338,
	367, 371, 267, 245, 223, 389, 220, 407, 428, 429,
	430, 432, 335, 240, 370, 433, 0, 318, 434, 435,
	280, 0, 0, 0, 0, 0, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 309, 241, 0, 0, 368, 0, 193, 0, 409,
	228, 319, 316, 440, 255, 247, 243, 227, 281, 326,
	366, 427, 360, 0, 313, 0, 0, 418, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 351, 419, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1442, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	305, 307, 306, 299, 300, 301, 302, 0, 303, 304,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 437,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 340, 231, 0, 0, 0, 0, 471, 0,
	0, 0, 0, 0, 0, 0, 308, 0, 293, 188,
	205, 0, 0, 350, 391, 397, 0, 0, 0, 229,
	0, 395, 364, 455, 213, 257, 388, 369, 393, 376,
	260, 0, 0, 394, 314, 442, 383, 452, 472, 473,
	237, 344, 462, 431, 468, 484, 206, 234, 358, 424,
	458, 415, 337, 438, 439, 292, 414, 266, 191, 312,
	478, 204, 403, 221, 211, 197, 426, 450, 218, 406,
	0, 0, 486, 199, 448, 423, 333, 289, 290, 198,
	0, 387, 242, 264, 232, 353, 445, 446, 230, 487,
	208, 467, 201, 0, 466, 346, 441, 449, 334, 324,
	200, 447, 332, 323, 295, 253, 275, 381, 317, 382,
	276, 342, 341, 343, 194, 459, 0, 195, 0, 420,
	460, 488, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 310, 357, 380, 378, 384, 0, 436,
	453, 463, 470, 476, 477, 479, 480, 481, 482, 483,
	345, 278, 416, 294, 315, 0, 0, 363, 396, 219,
	457, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 325, 408, 454, 296, 297, 298, 0, 187, 202,
	311, 0, 385, 261, 485, 465, 461, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 321, 327, 328,
	329, 330, 347, 348, 349, 352, 355, 356, 359, 361,
	362, 365, 372, 373, 374, 375, 377, 379, 386, 390,
	398, 399, 400, 401, 402, 404, 405, 410, 411, 412,
	413, 421, 425, 443, 444, 456, 469, 474, 270, 451,
	475, 0, 320, 0, 0, 322, 254, 273, 284, 0,
	464, 422, 207, 392, 262, 196, 225, 210, 233, 248,
	251, 288, 331, 338, 367, 371, 267, 245, 223, 389,
	220, 407, 428, 429, 430, 432, 335, 240, 370, 0,
	433, 318, 434, 435, 280, 1722, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 309, 241, 0, 0,
	368, 0, 193, 0, 409, 228, 319, 316, 440, 255,
	247, 243, 227, 281, 326, 366, 427, 360, 0, 313,
	0, 0, 418, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 351, 419, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 305, 307, 306, 299, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 437, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 340, 231, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 293, 188, 205, 0, 0, 350, 391,
	397, 0, 0, 0, 229, 0, 395, 364, 455, 213,
	257, 388, 369, 393, 376, 260, 0, 0, 394, 314,
	442, 383, 452, 472, 473, 237, 344, 462, 431, 468,
	484, 206, 234, 358, 424, 458, 415, 337, 438, 439,
	292, 414, 266, 191, 312, 478, 204, 403, 221, 211,
	197, 426, 450, 218, 406, 0, 0, 486, 199, 448,
	423, 333, 289, 290, 198, 0, 387, 242, 264, 232,
	353, 445, 446, 230, 487, 208, 467, 201, 0, 466,
	346, 441, 449, 334, 324, 200, 447, 332, 323, 295,
	253, 275, 381, 317, 382, 276, 342, 341, 343, 194,
	459, 0, 195, 0, 420, 460, 488, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 310, 357,
	380, 378, 384, 0, 436, 453, 463, 470, 476, 477,
	479, 480, 481, 482, 483, 345, 278, 416, 294, 315,
	0, 0, 363, 396, 219, 457, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 325, 408, 454, 296,
	297, 298, 0, 187, 202, 311, 0, 385, 261, 485,
	465, 461, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 321, 327, 328, 329, 330, 347, 348, 349,
	352, 355, 356, 359, 361, 362, 365, 372, 373, 374,
	375, 377, 379, 386, 390, 398, 399, 400, 401, 402,
	404, 405, 410, 411, 412, 413, 421, 425, 443, 444,
	456, 469, 474, 270, 451, 475, 0, 320, 0, 0,
	322, 254, 273, 284, 0, 464, 422, 207, 392, 262,
	196, 225, 210, 233, 248, 251, 288, 331, 338, 367,
	371, 267, 245, 223, 389, 220, 407, 428, 429, 430,
	432, 335, 240, 370, 433, 0, 318, 434, 435, 280,
	0, 0, 0, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	309, 241, 0, 0, 368, 0, 193, 0, 409, 228,
	319, 316, 440, 255, 247, 243, 227, 281, 326, 366,
	427, 360, 0, 313, 0, 0, 418, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 351, 419, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 305,
	307, 306, 299, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 437, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 340, 231, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 293, 188, 205,
	0, 0, 350, 391, 397, 0, 0, 0, 229, 0,
	395, 364, 455, 213, 257, 388, 369, 393, 376, 260,
	0, 0, 394, 314, 442, 383, 452, 472, 473, 237,
	344, 462, 431, 468, 484, 206, 234, 358, 424, 458,
	415, 337, 438, 439, 292, 414, 266, 191, 312, 478,
	204, 403, 221, 211, 197, 426, 450, 218, 406, 0,
	0, 486, 199, 448, 423, 333, 289, 290, 198, 0,
	387, 242, 264, 232, 353, 445, 446, 230, 487, 208,
	467, 201, 0, 466, 346, 441, 449, 334, 324, 200,
	447, 332, 323, 295, 253, 275, 381, 317, 382, 276,
	342, 341, 343, 194, 459, 0, 195, 0, 420, 460,
	488, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 310, 357, 380, 378, 384, 0, 436, 453,
	463, 470, 476, 477, 479, 480, 481, 482, 483, 345,
	278, 416, 294, 315, 0, 0, 363, 396, 219, 457,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	325, 408, 454, 296, 297, 298, 0, 187, 202, 311,
	0, 385, 261, 485, 465, 461, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 321, 327, 328, 329,
	330, 347, 348, 349, 352, 355, 356, 359, 361, 362,
	365, 372, 373, 374, 375, 377, 379, 386, 390, 398,
	399, 400, 401, 402, 404, 405, 410, 411, 412, 413,
	421, 425, 443, 444, 456, 469, 474, 270, 451, 475,
	0, 320, 0, 0, 322, 254, 273, 284, 0, 464,
	422, 207, 392, 262, 196, 225, 210, 233, 248, 251,
	288, 331, 338, 367, 371, 267, 245, 223, 389, 220,
	407, 428, 429, 430, 432, 335, 240, 370, 433, 0,
	318, 434, 435, 280, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 309, 241, 0, 0, 368, 0,
	193, 0, 409, 228, 319, 316, 440, 255, 247, 243,
	227, 281, 326, 366, 427, 360, 0, 313, 0, 0,
	418, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	351, 419, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 305, 307, 306, 299, 300, 301, 302,
	0, 303, 304, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 437, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 340, 231, 0, 0, 0,
	0, 471, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 293, 188, 205, 0, 0, 350, 391, 397, 0,
	0, 0, 229, 0, 395, 364, 455, 213, 257, 388,
	369, 393, 376, 260, 0, 0, 394, 314, 442, 383,
	452, 472, 473, 237, 344, 462, 431, 468, 484, 206,
	234, 358, 424, 458, 415, 337, 438, 439, 292, 414,
	266, 191, 312, 478, 204, 403, 221, 211, 197, 426,
	450, 218, 406, 0, 0, 486, 199, 448, 423, 333,
	289, 290, 198, 0, 387, 242, 264, 232, 353, 445,
	446, 230, 487, 208, 467, 201, 0, 466, 346, 441,
	449, 334, 324, 200, 447, 332, 323, 295, 253, 275,
	381, 317, 382, 276, 342, 341, 343, 194, 459, 0,
	195, 0, 420, 460, 488, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 310, 357, 380, 378,
	384, 0, 436, 453, 463, 470, 476, 477, 479, 480,
	481, 482, 483, 345, 278, 416, 294, 315, 0, 0,
	363, 396, 219, 457, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 325, 408, 454, 296, 297, 298,
	0, 187, 202, 311, 0, 385, 261, 485, 465, 461,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	321, 327, 328, 329, 330, 347, 348, 349, 352, 355,
	356, 359, 361, 362, 365, 372, 373, 374, 375, 377,
	379, 386, 390, 398, 399, 400, 401, 402, 404, 405,
	410, 411, 412, 413, 421, 425, 443, 444, 456, 469,
	474, 270, 451, 475, 0, 320, 0, 0, 322, 254,
	273, 284, 0, 464, 422, 207, 392, 262, 196, 225,
	210, 233, 248, 251, 288, 331, 338, 367, 371, 267,
	245, 223, 389, 220, 407, 428, 429, 430, 432, 335,
	240, 370, 433, 0, 318, 434, 435, 280, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 309, 241,
	0, 0, 368, 0, 193, 0, 409, 228, 319, 316,
	440, 255, 247, 243, 227, 281, 326, 366, 427, 360,
	0, 313, 0, 0, 418, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 351, 419, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 305, 307, 306,
	299, 300, 301, 302, 0, 303, 304, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 437, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 340,
	231, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 293, 188, 205, 0, 0,
	350, 391, 397, 0, 0, 0, 229, 0, 395, 364,
	455, 213, 257, 388, 369, 393, 376, 260, 0, 0,
	394, 314, 442, 383, 452, 472, 473, 237, 344, 462,
	431, 468, 484, 206, 234, 358, 424, 458, 415, 337,
	438, 439, 292, 414, 266, 191, 312, 478, 204, 403,
	221, 211, 197, 426, 450, 218, 406, 0, 0, 486,
	199, 448, 423, 333, 289, 290, 198, 0, 387, 242,
	264, 232, 353, 445, 446, 230, 487, 208, 467, 201,
	0, 466, 346, 441, 449, 334, 324, 200, 447, 332,
	323, 295, 253, 275, 381, 317, 382, 276, 342, 341,
	343, 194, 459, 0, 195, 0, 420, 460, 488, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	310, 357, 380, 378, 384, 0, 436, 453, 463, 470,
	476, 477, 479, 480, 481, 482, 483, 345, 278, 416,
	294, 315, 0, 0, 363, 396, 219, 457, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 325, 408,
	454, 296, 297, 298, 0, 187, 202, 311, 1534, 385,
	261, 485, 465, 461, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 321, 327, 328, 329, 330, 347,
	348, 349, 352, 355, 356, 359, 361, 362, 365, 372,
	373, 374, 375, 377, 379, 386, 390, 398, 399, 400,
	401, 402, 404, 405, 410, 411, 412, 413, 421, 425,
	443, 444, 456, 469, 474, 270, 451, 475, 0, 320,
	0, 0, 322, 254, 273, 284, 0, 464, 422, 207,
	392, 262, 196, 225, 210, 233, 248, 251, 288, 331,
	338, 367, 371, 267, 245, 223, 389, 220, 407, 428,
	429, 430, 432, 335, 240, 370, 433, 0, 318, 434,
	435, 280, 0, 0, 0, 0, 0, 0, 354, 0,
	1414, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 309, 241, 0, 0, 368, 0, 193, 0,
	409, 228, 319, 316, 440, 255, 247, 243, 227, 281,
	326, 366, 427, 360, 0, 313, 0, 0, 418, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 351, 419,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 305, 307, 306, 299, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	437, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 340, 231, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 293,
	188, 205, 0, 0, 350, 391, 397, 0, 0, 0,
	229, 0, 395, 364, 455, 213, 257, 388, 369, 393,
	376, 260, 0, 0, 394, 314, 442, 383, 452, 472,
	473, 237, 344, 462, 431, 468, 484, 206, 234, 358,
	424, 458, 415, 337, 438, 439, 292, 414, 266, 191,
	312, 478, 204, 403, 221, 211, 197, 426, 450, 218,
	406, 0, 0, 486, 199, 448, 423, 333, 289, 290,
	198, 0, 387, 242, 264, 232, 353, 445, 446, 230,
	487, 208, 467, 201, 0, 466, 346, 441, 449, 334,
	324, 200, 447, 332, 323, 295, 253, 275, 381, 317,
	382, 276, 342, 341, 343, 194, 459, 0, 195, 0,
	420, 460, 488, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 310, 357, 380, 378, 384, 0,
	436, 453, 463, 470, 476, 477, 479, 480, 481, 482,
	483, 345, 278, 416, 294, 315, 0, 0, 363, 396,
	219, 457, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 325, 408, 454, 296, 297, 298, 0, 187,
	202, 311, 0, 385, 261, 485, 465, 461, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 321, 327,
	328, 329, 330, 347, 348, 349, 352, 355, 356, 359,
	361, 362, 365, 372, 373, 374, 375, 377, 379, 386,
	390, 398, 399, 400, 401, 402, 404, 405, 410, 411,
	412, 413, 421, 425, 443, 444, 456, 469, 474, 270,
	451, 475, 0, 320, 0, 0, 322, 254, 273, 284,
	0, 464, 422, 207, 392, 262, 196, 225, 210, 233,
	248, 251, 288, 331, 338, 367, 371, 267, 245, 223,
	389, 220, 407, 428, 429, 430, 432, 335, 240, 370,
	433, 0, 318, 434, 435, 280, 0, 0, 0, 0,
	0, 0, 354, 0, 1412, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 309, 241, 0, 0,
	368, 0, 193, 0, 409, 228, 319, 316, 440, 255,
	247, 243, 227, 281, 326, 366, 427, 360, 0, 313,
	0, 0, 418, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 351, 419, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 305, 307, 306, 299, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 437, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 340, 231, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 293, 188, 205, 0, 0, 350, 391,
	397, 0, 0, 0, 229, 0, 395, 364, 455, 213,
	257, 388, 369, 393, 376, 260, 0, 0, 394, 314,
	442, 383, 452, 472, 473, 237, 344, 462, 431, 468,
	484, 206, 234, 358, 424, 458, 415, 337, 438, 439,
	292, 414, 266, 191, 312, 478, 204, 403, 221, 211,
	197, 426, 450, 218, 406, 0, 0, 486, 199, 448,
	423, 333, 289, 290, 198, 0, 387, 242, 264, 232,
	353, 445, 446, 230, 487, 208, 467, 201, 0, 466,
	346, 441, 449, 334, 324, 200, 447, 332, 323, 295,
	253, 275, 381, 317, 382, 276, 342, 341, 343, 194,
	459, 0, 195, 0, 420, 460, 488, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 310, 357,
	380, 378, 384, 0, 436, 453, 463, 470, 476, 477,
	479, 480, 481, 482, 483, 345, 278, 416, 294, 315,
	0, 0, 363, 396, 219, 457, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 325, 408, 454, 296,
	297, 298, 0, 187, 202, 311, 0, 385, 261, 485,
	465, 461, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 321, 327, 328, 329, 330, 347, 348, 349,
	352, 355, 356, 359, 361, 362, 365, 372, 373, 374,
	375, 377, 379, 386, 390, 398, 399, 400, 401, 402,
	404, 405, 410, 411, 412, 413, 421, 425, 443, 444,
	456, 469, 474, 270, 451, 475, 0, 320, 0, 0,
	322, 254, 273, 284, 0, 464, 422, 207, 392, 262,
	196, 225, 210, 233, 248, 251, 288, 331, 338, 367,
	371, 267, 245, 223, 389, 220, 407, 428, 429, 430,
	432, 335, 240, 370, 433, 0, 318, 434, 435, 280,
	0, 0, 0, 0, 0, 0, 354, 0, 1410, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	309, 241, 0, 0, 368, 0, 193, 0, 409, 228,
	319, 316, 440, 255, 247, 243, 227, 281, 326, 366,
	427, 360, 0, 313, 0, 0, 418, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 351, 419, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 305,
	307, 306, 299, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 437, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 340, 231, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 293, 188, 205,
	0, 0, 350, 391, 397, 0, 0, 0, 229, 0,
	395, 364, 455, 213, 257, 388, 369, 393, 376, 260,
	0, 0, 394, 314, 442, 383, 452, 472, 473, 237,
	344, 462, 431, 468, 484, 206, 234, 358, 424, 458,
	415, 337, 438, 439, 292, 414, 266, 191, 312, 478,
	204, 403, 221, 211, 197, 426, 450, 218, 406, 0,
	0, 486, 199, 448, 423, 333, 289, 290, 198, 0,
	387, 242, 264, 232, 353, 445, 446, 230, 487, 208,
	467, 201, 0, 466, 346, 441, 449, 334, 324, 200,
	447, 332, 323, 295, 253, 275, 381, 317, 382, 276,
	342, 341, 343, 194, 459, 0, 195, 0, 420, 460,
	488, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 310, 357, 380, 378, 384, 0, 436, 453,
	463, 470, 476, 477, 479, 480, 481, 482, 483, 345,
	278, 416, 294, 315, 0, 0, 363, 396, 219, 457,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	325, 408, 454, 296, 297, 298, 0, 187, 202, 311,
	0, 385, 261, 485, 465, 461, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 321, 327, 328, 329,
	330, 347, 348, 349, 352, 355, 356, 359, 361, 362,
	365, 372, 373, 374, 375, 377, 379, 386, 390, 398,
	399, 400, 401, 402, 404, 405, 410, 411, 412, 413,
	421, 425, 443, 444, 456, 469, 474, 270, 451, 475,
	0, 320, 0, 0, 322, 254, 273, 284, 0, 464,
	422, 207, 392, 262, 196, 225, 210, 233, 248, 251,
	288, 331, 338, 367, 371, 267, 245, 223, 389, 220,
	407, 428, 429, 430, 432, 335, 240, 370, 433, 0,
	318, 434, 435, 280, 0, 0, 0, 0, 0, 0,
	354, 0, 1408, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 309, 241, 0, 0, 368, 0,
	193, 0, 409, 228, 319, 316, 440, 255, 247, 243,
	227, 281, 326, 366, 427, 360, 0, 313, 0, 0,
	418, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	351, 419, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 305, 307, 306, 299, 300, 301, 302,
	0, 303, 304, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 437, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 340, 231, 0, 0, 0,
	0, 471, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 293, 188, 205, 0, 0, 350, 391, 397, 0,
	0, 0, 229, 0, 395, 364, 455, 213, 257, 388,
	369, 393, 376, 260, 0, 0, 394, 314, 442, 383,
	452, 472, 473, 237, 344, 462, 431, 468, 484, 206,
	234, 358, 424, 458, 415, 337, 438, 439, 292, 414,
	266, 191, 312, 478, 204, 403, 221, 211, 197, 426,
	450, 218, 406, 0, 0, 486, 199, 448, 423, 333,
	289, 290, 198, 0, 387, 242, 264, 232, 353, 445,
	446, 230, 487, 208, 467, 201, 0, 466, 346, 441,
	449, 334, 324, 200, 447, 332, 323, 295, 253, 275,
	381, 317, 382, 276, 342, 341, 343, 194, 459, 0,
	195, 0, 420, 460, 488, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 310, 357, 380, 378,
	384, 0, 436, 453, 463, 470, 476, 477, 479, 480,
	481, 482, 483, 345, 278, 416, 294, 315, 0, 0,
	363, 396, 219, 457, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 325, 408, 454, 296, 297, 298,
	0, 187, 202, 311, 0, 385, 261, 485, 465, 461,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	321, 327, 328, 329, 330, 347, 348, 349, 352, 355,
	356, 359, 361, 362, 365, 372, 373, 374, 375, 377,
	379, 386, 390, 398, 399, 400, 401, 402, 404, 405,
	410, 411, 412, 413, 421, 425, 443, 444, 456, 469,
	474, 270, 451, 475, 0, 320, 0, 0, 322, 254,
	273, 284, 0, 464, 422, 207, 392, 262, 196, 225,
	210, 233, 248, 251, 288, 331, 338, 367, 371, 267,
	245, 223, 389, 220, 407, 428, 429, 430, 432, 335,
	240, 370, 433, 0, 318, 434, 435, 280, 0, 0,
	0, 0, 0, 0, 354, 0, 1406, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 309, 241,
	0, 0, 368, 0, 193, 0, 409, 228, 319, 316,
	440, 255, 247, 243, 227, 281, 326, 366, 427, 360,
	0, 313, 0, 0, 418, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 351, 419, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 305, 307, 306,
	299, 300, 301, 302, 0, 303, 304, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 437, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 340,
	231, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 293, 188, 205, 0, 0,
	350, 391, 397, 0, 0, 0, 229, 0, 395, 364,
	455, 213, 257, 388, 369, 393, 376, 260, 0, 0,
	394, 314, 442, 383, 452, 472, 473, 237, 344, 462,
	431, 468, 484, 206, 234, 358, 424, 458, 415, 337,
	438, 439, 292, 414, 266, 191, 312, 478, 204, 403,
	221, 211, 197, 426, 450, 218, 406, 0, 0, 486,
	199, 448, 423, 333, 289, 290, 198, 0, 387, 242,
	264, 232, 353, 445, 446, 230, 487, 208, 467, 201,
	0, 466, 346, 441, 449, 334, 324, 200, 447, 332,
	323, 295, 253, 275, 381, 317, 382, 276, 342, 341,
	343, 194, 459, 0, 195, 0, 420, 460, 488, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	310, 357, 380, 378, 384, 0, 436, 453, 463, 470,
	476, 477, 479, 480, 481, 482, 483, 345, 278, 416,
	294, 315, 0, 0, 363, 396, 219, 457, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 325, 408,
	454, 296, 297, 298, 0, 187, 202, 311, 0, 385,
	261, 485, 465, 461, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 321, 327, 328, 329, 330, 347,
	348, 349, 352, 355, 356, 359, 361, 362, 365, 372,
	373, 374, 375, 377, 379, 386, 390, 398, 399, 400,
	401, 402, 404, 405, 410, 411, 412, 413, 421, 425,
	443, 444, 456, 469, 474, 270, 451, 475, 0, 320,
	0, 0, 322, 254, 273, 284, 0, 464, 422, 207,
	392, 262, 196, 225, 210, 233, 248, 251, 288, 331,
	338, 367, 371, 267, 245, 223, 389, 220, 407, 428,
	429, 430, 432, 335, 240, 370, 433, 0, 318, 434,
	435, 280, 0, 0, 0, 0, 0, 0, 354, 0,
	1402, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 309, 241, 0, 0, 368, 0, 193, 0,
	409, 228, 319, 316, 440, 255, 247, 243, 227, 281,
	326, 366, 427, 360, 0, 313, 0, 0, 418, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 351, 419,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 305, 307, 306, 299, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	437, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 340, 231, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 293,
	188, 205, 0, 0, 350, 391, 397, 0, 0, 0,
	229, 0, 395, 364, 455, 213, 257, 388, 369, 393,
	376, 260, 0, 0, 394, 314, 442, 383, 452, 472,
	473, 237, 344, 462, 431, 468, 484, 206, 234, 358,
	424, 458, 415, 337, 438, 439, 292, 414, 266, 191,
	312, 478, 204, 403, 221, 211, 197, 426, 450, 218,
	406, 0, 0, 486, 199, 448, 423, 333, 289, 290,
	198, 0, 387, 242, 264, 232, 353, 445, 446, 230,
	487, 208, 467, 201, 0, 466, 346, 441, 449, 334,
	324, 200, 447, 332, 323, 295, 253, 275, 381, 317,
	382, 276, 342, 341, 343, 194, 459, 0, 195, 0,
	420, 460, 488, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 310, 357, 380, 378, 384, 0,
	436, 453, 463, 470, 476, 477, 479, 480, 481, 482,
	483, 345, 278, 416, 294, 315, 0, 0, 363, 396,
	219, 457, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 325, 408, 454, 296, 297, 298, 0, 187,
	202, 311, 0, 385, 261, 485, 465, 461, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 321, 327,
	328, 329, 330, 347, 348, 349, 352, 355, 356, 359,
	361, 362, 365, 372, 373, 374, 375, 377, 379, 386,
	390, 398, 399, 400, 401, 402, 404, 405, 410, 411,
	412, 413, 421, 425, 443, 444, 456, 469, 474, 270,
	451, 475, 0, 320, 0, 0, 322, 254, 273, 284,
	0, 464, 422, 207, 392, 262, 196, 225, 210, 233,
	248, 251, 288, 331, 338, 367, 371, 267, 245, 223,
	389, 220, 407, 428, 429, 430, 432, 335, 240, 370,
	433, 0, 318, 434, 435, 280, 0, 0, 0, 0,
	0, 0, 354, 0, 1400, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 309, 241, 0, 0,
	368, 0, 193, 0, 409, 228, 319, 316, 440, 255,
	247, 243, 227, 281, 326, 366, 427, 360, 0, 313,
	0, 0, 418, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 351, 419, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 305, 307, 306, 299, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 437, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 340, 231, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 293, 188, 205, 0, 0, 350, 391,
	397, 0, 0, 0, 229, 0, 395, 364, 455, 213,
	257, 388, 369, 393, 376, 260, 0, 0, 394, 314,
	442, 383, 452, 472, 473, 237, 344, 462, 431, 468,
	484, 206, 234, 358, 424, 458, 415, 337, 438, 439,
	292, 414, 266, 191, 312, 478, 204, 403, 221, 211,
	197, 426, 450, 218, 406, 0, 0, 486, 199, 448,
	423, 333, 289, 290, 198, 0, 387, 242, 264, 232,
	353, 445, 446, 230, 487, 208, 467, 201, 0, 466,
	346, 441, 449, 334, 324, 200, 447, 332, 323, 295,
	253, 275, 381, 317, 382, 276, 342, 341, 343, 194,
	459, 0, 195, 0, 420, 460, 488, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 310, 357,
	380, 378, 384, 0, 436, 453, 463, 470, 476, 477,
	479, 480, 481, 482, 483, 345, 278, 416, 294, 315,
	0, 0, 363, 396, 219, 457, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 325, 408, 454, 296,
	297, 298, 0, 187, 202, 311, 0, 385, 261, 485,
	465, 461, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 321, 327, 328, 329, 330, 347, 348, 349,
	352, 355, 356, 359, 361, 362, 365, 372, 373, 374,
	375, 377, 379, 386, 390, 398, 399, 400, 401, 402,
	404, 405, 410, 411, 412, 413, 421, 425, 443, 444,
	456, 469, 474, 270, 451, 475, 0, 320, 0, 0,
	322, 254, 273, 284, 0, 464, 422, 207, 392, 262,
	196, 225, 210, 233, 248, 251, 288, 331, 338, 367,
	371, 267, 245, 223, 389, 220, 407, 428, 429, 430,
	432, 335, 240, 370, 433, 0, 318, 434, 435, 280,
	0, 0, 0, 0, 0, 0, 354, 0, 1398, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	309, 241, 0, 0, 368, 0, 193, 0, 409, 228,
	319, 316, 440, 255, 247, 243, 227, 281, 326, 366,
	427, 360, 0, 313, 0, 0, 418, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 351, 419, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 305,
	307, 306, 299, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 437, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 340, 231, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 293, 188, 205,
	0, 0, 350, 391, 397, 0, 0, 0, 229, 0,
	395, 364, 455, 213, 257, 388, 369, 393, 376, 260,
	0, 0, 394, 314, 442, 383, 452, 472, 473, 237,
	344, 462, 431, 468, 484, 206, 234, 358, 424, 458,
	415, 337, 438, 439, 292, 414, 266, 191, 312, 478,
	204, 403, 221, 211, 197, 426, 450, 218, 406, 0,
	0, 486, 199, 448, 423, 333, 289, 290, 198, 0,
	387, 242, 264, 232, 353, 445, 446, 230, 487, 208,
	467, 201, 0, 466, 346, 441, 449, 334, 324, 200,
	447, 332, 323, 295, 253, 275, 381, 317, 382, 276,
	342, 341, 343, 194, 459, 0, 195, 0, 420, 460,
	488, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 310, 357, 380, 378, 384, 0, 436, 453,
	463, 470, 476, 477, 479, 480, 481, 482, 483, 345,
	278, 416, 294, 315, 0, 0, 363, 396, 219, 457,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	325, 408, 454, 296, 297, 298, 0, 187, 202, 311,
	0, 385, 261, 485, 465, 461, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 321, 327, 328, 329,
	330, 347, 348, 349, 352, 355, 356, 359, 361, 362,
	365, 372, 373, 374, 375, 377, 379, 386, 390, 398,
	399, 400, 401, 402, 404, 405, 410, 411, 412, 413,
	421, 425, 443, 444, 456, 469, 474, 270, 451, 475,
	0, 320, 0, 0, 322, 254, 273, 284, 0, 464,
	422, 207, 392, 262, 196, 225, 210, 233, 248, 251,
	288, 331, 338, 367, 371, 267, 245, 223, 389, 220,
	407, 428, 429, 430, 432, 335, 240, 370, 433, 0,
	318, 434, 435, 280, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 309, 241, 0, 0, 368, 0,
	193, 0, 409, 228, 319, 316, 440, 255, 247, 243,
	227, 281, 326, 366, 427, 360, 0, 313, 0, 0,
	418, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	351, 419, 259, 0, 1375, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 305, 307, 306, 299, 300, 301, 302,
	0, 303, 304, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 437, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 340, 231, 0, 0, 0,
	0, 471, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 293, 188, 205, 0, 0, 350, 391, 397, 0,
	0, 0, 229, 0, 395, 364, 455, 213, 257, 388,
	369, 393, 376, 260, 0, 0, 394, 314, 442, 383,
	452, 472, 473, 237, 344, 462, 431, 468, 484, 206,
	234, 358, 424, 458, 415, 337, 438, 439, 292, 414,
	266, 191, 312, 478, 204, 403, 221, 211, 197, 426,
	450, 218, 406, 0, 0, 486, 199, 448, 423, 333,
	289, 290, 198, 0, 387, 242, 264, 232, 353, 445,
	446, 230, 487, 208, 467, 201, 0, 466, 346, 441,
	449, 334, 324, 200, 447, 332, 323, 295, 253, 275,
	381, 317, 382, 276, 342, 341, 343, 194, 459, 0,
	195, 0, 420, 460, 488, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 310, 357, 380, 378,
	384, 0, 436, 453, 463, 470, 476, 477, 479, 480,
	481, 482, 483, 345, 278, 416, 294, 315, 0, 0,
	363, 396, 219, 457, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 325, 408, 454, 296, 297, 298,
	0, 187, 202, 311, 0, 385, 261, 485, 465, 461,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	321, 327, 328, 329, 330, 347, 348, 349, 352, 355,
	356, 359, 361, 362, 365, 372, 373, 374, 375, 377,
	379, 386, 390, 398, 399, 400, 401, 402, 404, 405,
	410, 411, 412, 413, 421, 425, 443, 444, 456, 469,
	474, 270, 451, 475, 0, 320, 0, 0, 322, 254,
	273, 284, 0, 464, 422, 207, 392, 262, 196, 225,
	210, 233, 248, 251, 288, 331, 338, 367, 371, 267,
	245, 223, 389, 220, 407, 428, 429, 430, 432, 335,
	240, 370, 433, 0, 318, 434, 435, 280, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 1277, 244, 0, 0, 0, 0, 309, 241,
	0, 0, 368, 0, 193, 0, 409, 228, 319, 316,
	440, 255, 247, 243, 227, 281, 326, 366, 427, 360,
	0, 313, 0, 0, 418, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 351, 419, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 305, 307, 306,
	299, 300, 301, 302, 0, 303, 304, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 437, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 340,
	231, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 293, 188, 205, 0, 0,
	350, 391, 397, 0, 0, 0, 229, 0, 395, 364,
	455, 213, 257, 388, 369, 393, 376, 260, 0, 0,
	394, 314, 442, 383, 452, 472, 473, 237, 344, 462,
	431, 468, 484, 206, 234, 358, 424, 458, 415, 337,
	438, 439, 292, 414, 266, 191, 312, 478, 204, 403,
	221, 211, 197, 426, 450, 218, 406, 0, 0, 486,
	199, 448, 423, 333, 289, 290, 198, 0, 387, 242,
	264, 232, 353, 445, 446, 230, 487, 208, 467, 201,
	0, 466, 346, 441, 449, 334, 324, 200, 447, 332,
	323, 295, 253, 275, 381, 317, 382, 276, 342, 341,
	343, 194, 459, 0, 195, 0, 420, 460, 488, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	310, 357, 380, 378, 384, 0, 436, 453, 463, 470,
	476, 477, 479, 480, 481, 482, 483, 345, 278, 416,
	294, 315, 0, 0, 363, 396, 219, 457, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 325, 408,
	454, 296, 297, 298, 0, 187, 202, 311, 0, 385,
	261, 485, 465, 461, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 321, 327, 328, 329, 330, 347,
	348, 349, 352, 355, 356, 359, 361, 362, 365, 372,
	373, 374, 375, 377, 379, 386, 390, 398, 399, 400,
	401, 402, 404, 405, 410, 411, 412, 413, 421, 425,
	443, 444, 456, 469, 474, 270, 451, 475, 0, 320,
	0, 0, 322, 254, 273, 284, 0, 464, 422, 207,
	392, 262, 196, 225, 210, 233, 248, 251, 288, 331,
	338, 367, 371, 267, 245, 223, 389, 220, 407, 428,
	429, 430, 432, 335, 240, 370, 433, 0, 318, 434,
	435, 280, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 309, 241, 0, 0, 368, 0, 193, 0,
	409, 228, 319, 316, 440, 255, 247, 243, 227, 281,
	326, 366, 427, 360, 0, 313, 0, 0, 418, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 351, 419,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1097,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 305, 307, 306, 299, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	437, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 340, 231, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 293,
	188, 205, 0, 0, 350, 391, 397, 0, 0, 0,
	229, 0, 395, 364, 455, 213, 257, 388, 369, 393,
	376, 260, 0, 0, 394, 314, 442, 383, 452, 472,
	473, 237, 344, 462, 431, 468, 484, 206, 234, 358,
	424, 458, 415, 337, 438, 439, 292, 414, 266, 191,
	312, 478, 204, 403, 221, 211, 197, 426, 450, 218,
	406, 0, 0, 486, 199, 448, 423, 333, 289, 290,
	198, 0, 387, 242, 264, 232, 353, 445, 446, 230,
	487, 208, 467, 201, 0, 466, 346, 441, 449, 334,
	324, 200, 447, 332, 323, 295, 253, 275, 381, 317,
	382, 276, 342, 341, 343, 194, 459, 0, 195, 0,
	420, 460, 488, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 310, 357, 380, 378, 384, 0,
	436, 453, 463, 470, 476, 477, 479, 480, 481, 482,
	483, 345, 278, 416, 294, 315, 0, 0, 363, 396,
	219, 457, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 325, 408, 454, 296, 297, 298, 0, 187,
	202, 311, 0, 385, 261, 485, 465, 461, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 321, 327,
	328, 329, 330, 347, 348, 349, 352, 355, 356, 359,
	361, 362, 365, 372, 373, 374, 375, 377, 379, 386,
	390, 398, 399, 400, 401, 402, 404, 405, 410, 411,
	412, 413, 421, 425, 443, 444, 456, 469, 474, 270,
	451, 475, 0, 320, 0, 0, 322, 254, 273, 284,
	0, 464, 422, 207, 392, 262, 196, 225, 210, 233,
	248, 251, 288, 331, 338, 367, 371, 267, 245, 223,
	389, 220, 407, 428, 429, 430, 432, 335, 240, 370,
	433, 0, 318, 434, 435, 280, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 309, 241, 0, 0,
	368, 0, 193, 0, 409, 228, 319, 316, 440, 255,
	247, 243, 227, 281, 326, 366, 427, 360, 0, 313,
	0, 0, 418, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 351, 419, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 305, 307, 306, 299, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 437, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 340, 231, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 293, 188, 205, 0, 0, 350, 391,
	397, 0, 0, 0, 229, 0, 395, 364, 455, 213,
	257, 388, 369, 393, 376, 260, 0, 0, 394, 314,
	442, 383, 452, 472, 473, 237, 344, 462, 431, 468,
	484, 206, 234, 358, 424, 458, 415, 337, 438, 439,
	292, 414, 266, 191, 312, 478, 204, 403, 221, 211,
	197, 426, 450, 218, 406, 0, 0, 486, 199, 448,
	423, 333, 289, 290, 198, 0, 387, 242, 264, 232,
	353, 445, 446, 230, 487, 208, 467, 201, 0, 466,
	346, 441, 449, 334, 324, 200, 447, 332, 323, 295,
	253, 275, 381, 317, 382, 276, 342, 341, 343, 194,
	459, 0, 195, 0, 420, 460, 488, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 310, 357,
	380, 378, 384, 0, 436, 453, 463, 470, 476, 477,
	479, 480, 481, 482, 483, 345, 278, 416, 294, 315,
	0, 0, 363, 396, 219, 457, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 325, 408, 454, 296,
	297, 298, 0, 187, 202, 311, 0, 385, 261, 485,
	465, 461, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 723, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 321, 327, 328, 329, 330, 347, 348, 349,
	352, 355, 356, 359, 361, 362, 365, 372, 373, 374,
	375, 377, 379, 386, 390, 398, 399, 400, 401, 402,
	404, 405, 410, 411, 412, 413, 421, 425, 443, 444,
	456, 469, 474, 270, 451, 475, 0, 320, 0, 0,
	322, 254, 273, 284, 0, 464, 422, 207, 392, 262,
	196, 225, 210, 233, 248, 251, 288, 331, 338, 367,
	371, 267, 245, 223, 389, 220, 407, 428, 429, 430,
	432, 335, 240, 370, 433, 0, 318, 434, 435, 280,
	0, 0, 0, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	309, 241, 0, 0, 368, 0, 193, 0, 409, 228,
	319, 316, 440, 255, 247, 243, 227, 281, 326, 366,
	427, 360, 0, 313, 0, 0, 418, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 351, 419, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 305,
	307, 306, 299, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 437, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 0, 268,
	0, 340, 231, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 293, 188, 205,
	0, 0, 350, 391, 397, 0, 0, 0, 229, 0,
	395, 364, 455, 213, 257, 388, 369, 393, 376, 260,
	0, 0, 394, 314, 442, 383, 452, 472, 473, 237,
	344, 462, 431, 468, 484, 206, 234, 358, 424, 458,
	415, 337, 438, 439, 292, 414, 266, 191, 312, 478,
	204, 403, 221, 211, 197, 426, 450, 218, 406, 0,
	0, 486, 199, 448, 423, 333, 289, 290, 198, 0,
	387, 242, 264, 232, 353, 445, 446, 230, 487, 208,
	467, 201, 0, 466, 346, 441, 449, 334, 324, 200,
	447, 332, 323, 295, 253, 275, 381, 317, 382, 276,
	342, 341, 343, 194, 459, 0, 195, 0, 420, 460,
	488, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 310, 357, 380, 378, 384, 0, 436, 453,
	463, 470, 476, 477, 479, 480, 481, 482, 483, 345,
	278, 416, 294, 315, 0, 0, 363, 396, 219, 457,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	325, 408, 454, 296, 297, 298, 0, 187, 202, 311,
	0, 385, 261, 485, 465, 461, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 321, 327, 328, 329,
	330, 347, 348, 349, 352, 355, 356, 359, 361, 362,
	365, 372, 373, 374, 375, 377, 379, 386, 390, 398,
	399, 400, 401, 402, 404, 405, 410, 411, 412, 413,
	421, 425, 443, 444, 456, 469, 474, 562, 451, 475,
	0, 320, 0, 0, 322, 254, 273, 284, 0, 464,
	422, 207, 392, 262, 196, 225, 210, 233, 248, 251,
	288, 331, 338, 367, 371, 267, 245, 223, 389, 220,
	407, 428, 429, 430, 432, 335, 240, 370, 433, 0,
	318, 434, 435, 280, 0, 0, 0, 0, 0, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 309, 241, 0, 0, 368, 0,
	193, 0, 409, 228, 319, 316, 440, 255, 247, 243,
	227, 281, 326, 366, 427, 360, 0, 313, 0, 0,
	418, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	351, 419, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 305, 307, 306, 299, 300, 301, 302,
	0, 303, 304, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 437, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 340, 231, 0, 0, 510,
	0, 471, 0, 0, 0, 0, 0, 0, 0, 308,
	0, 293, 188, 205, 0, 0, 350, 391, 397, 0,
	0, 0, 229, 0, 395, 364, 455, 213, 257, 388,
	369, 393, 376, 260, 0, 0, 394, 314, 442, 383,
	452, 472, 473, 237, 344, 462, 431, 468, 484, 206,
	234, 358, 424, 458, 415, 337, 438, 439, 292, 414,
	266, 191, 312, 478, 204, 403, 221, 211, 197, 426,
	450, 218, 406, 0, 0, 486, 199, 448, 423, 333,
	289, 290, 198, 0, 387, 242, 264, 232, 353, 445,
	446, 230, 487, 208, 467, 201, 0, 466, 346, 441,
	449, 334, 324, 200, 447, 332, 323, 295, 253, 275,
	381, 317, 382, 276, 342, 341, 343, 194, 459, 0,
	195, 0, 420, 460, 488, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 310, 357, 380, 378,
	384, 0, 436, 453, 463, 470, 476, 477, 479, 480,
	481, 482, 483, 345, 278, 416, 294, 315, 0, 0,
	363, 396, 219, 457, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 325, 408, 454, 296, 297, 298,
	0, 187, 202, 311, 0, 385, 261, 485, 465, 461,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	321, 327, 328, 329, 330, 347, 348, 349, 352, 355,
	356, 359, 361, 362, 365, 372, 373, 374, 375, 377,
	379, 386, 390, 398, 399, 400, 401, 402, 404, 405,
	410, 411, 412, 413, 421, 425, 443, 444, 456, 469,
	474, 270, 451, 475, 0, 320, 0, 0, 322, 254,
	273, 284, 0, 464, 422, 207, 392, 262, 196, 225,
	210, 233, 248, 251, 288, 331, 338, 367, 371, 267,
	245, 223, 389, 220, 407, 428, 429, 430, 432, 335,
	240, 370, 433, 0, 318, 434, 435, 280, 0, 0,
	0, 0, 0, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 309, 241,
	0, 0, 368, 0, 193, 0, 409, 228, 319, 316,
	440, 255, 247, 243, 227, 281, 326, 366, 427, 360,
	0, 313, 0, 0, 418, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 351, 419, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 305, 307, 306,
	299, 300, 301, 302, 0, 303, 304, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 437, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 340,
	231, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	0, 0, 0, 308, 0, 293, 188, 205, 0, 0,
	350, 391, 397, 0, 0, 0, 229, 0, 395, 364,
	455, 213, 257, 388, 369, 393, 376, 260, 0, 0,
	394, 314, 442, 383, 452, 472, 473, 237, 344, 462,
	431, 468, 484, 206, 234, 358, 424, 458, 415, 337,
	438, 439, 292, 414, 266, 191, 312, 478, 204, 403,
	221, 211, 197, 426, 450, 218, 406, 0, 0, 486,
	199, 448, 423, 333, 289, 290, 198, 0, 387, 242,
	264, 232, 353, 445, 446, 230, 487, 208, 467, 201,
	0, 466, 346, 441, 449, 334, 324, 200, 447, 332,
	323, 295, 253, 275, 381, 317, 382, 276, 342, 341,
	343, 194, 459, 0, 195, 0, 420, 460, 488, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	310, 357, 380, 378, 384, 0, 436, 453, 463, 470,
	476, 477, 479, 480, 481, 482, 483, 345, 278, 416,
	294, 315, 0, 0, 363, 396, 219, 457, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 325, 408,
	454, 296, 297, 298, 0, 187, 202, 311, 0, 385,
	261, 485, 465, 461, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 321, 327, 328, 329, 330, 2674,
	348, 349, 352, 355, 356, 359, 361, 362, 365, 372,
	373, 374, 375, 377, 379, 386, 390, 398, 399, 400,
	401, 402, 404, 405, 410, 411, 412, 413, 421, 425,
	443, 444, 456, 469, 474, 270, 451, 475, 0, 320,
	0, 0, 322, 254, 273, 284, 0, 464, 422, 207,
	392, 262, 196, 225, 210, 233, 248, 251, 288, 331,
	338, 367, 371, 267, 245, 223, 389, 220, 407, 428,
	429, 430, 432, 335, 240, 370, 433, 0, 318, 434,
	435, 280, 0, 0, 0, 0, 0, 0, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 309, 241, 0, 0, 368, 0, 193, 0,
	409, 228, 319, 316, 440, 255, 247, 243, 227, 281,
	326, 366, 427, 360, 0, 313, 0, 0, 418, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 351, 419,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 305, 307, 306, 299, 300, 301, 302, 0, 303,
	304, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	437, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 340, 231, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 0, 0, 0, 308, 0, 293,
	188, 205, 0, 0, 350, 391, 397, 0, 0, 0,
	229, 0, 395, 364, 455, 213, 257, 388, 369, 393,
	376, 260, 0, 0, 394, 314, 442, 383, 452, 472,
	473, 237, 344, 462, 431, 468, 484, 206, 234, 358,
	424, 458, 415, 337, 438, 439, 292, 414, 266, 191,
	312, 478, 204, 403, 221, 211, 197, 426, 450, 218,
	406, 0, 0, 486, 199, 448, 423, 333, 289, 290,
	198, 0, 387, 242, 264, 232, 353, 445, 446, 230,
	487, 208, 467, 201, 0, 466, 346, 441, 449, 334,
	324, 200, 447, 332, 323, 295, 253, 275, 381, 317,
	382, 276, 342, 341, 343, 194, 459, 0, 195, 0,
	420, 460, 488, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 310, 357, 380, 378, 384, 0,
	436, 453, 463, 470, 476, 477, 479, 480, 481, 482,
	483, 345, 278, 416, 294, 315, 0, 0, 363, 396,
	219, 457, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 325, 408, 454, 296, 297, 298, 0, 187,
	202, 311, 0, 385, 261, 485, 465, 461, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 321, 327,
	328, 329, 330, 347, 348, 349, 352, 355, 356, 359,
	361, 362, 365, 372, 373, 374, 375, 377, 379, 386,
	390, 398, 399, 400, 401, 402, 404, 405, 410, 411,
	412, 413, 421, 425, 443, 444, 456, 469, 474, 270,
	451, 475, 0, 320, 0, 0, 322, 254, 273, 284,
	0, 464, 422, 207, 392, 262, 196, 225, 210, 233,
	248, 251, 288, 331, 338, 367, 371, 267, 245, 223,
	389, 220, 407, 428, 429, 430, 432, 335, 240, 370,
	433, 0, 318, 434, 435, 280, 0, 0, 0, 0,
	0, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 309, 241, 0, 0,
	368, 0, 193, 0, 409, 228, 319, 316, 440, 255,
	247, 243, 227, 281, 326, 366, 427, 360, 0, 313,
	0, 0, 418, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 351, 419, 259, 0, 0, 0, 0, 184,
	2376, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 305, 307, 306, 299, 300,
	301, 302, 0, 303, 304, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 437, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 340, 231, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 0, 0,
	0, 308, 0, 293, 188, 205, 0, 0, 350, 391,
	397, 0, 0, 0, 229, 0, 395, 364, 455, 213,
	257, 388, 369, 393, 376, 260, 0, 0, 394, 314,
	442, 383, 452, 472, 473, 237, 344, 462, 431, 468,
	484, 206, 234, 358, 424, 458, 415, 337, 438, 439,
	292, 414, 266, 191, 312, 478, 204, 403, 221, 211,
	197, 426, 450, 218, 406, 0, 0, 486, 199, 448,
	423, 333, 289, 290, 198, 0, 387, 242, 264, 232,
	353, 445, 446, 230, 487, 208, 467, 201, 0, 466,
	346, 441, 449, 334, 324, 200, 447, 332, 323, 295,
	253, 275, 381, 317, 382, 276, 342, 341, 343, 194,
	459, 0, 195, 0, 420, 460, 488, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 310, 357,
	380, 378, 384, 0, 436, 453, 463, 470, 476, 477,
	479, 480, 481, 482, 483, 345, 278, 416, 294, 315,
	0, 0, 363, 396, 219, 457, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 325, 408, 454, 296,
	297, 298, 0, 187, 202, 311, 0, 385, 261, 485,
	465, 461, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 321, 327, 328, 329, 330, 347, 348, 349,
	352, 355, 356, 359, 361, 362, 365, 372, 373, 374,
	375, 377, 379, 386, 390, 398, 399, 400, 401, 402,
	404, 405, 410, 411, 412, 413, 421, 425, 443, 444,
	456, 469, 474, 270, 451, 475, 0, 320, 0, 0,
	322, 254, 273, 284, 0, 464, 422, 207, 392, 262,
	196, 225, 210, 233, 248, 251, 288, 331, 338, 367,
	371, 267, 245, 223, 389, 220, 407, 428, 429, 430,
	432, 335, 240, 370, 433, 0, 318, 434, 435, 280,
	0, 0, 0, 0, 0, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	309, 241, 0, 0, 368, 0, 193, 0, 409, 228,
	319, 316, 440, 255, 247, 243, 227, 281, 326, 366,
	427, 360, 0, 313, 0, 0, 418, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 351, 419, 259, 0,
	0, 0, 0, 184, 1960, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 305,
	307, 306, 299, 300, 301, 302, 0, 303, 304, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 437, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 340, 231, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 0, 0, 0, 308, 0, 293, 188, 205,
	0, 0, 350, 391, 397, 0, 0, 0, 229, 0,
	395, 364, 455, 213, 257, 388, 369, 393, 376, 260,
	0, 0, 394, 314, 442, 383, 452, 472, 473, 237,
	344, 462, 431, 468, 484, 206, 234, 358, 424, 458,
	415, 337, 438, 439, 292, 414, 266, 191, 312, 478,
	204, 403, 221, 211, 197, 426, 450, 218, 406, 0,
	0, 486, 199, 448, 423, 333, 289, 290, 198, 0,
	387, 242, 264, 232, 353, 445, 446, 230, 487, 208,
	467, 201, 0, 466, 346, 441, 449, 334, 324, 200,
	447, 332, 323, 295, 253, 275, 381, 317, 382, 276,
	342, 341, 343, 194, 459, 0, 195, 0, 420, 460,
	488, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 310, 357, 380, 378, 384, 0, 436, 453,
	463, 470, 476, 477, 479, 480, 481, 482, 483, 345,
	278, 416, 294, 315, 0, 0, 363, 396, 219, 457,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	325, 408, 454, 296, 297, 298, 0, 187, 202, 311,
	0, 385, 261, 485, 465, 461, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 321, 327, 328, 329,
	330, 347, 348, 349, 352, 355, 356, 359, 361, 362,
	365, 372, 373, 374, 375, 377, 379, 386, 390, 398,
	399, 400, 401, 402, 404, 405, 410, 411, 412, 413,
	421, 425, 443, 444, 456, 469, 474, 270, 451, 475,
	0, 320, 0, 0, 322, 254, 273, 284, 0, 464,
	422, 207, 392, 262, 196, 225, 210, 233, 248, 251,
	288, 331, 338, 367, 371, 267, 245, 223, 389, 220,
	407, 428, 429, 430, 432, 335, 240, 370, 0, 0,
	318, 434, 435, 280,
}

var yyPact = [...]int{
	3664, -1000, -391, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1900, 1929, -1000, -1000,
	-1000, -1000, 2044, -1000, 656, 1682, -1000, 1892, 5292, -1000,
	37759, 408, -1000, 36631, 406, 150, 37759, -1000, 133, -1000,
	121, 37759, 131, 36067, -1000, -1000, -302, 16324, 1837, 9,
	8, 37759, -1000, -1000, -1000, -1000, 2007, 1626, -1000, 330,
	-1000, -1000, -1000, -1000, -1000, -1000, 35503, -1000, -1000, -1000,
	1889, 1875, 2048, 570, 1832, -1000, 1958, 1626, -1000, 16324,
	1989, 1947, 15760, -1000, 15760, 360, -1000, -1000, 11805, -1000,
	-1000, 21966, 37759, 37759, 254, -1000, 1892, -1000, -1000, 295,
	-1000, 242, 1546, -1000, 1542, -1000, 424, 451, 301, 415,
	398, 299, 298, 294, 290, 289, 288, 287, 286, 308,
	-1000, 608, 608, -148, -149, 2516, 344, 344, 344, 375,
	1861, 1856, -1000, 566, -1000, 608, 608, 292, 608, 608,
	608, 608, 217, 216, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 296,
	1892, 191, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37759, 162,
	37759, -1000, 500, 37759, 718, 718, 29, 718, 718, 718,
	718, 130, 561, 6, -1000, 128, 183, 106, 188, 722,
	186, 136, -1000, -1000, 184, 722, 1201, 587, 115, -1000,
	718, 9517, 9517, 9517, -1000, 1877, -1000, -1000, -1000, -1000,
	-1000, -1000, 1118, -1000, 374, -1000, -1000, -1000, -1000, 37759,
	34939, 312, 630, -1000, -1000, -1000, 100, -1000, -1000, 1370,
	989, 16324, 1362, -1000, 1158, 536, -1000, -1000, -1000, -1000,
	-1000, 479, 16888, 16888, 16888, 16888, -1000, -1000, 1628, 1628,
	1628, 1628, 16888, 1628, 16888, 1628, 1628, 1628, 1628, 16324,
	1628, 1628, 1628, -1000, 1628, 1628, 1628, 1628, 1628, 1628,
	1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628,
	1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 499, 1628,
	1628, 1628, 1628, 1628, -1000, -1000, -1000, -1000, 1628, 1628,
	1628, 1628, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19709, -1000, 14068, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 37759, -1000, 1628, 146, 37759, 37759, 243,
	1958, 1626, -1000, 2007, 2019, 330, -1000, 1887, 1659, 1596,
	1198, 1626, 1502, 37759, -1000, 1630, -1000, -1000, -1000, 1720,
	1126, 1200, -1000, -1000, -1000, -1000, 968, 16324, -1000, -1000,
	2039, -1000, 19145, 487, 811, 2038, 34375, -1000, 360, 360,
	1522, 11233, -16, -1000, -1000, -1000, 617, 24786, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1877, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1610,
	37759, -1000, -1000, 4323, 1141, -1000, 1681, -1000, 1608, -1000,
	1639, 1688, 405, 1141, 402, 399, 397, -1000, -70, -1000,
	-1000, -1000, -1000, -1000, 608, 608, -1000, 307, 1987, 5292,
	2897, -1000, -1000, -1000, 33811, 1680, 1141, -1000, 1678, -1000,
	710, 455, 492, 492, 1141, -1000, -1000, 37759, 1141, 689,
	688, 37759, 37759, -1000, 33247, -1000, 32683, 32119, 1023, 37759,
	31555, 30991, 30427, 29863, 29299, -1000, 1759, -1000, 1679, -1000,
	-1000, -1000, 37759, 37759, 37759, 293, -1000, -1000, 37759, 1141,
	-1000, -1000, 993, 991, 608, 608, 969, 1196, 1194, 1189,
	608, 608, 967, 1183, 26478, 196, 959, 952, 951, 1076,
	1167, 210, 1050, 973, 947, 37759, 1673, 37759, -1000, 174,
	629, 358, 614, 1892, 1834, 1513, 373, 404, 1141, 351,
	351, 37759, -1000, 10089, -1000, -1000, 1166, 16324, -1000, 726,
	722, 722, -1000, -1000, -1000, -1000, -1000, -1000, 718, 37759,
	726, -1000, -1000, -1000, 722, 718, 37759, 718, 718, 718,
	718, 722, 722, 722, 718, 37759, 37759, 37759, 37759, 37759,
	37759, 37759, 37759, 37759, 9517, 9517, 9517, 587, 718, -306,
	-1000, 1163, -1000, 1731, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 129, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -88, 1508, 28735, -1000, -308, -310, -311,
	-321, -1000, -1000, -1000, -327, -329, -1000, -1000, -1000, 16324,
	16324, 16324, 16324, -1000, 927, 16888, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 822, 870, 16888, 16888, 16888, 16888, 16888,
	16888, 16888, 16888, 16888, 16888, 16888, 16888, 16888, 16888, 16888,
	642, 1151, 1147, 536, 536, 536, 536, -1000, 15760, 16324,
	16324, 536, -1000, 1141, 28171, 15760, 15760, 16324, 1868, 638,
	989, 37759, -1000, 1198, -1000, -1000, -1000, 866, -1000, 37759,
	37759, 1229, 16324, 16324, 16324, 16324, 16324, 16324, 12939, 16324,
	16324, 16324, 16324, 16324, 16324, 16324, 16324, 16324, 16324, 12375,
	10089, 15760, 15760, 15760, 15760, 15760, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 486, 1586, 1279,
	1606, -1000, 1504, -1000, -168, 21402, 16324, 1146, 2034, 1715,
	37759, -1000, -1000, -1000, 1958, -1000, 1958, 1586, 1822, 1781,
	15760, -1000, -1000, 1822, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1280, -1000, 37759, 1502, 1944, 37759, 1777, 1143,
	300, -1000, 16324, 16324, 1484, -1000, 781, 37759, -1000, -1000,
	27607, -1000, -1000, 8945, -1000, 37759, 276, 37759, -1000, 20838,
	27043, 10661, -16, -1000, 10661, 1439, -1000, -10, -26, 13503,
	507, -1000, -1000, -1000, 2516, 18016, 1356, 507, 60, -1000,
	-1000, -1000, 1639, -1000, 1639, 1639, 1639, 1639, 300, 300,
	300, 300, -1000, -1000, -1000, -1000, -1000, 1671, 1669, -1000,
	1639, 1639, 1639, 1639, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1668, 1668, 1668, 1641, 1641, 339, -1000, 16324, 240,
	37759, 1928, 945, 174, 357, 1711, 1141, 1141, 1141, 357,
	-1000, 1287, 1245, -1000, -380, 1479, -1000, -1000, 1986, -1000,
	-1000, 717, 757, 749, 472, 37759, 151, 239, -1000, 325,
	-1000, 37759, 1141, 683, 492, 1141, -1000, 1141, -1000, -1000,
	-1000, -1000, -1000, 1141, 1472, -1000, 1420, 792, 730, 783,
	723, 1472, -1000, -1000, -96, 1472, -1000, 1472, -1000, 1472,
	-1000, 1472, -1000, 1472, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 651, 37759, 151, 642, -1000, 367, -1000, -1000,
	642, 642, -1000, -1000, -1000, -1000, 1140, 1133, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -367, 37759, -1000, 169, 612,
	230, 265, 238, 37759, 141, 1930, 190, 197, 37759, 37759,
	351, 1730, 37759, 1912, 37759, -1000, -1000, -1000, -1000, -1000,
	989, 37759, -1000, -1000, 718, 718, -1000, -1000, 37759, 718,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 718, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 37759, 37759, -1000, -1000,
	-1000, -1000, -1000, 297, -14, 322, -1000, -1000, -1000, -1000,
	-1000, 1953, -1000, 989, 664, 648, -1000, -1000, -1000, 934,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 822, 16888, 16888,
	16888, 1419, 422, 835, 1496, 1541, 666, 666, 817, 817,
	548, 548, 548, 548, 548, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1544, -1000, 984, 804, 1198, -1000, 1544, 1544,
	1134, 15760, -1000, -1000, 653, -1000, 16324, 1198, -1000, -1000,
	1198, 1468, 1464, 2029, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 895, 1115, 1115, 1115, 1115,
	1115, 16324, 1077, -1000, -1000, -1000, 1198, 1370, 1198, 1453,
	-1000, 1482, 1115, 1475, 1463, 1434, 719, 1406, 1386, 1317,
	1198, 15760, 15760, 1448, 1628, 485, -1000, 1544, 1198, 1198,
	1544, 1544, 10089, 1198, -1000, 37759, -1000, -285, -1000, -23,
	549, 1628, -1000, 26478, 1198, -1000, 1073, -1000, 38887, -1000,
	-1000, -1000, -1000, -1000, 24222, 1653, 1822, -1000, -1000, 1628,
	1598, -1000, -1000, 300, 41, 23658, -1000, -1000, 989, 989,
	16324, -1000, -1000, -1000, -1000, -1000, -1000, 477, 2017, 305,
	1628, -1000, 1354, 1704, -1000, -1000, -1000, 1937, 18581, -1000,
	1628, 1628, 37759, 1651, 1398, -1000, 474, -1000, 1439, -16,
	-29, -1000, -1000, -1000, -1000, 989, -1000, 1176, 284, 309,
	-1000, 331, -1000, -1000, -1000, -1000, 1848, 51, -1000, -1000,
	-1000, 300, 300, -1000, -1000, -1000, -1000, -1000, -1000, 1130,
	1130, -1000, -1000, -1000, -1000, -1000, 943, -1000, -1000, -1000,
	941, -1000, -1000, 1269, 1703, 240, -1000, -1000, 608, 1124,
	1851, 37759, -1000, -1000, 1332, 169, 37759, 643, 1729, -1000,
	1711, 1711, 1711, 37759, -1000, -1000, -1000, -1000, -374, 54,
	316, -1000, -1000, -1000, 378, 37759, 1588, -1000, 149, -1000,
	1318, 1811, 37759, -1000, 1585, 1664, 1141, 1141, -1000, -1000,
	-1000, 37759, 1628, -1000, -1000, -1000, -1000, 380, 1888, 1870,
	151, 149, 507, 1141, -1000, -1000, -1000, -1000, -1000, -370,
	1583, 394, 158, 269, 37759, 37759, 37759, 37759, 37759, 457,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 200, 362,
	-1000, 37759, 37759, 535, -1000, -1000, -1000, 722, -1000, -1000,
	722, -1000, -1000, -1000, -1000, -1000, 1869, 37759, -15, -345,
	-1000, -338, -1000, -1000, -1000, -1000, 1299, 418, 835, 16888,
	16888, 15760, -90, 571, 571, 642, -1000, -1000, -1000, 16324,
	16324, 1384, 634, -1000, 16324, 875, -1000, -1000, 16324, 16324,
	16324, 1198, 249, -1000, -1000, -1000, -1000, -1000, 2028, -1000,
	16324, -1000, -1000, 16324, 16324, -1000, 16324, 16324, 17452, 1198,
	17452, 16324, 16324, 17452, -1000, 1544, 1544, 15760, 10089, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 549,
	-1000, 492, 492, 492, 37759, -1000, -1000, -1000, -1000, -1000,
	-1000, 1436, 1959, -1000, 1801, 1797, 2027, 2017, -1000, 20838,
	1822, -1000, -1000, 37759, -259, -1000, 1830, 1814, -1000, -1000,
	-1000, -1000, 8373, 1958, 16324, 1728, 37759, 1628, -1000, 20274,
	37759, 37759, 20838, 20838, 20838, 20838, 20838, -1000, 1755, 1752,
	-1000, 1764, 1761, 1775, 37759, -1000, 1537, 1198, 2019, 18581,
	330, 16324, 22530, 1350, 20838, -1000, -1000, 20838, 37759, 7801,
	-1000, -1000, -17, -35, -1000, -1000, -1000, -1000, 2516, -1000,
	-1000, 769, 1935, 1842, -1000, -1000, -1000, -1000, 1535, -1000,
	1516, 1431, 1489, 164, -1000, 1684, 1867, 608, 608, -1000,
	935, -1000, 1141, -1000, -1000, 379, -1000, 1908, 37759, 1727,
	1726, 1725, -1000, -379, 912, 1650, 1547, 16324, 1644, 1985,
	1402, 37759, -1000, -1000, 37759, -1000, -1000, 382, -1000, 240,
	37759, -1000, -1000, -1000, 239, 37759, -1000, 5737, 149, -1000,
	-1000, -1000, -1000, -1000, -1000, 37759, 170, -1000, 1642, 1079,
	-1000, -1000, 1705, -1000, -1000, -1000, -1000, 145, 222, -1000,
	37759, 502, 1703, 37759, -1000, -1000, -1000, 718, 718, -1000,
	-1000, 1866, -1000, 1141, 16888, 16888, -1000, 536, -1000, 1628,
	1198, 1639, 1639, -1000, 1639, 1641, -1000, 1639, 118, 1639,
	116, 1639, -1000, -1000, 1198, 1198, 1043, 1071, -77, -1000,
	989, 16324, 1217, 1210, 1115, -1000, 1638, 1637, 16324, 1115,
	-1000, 989, 719, 1193, 1387, -1000, -1000, -1000, 1121, -1000,
	1417, 1115, 1099, 1198, -1000, -1000, 1198, -1000, -1000, 1952,
	1952, 1952, 1459, 38323, 37759, -1000, -1000, -1000, -1000, 2017,
	2013, 1409, -1000, -1000, 41, 368, -1000, 1824, 1814, -1000,
	1981, 1826, 1975, -1000, -1000, -1000, 989, -1000, 1897, 1414,
	-1000, 606, 1288, -1000, -1000, 15196, 1476, 1795, 458, 1459,
	1365, 1704, 1702, 1723, 1675, -1000, -1000, -1000, -1000, 1744,
	-1000, 1714, -1000, -1000, 1630, -1000, -1000, 1279, 1198, 1086,
	276, 20838, 1336, 1336, -1000, 437, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 795, 5587, 2046, -1000, 1119, -1000, 1159,
	-1000, 680, 679, -1000, 37759, 1635, -1000, 300, 1113, 300,
	894, -1000, 874, -1000, -1000, -186, -1000, -1000, 1649, 1707,
	-1000, -1000, 37759, -1000, -1000, 37759, 37759, 37759, 1634, 1971,
	-1000, 16324, 1633, 601, 1203, 37759, 37759, -1000, -1000, 234,
	1628, -1000, 1412, 1393, -1000, -133, -1000, 16324, -1000, -1000,
	-1000, 1055, 1055, -1000, 1630, -1000, -1000, -1000, 1282, -1000,
	-1000, -98, 37759, 37759, 37759, 37759, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 536, 16888, -1000, -1000, 300,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16324,
	-1000, 16324, -1000, 1958, 1087, 989, 16324, 16324, -1000, 865,
	857, 1115, -1000, 1198, 17452, -1000, 17452, -1000, 16324, -1000,
	-1000, 1628, 1793, 1628, 1628, 22530, -1000, -1000, 2013, 2001,
	1969, 1819, 1821, 1821, 1824, -1000, 1968, 1965, -1000, 1085,
	1964, 1068, 674, -1000, 37759, 16324, 1628, -1000, 313, 37759,
	1628, 37759, -1000, 1992, -1000, -1000, 16324, 1632, -1000, 16324,
	-1000, -1000, -1000, -1000, -1000, -1000, 5427, 2017, 1336, -1000,
	-1000, 562, -1000, 16324, -1000, -1000, -1000, 2985, -1000, -1000,
	-1000, -1000, -1000, 1631, 16324, -1000, -1000, -1000, 1255, 1252,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1630, -1000,
	-1000, -1000, -1000, 239, -377, 1139, 37759, 856, -1000, 1391,
	1402, 463, -1000, 16324, 310, -1000, 239, -1000, -150, -151,
	1115, -1000, -1000, 1934, -1000, -1000, 10089, -1000, -1000, 1629,
	1710, -1000, 168, -1000, 1115, 1115, 1198, -1000, 1115, 1115,
	1240, 1215, -1000, -1000, 1387, -1000, 978, 23094, -1000, 1961,
	1960, 25914, 25914, 549, 2001, -1000, 16324, 16324, 1815, 910,
	-1000, -1000, -1000, -1000, 1051, 1041, -1000, 1039, -1000, 2042,
	-1000, 989, -1000, 1628, -1000, 414, 1288, -1000, 1958, 989,
	37759, 989, 45, 1992, -1000, 1115, -1000, 1628, 1628, 1628,
	1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628,
	1628, 1628, 1628, 37759, 997, -1000, -1000, 1917, 1352, 53,
	-1000, 1343, -1000, -1000, -1000, -1000, 14632, -1000, -1000, -1000,
	-1000, -1000, -1000, 330, 1382, -1000, 600, 37759, 37759, 1198,
	278, -101, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 16324, 1338, -1000, -1000, -1000, -1000, -1000, 1338, 1338,
	-1000, -1000, 989, 1370, -1000, 890, -1000, -1000, -1000, -1000,
	-1000, 37759, 1288, 37759, -1000, 1324, 1198, 1628, 1958, -1000,
	1307, -1000, 330, -1000, 1627, 1547, -1000, 1198, -97, 10089,
	7229, 1296, -1000, -1000, 1771, -94, -123, 719, 25350, -1000,
	-1000, -1000, -1000, -1000, 1218, -1000, -1000, 22530, 37195, -1000,
	1722, 923, -97, 16324, 1601, -1000, -1000, 7, -1000, -1000,
	-1000, -1000, -1000, 1705, -1000, 1763, -1000, 1198, -1000, -1000,
	-1000, 1276, -1000, 3311, -216, 1719, -1000, 2022, -1000, -1000,
	-1000, 770, 929, -1000, -1000, -1000, -1000, 761, 37759, 334,
	-1000, -1000, -98, -99, -1000, -1000, 37195, -212, 507, 5427,
	-1000, -1000, 2024, 546, 546, -1000, -1000, -386, 1271, 172,
	-1000, -107, -1000, -1000, 1902, 45, -1000, -1000, -1000, 327,
	863, -1000, -1000, 844, -386, -1000, -128, -217, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 5427, 180, 180, -1000,
	1718, -1000, -1000, 5427, -1000, 1717, -238, -1000, -331, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 2341, 2340, 25, 2, 2339, 38, 107, 190, 21,
	183, 98, 2337, 2336, 2335, 2334, 2333, 2332, 2330, 212,
	205, 204, 2328, 2322, 2319, 2318, 2317, 2316, 2314, 2312,
	2311, 2309, 202, 160, 166, 2307, 2302, 2301, 117, 168,
	81, 83, 170, 2300, 2299, 74, 2295, 2294, 2293, 175,
	174, 722, 2292, 173, 111, 35, 2291, 2289, 2285, 2284,
	2282, 2281, 2280, 2279, 2276, 2275, 2274, 2273, 2272, 2271,
	2270, 2269, 233, 2268, 2263, 15, 2262, 76, 2261, 2259,
	2257, 2256, 122, 2253, 2250, 2249, 2248, 2246, 2245, 142,
	2244, 2241, 2240, 2239, 188, 2238, 2237, 240, 100, 108,
	2236, 2235, 86, 180, 2234, 119, 2233, 2231, 2229, 149,
	2227, 3663, 2226, 60, 55, 2221, 46, 71, 53, 50,
	12, 2220, 2219, 58, 75, 2218, 96, 61, 2217, 91,
	105, 2216, 2215, 8, 5, 2214, 3, 2211, 1, 65,
	2210, 2207, 104, 2205, 2203, 2202, 88, 2201, 2199, 66,
	2198, 82, 129, 97, 73, 2196, 33, 77, 2195, 2194,
	2193, 2192, 2191, 36, 2190, 2189, 2186, 139, 27, 163,
	23, 37, 43, 131, 2183, 30, 78, 2181, 137, 135,
	2179, 48, 31, 28, 2178, 22, 128, 150, 52, 89,
	134, 2176, 2175, 47, 69, 2174, 2173, 2172, 2171, 2170,
	2169, 67, 2168, 45, 2166, 181, 2164, 9, 2163, 42,
	26, 2161, 63, 125, 68, 29, 2158, 158, 2157, 44,
	157, 124, 161, 2156, 2155, 2154, 171, 272, 2153, 2151,
	94, 162, 143, 146, 2150, 276, 2149, 2148, 92, 1500,
	1875, 24, 159, 2147, 2146, 3086, 147, 140, 16, 2145,
	197, 2144, 2142, 2140, 177, 167, 103, 1012, 106, 2139,
	14, 2138, 2137, 2136, 2135, 2132, 2131, 90, 176, 59,
	7, 151, 70, 2130, 2127, 2126, 121, 93, 2123, 155,
	152, 123, 141, 2122, 164, 153, 101, 2121, 85, 2120,
	2119, 2115, 2110, 84, 2109, 2108, 2107, 2106, 154, 148,
	115, 79, 2104, 80, 110, 145, 144, 34, 2103, 40,
	2091, 2089, 169, 20, 2085, 10, 41, 49, 19, 102,
	2083, 2082, 0, 2078, 13, 165, 282, 156, 2077, 2075,
	6, 2074, 11, 2073, 2071, 132, 2070, 2069, 2067, 18,
	32, 17, 4, 2066, 2064, 4614, 2821, 126, 2062, 182,
}

//line sql.y:6500
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 343, 344, 344, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 322, 322,
	322, 325, 325, 30, 67, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 80, 80, 20, 21, 21, 21, 21,
	347, 347, 144, 144, 142, 142, 143, 143, 212, 212,
	22, 23, 23, 222, 222, 221, 221, 221, 223, 223,
	223, 223, 257, 257, 24, 24, 24, 24, 24, 95,
	95, 324, 324, 323, 315, 315, 314, 314, 313, 321,
	321, 320, 320, 319, 36, 37, 46, 46, 46, 46,
	47, 48, 326, 326, 289, 52, 52, 51, 51, 51,
	51, 53, 53, 50, 50, 49, 49, 291, 291, 278,
	278, 290, 290, 290, 290, 290, 290, 290, 277, 277,
	106, 106, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 338, 338, 192, 192, 192, 192, 192,
	192, 115, 115, 123, 123, 123, 123, 113, 113, 114,
	112, 112, 112, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 122, 122, 119, 119,
	119, 120, 120, 120, 339, 339, 339, 339, 260, 260,
	260, 260, 263, 263, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 262, 262, 262, 262, 262, 264, 264,
	264, 264, 264, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 266, 266,
	266, 266, 266, 266, 266, 266, 276, 276, 267, 267,
	271, 271, 272, 272, 272, 273, 273, 273, 274, 274,
	269, 269, 269, 269, 269, 269, 270, 270, 270, 279,
	303, 303, 302, 302, 300, 300, 300, 300, 288, 288,
	297, 297, 297, 297, 297, 287, 287, 283, 283, 283,
	284, 284, 285, 285, 282, 282, 286, 286, 299, 299,
	298, 280, 280, 281, 281, 305, 340, 340, 340, 340,
	341, 341, 306, 331, 332, 330, 330, 330, 330, 330,
	77, 77, 77, 234, 234, 234, 295, 295, 294, 294,
	294, 296, 296, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 229, 229, 229, 329, 329, 329, 329, 329, 329,
	328, 328, 328, 292, 292, 292, 327, 327, 54, 54,
	176, 176, 43, 43, 43, 43, 43, 43, 42, 42,
	42, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 44, 44, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 82, 82, 83, 83, 83,
	83, 84, 84, 84, 308, 308, 55, 55, 3, 3,
	132, 134, 135, 135, 133, 133, 133, 133, 133, 133,
	57, 57, 56, 56, 137, 136, 138, 138, 138, 1,
	1, 2, 2, 4, 4, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 275, 275, 275,
	307, 307, 309, 311, 311, 311, 311, 310, 91, 91,
	26, 35, 35, 27, 27, 27, 27, 28, 28, 58,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 333, 333,
	228, 228, 236, 236, 227, 227, 250, 250, 250, 230,
	230, 230, 231, 231, 337, 337, 337, 60, 60, 60,
	62, 62, 63, 64, 64, 252, 252, 253, 253, 65,
	66, 78, 78, 78, 78, 78, 78, 81, 81, 81,
	13, 13, 13, 13, 74, 74, 74, 12, 12, 61,
	61, 68, 334, 334, 335, 336, 336, 336, 336, 69,
	71, 29, 29, 29, 29, 29, 29, 101, 101, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 96, 96, 96, 90, 90, 348, 72, 73, 73,
	94, 94, 94, 87, 87, 87, 93, 93, 93, 14,
	14, 15, 211, 211, 16, 16, 98, 98, 100, 100,
	100, 100, 100, 102, 102, 102, 102, 102, 102, 102,
	97, 97, 99, 99, 99, 99, 243, 243, 243, 242,
	242, 126, 126, 128, 127, 127, 129, 129, 130, 130,
	130, 130, 174, 174, 152, 152, 209, 209, 207, 207,
	208, 208, 210, 210, 210, 210, 213, 213, 131, 131,
	131, 131, 139, 139, 140, 140, 141, 141, 251, 251,
	248, 248, 248, 247, 247, 145, 145, 145, 147, 146,
	146, 146, 146, 148, 148, 150, 150, 149, 149, 151,
	156, 156, 155, 155, 153, 153, 153, 153, 154, 154,
	154, 154, 157, 157, 111, 111, 111, 111, 111, 111,
	121, 121, 121, 121, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 79, 79, 79, 225, 225, 158, 158, 166, 166,
	166, 166, 159, 159, 159, 159, 159, 159, 159, 167,
	167, 167, 173, 168, 168, 164, 164, 164, 164, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 318, 318, 317,
	317, 316, 316, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 349, 349, 268, 268, 268, 165,
	165, 165, 165, 165, 92, 92, 92, 92, 92, 256,
	256, 256, 259, 259, 259, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	179, 179, 88, 88, 177, 177, 178, 180, 180, 175,
	175, 175, 161, 161, 161, 181, 181, 182, 182, 183,
	183, 185, 184, 184, 186, 187, 187, 187, 188, 188,
	189, 189, 189, 45, 45, 45, 45, 45, 40, 40,
	40, 40, 41, 41, 41, 103, 103, 103, 103, 105,
	105, 104, 104, 75, 75, 76, 76, 76, 109, 109,
	110, 110, 110, 107, 107, 108, 108, 205, 205, 190,
	190, 190, 197, 197, 197, 193, 193, 195, 195, 195,
	196, 196, 196, 194, 202, 202, 204, 204, 203, 203,
	199, 199, 200, 200, 201, 201, 201, 198, 198, 160,
	160, 160, 160, 160, 206, 206, 206, 206, 214, 214,
	170, 170, 172, 172, 171, 125, 215, 215, 219, 216,
	216, 220, 220, 220, 220, 220, 217, 217, 218, 218,
	244, 244, 244, 224, 224, 235, 235, 232, 232, 233,
	233, 226, 226, 237, 237, 237, 70, 169, 169, 304,
	304, 301, 240, 240, 241, 241, 245, 245, 249, 249,
	246, 246, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 345,
	346, 254, 255, 255, 255,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 2, 2, 2, 1, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 3, 0, 1,
	4, 3, 3, 4, 2, 0, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 1, 3, 1, 7, 5, 6, 6, 7,
	0, 1, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 0, 1, 2, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	0, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	6, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 5, 5, 0, 6, 5, 6, 4,
	5, 0, 8, 9, 0, 3, 0, 1, 0, 3,
	8, 4, 1, 3, 3, 6, 7, 7, 8, 4,
	0, 1, 0, 1, 3, 3, 1, 1, 2, 1,
	1, 0, 2, 0, 2, 5, 3, 7, 4, 4,
	4, 4, 3, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 2, 2,
	1, 3, 2, 0, 4, 4, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	4, 2, 4, 5, 4, 4, 4, 4, 4, 3,
	3, 3, 5, 2, 3, 3, 3, 3, 1, 1,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 2, 1, 3,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 3, 4, 3, 7, 0, 3, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	3, 4, 3, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 9, 6, 6, 6, 2, 2, 3, 3,
	3, 1, 1, 1, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 5, 5, 6, 4,
	4, 8, 6, 8, 6, 8, 5, 4, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 5, 4, 4,
	4, 4, 4, 7, 4, 6, 4, 4, 4, 7,
	8, 6, 5, 6, 8, 11, 6, 0, 2, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 2, 2, 0, 3, 0, 2, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 1, 0, 1, 2, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -343, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -58, -59, -60, -62,
	-63, -64, -65, -66, -12, -61, -29, -30, -67, -68,
	-69, -70, -71, -14, -15, -16, -7, -6, -11, 7,
	8, -80, -31, 30, -36, -46, 216, -47, -37, 217,
	-48, 219, 218, 255, 220, 248, 72, 297, 298, 300,
	301, 302, 303, -81, 253, 254, 222, 34, 43, 31,
	32, 35, 226, 261, 262, 225, -8, -32, 6, -345,
	9, 423, 250, 249, 26, -10, 443, 83, -344, 577,
	-205, -190, 20, 31, 27, -189, -185, -94, -190, 18,
	16, 5, -72, -348, -72, -72, 10, 11, -72, -289,
	-291, 83, 153, 83, -72, -52, -51, -50, -49, -53,
	29, -43, -44, -312, -42, -39, 221, 218, 265, 117,
	118, 255, 256, 257, 220, 239, 254, 258, 253, 274,
	-38, 78, 31, 443, 446, -296, 217, 223, 224, 424,
	120, 119, 73, 219, -293, 349, 547, -53, 549, 99,
	101, 548, 42, 229, 550, 551, 552, 553, 238, 554,
	555, 556, 557, 563, 564, 565, 566, 121, 5, -72,
	-249, -245, -322, -239, 86, 87, 88, 440, 241, 474,
	475, 290, 78, 39, 346, 349, 547, 297, 311, 305,
	332, 324, 441, 476, 293, 242, 278, 544, 322, 129,
	549, 296, 477, 256, 354, 355, 356, 99, 300, 391,
	562, 295, 478, 560, 101, 548, 77, 49, 42, 251,
	320, 225, 316, 550, 279, 479, 451, 272, 120, 117,
	569, 34, 314, 48, 28, 559, 119, 47, 551, 144,
	480, 552, 358, 337, 538, 46, 359, 257, 481, 81,
	262, 445, 546, 360, 315, 361, 289, 558, 222, 482,
	530, 362, 363, 539, 483, 338, 342, 484, 383, 364,
	576, 50, 485, 486, 540, 118, 487, 76, 553, 309,
	310, 488, 287, 240, 385, 336, 436, 437, 438, 105,
	106, 107, 108, 110, 111, 102, 104, 103, 238, 33,
	365, 442, 291, 56, 266, 386, 44, 340, 573, 43,
	534, 489, 537, 335, 331, 433, 51, 490, 491, 492,
	493, 554, 334, 308, 330, 568, 463, 284, 555, 60,
	224, 344, 343, 345, 273, 382, 327, 494, 495, 496,
	245, 79, 497, 317, 19, 498, 499, 366, 280, 500,
	54, 501, 502, 389, 254, 503, 52, 556, 37, 259,
	570, 557, 504, 505, 506, 507, 261, 508, 368, 509,
	367, 339, 341, 268, 369, 444, 510, 313, 258, 561,
	511, 246, 545, 260, 265, 253, 390, 247, 512, 513,
	514, 515, 516, 294, 517, 518, 301, 563, 434, 41,
	519, 520, 521, 522, 288, 283, 384, 393, 59, 80,
	351, 523, 543, 307, 281, 524, 298, 53, 564, 565,
	566, 275, 567, 7, 574, 575, 371, 121, 285, 286,
	45, 328, 267, 525, 526, 318, 319, 333, 306, 329,
	299, 531, 269, 372, 435, 255, 527, 392, 282, 347,
	352, 448, 274, 373, 542, 447, 326, 323, 276, 528,
	374, 230, 270, 271, 529, 532, 375, 376, 292, 377,
	378, 379, 380, 381, 277, 446, 304, 321, 353, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 432, 228, -72,
	228, -149, -245, 228, -217, 355, -236, 357, 370, 365,
	375, 363, -228, 366, 368, 268, -337, 383, 228, 372,
	216, 170, 358, 367, 376, 377, 292, 378, 381, 277,
	-333, -322, 552, 567, 129, 325, 362, 360, 384, 534,
	380, 379, -245, 299, -252, 304, -240, -322, -239, 302,
	-149, -78, 530, 220, -254, -254, -96, 534, 536, -168,
	-111, 137, -121, -124, -116, -117, -162, -163, -164, -165,
	-122, -175, 159, 160, 167, 138, -173, -125, 24, 439,
	425, 424, 170, 29, 212, 66, 67, 427, 428, 140,
	55, 400, 401, -123, 396, 402, 397, 430, 431, 112,
	432, 102, 104, 103, 433, 434, 435, 436, 437, 438,
	105, 106, 107, 108, 109, 110, 111, -240, -245, 233,
	395, 227, 165, 423, -118, -114, -6, -171, 394, 398,
	399, 403, -322, -239, -120, -119, -158, 89, 95, 100,
	96, -342, 113, -345, 90, 91, 92, 93, 94, 114,
	115, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 42, 371, 371, -149, -72, -72, -72, -72,
	-183, -94, -185, -8, -6, -345, 6, -72, -6, -7,
	-11, -32, -34, 470, -33, -245, -190, -205, 10, 155,
	40, 48, -188, -189, -10, -6, -111, 17, 21, 22,
	-99, 161, -111, -245, -73, -99, -226, 232, -72, -72,
	-216, -257, 299, -220, 384, 383, -241, -218, -240, -238,
	-217, 382, 221, 21, 449, 136, 23, 25, 139, 170,
	124, 17, 140, 35, 223, 325, 239, 169, 235, 424,
	216, 70, 450, 396, 397, 394, 400, 426, 427, 395,
	357, 29, 11, 452, 26, 249, 22, 36, 163, 218,
	143, 453, 252, 24, 250, 112, 115, 455, 20, 73,
	244, 12, 237, 38, 14, 456, 457, 15, 233, 232,
	155, 229, 68, 9, 212, 27, 152, 64, 458, 131,
	459, 460, 461, 462, 125, 66, 153, 18, 571, 398,
	399, 31, 535, 439, 263, 165, 71, 57, 536, 137,
	464, 465, 113, 466, 116, 74, 541, 133, 16, 69,
	40, 467, 264, 468, 234, 572, 469, 387, 470, 154,
	219, 423, 67, 471, 227, 370, 6, 429, 30, 248,
	236, 123, 65, 472, 228, 142, 430, 431, 231, 126,
	114, 5, 130, 32, 10, 72, 75, 401, 402, 403,
	55, 122, 443, 141, 13, 473, 388, 135, 129, -290,
	153, -277, -281, -240, 243, -306, 239, -149, -299, -298,
	-240, -95, -235, 229, 237, 236, 130, -326, 133, 285,
	395, 227, -49, -50, -217, 169, -82, 260, 264, 84,
	84, -281, -280, -279, -327, 264, 243, -305, -297, 235,
	244, -287, 236, 237, -282, 229, 131, -327, -282, 234,
	244, 264, 264, 121, 264, 121, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 259, -288, 145, -288, 447,
	447, -293, -327, -327, -327, 231, 33, 33, -237, -282,
	231, 23, -288, -288, -217, 169, -288, -288, -288, -288,
	272, 272, -288, -288, -288, -288, -288, -288, -288, -288,
	-288, -288, -288, -288, -288, -288, -288, 228, -326, -103,
	381, 292, 78, -51, 274, -35, -149, -235, 229, 230,
	-326, 261, -149, 213, -149, -230, 153, 13, -230, -227,
	371, 369, 356, 361, -230, -230, -230, -230, 275, 354,
	-283, 229, 33, 240, 371, 275, 354, 275, 276, 275,
	276, 364, 374, 275, -250, 12, 155, 395, 359, 363,
	268, 228, 269, 230, 373, -322, 537, 276, -250, 90,
	-231, 153, 371, 271, -230, -255, -345, -241, 325, -255,
	-255, 30, 87, 231, -240, -74, -240, 90, -13, -9,
	-20, -19, -21, 145, -101, 371, -89, 170, 552, 538,
	539, 540, 537, 368, 545, 543, 541, 275, 542, 84,
	133, 135, 136, -111, 152, -159, 145, 146, 147, 148,
	149, 150, 151, 155, 137, 139, 153, 154, 134, 156,
	157, 158, 159, 160, 161, 162, 164, 163, 165, 166,
	169, 214, 215, -117, -117, -117, -117, -173, -345, -345,
	-345, -117, -225, -345, -117, -345, -345, -345, -345, -179,
	-111, -345, -349, -345, -349, -349, -268, -345, -268, -345,
	-345, -345, -345, -345, -345, -345, -345, -345, -345, -345,
	-345, -345, -345, -345, -345, -345, -345, -345, -345, -345,
	213, -345, -345, -345, -345, -345, -268, -268, -268, -268,
	100, 95, 89, -175, 96, 90, -240, -245, -6, -7,
	-168, -254, -334, -335, -152, -149, -345, 292, -240, -240,
	261, -188, -10, -6, -183, -189, -185, -6, -72, -87,
	-100, 61, 62, -102, 22, 36, 65, 63, 21, -346,
	85, -346, -205, -346, 84, -34, -209, 83, 59, 41,
	90, 90, 84, 19, -184, -186, -111, 12, -243, -242,
	23, -240, 90, 213, 98, 12, -150, 27, -149, -226,
	-226, 84, 299, -220, -257, -222, -221, 385, 387, 145,
	-244, -240, 90, 29, 85, 84, -149, -260, -263, -265,
	-264, -266, -261, -262, 322, 323, 170, 326, 328, 329,
	330, 331, 332, 333, 334, 335, 336, 337, 30, 251,
	318, 319, 320, 321, 338, 339, 340, 341, 342, 343,
	344, 345, 305, 324, 441, 306, 307, 308, 309, 310,
	311, 313, 314, 315, 316, 317, -325, -322, 83, 85,
	84, -267, 83, -103, 228, -322, 229, 229, 229, -72,
	423, -288, -288, 259, 17, -42, -39, -312, 16, -38,
	-39, 221, 117, 118, 218, 83, -277, 83, -286, -325,
	-322, 83, 131, 234, 130, -285, -282, -285, -286, -322,
	-175, -322, 131, 131, -213, -240, -213, -213, 21, -213,
	21, -213, 21, 92, -240, -213, 21, -213, 21, -213,
	21, -213, 21, -213, 21, 29, 76, 77, 29, 79,
	80, 81, -175, -175, -277, -217, -149, -322, 92, 92,
	-288, -288, 92, 90, 90, 90, -288, -288, 92, 90,
	-247, -245, 90, -328, 245, 289, 291, 92, 92, 92,
	92, 29, 90, -329, 29, 559, 558, 560, 561, 562,
	92, 29, 92, 29, 92, -240, 83, -149, -109, 279,
	216, 218, 221, 74, 90, 293, 145, 42, 84, 231,
	228, -322, -232, 233, -232, -240, -246, -245, -238, 90,
	-111, -284, 12, 155, -250, -250, -230, -149, -284, -250,
	-230, -149, -230, -230, -230, -230, -250, -250, -250, -230,
	-245, -245, -149, -149, -149, -149, -149, -149, -149, -255,
	-255, -255, -231, -230, 537, 90, 74, -253, 302, 336,
	531, 532, 533, 84, 443, -142, -149, 537, 537, 537,
	537, 537, 537, -111, -111, -111, -111, -166, 113, 137,
	114, 115, -124, -167, -171, -173, 97, 155, 139, 153,
	154, -116, -117, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -256, -322, 90, 170,
	90, 90, -97, -99, -111, -111, -322, -240, -97, -97,
	-111, -93, 22, 36, -177, -178, 141, -175, -346, -346,
	92, -240, -240, -86, -85, 405, 406, 407, 408, 410,
	411, 412, 415, 416, 420, 421, 404, 422, 409, 414,
	417, 418, 419, 413, 321, -111, -111, -111, -111, -111,
	-111, -79, -111, 124, 125, 126, -169, -168, -321, -320,
	-319, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-98, 22, 36, -97, -241, -246, -238, -97, -98, -98,
	-97, -97, 213, -205, -346, 84, -336, 387, 388, 535,
	-248, 264, -247, 23, -169, 90, 12, -211, 75, -240,
	-188, -188, 61, 62, 57, -97, -102, -346, -33, 23,
	-207, -240, 60, 90, -269, -217, 346, 347, -111, -111,
	84, -187, 25, 26, -149, -242, 161, -246, -149, -212,
	264, -149, -127, -129, -130, -131, -152, -174, -345, -132,
	461, 458, 12, -142, -143, -151, -245, -220, -222, 84,
	386, 388, 389, 74, 116, -111, -270, 169, -295, -294,
	-293, -277, -279, -280, -281, 85, -270, -273, 352, 351,
	-267, -267, -267, -267, -267, -269, -269, -269, -269, 83,
	83, -267, -267, -267, -267, -271, 83, -271, -271, -272,
	83, -272, -306, -111, -303, -302, -300, -301, 238, 99,
	443, 75, -298, -187, 92, -109, -233, 233, -304, -301,
	-322, -322, -322, -233, -322, 90, -322, 90, -83, -55,
	-1, 571, 572, 573, 84, 17, -278, -277, -54, 289,
	-309, -310, 264, -305, -299, -286, 131, -285, -286, -286,
	-322, 84, 27, 121, 121, 121, 121, 443, 218, 30,
	-277, -54, -256, 231, -256, -256, 90, 90, -229, 567,
	-142, -105, 281, 145, 270, 270, 228, 228, 283, -149,
	294, 296, 295, 293, 21, 282, 284, 286, 272, -149,
	-149, -232, 74, -144, -149, 24, -245, -149, -230, -230,
	-149, -230, -230, -149, -240, -89, 387, 84, 443, 20,
	-90, 20, 113, 114, 115, -167, -116, -117, -116, 136,
	252, 84, -346, 23, 84, 75, -346, -346, -346, 84,
	12, -97, -180, -178, 143, -111, -346, -346, 84, 84,
	12, -259, 23, -346, -346, -346, -346, -346, -179, -346,
	12, -346, -346, 84, 84, -346, 84, 84, 84, -318,
	84, 84, 84, 84, -346, -97, -97, -345, 213, -346,
	-346, -346, -346, -346, -241, -335, 534, 388, -156, -155,
	-153, 72, 232, 73, -345, -247, -346, 90, 87, -208,
	87, -207, -161, -240, 92, 96, -190, -126, -128, 12,
	-102, -173, 85, 84, -269, -194, -199, -227, -240, 90,
	170, -186, 213, -157, 13, -160, 30, 55, -9, -345,
	-345, 30, 84, -145, -147, -146, -148, 64, 68, 70,
	65, 66, 67, 71, -251, 23, -127, -7, -6, -345,
	-345, -345, -149, -142, -347, 12, 75, -347, 84, 213,
	-221, -223, 390, 387, 393, -322, 90, -82, 84, -293,
	-281, -191, -106, 38, -274, 353, -269, -269, -276, 90,
	-276, 92, 92, 85, -45, -40, -41, 31, 78, -300,
	-288, 90, 37, -240, 85, -105, -149, 137, 74, -304,
	-304, -304, -245, -2, 570, 576, 131, 83, 356, 16,
	-207, 84, 85, -176, 290, 85, -311, 55, -240, 85,
	83, -286, -286, -240, -345, 228, 29, 29, -54, -176,
	-270, -322, 569, 568, 85, 230, 288, -110, 400, -107,
	90, 86, -149, -149, -149, -149, -149, 221, 218, 273,
	231, -142, -149, 84, -77, 247, 242, -250, -250, 31,
	-149, 387, 546, 544, 136, 252, -124, -117, -99, 440,
	-258, 170, 322, 251, 320, 316, 336, 327, 351, 318,
	352, 315, 314, 313, -258, -256, -111, -111, -183, 144,
	-111, 142, -111, -111, -111, -346, 170, 322, 12, -111,
	-319, -111, -111, -111, -317, -316, -120, -175, -342, -346,
	-317, -111, -111, -316, -346, -346, -98, -241, -153, -282,
	-282, -282, -213, 84, -224, 20, 12, 55, 55, -126,
	-157, -127, -102, -240, -197, 530, -202, 44, -200, -201,
	45, -198, 46, 54, 161, -188, -111, -214, 74, -215,
	-219, -175, -170, -172, -171, -345, -206, -346, -240, -213,
	-215, -129, -130, -130, -129, -130, 64, 64, 64, 69,
	64, 69, 64, -146, -245, -346, -346, -7, -7, -111,
	-248, 75, -127, -127, -151, -245, 161, 387, 391, 392,
	-293, -341, 113, 137, 29, 74, 349, 99, -339, 169,
	-340, 234, 130, 131, 246, 23, 39, 85, 84, 85,
	84, 85, 84, -234, 480, 137, -41, -40, -288, -288,
	92, -322, 230, 24, -149, 74, 74, 74, -84, 574,
	92, 83, -3, 78, -111, 83, 17, -277, -175, 266,
	155, -303, -207, -307, -309, -149, -113, -345, -112, -114,
	-118, 159, 160, -176, -149, -104, 279, 287, 83, -108,
	87, -324, 75, 270, 349, 270, -149, -77, -45, -149,
	-230, -230, 31, -322, -124, -117, -345, -346, -267, -267,
	-267, -272, -267, 310, -267, 310, -267, -346, -346, 84,
	-346, 20, -346, -88, 429, -111, 84, 84, -346, 83,
	83, -111, -346, -318, 84, -346, 84, -346, 84, -346,
	-346, -154, 20, -154, -154, -346, 87, -149, -157, -181,
	14, -194, 49, 328, -204, -203, 53, 45, -201, 17,
	47, 17, 28, -214, 84, 145, 84, -346, -346, 84,
	55, 213, -346, -157, -140, -139, 74, 75, -141, 74,
	-139, 64, 64, -209, -346, -346, 84, -212, -127, -157,
	-157, 213, 113, -345, -115, -123, -113, 10, 90, 90,
	-322, 131, 131, -149, 83, -269, 90, -269, 92, 92,
	480, 29, 79, 80, 81, 29, 76, 77, -149, -149,
	-149, -149, -308, 83, 17, -111, 83, 145, 85, -207,
	-207, 267, -171, -345, 85, -346, 84, -275, 443, 446,
	-111, -119, -119, -209, 85, -315, 443, -323, -240, -240,
	-240, -240, -116, -269, -111, -111, -188, 90, -111, -111,
	92, 92, -346, -346, -317, -316, -111, -345, 64, 16,
	14, -345, -345, -248, -181, -182, 15, 17, -195, 51,
	-193, 50, -193, -203, 17, 17, 90, 17, 90, 131,
	-219, -111, -172, 55, -9, -240, -170, -240, -183, -111,
	83, -111, -120, -157, -157, -111, -163, 432, 102, 104,
	103, 433, 434, 435, 436, 437, 438, 105, 106, 107,
	108, 110, 111, 83, -111, 85, 85, -209, -307, -55,
	85, -207, 92, 85, -171, -91, -345, 263, -340, -309,
	447, 447, -346, 23, -314, -313, -241, 83, 75, -92,
	155, 443, -346, -346, -346, -346, -346, 85, 85, -346,
	-346, 84, -210, -346, -240, 234, 17, 17, -210, -210,
	-156, -182, -111, -168, -196, 52, 74, 116, 90, 90,
	90, 10, -170, 213, -188, -207, -134, 356, -183, -346,
	-207, 85, 23, 85, 576, 131, 85, 263, -9, 84,
	145, -207, -149, -346, 441, 71, 444, -111, 84, -346,
	-346, -346, 74, 116, -215, -240, 85, -346, -345, -188,
	85, -192, -9, 83, -3, -346, -75, 443, -313, -292,
	-241, 90, 92, 85, 60, 442, 445, -318, -240, 234,
	-248, -135, -133, -240, 494, -331, -332, 74, -341, -338,
	113, 137, 99, -339, 122, 123, -75, -111, 83, -76,
	278, 534, -324, 60, -346, -346, 84, 20, -260, -57,
	504, -332, 74, 11, 10, 113, 90, 85, -207, 239,
	-315, 443, -133, 501, -270, -120, -330, 247, 242, 245,
	30, -330, -4, 575, 85, 280, 444, -56, 24, -134,
	241, 29, 113, 92, -4, 445, 504, -120, -137, -136,
	-138, 538, 113, 29, -136, -138, 74, -120, 74, 453,
	538,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 736,
	736, 736, 0, 736, 0, 0, 736, -2, -2, 736,
	1198, 0, 736, 0, 0, -2, 668, 670, 0, 672,
	-2, 0, 0, 681, 1671, 1671, 731, 0, 0, 0,
	0, 0, 736, 736, 736, 736, 1059, 48, 736, 0,
	83, 84, 687, 688, 689, 63, 0, 1669, 1, 3,
	69, 73, 0, 0, 0, 56, 1068, 0, 76, 0,
	0, 740, 0, 738, 0, 1181, 736, 736, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 515, 455, 498, 453, 484, -2, 446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 348, 348, 0, 0, -2, 446, 446, 446, 0,
	0, 0, 481, 1183, 401, 348, 348, 0, 348, 348,
	348, 348, 0, 0, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 1085,
	151, 1199, 1196, 1197, 38, 39, 40, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 0, 1175,
	0, 598, 837, 0, 659, 659, 0, 659, 659, 659,
	659, 0, 0, 0, 610, 0, 0, 0, 0, 656,
	0, 0, 629, 631, 0, 656, 0, 662, 0, 643,
	659, 1672, 1672, 1672, 1166, 0, 653, 651, 665, 666,
	648, 649, 667, 671, 0, 676, 679, 1192, 1193, 0,
	694, 47, 1431, 686, 699, 700, 0, 732, 733, 43,
	933, 0, 859, 863, 874, 887, 888, 889, 890, 891,
	893, 894, 0, 0, 0, 0, 899, 900, 0, 0,
	0, 0, 0, 914, 0, 0, 0, 0, 0, 1040,
	0, 1004, 1004, 950, 1004, 1006, 1006, 0, 0, 0,
	1668, 1466, 1467, 1468, 1486, 1569, 1615, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 0, 1464, 1465, 1049, 0, 0,
	0, 0, 0, 0, 256, 257, 932, 1155, 1006, 1006,
	1006, 1006, -2, -2, 203, 204, 205, 206, 207, 208,
	209, 0, 199, 0, 261, 262, 258, 259, 260, 916,
	917, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 245, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 1671, 0, 709, 0, 0, 0, 0, 0,
	1068, 0, 1060, 1059, 61, 0, 736, -2, 0, 0,
	0, 0, 45, 0, 50, 796, 75, 74, 1107, 0,
	0, 0, 57, 1069, 65, 67, 1070, 0, 741, 742,
	0, 772, 776, 0, 737, 0, 0, 1182, 1181, 1181,
	100, 0, 1611, 1159, -2, -2, 0, 0, 1194, 1195,
	1168, -2, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, -2, 0,
	0, 161, 162, 0, 41, 374, 0, 157, 0, 368,
	318, 1085, 0, 0, 0, 0, 0, 736, 0, 1176,
	142, 143, 149, 150, 348, 348, 495, 0, 0, 151,
	151, 462, 463, 464, 0, 0, -2, 372, 0, 447,
	0, 0, 362, 362, 366, 364, 365, 0, 0, 0,
	0, 0, 0, 475, 0, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 576, 0, 349, 0, 493,
	494, 402, 0, 0, 0, 0, 473, 474, 0, 0,
	1184, 1185, 0, 0, 348, 348, 0, 0, 0, 0,
	348, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 141, 1098,
	0, 0, 0, -2, 0, 590, 0, 0, 0, 1177,
	1177, 0, 597, 0, 599, 600, 0, 0, 601, 0,
	656, 656, 654, 655, 603, 604, 605, 606, 659, 0,
	0, 357, 358, 359, 656, 659, 0, 659, 659, 659,
	659, 656, 656, 656, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1672, 1672, 1672, 662, 659, 0,
	639, 0, 640, 641, 644, 645, 1673, 1674, 1215, 646,
	647, 1167, 669, 677, 680, 697, 695, 696, 698, 690,
	691, 692, 693, 0, 711, 712, 717, 0, 0, 0,
	0, 723, 724, 725, 0, 0, 728, 729, 730, 0,
	0, 0, 0, 857, 0, 0, 922, 923, 924, 925,
	926, 927, 928, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 895, 896, 897, 898, 901, 0, 0,
	0, 906, 907, 0, 0, 0, 0, 0, 746, 0,
	1041, 0, 948, 0, 949, 951, 952, 0, 953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1187,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 756,
	0, 0, 756, 756, 0, 0, 193, 194, 195, 196,
	210, 211, 212, 213, 214, 263, 1049, 0, 932, 0,
	0, 44, 701, 702, 0, 820, 1187, 0, 0, 752,
	0, 55, 64, 66, 1068, 59, 1068, 0, 758, 0,
	0, -2, -2, 759, 765, 766, 767, 768, 769, 52,
	1670, 53, 0, 72, 0, 46, 0, 0, 0, 0,
	330, 1110, 0, 0, 1061, 1062, 1065, 0, 773, 777,
	0, 779, 780, 0, 739, 0, 98, 0, 836, 0,
	0, 0, 1611, 1165, 0, 102, 103, 0, 0, 0,
	336, 1170, 1171, 1172, -2, 355, 0, 336, 325, 269,
	270, 271, 318, 273, 318, 318, 318, 318, 330, 330,
	330, 330, 301, 302, 303, 304, 305, 0, 0, 288,
	318, 318, 318, 318, 308, 309, 310, 311, 312, 313,
	314, 315, 274, 275, 276, 277, 278, 279, 280, 281,
	282, 320, 320, 320, 322, 322, 0, 42, 0, 340,
	0, 1065, 0, 1098, 1179, 1189, 0, 0, 0, 1179,
	120, 0, 0, 496, 526, 456, 485, 497, 0, 459,
	460, -2, 0, 0, 446, 0, 448, 0, 356, 0,
	-2, 0, 366, 0, 362, 366, 363, 366, 354, 367,
	477, 478, 479, 0, 556, 806, 0, 0, 0, 0,
	0, 562, 563, 564, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 486, 487, 488, 489, 490,
	491, 492, 0, 0, 448, 0, 482, 0, 403, 404,
	0, 0, 407, 408, 409, 410, 0, 0, 413, 414,
	415, 823, 824, 416, 440, 441, 442, 417, 418, 419,
	420, 421, 422, 423, 434, 435, 436, 437, 438, 439,
	424, 425, 426, 427, 428, 431, 0, 135, 1089, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1177, 0, 0, 0, 0, 755, 838, 1200, 1201, 660,
	661, 0, 360, 361, 659, 659, 607, 630, 0, 659,
	611, 632, 612, 614, 613, 615, 634, 635, 659, 618,
	657, 658, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 636, 637, 638, 663, 0, 0, 678, 682,
	683, 684, 685, 0, 0, 714, 94, 719, 720, 721,
	722, 734, 727, 934, 854, 855, 856, 858, 860, 0,
	918, 920, 862, 864, 929, 930, 931, 0, 0, 0,
	0, 0, 868, 872, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 892, 1019, 1020, 1021,
	909, 910, 0, 770, 0, 0, 0, 908, 0, 0,
	0, 0, 747, 748, 1047, 1044, 0, 0, 1005, 1007,
	0, 0, 0, 0, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1022, 0, 0, 0, 0,
	0, 1040, 0, 911, 912, 913, 0, 1188, 0, 130,
	131, 0, 0, 0, 0, 0, 977, 0, 0, 0,
	0, 0, 0, 757, 1050, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 1154, 0, 704, 705, 707, 0,
	840, 0, 821, 0, 0, 710, 0, 751, 0, 754,
	58, 60, 763, 764, 0, 781, 760, 54, 49, 0,
	0, 798, 1108, 330, 1130, 0, 334, 335, 1071, 1072,
	0, 1064, 1066, 1067, 77, 778, 774, 0, 852, 0,
	0, 835, 0, 784, 786, 787, 788, 818, 0, 791,
	0, 0, 0, 0, 0, 96, 837, 1160, 101, 0,
	0, 106, 107, 1161, 1162, 1163, 1164, 0, 515, -2,
	398, 163, 165, 166, 167, 158, -2, 328, 326, 327,
	272, 330, 330, 295, 296, 297, 298, 299, 300, 0,
	0, 289, 290, 291, 292, 283, 0, 284, 285, 286,
	0, 287, 373, 0, 1073, 341, 342, 344, 348, 0,
	0, 0, 369, 370, 0, 1089, 0, 0, 0, 1190,
	1189, 1189, 1189, 0, 153, 154, 155, 156, 551, 0,
	0, 527, 549, 550, 151, 0, 0, 159, 450, 449,
	0, 583, 0, 371, 0, 0, 366, 366, 351, 352,
	480, 0, 0, 558, 559, 560, 561, 0, 0, 0,
	448, 450, 336, 0, 405, 406, 411, 412, 429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 511, 512, 513, 514, 1086, 1087, 1088, 0, 0,
	591, 0, 0, 390, 92, 1178, 596, 656, 617, 633,
	656, 609, 616, 642, 674, 718, 0, 0, 0, 0,
	726, 0, 861, 919, 921, 865, 0, 869, 873, 0,
	0, 0, 0, 0, 0, 0, 915, 939, 940, 0,
	0, 1059, 0, 1045, 0, 0, 947, 1008, 0, 0,
	0, 0, 0, 958, 959, 960, 961, 962, 0, 964,
	0, 966, 967, 0, 0, 968, 0, 0, 0, 0,
	0, 0, 0, 0, 935, 0, 0, 756, 0, 1009,
	1010, 1011, 1012, 1013, 1050, 703, 706, 708, 794, 841,
	842, 0, 0, 0, 0, 822, 1186, 749, 750, 753,
	-2, 0, 0, 1052, 0, 0, 781, 852, 782, 0,
	761, 51, 797, 0, 1112, 1111, 1124, 1137, 331, 332,
	333, 1063, 0, 1068, 0, 1148, 0, 0, 1140, 0,
	0, 0, 0, 0, 0, 0, 0, 825, 0, 0,
	828, 0, 0, 0, 0, 819, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 90, 91, 0, 0, 0,
	104, 105, 0, 0, 111, 337, 338, 144, 151, 400,
	164, 380, 0, 0, 268, 329, 293, 294, 0, 316,
	0, 0, 0, 393, 116, 1077, 1076, 348, 348, 343,
	0, 346, 0, 1191, 319, 0, 134, 0, 0, 0,
	0, 0, 140, 521, 0, 0, 528, 0, 0, 0,
	454, 0, 465, 466, 0, 555, 582, 0, 587, 340,
	0, 350, 353, 807, 0, 0, 467, 0, 450, 471,
	472, 483, 432, 433, 430, 0, 0, 1099, 1100, 1105,
	1103, 1104, 121, 503, 505, 504, 508, 0, 0, 501,
	0, 390, 1073, 0, 595, 391, 392, 659, 659, 713,
	95, 0, 716, 0, 0, 0, 866, 870, 771, 0,
	0, 318, 318, 1027, 318, 322, 1030, 318, 1032, 318,
	1035, 318, 1038, 1039, 0, 0, 0, 0, 1042, 946,
	1048, 0, 0, 0, 0, 957, 0, 0, 0, 0,
	132, 133, 977, 0, 0, 979, 981, 982, 0, 972,
	978, 0, 0, 0, 936, 937, 0, 1051, 843, 848,
	848, 848, 0, 0, 0, 1173, 1174, 1053, 1054, 852,
	1055, 783, 762, 799, 1130, 0, 1123, 0, -2, 1132,
	0, 0, 0, 1138, 775, 78, 853, 81, 0, 1148,
	1156, 0, 1139, 1150, 1152, 0, 0, 0, 1144, 0,
	852, 785, 814, 816, 0, 811, 826, 827, 829, 0,
	831, 0, 833, 834, 796, 790, 792, 0, 0, 0,
	98, 0, 852, 852, 97, 0, 839, 108, 109, 110,
	399, 168, 173, 0, 0, 0, 178, 0, 180, 0,
	381, 0, 265, 267, 0, 0, 171, 330, 0, 330,
	0, 323, 0, 382, 394, 0, 1074, 1075, 0, 0,
	345, 347, 0, 1180, 136, 0, 0, 0, 524, 0,
	552, 0, 0, 0, 0, 0, 0, 160, 451, 0,
	0, 339, 0, 0, 580, 577, 468, 0, 197, 198,
	200, 0, 0, 470, 796, 1090, 1091, 1092, 0, 1102,
	1106, 124, 0, 0, 0, 0, 592, 593, 594, 93,
	602, 608, 715, 735, 867, 871, 0, 903, 1025, 330,
	1028, 1029, 1031, 1033, 1034, 1036, 1037, 904, 905, 0,
	942, 0, 944, 1068, 0, 1046, 0, 0, 956, 0,
	0, 0, 965, 0, 0, 971, 0, 973, 0, 976,
	938, 0, 0, 0, 0, 820, -2, 62, 1055, 1057,
	0, 1117, 1115, 1115, 1125, 1126, 0, 0, 1133, 0,
	0, 0, 0, 82, 0, 0, 0, 1153, 0, 0,
	0, 0, 99, 1059, 808, 815, 0, 0, 809, 0,
	810, 830, 832, 789, -2, 793, 0, 852, 852, 88,
	89, 0, 174, 0, 176, 191, 192, 0, 179, 181,
	182, 264, 266, 0, 0, 306, 317, 307, 0, 0,
	395, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 796, 137,
	138, 139, 516, 0, 526, 0, 0, 0, 519, 0,
	457, 0, 586, 0, 0, 557, 0, 565, 0, 0,
	0, 201, 202, 0, 1101, 502, 0, 122, 123, 0,
	0, 507, 1014, 1026, 0, 0, 0, 1043, 0, 0,
	0, 0, 963, 969, 0, 980, 0, 0, 849, 0,
	0, 0, 0, 840, 1057, 80, 0, 0, 1120, 0,
	1113, 1116, 1114, 1127, 0, 0, 1134, 0, 1136, 0,
	1157, 1158, 1151, 0, 1143, 1146, 1142, 1145, 1068, 812,
	0, 817, 0, 1059, 87, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 324, 0, 0, 0,
	517, 0, 529, 520, 584, 585, 0, 588, 375, 581,
	578, 579, 469, 0, 125, 126, 0, 0, 0, 0,
	0, 0, 941, 943, 945, 954, 955, 1023, 1024, 970,
	974, 0, 0, 845, 802, 803, 850, 851, 0, 0,
	795, 79, 1058, 1056, 1109, 0, 1118, 1119, 1128, 1129,
	1135, 0, 1141, 0, 85, 0, 0, 0, 1068, 175,
	0, 185, 0, 525, 0, 528, 518, 0, 1093, 0,
	0, 0, 509, 902, 0, 0, 0, 977, 0, 844,
	846, 847, 1121, 1122, 1149, 1147, 813, 820, 0, 86,
	376, 380, 1093, 0, 0, 589, 499, 1095, 127, 128,
	443, 444, 445, 121, 1015, 0, 1018, 0, 804, 805,
	530, 0, 532, 0, -2, 377, 378, 0, 169, 186,
	187, 0, 0, 190, 183, 184, 117, 0, 0, 0,
	1096, 1097, 124, 1016, 975, 531, 0, 0, 336, 0,
	541, 379, 0, 0, 0, 188, 189, 553, 0, 0,
	506, 0, 533, 534, 542, 0, 383, 385, 386, 0,
	0, 384, 522, 0, 553, 1094, 0, 0, 543, 539,
	387, 388, 389, 554, 523, 1017, 0, 535, 536, 537,
	0, 546, 547, 0, 538, 0, 0, 548, 0, 544,
	545,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 138, 3, 3, 3, 164, 156, 3,
	83, 85, 161, 159, 84, 160, 213, 162, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 577,
	146, 145, 147, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 166, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 134, 3, 167,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 135,
	136, 137, 139, 140, 141, 142, 143, 144, 148, 149,
	150, 151, 152, 153, 154, 155, 157, 158, 163, 165,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:497
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:502
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:503
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:507
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:543
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:557
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:562
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:572
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:578
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:584
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:588
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:593
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:597
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:603
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:607
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:613
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:619
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:623
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:627
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:650
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:656
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:661
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:667
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:687
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:709
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:728
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:747
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:766
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:772
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:792
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:804
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:816
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:820
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:826
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:832
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:836
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:840
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:844
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:849
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:850
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:854
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:858
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:864
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:868
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:874
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:878
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:887
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:893
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:899
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:903
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:909
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:913
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:919
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:923
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:927
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:933
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:937
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:941
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:945
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:951
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:955
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:974
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:983
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:987
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1003
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1007
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1013
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1018
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1023
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1029
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1034
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1040
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1049
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1055
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1059
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1065
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1071
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1078
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1085
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1090
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1095
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1100
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1107
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1114
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1125
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1132
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1136
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1142
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1146
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1150
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1154
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1160
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1164
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1170
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1174
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1180
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1184
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1191
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1195
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1201
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1211
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1216
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1225
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1234
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1249
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1258
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1267
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1271
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1280
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1284
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1290
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1296
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1301
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1306
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1311
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1316
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1326
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1330
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1337
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1341
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1346
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1355
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1361
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1372
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1379
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1386
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1390
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1394
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1398
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1409
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1420
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1426
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1430
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1434
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1438
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1442
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1446
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1450
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1455
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1459
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1463
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1467
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1471
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = Armscii8Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = ASCIIStr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = Big5Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = UBinaryStr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = Cp1250Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = Cp1251Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = Cp1256Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = Cp1257Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = Cp850Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = Cp852Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Cp866Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Cp932Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = Dec8Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = EucjpmsStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = EuckrStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Gb18030Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = Gb2312Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = GbkStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = Geostd8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = GreekStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = HebrewStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = Hp8Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Keybcs2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = Koi8rStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = Koi8uStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = Latin1Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = Latin2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Latin5Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Latin7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = MacceStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = MacromanStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = SjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Swe7Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Tis620Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Ucs2Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = UjisStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Utf16Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Utf16leStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Utf32Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Utf8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Utf8mb4Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1656
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1663
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1677
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1681
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1685
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1689
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1695
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1706
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1911
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1920
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1925
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1929
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1937
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1947
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1955
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1959
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1963
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1968
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1972
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1977
		{
			yyVAL.str = ""
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1985
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2004
		{
			yyVAL.str = ""
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2019
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2028
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2034
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2044
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2048
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2053
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2057
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2063
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2073
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2077
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2081
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2085
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2089
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.str = yyDollar[2].str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = "key"
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = yyDollar[1].str
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2147
		{
			yyVAL.str = ""
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2157
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2161
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2167
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2173
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2177
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2183
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2187
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2193
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2199
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2203
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2207
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2211
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2216
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2220
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2226
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2232
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2238
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2244
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2248
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2252
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2256
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2260
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2265
		{
			yyVAL.str = ""
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2269
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2282
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2291
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2295
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2301
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2305
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2309
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2315
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2325
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2329
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2333
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2337
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2341
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2345
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2349
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2353
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2357
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2361
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2365
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2369
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2373
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2377
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2381
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2385
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2389
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2393
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2397
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2401
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2405
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2409
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2413
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2417
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2421
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2425
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2429
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2433
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = ""
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2446
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2465
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2469
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2473
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = ""
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2484
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2488
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2497
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2506
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2510
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2514
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2518
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2522
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2528
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2532
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2536
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2542
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2546
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2550
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2554
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2558
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2562
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2566
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2570
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2574
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2578
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2582
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2586
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2590
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2594
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2598
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2602
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2606
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2610
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2614
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2618
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2622
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2626
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2630
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2636
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2640
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2646
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2650
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2654
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2658
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2662
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2666
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2670
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2674
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2678
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2684
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2691
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2698
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2705
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2711
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2715
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2722
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2729
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2741
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2751
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2755
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2759
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2772
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2782
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2786
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2797
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2804
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2811
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2818
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2825
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2832
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2836
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2845
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2853
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2862
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2869
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2881
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2890
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2905
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2910
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2914
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2919
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2923
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2929
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2935
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2941
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2945
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2951
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2955
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2961
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2967
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2973
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2979
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2985
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2989
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2993
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2997
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3003
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3009
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3015
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3019
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3023
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3029
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3033
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3038
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3042
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3047
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3051
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3057
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3061
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3065
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3069
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3073
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3077
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3081
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3085
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3089
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3093
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3097
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3101
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3105
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3109
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3113
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3117
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3121
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3125
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3129
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3133
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3137
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3141
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3146
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3150
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3154
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3161
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3165
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3171
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3176
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3180
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3187
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3194
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3203
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3209
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3213
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3225
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3229
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 593:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3248
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3277
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3281
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3337
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3345
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3393
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3397
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3401
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3405
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3417
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3422
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3426
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3430
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3435
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3447
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3466
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3470
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3474
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3484
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3490
		{
			yyVAL.str = ""
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3494
		{
			yyVAL.str = "extended "
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3500
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3504
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3514
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3520
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3524
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3528
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3534
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3538
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3542
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3552
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3558
		{
			yyVAL.empty = struct{}{}
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3562
		{
			yyVAL.empty = struct{}{}
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3566
		{
			yyVAL.empty = struct{}{}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3576
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3580
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3586
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3590
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3596
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3602
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3606
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3611
		{
			yyVAL.empty = struct{}{}
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3613
		{
			yyVAL.empty = struct{}{}
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3616
		{
			yyVAL.empty = struct{}{}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3618
		{
			yyVAL.empty = struct{}{}
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3623
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3629
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3634
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3638
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3642
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3646
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3650
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3654
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3660
		{
			yyVAL.str = yyDollar[1].str
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3664
		{
			yyVAL.str = yyDollar[1].str
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3668
		{
			yyVAL.str = yyDollar[1].str
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3674
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3678
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3682
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3686
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = ""
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3705
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3709
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3715
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3719
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3725
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3731
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3735
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3741
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3747
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3751
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3755
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3759
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3803
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3807
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3813
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3817
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3821
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3862
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3866
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3870
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = ""
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3884
		{
			setAllowComments(yylex, true)
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3888
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3894
		{
			yyVAL.strs = nil
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3898
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3904
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3908
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3912
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3917
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3921
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3925
		{
			yyVAL.str = SQLCacheStr
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3930
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3934
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3938
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Statement: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, StatementIdentifier: NewColIdentWithAt(string(yyDollar[5].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: yyDollar[2].strs, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3959
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3963
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3973
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: yyDollar[2].strs, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3982
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3987
		{
			yyVAL.strs = nil
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3995
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3999
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4003
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.str = SQLCacheStr
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4017
		{
			yyVAL.str = DistinctStr
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4021
		{
			yyVAL.str = DistinctStr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.str = StraightJoinHint
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4033
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4039
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4043
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4049
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4053
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4057
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4061
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4066
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4070
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4074
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4081
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4086
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4090
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4096
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4102
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4106
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4116
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4120
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4124
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4128
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4134
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4138
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4144
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4148
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4153
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4157
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4163
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4167
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4173
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4177
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4183
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4187
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4191
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4195
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4201
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4205
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4218
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4222
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4226
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4230
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4236
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4238
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4242
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4248
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4250
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4253
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4258
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4262
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4266
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4279
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4283
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4287
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4293
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4299
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4303
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4307
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4311
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4317
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4321
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4331
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4341
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4345
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4351
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4356
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4360
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4366
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4370
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 844:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4376
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4380
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4384
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4388
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4393
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4397
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4401
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4405
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4411
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4415
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4422
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4426
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4430
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4434
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4438
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4442
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4449
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4453
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4457
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4461
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4467
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4471
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4475
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4479
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4483
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4487
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4491
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4495
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4499
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4503
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4507
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4513
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4517
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4521
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4525
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4529
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4533
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4537
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4541
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4545
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4549
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4557
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4561
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4567
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4571
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4583
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4587
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4591
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4595
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4599
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4603
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4615
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4619
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4651
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4659
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4663
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4669
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4673
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4677
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = ""
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4687
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4693
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4697
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4704
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4708
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4712
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4716
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4722
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4726
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4730
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4734
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4738
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4742
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4746
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4752
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4756
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4760
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4767
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4773
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4777
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4791
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4795
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4799
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4809
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4813
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4817
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4821
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4825
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4829
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4833
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4837
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4841
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4845
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4856
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4860
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4866
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4870
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4875
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4879
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4883
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4887
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4891
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4895
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4899
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4903
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4907
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4911
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4915
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4919
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4923
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4927
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4931
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4935
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4939
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:4972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:4976
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:4982
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4986
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4992
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4996
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5002
		{
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5004
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5008
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5012
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5016
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5020
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5024
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5028
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5032
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5036
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5040
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5044
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5050
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5054
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5058
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5062
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5066
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5070
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5074
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5078
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5082
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:5092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:5096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:5100
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5132
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5136
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5140
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5144
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5148
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5162
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5172
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5176
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5182
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5186
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5190
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5194
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5198
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5204
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5208
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5212
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5216
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5220
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5224
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5228
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5232
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5236
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5240
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5255
		{
			yyVAL.str = string("")
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5259
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5265
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5269
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5275
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5290
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5294
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5298
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5327
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5345
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5351
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5357
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5361
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5367
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5372
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5376
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5380
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5385
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5389
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5395
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5399
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5403
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5412
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5416
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5420
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5424
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5431
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5435
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5439
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5443
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5449
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5453
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5457
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5462
		{
			yyVAL.str = ""
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5466
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5470
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5474
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5479
		{
			yyVAL.str = ""
		}
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5483
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5498
		{
			yyVAL.str = ""
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5502
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5507
		{
			yyVAL.str = "cascaded"
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5524
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5530
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5536
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5542
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5551
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5555
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5560
		{
			yyVAL.str = ""
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5564
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5570
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5574
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5580
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5584
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5588
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5593
		{
			yyVAL.str = ""
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5597
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5601
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5606
		{
			yyVAL.str = ""
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5610
		{
			yyVAL.str = " header"
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5615
		{
			yyVAL.str = ""
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5619
		{
			yyVAL.str = " manifest on"
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5623
		{
			yyVAL.str = " manifest off"
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5628
		{
			yyVAL.str = ""
		}
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5632
		{
			yyVAL.str = " overwrite on"
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5636
		{
			yyVAL.str = " overwrite off"
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5642
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5647
		{
			yyVAL.str = ""
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5651
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5657
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5661
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5667
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5671
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5676
		{
			yyVAL.str = ""
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5680
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5686
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5690
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5696
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5700
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5704
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5709
		{
			yyVAL.str = ""
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5713
		{
			yyVAL.str = " optionally"
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5726
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5730
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5734
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5738
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5742
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5748
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5752
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5756
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5760
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5765
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5769
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5775
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5779
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5785
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5789
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5795
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5800
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5810
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5814
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5820
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5826
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5830
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5836
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5840
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5844
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5848
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5852
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5860
		{
			yyVAL.str = "charset"
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5887
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5889
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5892
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5894
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5897
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5899
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5902
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5904
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5907
		{
			yyVAL.empty = struct{}{}
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5909
		{
			yyVAL.empty = struct{}{}
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5911
		{
			yyVAL.empty = struct{}{}
		}
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5915
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5924
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5931
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5935
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5941
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5945
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5952
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5958
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5962
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5968
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5972
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5979
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6471
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6480
		{
			decNesting(yylex)
		}
	case 1671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6485
		{
			skipToEnd(yylex)
		}
	case 1672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6490
		{
			skipToEnd(yylex)
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6494
		{
			skipToEnd(yylex)
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6498
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
