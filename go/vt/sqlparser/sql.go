// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const GROUP_CONCAT = 57768
const SEPARATOR = 57769
const TIMESTAMPADD = 57770
const TIMESTAMPDIFF = 57771
const WEIGHT_STRING = 57772
const LTRIM = 57773
const RTRIM = 57774
const TRIM = 57775
const JSON_ARRAY = 57776
const JSON_OBJECT = 57777
const JSON_QUOTE = 57778
const JSON_DEPTH = 57779
const JSON_TYPE = 57780
const JSON_LENGTH = 57781
const JSON_VALID = 57782
const JSON_ARRAY_APPEND = 57783
const JSON_ARRAY_INSERT = 57784
const JSON_INSERT = 57785
const JSON_MERGE = 57786
const JSON_MERGE_PATCH = 57787
const JSON_MERGE_PRESERVE = 57788
const JSON_REMOVE = 57789
const JSON_REPLACE = 57790
const JSON_SET = 57791
const JSON_UNQUOTE = 57792
const REGEXP_INSTR = 57793
const REGEXP_LIKE = 57794
const REGEXP_REPLACE = 57795
const REGEXP_SUBSTR = 57796
const MATCH = 57797
const AGAINST = 57798
const BOOLEAN = 57799
const LANGUAGE = 57800
const WITH = 57801
const QUERY = 57802
const EXPANSION = 57803
const WITHOUT = 57804
const VALIDATION = 57805
const UNUSED = 57806
const ARRAY = 57807
const BYTE = 57808
const CUME_DIST = 57809
const DESCRIPTION = 57810
const DENSE_RANK = 57811
const EMPTY = 57812
const EXCEPT = 57813
const FIRST_VALUE = 57814
const GROUPING = 57815
const GROUPS = 57816
const JSON_TABLE = 57817
const LAG = 57818
const LAST_VALUE = 57819
const LATERAL = 57820
const LEAD = 57821
const NTH_VALUE = 57822
const NTILE = 57823
const OF = 57824
const OVER = 57825
const PERCENT_RANK = 57826
const RANK = 57827
const RECURSIVE = 57828
const ROW_NUMBER = 57829
const SYSTEM = 57830
const WINDOW = 57831
const ACTIVE = 57832
const ADMIN = 57833
const AUTOEXTEND_SIZE = 57834
const BUCKETS = 57835
const CLONE = 57836
const COLUMN_FORMAT = 57837
const COMPONENT = 57838
const DEFINITION = 57839
const ENFORCED = 57840
const ENGINE_ATTRIBUTE = 57841
const EXCLUDE = 57842
const FOLLOWING = 57843
const GEOMCOLLECTION = 57844
const GET_MASTER_PUBLIC_KEY = 57845
const HISTOGRAM = 57846
const HISTORY = 57847
const INACTIVE = 57848
const INVISIBLE = 57849
const LOCKED = 57850
const MASTER_COMPRESSION_ALGORITHMS = 57851
const MASTER_PUBLIC_KEY_PATH = 57852
const MASTER_TLS_CIPHERSUITES = 57853
const MASTER_ZSTD_COMPRESSION_LEVEL = 57854
const NESTED = 57855
const NETWORK_NAMESPACE = 57856
const NOWAIT = 57857
const NULLS = 57858
const OJ = 57859
const OLD = 57860
const OPTIONAL = 57861
const ORDINALITY = 57862
const ORGANIZATION = 57863
const OTHERS = 57864
const PARTIAL = 57865
const PATH = 57866
const PERSIST = 57867
const PERSIST_ONLY = 57868
const PRECEDING = 57869
const PRIVILEGE_CHECKS_USER = 57870
const PROCESS = 57871
const RANDOM = 57872
const REFERENCE = 57873
const REQUIRE_ROW_FORMAT = 57874
const RESOURCE = 57875
const RESPECT = 57876
const RESTART = 57877
const RETAIN = 57878
const REUSE = 57879
const ROLE = 57880
const SECONDARY = 57881
const SECONDARY_ENGINE = 57882
const SECONDARY_ENGINE_ATTRIBUTE = 57883
const SECONDARY_LOAD = 57884
const SECONDARY_UNLOAD = 57885
const SIMPLE = 57886
const SKIP = 57887
const SRID = 57888
const THREAD_PRIORITY = 57889
const TIES = 57890
const UNBOUNDED = 57891
const VCPU = 57892
const VISIBLE = 57893
const RETURNING = 57894
const FORMAT = 57895
const TREE = 57896
const VITESS = 57897
const TRADITIONAL = 57898
const LOCAL = 57899
const LOW_PRIORITY = 57900
const NO_WRITE_TO_BINLOG = 57901
const LOGS = 57902
const ERROR = 57903
const GENERAL = 57904
const HOSTS = 57905
const OPTIMIZER_COSTS = 57906
const USER_RESOURCES = 57907
const SLOW = 57908
const CHANNEL = 57909
const RELAY = 57910
const EXPORT = 57911
const CURRENT = 57912
const ROW = 57913
const ROWS = 57914
const AVG_ROW_LENGTH = 57915
const CONNECTION = 57916
const CHECKSUM = 57917
const DELAY_KEY_WRITE = 57918
const ENCRYPTION = 57919
const ENGINE = 57920
const INSERT_METHOD = 57921
const MAX_ROWS = 57922
const MIN_ROWS = 57923
const PACK_KEYS = 57924
const PASSWORD = 57925
const FIXED = 57926
const DYNAMIC = 57927
const COMPRESSED = 57928
const REDUNDANT = 57929
const COMPACT = 57930
const ROW_FORMAT = 57931
const STATS_AUTO_RECALC = 57932
const STATS_PERSISTENT = 57933
const STATS_SAMPLE_PAGES = 57934
const STORAGE = 57935
const MEMORY = 57936
const DISK = 57937
const PARTITIONS = 57938
const LINEAR = 57939
const RANGE = 57940
const LIST = 57941
const SUBPARTITION = 57942
const SUBPARTITIONS = 57943
const HASH = 57944

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	620, 145,
	-2, 153,
	-1, 48,
	132, 153,
	173, 153,
	335, 153,
	-2, 498,
	-1, 55,
	35, 739,
	235, 739,
	246, 739,
	281, 753,
	282, 753,
	-2, 741,
	-1, 60,
	237, 766,
	-2, 764,
	-1, 114,
	234, 1374,
	-2, 119,
	-1, 116,
	1, 146,
	620, 146,
	-2, 153,
	-1, 127,
	133, 384,
	240, 384,
	-2, 487,
	-1, 146,
	132, 153,
	173, 153,
	335, 153,
	-2, 507,
	-1, 721,
	218, 1395,
	-2, 1391,
	-1, 722,
	218, 1396,
	-2, 1392,
	-1, 798,
	59, 834,
	-2, 849,
	-1, 835,
	148, 1811,
	-2, 112,
	-1, 836,
	148, 1648,
	-2, 113,
	-1, 842,
	148, 1732,
	-2, 1368,
	-1, 992,
	148, 1575,
	-2, 1365,
	-1, 1033,
	245, 41,
	250, 41,
	-2, 395,
	-1, 1117,
	1, 554,
	620, 554,
	-2, 153,
	-1, 1366,
	59, 835,
	-2, 854,
	-1, 1367,
	59, 836,
	-2, 855,
	-1, 1420,
	132, 153,
	173, 153,
	335, 153,
	-2, 434,
	-1, 1499,
	133, 384,
	240, 384,
	-2, 487,
	-1, 1508,
	245, 42,
	250, 42,
	-2, 396,
	-1, 1823,
	218, 1400,
	-2, 1394,
	-1, 1913,
	132, 153,
	173, 153,
	335, 153,
	-2, 435,
	-1, 1920,
	25, 174,
	-2, 176,
	-1, 2183,
	87, 39,
	-2, 891,
	-1, 2240,
	77, 94,
	87, 94,
	-2, 911,
	-1, 2308,
	595, 666,
	-2, 640,
	-1, 2468,
	49, 1335,
	-2, 1329,
	-1, 2712,
	87, 39,
	-2, 892,
	-1, 2750,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 883,
	-1, 3074,
	595, 666,
	-2, 654,
	-1, 3168,
	22, 1734,
	32, 1734,
	174, 1734,
	257, 1734,
	315, 1734,
	316, 1734,
	317, 1734,
	318, 1734,
	319, 1734,
	320, 1734,
	321, 1734,
	323, 1734,
	324, 1734,
	325, 1734,
	326, 1734,
	327, 1734,
	328, 1734,
	329, 1734,
	330, 1734,
	331, 1734,
	332, 1734,
	333, 1734,
	334, 1734,
	336, 1734,
	338, 1734,
	339, 1734,
	340, 1734,
	341, 1734,
	342, 1734,
	343, 1734,
	344, 1734,
	345, 1734,
	346, 1734,
	349, 1734,
	350, 1734,
	351, 1734,
	352, 1734,
	353, 1734,
	354, 1734,
	355, 1734,
	356, 1734,
	357, 1734,
	474, 1734,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 45525

var yyAct = [...]int{
	721, 2406, 2855, 2856, 3240, 730, 2854, 3055, 3252, 724,
	3209, 636, 3146, 3210, 3166, 2685, 723, 2827, 1910, 1863,
	1423, 3134, 2617, 3111, 2523, 2530, 3039, 2123, 3037, 2987,
	1843, 3, 2580, 1180, 2585, 2571, 2481, 700, 37, 2582,
	2581, 2579, 2584, 2583, 2484, 2814, 2886, 791, 2425, 2600,
	3027, 186, 2171, 2143, 186, 813, 584, 186, 701, 1845,
	2538, 1980, 599, 2599, 186, 2485, 619, 2211, 2482, 2721,
	2715, 1381, 186, 2891, 2864, 645, 698, 2368, 2602, 2405,
	623, 2479, 1867, 1883, 2741, 699, 2469, 186, 2198, 2707,
	2234, 2404, 2638, 2273, 2695, 2351, 1477, 1943, 617, 2622,
	2305, 615, 995, 1948, 1968, 2274, 2011, 2275, 840, 599,
	155, 1899, 599, 186, 599, 795, 814, 799, 793, 1887,
	2223, 1344, 2204, 616, 36, 1524, 1368, 38, 2190, 2173,
	1041, 1817, 1786, 1717, 1727, 816, 1989, 1129, 1506, 2343,
	1967, 1875, 837, 1888, 1675, 141, 1950, 2267, 2027, 1028,
	1023, 1412, 2242, 1390, 95, 628, 96, 91, 1890, 1266,
	1738, 1348, 1694, 1201, 1513, 1002, 999, 1031, 1620, 1965,
	1158, 1034, 1604, 1003, 1029, 1624, 1939, 1030, 1411, 1395,
	1409, 805, 1782, 1233, 1172, 1629, 1868, 1472, 124, 611,
	125, 119, 159, 117, 118, 98, 1498, 1113, 827, 803,
	85, 1835, 606, 1273, 800, 102, 1178, 801, 76, 1269,
	97, 89, 3241, 2815, 2590, 3064, 2298, 1982, 1983, 1984,
	1982, 2568, 2327, 2326, 3092, 2590, 2296, 2587, 2025, 2770,
	87, 802, 77, 8, 7, 2807, 1785, 821, 90, 826,
	120, 6, 555, 1589, 1697, 126, 104, 105, 807, 108,
	3093, 1065, 114, 3193, 2359, 183, 87, 1070, 550, 1045,
	588, 996, 87, 736, 737, 738, 1202, 2360, 607, 1820,
	87, 2859, 2588, 2859, 736, 737, 738, 3087, 787, 788,
	789, 790, 3088, 2588, 798, 1080, 794, 792, 1682, 834,
	1840, 1841, 1681, 808, 2594, 841, 1044, 1680, 815, 1679,
	1202, 1021, 1678, 1677, 1660, 2594, 1669, 1020, 1019, 120,
	1018, 1017, 829, 830, 3187, 1071, 1074, 1075, 188, 189,
	190, 3147, 609, 2169, 610, 2465, 2318, 2674, 1375, 3213,
	2200, 1012, 2015, 2429, 1007, 3263, 3208, 3197, 3195, 3231,
	2690, 2321, 2689, 3176, 3040, 1959, 1086, 2144, 1687, 2639,
	2983, 588, 2982, 1069, 2013, 1068, 2858, 3174, 2858, 188,
	189, 190, 182, 3196, 3194, 3260, 3180, 3181, 3088, 2820,
	1953, 3244, 2821, 1212, 2540, 2541, 2014, 120, 3144, 3083,
	78, 3175, 78, 80, 3222, 702, 121, 78, 2828, 3135,
	78, 2008, 3143, 1871, 3082, 1067, 702, 2069, 2526, 164,
	2367, 3171, 588, 2656, 1487, 2591, 2170, 1212, 1083, 1084,
	1085, 2214, 1088, 1089, 1090, 1091, 2591, 2519, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 2358, 2215, 2335, 1413, 2904,
	1414, 2334, 2256, 2527, 585, 3069, 2520, 2521, 2251, 2066,
	1016, 2250, 1122, 1123, 2252, 1905, 1906, 161, 87, 162,
	87, 1904, 2067, 589, 1842, 87, 1148, 785, 87, 2529,
	1175, 1011, 1208, 784, 1013, 1200, 3056, 1153, 1154, 181,
	1165, 2539, 1167, 2524, 1125, 1136, 2263, 2299, 588, 1149,
	1137, 2647, 571, 2542, 1142, 3214, 1923, 1922, 1136, 2619,
	2540, 2541, 2645, 1137, 569, 597, 1208, 2525, 1014, 2207,
	2208, 1135, 1952, 1134, 1668, 1112, 3215, 2718, 2394, 601,
	1164, 1166, 1352, 2344, 588, 595, 2623, 2306, 588, 1610,
	1871, 1670, 1671, 1672, 1234, 2612, 2028, 3243, 1990, 3013,
	2531, 3014, 2330, 2613, 566, 2045, 2033, 2046, 1605, 2047,
	186, 1169, 186, 580, 589, 186, 2992, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1243, 1242, 1244, 1245, 576, 1087,
	1579, 1016, 1155, 1008, 1150, 1157, 1174, 1869, 1870, 1143,
	1010, 1009, 1156, 1118, 2620, 599, 1182, 599, 599, 2346,
	165, 2039, 2036, 2038, 2037, 2040, 2041, 1151, 1152, 171,
	2809, 2034, 599, 599, 3188, 589, 1116, 2539, 2808, 2048,
	1093, 1092, 2621, 2030, 1580, 2967, 1581, 1162, 1024, 2542,
	1993, 1163, 1025, 2805, 2032, 1054, 1015, 1052, 2863, 1014,
	1884, 1168, 1025, 1063, 1062, 1194, 1061, 556, 1060, 558,
	572, 37, 591, 1059, 590, 562, 2428, 560, 564, 573,
	565, 1058, 559, 1057, 570, 1161, 1056, 561, 574, 575,
	578, 581, 582, 583, 579, 577, 2031, 568, 592, 1207,
	1204, 1205, 1206, 1211, 1213, 1210, 2395, 1209, 1051, 1355,
	1491, 1064, 2542, 1000, 3264, 3220, 1000, 1203, 1037, 1248,
	1248, 589, 1036, 1621, 1132, 1512, 1138, 1139, 1140, 1141,
	3063, 2297, 2265, 1207, 1204, 1205, 1206, 1211, 1213, 1210,
	1966, 1209, 828, 1000, 1869, 1870, 156, 998, 2347, 1176,
	1177, 1203, 1022, 1251, 1252, 1253, 1254, 589, 2528, 2012,
	2019, 589, 733, 1259, 3149, 1611, 2804, 2174, 2176, 1612,
	1613, 1617, 1073, 1188, 1956, 3149, 1170, 1015, 1036, 1076,
	2561, 2329, 1072, 1485, 2067, 3148, 2350, 1484, 1016, 1111,
	1043, 1483, 2316, 2332, 733, 3179, 3148, 2592, 2593, 2300,
	1342, 1055, 733, 1053, 2363, 2081, 1618, 1481, 2592, 2593,
	2596, 554, 549, 3052, 1957, 186, 1255, 1146, 1043, 599,
	599, 2596, 1955, 1184, 1185, 3081, 2010, 1249, 1250, 2768,
	2769, 1324, 1511, 2757, 2719, 186, 1183, 2737, 2247, 3178,
	81, 1337, 2210, 1591, 1590, 1592, 1593, 1594, 2857, 2320,
	2857, 2156, 1043, 1115, 599, 1043, 1958, 1834, 186, 2342,
	1358, 1399, 2341, 599, 1362, 77, 1954, 1197, 1195, 599,
	795, 1318, 1359, 1609, 593, 1196, 1127, 1356, 86, 3256,
	86, 2068, 1275, 116, 1271, 86, 1272, 1343, 86, 2205,
	1911, 1042, 1248, 2319, 157, 586, 837, 1245, 2518, 810,
	1159, 169, 1630, 2993, 111, 1082, 1173, 1768, 3077, 2532,
	587, 1131, 1124, 2536, 1066, 1121, 2800, 2731, 1133, 1042,
	2029, 2535, 1218, 1614, 1415, 1036, 1039, 1040, 1198, 1000,
	2387, 2175, 1739, 1033, 1037, 1043, 2289, 1325, 1326, 1327,
	1328, 1329, 1360, 177, 1361, 2353, 95, 2353, 96, 1114,
	2352, 1343, 2352, 1042, 1032, 2537, 1042, 2900, 1046, 1036,
	2533, 1046, 1036, 1048, 1015, 2534, 1048, 1049, 1047, 3223,
	1049, 1047, 2369, 1349, 112, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 2775, 98, 1050, 1216,
	1217, 176, 178, 179, 180, 1760, 1749, 1750, 1751, 1752,
	1762, 1753, 1754, 1755, 1767, 1763, 1756, 1757, 1764, 1765,
	1766, 1758, 1759, 1761, 1043, 2774, 1346, 1145, 2009, 1606,
	1739, 1607, 2095, 1357, 1608, 186, 1217, 1997, 1147, 1473,
	2002, 1521, 1377, 1363, 1380, 792, 1042, 1520, 1510, 1482,
	2002, 794, 1036, 1039, 1040, 1160, 1000, 1631, 2007, 841,
	1033, 1037, 1130, 2005, 1215, 2371, 1216, 1217, 1405, 1406,
	1054, 1052, 599, 2389, 1508, 3113, 3045, 2006, 1117, 1400,
	1218, 3216, 1517, 1689, 1691, 1692, 1519, 2004, 2758, 1522,
	1523, 599, 599, 2834, 599, 2835, 599, 599, 2653, 599,
	599, 599, 599, 599, 599, 3254, 1599, 1690, 3255, 3265,
	3253, 3258, 2975, 1554, 1555, 2974, 599, 2965, 3114, 3046,
	186, 1560, 188, 189, 190, 1042, 2616, 1081, 2437, 2847,
	2846, 2381, 2380, 2379, 2373, 2782, 2377, 186, 2372, 2781,
	2370, 2771, 188, 189, 190, 2375, 2569, 2557, 2433, 731,
	599, 1410, 186, 2271, 2374, 1238, 1239, 1240, 1241, 1243,
	1242, 1244, 1245, 1619, 1375, 1518, 599, 2270, 186, 731,
	1598, 2376, 2378, 1699, 1504, 1240, 1241, 1243, 1242, 1244,
	1245, 2073, 2074, 2075, 186, 1962, 1600, 1700, 1246, 1247,
	1698, 186, 1553, 3217, 3266, 1556, 1574, 736, 737, 738,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 599,
	1514, 1514, 1215, 1497, 1216, 1217, 1584, 1526, 1557, 1527,
	1516, 1529, 1531, 599, 599, 1535, 1537, 1539, 1541, 1543,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1242, 1244,
	1245, 186, 1234, 1583, 1480, 1515, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1220, 1234, 1495, 2362, 1493, 1486, 1582,
	832, 1507, 1572, 1494, 1566, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1243, 1242, 1244, 1245, 1626, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1243, 1242, 1244, 1245, 1563, 599,
	1375, 1721, 1725, 1562, 1561, 1724, 1724, 1743, 188, 189,
	190, 1744, 1730, 1558, 1812, 1597, 1722, 1722, 1586, 1533,
	3072, 1384, 1488, 1489, 1490, 3071, 3049, 599, 599, 3048,
	1634, 3047, 188, 189, 190, 731, 2765, 1638, 1695, 1640,
	1641, 1642, 1643, 1622, 1218, 2970, 1647, 188, 189, 190,
	2955, 2254, 2954, 1218, 2899, 1632, 1633, 2897, 1659, 1019,
	120, 1018, 1017, 1218, 2843, 1813, 188, 189, 190, 1637,
	1978, 1385, 2779, 1693, 2764, 599, 1644, 1645, 1646, 1596,
	1636, 1703, 1585, 188, 189, 190, 1218, 722, 1564, 1565,
	1218, 2624, 2560, 2559, 1570, 1571, 2280, 2268, 1218, 1740,
	2091, 186, 1821, 1339, 1658, 1702, 599, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	2023, 1218, 188, 189, 190, 1657, 1976, 3227, 1375, 2022,
	186, 1866, 1848, 599, 1661, 1696, 3225, 1375, 187, 1665,
	1666, 187, 1375, 186, 187, 1627, 2124, 599, 1595, 600,
	1814, 187, 186, 1587, 186, 1218, 186, 186, 599, 187,
	1783, 599, 1577, 1573, 1701, 1853, 1569, 1854, 1218, 3158,
	1375, 1568, 599, 2090, 187, 1187, 1215, 1823, 1216, 1217,
	1567, 3156, 1375, 1821, 1386, 1215, 1171, 1216, 1217, 2196,
	3242, 837, 1920, 3000, 837, 1215, 600, 1216, 1217, 600,
	187, 600, 1825, 1826, 3154, 1375, 3204, 1375, 2999, 95,
	2959, 96, 2196, 3141, 2196, 3121, 1218, 1837, 1215, 2958,
	1216, 1217, 1215, 1783, 1216, 1217, 2826, 599, 2086, 95,
	1215, 96, 1216, 1217, 1969, 1970, 1971, 101, 2085, 1973,
	1975, 1977, 2212, 1218, 1822, 1859, 1886, 1218, 100, 94,
	99, 3026, 1375, 1215, 599, 1216, 1217, 2112, 1823, 94,
	599, 1517, 92, 2307, 1517, 2285, 1517, 1929, 1930, 1931,
	1932, 1919, 2001, 93, 1915, 1924, 1726, 1925, 1926, 1927,
	1928, 1914, 1731, 1732, 1847, 807, 2730, 1215, 1214, 1216,
	1217, 2196, 3117, 1935, 1936, 1937, 1938, 3104, 1375, 2752,
	1215, 1897, 1216, 1217, 2212, 1991, 92, 599, 1375, 599,
	2513, 1861, 2003, 94, 2220, 599, 599, 93, 1375, 1945,
	2067, 1918, 2196, 3065, 2732, 1881, 1879, 1375, 1375, 2219,
	1951, 1375, 2818, 3062, 2670, 1375, 3109, 1902, 1901, 1824,
	2978, 1375, 1827, 1828, 841, 3076, 1917, 841, 1215, 1916,
	1216, 1217, 101, 186, 100, 1218, 1988, 188, 189, 190,
	186, 1974, 2196, 100, 2220, 99, 2696, 186, 186, 1961,
	2002, 186, 1375, 186, 2243, 1215, 2730, 1216, 1217, 1215,
	186, 1216, 1217, 1045, 2220, 1858, 2670, 186, 2548, 1946,
	2196, 2966, 1218, 1514, 2480, 1941, 1942, 2818, 1375, 1996,
	1960, 1218, 1999, 1964, 2000, 2730, 1972, 2453, 1218, 2016,
	2196, 2816, 1218, 186, 2002, 1375, 1218, 1903, 599, 2082,
	1044, 1218, 2104, 2082, 1946, 1995, 1218, 1998, 2117, 1994,
	1218, 1234, 87, 1375, 1230, 1218, 1231, 2244, 3024, 1375,
	2735, 1375, 2018, 1234, 2017, 2080, 1218, 2246, 2020, 2021,
	1232, 1246, 1247, 1229, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1243, 1242, 1244, 1245, 2101, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1243, 1242, 1244, 1245, 1236, 1237, 1238,
	1239, 1240, 1241, 1243, 1242, 1244, 1245, 1215, 1218, 1216,
	1217, 3021, 1375, 1218, 2100, 3003, 1375, 2026, 1218, 2706,
	1375, 1214, 1375, 2002, 2703, 1375, 1218, 1695, 1985, 2701,
	1375, 1876, 1877, 2651, 1375, 2117, 1375, 1874, 2151, 1375,
	2058, 2059, 1379, 1218, 1215, 2061, 1216, 1217, 1838, 2132,
	1375, 1673, 1218, 1215, 2062, 1216, 1217, 2051, 2550, 2549,
	1215, 1616, 1216, 1217, 1215, 1407, 1216, 1217, 1215, 2078,
	1216, 1217, 1218, 1215, 1027, 1216, 1217, 1026, 1215, 3184,
	1216, 1217, 1215, 2243, 1216, 1217, 1218, 1215, 797, 1216,
	1217, 1218, 3124, 2077, 2989, 2079, 1382, 3218, 1215, 1218,
	1216, 1217, 3060, 1388, 2956, 1218, 2911, 2065, 2192, 186,
	2963, 2546, 2547, 1218, 2546, 2545, 2799, 186, 1218, 2220,
	1375, 2180, 599, 94, 1696, 1724, 2796, 2801, 599, 2082,
	1375, 2076, 2067, 2328, 2572, 2704, 1722, 2777, 2166, 599,
	1215, 2184, 1216, 1217, 2662, 1215, 2244, 1216, 1217, 1218,
	1215, 2661, 1216, 1217, 2277, 2672, 2067, 187, 1215, 187,
	1216, 1217, 187, 186, 1476, 2310, 87, 186, 2094, 1387,
	2303, 2304, 2196, 2195, 2668, 1215, 2178, 1216, 1217, 1476,
	1475, 2082, 2253, 2272, 1215, 2216, 1216, 1217, 2659, 1421,
	1420, 37, 600, 1478, 600, 600, 2658, 1944, 2614, 2574,
	2236, 2165, 1218, 2570, 1215, 2110, 1216, 1217, 1218, 600,
	600, 2311, 1218, 1823, 1940, 1934, 1218, 1933, 1215, 2197,
	1216, 1217, 1602, 1215, 1509, 1216, 1217, 1505, 1474, 1218,
	599, 1215, 2164, 1216, 1217, 1218, 186, 1215, 113, 1216,
	1217, 1116, 2618, 186, 1218, 1215, 2990, 1216, 1217, 2276,
	1215, 1959, 1216, 1217, 2742, 2743, 2193, 599, 1851, 3237,
	3235, 3211, 3086, 2206, 599, 3008, 2787, 1349, 1517, 1517,
	2168, 2745, 2566, 599, 2092, 2565, 2302, 1663, 2264, 2266,
	1822, 1215, 2564, 1216, 1217, 2163, 2189, 2235, 2194, 2480,
	2325, 2162, 2748, 2290, 2257, 2149, 2052, 2277, 2209, 2141,
	2747, 186, 186, 186, 186, 186, 1545, 2324, 2499, 2498,
	1218, 2241, 2140, 2788, 2789, 2790, 3190, 3142, 2139, 1865,
	2783, 2245, 186, 186, 1951, 2248, 2502, 2138, 1383, 1857,
	1218, 2503, 3044, 2255, 1215, 2258, 1216, 1217, 186, 1664,
	1215, 2736, 1216, 1217, 1215, 2458, 1216, 1217, 1215, 2457,
	1216, 1217, 2269, 1546, 1547, 1548, 2890, 599, 2153, 2154,
	2500, 1215, 2892, 1216, 1217, 2501, 2278, 1215, 2726, 1216,
	1217, 2784, 2785, 2786, 2467, 2286, 1215, 1549, 1216, 1217,
	2291, 2292, 2293, 2287, 2504, 1615, 2229, 2230, 2323, 2881,
	2544, 2880, 187, 2137, 2723, 783, 600, 600, 1724, 2261,
	1724, 1497, 2722, 1724, 1218, 2281, 2312, 2313, 1724, 1722,
	2386, 1722, 187, 2136, 1722, 599, 1218, 2470, 2472, 1722,
	2434, 1374, 2438, 2322, 1078, 2084, 2473, 599, 1550, 1551,
	1552, 600, 1218, 2382, 1186, 187, 1077, 2632, 2276, 2879,
	600, 811, 1215, 92, 1216, 1217, 600, 1735, 599, 812,
	2365, 1218, 2364, 2345, 93, 2356, 2317, 1218, 121, 2728,
	2443, 1736, 1215, 186, 1216, 1217, 2348, 599, 94, 2436,
	2430, 2431, 2432, 2407, 2279, 2407, 3250, 2412, 2407, 2282,
	2283, 599, 2413, 2407, 2562, 1218, 2409, 2366, 599, 599,
	2383, 186, 186, 186, 186, 186, 1876, 1877, 2354, 2135,
	2055, 2355, 3163, 186, 3061, 2435, 2044, 2439, 186, 2985,
	2543, 186, 92, 186, 2443, 2134, 186, 186, 186, 94,
	2400, 1218, 2233, 93, 1862, 799, 2492, 2456, 2460, 2043,
	2419, 2420, 2421, 2422, 2133, 2455, 1215, 2477, 1216, 1217,
	2127, 2512, 819, 820, 2486, 1362, 2236, 1218, 1215, 2042,
	1216, 1217, 2558, 2461, 2708, 2071, 99, 2442, 3032, 3031,
	3011, 186, 100, 1218, 1215, 2483, 1216, 1217, 2126, 2898,
	2483, 1218, 2448, 2452, 599, 2449, 2450, 2451, 2212, 2896,
	2895, 2888, 599, 1215, 2797, 1216, 1217, 186, 2459, 1215,
	2462, 1216, 1217, 2727, 2474, 2475, 101, 2725, 2575, 1986,
	186, 2598, 187, 2514, 2125, 1492, 2515, 100, 2887, 99,
	2493, 818, 800, 2496, 2491, 801, 101, 1215, 186, 1216,
	1217, 186, 2505, 95, 2716, 96, 1626, 100, 2516, 2867,
	2122, 2633, 2509, 2510, 2192, 2494, 2495, 2522, 2497, 600,
	2414, 2415, 2416, 2417, 2418, 1218, 2121, 3239, 3238, 2552,
	2396, 2554, 2553, 1215, 2120, 1216, 1217, 2577, 600, 600,
	1218, 600, 2102, 600, 600, 2606, 600, 600, 600, 600,
	600, 600, 1849, 1401, 2605, 1392, 2576, 101, 3238, 1215,
	3239, 1216, 1217, 600, 2597, 1951, 3050, 187, 100, 2763,
	99, 106, 107, 2609, 599, 1215, 809, 1216, 1217, 94,
	2667, 103, 88, 1215, 187, 1216, 1217, 1, 2767, 3173,
	567, 1839, 1347, 2628, 2627, 2625, 3212, 600, 3169, 187,
	3170, 1588, 1578, 1218, 599, 186, 2829, 1784, 2118, 2986,
	2578, 1992, 2636, 600, 2635, 187, 2640, 2641, 2795, 2642,
	1949, 2643, 2644, 2114, 2646, 2649, 2648, 1035, 146, 2688,
	1912, 187, 1913, 3137, 110, 993, 109, 1038, 187, 1144,
	2694, 1987, 2630, 2631, 2819, 2262, 1921, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 600, 1215, 1427, 1216,
	1217, 1425, 1426, 1424, 186, 1429, 1428, 2103, 2673, 1667,
	600, 600, 1215, 596, 1216, 1217, 2232, 2714, 2555, 2556,
	184, 1416, 2766, 2697, 2698, 1393, 2113, 2686, 187, 1079,
	2709, 2710, 557, 186, 2225, 2228, 2229, 2230, 2226, 2551,
	2227, 2231, 2024, 2717, 563, 2724, 1260, 1373, 1369, 1662,
	2739, 2454, 186, 2729, 2249, 186, 186, 186, 838, 1373,
	1369, 831, 1370, 1850, 2182, 599, 599, 2488, 2749, 2720,
	2466, 2746, 2755, 2756, 1370, 1215, 600, 1216, 1217, 2468,
	2199, 2471, 2464, 3043, 2802, 2803, 2753, 1855, 1856, 1372,
	2889, 1371, 2761, 2606, 2754, 2762, 3122, 2259, 1389, 1366,
	1367, 1372, 2605, 1371, 600, 600, 2093, 2823, 2824, 599,
	599, 599, 599, 1737, 1891, 2862, 1688, 621, 2778, 620,
	2780, 2225, 2228, 2229, 2230, 2226, 618, 2227, 2231, 2185,
	2213, 2742, 2743, 1221, 725, 2172, 1402, 2224, 2222, 2221,
	2053, 1898, 2744, 2740, 3165, 1893, 1889, 2191, 629, 622,
	614, 690, 600, 2760, 2604, 3150, 2331, 2615, 2333, 2260,
	2611, 1199, 1365, 608, 1724, 1006, 1724, 1734, 2991, 3067,
	2070, 2655, 2825, 1364, 1747, 1722, 1748, 1722, 187, 3074,
	2586, 2813, 2567, 600, 2308, 1979, 63, 41, 3038, 3110,
	689, 686, 2865, 2866, 2426, 2427, 3089, 3090, 685, 3091,
	1775, 2842, 186, 603, 3186, 1190, 825, 187, 32, 31,
	600, 30, 29, 28, 2838, 23, 22, 21, 20, 19,
	187, 25, 18, 17, 600, 16, 599, 2589, 599, 187,
	3207, 187, 2884, 187, 187, 600, 3249, 115, 600, 2407,
	2851, 2407, 2860, 50, 2913, 47, 45, 123, 1724, 600,
	2850, 2836, 122, 48, 44, 1119, 2905, 2868, 2869, 1722,
	42, 27, 37, 26, 15, 14, 13, 12, 11, 10,
	9, 2907, 5, 4, 35, 2885, 34, 2909, 2772, 2773,
	2894, 2486, 33, 2893, 1193, 2486, 24, 2, 2903, 2901,
	599, 2295, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 2483, 0, 186, 600, 0, 599, 0, 0, 2964,
	0, 2914, 2915, 0, 0, 0, 0, 0, 0, 599,
	2917, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2806, 600, 0, 0, 2810, 2811, 2812, 600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3005, 3006, 2962,
	2961, 3009, 2988, 2960, 2968, 1724, 0, 0, 2981, 0,
	0, 0, 2976, 0, 0, 0, 1722, 2980, 0, 599,
	0, 0, 0, 599, 599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 0, 600, 0, 0, 0,
	0, 0, 600, 600, 0, 0, 0, 0, 0, 0,
	3010, 0, 599, 3012, 0, 0, 0, 3015, 3016, 3017,
	0, 3018, 3019, 0, 0, 0, 0, 0, 0, 0,
	0, 3054, 3036, 3033, 3034, 0, 0, 3035, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 187, 0, 3051,
	0, 0, 1376, 1378, 187, 187, 0, 599, 187, 0,
	187, 0, 3057, 2486, 0, 3053, 0, 187, 0, 0,
	0, 0, 186, 0, 187, 0, 3059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	599, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 600, 0, 0, 0, 3078,
	3042, 0, 0, 0, 0, 0, 0, 3075, 0, 0,
	0, 0, 0, 37, 3073, 0, 3066, 0, 0, 0,
	0, 3070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 0, 2971,
	2972, 2973, 0, 0, 0, 3108, 3095, 0, 0, 3096,
	3097, 3098, 3099, 3100, 0, 0, 0, 599, 599, 0,
	0, 0, 0, 0, 0, 0, 0, 3115, 0, 0,
	0, 0, 0, 3123, 0, 0, 0, 0, 0, 37,
	3125, 3151, 0, 3152, 0, 599, 3136, 3128, 0, 3133,
	2988, 3138, 3145, 3120, 3130, 3129, 3127, 3132, 3131, 186,
	599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2483, 0, 3094, 0, 0, 3161, 0, 0, 0,
	0, 0, 0, 0, 0, 3182, 0, 3172, 3177, 3164,
	0, 0, 0, 0, 0, 0, 0, 3151, 0, 3152,
	3192, 0, 0, 599, 3189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 187, 599, 3201, 0, 3206, 600,
	0, 0, 0, 0, 0, 600, 0, 0, 0, 0,
	0, 0, 0, 599, 3219, 599, 600, 3221, 0, 3233,
	0, 0, 0, 1724, 0, 0, 0, 0, 3229, 3230,
	0, 3236, 0, 3234, 1722, 3232, 0, 0, 0, 0,
	187, 0, 0, 3151, 187, 3152, 3245, 0, 0, 0,
	0, 3251, 0, 0, 0, 0, 0, 3259, 3257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 3267, 0, 0, 0, 1724,
	3269, 3270, 3006, 0, 3268, 0, 0, 0, 0, 0,
	1722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 602, 0, 0, 0, 0,
	0, 600, 0, 786, 0, 0, 0, 0, 0, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 187,
	187, 187, 187, 0, 1001, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	187, 823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1741, 0, 600, 0, 1742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 612,
	0, 0, 0, 0, 1810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 817, 0, 0, 600, 1376, 1836, 0, 0, 78,
	39, 40, 80, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 0, 0, 0, 84,
	182, 0, 0, 43, 69, 70, 0, 67, 71, 1860,
	187, 0, 0, 0, 600, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 0, 0, 600, 0,
	0, 0, 0, 0, 0, 600, 600, 164, 187, 187,
	187, 187, 187, 0, 0, 56, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 187, 0, 87, 187, 0,
	187, 0, 0, 187, 187, 187, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 121, 162, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 164,
	0, 1963, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 0, 600,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 142, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 161, 187, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1500, 1501, 152, 151, 181,
	0, 0, 0, 46, 49, 52, 51, 54, 0, 66,
	0, 0, 75, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 83, 82, 165, 0,
	64, 65, 53, 0, 0, 0, 0, 171, 73, 74,
	0, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 187, 0, 0, 0, 0, 0, 57, 58,
	0, 59, 60, 61, 62, 0, 0, 0, 147, 1502,
	154, 1120, 1499, 1126, 148, 149, 1128, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 2083, 0,
	187, 0, 2087, 2088, 2089, 0, 0, 0, 0, 0,
	0, 0, 2097, 0, 0, 2098, 2099, 0, 0, 187,
	0, 0, 187, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 600, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 2105, 2106, 2107, 2108, 2109, 0, 2111, 81,
	0, 0, 0, 0, 2115, 0, 2116, 0, 0, 0,
	2119, 0, 0, 0, 0, 0, 156, 0, 2128, 2129,
	2130, 2131, 0, 0, 0, 0, 600, 600, 600, 600,
	0, 2142, 0, 2145, 2146, 2147, 2148, 86, 2150, 2152,
	0, 0, 0, 0, 0, 0, 2157, 2158, 2159, 2160,
	2161, 0, 0, 0, 0, 0, 0, 1860, 0, 2167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2179,
	0, 0, 0, 0, 0, 1219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 150, 0, 0, 0, 0, 169,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 177, 0, 600, 0, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1404,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 169, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 0, 0, 0, 0, 176,
	178, 179, 180, 0, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 0, 0,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1391, 0, 0, 0, 0, 0, 600, 0, 0, 0,
	600, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	0, 0, 0, 0, 0, 2393, 1422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2440, 2441, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1559, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2489,
	0, 0, 0, 1603, 0, 0, 0, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 2507, 2508, 0, 0,
	600, 0, 0, 0, 0, 0, 0, 1479, 0, 0,
	0, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 1639, 0, 600, 600, 0, 0, 0, 0,
	0, 0, 0, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	0, 732, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 600, 0, 0,
	0, 0, 1676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 796,
	0, 79, 0, 2634, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 1628, 0, 0, 0, 0, 0, 796,
	0, 0, 0, 0, 0, 2650, 2652, 2654, 0, 0,
	600, 0, 600, 0, 2660, 1005, 0, 0, 0, 2664,
	2665, 2666, 0, 0, 0, 0, 2669, 0, 0, 0,
	0, 0, 2671, 0, 0, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2691, 2692, 2693, 0, 0,
	0, 0, 0, 0, 2699, 0, 2700, 2702, 0, 2705,
	0, 0, 0, 0, 2711, 0, 1683, 1684, 1685, 1686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2733,
	2734, 0, 0, 2738, 0, 0, 0, 0, 0, 1728,
	1729, 0, 0, 0, 1878, 0, 1733, 0, 0, 0,
	0, 2750, 2751, 1882, 0, 1885, 0, 0, 1676, 0,
	0, 1769, 1770, 1771, 1772, 1773, 1774, 1776, 1780, 1781,
	612, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 0, 1811, 0, 1815, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 1831, 1832, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 0, 0,
	0, 0, 0, 612, 0, 0, 0, 0, 0, 0,
	0, 2817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1872,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2839, 0, 0, 0, 0, 0, 1909, 0, 0,
	0, 0, 0, 0, 0, 2848, 0, 0, 0, 2849,
	0, 0, 0, 0, 0, 2853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2861, 0, 0,
	691, 0, 0, 0, 0, 0, 0, 2870, 0, 2872,
	2873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1676, 0, 1947, 0, 0, 0,
	0, 2035, 0, 0, 0, 0, 0, 0, 2049, 2050,
	0, 0, 2054, 0, 0, 0, 0, 0, 0, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 839,
	0, 0, 997, 0, 1004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2977, 0, 0, 0, 0,
	0, 0, 0, 0, 2984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2994, 2995, 2996, 0, 2997, 2998, 0, 0,
	0, 0, 3001, 0, 3002, 0, 3004, 3007, 0, 0,
	0, 0, 0, 0, 0, 0, 1179, 0, 1179, 1179,
	0, 0, 0, 0, 0, 0, 3020, 3022, 3023, 3025,
	3028, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 796, 1256, 1257, 1258, 0, 1261, 3058, 1262,
	1263, 1264, 1265, 0, 1268, 1270, 1270, 0, 1270, 1274,
	1274, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 0, 1317, 0, 1319, 1320, 1321, 1322, 1323,
	0, 2096, 0, 0, 0, 1274, 1274, 1274, 1274, 1274,
	0, 0, 0, 3080, 0, 0, 0, 0, 0, 1330,
	1331, 1332, 1333, 0, 0, 0, 0, 3085, 2240, 0,
	0, 0, 0, 0, 0, 1345, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3105,
	0, 0, 0, 0, 0, 3106, 3107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	0, 0, 0, 0, 796, 0, 0, 2288, 796, 0,
	0, 0, 0, 0, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3153, 3155, 3157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2336, 2337, 2338, 2339, 2340, 3191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1676, 2349, 0, 0, 3203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3224, 3226, 3228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3261, 3262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 839, 0, 839, 839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1189, 1191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2384, 2385, 0, 0, 0, 2388, 0, 0,
	0, 0, 2390, 2391, 2392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2397, 2398, 2399, 0, 0, 1787,
	2401, 0, 2402, 2403, 0, 0, 0, 2410, 2411, 0,
	0, 0, 0, 0, 0, 1787, 1787, 1787, 1787, 1787,
	612, 612, 612, 612, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2563, 0, 2444, 2445, 2446, 2447, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 0, 0, 2601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2610, 0, 0, 0, 0, 0, 0, 0, 0,
	1179, 0, 0, 0, 2478, 0, 0, 0, 0, 2626,
	0, 0, 2629, 0, 1179, 1179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1353,
	1354, 2511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1397, 0, 0, 121, 0, 143,
	0, 0, 0, 839, 0, 0, 0, 0, 0, 1417,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 2713, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1500, 1501, 152, 151,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2657, 0, 0, 0, 0, 0, 0, 2663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2791, 0, 0, 2792, 2793, 2794, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	1502, 154, 0, 1499, 0, 148, 149, 0, 0, 0,
	0, 165, 997, 0, 0, 0, 0, 0, 0, 612,
	171, 0, 0, 0, 0, 1340, 0, 0, 0, 0,
	0, 1525, 1525, 0, 1525, 0, 1525, 1525, 0, 1534,
	1525, 1525, 1525, 1525, 1525, 0, 0, 0, 1005, 0,
	0, 0, 1340, 0, 0, 1340, 997, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1005, 0, 0, 0, 0, 0, 0, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2798, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2822, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 839, 839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2840, 0, 2841, 0, 0, 0, 0,
	2844, 2845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2871, 1718,
	0, 0, 0, 2874, 0, 2875, 2876, 0, 2877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	0, 0, 144, 0, 0, 145, 0, 1745, 1746, 2072,
	0, 0, 0, 2902, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2910, 0, 0, 2912, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 2916, 169, 0, 0, 0, 0, 0, 0, 839,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 2957,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 1397, 0, 0,
	839, 0, 176, 178, 179, 180, 0, 0, 839, 0,
	0, 839, 3079, 2155, 0, 0, 0, 0, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2177, 0, 0, 3041,
	612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2217, 2218, 1004, 0, 0,
	0, 0, 0, 0, 2237, 0, 2238, 2239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 997, 0, 0, 0, 0, 182,
	1004, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 612, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 121, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 3084, 0, 997, 0, 1718,
	0, 0, 0, 612, 0, 1718, 1718, 0, 0, 0,
	0, 0, 0, 3101, 0, 0, 3102, 153, 3103, 692,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2315, 0, 0, 0, 0,
	0, 0, 0, 0, 161, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	612, 0, 130, 131, 152, 151, 181, 0, 0, 0,
	185, 0, 0, 553, 0, 0, 594, 0, 0, 0,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 806, 0, 2064, 0,
	0, 0, 0, 0, 0, 0, 3183, 0, 0, 0,
	0, 0, 824, 0, 824, 0, 0, 0, 0, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3198, 0, 3199, 0,
	3200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 128, 154, 135, 127,
	0, 148, 149, 0, 3205, 0, 2423, 165, 0, 0,
	0, 0, 0, 0, 1444, 0, 171, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 137, 132, 133, 134, 138, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 3246, 0, 3247,
	0, 0, 140, 0, 1892, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2487, 0, 79,
	0, 0, 1892, 1892, 1892, 1892, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2237,
	796, 0, 0, 0, 1892, 839, 0, 1892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 2186, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 2201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1432, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2595, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2637,
	2284, 0, 0, 0, 0, 0, 0, 0, 0, 1445,
	0, 0, 0, 1444, 0, 0, 0, 0, 144, 0,
	0, 145, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 2309, 0, 0, 0, 0, 0,
	0, 0, 0, 2314, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 1458, 1461, 1462,
	1463, 1464, 1465, 1466, 0, 1467, 1468, 1469, 1470, 1471,
	1446, 1447, 1448, 1449, 1430, 1431, 1459, 0, 1433, 0,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 0,
	177, 1443, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1718, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 1892, 0, 0, 176, 178,
	179, 180, 0, 0, 0, 1432, 0, 0, 2759, 0,
	0, 0, 0, 1340, 0, 1340, 0, 0, 1340, 553,
	0, 553, 0, 1340, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1525, 0,
	0, 0, 0, 0, 0, 0, 1460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2463, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 839, 0, 0, 0, 1340, 0, 0, 2490, 1525,
	1340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2919, 2921, 2920, 2930, 2931, 2932,
	2933, 2934, 2935, 2936, 651, 0, 1458, 1461, 1462, 1463,
	1464, 1465, 1466, 0, 1467, 1468, 1469, 1470, 1471, 1446,
	1447, 1448, 1449, 1430, 1431, 1459, 0, 1433, 0, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 0, 0,
	1443, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 2878,
	0, 2882, 2883, 0, 997, 0, 0, 1340, 0, 0,
	1341, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2487, 0, 79, 0, 2487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 1460, 0, 0, 0, 0,
	0, 0, 0, 0, 2687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2925, 2926, 0, 0,
	0, 0, 0, 0, 0, 0, 2487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1330, 1331, 1332, 1333, 0, 703, 0, 646,
	707, 648, 704, 705, 0, 644, 647, 706, 0, 3068,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 1864, 1864, 79, 0, 0,
	0, 0, 0, 0, 649, 650, 2918, 2922, 2923, 2924,
	2927, 2928, 2929, 2937, 2939, 674, 2938, 2940, 2941, 2942,
	2945, 2946, 2947, 2948, 2943, 2944, 2949, 2950, 2951, 2952,
	2953, 0, 0, 0, 0, 0, 0, 0, 0, 2830,
	2831, 2832, 2833, 708, 1341, 709, 0, 0, 713, 0,
	0, 0, 715, 714, 0, 716, 688, 687, 0, 0,
	710, 711, 0, 712, 0, 0, 0, 0, 3119, 0,
	0, 1341, 0, 79, 1341, 0, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	0, 1340, 0, 0, 0, 0, 1575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	553, 1340, 0, 0, 0, 0, 2906, 0, 2908, 1648,
	1649, 553, 553, 553, 553, 553, 553, 553, 0, 0,
	0, 0, 0, 0, 0, 3202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 839,
	0, 0, 0, 0, 0, 0, 824, 0, 0, 0,
	0, 0, 824, 824, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3029,
	0, 0, 0, 3029, 3029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 824, 1625, 824,
	824, 824, 824, 824, 0, 0, 0, 0, 0, 0,
	87, 0, 1864, 0, 0, 0, 726, 734, 735, 736,
	737, 738, 727, 729, 0, 0, 0, 728, 0, 0,
	1575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	731, 739, 740, 0, 0, 824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 1625,
	0, 553, 0, 553, 0, 553, 1900, 2607, 2608, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 3112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1340, 0, 3116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 839, 839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 3112, 0, 0, 726, 734, 735, 736,
	737, 738, 727, 729, 0, 0, 0, 728, 0, 0,
	0, 0, 553, 0, 0, 1864, 0, 0, 0, 553,
	731, 739, 740, 0, 0, 0, 553, 553, 0, 0,
	553, 0, 2056, 2687, 0, 3167, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2181, 0, 0, 734, 735, 0, 0, 2607, 2608, 1723,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 824, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 824, 824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 734, 735, 0, 1625, 0, 0, 1723, 553, 0,
	0, 0, 0, 0, 0, 0, 1575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 703, 0, 0, 707, 0, 704, 705, 0,
	0, 0, 706, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 2294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 553, 553, 553, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1341, 0, 1341, 0, 0, 1341, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1341, 0, 0, 0, 0, 1341,
	553, 553, 553, 553, 553, 0, 0, 0, 0, 0,
	0, 0, 2506, 0, 0, 0, 0, 553, 0, 0,
	1575, 0, 553, 0, 0, 553, 2517, 1625, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 0, 0, 553, 553, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1341, 0,
	1341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 364, 0, 0, 975, 960, 470, 0, 903, 978,
	872, 891, 988, 894, 897, 939, 851, 917, 382, 888,
	844, 876, 846, 883, 847, 874, 905, 253, 871, 962,
	921, 977, 337, 250, 853, 877, 396, 893, 197, 941,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 984, 341, 927, 0, 454, 367,
	1341, 0, 0, 907, 966, 915, 953, 902, 940, 861,
	926, 979, 889, 936, 980, 298, 234, 300, 196, 379,
	455, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	3139, 0, 3140, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 885, 933, 974, 886, 935, 248, 296, 255,
	247, 474, 985, 965, 850, 914, 973, 0, 1575, 216,
	976, 909, 0, 938, 0, 991, 845, 929, 0, 848,
	852, 987, 969, 880, 258, 0, 0, 0, 0, 0,
	0, 0, 906, 916, 950, 954, 900, 0, 0, 0,
	0, 0, 0, 0, 878, 0, 925, 0, 0, 0,
	857, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 904, 0, 0, 0, 0, 860,
	0, 879, 951, 0, 843, 279, 854, 368, 240, 0,
	958, 968, 901, 510, 972, 899, 898, 945, 858, 964,
	892, 336, 856, 305, 192, 212, 0, 890, 378, 421,
	431, 963, 875, 884, 238, 882, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 924, 943, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	525, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 488, 226, 441, 0,
	0, 527, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 528, 215,
	506, 207, 1181, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 529, 221, 222, 224, 870, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 959,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	522, 524, 523, 373, 289, 452, 306, 343, 948, 990,
	391, 430, 227, 495, 453, 865, 869, 863, 930, 864,
	919, 920, 866, 981, 982, 983, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 0, 952, 859, 0, 867, 868,
	0, 961, 970, 971, 548, 353, 443, 492, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 422, 423, 424, 425, 923,
	191, 208, 339, 986, 414, 271, 526, 504, 500, 198,
	210, 862, 245, 873, 881, 0, 887, 895, 896, 908,
	910, 911, 912, 913, 931, 932, 934, 942, 944, 947,
	949, 956, 967, 989, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 432, 433, 434, 435,
	436, 439, 440, 445, 446, 447, 448, 449, 457, 458,
	462, 480, 482, 494, 508, 513, 438, 281, 489, 514,
	0, 348, 922, 928, 350, 264, 284, 295, 937, 503,
	459, 214, 426, 273, 236, 955, 957, 202, 233, 217,
	242, 257, 260, 299, 359, 366, 395, 400, 278, 254,
	231, 419, 228, 442, 465, 466, 467, 469, 363, 249,
	399, 918, 946, 346, 471, 472, 291, 364, 0, 0,
	975, 960, 470, 0, 903, 978, 872, 891, 988, 894,
	897, 939, 851, 917, 382, 888, 844, 876, 846, 883,
	847, 874, 905, 253, 871, 962, 921, 977, 337, 250,
	853, 877, 396, 893, 197, 941, 444, 237, 347, 344,
	477, 265, 256, 252, 235, 292, 354, 394, 464, 388,
	984, 341, 927, 0, 454, 367, 0, 0, 0, 907,
	966, 915, 953, 902, 940, 861, 926, 979, 889, 936,
	980, 298, 234, 300, 196, 379, 455, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 885, 933,
	974, 886, 935, 248, 296, 255, 247, 474, 985, 965,
	850, 914, 973, 0, 0, 216, 976, 909, 0, 938,
	0, 991, 845, 929, 0, 848, 852, 987, 969, 880,
	258, 0, 0, 0, 0, 0, 0, 0, 906, 916,
	950, 954, 900, 0, 0, 0, 0, 0, 2518, 0,
	878, 0, 925, 0, 0, 0, 857, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	904, 0, 0, 0, 0, 860, 0, 879, 951, 0,
	843, 279, 854, 368, 240, 0, 958, 968, 901, 510,
	972, 899, 898, 945, 858, 964, 892, 336, 856, 305,
	192, 212, 0, 890, 378, 421, 431, 963, 875, 884,
	238, 882, 429, 392, 493, 220, 267, 418, 398, 427,
	405, 270, 924, 943, 428, 342, 479, 412, 490, 511,
	512, 246, 372, 501, 468, 507, 525, 213, 243, 386,
	461, 496, 451, 365, 475, 476, 304, 450, 277, 195,
	340, 517, 211, 437, 229, 218, 481, 499, 272, 416,
	203, 463, 488, 226, 441, 0, 0, 527, 205, 486,
	460, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 483, 484, 239, 528, 215, 506, 207, 1181, 505,
	374, 478, 487, 362, 352, 206, 485, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 199, 497, 0, 200, 0, 456, 498, 529, 221,
	222, 224, 870, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 959, 473, 491, 502, 509,
	515, 516, 518, 519, 520, 521, 522, 524, 523, 373,
	289, 452, 306, 343, 948, 990, 391, 430, 227, 495,
	453, 865, 869, 863, 930, 864, 919, 920, 866, 981,
	982, 983, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	0, 952, 859, 0, 867, 868, 0, 961, 970, 971,
	548, 353, 443, 492, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 422, 423, 424, 425, 923, 191, 208, 339, 986,
	414, 271, 526, 504, 500, 198, 210, 862, 245, 873,
	881, 0, 887, 895, 896, 908, 910, 911, 912, 913,
	931, 932, 934, 942, 944, 947, 949, 956, 967, 989,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 432, 433, 434, 435, 436, 439, 440, 445,
	446, 447, 448, 449, 457, 458, 462, 480, 482, 494,
	508, 513, 438, 281, 489, 514, 0, 348, 922, 928,
	350, 264, 284, 295, 937, 503, 459, 214, 426, 273,
	236, 955, 957, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 442,
	465, 466, 467, 469, 363, 249, 399, 918, 946, 346,
	471, 472, 291, 364, 0, 0, 975, 960, 470, 0,
	903, 978, 872, 891, 988, 894, 897, 939, 851, 917,
	382, 888, 844, 876, 846, 883, 847, 874, 905, 253,
	871, 962, 921, 977, 337, 250, 853, 877, 396, 893,
	197, 941, 444, 237, 347, 344, 477, 265, 256, 252,
	235, 292, 354, 394, 464, 388, 984, 341, 927, 0,
	454, 367, 0, 0, 0, 907, 966, 915, 953, 902,
	940, 861, 926, 979, 889, 936, 980, 298, 234, 300,
	196, 379, 455, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 885, 933, 974, 886, 935, 248,
	296, 255, 247, 474, 985, 965, 850, 914, 973, 0,
	0, 216, 976, 909, 0, 938, 0, 991, 845, 929,
	0, 848, 852, 987, 969, 880, 258, 0, 0, 0,
	0, 0, 0, 0, 906, 916, 950, 954, 900, 0,
	0, 0, 0, 0, 2476, 0, 878, 0, 925, 0,
	0, 0, 857, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 904, 0, 0, 0,
	0, 860, 0, 879, 951, 0, 843, 279, 854, 368,
	240, 0, 958, 968, 901, 510, 972, 899, 898, 945,
	858, 964, 892, 336, 856, 305, 192, 212, 0, 890,
	378, 421, 431, 963, 875, 884, 238, 882, 429, 392,
	493, 220, 267, 418, 398, 427, 405, 270, 924, 943,
	428, 342, 479, 412, 490, 511, 512, 246, 372, 501,
	468, 507, 525, 213, 243, 386, 461, 496, 451, 365,
	475, 476, 304, 450, 277, 195, 340, 517, 211, 437,
	229, 218, 481, 499, 272, 416, 203, 463, 488, 226,
	441, 0, 0, 527, 205, 486, 460, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 483, 484, 239,
	528, 215, 506, 207, 1181, 505, 374, 478, 487, 362,
	352, 206, 485, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 199, 497, 0,
	200, 0, 456, 498, 529, 221, 222, 224, 870, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 959, 473, 491, 502, 509, 515, 516, 518, 519,
	520, 521, 522, 524, 523, 373, 289, 452, 306, 343,
	948, 990, 391, 430, 227, 495, 453, 865, 869, 863,
	930, 864, 919, 920, 866, 981, 982, 983, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 0, 952, 859, 0,
	867, 868, 0, 961, 970, 971, 548, 353, 443, 492,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 422, 423, 424,
	425, 923, 191, 208, 339, 986, 414, 271, 526, 504,
	500, 198, 210, 862, 245, 873, 881, 0, 887, 895,
	896, 908, 910, 911, 912, 913, 931, 932, 934, 942,
	944, 947, 949, 956, 967, 989, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 432, 433,
	434, 435, 436, 439, 440, 445, 446, 447, 448, 449,
	457, 458, 462, 480, 482, 494, 508, 513, 438, 281,
	489, 514, 0, 348, 922, 928, 350, 264, 284, 295,
	937, 503, 459, 214, 426, 273, 236, 955, 957, 202,
	233, 217, 242, 257, 260, 299, 359, 366, 395, 400,
	278, 254, 231, 419, 228, 442, 465, 466, 467, 469,
	363, 249, 399, 918, 946, 346, 471, 472, 291, 364,
	0, 0, 975, 960, 470, 0, 903, 978, 872, 891,
	988, 894, 897, 939, 851, 917, 382, 888, 844, 876,
	846, 883, 847, 874, 905, 253, 871, 962, 921, 977,
	337, 250, 853, 877, 396, 893, 197, 941, 444, 237,
	347, 344, 477, 265, 256, 252, 235, 292, 354, 394,
	464, 388, 984, 341, 927, 0, 454, 367, 0, 0,
	0, 907, 966, 915, 953, 902, 940, 861, 926, 979,
	889, 936, 980, 298, 234, 300, 196, 379, 455, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	885, 933, 974, 886, 935, 248, 296, 255, 247, 474,
	985, 965, 850, 914, 973, 0, 0, 216, 976, 909,
	0, 938, 0, 991, 845, 929, 0, 848, 852, 987,
	969, 880, 258, 0, 0, 0, 0, 0, 0, 0,
	906, 916, 950, 954, 900, 0, 0, 0, 0, 0,
	1880, 0, 878, 0, 925, 0, 0, 0, 857, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 904, 0, 0, 0, 0, 860, 0, 879,
	951, 0, 843, 279, 854, 368, 240, 0, 958, 968,
	901, 510, 972, 899, 898, 945, 858, 964, 892, 336,
	856, 305, 192, 212, 0, 890, 378, 421, 431, 963,
	875, 884, 238, 882, 429, 392, 493, 220, 267, 418,
	398, 427, 405, 270, 924, 943, 428, 342, 479, 412,
	490, 511, 512, 246, 372, 501, 468, 507, 525, 213,
	243, 386, 461, 496, 451, 365, 475, 476, 304, 450,
	277, 195, 340, 517, 211, 437, 229, 218, 481, 499,
	272, 416, 203, 463, 488, 226, 441, 0, 0, 527,
	205, 486, 460, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 483, 484, 239, 528, 215, 506, 207,
	1181, 505, 374, 478, 487, 362, 352, 206, 485, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 199, 497, 0, 200, 0, 456, 498,
	529, 221, 222, 224, 870, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 959, 473, 491,
	502, 509, 515, 516, 518, 519, 520, 521, 522, 524,
	523, 373, 289, 452, 306, 343, 948, 990, 391, 430,
	227, 495, 453, 865, 869, 863, 930, 864, 919, 920,
	866, 981, 982, 983, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 0, 952, 859, 0, 867, 868, 0, 961,
	970, 971, 548, 353, 443, 492, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 422, 423, 424, 425, 923, 191, 208,
	339, 986, 414, 271, 526, 504, 500, 198, 210, 862,
	245, 873, 881, 0, 887, 895, 896, 908, 910, 911,
	912, 913, 931, 932, 934, 942, 944, 947, 949, 956,
	967, 989, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 432, 433, 434, 435, 436, 439,
	440, 445, 446, 447, 448, 449, 457, 458, 462, 480,
	482, 494, 508, 513, 438, 281, 489, 514, 0, 348,
	922, 928, 350, 264, 284, 295, 937, 503, 459, 214,
	426, 273, 236, 955, 957, 202, 233, 217, 242, 257,
	260, 299, 359, 366, 395, 400, 278, 254, 231, 419,
	228, 442, 465, 466, 467, 469, 363, 249, 399, 918,
	946, 346, 471, 472, 291, 364, 0, 0, 975, 960,
	470, 0, 903, 978, 872, 891, 988, 894, 897, 939,
	851, 917, 382, 888, 844, 876, 846, 883, 847, 874,
	905, 253, 871, 962, 921, 977, 337, 250, 853, 877,
	396, 893, 197, 941, 444, 237, 347, 344, 477, 265,
	256, 252, 235, 292, 354, 394, 464, 388, 984, 341,
	927, 0, 454, 367, 0, 0, 0, 907, 966, 915,
	953, 902, 940, 861, 926, 979, 889, 936, 980, 298,
	234, 300, 196, 379, 455, 269, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 885, 933, 974, 886,
	935, 248, 296, 255, 247, 474, 985, 965, 850, 914,
	973, 0, 0, 216, 976, 909, 0, 938, 0, 991,
	845, 929, 0, 848, 852, 987, 969, 880, 258, 0,
	0, 0, 0, 0, 0, 0, 906, 916, 950, 954,
	900, 0, 0, 0, 0, 0, 0, 0, 878, 0,
	925, 0, 0, 0, 857, 849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 904, 0,
	0, 0, 0, 860, 0, 879, 951, 0, 843, 279,
	854, 368, 240, 0, 958, 968, 901, 510, 972, 899,
	898, 945, 858, 964, 892, 336, 856, 305, 192, 212,
	0, 890, 378, 421, 431, 963, 875, 884, 238, 882,
	429, 392, 493, 220, 267, 418, 398, 427, 405, 270,
	924, 943, 428, 342, 479, 412, 490, 511, 512, 246,
	372, 501, 468, 507, 525, 213, 243, 386, 461, 496,
	451, 365, 475, 476, 304, 450, 277, 195, 340, 517,
	211, 437, 229, 218, 481, 499, 272, 416, 203, 463,
	488, 226, 441, 0, 0, 527, 205, 486, 460, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 483,
	484, 239, 528, 215, 506, 207, 1181, 505, 374, 478,
	487, 362, 352, 206, 485, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 199,
	497, 0, 200, 0, 456, 498, 529, 221, 222, 224,
	870, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 959, 473, 491, 502, 509, 515, 516,
	518, 519, 520, 521, 522, 524, 523, 373, 289, 452,
	306, 343, 948, 990, 391, 430, 227, 495, 453, 865,
	869, 863, 930, 864, 919, 920, 866, 981, 982, 983,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 0, 952,
	859, 0, 867, 868, 0, 961, 970, 971, 548, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 923, 191, 208, 339, 986, 414, 271,
	526, 504, 500, 198, 210, 862, 245, 873, 881, 0,
	887, 895, 896, 908, 910, 911, 912, 913, 931, 932,
	934, 942, 944, 947, 949, 956, 967, 989, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 922, 928, 350, 264,
	284, 295, 937, 503, 459, 214, 426, 273, 236, 955,
	957, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 918, 946, 346, 471, 472,
	291, 364, 0, 0, 975, 960, 470, 0, 903, 978,
	872, 891, 988, 894, 897, 939, 851, 917, 382, 888,
	844, 876, 846, 883, 847, 874, 905, 253, 871, 962,
	921, 977, 337, 250, 853, 877, 396, 893, 197, 941,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 984, 341, 927, 0, 454, 367,
	0, 0, 0, 907, 966, 915, 953, 902, 940, 861,
	926, 979, 889, 936, 980, 298, 234, 300, 196, 379,
	455, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 885, 933, 974, 886, 935, 248, 296, 255,
	247, 474, 985, 965, 850, 914, 973, 0, 0, 216,
	976, 909, 0, 938, 0, 991, 845, 929, 0, 848,
	852, 987, 969, 880, 258, 0, 0, 0, 0, 0,
	0, 0, 906, 916, 950, 954, 900, 0, 0, 0,
	0, 0, 0, 0, 878, 0, 925, 0, 0, 0,
	857, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 904, 0, 0, 0, 0, 860,
	0, 879, 951, 0, 843, 279, 854, 368, 240, 0,
	958, 968, 901, 510, 972, 899, 898, 945, 858, 964,
	892, 336, 856, 305, 192, 212, 0, 890, 378, 421,
	431, 963, 875, 884, 238, 882, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 924, 943, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	525, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 488, 226, 441, 0,
	0, 527, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 528, 215,
	506, 207, 1181, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 529, 221, 222, 224, 870, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 959,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	522, 524, 523, 373, 289, 452, 306, 343, 948, 990,
	391, 430, 227, 495, 453, 865, 869, 863, 930, 864,
	919, 920, 866, 981, 982, 983, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 0, 952, 859, 0, 867, 868,
	0, 961, 970, 971, 548, 353, 443, 492, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 422, 423, 424, 425, 923,
	191, 208, 339, 986, 414, 271, 526, 504, 500, 198,
	210, 862, 245, 873, 881, 0, 887, 895, 896, 908,
	910, 911, 912, 913, 931, 932, 934, 942, 944, 947,
	949, 956, 967, 989, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 432, 433, 434, 435,
	436, 439, 440, 445, 446, 447, 448, 449, 457, 458,
	462, 480, 482, 494, 508, 513, 438, 281, 489, 514,
	0, 348, 922, 928, 350, 264, 284, 295, 937, 503,
	459, 214, 426, 273, 236, 955, 957, 202, 233, 217,
	242, 257, 260, 299, 359, 366, 395, 400, 278, 254,
	231, 419, 228, 442, 465, 466, 467, 469, 363, 249,
	399, 918, 946, 346, 471, 472, 291, 364, 0, 0,
	975, 960, 470, 0, 903, 978, 872, 891, 988, 894,
	897, 939, 851, 917, 382, 888, 844, 876, 846, 883,
	847, 874, 905, 253, 871, 962, 921, 977, 337, 250,
	853, 877, 396, 893, 197, 941, 444, 237, 347, 344,
	477, 265, 256, 252, 235, 292, 354, 394, 464, 388,
	984, 341, 927, 0, 454, 367, 0, 0, 0, 907,
	966, 915, 953, 902, 940, 861, 926, 979, 889, 936,
	980, 298, 234, 300, 196, 379, 455, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 885, 933,
	974, 886, 935, 248, 296, 255, 247, 474, 985, 965,
	850, 914, 973, 0, 0, 992, 976, 909, 0, 938,
	0, 991, 845, 929, 0, 848, 852, 987, 969, 880,
	258, 0, 0, 0, 0, 0, 0, 0, 906, 916,
	950, 954, 900, 0, 0, 0, 0, 0, 0, 0,
	878, 0, 925, 0, 0, 0, 857, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	904, 0, 0, 0, 0, 860, 0, 879, 951, 0,
	843, 279, 854, 368, 240, 0, 958, 968, 901, 510,
	972, 899, 898, 945, 858, 964, 892, 336, 856, 305,
	192, 212, 0, 890, 378, 421, 431, 963, 875, 884,
	238, 882, 429, 392, 493, 220, 267, 418, 398, 427,
	405, 270, 924, 943, 428, 342, 479, 412, 490, 511,
	512, 246, 372, 501, 468, 507, 525, 213, 243, 386,
	461, 496, 451, 365, 475, 476, 304, 450, 277, 195,
	340, 517, 211, 437, 229, 218, 481, 499, 272, 416,
	203, 463, 488, 226, 441, 0, 0, 527, 205, 486,
	460, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 483, 484, 239, 528, 215, 506, 207, 855, 505,
	374, 478, 487, 362, 352, 206, 485, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 199, 497, 0, 200, 0, 456, 498, 529, 221,
	222, 224, 870, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 959, 473, 491, 502, 509,
	515, 516, 518, 519, 520, 521, 522, 524, 523, 842,
	836, 835, 306, 343, 948, 990, 391, 430, 227, 495,
	453, 865, 869, 863, 930, 864, 919, 920, 866, 981,
	982, 983, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	0, 952, 859, 0, 867, 868, 0, 961, 970, 971,
	548, 353, 443, 492, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 422, 423, 424, 425, 923, 191, 208, 339, 986,
	414, 271, 526, 504, 500, 198, 210, 862, 245, 873,
	881, 0, 887, 895, 896, 908, 910, 911, 912, 913,
	931, 932, 934, 942, 944, 947, 949, 956, 967, 989,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 432, 433, 434, 435, 436, 439, 440, 445,
	446, 447, 448, 449, 457, 458, 462, 480, 482, 494,
	508, 513, 438, 281, 489, 514, 0, 348, 922, 928,
	350, 264, 284, 295, 937, 503, 459, 214, 426, 273,
	236, 955, 957, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 442,
	465, 466, 467, 469, 363, 249, 399, 918, 946, 346,
	471, 472, 291, 364, 0, 0, 975, 960, 470, 0,
	903, 978, 872, 891, 988, 894, 897, 939, 851, 917,
	382, 888, 844, 876, 846, 883, 847, 874, 905, 253,
	871, 962, 921, 977, 337, 250, 853, 877, 396, 893,
	197, 941, 444, 237, 347, 344, 477, 265, 256, 252,
	235, 292, 354, 394, 464, 388, 984, 341, 927, 0,
	454, 367, 0, 0, 0, 907, 966, 915, 953, 902,
	940, 861, 926, 979, 889, 936, 980, 298, 234, 300,
	196, 379, 455, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 885, 933, 974, 886, 935, 248,
	296, 255, 247, 474, 985, 965, 850, 914, 973, 0,
	0, 992, 976, 909, 0, 938, 0, 991, 845, 929,
	0, 848, 852, 987, 969, 880, 258, 0, 0, 0,
	0, 0, 0, 0, 906, 916, 950, 954, 900, 0,
	0, 0, 0, 0, 0, 0, 878, 0, 925, 0,
	0, 0, 857, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 904, 0, 0, 0,
	0, 860, 0, 879, 951, 0, 843, 279, 854, 368,
	240, 0, 958, 968, 901, 510, 972, 899, 898, 945,
	858, 964, 892, 336, 856, 305, 192, 212, 0, 890,
	378, 421, 431, 963, 875, 884, 238, 882, 429, 392,
	493, 220, 267, 418, 398, 427, 405, 270, 924, 943,
	428, 342, 479, 412, 490, 511, 512, 246, 372, 501,
	468, 507, 525, 213, 243, 386, 461, 496, 451, 365,
	475, 476, 304, 450, 277, 195, 340, 517, 211, 437,
	229, 218, 481, 499, 272, 416, 203, 463, 1408, 226,
	441, 0, 0, 527, 205, 486, 460, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 483, 484, 239,
	528, 215, 506, 207, 855, 505, 374, 478, 487, 362,
	352, 206, 485, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 199, 497, 0,
	200, 0, 456, 498, 529, 221, 222, 224, 870, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 959, 473, 491, 502, 509, 515, 516, 518, 519,
	520, 521, 522, 524, 523, 842, 836, 835, 306, 343,
	948, 990, 391, 430, 227, 495, 453, 865, 869, 863,
	930, 864, 919, 920, 866, 981, 982, 983, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 0, 952, 859, 0,
	867, 868, 0, 961, 970, 971, 548, 353, 443, 492,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 422, 423, 424,
	425, 923, 191, 208, 339, 986, 414, 271, 526, 504,
	500, 198, 210, 862, 245, 873, 881, 0, 887, 895,
	896, 908, 910, 911, 912, 913, 931, 932, 934, 942,
	944, 947, 949, 956, 967, 989, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 432, 433,
	434, 435, 436, 439, 440, 445, 446, 447, 448, 449,
	457, 458, 462, 480, 482, 494, 508, 513, 438, 281,
	489, 514, 0, 348, 922, 928, 350, 264, 284, 295,
	937, 503, 459, 214, 426, 273, 236, 955, 957, 202,
	233, 217, 242, 257, 260, 299, 359, 366, 395, 400,
	278, 254, 231, 419, 228, 442, 465, 466, 467, 469,
	363, 249, 399, 918, 946, 346, 471, 472, 291, 364,
	0, 0, 975, 960, 470, 0, 903, 978, 872, 891,
	988, 894, 897, 939, 851, 917, 382, 888, 844, 876,
	846, 883, 847, 874, 905, 253, 871, 962, 921, 977,
	337, 250, 853, 877, 396, 893, 197, 941, 444, 237,
	347, 344, 477, 265, 256, 252, 235, 292, 354, 394,
	464, 388, 984, 341, 927, 0, 454, 367, 0, 0,
	0, 907, 966, 915, 953, 902, 940, 861, 926, 979,
	889, 936, 980, 298, 234, 300, 196, 379, 455, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	885, 933, 974, 886, 935, 248, 296, 255, 247, 474,
	985, 965, 850, 914, 973, 0, 0, 992, 976, 909,
	0, 938, 0, 991, 845, 929, 0, 848, 852, 987,
	969, 880, 258, 0, 0, 0, 0, 0, 0, 0,
	906, 916, 950, 954, 900, 0, 0, 0, 0, 0,
	0, 0, 878, 0, 925, 0, 0, 0, 857, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 904, 0, 0, 0, 0, 860, 0, 879,
	951, 0, 843, 279, 854, 368, 240, 0, 958, 968,
	901, 510, 972, 899, 898, 945, 858, 964, 892, 336,
	856, 305, 192, 212, 0, 890, 378, 421, 431, 963,
	875, 884, 238, 882, 429, 392, 493, 220, 267, 418,
	398, 427, 405, 270, 924, 943, 428, 342, 479, 412,
	490, 511, 512, 246, 372, 501, 468, 507, 525, 213,
	243, 386, 461, 496, 451, 365, 475, 476, 304, 450,
	277, 195, 340, 517, 211, 437, 229, 218, 481, 499,
	272, 416, 203, 463, 833, 226, 441, 0, 0, 527,
	205, 486, 460, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 483, 484, 239, 528, 215, 506, 207,
	855, 505, 374, 478, 487, 362, 352, 206, 485, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 199, 497, 0, 200, 0, 456, 498,
	529, 221, 222, 224, 870, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 959, 473, 491,
	502, 509, 515, 516, 518, 519, 520, 521, 522, 524,
	523, 842, 836, 835, 306, 343, 948, 990, 391, 430,
	227, 495, 453, 865, 869, 863, 930, 864, 919, 920,
	866, 981, 982, 983, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 0, 952, 859, 0, 867, 868, 0, 961,
	970, 971, 548, 353, 443, 492, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 422, 423, 424, 425, 923, 191, 208,
	339, 986, 414, 271, 526, 504, 500, 198, 210, 862,
	245, 873, 881, 0, 887, 895, 896, 908, 910, 911,
	912, 913, 931, 932, 934, 942, 944, 947, 949, 956,
	967, 989, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 432, 433, 434, 435, 436, 439,
	440, 445, 446, 447, 448, 449, 457, 458, 462, 480,
	482, 494, 508, 513, 438, 281, 489, 514, 0, 348,
	922, 928, 350, 264, 284, 295, 937, 503, 459, 214,
	426, 273, 236, 955, 957, 202, 233, 217, 242, 257,
	260, 299, 359, 366, 395, 400, 278, 254, 231, 419,
	228, 442, 465, 466, 467, 469, 363, 249, 399, 918,
	946, 346, 471, 472, 291, 364, 0, 0, 0, 0,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 1818, 0, 630, 0, 0,
	0, 253, 635, 0, 0, 0, 337, 250, 0, 1819,
	396, 0, 197, 0, 444, 237, 347, 344, 477, 265,
	256, 252, 235, 292, 354, 394, 464, 388, 642, 341,
	0, 0, 454, 367, 0, 0, 0, 0, 0, 637,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 455, 269, 0, 87, 0, 0,
	188, 189, 190, 726, 734, 735, 736, 737, 738, 727,
	729, 0, 0, 225, 728, 232, 653, 655, 654, 664,
	665, 666, 667, 668, 669, 670, 651, 731, 739, 740,
	0, 248, 296, 255, 247, 474, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 613, 627, 0, 641, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 624, 625, 822, 0, 0, 0,
	696, 0, 626, 0, 0, 634, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 695, 0, 0, 510, 0, 0,
	693, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 431, 0, 0, 0, 238, 0,
	429, 392, 493, 220, 267, 418, 398, 427, 405, 270,
	0, 0, 428, 342, 479, 412, 490, 511, 512, 246,
	372, 501, 468, 507, 525, 213, 243, 386, 461, 496,
	451, 365, 475, 476, 304, 450, 277, 195, 340, 517,
	211, 437, 229, 218, 481, 499, 272, 416, 203, 463,
	488, 226, 441, 0, 0, 527, 205, 486, 460, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 483,
	484, 239, 528, 215, 506, 207, 0, 505, 374, 478,
	487, 362, 352, 206, 485, 360, 351, 307, 659, 660,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 199,
	497, 0, 200, 0, 456, 498, 529, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 473, 491, 502, 509, 515, 516,
	518, 519, 520, 521, 522, 524, 523, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 703,
	694, 646, 707, 648, 704, 705, 643, 644, 647, 706,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 0, 697,
	633, 632, 0, 639, 640, 0, 649, 650, 652, 656,
	657, 658, 661, 662, 663, 671, 673, 674, 672, 675,
	676, 677, 680, 681, 682, 683, 678, 679, 684, 717,
	718, 719, 720, 631, 191, 208, 339, 0, 414, 271,
	526, 504, 500, 198, 210, 708, 245, 709, 0, 0,
	713, 0, 0, 0, 715, 714, 0, 716, 688, 687,
	0, 0, 710, 711, 0, 712, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 733,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 630, 0,
	0, 0, 253, 635, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 642,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	0, 188, 189, 190, 726, 734, 735, 736, 737, 738,
	727, 729, 0, 0, 225, 728, 232, 653, 655, 654,
	664, 665, 666, 667, 668, 669, 670, 651, 731, 739,
	740, 0, 248, 296, 255, 247, 474, 0, 0, 1777,
	1778, 1779, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 613, 627, 0, 641, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 624, 625, 0, 0, 0,
	0, 696, 0, 626, 0, 0, 634, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 695, 0, 0, 510, 0,
	0, 693, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 525, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 527, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 528, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 659,
	660, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 529, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 522, 524, 523, 373, 289,
	452, 306, 343, 0, 0, 391, 430, 227, 495, 453,
	703, 694, 646, 707, 648, 704, 705, 643, 644, 647,
	706, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 0,
	697, 633, 632, 0, 639, 640, 0, 649, 650, 652,
	656, 657, 658, 661, 662, 663, 671, 673, 674, 672,
	675, 676, 677, 680, 681, 682, 683, 678, 679, 684,
	717, 718, 719, 720, 631, 191, 208, 339, 0, 414,
	271, 526, 504, 500, 198, 210, 708, 245, 709, 0,
	0, 713, 0, 0, 0, 715, 714, 0, 716, 688,
	687, 0, 0, 710, 711, 0, 712, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 432, 433, 434, 435, 436, 439, 440, 445, 446,
	447, 448, 449, 457, 458, 462, 480, 482, 494, 508,
	513, 438, 281, 489, 514, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 503, 459, 214, 426, 273, 236,
	733, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 442, 465,
	466, 467, 469, 363, 249, 399, 0, 364, 346, 471,
	472, 291, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 630,
	0, 0, 0, 253, 635, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 444, 237, 347, 344,
	477, 265, 256, 252, 235, 292, 354, 394, 464, 388,
	642, 341, 0, 0, 454, 367, 0, 0, 0, 0,
	0, 637, 638, 0, 0, 0, 0, 0, 0, 1907,
	0, 298, 234, 300, 196, 379, 455, 269, 0, 87,
	0, 0, 188, 189, 190, 726, 734, 735, 736, 737,
	738, 727, 729, 0, 0, 225, 728, 232, 653, 655,
	654, 664, 665, 666, 667, 668, 669, 670, 651, 731,
	739, 740, 1908, 248, 296, 255, 247, 474, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 613, 627, 0, 641, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 624, 625, 0, 0,
	0, 0, 696, 0, 626, 0, 0, 634, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 695, 0, 0, 510,
	0, 0, 693, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 431, 0, 0, 0,
	238, 0, 429, 392, 493, 220, 267, 418, 398, 427,
	405, 270, 0, 0, 428, 342, 479, 412, 490, 511,
	512, 246, 372, 501, 468, 507, 525, 213, 243, 386,
	461, 496, 451, 365, 475, 476, 304, 450, 277, 195,
	340, 517, 211, 437, 229, 218, 481, 499, 272, 416,
	203, 463, 488, 226, 441, 0, 0, 527, 205, 486,
	460, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 483, 484, 239, 528, 215, 506, 207, 0, 505,
	374, 478, 487, 362, 352, 206, 485, 360, 351, 307,
	659, 660, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 199, 497, 0, 200, 0, 456, 498, 529, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 473, 491, 502, 509,
	515, 516, 518, 519, 520, 521, 522, 524, 523, 373,
	289, 452, 306, 343, 0, 0, 391, 430, 227, 495,
	453, 703, 694, 646, 707, 648, 704, 705, 643, 644,
	647, 706, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	0, 697, 633, 632, 0, 639, 640, 0, 649, 650,
	652, 656, 657, 658, 661, 662, 663, 671, 673, 674,
	672, 675, 676, 677, 680, 681, 682, 683, 678, 679,
	684, 717, 718, 719, 720, 631, 191, 208, 339, 0,
	414, 271, 526, 504, 500, 198, 210, 708, 245, 709,
	0, 0, 713, 0, 0, 0, 715, 714, 0, 716,
	688, 687, 0, 0, 710, 711, 0, 712, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 432, 433, 434, 435, 436, 439, 440, 445,
	446, 447, 448, 449, 457, 458, 462, 480, 482, 494,
	508, 513, 438, 281, 489, 514, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 503, 459, 214, 426, 273,
	236, 733, 0, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 442,
	465, 466, 467, 469, 363, 249, 399, 0, 0, 346,
	471, 472, 291, 364, 0, 0, 0, 78, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 630, 0, 0, 0, 253,
	635, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 444, 237, 347, 344, 477, 265, 256, 252,
	235, 292, 354, 394, 464, 388, 642, 341, 0, 0,
	454, 367, 0, 0, 0, 0, 0, 637, 638, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 455, 269, 0, 87, 0, 0, 188, 189,
	190, 726, 734, 735, 736, 737, 738, 727, 729, 0,
	0, 225, 728, 232, 653, 655, 654, 664, 665, 666,
	667, 668, 669, 670, 651, 731, 739, 740, 0, 248,
	296, 255, 247, 474, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 613,
	627, 0, 641, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 624, 625, 0, 0, 0, 0, 696, 0,
	626, 0, 0, 634, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 695, 0, 0, 510, 0, 0, 693, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 431, 0, 0, 0, 238, 0, 429, 392,
	493, 220, 267, 418, 398, 427, 405, 270, 0, 0,
	428, 342, 479, 412, 490, 511, 512, 246, 372, 501,
	468, 507, 525, 213, 243, 386, 461, 496, 451, 365,
	475, 476, 304, 450, 277, 195, 340, 517, 211, 437,
	229, 218, 481, 499, 272, 416, 203, 463, 488, 226,
	441, 0, 0, 527, 205, 486, 460, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 483, 484, 239,
	528, 215, 506, 207, 0, 505, 374, 478, 487, 362,
	352, 206, 485, 360, 351, 307, 659, 660, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 199, 497, 0,
	200, 0, 456, 498, 529, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 473, 491, 502, 509, 515, 516, 518, 519,
	520, 521, 522, 524, 523, 373, 289, 452, 306, 343,
	0, 0, 391, 430, 227, 495, 453, 703, 694, 646,
	707, 648, 704, 705, 643, 644, 647, 706, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 0, 697, 633, 632,
	0, 639, 640, 0, 649, 650, 652, 656, 657, 658,
	661, 662, 663, 671, 673, 674, 672, 675, 676, 677,
	680, 681, 682, 683, 678, 679, 684, 717, 718, 719,
	720, 631, 191, 208, 339, 86, 414, 271, 526, 504,
	500, 198, 210, 708, 245, 709, 0, 0, 713, 0,
	0, 0, 715, 714, 0, 716, 688, 687, 0, 0,
	710, 711, 0, 712, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 432, 433,
	434, 435, 436, 439, 440, 445, 446, 447, 448, 449,
	457, 458, 462, 480, 482, 494, 508, 513, 438, 281,
	489, 514, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 503, 459, 214, 426, 273, 236, 733, 0, 202,
	233, 217, 242, 257, 260, 299, 359, 366, 395, 400,
	278, 254, 231, 419, 228, 442, 465, 466, 467, 469,
	363, 249, 399, 0, 364, 346, 471, 472, 291, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 0, 0, 0, 0, 630, 0, 0, 0,
	253, 635, 0, 0, 0, 337, 250, 0, 0, 396,
	0, 197, 0, 444, 237, 347, 344, 477, 265, 256,
	252, 235, 292, 354, 394, 464, 388, 642, 341, 0,
	0, 454, 367, 0, 0, 0, 0, 0, 637, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 379, 455, 269, 0, 87, 0, 0, 188,
	189, 190, 726, 734, 735, 736, 737, 738, 727, 729,
	0, 0, 225, 728, 232, 653, 655, 654, 664, 665,
	666, 667, 668, 669, 670, 651, 731, 739, 740, 0,
	248, 296, 255, 247, 474, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	613, 627, 0, 641, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 624, 625, 0, 0, 0, 0, 696,
	0, 626, 0, 0, 634, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 695, 0, 0, 510, 0, 0, 693,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 431, 0, 0, 0, 238, 0, 429,
	392, 493, 220, 267, 418, 398, 427, 405, 270, 3126,
	0, 428, 342, 479, 412, 490, 511, 512, 246, 372,
	501, 468, 507, 525, 213, 243, 386, 461, 496, 451,
	365, 475, 476, 304, 450, 277, 195, 340, 517, 211,
	437, 229, 218, 481, 499, 272, 416, 203, 463, 488,
	226, 441, 0, 0, 527, 205, 486, 460, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 483, 484,
	239, 528, 215, 506, 207, 0, 505, 374, 478, 487,
	362, 352, 206, 485, 360, 351, 307, 659, 660, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 497,
	0, 200, 0, 456, 498, 529, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 473, 491, 502, 509, 515, 516, 518,
	519, 520, 521, 522, 524, 523, 373, 289, 452, 306,
	343, 0, 0, 391, 430, 227, 495, 453, 703, 694,
	646, 707, 648, 704, 705, 643, 644, 647, 706, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 0, 697, 633,
	632, 0, 639, 640, 0, 649, 650, 652, 656, 657,
	658, 661, 662, 663, 671, 673, 674, 672, 675, 676,
	677, 680, 681, 682, 683, 678, 679, 684, 717, 718,
	719, 720, 631, 191, 208, 339, 0, 414, 271, 526,
	504, 500, 198, 210, 708, 245, 709, 0, 0, 713,
	0, 0, 0, 715, 714, 0, 716, 688, 687, 0,
	0, 710, 711, 0, 712, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 432,
	433, 434, 435, 436, 439, 440, 445, 446, 447, 448,
	449, 457, 458, 462, 480, 482, 494, 508, 513, 438,
	281, 489, 514, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 503, 459, 214, 426, 273, 236, 733, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 442, 465, 466, 467,
	469, 363, 249, 399, 0, 364, 346, 471, 472, 291,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 630, 0, 0,
	0, 253, 635, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 444, 237, 347, 344, 477, 265,
	256, 252, 235, 292, 354, 394, 464, 388, 642, 341,
	0, 0, 454, 367, 0, 0, 0, 0, 0, 637,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 455, 269, 0, 87, 0, 1375,
	188, 189, 190, 726, 734, 735, 736, 737, 738, 727,
	729, 0, 0, 225, 728, 232, 653, 655, 654, 664,
	665, 666, 667, 668, 669, 670, 651, 731, 739, 740,
	0, 248, 296, 255, 247, 474, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 613, 627, 0, 641, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 624, 625, 0, 0, 0, 0,
	696, 0, 626, 0, 0, 634, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 695, 0, 0, 510, 0, 0,
	693, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 431, 0, 0, 0, 238, 0,
	429, 392, 493, 220, 267, 418, 398, 427, 405, 270,
	0, 0, 428, 342, 479, 412, 490, 511, 512, 246,
	372, 501, 468, 507, 525, 213, 243, 386, 461, 496,
	451, 365, 475, 476, 304, 450, 277, 195, 340, 517,
	211, 437, 229, 218, 481, 499, 272, 416, 203, 463,
	488, 226, 441, 0, 0, 527, 205, 486, 460, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 483,
	484, 239, 528, 215, 506, 207, 0, 505, 374, 478,
	487, 362, 352, 206, 485, 360, 351, 307, 659, 660,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 199,
	497, 0, 200, 0, 456, 498, 529, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 473, 491, 502, 509, 515, 516,
	518, 519, 520, 521, 522, 524, 523, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 703,
	694, 646, 707, 648, 704, 705, 643, 644, 647, 706,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 0, 697,
	633, 632, 0, 639, 640, 0, 649, 650, 652, 656,
	657, 658, 661, 662, 663, 671, 673, 674, 672, 675,
	676, 677, 680, 681, 682, 683, 678, 679, 684, 717,
	718, 719, 720, 631, 191, 208, 339, 0, 414, 271,
	526, 504, 500, 198, 210, 708, 245, 709, 0, 0,
	713, 0, 0, 0, 715, 714, 0, 716, 688, 687,
	0, 0, 710, 711, 0, 712, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 733,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 630, 0,
	0, 0, 253, 635, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 642,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	637, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	0, 188, 189, 190, 726, 734, 735, 736, 737, 738,
	727, 729, 0, 0, 225, 728, 232, 653, 655, 654,
	664, 665, 666, 667, 668, 669, 670, 651, 731, 739,
	740, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 613, 627, 0, 641, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 624, 625, 822, 0, 0,
	0, 696, 0, 626, 0, 0, 634, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 695, 0, 0, 510, 0,
	0, 693, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 525, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 527, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 528, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 659,
	660, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 529, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 522, 524, 523, 373, 289,
	452, 306, 343, 0, 0, 391, 430, 227, 495, 453,
	703, 694, 646, 707, 648, 704, 705, 643, 644, 647,
	706, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 0,
	697, 633, 632, 0, 639, 640, 0, 649, 650, 652,
	656, 657, 658, 661, 662, 663, 671, 673, 674, 672,
	675, 676, 677, 680, 681, 682, 683, 678, 679, 684,
	717, 718, 719, 720, 631, 191, 208, 339, 0, 414,
	271, 526, 504, 500, 198, 210, 708, 245, 709, 0,
	0, 713, 0, 0, 0, 715, 714, 0, 716, 688,
	687, 0, 0, 710, 711, 0, 712, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 432, 433, 434, 435, 436, 439, 440, 445, 446,
	447, 448, 449, 457, 458, 462, 480, 482, 494, 508,
	513, 438, 281, 489, 514, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 503, 459, 214, 426, 273, 236,
	733, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 442, 465,
	466, 467, 469, 363, 249, 399, 0, 364, 346, 471,
	472, 291, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 630,
	0, 0, 0, 253, 635, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 444, 237, 347, 344,
	477, 265, 256, 252, 235, 292, 354, 394, 464, 388,
	642, 341, 0, 0, 454, 367, 0, 0, 0, 0,
	0, 637, 638, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 455, 269, 0, 87,
	0, 0, 188, 189, 190, 726, 734, 735, 736, 737,
	738, 727, 729, 0, 0, 225, 728, 232, 653, 655,
	654, 664, 665, 666, 667, 668, 669, 670, 651, 731,
	739, 740, 0, 248, 296, 255, 247, 474, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 613, 627, 0, 641, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 624, 625, 0, 0,
	0, 0, 696, 0, 626, 0, 0, 634, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 695, 0, 0, 510,
	0, 0, 693, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 431, 0, 0, 0,
	238, 0, 429, 392, 493, 220, 267, 418, 398, 427,
	405, 270, 0, 0, 428, 342, 479, 412, 490, 511,
	512, 246, 372, 501, 468, 507, 525, 213, 243, 386,
	461, 496, 451, 365, 475, 476, 304, 450, 277, 195,
	340, 517, 211, 437, 229, 218, 481, 499, 272, 416,
	203, 463, 488, 226, 441, 0, 0, 527, 205, 486,
	460, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 483, 484, 239, 528, 215, 506, 207, 0, 505,
	374, 478, 487, 362, 352, 206, 485, 360, 351, 307,
	659, 660, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 199, 497, 0, 200, 0, 456, 498, 529, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 473, 491, 502, 509,
	515, 516, 518, 519, 520, 521, 522, 524, 523, 373,
	289, 452, 306, 343, 0, 0, 391, 430, 227, 495,
	453, 703, 694, 646, 707, 648, 704, 705, 643, 644,
	647, 706, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	0, 697, 633, 632, 0, 639, 640, 0, 649, 650,
	652, 656, 657, 658, 661, 662, 663, 671, 673, 674,
	672, 675, 676, 677, 680, 681, 682, 683, 678, 679,
	684, 717, 718, 719, 720, 631, 191, 208, 339, 0,
	414, 271, 526, 504, 500, 198, 210, 708, 245, 709,
	0, 0, 713, 0, 0, 0, 715, 714, 0, 716,
	688, 687, 0, 0, 710, 711, 0, 712, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 432, 433, 434, 435, 436, 439, 440, 445,
	446, 447, 448, 449, 457, 458, 462, 480, 482, 494,
	508, 513, 438, 281, 489, 514, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 503, 459, 214, 426, 273,
	236, 733, 0, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 442,
	465, 466, 467, 469, 363, 249, 399, 0, 364, 346,
	471, 472, 291, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 0, 0, 0,
	630, 0, 0, 0, 253, 635, 0, 0, 0, 337,
	250, 0, 0, 396, 0, 197, 0, 444, 237, 347,
	344, 477, 265, 256, 252, 235, 292, 354, 394, 464,
	388, 642, 341, 0, 0, 454, 367, 0, 0, 0,
	0, 0, 637, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 379, 455, 269, 0,
	87, 0, 0, 188, 189, 190, 726, 734, 735, 736,
	737, 738, 727, 729, 0, 0, 225, 728, 232, 653,
	655, 654, 664, 665, 666, 667, 668, 669, 670, 651,
	731, 739, 740, 0, 248, 296, 255, 247, 474, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 627, 0, 641, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 624, 625, 0,
	0, 0, 0, 696, 0, 626, 0, 0, 634, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 695, 0, 0,
	510, 0, 0, 693, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 431, 0, 0,
	0, 238, 0, 429, 392, 493, 220, 267, 418, 398,
	427, 405, 270, 0, 0, 428, 342, 479, 412, 490,
	511, 512, 246, 372, 501, 468, 507, 525, 213, 243,
	386, 461, 496, 451, 365, 475, 476, 304, 450, 277,
	195, 340, 517, 211, 437, 229, 218, 481, 499, 272,
	416, 203, 463, 488, 226, 441, 0, 0, 527, 205,
	486, 460, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 483, 484, 239, 528, 215, 506, 207, 0,
	505, 374, 478, 487, 362, 352, 206, 485, 360, 351,
	307, 659, 660, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 497, 0, 200, 0, 456, 498, 529,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 473, 491, 502,
	509, 515, 516, 518, 519, 520, 521, 522, 524, 523,
	373, 289, 452, 306, 343, 0, 0, 391, 430, 227,
	495, 453, 703, 694, 646, 707, 648, 704, 705, 643,
	644, 647, 706, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 0, 697, 633, 632, 0, 639, 640, 0, 649,
	650, 652, 656, 657, 658, 661, 662, 663, 671, 673,
	674, 672, 675, 676, 677, 680, 681, 682, 683, 678,
	679, 684, 717, 718, 719, 720, 631, 191, 208, 339,
	0, 414, 271, 526, 504, 500, 198, 210, 708, 245,
	709, 0, 0, 713, 0, 0, 0, 715, 714, 0,
	716, 688, 687, 0, 0, 710, 711, 0, 712, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 432, 433, 434, 435, 436, 439, 440,
	445, 446, 447, 448, 449, 457, 458, 462, 480, 482,
	494, 508, 513, 438, 281, 489, 514, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 503, 459, 214, 426,
	273, 236, 733, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	442, 465, 466, 467, 469, 363, 249, 399, 0, 364,
	346, 471, 472, 291, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 444, 237,
	347, 344, 477, 265, 256, 252, 235, 292, 354, 394,
	464, 388, 0, 341, 0, 0, 454, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 455, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 734, 735,
	0, 0, 0, 0, 1723, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 474,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 0,
	0, 510, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 431, 0,
	0, 0, 238, 0, 429, 392, 493, 220, 267, 418,
	398, 427, 405, 270, 0, 0, 428, 342, 479, 412,
	490, 511, 512, 246, 372, 501, 468, 507, 525, 213,
	243, 386, 461, 496, 451, 365, 475, 476, 304, 450,
	277, 195, 340, 517, 211, 437, 229, 218, 481, 499,
	272, 416, 203, 463, 488, 226, 441, 0, 0, 527,
	205, 486, 460, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 483, 484, 239, 528, 215, 506, 207,
	0, 505, 374, 478, 487, 362, 352, 206, 485, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 199, 497, 0, 200, 0, 456, 498,
	529, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 473, 491,
	502, 509, 515, 516, 518, 519, 520, 521, 522, 524,
	523, 373, 289, 452, 306, 343, 0, 0, 391, 430,
	227, 495, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 548, 353, 443, 492, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 422, 423, 424, 425, 0, 191, 208,
	339, 0, 414, 271, 526, 504, 500, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 432, 433, 434, 435, 436, 439,
	440, 445, 446, 447, 448, 449, 457, 458, 462, 480,
	482, 494, 508, 513, 438, 281, 489, 514, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 503, 459, 214,
	426, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 299, 359, 366, 395, 400, 278, 254, 231, 419,
	228, 442, 465, 466, 467, 469, 363, 249, 399, 0,
	364, 346, 471, 472, 291, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 396, 0, 197, 0, 444,
	237, 347, 344, 477, 265, 256, 252, 235, 292, 354,
	394, 464, 388, 0, 341, 0, 0, 454, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 379, 455,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	474, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	1043, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 0,
	0, 1042, 510, 0, 0, 0, 0, 0, 1039, 1040,
	336, 1000, 305, 192, 212, 1033, 1037, 378, 421, 431,
	0, 0, 0, 238, 0, 429, 392, 493, 220, 267,
	418, 398, 427, 405, 270, 0, 0, 428, 342, 479,
	412, 490, 511, 512, 246, 372, 501, 468, 507, 525,
	213, 243, 386, 461, 496, 451, 365, 475, 476, 304,
	450, 277, 195, 340, 517, 211, 437, 229, 218, 481,
	499, 272, 416, 203, 463, 488, 226, 441, 0, 0,
	527, 205, 486, 460, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 483, 484, 239, 528, 215, 506,
	207, 0, 505, 374, 478, 487, 362, 352, 206, 485,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 497, 0, 200, 0, 456,
	498, 529, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 473,
	491, 502, 509, 515, 516, 518, 519, 520, 521, 522,
	524, 523, 373, 289, 452, 306, 343, 0, 0, 391,
	430, 227, 495, 453, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 548, 353, 443, 492, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 422, 423, 424, 425, 0, 191,
	208, 339, 0, 414, 271, 526, 504, 500, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 432, 433, 434, 435, 436,
	439, 440, 445, 446, 447, 448, 449, 457, 458, 462,
	480, 482, 494, 508, 513, 438, 281, 489, 514, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 503, 459,
	214, 426, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 442, 465, 466, 467, 469, 363, 249, 399,
	0, 0, 346, 471, 472, 291, 364, 0, 0, 0,
	78, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 525, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 527, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 528, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 529, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 522, 524, 523, 373, 289,
	452, 306, 343, 0, 0, 391, 430, 227, 495, 453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 548,
	353, 443, 492, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	422, 423, 424, 425, 0, 191, 208, 339, 86, 414,
	271, 526, 504, 500, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 1895, 0, 0, 1894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 432, 433, 434, 435, 436, 439, 440, 445, 446,
	447, 448, 449, 457, 458, 462, 480, 482, 494, 508,
	513, 438, 281, 489, 514, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 503, 459, 214, 426, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 442, 465,
	466, 467, 469, 363, 249, 399, 0, 1394, 346, 471,
	472, 291, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 1396, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 444, 237, 347, 344,
	477, 265, 256, 252, 235, 292, 354, 394, 464, 388,
	0, 341, 0, 0, 454, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 455, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 1398, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 474, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 1215,
	0, 1216, 1217, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 510,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 431, 0, 0, 0,
	238, 0, 429, 392, 493, 220, 267, 418, 398, 427,
	405, 270, 0, 0, 428, 342, 479, 412, 490, 511,
	512, 246, 372, 501, 468, 507, 525, 213, 243, 386,
	461, 496, 451, 365, 475, 476, 304, 450, 277, 195,
	340, 517, 211, 437, 229, 218, 481, 499, 272, 416,
	203, 463, 488, 226, 441, 0, 0, 527, 205, 486,
	460, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 483, 484, 239, 528, 215, 506, 207, 0, 505,
	374, 478, 487, 362, 352, 206, 485, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 199, 497, 0, 200, 0, 456, 498, 529, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 473, 491, 502, 509,
	515, 516, 518, 519, 520, 521, 522, 524, 523, 373,
	289, 452, 306, 343, 0, 0, 391, 430, 227, 495,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	548, 353, 443, 492, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 422, 423, 424, 425, 0, 191, 208, 339, 0,
	414, 271, 526, 504, 500, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 432, 433, 434, 435, 436, 439, 440, 445,
	446, 447, 448, 449, 457, 458, 462, 480, 482, 494,
	508, 513, 438, 281, 489, 514, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 503, 459, 214, 426, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 442,
	465, 466, 467, 469, 363, 249, 399, 0, 364, 346,
	471, 472, 291, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 396, 0, 197, 0, 444, 237, 347,
	344, 477, 265, 256, 252, 235, 292, 354, 394, 464,
	388, 0, 341, 0, 0, 454, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 379, 455, 269, 0,
	0, 0, 0, 188, 189, 190, 1336, 1339, 0, 0,
	0, 0, 1335, 1338, 0, 0, 225, 1334, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 474, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 431, 0, 0,
	0, 238, 0, 429, 392, 493, 220, 267, 418, 398,
	427, 405, 270, 0, 0, 428, 342, 479, 412, 490,
	511, 512, 246, 372, 501, 468, 507, 525, 213, 243,
	386, 461, 496, 451, 365, 475, 476, 304, 450, 277,
	195, 340, 517, 211, 437, 229, 218, 481, 499, 272,
	416, 203, 463, 488, 226, 441, 0, 0, 527, 205,
	486, 460, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 483, 484, 239, 528, 215, 506, 207, 0,
	505, 374, 478, 487, 362, 352, 206, 485, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 497, 0, 200, 0, 456, 498, 529,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 473, 491, 502,
	509, 515, 516, 518, 519, 520, 521, 522, 524, 523,
	373, 289, 452, 306, 343, 0, 0, 391, 430, 227,
	495, 453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 353, 443, 492, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 422, 423, 424, 425, 0, 191, 208, 339,
	0, 414, 271, 526, 504, 500, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 432, 433, 434, 435, 436, 439, 440,
	445, 446, 447, 448, 449, 457, 458, 462, 480, 482,
	494, 508, 513, 438, 281, 489, 514, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 503, 459, 214, 426,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	442, 465, 466, 467, 469, 363, 249, 399, 0, 0,
	346, 471, 472, 291, 364, 0, 0, 0, 78, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 396,
	0, 197, 0, 444, 237, 347, 344, 477, 265, 256,
	252, 235, 292, 354, 394, 464, 388, 0, 341, 0,
	0, 454, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 379, 455, 269, 0, 87, 0, 1375, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 474, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 431, 0, 0, 0, 238, 0, 429,
	392, 493, 220, 267, 418, 398, 427, 405, 270, 0,
	0, 428, 342, 479, 412, 490, 511, 512, 246, 372,
	501, 468, 507, 525, 213, 243, 386, 461, 496, 451,
	365, 475, 476, 304, 450, 277, 195, 340, 517, 211,
	437, 229, 218, 481, 499, 272, 416, 203, 463, 488,
	226, 441, 0, 0, 527, 205, 486, 460, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 483, 484,
	239, 528, 215, 506, 207, 0, 505, 374, 478, 487,
	362, 352, 206, 485, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 497,
	0, 200, 0, 456, 498, 529, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 473, 491, 502, 509, 515, 516, 518,
	519, 520, 521, 522, 524, 523, 373, 289, 452, 306,
	343, 0, 0, 391, 430, 227, 495, 453, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 353, 443,
	492, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 422, 423,
	424, 425, 0, 191, 208, 339, 86, 414, 271, 526,
	504, 500, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 432,
	433, 434, 435, 436, 439, 440, 445, 446, 447, 448,
	449, 457, 458, 462, 480, 482, 494, 508, 513, 438,
	281, 489, 514, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 503, 459, 214, 426, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 442, 465, 466, 467,
	469, 363, 249, 399, 0, 364, 346, 471, 472, 291,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 444, 237, 347, 344, 477, 265,
	256, 252, 235, 292, 354, 394, 464, 388, 0, 341,
	0, 0, 454, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 455, 269, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 474, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 0, 0, 0, 510, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 431, 0, 0, 0, 238, 0,
	429, 392, 493, 220, 267, 418, 398, 427, 405, 270,
	0, 0, 428, 342, 479, 412, 490, 511, 512, 246,
	372, 501, 468, 507, 525, 213, 243, 386, 461, 496,
	451, 365, 475, 476, 304, 450, 277, 195, 340, 517,
	211, 437, 229, 218, 481, 499, 272, 416, 203, 463,
	488, 226, 441, 0, 0, 527, 205, 486, 460, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 483,
	484, 239, 528, 215, 506, 207, 0, 505, 374, 478,
	487, 362, 352, 206, 485, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 199,
	497, 0, 200, 0, 456, 498, 529, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 473, 491, 502, 509, 515, 516,
	518, 519, 520, 521, 522, 524, 523, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	526, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 1895, 0, 0, 1894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 1846, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1576, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 1844, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 525, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 527, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 528, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 529, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 522, 524, 523, 373, 289,
	452, 306, 343, 0, 0, 391, 430, 227, 495, 453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 548,
	353, 443, 492, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	422, 423, 424, 425, 0, 191, 208, 339, 0, 414,
	271, 526, 504, 500, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 432, 433, 434, 435, 436, 439, 440, 445, 446,
	447, 448, 449, 457, 458, 462, 480, 482, 494, 508,
	513, 438, 281, 489, 514, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 503, 459, 214, 426, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 442, 465,
	466, 467, 469, 363, 249, 399, 0, 364, 346, 471,
	472, 291, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 444, 237, 347, 344,
	477, 265, 256, 252, 235, 292, 354, 394, 464, 388,
	0, 341, 0, 0, 454, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 455, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 474, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 510,
	0, 0, 0, 0, 0, 0, 0, 336, 1000, 305,
	192, 212, 998, 0, 378, 421, 431, 0, 0, 0,
	238, 0, 429, 392, 493, 220, 267, 418, 398, 427,
	405, 270, 0, 0, 428, 342, 479, 412, 490, 511,
	512, 246, 372, 501, 468, 507, 525, 213, 243, 386,
	461, 496, 451, 365, 475, 476, 304, 450, 277, 195,
	340, 517, 211, 437, 229, 218, 481, 499, 272, 416,
	203, 463, 488, 226, 441, 0, 0, 527, 205, 486,
	460, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 483, 484, 239, 528, 215, 506, 207, 0, 505,
	374, 478, 487, 362, 352, 206, 485, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 199, 497, 0, 200, 0, 456, 498, 529, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 473, 491, 502, 509,
	515, 516, 518, 519, 520, 521, 522, 524, 523, 373,
	289, 452, 306, 343, 0, 0, 391, 430, 227, 495,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	548, 353, 443, 492, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 422, 423, 424, 425, 0, 191, 208, 339, 0,
	414, 271, 526, 504, 500, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 432, 433, 434, 435, 436, 439, 440, 445,
	446, 447, 448, 449, 457, 458, 462, 480, 482, 494,
	508, 513, 438, 281, 489, 514, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 503, 459, 214, 426, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 442,
	465, 466, 467, 469, 363, 249, 399, 0, 364, 346,
	471, 472, 291, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 0, 0, 1846,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 396, 0, 197, 0, 444, 237, 347,
	344, 477, 265, 256, 252, 235, 292, 354, 394, 464,
	388, 0, 341, 0, 0, 454, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 379, 455, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 1576, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 474, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 431, 0, 0,
	0, 238, 0, 429, 392, 493, 220, 267, 418, 398,
	427, 405, 270, 0, 0, 428, 342, 479, 412, 490,
	511, 512, 246, 372, 501, 468, 507, 525, 213, 243,
	386, 461, 496, 451, 365, 475, 476, 304, 450, 277,
	195, 340, 517, 211, 437, 229, 218, 481, 499, 272,
	416, 203, 463, 488, 226, 441, 0, 0, 527, 205,
	486, 460, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 483, 484, 239, 528, 215, 506, 207, 0,
	505, 374, 478, 487, 362, 352, 206, 485, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 497, 0, 200, 0, 456, 498, 529,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 473, 491, 502,
	509, 515, 516, 518, 519, 520, 521, 522, 524, 523,
	373, 289, 452, 306, 343, 0, 0, 391, 430, 227,
	495, 453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 353, 443, 492, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 422, 423, 424, 425, 0, 191, 208, 339,
	0, 414, 271, 526, 504, 500, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 432, 433, 434, 435, 436, 439, 440,
	445, 446, 447, 448, 449, 457, 458, 462, 480, 482,
	494, 508, 513, 438, 281, 489, 514, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 503, 459, 214, 426,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	442, 465, 466, 467, 469, 363, 249, 399, 0, 364,
	346, 471, 472, 291, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 444, 237,
	347, 344, 477, 265, 256, 252, 235, 292, 354, 394,
	464, 388, 0, 341, 0, 0, 454, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 455, 269,
	0, 0, 0, 1375, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 474,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 0,
	0, 510, 0, 0, 0, 3030, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 431, 0,
	0, 0, 238, 0, 429, 392, 493, 220, 267, 418,
	398, 427, 405, 270, 0, 0, 428, 342, 479, 412,
	490, 511, 512, 246, 372, 501, 468, 507, 525, 213,
	243, 386, 461, 496, 451, 365, 475, 476, 304, 450,
	277, 195, 340, 517, 211, 437, 229, 218, 481, 499,
	272, 416, 203, 463, 488, 226, 441, 0, 0, 527,
	205, 486, 460, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 483, 484, 239, 528, 215, 506, 207,
	0, 505, 374, 478, 487, 362, 352, 206, 485, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 199, 497, 0, 200, 0, 456, 498,
	529, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 473, 491,
	502, 509, 515, 516, 518, 519, 520, 521, 522, 524,
	523, 373, 289, 452, 306, 343, 0, 0, 391, 430,
	227, 495, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 548, 353, 443, 492, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 422, 423, 424, 425, 0, 191, 208,
	339, 0, 414, 271, 526, 504, 500, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 432, 433, 434, 435, 436, 439,
	440, 445, 446, 447, 448, 449, 457, 458, 462, 480,
	482, 494, 508, 513, 438, 281, 489, 514, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 503, 459, 214,
	426, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 299, 359, 366, 395, 400, 278, 254, 231, 419,
	228, 442, 465, 466, 467, 469, 363, 249, 399, 0,
	364, 346, 471, 472, 291, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 396, 0, 197, 0, 444,
	237, 347, 344, 477, 265, 256, 252, 235, 292, 354,
	394, 464, 388, 0, 341, 0, 0, 454, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 379, 455,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 1719,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	474, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 0,
	0, 0, 510, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 378, 421, 431,
	0, 0, 0, 238, 0, 429, 392, 493, 220, 267,
	418, 398, 427, 405, 270, 0, 0, 428, 342, 479,
	412, 490, 511, 512, 246, 372, 501, 468, 507, 525,
	213, 243, 386, 461, 496, 451, 365, 475, 476, 304,
	450, 277, 195, 340, 517, 211, 437, 229, 218, 481,
	499, 272, 416, 203, 463, 488, 226, 441, 0, 0,
	527, 205, 486, 460, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 483, 484, 239, 528, 215, 506,
	207, 0, 505, 374, 478, 487, 362, 352, 206, 485,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 497, 0, 200, 0, 456,
	498, 529, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 473,
	491, 502, 509, 515, 516, 518, 519, 520, 521, 522,
	524, 523, 373, 289, 452, 306, 343, 0, 0, 391,
	430, 227, 495, 453, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 548, 353, 443, 492, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 422, 423, 424, 425, 0, 191,
	208, 339, 0, 414, 271, 526, 504, 500, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 432, 433, 434, 435, 436,
	439, 440, 445, 446, 447, 448, 449, 457, 458, 462,
	480, 482, 494, 508, 513, 438, 281, 489, 514, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 503, 459,
	214, 426, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 442, 465, 466, 467, 469, 363, 249, 399,
	0, 364, 346, 471, 472, 291, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 0, 341, 0, 0, 454, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	455, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	2202, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 474, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	0, 0, 0, 510, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	431, 0, 0, 0, 238, 0, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 0, 0, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	525, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 488, 226, 441, 0,
	0, 527, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 528, 215,
	506, 207, 0, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 529, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	522, 524, 523, 373, 289, 452, 306, 343, 0, 0,
	391, 430, 227, 495, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 548, 353, 443, 492, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 422, 423, 424, 425, 0,
	191, 208, 339, 0, 414, 271, 526, 504, 500, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 432, 433, 434, 435,
	436, 439, 440, 445, 446, 447, 448, 449, 457, 458,
	462, 480, 482, 494, 508, 513, 438, 281, 489, 514,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 503,
	459, 214, 426, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 299, 359, 366, 395, 400, 278, 254,
	231, 419, 228, 442, 465, 466, 467, 469, 363, 249,
	399, 0, 364, 346, 471, 472, 291, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 396, 0, 197,
	0, 444, 237, 347, 344, 477, 265, 256, 252, 235,
	292, 354, 394, 464, 388, 0, 341, 0, 0, 454,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	379, 455, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 2187, 0, 0, 0, 2188, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 474, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 0, 0, 0, 510, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 378,
	421, 431, 0, 0, 0, 238, 0, 429, 392, 493,
	220, 267, 418, 398, 427, 405, 270, 0, 0, 428,
	342, 479, 412, 490, 511, 512, 246, 372, 501, 468,
	507, 525, 213, 243, 386, 461, 496, 451, 365, 475,
	476, 304, 450, 277, 195, 340, 517, 211, 437, 229,
	218, 481, 499, 272, 416, 203, 463, 488, 226, 441,
	0, 0, 527, 205, 486, 460, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 483, 484, 239, 528,
	215, 506, 207, 0, 505, 374, 478, 487, 362, 352,
	206, 485, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 199, 497, 0, 200,
	0, 456, 498, 529, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 473, 491, 502, 509, 515, 516, 518, 519, 520,
	521, 522, 524, 523, 373, 289, 452, 306, 343, 0,
	0, 391, 430, 227, 495, 453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 548, 353, 443, 492, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 422, 423, 424, 425,
	0, 191, 208, 339, 0, 414, 271, 526, 504, 500,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 375, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 432, 433, 434,
	435, 436, 439, 440, 445, 446, 447, 448, 449, 457,
	458, 462, 480, 482, 494, 508, 513, 438, 281, 489,
	514, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	503, 459, 214, 426, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 442, 465, 466, 467, 469, 363,
	249, 399, 0, 364, 346, 471, 472, 291, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	1419, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 444, 237, 347, 344, 477, 265, 256, 252,
	235, 292, 354, 394, 464, 388, 0, 341, 0, 0,
	454, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 455, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 474, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 0, 0, 0, 510, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 431, 0, 0, 0, 238, 0, 429, 392,
	493, 220, 267, 418, 398, 427, 405, 270, 0, 0,
	428, 342, 479, 412, 490, 511, 512, 246, 372, 501,
	468, 507, 525, 213, 243, 386, 461, 496, 451, 365,
	475, 476, 304, 450, 277, 195, 340, 517, 211, 437,
	229, 218, 481, 499, 272, 416, 203, 463, 488, 226,
	441, 0, 0, 527, 205, 486, 460, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 483, 484, 239,
	528, 215, 506, 207, 0, 505, 374, 478, 487, 362,
	352, 206, 485, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 199, 497, 0,
	200, 0, 456, 498, 529, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 473, 491, 502, 509, 515, 516, 518, 519,
	520, 521, 522, 524, 523, 373, 289, 452, 306, 343,
	0, 0, 391, 430, 227, 495, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 548, 353, 443, 492,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 422, 423, 424,
	425, 0, 191, 208, 339, 0, 414, 271, 526, 504,
	500, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 432, 433,
	434, 435, 436, 439, 440, 445, 446, 447, 448, 449,
	457, 458, 462, 480, 482, 494, 508, 513, 438, 281,
	489, 514, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 503, 459, 214, 426, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 299, 359, 366, 395, 400,
	278, 254, 231, 419, 228, 442, 465, 466, 467, 469,
	363, 249, 399, 0, 364, 346, 471, 472, 291, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 396,
	0, 197, 0, 444, 237, 347, 344, 477, 265, 256,
	252, 235, 292, 354, 394, 464, 388, 0, 341, 0,
	0, 454, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 379, 455, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 474, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 510, 0, 0, 0,
	3160, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 431, 0, 0, 0, 238, 0, 429,
	392, 493, 220, 267, 418, 398, 427, 405, 270, 0,
	0, 428, 342, 479, 412, 490, 511, 512, 246, 372,
	501, 468, 507, 525, 213, 243, 386, 461, 496, 451,
	365, 475, 476, 304, 450, 277, 195, 340, 517, 211,
	437, 229, 218, 481, 499, 272, 416, 203, 463, 488,
	226, 441, 0, 0, 527, 205, 486, 460, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 483, 484,
	239, 528, 215, 506, 207, 0, 505, 374, 478, 487,
	362, 352, 206, 485, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 497,
	0, 200, 0, 456, 498, 529, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 473, 491, 502, 509, 515, 516, 518,
	519, 520, 521, 522, 524, 523, 373, 289, 452, 306,
	343, 0, 0, 391, 430, 227, 495, 453, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 353, 443,
	492, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 422, 423,
	424, 425, 0, 191, 208, 339, 0, 414, 271, 526,
	504, 500, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 432,
	433, 434, 435, 436, 439, 440, 445, 446, 447, 448,
	449, 457, 458, 462, 480, 482, 494, 508, 513, 438,
	281, 489, 514, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 503, 459, 214, 426, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 442, 465, 466, 467,
	469, 363, 249, 399, 0, 364, 346, 471, 472, 291,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 444, 237, 347, 344, 477, 265,
	256, 252, 235, 292, 354, 394, 464, 388, 0, 341,
	0, 0, 454, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 455, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 1576, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 474, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 0, 0, 0, 510, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 431, 0, 0, 0, 238, 0,
	429, 392, 493, 220, 267, 418, 398, 427, 405, 270,
	0, 0, 428, 342, 479, 412, 490, 511, 512, 246,
	372, 501, 468, 507, 525, 213, 243, 386, 461, 496,
	451, 365, 475, 476, 304, 450, 277, 195, 340, 517,
	211, 437, 229, 218, 481, 499, 272, 416, 203, 463,
	488, 226, 441, 0, 0, 527, 205, 486, 460, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 483,
	484, 239, 528, 215, 506, 207, 0, 505, 374, 478,
	487, 362, 352, 206, 485, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 199,
	497, 0, 200, 0, 456, 498, 529, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 473, 491, 502, 509, 515, 516,
	518, 519, 520, 521, 522, 524, 523, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	526, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 3030, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 525, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 527, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 528, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 529, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 522, 524, 523, 373, 289,
	452, 306, 343, 0, 0, 391, 430, 227, 495, 453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 548,
	353, 443, 492, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	422, 423, 424, 425, 0, 191, 208, 339, 0, 414,
	271, 526, 504, 500, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 432, 433, 434, 435, 436, 439, 440, 445, 446,
	447, 448, 449, 457, 458, 462, 480, 482, 494, 508,
	513, 438, 281, 489, 514, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 503, 459, 214, 426, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 442, 465,
	466, 467, 469, 363, 249, 399, 0, 364, 346, 471,
	472, 291, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 444, 237, 347, 344,
	477, 265, 256, 252, 235, 292, 354, 394, 464, 388,
	0, 341, 0, 0, 454, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 455, 269, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 474, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 510,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 431, 0, 0, 0,
	238, 0, 429, 392, 493, 220, 267, 418, 398, 427,
	405, 270, 0, 0, 428, 342, 479, 412, 490, 511,
	512, 246, 372, 501, 468, 507, 525, 213, 243, 386,
	461, 496, 451, 365, 475, 476, 304, 450, 277, 195,
	340, 517, 211, 437, 229, 218, 481, 499, 272, 416,
	203, 463, 488, 226, 441, 0, 0, 527, 205, 486,
	460, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 483, 484, 239, 528, 215, 506, 207, 0, 505,
	374, 478, 487, 362, 352, 206, 485, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 199, 497, 0, 200, 0, 456, 498, 529, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 473, 491, 502, 509,
	515, 516, 518, 519, 520, 521, 522, 524, 523, 373,
	289, 452, 306, 343, 0, 0, 391, 430, 227, 495,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	548, 353, 443, 492, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 422, 423, 424, 425, 0, 191, 208, 339, 0,
	414, 271, 526, 504, 500, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 432, 433, 434, 435, 436, 439, 440, 445,
	446, 447, 448, 449, 457, 458, 462, 480, 482, 494,
	508, 513, 438, 281, 489, 514, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 503, 459, 214, 426, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 442,
	465, 466, 467, 469, 363, 249, 399, 0, 364, 346,
	471, 472, 291, 470, 0, 0, 0, 0, 1896, 0,
	0, 0, 0, 0, 0, 382, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 396, 0, 197, 0, 444, 237, 347,
	344, 477, 265, 256, 252, 235, 292, 354, 394, 464,
	388, 0, 341, 0, 0, 454, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 379, 455, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 474, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 431, 0, 0,
	0, 238, 0, 429, 392, 493, 220, 267, 418, 398,
	427, 405, 270, 0, 0, 428, 342, 479, 412, 490,
	511, 512, 246, 372, 501, 468, 507, 525, 213, 243,
	386, 461, 496, 451, 365, 475, 476, 304, 450, 277,
	195, 340, 517, 211, 437, 229, 218, 481, 499, 272,
	416, 203, 463, 488, 226, 441, 0, 0, 527, 205,
	486, 460, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 483, 484, 239, 528, 215, 506, 207, 0,
	505, 374, 478, 487, 362, 352, 206, 485, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 497, 0, 200, 0, 456, 498, 529,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 473, 491, 502,
	509, 515, 516, 518, 519, 520, 521, 522, 524, 523,
	373, 289, 452, 306, 343, 0, 0, 391, 430, 227,
	495, 453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 353, 443, 492, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 422, 423, 424, 425, 0, 191, 208, 339,
	0, 414, 271, 526, 504, 500, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 432, 433, 434, 435, 436, 439, 440,
	445, 446, 447, 448, 449, 457, 458, 462, 480, 482,
	494, 508, 513, 438, 281, 489, 514, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 503, 459, 214, 426,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	442, 465, 466, 467, 469, 363, 249, 399, 0, 364,
	346, 471, 472, 291, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 444, 237,
	347, 344, 477, 265, 256, 252, 235, 292, 354, 394,
	464, 388, 0, 341, 0, 0, 454, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 455, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 1398, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 474,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 0,
	0, 510, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 431, 0,
	0, 0, 238, 0, 429, 392, 493, 220, 267, 418,
	398, 427, 405, 270, 0, 0, 428, 342, 479, 412,
	490, 511, 512, 246, 372, 501, 468, 507, 525, 213,
	243, 386, 461, 496, 451, 365, 475, 476, 304, 450,
	277, 195, 340, 517, 211, 437, 229, 218, 481, 499,
	272, 416, 203, 463, 488, 226, 441, 0, 0, 527,
	205, 486, 460, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 483, 484, 239, 528, 215, 506, 207,
	0, 505, 374, 478, 487, 362, 352, 206, 485, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 199, 497, 0, 200, 0, 456, 498,
	529, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 473, 491,
	502, 509, 515, 516, 518, 519, 520, 521, 522, 524,
	523, 373, 289, 452, 306, 343, 0, 0, 391, 430,
	227, 495, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 548, 353, 443, 492, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 422, 423, 424, 425, 0, 191, 208,
	339, 0, 414, 271, 526, 504, 500, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 432, 433, 434, 435, 436, 439,
	440, 445, 446, 447, 448, 449, 457, 458, 462, 480,
	482, 494, 508, 513, 438, 281, 489, 514, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 503, 459, 214,
	426, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 299, 359, 366, 395, 400, 278, 254, 231, 419,
	228, 442, 465, 466, 467, 469, 363, 249, 399, 0,
	364, 346, 471, 472, 291, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 396, 0, 197, 0, 444,
	237, 347, 344, 477, 265, 256, 252, 235, 292, 354,
	394, 464, 388, 0, 341, 0, 0, 454, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 379, 455,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	474, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 0,
	0, 0, 510, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 378, 421, 431,
	0, 0, 0, 238, 0, 429, 392, 493, 220, 267,
	418, 398, 427, 405, 270, 0, 0, 428, 342, 479,
	412, 490, 511, 512, 246, 372, 501, 468, 507, 525,
	213, 243, 386, 461, 496, 451, 365, 475, 476, 304,
	450, 277, 195, 340, 517, 211, 437, 229, 218, 481,
	499, 272, 416, 203, 463, 488, 226, 441, 0, 0,
	527, 205, 486, 460, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 483, 484, 239, 528, 215, 506,
	207, 0, 505, 374, 478, 487, 362, 352, 206, 485,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 497, 0, 200, 0, 456,
	498, 529, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 473,
	491, 502, 509, 515, 516, 518, 519, 520, 521, 522,
	524, 523, 373, 289, 452, 306, 343, 0, 0, 391,
	430, 227, 495, 453, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 548, 353, 443, 492, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 422, 423, 424, 425, 0, 191,
	208, 339, 0, 414, 271, 526, 504, 500, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 432, 433, 434, 435, 436,
	439, 440, 445, 446, 447, 448, 449, 457, 458, 462,
	480, 482, 494, 508, 513, 438, 281, 489, 514, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 503, 459,
	214, 426, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 442, 465, 466, 467, 469, 363, 249, 399,
	0, 364, 346, 471, 472, 291, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 0, 341, 0, 0, 454, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	455, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 474, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	0, 0, 0, 510, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	431, 0, 0, 0, 238, 0, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 0, 0, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	525, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 488, 226, 441, 0,
	0, 527, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 528, 215,
	506, 207, 0, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 529, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	522, 524, 523, 373, 289, 452, 306, 343, 0, 0,
	391, 430, 227, 495, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 548, 353, 443, 492, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 422, 423, 424, 425, 0,
	191, 208, 339, 1674, 414, 271, 526, 504, 500, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 432, 433, 434, 435,
	436, 439, 440, 445, 446, 447, 448, 449, 457, 458,
	462, 480, 482, 494, 508, 513, 438, 281, 489, 514,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 503,
	459, 214, 426, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 299, 359, 366, 395, 400, 278, 254,
	231, 419, 228, 442, 465, 466, 467, 469, 363, 249,
	399, 0, 364, 346, 471, 472, 291, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	0, 1544, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 396, 0, 197,
	0, 444, 237, 347, 344, 477, 265, 256, 252, 235,
	292, 354, 394, 464, 388, 0, 341, 0, 0, 454,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	379, 455, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 474, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 0, 0, 0, 510, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 378,
	421, 431, 0, 0, 0, 238, 0, 429, 392, 493,
	220, 267, 418, 398, 427, 405, 270, 0, 0, 428,
	342, 479, 412, 490, 511, 512, 246, 372, 501, 468,
	507, 525, 213, 243, 386, 461, 496, 451, 365, 475,
	476, 304, 450, 277, 195, 340, 517, 211, 437, 229,
	218, 481, 499, 272, 416, 203, 463, 488, 226, 441,
	0, 0, 527, 205, 486, 460, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 483, 484, 239, 528,
	215, 506, 207, 0, 505, 374, 478, 487, 362, 352,
	206, 485, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 199, 497, 0, 200,
	0, 456, 498, 529, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 473, 491, 502, 509, 515, 516, 518, 519, 520,
	521, 522, 524, 523, 373, 289, 452, 306, 343, 0,
	0, 391, 430, 227, 495, 453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 548, 353, 443, 492, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 422, 423, 424, 425,
	0, 191, 208, 339, 0, 414, 271, 526, 504, 500,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 375, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 432, 433, 434,
	435, 436, 439, 440, 445, 446, 447, 448, 449, 457,
	458, 462, 480, 482, 494, 508, 513, 438, 281, 489,
	514, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	503, 459, 214, 426, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 442, 465, 466, 467, 469, 363,
	249, 399, 0, 364, 346, 471, 472, 291, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 1542, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 444, 237, 347, 344, 477, 265, 256, 252,
	235, 292, 354, 394, 464, 388, 0, 341, 0, 0,
	454, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 455, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 474, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 0, 0, 0, 510, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 431, 0, 0, 0, 238, 0, 429, 392,
	493, 220, 267, 418, 398, 427, 405, 270, 0, 0,
	428, 342, 479, 412, 490, 511, 512, 246, 372, 501,
	468, 507, 525, 213, 243, 386, 461, 496, 451, 365,
	475, 476, 304, 450, 277, 195, 340, 517, 211, 437,
	229, 218, 481, 499, 272, 416, 203, 463, 488, 226,
	441, 0, 0, 527, 205, 486, 460, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 483, 484, 239,
	528, 215, 506, 207, 0, 505, 374, 478, 487, 362,
	352, 206, 485, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 199, 497, 0,
	200, 0, 456, 498, 529, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 473, 491, 502, 509, 515, 516, 518, 519,
	520, 521, 522, 524, 523, 373, 289, 452, 306, 343,
	0, 0, 391, 430, 227, 495, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 548, 353, 443, 492,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 422, 423, 424,
	425, 0, 191, 208, 339, 0, 414, 271, 526, 504,
	500, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 432, 433,
	434, 435, 436, 439, 440, 445, 446, 447, 448, 449,
	457, 458, 462, 480, 482, 494, 508, 513, 438, 281,
	489, 514, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 503, 459, 214, 426, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 299, 359, 366, 395, 400,
	278, 254, 231, 419, 228, 442, 465, 466, 467, 469,
	363, 249, 399, 0, 364, 346, 471, 472, 291, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 0, 1540, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 396,
	0, 197, 0, 444, 237, 347, 344, 477, 265, 256,
	252, 235, 292, 354, 394, 464, 388, 0, 341, 0,
	0, 454, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 379, 455, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 474, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 431, 0, 0, 0, 238, 0, 429,
	392, 493, 220, 267, 418, 398, 427, 405, 270, 0,
	0, 428, 342, 479, 412, 490, 511, 512, 246, 372,
	501, 468, 507, 525, 213, 243, 386, 461, 496, 451,
	365, 475, 476, 304, 450, 277, 195, 340, 517, 211,
	437, 229, 218, 481, 499, 272, 416, 203, 463, 488,
	226, 441, 0, 0, 527, 205, 486, 460, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 483, 484,
	239, 528, 215, 506, 207, 0, 505, 374, 478, 487,
	362, 352, 206, 485, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 497,
	0, 200, 0, 456, 498, 529, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 473, 491, 502, 509, 515, 516, 518,
	519, 520, 521, 522, 524, 523, 373, 289, 452, 306,
	343, 0, 0, 391, 430, 227, 495, 453, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 353, 443,
	492, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 422, 423,
	424, 425, 0, 191, 208, 339, 0, 414, 271, 526,
	504, 500, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 432,
	433, 434, 435, 436, 439, 440, 445, 446, 447, 448,
	449, 457, 458, 462, 480, 482, 494, 508, 513, 438,
	281, 489, 514, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 503, 459, 214, 426, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 442, 465, 466, 467,
	469, 363, 249, 399, 0, 364, 346, 471, 472, 291,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 1538, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 444, 237, 347, 344, 477, 265,
	256, 252, 235, 292, 354, 394, 464, 388, 0, 341,
	0, 0, 454, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 455, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 474, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 0, 0, 0, 510, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 431, 0, 0, 0, 238, 0,
	429, 392, 493, 220, 267, 418, 398, 427, 405, 270,
	0, 0, 428, 342, 479, 412, 490, 511, 512, 246,
	372, 501, 468, 507, 525, 213, 243, 386, 461, 496,
	451, 365, 475, 476, 304, 450, 277, 195, 340, 517,
	211, 437, 229, 218, 481, 499, 272, 416, 203, 463,
	488, 226, 441, 0, 0, 527, 205, 486, 460, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 483,
	484, 239, 528, 215, 506, 207, 0, 505, 374, 478,
	487, 362, 352, 206, 485, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 199,
	497, 0, 200, 0, 456, 498, 529, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 473, 491, 502, 509, 515, 516,
	518, 519, 520, 521, 522, 524, 523, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	526, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 1536, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 525, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 527, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 528, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 529, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 522, 524, 523, 373, 289,
	452, 306, 343, 0, 0, 391, 430, 227, 495, 453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 548,
	353, 443, 492, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	422, 423, 424, 425, 0, 191, 208, 339, 0, 414,
	271, 526, 504, 500, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 375, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 432, 433, 434, 435, 436, 439, 440, 445, 446,
	447, 448, 449, 457, 458, 462, 480, 482, 494, 508,
	513, 438, 281, 489, 514, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 503, 459, 214, 426, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 442, 465,
	466, 467, 469, 363, 249, 399, 0, 364, 346, 471,
	472, 291, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 1532, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 444, 237, 347, 344,
	477, 265, 256, 252, 235, 292, 354, 394, 464, 388,
	0, 341, 0, 0, 454, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 455, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 474, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 510,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 431, 0, 0, 0,
	238, 0, 429, 392, 493, 220, 267, 418, 398, 427,
	405, 270, 0, 0, 428, 342, 479, 412, 490, 511,
	512, 246, 372, 501, 468, 507, 525, 213, 243, 386,
	461, 496, 451, 365, 475, 476, 304, 450, 277, 195,
	340, 517, 211, 437, 229, 218, 481, 499, 272, 416,
	203, 463, 488, 226, 441, 0, 0, 527, 205, 486,
	460, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 483, 484, 239, 528, 215, 506, 207, 0, 505,
	374, 478, 487, 362, 352, 206, 485, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 199, 497, 0, 200, 0, 456, 498, 529, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 473, 491, 502, 509,
	515, 516, 518, 519, 520, 521, 522, 524, 523, 373,
	289, 452, 306, 343, 0, 0, 391, 430, 227, 495,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	548, 353, 443, 492, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 422, 423, 424, 425, 0, 191, 208, 339, 0,
	414, 271, 526, 504, 500, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 432, 433, 434, 435, 436, 439, 440, 445,
	446, 447, 448, 449, 457, 458, 462, 480, 482, 494,
	508, 513, 438, 281, 489, 514, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 503, 459, 214, 426, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 442,
	465, 466, 467, 469, 363, 249, 399, 0, 364, 346,
	471, 472, 291, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 1530, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 396, 0, 197, 0, 444, 237, 347,
	344, 477, 265, 256, 252, 235, 292, 354, 394, 464,
	388, 0, 341, 0, 0, 454, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 379, 455, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 474, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 431, 0, 0,
	0, 238, 0, 429, 392, 493, 220, 267, 418, 398,
	427, 405, 270, 0, 0, 428, 342, 479, 412, 490,
	511, 512, 246, 372, 501, 468, 507, 525, 213, 243,
	386, 461, 496, 451, 365, 475, 476, 304, 450, 277,
	195, 340, 517, 211, 437, 229, 218, 481, 499, 272,
	416, 203, 463, 488, 226, 441, 0, 0, 527, 205,
	486, 460, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 483, 484, 239, 528, 215, 506, 207, 0,
	505, 374, 478, 487, 362, 352, 206, 485, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 497, 0, 200, 0, 456, 498, 529,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 473, 491, 502,
	509, 515, 516, 518, 519, 520, 521, 522, 524, 523,
	373, 289, 452, 306, 343, 0, 0, 391, 430, 227,
	495, 453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 353, 443, 492, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 422, 423, 424, 425, 0, 191, 208, 339,
	0, 414, 271, 526, 504, 500, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 432, 433, 434, 435, 436, 439, 440,
	445, 446, 447, 448, 449, 457, 458, 462, 480, 482,
	494, 508, 513, 438, 281, 489, 514, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 503, 459, 214, 426,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	442, 465, 466, 467, 469, 363, 249, 399, 0, 364,
	346, 471, 472, 291, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 1528, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 444, 237,
	347, 344, 477, 265, 256, 252, 235, 292, 354, 394,
	464, 388, 0, 341, 0, 0, 454, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 455, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 474,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 0,
	0, 510, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 431, 0,
	0, 0, 238, 0, 429, 392, 493, 220, 267, 418,
	398, 427, 405, 270, 0, 0, 428, 342, 479, 412,
	490, 511, 512, 246, 372, 501, 468, 507, 525, 213,
	243, 386, 461, 496, 451, 365, 475, 476, 304, 450,
	277, 195, 340, 517, 211, 437, 229, 218, 481, 499,
	272, 416, 203, 463, 488, 226, 441, 0, 0, 527,
	205, 486, 460, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 483, 484, 239, 528, 215, 506, 207,
	0, 505, 374, 478, 487, 362, 352, 206, 485, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 199, 497, 0, 200, 0, 456, 498,
	529, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 473, 491,
	502, 509, 515, 516, 518, 519, 520, 521, 522, 524,
	523, 373, 289, 452, 306, 343, 0, 0, 391, 430,
	227, 495, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 548, 353, 443, 492, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 422, 423, 424, 425, 0, 191, 208,
	339, 0, 414, 271, 526, 504, 500, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 432, 433, 434, 435, 436, 439,
	440, 445, 446, 447, 448, 449, 457, 458, 462, 480,
	482, 494, 508, 513, 438, 281, 489, 514, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 503, 459, 214,
	426, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 299, 359, 366, 395, 400, 278, 254, 231, 419,
	228, 442, 465, 466, 467, 469, 363, 249, 399, 0,
	364, 346, 471, 472, 291, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 337, 250, 0, 0, 396, 0, 197, 0, 444,
	237, 347, 344, 477, 265, 256, 252, 235, 292, 354,
	394, 464, 388, 0, 341, 0, 0, 454, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 234, 300, 196, 379, 455,
	269, 0, 1503, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 322, 331, 330, 311, 312, 314, 316, 321, 328,
	334, 0, 0, 0, 0, 0, 248, 296, 255, 247,
	474, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 368, 240, 0, 0,
	0, 0, 510, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 305, 192, 212, 0, 0, 378, 421, 431,
	0, 0, 0, 238, 0, 429, 392, 493, 220, 267,
	418, 398, 427, 405, 270, 0, 0, 428, 342, 479,
	412, 490, 511, 512, 246, 372, 501, 468, 507, 525,
	213, 243, 386, 461, 496, 451, 365, 475, 476, 304,
	450, 277, 195, 340, 517, 211, 437, 229, 218, 481,
	499, 272, 416, 203, 463, 488, 226, 441, 0, 0,
	527, 205, 486, 460, 361, 301, 302, 204, 0, 417,
	251, 275, 241, 381, 483, 484, 239, 528, 215, 506,
	207, 0, 505, 374, 478, 487, 362, 352, 206, 485,
	360, 351, 307, 326, 327, 263, 286, 410, 345, 411,
	287, 370, 369, 371, 199, 497, 0, 200, 0, 456,
	498, 529, 221, 222, 224, 0, 262, 266, 274, 276,
	282, 283, 290, 338, 385, 409, 407, 413, 0, 473,
	491, 502, 509, 515, 516, 518, 519, 520, 521, 522,
	524, 523, 373, 289, 452, 306, 343, 0, 0, 391,
	430, 227, 495, 453, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 548, 353, 443, 492, 308, 320, 323,
	313, 332, 0, 333, 309, 310, 315, 317, 318, 319,
	324, 325, 329, 335, 422, 423, 424, 425, 0, 191,
	208, 339, 0, 414, 271, 526, 504, 500, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 280, 285, 288, 293, 294, 297,
	303, 349, 355, 356, 357, 358, 375, 376, 377, 380,
	383, 384, 387, 389, 390, 393, 397, 401, 402, 403,
	404, 406, 408, 415, 420, 432, 433, 434, 435, 436,
	439, 440, 445, 446, 447, 448, 449, 457, 458, 462,
	480, 482, 494, 508, 513, 438, 281, 489, 514, 0,
	348, 0, 0, 350, 264, 284, 295, 0, 503, 459,
	214, 426, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 299, 359, 366, 395, 400, 278, 254, 231,
	419, 228, 442, 465, 466, 467, 469, 363, 249, 399,
	0, 364, 346, 471, 472, 291, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 0,
	0, 0, 0, 0, 0, 0, 1403, 253, 0, 0,
	0, 0, 337, 250, 0, 0, 396, 0, 197, 0,
	444, 237, 347, 344, 477, 265, 256, 252, 235, 292,
	354, 394, 464, 388, 0, 341, 0, 0, 454, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 234, 300, 196, 379,
	455, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 322, 331, 330, 311, 312, 314, 316, 321,
	328, 334, 0, 0, 0, 0, 0, 248, 296, 255,
	247, 474, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 368, 240, 0,
	0, 0, 0, 510, 0, 0, 0, 0, 0, 0,
	0, 336, 0, 305, 192, 212, 0, 0, 378, 421,
	431, 0, 0, 0, 238, 0, 429, 392, 493, 220,
	267, 418, 398, 427, 405, 270, 0, 0, 428, 342,
	479, 412, 490, 511, 512, 246, 372, 501, 468, 507,
	525, 213, 243, 386, 461, 496, 451, 365, 475, 476,
	304, 450, 277, 195, 340, 517, 211, 437, 229, 218,
	481, 499, 272, 416, 203, 463, 488, 226, 441, 0,
	0, 527, 205, 486, 460, 361, 301, 302, 204, 0,
	417, 251, 275, 241, 381, 483, 484, 239, 528, 215,
	506, 207, 0, 505, 374, 478, 487, 362, 352, 206,
	485, 360, 351, 307, 326, 327, 263, 286, 410, 345,
	411, 287, 370, 369, 371, 199, 497, 0, 200, 0,
	456, 498, 529, 221, 222, 224, 0, 262, 266, 274,
	276, 282, 283, 290, 338, 385, 409, 407, 413, 0,
	473, 491, 502, 509, 515, 516, 518, 519, 520, 521,
	522, 524, 523, 373, 289, 452, 306, 343, 0, 0,
	391, 430, 227, 495, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 548, 353, 443, 492, 308, 320,
	323, 313, 332, 0, 333, 309, 310, 315, 317, 318,
	319, 324, 325, 329, 335, 422, 423, 424, 425, 0,
	191, 208, 339, 0, 414, 271, 526, 504, 500, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 280, 285, 288, 293, 294,
	297, 303, 349, 355, 356, 357, 358, 375, 376, 377,
	380, 383, 384, 387, 389, 390, 393, 397, 401, 402,
	403, 404, 406, 408, 415, 420, 432, 433, 434, 435,
	436, 439, 440, 445, 446, 447, 448, 449, 457, 458,
	462, 480, 482, 494, 508, 513, 438, 281, 489, 514,
	0, 348, 0, 0, 350, 264, 284, 295, 0, 503,
	459, 214, 426, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 299, 359, 366, 395, 400, 278, 254,
	231, 419, 228, 442, 465, 466, 467, 469, 363, 249,
	399, 0, 364, 346, 471, 472, 291, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 337, 250, 0, 0, 396, 0, 197,
	0, 444, 237, 347, 344, 477, 265, 256, 252, 235,
	292, 354, 394, 464, 388, 0, 341, 0, 0, 454,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 234, 300, 196,
	379, 455, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 1192, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 322, 331, 330, 311, 312, 314, 316,
	321, 328, 334, 0, 0, 0, 0, 0, 248, 296,
	255, 247, 474, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 368, 240,
	0, 0, 0, 0, 510, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 305, 192, 212, 0, 0, 378,
	421, 431, 0, 0, 0, 238, 0, 429, 392, 493,
	220, 267, 418, 398, 427, 405, 270, 0, 0, 428,
	342, 479, 412, 490, 511, 512, 246, 372, 501, 468,
	507, 525, 213, 243, 386, 461, 496, 451, 365, 475,
	476, 304, 450, 277, 195, 340, 517, 211, 437, 229,
	218, 481, 499, 272, 416, 203, 463, 488, 226, 441,
	0, 0, 527, 205, 486, 460, 361, 301, 302, 204,
	0, 417, 251, 275, 241, 381, 483, 484, 239, 528,
	215, 506, 207, 0, 505, 374, 478, 487, 362, 352,
	206, 485, 360, 351, 307, 326, 327, 263, 286, 410,
	345, 411, 287, 370, 369, 371, 199, 497, 0, 200,
	0, 456, 498, 529, 221, 222, 224, 0, 262, 266,
	274, 276, 282, 283, 290, 338, 385, 409, 407, 413,
	0, 473, 491, 502, 509, 515, 516, 518, 519, 520,
	521, 522, 524, 523, 373, 289, 452, 306, 343, 0,
	0, 391, 430, 227, 495, 453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 548, 353, 443, 492, 308,
	320, 323, 313, 332, 0, 333, 309, 310, 315, 317,
	318, 319, 324, 325, 329, 335, 422, 423, 424, 425,
	0, 191, 208, 339, 0, 414, 271, 526, 504, 500,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 280, 285, 288, 293,
	294, 297, 303, 349, 355, 356, 357, 358, 375, 376,
	377, 380, 383, 384, 387, 389, 390, 393, 397, 401,
	402, 403, 404, 406, 408, 415, 420, 432, 433, 434,
	435, 436, 439, 440, 445, 446, 447, 448, 449, 457,
	458, 462, 480, 482, 494, 508, 513, 438, 281, 489,
	514, 0, 348, 0, 0, 350, 264, 284, 295, 0,
	503, 459, 214, 426, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 299, 359, 366, 395, 400, 278,
	254, 231, 419, 228, 442, 465, 466, 467, 469, 363,
	249, 399, 0, 364, 346, 471, 472, 291, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 337, 250, 0, 0, 396, 0,
	197, 0, 444, 237, 347, 344, 477, 265, 256, 252,
	235, 292, 354, 394, 464, 388, 0, 341, 0, 0,
	454, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 234, 300,
	196, 379, 455, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 322, 331, 330, 311, 312, 314,
	316, 321, 328, 334, 0, 0, 0, 0, 0, 248,
	296, 255, 247, 474, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 368,
	240, 0, 0, 0, 0, 510, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 305, 192, 212, 0, 0,
	378, 421, 431, 0, 0, 0, 238, 0, 429, 392,
	493, 220, 267, 418, 398, 427, 405, 270, 0, 0,
	428, 342, 479, 412, 490, 511, 512, 246, 372, 501,
	468, 507, 525, 213, 243, 386, 461, 496, 451, 365,
	475, 476, 304, 450, 277, 195, 340, 517, 211, 437,
	229, 218, 481, 499, 272, 416, 203, 463, 488, 226,
	441, 0, 0, 527, 205, 486, 460, 361, 301, 302,
	204, 0, 417, 251, 275, 241, 381, 483, 484, 239,
	528, 215, 506, 207, 0, 505, 374, 478, 487, 362,
	352, 206, 485, 360, 351, 307, 326, 327, 263, 286,
	410, 345, 411, 287, 370, 369, 371, 199, 497, 0,
	200, 0, 456, 498, 529, 221, 222, 224, 0, 262,
	266, 274, 276, 282, 283, 290, 338, 385, 409, 407,
	413, 0, 473, 491, 502, 509, 515, 516, 518, 519,
	520, 521, 522, 524, 523, 373, 289, 452, 306, 343,
	0, 0, 391, 430, 227, 495, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 548, 353, 443, 492,
	308, 320, 323, 313, 332, 0, 333, 309, 310, 315,
	317, 318, 319, 324, 325, 329, 335, 422, 423, 424,
	425, 0, 191, 208, 339, 0, 414, 271, 526, 504,
	500, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 280, 285, 288,
	293, 294, 297, 303, 349, 355, 356, 357, 358, 375,
	376, 377, 380, 383, 384, 387, 389, 390, 393, 397,
	401, 402, 403, 404, 406, 408, 415, 420, 432, 433,
	434, 435, 436, 439, 440, 445, 446, 447, 448, 449,
	457, 458, 462, 480, 482, 494, 508, 513, 438, 281,
	489, 514, 0, 348, 0, 0, 350, 264, 284, 295,
	0, 503, 459, 214, 426, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 299, 359, 366, 395, 400,
	278, 254, 231, 419, 228, 442, 465, 466, 467, 469,
	363, 249, 399, 0, 364, 346, 471, 472, 291, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 382, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 337, 250, 0, 0, 396,
	0, 197, 0, 444, 237, 347, 344, 477, 265, 256,
	252, 235, 292, 354, 394, 464, 388, 0, 341, 0,
	0, 454, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 234,
	300, 196, 379, 455, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 322, 331, 330, 311, 312,
	314, 316, 321, 328, 334, 0, 0, 0, 0, 0,
	248, 296, 255, 247, 474, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 605, 0, 279, 0,
	368, 240, 0, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 0, 336, 0, 305, 192, 212, 0,
	0, 378, 421, 431, 0, 0, 0, 238, 0, 429,
	392, 493, 220, 267, 418, 398, 427, 405, 270, 0,
	0, 428, 342, 479, 412, 490, 511, 512, 246, 372,
	501, 468, 507, 525, 213, 243, 386, 461, 496, 451,
	365, 475, 476, 304, 450, 277, 195, 340, 517, 211,
	437, 229, 218, 481, 499, 272, 416, 203, 463, 488,
	226, 441, 0, 0, 527, 205, 486, 460, 361, 301,
	302, 204, 0, 417, 251, 275, 241, 381, 483, 484,
	239, 528, 215, 506, 207, 0, 505, 374, 478, 487,
	362, 352, 206, 485, 360, 351, 307, 326, 327, 263,
	286, 410, 345, 411, 287, 370, 369, 371, 199, 497,
	0, 200, 0, 456, 498, 529, 221, 222, 224, 0,
	262, 266, 274, 276, 282, 283, 290, 338, 385, 409,
	407, 413, 0, 473, 491, 502, 509, 515, 516, 518,
	519, 520, 521, 522, 524, 523, 373, 289, 452, 306,
	343, 0, 0, 391, 430, 227, 495, 453, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 353, 443,
	492, 308, 320, 323, 313, 332, 0, 333, 309, 310,
	315, 317, 318, 319, 324, 325, 329, 335, 422, 423,
	424, 425, 0, 191, 208, 339, 0, 414, 271, 526,
	504, 500, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 280, 285,
	288, 293, 294, 297, 303, 349, 355, 356, 357, 358,
	375, 376, 377, 380, 383, 384, 387, 389, 390, 393,
	397, 401, 402, 403, 404, 406, 408, 415, 420, 432,
	433, 434, 435, 436, 439, 440, 445, 446, 447, 448,
	449, 457, 458, 462, 480, 482, 494, 508, 513, 438,
	604, 489, 514, 0, 348, 0, 0, 350, 264, 284,
	295, 0, 503, 459, 214, 426, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 299, 359, 366, 395,
	400, 278, 254, 231, 419, 228, 442, 465, 466, 467,
	469, 363, 249, 399, 0, 364, 346, 471, 472, 291,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 337, 250, 0, 0,
	396, 0, 197, 0, 444, 237, 347, 344, 477, 265,
	256, 252, 235, 292, 354, 394, 464, 388, 0, 341,
	0, 0, 454, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	234, 300, 196, 379, 455, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 322, 331, 330, 311,
	312, 314, 316, 321, 328, 334, 0, 0, 0, 0,
	0, 248, 296, 255, 247, 474, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 368, 240, 0, 0, 551, 0, 510, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 305, 192, 212,
	0, 0, 378, 421, 431, 0, 0, 0, 238, 0,
	429, 392, 493, 220, 267, 418, 398, 427, 405, 270,
	0, 0, 428, 342, 479, 412, 490, 511, 512, 246,
	372, 501, 468, 507, 525, 213, 243, 386, 461, 496,
	451, 365, 475, 476, 304, 450, 277, 195, 340, 517,
	211, 437, 229, 218, 481, 499, 272, 416, 203, 463,
	488, 226, 441, 0, 0, 527, 205, 486, 460, 361,
	301, 302, 204, 0, 417, 251, 275, 241, 381, 483,
	484, 239, 528, 215, 506, 207, 0, 505, 374, 478,
	487, 362, 352, 206, 485, 360, 351, 307, 326, 327,
	263, 286, 410, 345, 411, 287, 370, 369, 371, 199,
	497, 0, 200, 0, 456, 498, 529, 221, 222, 224,
	0, 262, 266, 274, 276, 282, 283, 290, 338, 385,
	409, 407, 413, 0, 473, 491, 502, 509, 515, 516,
	518, 519, 520, 521, 522, 524, 523, 373, 289, 452,
	306, 343, 0, 0, 391, 430, 227, 495, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 353,
	443, 492, 308, 320, 323, 313, 332, 0, 333, 309,
	310, 315, 317, 318, 319, 324, 325, 329, 335, 422,
	423, 424, 425, 0, 191, 208, 339, 0, 414, 271,
	526, 504, 500, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 280,
	285, 288, 293, 294, 297, 303, 349, 355, 356, 357,
	358, 375, 376, 377, 380, 383, 384, 387, 389, 390,
	393, 397, 401, 402, 403, 404, 406, 408, 415, 420,
	432, 433, 434, 435, 436, 439, 440, 445, 446, 447,
	448, 449, 457, 458, 462, 480, 482, 494, 508, 513,
	438, 281, 489, 514, 0, 348, 0, 0, 350, 264,
	284, 295, 0, 503, 459, 214, 426, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 299, 359, 366,
	395, 400, 278, 254, 231, 419, 228, 442, 465, 466,
	467, 469, 363, 249, 399, 0, 364, 346, 471, 472,
	291, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 337, 250, 0,
	0, 396, 0, 197, 0, 444, 237, 347, 344, 477,
	265, 256, 252, 235, 292, 354, 394, 464, 388, 0,
	341, 0, 0, 454, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 234, 300, 196, 379, 455, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 322, 331, 330,
	311, 312, 314, 316, 321, 328, 334, 0, 0, 0,
	0, 0, 248, 296, 255, 247, 474, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 368, 240, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 305, 192,
	212, 0, 0, 378, 421, 431, 0, 0, 0, 238,
	0, 429, 392, 493, 220, 267, 418, 398, 427, 405,
	270, 0, 0, 428, 342, 479, 412, 490, 511, 512,
	246, 372, 501, 468, 507, 525, 213, 243, 386, 461,
	496, 451, 365, 475, 476, 304, 450, 277, 195, 340,
	517, 211, 437, 229, 218, 481, 499, 272, 416, 203,
	463, 488, 226, 441, 0, 0, 527, 205, 486, 460,
	361, 301, 302, 204, 0, 417, 251, 275, 241, 381,
	483, 484, 239, 528, 215, 506, 207, 0, 505, 374,
	478, 487, 362, 352, 206, 485, 360, 351, 307, 326,
	327, 263, 286, 410, 345, 411, 287, 370, 369, 371,
	199, 497, 0, 200, 0, 456, 498, 529, 221, 222,
	224, 0, 262, 266, 274, 276, 282, 283, 290, 338,
	385, 409, 407, 413, 0, 473, 491, 502, 509, 515,
	516, 518, 519, 520, 521, 522, 524, 523, 373, 289,
	452, 306, 343, 0, 0, 391, 430, 227, 495, 453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 548,
	353, 443, 492, 308, 320, 323, 313, 332, 0, 333,
	309, 310, 315, 317, 318, 319, 324, 325, 329, 335,
	422, 423, 424, 425, 0, 191, 208, 339, 0, 414,
	271, 526, 504, 500, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	280, 285, 288, 293, 294, 297, 303, 349, 355, 356,
	357, 358, 3168, 376, 377, 380, 383, 384, 387, 389,
	390, 393, 397, 401, 402, 403, 404, 406, 408, 415,
	420, 432, 433, 434, 435, 436, 439, 440, 445, 446,
	447, 448, 449, 457, 458, 462, 480, 482, 494, 508,
	513, 438, 281, 489, 514, 0, 348, 0, 0, 350,
	264, 284, 295, 0, 503, 459, 214, 426, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 299, 359,
	366, 395, 400, 278, 254, 231, 419, 228, 442, 465,
	466, 467, 469, 363, 249, 399, 0, 364, 346, 471,
	472, 291, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 337, 250,
	0, 0, 396, 0, 197, 0, 444, 237, 347, 344,
	477, 265, 256, 252, 235, 292, 354, 394, 464, 388,
	0, 341, 0, 0, 454, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 234, 300, 196, 379, 455, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 322, 331,
	330, 311, 312, 314, 316, 321, 328, 334, 0, 0,
	0, 0, 0, 248, 296, 255, 247, 474, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 368, 240, 0, 0, 0, 0, 510,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 305,
	192, 212, 0, 0, 378, 421, 431, 0, 0, 0,
	238, 0, 429, 392, 493, 220, 267, 418, 398, 427,
	405, 270, 0, 0, 428, 342, 479, 412, 490, 511,
	512, 246, 372, 501, 468, 507, 525, 213, 243, 386,
	461, 496, 451, 365, 475, 476, 304, 450, 277, 195,
	340, 517, 211, 437, 229, 218, 481, 499, 272, 416,
	203, 463, 488, 226, 441, 0, 0, 527, 205, 486,
	460, 361, 301, 302, 204, 0, 417, 251, 275, 241,
	381, 483, 484, 239, 528, 215, 506, 207, 0, 505,
	374, 478, 487, 362, 352, 206, 485, 360, 351, 307,
	326, 327, 263, 286, 410, 345, 411, 287, 370, 369,
	371, 199, 497, 0, 200, 0, 456, 498, 529, 221,
	222, 224, 0, 262, 266, 274, 276, 282, 283, 290,
	338, 385, 409, 407, 413, 0, 473, 491, 502, 509,
	515, 516, 518, 519, 520, 521, 522, 524, 523, 373,
	289, 452, 306, 343, 0, 0, 391, 430, 227, 495,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	548, 353, 443, 492, 308, 320, 323, 313, 332, 0,
	333, 309, 310, 315, 317, 318, 319, 324, 325, 329,
	335, 422, 423, 424, 425, 0, 191, 208, 339, 0,
	414, 271, 526, 504, 500, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 280, 285, 288, 293, 294, 297, 303, 349, 355,
	356, 357, 358, 375, 376, 377, 380, 383, 384, 387,
	389, 390, 393, 397, 401, 402, 403, 404, 406, 408,
	415, 420, 432, 433, 434, 435, 436, 439, 440, 445,
	446, 447, 448, 449, 457, 458, 462, 480, 482, 494,
	508, 513, 438, 281, 489, 514, 0, 348, 0, 0,
	350, 264, 284, 295, 0, 503, 459, 214, 426, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 299,
	359, 366, 395, 400, 278, 254, 231, 419, 228, 442,
	465, 466, 467, 469, 363, 249, 399, 0, 364, 346,
	471, 472, 291, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 382, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 337,
	250, 0, 0, 396, 0, 197, 0, 444, 237, 347,
	344, 477, 265, 256, 252, 235, 292, 354, 394, 464,
	388, 0, 341, 0, 0, 454, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 234, 300, 196, 379, 455, 269, 0,
	0, 0, 0, 188, 2712, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 322,
	331, 330, 311, 312, 314, 316, 321, 328, 334, 0,
	0, 0, 0, 0, 248, 296, 255, 247, 474, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 368, 240, 0, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	305, 192, 212, 0, 0, 378, 421, 431, 0, 0,
	0, 238, 0, 429, 392, 493, 220, 267, 418, 398,
	427, 405, 270, 0, 0, 428, 342, 479, 412, 490,
	511, 512, 246, 372, 501, 468, 507, 525, 213, 243,
	386, 461, 496, 451, 365, 475, 476, 304, 450, 277,
	195, 340, 517, 211, 437, 229, 218, 481, 499, 272,
	416, 203, 463, 488, 226, 441, 0, 0, 527, 205,
	486, 460, 361, 301, 302, 204, 0, 417, 251, 275,
	241, 381, 483, 484, 239, 528, 215, 506, 207, 0,
	505, 374, 478, 487, 362, 352, 206, 485, 360, 351,
	307, 326, 327, 263, 286, 410, 345, 411, 287, 370,
	369, 371, 199, 497, 0, 200, 0, 456, 498, 529,
	221, 222, 224, 0, 262, 266, 274, 276, 282, 283,
	290, 338, 385, 409, 407, 413, 0, 473, 491, 502,
	509, 515, 516, 518, 519, 520, 521, 522, 524, 523,
	373, 289, 452, 306, 343, 0, 0, 391, 430, 227,
	495, 453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 548, 353, 443, 492, 308, 320, 323, 313, 332,
	0, 333, 309, 310, 315, 317, 318, 319, 324, 325,
	329, 335, 422, 423, 424, 425, 0, 191, 208, 339,
	0, 414, 271, 526, 504, 500, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 280, 285, 288, 293, 294, 297, 303, 349,
	355, 356, 357, 358, 375, 376, 377, 380, 383, 384,
	387, 389, 390, 393, 397, 401, 402, 403, 404, 406,
	408, 415, 420, 432, 433, 434, 435, 436, 439, 440,
	445, 446, 447, 448, 449, 457, 458, 462, 480, 482,
	494, 508, 513, 438, 281, 489, 514, 0, 348, 0,
	0, 350, 264, 284, 295, 0, 503, 459, 214, 426,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	299, 359, 366, 395, 400, 278, 254, 231, 419, 228,
	442, 465, 466, 467, 469, 363, 249, 399, 0, 364,
	346, 471, 472, 291, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	337, 250, 0, 0, 396, 0, 197, 0, 444, 237,
	347, 344, 477, 265, 256, 252, 235, 292, 354, 394,
	464, 388, 0, 341, 0, 0, 454, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 234, 300, 196, 379, 455, 269,
	0, 0, 0, 0, 188, 2183, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	322, 331, 330, 311, 312, 314, 316, 321, 328, 334,
	0, 0, 0, 0, 0, 248, 296, 255, 247, 474,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 368, 240, 0, 0, 0,
	0, 510, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 305, 192, 212, 0, 0, 378, 421, 431, 0,
	0, 0, 238, 0, 429, 392, 493, 220, 267, 418,
	398, 427, 405, 270, 0, 0, 428, 342, 479, 412,
	490, 511, 512, 246, 372, 501, 468, 507, 525, 213,
	243, 386, 461, 496, 451, 365, 475, 476, 304, 450,
	277, 195, 340, 517, 211, 437, 229, 218, 481, 499,
	272, 416, 203, 463, 488, 226, 441, 0, 0, 527,
	205, 486, 460, 361, 301, 302, 204, 0, 417, 251,
	275, 241, 381, 483, 484, 239, 528, 215, 506, 207,
	0, 505, 374, 478, 487, 362, 352, 206, 485, 360,
	351, 307, 326, 327, 263, 286, 410, 345, 411, 287,
	370, 369, 371, 199, 497, 0, 200, 0, 456, 498,
	529, 221, 222, 224, 0, 262, 266, 274, 276, 282,
	283, 290, 338, 385, 409, 407, 413, 0, 473, 491,
	502, 509, 515, 516, 518, 519, 520, 521, 522, 524,
	523, 373, 289, 452, 306, 343, 0, 0, 391, 430,
	227, 495, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 548, 353, 443, 492, 308, 320, 323, 313,
	332, 0, 333, 309, 310, 315, 317, 318, 319, 324,
	325, 329, 335, 422, 423, 424, 425, 0, 191, 208,
	339, 0, 414, 271, 526, 504, 500, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 280, 285, 288, 293, 294, 297, 303,
	349, 355, 356, 357, 358, 375, 376, 377, 380, 383,
	384, 387, 389, 390, 393, 397, 401, 402, 403, 404,
	406, 408, 415, 420, 432, 433, 434, 435, 436, 439,
	440, 445, 446, 447, 448, 449, 457, 458, 462, 480,
	482, 494, 508, 513, 438, 281, 489, 514, 0, 348,
	0, 0, 350, 264, 284, 295, 0, 503, 459, 214,
	426, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 299, 359, 366, 395, 400, 278, 254, 231, 419,
	228, 442, 465, 466, 467, 469, 363, 249, 399, 0,
	0, 346, 471, 472, 291,
}

var yyPact = [...]int{
	3491, -1000, -409, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2220, 2400, -1000, -1000,
	-1000, -1000, 2409, -1000, 788, 1882, -1000, 2157, 6342, -1000,
	43683, 548, -1000, 42461, 547, 270, 43683, -1000, 216, -1000,
	191, 43683, 207, 41850, -1000, -1000, -252, 19233, 2081, 90,
	84, 43683, -1000, -1000, -1000, -1000, 2339, 1810, -1000, 374,
	-1000, -1000, -1000, -1000, -1000, -1000, 41239, -1000, -1000, -1000,
	2169, 2151, 2414, 710, 2129, -1000, 2266, 1810, -1000, 19233,
	2322, 2249, 18622, -1000, 18622, 474, -1000, -1000, 14335, -1000,
	-1000, 25353, 43683, 31463, 338, -1000, 2157, -1000, -1000, -1000,
	128, -1000, 352, 1720, -1000, 1717, -1000, 654, 688, 408,
	503, 501, 386, 383, 381, 373, 368, 366, 364, 363,
	416, -1000, 736, 736, -125, -127, 3513, 507, 451, 451,
	512, 2131, 2119, -1000, 850, -1000, 736, 736, 736, 396,
	736, 736, 736, 736, 333, 332, 736, 736, 736, 736,
	736, 736, 736, 736, 736, 736, 736, 736, 736, 736,
	736, 736, 736, 525, 2157, 303, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 43683,
	217, 43683, -1000, 628, 43683, 866, 866, 130, 866, 866,
	866, 866, 213, 752, 83, -1000, 208, 316, 196, 294,
	856, 246, -1000, -1000, 269, 856, 1343, -1000, 720, 193,
	-1000, 866, 866, -1000, 11871, 229, 11871, 11871, -1000, 2132,
	-1000, -1000, -1000, -1000, 1335, -1000, 506, -1000, -1000, -1000,
	-1000, 43683, 40628, 372, 750, -1000, -1000, -1000, 92, -1000,
	-1000, 1451, 1638, 19233, 1058, -1000, 1544, 689, -1000, -1000,
	-1000, -1000, -1000, 577, 19844, 19844, 19844, 19844, -1000, -1000,
	1596, 1596, 1596, 1596, 19844, 1596, -1000, 1596, 1596, 1596,
	1596, 19233, 1596, 1596, 1596, -1000, 1596, 1596, 1596, 1596,
	1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596,
	1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596,
	1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596,
	1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596,
	-1000, 1596, 623, 1596, 1596, 1596, 1596, 1596, -1000, -1000,
	-1000, -1000, 19844, 1596, 1596, 1596, 1596, 1596, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1596, 1596, 1596,
	1596, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22904, -1000, 16789, 1596, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 43683, -1000, 1596, 224, 43683, 43683,
	412, 2266, 1810, -1000, 2339, 2319, 374, -1000, 2546, 1480,
	1534, 1304, 1810, 1685, 43683, -1000, 1740, -1000, -1000, -1000,
	1997, 1228, 1341, -1000, -1000, -1000, -1000, 1812, 19233, -1000,
	-1000, 2391, -1000, 22293, 613, 938, 2389, 40017, -1000, 474,
	474, 1708, 13719, 39, -1000, -1000, -1000, 746, 29019, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2132, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1832, 43683, -1000, -1000, 6781, 1244, -1000,
	1872, -1000, 1822, -1000, 1837, 19233, 1890, 543, 1244, 526,
	522, 518, -1000, -34, -1000, -1000, -1000, -1000, -1000, -1000,
	736, 736, 736, -1000, 415, 2316, 6342, 5636, -1000, -1000,
	-1000, 39406, 1871, 1244, -1000, 1868, -1000, 874, 562, 626,
	626, 1244, -1000, -1000, 43683, 1244, 873, 867, 1244, 1244,
	43683, 43683, -1000, 38795, -1000, 38184, 37573, 1174, 43683, 36962,
	36351, 35740, 35129, 34518, -1000, 2005, -1000, 2076, -1000, -1000,
	-1000, 43683, 1244, 1244, 43683, 43683, 392, -1000, -1000, 43683,
	1244, -1000, -1000, 1159, 1158, 1153, 736, 736, 1129, 1337,
	1328, 1323, 736, 736, 1127, 1320, 30241, 1319, 319, 1124,
	1108, 1081, 1237, 1310, 212, 1305, 1234, 1035, 1051, 43683,
	1866, 43683, -1000, 263, 767, 436, 745, 2157, 2071, 1704,
	504, 542, 1244, 454, 454, 43683, -1000, 12487, -1000, -1000,
	1302, 19233, -1000, 858, 856, 856, -1000, -1000, -1000, -1000,
	-1000, -1000, 866, 43683, 858, -1000, -1000, -1000, 856, 866,
	43683, 866, 866, 866, 866, 856, 856, 856, 866, 43683,
	43683, 43683, 43683, 43683, 43683, 43683, 43683, 43683, 11871, 720,
	866, -273, -1000, 1291, -1000, 1993, -1000, -1000, -1000, -1000,
	-1000, -1000, 11871, 11871, -1000, -1000, -1000, -1000, 202, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -40, 1694,
	33907, -1000, -274, -275, -278, -280, -1000, -1000, -1000, -285,
	-289, -1000, -1000, -1000, 19233, 19233, 19233, 19233, -151, -1000,
	927, 19844, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 144,
	991, 19844, 19844, 19844, 19844, 19844, 19844, 19844, 19844, 19844,
	19844, 19844, 19844, 19844, 19844, 19844, -1000, -1000, 27186, 8158,
	8158, 689, 689, 689, 689, -1000, 18622, 19233, 19233, 689,
	-1000, 1244, 18622, 18622, 19233, 2153, 758, 1638, 43683, -1000,
	1304, -1000, -1000, -1000, 1162, -1000, 43683, 43683, 546, 19233,
	19233, 19233, 19233, 19233, 19233, 15562, 19233, 19233, 19233, 19233,
	19233, 19233, 19233, 19233, 19233, 19233, 19233, 19233, 19233, 19233,
	19233, 19233, 19233, 19233, 19233, 19233, 19233, 19233, 19233, 19233,
	19233, 19233, 1304, 19233, 1169, 19233, 19233, 14951, 12487, 18622,
	18622, 18622, 18622, 18622, 33296, -1000, -1000, -1000, -1000, -1000,
	19233, 19233, 19233, 19233, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 609, 1595, 1490, 1664, 19233, -1000, 1691, -1000, -111,
	24742, 19233, 1289, 2388, 1911, 43683, -1000, -1000, -1000, 2266,
	-1000, 2266, 1595, 2534, 2000, 18622, -1000, -1000, 2534, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1470, -1000, 43683,
	1685, 2229, 43683, 1987, 1288, 356, -1000, 19233, 19233, 1680,
	-1000, 1734, 43683, -1000, -151, -1000, 32685, -1000, -1000, 11255,
	-1000, 43683, 360, 43683, -1000, 24131, 32074, 13103, 39, -1000,
	13103, 1580, -1000, 61, 53, 16173, 687, -1000, -1000, -1000,
	3513, 21066, 1433, 687, 133, -1000, -1000, -1000, 1837, -1000,
	1837, 1837, 1837, 1837, 356, 356, 356, 356, -1000, -1000,
	-1000, -1000, -1000, 1861, 1859, -1000, 1837, 1837, 1837, 1837,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1858, 1858, 1858,
	1841, 1841, 441, -1000, 19233, 268, 31463, 2199, 1050, 1489,
	263, 471, 1904, 1244, 1244, 1244, 471, -1000, 1518, 1283,
	1227, -1000, -397, 1671, -1000, -1000, 2310, -1000, -1000, 771,
	907, 906, 691, 43683, 243, 350, -1000, 438, -1000, 31463,
	1244, 863, 626, 1244, -1000, 1244, -1000, -1000, -1000, -1000,
	-1000, 1244, -1000, -1000, 1666, -1000, 1533, 923, 899, 913,
	894, 1666, -1000, -1000, -85, 1666, -1000, 1666, -1000, 1666,
	-1000, 1666, -1000, 1666, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 764, 214, -192, 43683, 243, 27186, -1000,
	493, -1000, -1000, -1000, 27186, 27186, -1000, -1000, -1000, -1000,
	1286, 1277, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -382, 43683, -1000, 249, 742, 337, 390, 312, 43683,
	292, 2256, 2236, 2213, 257, 331, 43683, 43683, 454, 1950,
	43683, 2204, 43683, -1000, -1000, -1000, -1000, -1000, 1638, 43683,
	-1000, -1000, 866, 866, -1000, -1000, 43683, 866, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 866, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 43683, -1000, -1000, -1000, -1000, 43683, -1000, -1000,
	-1000, -1000, -1000, 126, 48, 375, -1000, -1000, -1000, -1000,
	-1000, 2263, -1000, 1638, 821, 857, -1000, 1596, -1000, -1000,
	1025, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 144, 19844,
	19844, 19844, 1556, 517, 1065, 1030, 1566, 952, 952, 970,
	970, 697, 697, 697, 697, 697, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1260, -1000, 1772, -1000, 2130, 1401,
	1304, 1772, 1772, 1336, 18622, -1000, -1000, 846, -1000, 19233,
	1304, -1000, -1000, 1304, 1304, 1657, 1628, 2378, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1647,
	1489, 1489, 1489, 1489, 1489, 19233, 1493, -1000, -1000, -1000,
	2449, 2386, 1304, 1451, 1304, 1591, -1000, 2371, 1489, 2297,
	2289, 2273, 1309, 2247, 2211, 2183, 1489, 1489, 1489, 1692,
	2177, 2158, 2142, 2056, 2036, 1970, 1961, 1955, 1942, 1489,
	-153, 1489, 1304, 1304, 1304, 1938, 1681, 1304, 18622, 18622,
	1582, 1596, 603, -1000, 1772, 1304, 1304, 1772, 1772, -1000,
	1934, 1928, 1875, 1844, 12487, 1304, -1000, 1664, 43683, -1000,
	-251, -1000, 4, 663, 1596, -1000, 30241, 1304, -1000, 7980,
	-1000, 44905, -1000, -1000, -1000, -1000, -1000, 28408, 1824, 2534,
	-1000, -1000, 1596, 1815, -1000, -1000, 356, 117, 27797, 685,
	685, 151, 1638, 1638, 19233, -1000, -1000, -1000, -1000, -1000,
	-1000, 594, 2293, 379, 1596, -1000, 1547, 2478, -1000, -1000,
	-1000, 2227, 21682, -1000, 1596, 1596, 43683, 1799, 1610, -1000,
	590, -1000, 1580, 39, 47, -1000, -1000, -1000, -1000, 1638,
	-1000, 1208, 362, 355, -1000, 468, -1000, -1000, -1000, -1000,
	2089, 121, -1000, -1000, -1000, 219, 356, -1000, -1000, -1000,
	-1000, -1000, -1000, 1254, 1254, -1000, -1000, -1000, -1000, -1000,
	1032, -1000, -1000, -1000, 1018, -1000, -1000, 1825, 1946, 268,
	-1000, -1000, 736, 1253, -1000, -1000, 2096, 736, 736, 43683,
	-1000, -1000, 1427, 2199, 249, 43683, 766, 1947, -1000, 1904,
	1904, 1904, 43683, -1000, -1000, -1000, -1000, -1000, -1000, -387,
	82, 401, -1000, -1000, -1000, 3585, 43683, 1813, -1000, 231,
	-1000, 1425, -1000, 43683, -1000, 1807, 1855, 1244, 1244, -1000,
	-1000, -1000, 43683, 1596, -1000, -1000, -1000, -1000, 528, 2155,
	295, -1000, -1000, -174, -1000, -1000, 243, 231, 687, 1244,
	-1000, -1000, -1000, -1000, -1000, -389, 1775, 515, 248, 348,
	43683, 43683, 43683, 43683, 43683, 605, -1000, -1000, -1000, -1000,
	218, -1000, -1000, 218, -1000, -1000, -1000, -1000, 310, 481,
	-1000, 43683, 43683, 669, -1000, -1000, -1000, 856, -1000, -1000,
	856, -1000, -1000, -1000, -1000, -1000, 2152, 43683, 34, -332,
	-1000, -317, 19233, -1000, -1000, -1000, -1000, 1077, 516, 1065,
	19844, 19844, 18622, -73, 768, 768, 27186, -1000, -1000, -1000,
	19233, 19233, 1586, 753, -1000, 19233, 888, -1000, -1000, -1000,
	19233, 19233, 19233, 1304, 344, -1000, -1000, -1000, -1000, -1000,
	2366, -1000, 19233, 19233, 19233, -1000, -1000, 19233, 19233, -1000,
	19233, 19233, 20455, 1304, 20455, 19233, 19233, 20455, -1000, -1000,
	-1000, -1000, 20455, 19233, 19233, 19233, 19233, 19233, 19233, 19233,
	19233, 19233, -1000, -1000, 31463, 95, -153, -153, -153, 1013,
	95, 993, -1000, 1772, 1772, 18622, 12487, -1000, -1000, -1000,
	-1000, -1000, 19233, 19233, 19233, 19233, -1000, -1000, -1000, -1000,
	-1000, -1000, 663, -1000, 626, 626, 626, 43683, -1000, -1000,
	-1000, -1000, -1000, -1000, 1570, 2243, -1000, 2022, 2018, 2350,
	2293, -1000, 24131, 2534, -1000, -1000, 43683, -245, -1000, 2058,
	2100, 685, 685, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	10639, 2266, 19233, 1943, 43683, 184, -1000, 23520, 43683, 43683,
	24131, 24131, 24131, 24131, 24131, -1000, 1973, 1972, -1000, 2024,
	1990, 2048, 43683, -1000, 1762, 1304, 2319, 21682, 374, 19233,
	25964, 1483, 24131, -1000, -1000, 24131, 43683, 10023, -1000, -1000,
	16, 41, -1000, -1000, -1000, -1000, 3513, -1000, -1000, 367,
	2215, 2079, -1000, -1000, -1000, -1000, -1000, 1757, -1000, 1754,
	1551, 1701, 214, -1000, 1803, 2135, 736, 736, -1000, 1012,
	-1000, 1244, 1250, 1249, -1000, -1000, -1000, 514, -1000, 2188,
	43683, 1936, 1929, 1926, -1000, -396, 1011, 1847, 1783, 19233,
	1843, 2309, 1525, 43683, -1000, -1000, 43683, -1000, 170, -1000,
	268, 43683, -1000, -1000, -1000, 350, 43683, -1000, 7664, -1000,
	-1000, -1000, 231, -1000, -1000, -1000, -1000, -1000, -1000, 43683,
	250, -1000, 1842, 996, -1000, -1000, 1895, -1000, -1000, -1000,
	-1000, 223, 336, 220, 1248, 220, -1000, 43683, 667, 1946,
	43683, -1000, -1000, -1000, 866, 866, -1000, -1000, 2134, -1000,
	1244, 1489, 19844, 19844, -1000, 689, -1000, 1596, -133, 1837,
	1837, -1000, 1837, 1841, -1000, 1837, 182, 1837, 171, 1837,
	-1000, -1000, -133, 1304, 1676, 1036, -41, -1000, 1638, 19233,
	1839, 1831, 1489, -1000, 1795, 1788, 19233, 1489, 1489, 1489,
	-1000, 1638, 1309, 1817, 1497, -1000, -1000, -1000, -1000, 1549,
	1489, 1798, -242, 1304, 1678, 1678, 1678, 1678, 1678, 1664,
	1664, 1664, 1664, 43683, -1000, -153, -1000, -1000, -191, -193,
	-1000, -1000, -1000, 1304, 1304, 1304, -153, 1529, 1529, 1529,
	-1000, -1000, 1304, -1000, 1672, 1667, 1778, 1662, -1000, 2262,
	2262, 2262, 1577, 44294, 43683, -1000, -1000, -1000, -1000, 2293,
	2338, 1527, -1000, -1000, 117, 466, -1000, 2077, 2100, -1000,
	2308, 2049, 2304, -1000, -1000, -1000, -1000, -1000, 1638, -1000,
	2159, 1568, -1000, 739, 1487, -1000, -1000, 18011, 1603, 2014,
	589, 1577, 1539, 2478, 1908, 1925, 2565, -1000, -1000, -1000,
	-1000, 1964, -1000, 1956, -1000, -1000, 1740, -1000, -1000, 1490,
	1304, 1462, 360, 24131, 1477, 1477, -1000, 585, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 932, 7914, 2407, -1000, 1231,
	-1000, 1193, 198, 1006, -1000, -1000, 736, 736, -1000, 851,
	822, -1000, 43683, 1781, -1000, 356, 1229, 356, 1004, -1000,
	1000, -1000, -1000, -1000, -1000, 2019, 1965, -1000, -1000, -1000,
	-1000, 43683, -1000, -1000, 43683, 43683, 43683, 1770, 2295, -1000,
	19233, 1760, 738, 1769, 43683, 43683, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 464, 736, -360,
	330, 322, 736, 736, 736, -404, -1000, -1000, 1573, 1560,
	-1000, -107, -1000, 19233, -1000, -1000, -1000, 1062, 1062, -1000,
	1740, -1000, -1000, -1000, 1388, -1000, -1000, -88, 43683, 43683,
	43683, 43683, -1000, 958, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 689, 19844, 1304, -1000,
	-1000, 356, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1304,
	-1000, 19233, -1000, 19233, -1000, 2266, 1221, 1638, 19233, 19233,
	-1000, 995, 994, 1489, -1000, -1000, -1000, 1304, 20455, -1000,
	20455, -1000, 19233, 240, 768, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1304, 358, -1000, -1000, -1000,
	-1000, 2345, 2345, 2345, -1000, 1304, 19233, 1304, 1304, -1000,
	-1000, 19233, -1000, 19233, 19233, -1000, 19233, 1596, 2103, 1596,
	1596, 25964, -1000, -1000, 2338, 2321, 2292, 2033, 2040, 2040,
	2077, -1000, 2291, 2290, -1000, 1214, 2280, 1211, 793, -1000,
	43683, 19233, 184, -1000, 382, 43683, 184, 43683, -1000, 2274,
	-1000, -1000, 19233, 1750, -1000, 19233, -1000, -1000, -1000, -1000,
	-1000, -1000, 8158, 2293, 1477, -1000, -1000, 703, -1000, 19233,
	-1000, -1000, -1000, 6979, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1209, 1207, -1000, -1000, 1748, 19233, -1000, -1000,
	-1000, 1381, 1372, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1740, -1000, -1000, -1000, -1000, 350, -394, 1752, 43683,
	982, -1000, 1553, 1525, 342, 184, 1202, 736, 736, 736,
	980, 977, 30241, 1503, -1000, 43683, 430, -1000, 350, -1000,
	-128, -130, 1489, -1000, -1000, 2214, -1000, -1000, 12487, -1000,
	-1000, 1738, 1899, -1000, -1000, -1000, 397, -1000, -1000, -1000,
	1489, 1489, 1304, -1000, 1489, 1489, 1370, 1355, -1000, -1000,
	1497, -1000, 1658, -1000, 240, 1304, 1919, -1000, -1000, 8158,
	-1000, -1000, 2274, 2271, 95, -1000, -1000, 244, 95, 95,
	95, 1638, 95, 95, 1654, 1489, 1601, 1414, 26575, -1000,
	2270, 2269, 30852, 30852, 663, 2321, -162, 19233, 19233, 2008,
	960, -1000, -1000, -1000, -1000, 1188, 1186, -1000, 1183, -1000,
	2404, -1000, 1638, -1000, 184, -1000, 565, 1487, -1000, 2266,
	1638, 43683, 1638, 108, 2274, -1000, 1489, -1000, 1596, 1596,
	1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596,
	1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596,
	1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596,
	1596, 1596, 1596, 1596, -1000, -1000, 43683, 1744, -1000, -1000,
	2209, 1495, 81, -1000, 1485, -1000, -1000, 176, -1000, 19233,
	-1000, 30241, 1182, 1177, -1000, -1000, -1000, -1000, -404, -1000,
	-1000, -1000, -1000, -1000, -1000, 374, 1508, -1000, 730, 43683,
	43683, 1304, 321, -98, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 19233, -1000, 1304, 1916, -1000, -210, -1000,
	-365, 19233, -153, -1000, -1000, -153, -153, -153, -153, -153,
	-1000, 19233, -1000, -1000, 19233, -1000, 19233, 1460, -1000, -1000,
	-1000, -1000, -1000, 1460, 1460, -1000, -162, -1000, 1499, -1000,
	43683, 1638, 1451, -1000, 959, -1000, -1000, -1000, -1000, -1000,
	43683, 1487, 43683, -1000, 1454, 1304, 1596, 2266, -1000, 1377,
	-1000, 374, -1000, 1736, 1783, -1000, -1000, -1000, 17400, -1000,
	-1000, -1000, -1000, -1000, 181, -87, 12487, 9407, 1375, -1000,
	-1000, 1985, -83, -100, 1309, -1000, -296, -1000, -1000, -1000,
	-1000, 179, -1000, -1000, 1451, -1000, -1000, -1000, -1000, -1000,
	-1000, 1367, 1344, 1332, 29630, -1000, -1000, -1000, -1000, -162,
	-1000, -1000, 2207, -1000, -1000, 1449, -1000, -1000, 25964, 43072,
	-1000, -71, 241, -87, 19233, 1723, 1304, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 30, -1000, -1000, -1000, -1000,
	-1000, 1895, -1000, 1984, -1000, 1304, -1000, 168, -335, -180,
	-181, -1000, -1000, -1000, 19233, -1000, 19233, -1000, 19233, -1000,
	-1000, -1000, 43683, 1596, -1000, 1369, -1000, 6552, -205, 1915,
	-1000, -45, -1000, -1000, -1000, 925, 1060, -1000, -1000, -1000,
	-1000, -1000, -1000, 1739, 43683, -1000, 440, -1000, -1000, -88,
	-92, -1000, 800, -1000, -1000, -1000, -1000, -1000, 1299, 1290,
	1489, -1000, 43683, -1000, 43072, -198, 687, 8158, -1000, 1914,
	1913, 2365, -1000, -1000, -1000, -1000, -1000, -1000, -406, 1352,
	251, -1000, -106, 168, -1000, 19233, -1000, 19233, -1000, 1304,
	-1000, -1000, 2180, 108, -1000, 2398, -1000, 2395, 817, 817,
	-1000, 976, -406, -1000, -113, -1000, 1489, 1489, -1000, -206,
	-1000, -1000, -1000, -1000, -1000, 437, 1038, -1000, -1000, -1000,
	-1000, -1000, -1000, 8158, -1000, -1000, -1000, 242, 242, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 2802, 2801, 35, 4, 43, 42, 2797, 37, 124,
	208, 31, 200, 127, 2796, 2794, 2792, 2786, 2784, 2783,
	2782, 241, 234, 233, 2780, 2779, 2778, 2777, 2776, 2775,
	2774, 2773, 2771, 2770, 231, 181, 199, 2765, 2764, 2763,
	145, 196, 105, 107, 190, 2762, 2757, 93, 2756, 2755,
	2753, 194, 193, 191, 853, 2747, 192, 136, 61, 2746,
	2740, 2737, 2735, 2733, 2732, 2731, 2729, 2728, 2727, 2726,
	2725, 2723, 2722, 2721, 2719, 2718, 205, 2716, 2715, 21,
	2714, 95, 2713, 2710, 2709, 2708, 12, 2707, 2706, 15,
	53, 2705, 2704, 48, 2703, 2702, 74, 2701, 2700, 23,
	2699, 26, 2698, 28, 2697, 2696, 150, 2695, 2694, 2692,
	45, 2691, 2690, 2689, 2686, 2684, 2683, 2681, 163, 2680,
	2679, 2678, 2677, 210, 2675, 2673, 269, 131, 134, 2672,
	2671, 126, 197, 2670, 148, 2669, 2668, 2667, 172, 2666,
	3391, 2665, 2664, 78, 85, 2663, 123, 2661, 11, 98,
	76, 9, 16, 1, 2660, 2659, 75, 101, 2658, 128,
	90, 2657, 119, 143, 2656, 2655, 14, 7, 2654, 2,
	6, 3, 84, 2653, 2652, 144, 2651, 2650, 2649, 120,
	2648, 2647, 3261, 2646, 111, 158, 129, 89, 2645, 52,
	67, 2644, 2643, 2640, 2639, 2636, 66, 2629, 2627, 2626,
	162, 121, 182, 2625, 44, 58, 65, 155, 2624, 80,
	100, 2623, 160, 159, 2616, 94, 70, 46, 47, 2608,
	118, 153, 141, 55, 116, 157, 2607, 2606, 73, 88,
	2600, 2593, 2592, 2591, 183, 2590, 2589, 86, 2580, 69,
	2579, 201, 2577, 19, 2574, 71, 50, 2573, 83, 125,
	81, 36, 2571, 186, 2568, 68, 180, 151, 178, 2564,
	2561, 2559, 2556, 198, 330, 2554, 2552, 137, 184, 168,
	169, 106, 2549, 334, 2542, 2539, 108, 1337, 4840, 2537,
	33, 179, 2535, 2531, 6419, 175, 59, 30, 2530, 170,
	2526, 2523, 2519, 202, 206, 133, 1111, 77, 2518, 2517,
	92, 20, 2516, 2515, 2513, 2512, 2511, 2508, 96, 41,
	40, 39, 203, 82, 18, 122, 176, 97, 2496, 2495,
	2494, 147, 102, 2491, 177, 174, 149, 130, 2489, 185,
	164, 138, 2487, 251, 34, 2486, 2485, 2484, 2483, 110,
	2482, 2480, 2478, 2477, 173, 165, 146, 104, 2470, 103,
	140, 171, 166, 63, 2468, 49, 2461, 2460, 32, 188,
	29, 2459, 17, 79, 91, 27, 132, 236, 2457, 0,
	2456, 22, 187, 331, 167, 2452, 2451, 8, 10, 13,
	2450, 2448, 2446, 2442, 161, 2441, 2440, 2439, 2438, 25,
	60, 24, 5, 139, 99, 2437, 2432, 4431, 2151, 152,
	2431, 209,
}

//line sql.y:7551
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 395, 396, 396, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 369, 369,
	369, 372, 372, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 104, 104, 22, 23, 23, 23, 23,
	399, 399, 177, 177, 175, 175, 176, 176, 248, 248,
	24, 25, 25, 258, 258, 257, 257, 257, 259, 259,
	259, 259, 296, 296, 26, 26, 26, 26, 26, 124,
	124, 371, 371, 370, 362, 362, 361, 361, 360, 368,
	368, 367, 367, 366, 38, 39, 48, 48, 48, 48,
	49, 50, 373, 373, 335, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 337, 337, 323, 323, 336, 336, 336, 336, 336,
	336, 336, 322, 322, 135, 135, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 388, 388, 388, 387, 387, 227, 227,
	227, 227, 227, 227, 227, 227, 145, 145, 156, 156,
	156, 156, 156, 143, 143, 144, 142, 142, 142, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 392, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 392, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 392, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 392, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 392, 392, 155, 155, 151, 151, 151, 152, 152,
	152, 153, 153, 389, 389, 389, 389, 301, 301, 301,
	301, 304, 304, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 303, 303, 303, 303, 303, 305, 305, 305,
	305, 305, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 307, 307,
	307, 307, 307, 307, 307, 307, 321, 321, 308, 308,
	316, 316, 317, 317, 317, 318, 318, 318, 319, 319,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 315,
	315, 314, 314, 314, 324, 349, 349, 348, 348, 346,
	346, 346, 346, 346, 346, 346, 346, 333, 333, 343,
	343, 343, 343, 343, 332, 332, 328, 328, 328, 329,
	329, 330, 330, 327, 327, 331, 331, 345, 345, 344,
	344, 325, 325, 326, 326, 351, 390, 390, 390, 390,
	390, 391, 391, 352, 380, 382, 382, 382, 381, 381,
	378, 379, 377, 377, 377, 377, 377, 81, 81, 81,
	271, 271, 272, 272, 341, 341, 340, 340, 340, 342,
	342, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 266, 266, 266, 376, 376, 376, 376, 376,
	376, 375, 375, 375, 338, 338, 338, 374, 374, 57,
	57, 210, 210, 393, 393, 394, 394, 394, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 106, 106, 107, 107, 107, 107, 109,
	109, 109, 354, 354, 58, 58, 3, 3, 165, 167,
	168, 168, 166, 166, 166, 166, 166, 166, 60, 60,
	59, 59, 170, 169, 171, 171, 171, 1, 1, 2,
	2, 4, 4, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 320, 320, 320, 353, 353,
	355, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 112, 111, 111, 110, 113, 113, 113, 113, 113,
	113, 113, 113, 357, 357, 357, 61, 61, 358, 309,
	310, 311, 5, 6, 334, 356, 120, 120, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 265,
	265, 274, 274, 264, 264, 289, 289, 289, 267, 267,
	267, 268, 268, 386, 386, 386, 261, 261, 64, 64,
	64, 66, 66, 67, 68, 68, 291, 291, 292, 292,
	69, 70, 82, 82, 82, 82, 82, 82, 105, 105,
	105, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 383, 383, 384, 385, 385, 385, 385,
	73, 75, 31, 31, 31, 31, 31, 31, 130, 130,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 125, 125, 125, 119, 119, 400, 76, 77,
	77, 123, 123, 123, 116, 116, 116, 122, 122, 122,
	16, 16, 17, 247, 247, 18, 18, 127, 127, 129,
	129, 129, 129, 129, 131, 131, 131, 131, 131, 131,
	131, 126, 126, 128, 128, 128, 128, 282, 282, 282,
	281, 281, 159, 159, 161, 160, 160, 162, 162, 163,
	163, 163, 163, 208, 208, 185, 185, 245, 245, 243,
	243, 244, 244, 246, 246, 246, 246, 249, 249, 164,
	164, 164, 164, 172, 172, 173, 173, 174, 174, 290,
	290, 287, 287, 287, 286, 286, 178, 178, 178, 180,
	179, 179, 179, 179, 181, 181, 183, 183, 182, 182,
	184, 189, 189, 188, 188, 186, 186, 186, 186, 187,
	187, 187, 187, 190, 190, 140, 140, 140, 140, 140,
	140, 140, 154, 154, 154, 154, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 234, 234, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 148, 83, 83, 83, 84,
	84, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	86, 141, 141, 88, 88, 87, 87, 203, 203, 279,
	279, 89, 90, 90, 93, 93, 92, 91, 91, 97,
	97, 94, 94, 96, 96, 95, 98, 98, 99, 100,
	100, 262, 262, 191, 191, 199, 199, 199, 199, 192,
	192, 192, 192, 192, 192, 192, 200, 200, 200, 207,
	201, 201, 197, 197, 197, 197, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 215, 215, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 298, 298, 365, 365, 364, 364,
	363, 363, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 401, 401, 312, 312, 312, 312, 198,
	198, 198, 198, 198, 121, 121, 121, 121, 121, 295,
	295, 295, 299, 299, 299, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	300, 300, 213, 213, 117, 117, 211, 211, 212, 214,
	214, 209, 209, 209, 194, 194, 194, 216, 216, 217,
	217, 101, 102, 102, 103, 103, 218, 218, 220, 219,
	219, 221, 222, 222, 222, 223, 223, 224, 224, 224,
	47, 47, 47, 47, 47, 42, 42, 42, 42, 43,
	43, 43, 43, 132, 132, 132, 132, 134, 134, 133,
	133, 79, 79, 80, 80, 80, 138, 138, 139, 139,
	139, 136, 136, 137, 137, 241, 241, 225, 225, 225,
	232, 232, 232, 228, 228, 230, 230, 230, 231, 231,
	231, 229, 238, 238, 240, 240, 239, 239, 235, 235,
	236, 236, 237, 237, 237, 233, 233, 193, 193, 193,
	193, 193, 242, 242, 242, 242, 250, 250, 204, 204,
	206, 206, 205, 205, 158, 251, 251, 255, 252, 252,
	256, 256, 256, 256, 256, 253, 253, 254, 254, 283,
	283, 283, 260, 260, 273, 273, 269, 269, 270, 270,
	263, 263, 275, 275, 275, 74, 202, 202, 350, 350,
	347, 278, 278, 280, 280, 284, 284, 288, 288, 285,
	285, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 397, 398,
	293, 294, 294, 294,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 7, 7, 6,
	2, 2, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 5, 5, 6, 4, 4, 8, 6,
	8, 6, 8, 5, 4, 2, 2, 1, 2, 2,
	2, 8, 8, 6, 5, 4, 4, 4, 4, 4,
	7, 4, 6, 6, 6, 4, 4, 4, 7, 8,
	6, 5, 6, 8, 11, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 4, 6, 5, 5, 5, 9,
	9, 9, 6, 9, 9, 9, 1, 0, 2, 6,
	8, 10, 12, 14, 6, 8, 8, 10, 12, 14,
	6, 8, 10, 12, 0, 2, 0, 2, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 2, 3, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 2, 1, 3, 0, 1, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 4, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -395, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -397,
	11, 438, 256, 255, 28, -12, 476, 86, -396, 620,
	-241, -225, 22, 33, 29, -224, -220, -123, -225, 20,
	18, 7, -76, -400, -76, -76, 12, 13, -76, -335,
	-337, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -359, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 476, 479, -342, 223, 229, 230,
	439, 123, 122, 75, 225, -339, 361, 509, 590, -56,
	592, 102, 104, 591, 44, 235, 593, 594, 595, 516,
	596, 244, 597, 598, 599, 600, 606, 558, 607, 608,
	609, 124, 7, -76, -288, -284, -369, -277, 89, 90,
	91, 473, 247, 507, 508, 296, 81, 41, 482, 358,
	361, 509, 590, 307, 321, 315, 342, 334, 474, 510,
	483, 299, 248, 284, 584, 332, 132, 592, 302, 511,
	262, 366, 367, 512, 368, 102, 310, 405, 605, 301,
	513, 603, 104, 591, 79, 51, 587, 44, 257, 330,
	231, 326, 593, 285, 514, 485, 278, 123, 120, 612,
	36, 324, 50, 30, 602, 122, 49, 594, 147, 515,
	595, 516, 370, 349, 578, 48, 371, 263, 517, 84,
	268, 478, 305, 586, 372, 325, 373, 295, 601, 228,
	518, 570, 374, 375, 579, 519, 350, 354, 520, 397,
	376, 619, 52, 521, 522, 580, 121, 523, 78, 596,
	80, 319, 320, 524, 293, 246, 399, 346, 451, 458,
	459, 108, 109, 454, 110, 460, 111, 461, 462, 463,
	452, 112, 105, 453, 464, 465, 347, 348, 113, 466,
	107, 106, 455, 457, 114, 467, 244, 35, 377, 475,
	297, 58, 272, 400, 46, 352, 616, 45, 574, 525,
	577, 345, 341, 448, 53, 526, 527, 528, 529, 597,
	344, 318, 340, 611, 4, 290, 598, 62, 230, 356,
	355, 357, 279, 396, 337, 530, 531, 532, 251, 82,
	533, 327, 21, 534, 535, 378, 286, 536, 56, 537,
	538, 403, 260, 539, 54, 599, 39, 540, 265, 613,
	600, 541, 542, 543, 544, 267, 545, 380, 546, 379,
	351, 353, 274, 381, 477, 547, 306, 323, 264, 604,
	548, 252, 468, 469, 470, 471, 585, 266, 271, 259,
	404, 253, 549, 550, 551, 552, 553, 300, 569, 554,
	555, 311, 606, 449, 43, 556, 557, 558, 559, 560,
	294, 289, 398, 407, 61, 83, 363, 561, 562, 583,
	317, 287, 563, 308, 55, 607, 608, 609, 281, 610,
	9, 617, 618, 383, 124, 291, 292, 47, 338, 273,
	564, 303, 565, 328, 329, 343, 316, 339, 309, 571,
	275, 384, 450, 261, 566, 406, 288, 359, 364, 304,
	481, 280, 385, 582, 480, 336, 333, 282, 567, 386,
	236, 276, 277, 568, 572, 387, 388, 298, 389, 390,
	391, 392, 393, 395, 394, 283, 479, 314, 331, 365,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 447, 234,
	-76, 234, -182, -284, 234, -253, 367, -274, 369, 382,
	377, 387, 375, -265, 378, 380, 274, -386, 397, 234,
	384, 222, 370, 379, 388, 389, 298, 395, 390, 394,
	283, 391, 392, 393, -369, 174, 595, 610, 132, 335,
	374, 372, 398, 574, -284, 309, -291, 314, -278, -369,
	-277, 312, -182, -82, 570, 226, -293, -293, -125, 574,
	576, -201, -140, 140, -154, -157, -146, -149, -195, -196,
	-197, -198, -155, -209, 163, 164, 171, 141, -207, -158,
	26, 472, 440, 439, 174, 31, -148, 68, 69, 442,
	443, 143, 57, 415, 416, -156, 410, 417, 412, 445,
	446, 115, 447, 105, 107, 106, 448, 449, 450, 347,
	348, 451, 452, 453, 108, 109, 110, 111, 112, 113,
	114, 454, 457, 455, 456, 458, 459, 460, 465, 466,
	461, 462, 463, 464, 467, -85, -97, 498, 497, -98,
	-147, -278, -284, 239, 409, 233, 169, 438, -150, -144,
	-8, -205, 217, 408, 413, 414, 418, 411, 484, 486,
	501, 502, 504, 489, 494, 493, 496, 468, 469, 470,
	471, -369, -277, -152, -151, -191, 92, 98, 103, 99,
	-392, 116, -397, 588, 93, 94, 95, 96, 97, 117,
	118, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 44, 383, 383, -182, -76, -76, -76,
	-76, -218, -123, -220, -10, -8, -397, 8, -76, -8,
	-9, -13, -34, -36, 503, -35, -284, -225, -241, 12,
	159, 42, 50, -223, -224, -12, -8, -140, 19, 23,
	24, -128, 165, -140, -284, -77, -128, -263, 238, -76,
	-76, -252, -296, 309, -256, 398, 397, -280, -254, -278,
	-276, -253, 396, 227, 23, 139, 25, 27, 142, 174,
	127, 19, 143, 37, 229, 335, 245, 173, 241, 439,
	222, 72, 484, 410, 412, 408, 415, 441, 442, 409,
	369, 31, 13, 486, 28, 255, 24, 38, 167, 224,
	146, 487, 258, 26, 256, 115, 118, 489, 22, 75,
	250, 14, 243, 40, 16, 490, 491, 17, 239, 238,
	159, 235, 70, 11, 217, 29, 155, 66, 492, 134,
	493, 494, 495, 496, 128, 68, 156, 20, 614, 413,
	414, 33, 575, 472, 269, 169, 73, 59, 576, 140,
	411, 497, 498, 116, 499, 119, 76, 581, 136, 18,
	71, 42, 500, 270, 501, 240, 615, 502, 401, 503,
	157, 225, 438, 69, 158, 588, 504, 589, 233, 382,
	8, 444, 32, 254, 242, 126, 67, 505, 234, 145,
	445, 446, 237, 129, 117, 7, 133, 34, 12, 74,
	77, 416, 417, 418, 57, 125, 476, 144, 15, 506,
	402, 138, 132, -336, 156, -322, -326, -278, 249, -352,
	245, -182, -345, -344, -278, -397, -124, -273, 235, 243,
	242, 133, -373, 136, 291, 409, 233, -51, -52, -53,
	-253, 173, 594, -106, 266, 270, 87, 87, -326, -325,
	-324, -374, 270, 249, -351, -343, 241, 250, -332, 242,
	243, -327, 235, 134, -374, -327, 240, 250, 245, 249,
	270, 270, 124, 270, 124, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 265, -333, 148, -333, 480, 480,
	-339, -374, 245, 235, -374, -374, 237, 35, 35, -275,
	-327, 237, 25, -333, -333, -333, -253, 173, -333, -333,
	-333, -333, 278, 278, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, 234, -373, -132, 394, 298, 81, -54, 280, -37,
	-182, -273, 235, 236, -373, 267, -182, 218, -182, -267,
	156, 15, -267, -264, 383, 381, 368, 373, -267, -267,
	-267, -267, 281, 366, -328, 235, 35, 246, 383, 281,
	366, 281, 282, 281, 282, 376, 386, 281, -289, 14,
	159, 409, 371, 375, 274, 234, 275, 236, 385, 282,
	-289, 93, -268, 156, 383, 277, -267, -267, -294, -397,
	-280, 335, -369, 577, -294, -294, 32, 90, 237, -278,
	-78, -278, 93, -15, -11, -22, -21, -23, 148, -130,
	383, -118, 174, 595, 578, 579, 580, 577, 380, 585,
	583, 581, 281, 582, 87, 136, 138, 139, 4, -140,
	155, -192, 148, 149, 150, 151, 152, 153, 154, 159,
	140, 142, 156, -234, 137, 160, 161, 162, 163, 164,
	165, 166, 168, 167, 169, 170, 157, 158, 173, 220,
	221, -149, -149, -149, -149, -207, -397, -397, -397, -149,
	-262, -397, -397, -397, -397, -397, -213, -140, -397, -401,
	-397, -401, -401, -312, -397, -312, -397, -397, -397, -397,
	-397, -397, -397, -397, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -397, -397, -397, -397, 218, -397,
	-397, -397, -397, -397, -149, -312, -312, -312, -312, -312,
	-397, -397, -397, -397, 103, 98, 92, -209, 99, 93,
	-278, -284, -8, -9, -201, -397, -293, -383, -384, -185,
	-182, -397, 298, -278, -278, 267, -223, -12, -8, -218,
	-224, -220, -8, -76, -116, -129, 63, 64, -131, 24,
	38, 67, 65, 23, -398, 88, -398, -241, -398, 87,
	-36, -245, 86, 61, 43, 93, 93, 87, 21, -219,
	-221, -140, 14, -282, 4, -281, 25, -278, 93, 218,
	101, 14, -183, 29, -182, -263, -263, 87, 309, -256,
	-296, -258, -257, 399, 401, 148, -283, -278, 93, 31,
	88, 87, -182, -301, -304, -306, -305, -307, -302, -303,
	332, 333, 174, 336, 338, 339, 340, 341, 342, 343,
	344, 345, 346, 349, 32, 257, 328, 329, 330, 331,
	350, 351, 352, 353, 354, 355, 356, 357, 315, 334,
	474, 316, 317, 318, 319, 320, 321, 323, 324, 325,
	326, 327, -372, -369, 86, 88, 87, -308, 86, -140,
	-132, 234, -369, 235, 235, 235, -76, 438, -333, -333,
	-333, 265, 19, -44, -41, -359, 18, -40, -41, 227,
	120, 121, 224, 86, -322, 86, -331, -372, -369, 86,
	134, 240, 133, -330, -327, -330, -331, -369, -209, -369,
	134, 134, -369, -369, -249, -278, -249, -249, 23, -249,
	23, -249, 23, 95, -278, -249, 23, -249, 23, -249,
	23, -249, 23, -249, 23, 31, 78, 79, 80, 31,
	82, 83, 84, -209, -369, -369, -209, -322, -253, -182,
	-369, 95, 95, 95, -333, -333, 95, 93, 93, 93,
	-333, -333, 95, 93, -286, -284, 93, 93, -375, 251,
	295, 297, 95, 95, 95, 95, 31, 93, -376, 31,
	602, 601, 603, 604, 605, 93, 95, 31, 95, 31,
	95, -278, 86, -182, -138, 285, 222, 224, 227, 76,
	93, 299, 303, 304, 148, 44, 87, 237, 234, -369,
	-269, 239, -269, -278, -285, -284, -276, 93, -140, -329,
	14, 159, -289, -289, -267, -182, -329, -289, -267, -182,
	-267, -267, -267, -267, -289, -289, -289, -267, -284, -284,
	-182, -182, -182, -182, -182, -182, -182, -294, -268, -267,
	577, 93, -261, 14, 76, -294, -294, -292, 312, 346,
	571, 572, 573, 87, 476, -175, -182, 577, 577, 577,
	577, 577, 577, -140, -140, -140, -140, 499, -199, 116,
	140, 117, 118, -157, -200, -205, -207, 100, 159, 142,
	156, -234, -146, -149, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -295, -278, 93,
	174, -153, -152, 99, -392, -153, -126, -128, -140, -140,
	-369, -126, -126, -140, -122, 24, 38, -211, -212, 144,
	-209, -398, -398, 95, 99, -278, -278, -115, -114, 420,
	421, 422, 423, 425, 426, 427, 430, 431, 435, 436,
	419, 437, 424, 429, 432, 433, 434, 428, 331, -140,
	-140, -140, -140, -140, -140, -83, -140, 127, 128, 129,
	-140, -140, -202, -201, -368, -367, -366, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-398, -140, 95, -369, -144, -140, -140, -127, 24, 38,
	-126, -280, -285, -276, -126, -127, -127, -126, -126, -278,
	-140, -140, -140, -140, 218, -241, -398, -201, 87, -385,
	401, 402, 575, -287, 270, -286, 25, -202, 93, 14,
	-247, 77, -278, -223, -223, 63, 64, 59, -126, -131,
	-398, -35, 25, -243, -278, 62, 93, -313, -253, 358,
	359, 174, -140, -140, 87, -222, 27, 28, -182, -281,
	165, -285, -182, -248, 270, -182, -160, -162, -163, -164,
	-185, -208, -397, -165, 495, 492, 14, -175, -176, -184,
	-284, -256, -258, 87, 400, 402, 403, 76, 119, -140,
	-314, 173, -341, -340, -339, -322, -324, -325, -326, 88,
	-314, -318, 364, 363, -308, -308, -308, -308, -308, -313,
	-313, -313, -313, 86, 86, -308, -308, -308, -308, -316,
	86, -316, -316, -317, 86, -317, -352, -140, -349, -348,
	-346, -347, 244, 102, 568, 524, 476, 516, 558, 77,
	-344, -222, 95, -398, -138, -270, 239, -350, -347, -369,
	-369, -369, -270, -369, 93, -369, 93, -369, 93, -107,
	-58, -1, 614, 615, 616, 87, 19, -323, -322, -57,
	295, -355, -356, 270, -351, -345, -331, 134, -330, -331,
	-331, -369, 87, 29, 124, 124, 124, 124, 476, 224,
	32, -271, 515, 140, 568, 524, -322, -57, -295, 237,
	-295, -295, 93, 93, -266, 610, -175, -134, 287, 148,
	276, 276, 234, 234, 289, -182, 300, 302, 301, 299,
	303, 304, 23, 23, 23, 288, 290, 292, 278, -182,
	-182, -269, 76, -177, -182, 26, -284, -182, -267, -267,
	-182, -267, -267, -182, -278, -118, 401, 87, 476, 22,
	-119, 22, -397, 116, 117, 118, -200, -146, -149, -146,
	139, 258, 87, -398, 25, 87, 77, -398, -398, -398,
	87, 14, -126, -214, -212, 146, -140, -398, -398, -398,
	87, 87, 14, -299, 25, -398, -398, -398, -398, -398,
	-213, -398, 14, 87, 87, -398, -398, 87, 87, -398,
	87, 87, 87, -365, 87, 87, 87, 87, -398, -398,
	-398, -398, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, -398, -90, 500, -398, -398, -398, -398, 87,
	-398, 87, -398, -126, -126, -397, 218, -398, -398, -398,
	-398, -398, 87, 87, 87, 87, -280, -398, -384, 574,
	402, -189, -188, -186, 74, 238, 75, -397, -286, -398,
	-153, 90, -244, 90, -243, -194, -278, 95, 99, -225,
	-159, -161, 14, -131, -207, 88, 87, -313, -229, -235,
	-264, -278, 93, 174, -315, 174, -315, 358, 359, -221,
	218, -190, 15, -193, 32, 57, -11, -397, -397, 32,
	87, -178, -180, -179, -181, 66, 70, 72, 67, 68,
	69, 73, -290, 25, -160, -9, -8, -397, -397, -397,
	-182, -175, -399, 14, 77, -399, 87, 218, -257, -259,
	404, 401, 407, -369, 93, -106, 87, -339, -326, -226,
	-135, 40, -319, 365, -313, 483, -313, -321, 93, -321,
	95, 95, 88, -47, -42, -43, 33, 81, -346, -333,
	93, 39, -333, -333, -278, 88, -222, -134, -182, 140,
	76, -350, -350, -350, -284, -2, 613, 619, 134, 86,
	368, 18, -243, 87, 88, -210, 296, 88, -108, -278,
	88, 86, -331, -331, -278, -397, 234, 31, 31, 568,
	524, 515, -57, -210, -314, -369, 612, 611, 88, 236,
	294, -139, 415, -136, 93, 89, -182, -182, -182, -182,
	-182, 227, 224, -393, 305, -393, 279, 237, -175, -182,
	87, -81, 253, 248, -289, -289, 33, -182, 401, 586,
	584, -140, 139, 258, -157, -149, -128, 473, -297, 174,
	332, 257, 330, 326, 346, 337, 363, 328, 364, 325,
	324, 323, -297, -295, -140, -140, -218, 147, -140, 145,
	-140, -140, -140, -398, 174, 332, 14, -140, -140, -140,
	-366, -140, -140, -140, -364, -363, -153, -209, -398, -364,
	-140, -140, -363, -363, -367, -367, -367, -367, -367, -201,
	-201, -201, -201, -397, -278, -93, -92, -91, 551, 238,
	-90, -90, -90, 95, -369, -144, -93, 95, -369, -144,
	-398, -398, -127, -280, -140, -140, -140, -140, -186, -327,
	-327, -327, -249, 87, -260, 22, 14, 57, 57, -159,
	-190, -160, -131, -278, -232, 570, -238, 46, -236, -237,
	47, -233, 48, 56, -315, -315, 165, -223, -140, -250,
	76, -251, -255, -209, -204, -206, -205, -397, -242, -398,
	-278, -249, -251, -162, -163, -163, -162, -163, 66, 66,
	66, 71, 66, 71, 66, -179, -284, -398, -398, -9,
	-9, -140, -287, 77, -160, -160, -184, -284, 165, 401,
	405, 406, -339, -391, 116, 140, 31, 76, 361, 102,
	-389, 173, 512, 563, 568, 524, 516, 558, -390, 240,
	133, 134, 252, 25, 41, 88, 87, 88, 87, 88,
	87, -272, -271, -43, -42, -333, -333, 95, -369, 93,
	93, 236, 26, -182, 76, 76, 76, -109, 617, 95,
	86, -3, 81, -140, 86, 19, -322, -209, -357, -309,
	-358, -310, -311, -5, -6, -334, -112, 57, 102, -61,
	44, 235, 597, 598, 124, -397, 610, -349, -243, -353,
	-355, -182, -143, -397, -142, -144, -150, 163, 164, -210,
	-182, -133, 285, 293, 86, -137, 90, -371, 77, 276,
	361, 276, -394, 306, 93, -394, -182, -81, -47, -182,
	-267, -267, 33, -369, -398, -157, -149, -397, -300, 482,
	-308, -308, -308, -317, -308, 320, -308, 320, -308, -300,
	-398, 87, -398, 22, -398, -117, 444, -140, 87, 87,
	-398, 86, 86, -140, -398, -398, -398, -365, 87, -398,
	87, -398, 87, -298, 569, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -89, -279, -278, -90, 533,
	533, -398, -398, -398, -90, -215, 87, -215, -215, -398,
	-398, 87, -398, 87, 87, -398, 87, -187, 22, -187,
	-187, -398, 90, -182, -190, -216, 16, -229, 51, 338,
	-240, -239, 55, 47, -237, 19, 49, 19, 30, -250,
	87, 148, 87, -398, -398, 87, 57, 218, -398, -190,
	-173, -172, 76, 77, -174, 76, -172, 66, 66, -245,
	-398, -398, 87, -248, -160, -190, -190, 218, 116, -397,
	-145, -156, -143, 12, 93, 93, -369, -388, 601, 602,
	31, 95, -333, -333, 134, 134, -182, 86, -313, 93,
	-313, 95, 95, 31, 82, 83, 84, 31, 78, 79,
	80, -182, -182, -182, -182, -354, 86, 19, -140, 86,
	148, 88, -243, -243, 272, 159, -333, 595, 278, 278,
	-333, -333, -333, -111, -110, 617, 88, -398, 87, -320,
	476, 479, -140, -151, -151, -245, 88, -362, 476, -370,
	-278, -278, -278, -278, 95, 97, -146, -398, -313, -398,
	-140, -140, -223, 93, -140, -140, 95, 95, -398, -398,
	-364, -363, -140, -398, -170, -169, -171, 578, 116, 31,
	-297, -398, -203, 270, -96, -95, -94, 14, -96, -96,
	-398, -140, -398, -398, -140, -140, -140, -140, -397, 66,
	18, 16, -397, -397, -287, -216, -217, 17, 19, -230,
	53, -228, 52, -228, -239, 19, 19, 93, 19, 93,
	134, -255, -140, -206, 57, -11, -278, -204, -278, -218,
	-140, 86, -140, -153, -190, -190, -140, -196, 447, 105,
	107, 106, 448, 449, 450, 347, 348, 451, 452, 453,
	108, 109, 110, 111, 112, 113, 114, 454, 457, 455,
	458, 459, 460, 465, 466, 461, 462, 463, 464, 467,
	468, 469, 470, 471, 93, 93, 86, -140, 88, 88,
	-245, -353, -58, 88, -243, 95, 88, 273, -205, -397,
	93, -333, -333, -333, 95, 95, -286, -398, 87, -278,
	-390, -355, 480, 480, -398, 25, -361, -360, -280, 86,
	77, -121, 159, 476, -398, -398, -398, -398, -398, 88,
	88, -398, -398, 87, -398, -169, -171, -398, 76, -153,
	-218, 19, -93, 295, 297, -93, -93, -93, -93, -93,
	-398, 87, -398, -398, 87, -398, 87, -246, -398, -278,
	240, 19, 19, -246, -246, -189, -217, -103, -102, -101,
	506, -140, -201, -231, 54, 76, 119, 93, 93, 93,
	12, -204, 218, -223, -243, -167, 368, -218, -398, -243,
	88, 25, 88, 619, 134, 88, -205, -120, -397, 269,
	-286, 93, 93, -110, -113, -11, 87, 148, -243, -182,
	-398, 474, 73, 477, -140, -398, 76, 487, 578, -88,
	-87, -84, 589, 615, -201, -90, -90, -90, -90, -90,
	-90, -140, -140, -140, 87, -398, -398, -398, -103, 87,
	-100, -99, -278, 76, 119, -251, -278, 88, -398, -397,
	-223, 88, -227, -11, 86, -3, 269, -309, -358, -310,
	-311, -5, -6, -334, -79, 476, -360, -338, -280, 93,
	95, 88, 62, 475, 478, -365, -86, 142, 587, 566,
	-141, -151, -148, -398, 87, -398, 87, -398, 87, -278,
	240, -101, 87, 25, -287, -168, -166, -278, 530, -381,
	-380, 472, -391, -387, 116, 140, 102, -389, 568, 524,
	125, 126, -79, -140, 86, -398, -80, 284, 574, -371,
	62, -398, -86, 588, 544, 518, 544, 518, -140, -140,
	-140, -99, -397, -398, 87, 22, -301, -60, 541, -378,
	-379, 76, -382, 374, 540, 561, 116, 93, 88, -243,
	245, -362, 476, 139, -398, 87, -398, 87, -398, -89,
	-166, 537, -314, -153, -379, 76, -378, 76, 13, 12,
	-4, 618, 88, 286, 477, -86, -140, -140, -398, -59,
	26, -167, -377, 253, 248, 251, 32, -377, 95, -4,
	478, -398, -398, 541, 247, 31, 116, -153, -170, -169,
	-169,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1397, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1910, 1910, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1256, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1908, 1, 3,
	69, 73, 0, 0, 0, 56, 1265, 0, 76, 0,
	0, 831, 0, 829, 0, 1380, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1382, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1283, 153, 1398, 1395, 1396, 38, 39,
	40, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 0,
	1374, 0, 686, 928, 0, 748, 748, 0, 748, 748,
	748, 748, 0, 0, 0, 698, 0, 0, 0, 0,
	745, 0, 714, 715, 0, 745, 0, 721, 751, 0,
	726, 748, 748, 729, 1911, 0, 1911, 1911, 1365, 0,
	742, 740, 754, 755, 758, 762, 0, 767, 770, 1391,
	1392, 0, 785, 47, 1640, 777, 790, 791, 0, 823,
	824, 43, 1070, 0, 950, 955, 966, 981, 982, 983,
	984, 985, 987, 988, 0, 0, 0, 0, 993, 994,
	0, 0, 0, 0, 0, 1051, 1002, 0, 0, 0,
	0, 1232, 0, 1193, 1193, 1087, 1193, 1195, 1195, 0,
	0, 0, 1907, 1681, 1689, 1690, 1712, 1802, 1851, 1685,
	1686, 1667, 1679, 1682, 1670, 1671, 1673, 1675, 1680, 1687,
	1693, 1672, 1692, 1691, 0, 1668, 1669, 1674, 1684, 1688,
	1676, 1677, 1678, 1683, 1694, 0, 0, 0, 0, 0,
	1146, 1241, 0, 0, 0, 0, 0, 0, 273, 274,
	1069, 1354, 0, 1195, 1195, 1195, 1195, 1195, 1011, 1012,
	1013, 1014, 1015, 1039, 1040, 1046, 1047, 1781, 1782, 1783,
	1784, -2, -2, 219, 220, 221, 222, 223, 224, 225,
	0, 215, 0, 0, 278, 279, 275, 276, 277, 1053,
	1054, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 1910, 0, 800, 0, 0, 0, 0,
	0, 1265, 0, 1257, 1256, 61, 0, 827, -2, 0,
	0, 0, 0, 45, 0, 50, 887, 75, 74, 1305,
	0, 0, 0, 57, 1266, 65, 67, 1267, 0, 832,
	833, 0, 863, 867, 0, 828, 0, 0, 1381, 1380,
	1380, 100, 0, 1847, 1358, -2, -2, 0, 0, 1393,
	1394, 1367, -2, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, -2, 0, 0, 165, 166, 0, 41, 404,
	0, 161, 0, 397, 338, 0, 1283, 0, 0, 0,
	0, 0, 827, 0, 1375, 142, 143, 150, 151, 152,
	377, 377, 377, 549, 0, 0, 153, 153, 508, 509,
	510, 0, 0, -2, 402, 0, 488, 0, 0, 391,
	391, 395, 393, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 526, 0, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 378, 0, 547, 548,
	440, 0, 0, 0, 0, 0, 0, 524, 525, 0,
	0, 1383, 1384, 0, 0, 0, 377, 377, 0, 0,
	0, 0, 377, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 141, 1296, 0, 0, 0, -2, 0, 678,
	0, 0, 0, 1376, 1376, 0, 685, 0, 687, 688,
	0, 0, 689, 0, 745, 745, 743, 744, 691, 692,
	693, 694, 748, 0, 0, 386, 387, 388, 745, 748,
	0, 748, 748, 748, 748, 745, 745, 745, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1911, 751,
	748, 0, 722, 0, 723, 724, 727, 728, 730, 1912,
	1913, 1413, 1911, 1911, 734, 738, 1366, 760, 768, 771,
	788, 786, 787, 789, 781, 782, 783, 784, 0, 802,
	803, 808, 0, 0, 0, 0, 814, 815, 816, 0,
	0, 819, 820, 821, 0, 0, 0, 0, 0, 948,
	0, 0, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 967, 968, 0, 0,
	0, 989, 990, 991, 992, 995, 0, 0, 0, 1000,
	1001, 0, 0, 0, 0, 837, 0, 1233, 0, 1085,
	0, 1086, 1088, 1089, 0, 1090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1386, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 847, 0, 0,
	847, 847, 0, 0, 0, 208, 209, 210, 211, 212,
	0, 0, 0, 0, 226, 227, 228, 229, 230, 280,
	1241, 0, 1069, 0, 0, 0, 44, 792, 793, 0,
	911, 1386, 0, 0, 843, 0, 55, 64, 66, 1265,
	59, 1265, 0, 849, 0, 0, -2, -2, 850, 856,
	857, 858, 859, 860, 52, 1909, 53, 0, 72, 0,
	46, 0, 0, 0, 0, 350, 1308, 0, 0, 1258,
	1259, 1262, 0, 864, 1723, 868, 0, 870, 871, 0,
	830, 0, 98, 0, 927, 0, 0, 0, 1847, 1364,
	0, 102, 103, 0, 0, 0, 361, 1369, 1370, 1371,
	-2, 384, 0, 361, 345, 288, 289, 290, 338, 292,
	338, 338, 338, 338, 350, 350, 350, 350, 321, 322,
	323, 324, 325, 0, 0, 307, 338, 338, 338, 338,
	328, 329, 330, 331, 332, 333, 334, 335, 293, 294,
	295, 296, 297, 298, 299, 300, 301, 340, 340, 340,
	342, 342, 0, 42, 0, 365, 0, 1262, 0, 0,
	1296, 1378, 1388, 0, 0, 0, 1378, 120, 0, 0,
	0, 550, 584, 502, 538, 551, 0, 505, 506, -2,
	0, 0, 487, 0, 489, 0, 385, 0, -2, 0,
	395, 0, 391, 395, 392, 395, 383, 396, 528, 529,
	530, 0, 532, 533, 614, 897, 0, 0, 0, 0,
	0, 620, 621, 622, 0, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 539, 540, 541, 542, 543,
	544, 545, 546, 0, 0, 0, 0, 489, 0, 535,
	0, 441, 442, 443, 0, 0, 446, 447, 448, 449,
	0, 0, 452, 453, 454, 914, 915, 455, 456, 481,
	482, 483, 457, 458, 459, 460, 461, 462, 463, 475,
	476, 477, 478, 479, 480, 464, 465, 466, 467, 468,
	469, 472, 0, 135, 1287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1376, 0,
	0, 0, 0, 846, 929, 1399, 1400, 749, 750, 0,
	389, 390, 748, 748, 695, 735, 0, 748, 699, 736,
	700, 702, 701, 703, 716, 717, 748, 706, 746, 747,
	707, 708, 709, 710, 711, 712, 713, 731, 718, 719,
	720, 752, 0, 756, 757, 732, 733, 0, 769, 773,
	774, 775, 776, 0, 0, 805, 94, 810, 811, 812,
	813, 825, 818, 1071, 945, 946, 947, 0, 949, 952,
	0, 1055, 1057, 954, 956, 1066, 1067, 1068, 0, 0,
	0, 0, 0, 960, 964, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 986, 1209, 1210,
	1211, 1003, 281, 282, 0, 1004, 0, 861, 0, 0,
	0, 0, 0, 0, 0, 838, 839, 1239, 1236, 0,
	0, 1194, 1196, 0, 0, 0, 0, 0, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1212,
	0, 0, 0, 0, 0, 1232, 0, 1006, 1007, 1008,
	0, 0, 0, 1387, 0, 130, 131, 0, 0, 0,
	0, 0, 1166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	848, 1242, 0, -2, 0, 0, 0, 0, 0, 1005,
	0, 0, 0, 0, 0, 0, 1352, 0, 0, 795,
	796, 798, 0, 931, 0, 912, 0, 0, 801, 0,
	842, 0, 845, 58, 60, 854, 855, 0, 872, 851,
	54, 49, 0, 0, 889, 1306, 350, 1328, 0, 359,
	359, 356, 1268, 1269, 0, 1261, 1263, 1264, 77, 869,
	865, 0, 943, 0, 0, 926, 0, 875, 877, 878,
	879, 909, 0, 882, 0, 0, 0, 0, 0, 96,
	928, 1359, 101, 0, 0, 106, 107, 1360, 1361, 1362,
	1363, 0, 573, -2, 436, 167, 169, 170, 171, 162,
	-2, 348, 346, 347, 291, 350, 350, 315, 316, 317,
	318, 319, 320, 0, 0, 308, 309, 310, 311, 302,
	0, 303, 304, 305, 0, 306, 403, 0, 1270, 366,
	367, 369, 377, 0, 372, 373, 0, 377, 377, 0,
	398, 399, 0, 1262, 1287, 0, 0, 0, 1389, 1388,
	1388, 1388, 0, 155, 156, 157, 158, 159, 160, 609,
	0, 0, 585, 607, 608, 153, 0, 0, 163, 491,
	490, 0, 641, 0, 401, 0, 0, 395, 395, 380,
	381, 531, 0, 0, 616, 617, 618, 619, 0, 0,
	0, 518, 430, 0, 519, 520, 489, 491, 361, 0,
	444, 445, 450, 451, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 565, 566, 567,
	493, 571, 568, 493, 572, 1284, 1285, 1286, 0, 0,
	679, 0, 0, 427, 92, 1377, 684, 745, 705, 737,
	745, 697, 704, 725, 765, 809, 0, 0, 0, 0,
	817, 0, 0, 953, 1056, 1058, 957, 0, 961, 965,
	0, 0, 0, 0, 0, 0, 0, 1052, 1076, 1077,
	0, 0, 1256, 0, 1237, 0, 0, 1084, 1197, 1198,
	0, 0, 0, 0, 0, 1095, 1096, 1097, 1098, 1099,
	0, 1101, 0, 0, 0, 1105, 1106, 0, 0, 1107,
	0, 0, 0, 0, 0, 0, 0, 0, 1119, 1120,
	1121, 1122, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1133, 1134, 0, 1034, 0, 0, 0, 0,
	1034, 0, 1072, 0, 0, 847, 0, 1199, 1200, 1201,
	1202, 1203, 0, 0, 0, 0, 1242, 1353, 794, 797,
	799, 885, 932, 933, 0, 0, 0, 0, 913, 1385,
	840, 841, 844, -2, 0, 0, 1244, 0, 0, 872,
	943, 873, 0, 852, 51, 888, 0, 1310, 1309, 1322,
	1335, 359, 359, 353, 354, 360, 355, 357, 358, 1260,
	0, 1265, 0, 1346, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 916, 0, 0, 919, 0,
	0, 0, 0, 910, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 90, 91, 0, 0, 0, 104, 105,
	0, 0, 111, 362, 363, 144, 153, 438, 168, 411,
	0, 0, 287, 349, 312, 313, 314, 0, 336, 0,
	0, 0, 432, 116, 1274, 1273, 377, 377, 368, 0,
	371, 0, 0, 0, 1390, 339, 400, 0, 134, 0,
	0, 0, 0, 0, 140, 579, 0, 0, 586, 0,
	0, 0, 500, 0, 511, 512, 0, 613, -2, 675,
	365, 0, 379, 382, 898, 0, 0, 513, 0, 516,
	517, 431, 491, 522, 523, 536, 473, 474, 471, 0,
	0, 1297, 1298, 1303, 1301, 1302, 121, 557, 559, 558,
	562, 0, 0, 495, 0, 495, 555, 0, 427, 1270,
	0, 683, 428, 429, 748, 748, 804, 95, 0, 807,
	0, 0, 0, 0, 958, 962, 862, 0, 1230, 338,
	338, 1217, 338, 342, 1220, 338, 1222, 338, 1225, 338,
	1228, 1229, 1230, 0, 0, 0, 1234, 1083, 1240, 0,
	0, 0, 0, 1094, 0, 0, 0, 0, 0, 0,
	132, 133, 1166, 0, 0, 1168, 1170, 1171, 1111, 1167,
	0, 0, 1164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1029, 1033, 0, 1035, 1036, 0, 0,
	1136, 1137, 1138, 0, 0, 0, 0, 1147, 1147, 1147,
	1073, 1074, 0, 1243, 0, 0, 0, 0, 934, 939,
	939, 939, 0, 0, 0, 1372, 1373, 1245, 1246, 943,
	1247, 874, 853, 890, 1328, 0, 1321, 0, -2, 1330,
	0, 0, 0, 1336, 351, 352, 866, 78, 944, 81,
	0, 1346, 1355, 0, 1337, 1348, 1350, 0, 0, 0,
	1342, 0, 943, 876, 905, 907, 0, 902, 917, 918,
	920, 0, 922, 0, 924, 925, 887, 881, 883, 0,
	0, 0, 98, 0, 943, 943, 97, 0, 930, 108,
	109, 110, 437, 172, 177, 0, 0, 0, 182, 0,
	184, 0, 0, 0, 189, 190, 377, 377, 412, 0,
	284, 286, 0, 0, 175, 350, 0, 350, 0, 343,
	0, 413, 433, 1271, 1272, 0, 0, 370, 374, 375,
	376, 0, 1379, 136, 0, 0, 0, 582, 0, 610,
	0, 0, 0, 0, 0, 0, 164, 492, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 0, 377, 0,
	0, 0, 377, 377, 377, 0, 667, 364, 0, 0,
	638, 635, 514, 0, 213, 214, 216, 0, 0, 521,
	887, 1288, 1289, 1290, 0, 1300, 1304, 124, 0, 0,
	0, 0, 569, 0, 494, 570, 680, 681, 682, 93,
	690, 696, 806, 826, 951, 959, 963, 0, 0, 1231,
	1215, 350, 1218, 1219, 1221, 1223, 1224, 1226, 1227, 0,
	999, 0, 1079, 0, 1081, 1265, 0, 1238, 0, 0,
	1093, 0, 0, 0, 1102, 1103, 1104, 0, 0, 1110,
	0, 1112, 0, 0, 0, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 0, 1027, 1030, 1135, 1037,
	1038, 1043, 1043, 1043, 1142, 0, 0, 0, 0, 1075,
	1149, 0, 1154, 0, 0, 1160, 0, 0, 0, 0,
	0, 911, -2, 62, 1247, 1249, 0, 1315, 1313, 1313,
	1323, 1324, 0, 0, 1331, 0, 0, 0, 0, 82,
	0, 0, 0, 1351, 0, 0, 0, 0, 99, 1256,
	899, 906, 0, 0, 900, 0, 901, 921, 923, 880,
	-2, 884, 0, 943, 943, 88, 89, 0, 178, 0,
	180, 206, 207, 0, 183, 185, 186, 187, 193, 194,
	195, 188, 0, 0, 283, 285, 0, 0, 326, 337,
	327, 0, 0, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 887, 137, 138, 139, 574, 0, 584, 0, 0,
	0, 577, 0, 503, 0, 0, 0, 377, 377, 377,
	0, 0, 0, 0, 652, 0, 0, 615, 0, 623,
	0, 0, 0, 217, 218, 0, 1299, 556, 0, 122,
	123, 0, 0, 561, 496, 497, 1204, 997, 1216, 998,
	0, 0, 0, 1235, 0, 0, 0, 0, 1100, 1108,
	0, 1169, 0, 1115, 0, 0, 0, 604, 605, 0,
	1165, 1032, 1256, 0, 1034, 1044, 1045, 0, 1034, 1034,
	1034, 1148, 1034, 1034, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 931, 1249, 1254, 0, 0, 1318,
	0, 1311, 1314, 1312, 1325, 0, 0, 1332, 0, 1334,
	0, 1356, 1357, 1349, 0, 1341, 1344, 1340, 1343, 1265,
	903, 0, 908, 0, 1256, 87, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 192, 0, 0, 341, 344,
	0, 0, 0, 575, 0, 587, 578, 0, 665, 0,
	669, 0, 0, 0, 672, 673, 674, 651, 0, 655,
	405, 639, 636, 637, 515, 0, 125, 126, 0, 0,
	0, 0, 0, 0, 1078, 1080, 1082, 1091, 1092, 1213,
	1214, 1109, 1113, 0, 1116, 0, 0, 1117, 0, 606,
	1023, 0, 0, 1041, 1042, 0, 0, 0, 0, 0,
	1150, 0, 1155, 1156, 0, 1161, 0, 0, 936, 893,
	894, 941, 942, 0, 0, 886, 1254, 80, 1255, 1252,
	0, 1250, 1248, 1307, 0, 1316, 1317, 1326, 1327, 1333,
	0, 1339, 0, 85, 0, 0, 0, 1265, 179, 0,
	198, 0, 583, 0, 586, 576, 663, 664, 0, 676,
	668, 670, 671, 653, -2, 1291, 0, 0, 0, 563,
	996, 0, 0, 0, 1166, 1118, 0, 602, 603, 1031,
	1024, 0, 1009, 1010, 1028, 1139, 1140, 1141, 1143, 1144,
	1145, 0, 0, 0, 0, 935, 937, 938, 79, 0,
	1251, 1049, 0, 1319, 1320, 1347, 1345, 904, 911, 0,
	86, 418, 411, 1291, 0, 0, 0, 656, 657, 658,
	659, 660, 661, 662, 553, 1293, 127, 128, 484, 485,
	486, 121, 1205, 0, 1208, 0, 1025, 0, 0, 0,
	0, 1021, 1022, 1151, 0, 1157, 0, 1162, 0, 895,
	896, 1253, 0, 0, 588, 0, 590, 0, -2, 406,
	419, 0, 173, 199, 200, 0, 0, 203, 204, 205,
	196, 197, 117, 0, 0, 677, 0, 1294, 1295, 124,
	1206, 1114, 0, 1016, 1017, 1018, 1019, 1020, 0, 0,
	0, 1050, 1029, 589, 0, 0, 361, 0, 599, 407,
	408, 0, 414, 415, 416, 417, 201, 202, 611, 0,
	0, 560, 0, 0, 1152, 0, 1158, 0, 1163, 0,
	591, 592, 600, 0, 409, 0, 410, 0, 0, 0,
	580, 0, 611, 1292, 0, 1026, 0, 0, 1048, 0,
	601, 597, 420, 422, 423, 0, 0, 421, 612, 581,
	1207, 1153, 1159, 0, 424, 425, 426, 593, 594, 595,
	596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 620,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:572
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:577
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:578
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:582
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:618
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:624
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:628
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:632
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:637
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:647
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:653
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:659
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:663
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:668
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:672
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:682
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:688
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:762
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:772
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:798
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:803
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:807
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:828
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:841
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:847
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:855
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:859
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:867
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:879
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:891
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:895
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:901
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:907
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:911
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:924
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:925
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:929
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:933
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:939
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:943
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:949
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:953
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:962
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:968
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:974
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:978
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:984
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:994
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:998
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1002
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1008
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1012
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1016
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1020
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1026
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1030
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1036
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1042
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1049
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1058
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1062
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1069
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1073
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1078
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1088
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1093
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1098
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1104
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1109
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1115
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1120
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1124
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1130
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1134
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1146
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1153
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1160
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1165
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1170
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1175
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1182
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1189
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1200
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1207
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1211
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1217
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1221
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1225
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1229
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1233
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1237
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1243
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1247
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1253
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1257
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1263
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1267
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1273
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1277
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1283
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1287
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1293
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1297
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1303
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1308
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1313
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1317
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1322
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1326
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1330
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1341
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1350
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1359
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1363
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1372
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1376
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1382
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1388
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1398
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1403
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1408
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1413
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1422
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1431
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1436
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1442
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1448
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1452
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1458
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1462
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1466
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1472
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1476
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1481
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1502
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1507
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1518
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1526
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1533
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1537
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1541
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1545
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1549
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1560
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1577
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1581
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1585
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1589
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1593
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1597
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1601
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1606
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1610
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1618
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1622
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1803
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1807
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1811
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1817
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1821
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1825
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1831
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1835
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1842
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1846
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1850
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1854
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1974
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1978
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2055
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2082
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2087
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2091
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2096
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2100
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2108
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2112
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2118
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2126
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2130
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2134
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2139
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2143
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2169
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2179
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2184
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2190
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2194
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2214
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2223
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2229
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2239
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2243
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2248
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2252
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2256
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2260
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2264
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2268
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2274
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2284
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2288
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2292
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2296
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2300
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2305
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2309
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2319
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2330
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2334
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2339
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2349
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2353
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2358
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2362
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2368
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2372
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2378
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2382
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2388
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2392
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2398
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2402
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2408
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2414
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2418
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2422
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2426
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2430
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2439
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2445
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2451
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2457
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2461
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2465
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2470
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2474
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2480
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2486
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2492
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2496
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2500
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2504
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2508
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2513
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2521
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2527
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2531
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2536
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2540
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2545
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2549
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2555
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2559
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2563
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2569
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2573
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2579
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2583
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2587
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2591
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2595
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2599
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2603
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2607
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2611
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2615
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2619
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2623
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2627
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2631
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2635
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2639
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2643
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2647
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2651
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2655
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2659
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2663
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2667
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2671
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2675
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2679
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2683
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2687
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2691
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2695
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2699
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2704
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2708
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2731
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2744
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2750
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2754
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2763
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2768
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2781
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2785
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2794
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2798
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2802
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2806
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2810
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2816
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2820
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2824
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2830
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2834
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2838
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2842
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2846
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2850
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2854
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2858
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2862
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2866
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2871
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2876
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2880
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2884
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2888
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2892
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2896
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2900
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2904
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2908
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2912
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2916
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2920
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2924
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2928
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2932
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2936
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2940
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2944
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2948
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2954
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2958
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2964
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2968
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2972
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2976
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2980
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3006
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3013
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3020
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3027
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3033
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3043
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3050
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3057
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3069
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3079
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3083
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3100
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3110
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3125
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3132
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3168
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3176
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3194
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3203
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3211
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3220
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3227
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3235
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3239
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3248
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3259
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3263
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3268
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3272
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3277
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3281
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3287
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3293
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3299
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3303
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3309
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3313
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3319
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3325
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3331
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3337
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3343
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3347
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3351
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3355
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3361
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3367
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3373
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3377
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3381
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3387
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3391
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3396
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3400
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3405
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3409
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3415
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3419
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3423
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3427
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3431
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3435
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3439
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3443
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3447
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3451
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3455
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3459
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3463
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3467
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3471
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3475
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3479
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3483
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3487
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3491
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3495
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3499
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3504
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3508
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3512
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3519
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3529
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3534
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3538
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3543
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3548
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3553
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3558
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3563
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3569
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3575
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3580
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3586
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3592
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3596
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3602
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3607
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3611
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3616
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3621
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3626
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3631
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3637
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3643
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3650
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3657
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3664
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3672
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3676
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3682
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3688
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3694
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3700
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3706
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3712
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3724
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3734
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3740
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3746
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3750
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3756
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3760
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3783
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3788
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3798
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3802
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3810
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3814
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3818
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3822
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3826
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3830
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3834
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3838
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3842
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3846
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3854
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3858
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3862
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3866
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3870
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3878
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3882
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3886
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3890
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3894
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3902
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3906
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3910
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3914
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3918
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3922
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3926
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3930
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3934
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3938
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3973
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4003
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4013
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4017
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4027
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4033
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4037
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4041
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4047
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4051
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4055
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4061
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4065
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4071
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4079
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4089
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4134
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4139
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4141
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4146
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4157
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4161
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4165
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4169
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4173
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4177
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4197
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4201
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4232
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4242
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4248
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4254
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4258
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4264
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4270
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4274
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4278
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4282
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4288
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4294
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4300
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4304
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4308
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4312
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4320
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4326
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4330
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4336
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4340
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4368
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4372
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4385
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4389
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4393
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4398
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4407
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4411
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4417
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4421
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4427
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4431
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4435
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4440
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4453
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4457
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4461
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4467
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4471
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4483
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4492
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4498
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4502
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4507
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4511
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4516
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4524
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4528
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4532
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4538
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4546
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4554
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4562
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4568
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4572
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4578
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4582
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4586
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4590
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4595
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4599
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4603
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4610
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4615
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4619
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4625
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4631
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4635
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4645
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4649
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4653
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4657
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4663
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4667
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4673
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4677
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4682
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4686
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4692
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4696
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4702
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4706
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4712
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4716
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4720
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4724
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4730
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4734
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4747
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4751
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4755
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4759
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4765
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4767
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4771
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4773
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4777
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4779
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4782
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4784
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4787
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4791
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4795
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4808
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4812
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4816
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4822
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4828
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4832
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4836
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4840
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4846
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4850
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4860
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4870
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4874
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4880
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4889
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4895
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4899
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4905
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4909
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4913
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4917
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4922
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4926
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4930
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4934
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4944
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4999
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5003
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5015
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5019
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5023
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5027
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5031
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5035
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5039
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5045
		{
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5048
		{
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5132
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5140
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5144
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5152
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5164
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5180
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5192
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5200
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5204
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5210
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5216
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5220
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5224
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5230
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5234
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5241
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5245
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5249
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5253
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5257
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5263
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5267
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5271
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5275
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5279
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5298
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5304
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5308
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5317
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5322
		{
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5331
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5337
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5341
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5346
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5353
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5359
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5363
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5369
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5373
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5379
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5383
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5388
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5395
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5401
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5405
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5411
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5417
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5421
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5427
		{
			yyVAL.str = ""
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5431
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5437
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5441
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5448
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5452
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5456
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5460
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5466
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5470
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5474
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5478
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5482
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5486
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5490
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5496
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5500
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5504
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5511
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5517
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5521
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5531
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5535
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5543
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5553
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5557
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5561
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5565
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5569
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5573
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5577
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5581
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5585
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5589
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5610
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5614
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5619
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5623
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5627
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5631
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5635
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5639
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5643
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5647
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5651
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5655
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5659
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5663
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5667
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5671
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5675
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5679
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5683
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5687
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5691
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5695
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5699
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5703
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5707
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5711
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5715
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5719
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5723
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5727
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5731
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5735
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5739
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5743
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5747
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5751
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5755
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5759
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5763
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5767
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5771
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5775
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5779
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5787
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5791
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5795
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5799
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5803
		{
			val := convertStringToInt(yyDollar[3].str)
			yyLOCAL = &NtileExpr{IntValue: &val, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5809
		{
			yyLOCAL = &NtileExpr{VarValue: yyDollar[3].colIdent, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5813
		{
			yyLOCAL = &NtileExpr{IsNull: true, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5817
		{
			val := convertStringToInt(yyDollar[5].str)
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), IntValue: &val, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5823
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), VarValue: yyDollar[5].colIdent, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5827
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), IsNull: true, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5835
		{
			val := convertStringToInt(yyDollar[5].str)
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), IntValue: &val, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5841
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), VarValue: yyDollar[5].colIdent, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5845
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), IsNull: true, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5855
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5883
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5887
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5930
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5935
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5939
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5945
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5949
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5955
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5959
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5965
		{
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5967
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5971
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5975
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5979
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5983
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5987
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5991
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5995
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5999
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6003
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6007
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6013
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6017
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6021
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6025
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6029
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6033
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6037
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6041
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6045
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6100
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6104
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6108
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6112
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6116
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6122
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6126
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6130
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6136
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6140
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6144
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6150
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6154
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6158
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6162
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6166
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6172
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6176
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6180
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6184
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6188
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6192
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6196
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6200
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6204
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6208
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6214
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6232
		{
			yyVAL.str = string("")
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6236
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6242
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6246
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6252
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6267
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6271
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6275
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6304
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6319
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6325
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6329
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6338
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6343
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6347
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6353
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6359
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6363
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6369
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6374
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6378
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6382
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6391
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6397
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6401
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6405
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6414
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6418
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6422
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6426
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6433
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6437
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6441
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6445
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6451
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6455
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6459
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6463
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6468
		{
			yyVAL.str = ""
		}
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6472
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6476
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6480
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6485
		{
			yyVAL.str = ""
		}
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6489
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6495
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6504
		{
			yyVAL.str = ""
		}
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6508
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6513
		{
			yyVAL.str = "cascaded"
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6517
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6521
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6526
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6530
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6536
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6542
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6548
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6557
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6561
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6566
		{
			yyVAL.str = ""
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6570
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6576
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6580
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6586
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6590
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6594
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6599
		{
			yyVAL.str = ""
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6603
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6607
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6612
		{
			yyVAL.str = ""
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6616
		{
			yyVAL.str = " header"
		}
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6621
		{
			yyVAL.str = ""
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6625
		{
			yyVAL.str = " manifest on"
		}
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6629
		{
			yyVAL.str = " manifest off"
		}
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6634
		{
			yyVAL.str = ""
		}
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6638
		{
			yyVAL.str = " overwrite on"
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6642
		{
			yyVAL.str = " overwrite off"
		}
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6648
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6653
		{
			yyVAL.str = ""
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6657
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6663
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6667
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6673
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6677
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6682
		{
			yyVAL.str = ""
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6686
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6692
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6696
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6702
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6706
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6710
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6715
		{
			yyVAL.str = ""
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6719
		{
			yyVAL.str = " optionally"
		}
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6732
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6736
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6740
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6744
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6748
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6754
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6758
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6762
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6766
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6775
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6781
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6785
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6791
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6795
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6801
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6805
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6810
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6820
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6824
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6830
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6836
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6840
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6846
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6850
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6854
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6858
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6862
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6870
		{
			yyVAL.str = "charset"
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6880
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6884
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6888
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6897
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6899
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6902
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6904
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6907
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6909
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6912
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6914
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6917
		{
			yyVAL.empty = struct{}{}
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6919
		{
			yyVAL.empty = struct{}{}
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6921
		{
			yyVAL.empty = struct{}{}
		}
	case 1385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6925
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6930
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6934
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6941
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6945
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6951
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6955
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6962
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6968
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6972
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6978
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6982
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6989
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7521
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7530
		{
			decNesting(yylex)
		}
	case 1910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7535
		{
			skipToEnd(yylex)
		}
	case 1911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7540
		{
			skipToEnd(yylex)
		}
	case 1912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7544
		{
			skipToEnd(yylex)
		}
	case 1913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7548
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
