// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const WINDOW_EXPR = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const IN = 57492
const SHIFT_LEFT = 57493
const SHIFT_RIGHT = 57494
const DIV = 57495
const MOD = 57496
const UNARY = 57497
const COLLATE = 57498
const BINARY = 57499
const UNDERSCORE_ARMSCII8 = 57500
const UNDERSCORE_ASCII = 57501
const UNDERSCORE_BIG5 = 57502
const UNDERSCORE_BINARY = 57503
const UNDERSCORE_CP1250 = 57504
const UNDERSCORE_CP1251 = 57505
const UNDERSCORE_CP1256 = 57506
const UNDERSCORE_CP1257 = 57507
const UNDERSCORE_CP850 = 57508
const UNDERSCORE_CP852 = 57509
const UNDERSCORE_CP866 = 57510
const UNDERSCORE_CP932 = 57511
const UNDERSCORE_DEC8 = 57512
const UNDERSCORE_EUCJPMS = 57513
const UNDERSCORE_EUCKR = 57514
const UNDERSCORE_GB18030 = 57515
const UNDERSCORE_GB2312 = 57516
const UNDERSCORE_GBK = 57517
const UNDERSCORE_GEOSTD8 = 57518
const UNDERSCORE_GREEK = 57519
const UNDERSCORE_HEBREW = 57520
const UNDERSCORE_HP8 = 57521
const UNDERSCORE_KEYBCS2 = 57522
const UNDERSCORE_KOI8R = 57523
const UNDERSCORE_KOI8U = 57524
const UNDERSCORE_LATIN1 = 57525
const UNDERSCORE_LATIN2 = 57526
const UNDERSCORE_LATIN5 = 57527
const UNDERSCORE_LATIN7 = 57528
const UNDERSCORE_MACCE = 57529
const UNDERSCORE_MACROMAN = 57530
const UNDERSCORE_SJIS = 57531
const UNDERSCORE_SWE7 = 57532
const UNDERSCORE_TIS620 = 57533
const UNDERSCORE_UCS2 = 57534
const UNDERSCORE_UJIS = 57535
const UNDERSCORE_UTF16 = 57536
const UNDERSCORE_UTF16LE = 57537
const UNDERSCORE_UTF32 = 57538
const UNDERSCORE_UTF8 = 57539
const UNDERSCORE_UTF8MB4 = 57540
const UNDERSCORE_UTF8MB3 = 57541
const INTERVAL = 57542
const JSON_EXTRACT_OP = 57543
const JSON_UNQUOTE_EXTRACT_OP = 57544
const CREATE = 57545
const ALTER = 57546
const DROP = 57547
const RENAME = 57548
const ANALYZE = 57549
const ADD = 57550
const FLUSH = 57551
const CHANGE = 57552
const MODIFY = 57553
const DEALLOCATE = 57554
const REVERT = 57555
const SCHEMA = 57556
const TABLE = 57557
const INDEX = 57558
const VIEW = 57559
const TO = 57560
const IGNORE = 57561
const IF = 57562
const PRIMARY = 57563
const COLUMN = 57564
const SPATIAL = 57565
const FULLTEXT = 57566
const KEY_BLOCK_SIZE = 57567
const CHECK = 57568
const INDEXES = 57569
const ACTION = 57570
const CASCADE = 57571
const CONSTRAINT = 57572
const FOREIGN = 57573
const NO = 57574
const REFERENCES = 57575
const RESTRICT = 57576
const SHOW = 57577
const DESCRIBE = 57578
const EXPLAIN = 57579
const DATE = 57580
const ESCAPE = 57581
const REPAIR = 57582
const OPTIMIZE = 57583
const TRUNCATE = 57584
const COALESCE = 57585
const EXCHANGE = 57586
const REBUILD = 57587
const PARTITIONING = 57588
const REMOVE = 57589
const PREPARE = 57590
const EXECUTE = 57591
const MAXVALUE = 57592
const PARTITION = 57593
const REORGANIZE = 57594
const LESS = 57595
const THAN = 57596
const PROCEDURE = 57597
const TRIGGER = 57598
const VINDEX = 57599
const VINDEXES = 57600
const DIRECTORY = 57601
const NAME = 57602
const UPGRADE = 57603
const STATUS = 57604
const VARIABLES = 57605
const WARNINGS = 57606
const CASCADED = 57607
const DEFINER = 57608
const OPTION = 57609
const SQL = 57610
const UNDEFINED = 57611
const SEQUENCE = 57612
const MERGE = 57613
const TEMPORARY = 57614
const TEMPTABLE = 57615
const INVOKER = 57616
const SECURITY = 57617
const FIRST = 57618
const AFTER = 57619
const LAST = 57620
const VITESS_MIGRATION = 57621
const CANCEL = 57622
const RETRY = 57623
const COMPLETE = 57624
const CLEANUP = 57625
const THROTTLE = 57626
const UNTHROTTLE = 57627
const EXPIRE = 57628
const RATIO = 57629
const BEGIN = 57630
const START = 57631
const TRANSACTION = 57632
const COMMIT = 57633
const ROLLBACK = 57634
const SAVEPOINT = 57635
const RELEASE = 57636
const WORK = 57637
const BIT = 57638
const TINYINT = 57639
const SMALLINT = 57640
const MEDIUMINT = 57641
const INT = 57642
const INTEGER = 57643
const BIGINT = 57644
const INTNUM = 57645
const REAL = 57646
const DOUBLE = 57647
const FLOAT_TYPE = 57648
const DECIMAL_TYPE = 57649
const NUMERIC = 57650
const TIME = 57651
const TIMESTAMP = 57652
const DATETIME = 57653
const YEAR = 57654
const CHAR = 57655
const VARCHAR = 57656
const BOOL = 57657
const CHARACTER = 57658
const VARBINARY = 57659
const NCHAR = 57660
const TEXT = 57661
const TINYTEXT = 57662
const MEDIUMTEXT = 57663
const LONGTEXT = 57664
const BLOB = 57665
const TINYBLOB = 57666
const MEDIUMBLOB = 57667
const LONGBLOB = 57668
const JSON = 57669
const JSON_SCHEMA_VALID = 57670
const JSON_SCHEMA_VALIDATION_REPORT = 57671
const ENUM = 57672
const GEOMETRY = 57673
const POINT = 57674
const LINESTRING = 57675
const POLYGON = 57676
const GEOMETRYCOLLECTION = 57677
const MULTIPOINT = 57678
const MULTILINESTRING = 57679
const MULTIPOLYGON = 57680
const ASCII = 57681
const UNICODE = 57682
const NULLX = 57683
const AUTO_INCREMENT = 57684
const APPROXNUM = 57685
const SIGNED = 57686
const UNSIGNED = 57687
const ZEROFILL = 57688
const CODE = 57689
const COLLATION = 57690
const COLUMNS = 57691
const DATABASES = 57692
const ENGINES = 57693
const EVENT = 57694
const EXTENDED = 57695
const FIELDS = 57696
const FULL = 57697
const FUNCTION = 57698
const GTID_EXECUTED = 57699
const KEYSPACES = 57700
const OPEN = 57701
const PLUGINS = 57702
const PRIVILEGES = 57703
const PROCESSLIST = 57704
const SCHEMAS = 57705
const TABLES = 57706
const TRIGGERS = 57707
const USER = 57708
const VGTID_EXECUTED = 57709
const VITESS_KEYSPACES = 57710
const VITESS_METADATA = 57711
const VITESS_MIGRATIONS = 57712
const VITESS_REPLICATION_STATUS = 57713
const VITESS_SHARDS = 57714
const VITESS_TABLETS = 57715
const VITESS_TARGET = 57716
const VSCHEMA = 57717
const VITESS_THROTTLED_APPS = 57718
const NAMES = 57719
const GLOBAL = 57720
const SESSION = 57721
const ISOLATION = 57722
const LEVEL = 57723
const READ = 57724
const WRITE = 57725
const ONLY = 57726
const REPEATABLE = 57727
const COMMITTED = 57728
const UNCOMMITTED = 57729
const SERIALIZABLE = 57730
const CURRENT_TIMESTAMP = 57731
const DATABASE = 57732
const CURRENT_DATE = 57733
const NOW = 57734
const CURRENT_TIME = 57735
const LOCALTIME = 57736
const LOCALTIMESTAMP = 57737
const CURRENT_USER = 57738
const UTC_DATE = 57739
const UTC_TIME = 57740
const UTC_TIMESTAMP = 57741
const DAY = 57742
const DAY_HOUR = 57743
const DAY_MICROSECOND = 57744
const DAY_MINUTE = 57745
const DAY_SECOND = 57746
const HOUR = 57747
const HOUR_MICROSECOND = 57748
const HOUR_MINUTE = 57749
const HOUR_SECOND = 57750
const MICROSECOND = 57751
const MINUTE = 57752
const MINUTE_MICROSECOND = 57753
const MINUTE_SECOND = 57754
const MONTH = 57755
const QUARTER = 57756
const SECOND = 57757
const SECOND_MICROSECOND = 57758
const YEAR_MONTH = 57759
const WEEK = 57760
const REPLACE = 57761
const CONVERT = 57762
const CAST = 57763
const SUBSTR = 57764
const SUBSTRING = 57765
const GROUP_CONCAT = 57766
const SEPARATOR = 57767
const TIMESTAMPADD = 57768
const TIMESTAMPDIFF = 57769
const WEIGHT_STRING = 57770
const LTRIM = 57771
const RTRIM = 57772
const TRIM = 57773
const JSON_ARRAY = 57774
const JSON_OBJECT = 57775
const JSON_QUOTE = 57776
const JSON_DEPTH = 57777
const JSON_TYPE = 57778
const JSON_LENGTH = 57779
const JSON_VALID = 57780
const JSON_ARRAY_APPEND = 57781
const JSON_ARRAY_INSERT = 57782
const JSON_INSERT = 57783
const JSON_MERGE = 57784
const JSON_MERGE_PATCH = 57785
const JSON_MERGE_PRESERVE = 57786
const JSON_REMOVE = 57787
const JSON_REPLACE = 57788
const JSON_SET = 57789
const JSON_UNQUOTE = 57790
const MATCH = 57791
const AGAINST = 57792
const BOOLEAN = 57793
const LANGUAGE = 57794
const WITH = 57795
const QUERY = 57796
const EXPANSION = 57797
const WITHOUT = 57798
const VALIDATION = 57799
const UNUSED = 57800
const ARRAY = 57801
const CUME_DIST = 57802
const DESCRIPTION = 57803
const DENSE_RANK = 57804
const EMPTY = 57805
const EXCEPT = 57806
const FIRST_VALUE = 57807
const GROUPING = 57808
const GROUPS = 57809
const JSON_TABLE = 57810
const LAG = 57811
const LAST_VALUE = 57812
const LATERAL = 57813
const LEAD = 57814
const NTH_VALUE = 57815
const NTILE = 57816
const OF = 57817
const OVER = 57818
const PERCENT_RANK = 57819
const RANK = 57820
const RECURSIVE = 57821
const ROW_NUMBER = 57822
const SYSTEM = 57823
const WINDOW = 57824
const ACTIVE = 57825
const ADMIN = 57826
const AUTOEXTEND_SIZE = 57827
const BUCKETS = 57828
const CLONE = 57829
const COLUMN_FORMAT = 57830
const COMPONENT = 57831
const DEFINITION = 57832
const ENFORCED = 57833
const ENGINE_ATTRIBUTE = 57834
const EXCLUDE = 57835
const FOLLOWING = 57836
const GEOMCOLLECTION = 57837
const GET_MASTER_PUBLIC_KEY = 57838
const HISTOGRAM = 57839
const HISTORY = 57840
const INACTIVE = 57841
const INVISIBLE = 57842
const LOCKED = 57843
const MASTER_COMPRESSION_ALGORITHMS = 57844
const MASTER_PUBLIC_KEY_PATH = 57845
const MASTER_TLS_CIPHERSUITES = 57846
const MASTER_ZSTD_COMPRESSION_LEVEL = 57847
const NESTED = 57848
const NETWORK_NAMESPACE = 57849
const NOWAIT = 57850
const NULLS = 57851
const OJ = 57852
const OLD = 57853
const OPTIONAL = 57854
const ORDINALITY = 57855
const ORGANIZATION = 57856
const OTHERS = 57857
const PARTIAL = 57858
const PATH = 57859
const PERSIST = 57860
const PERSIST_ONLY = 57861
const PRECEDING = 57862
const PRIVILEGE_CHECKS_USER = 57863
const PROCESS = 57864
const RANDOM = 57865
const REFERENCE = 57866
const REQUIRE_ROW_FORMAT = 57867
const RESOURCE = 57868
const RESPECT = 57869
const RESTART = 57870
const RETAIN = 57871
const REUSE = 57872
const ROLE = 57873
const SECONDARY = 57874
const SECONDARY_ENGINE = 57875
const SECONDARY_ENGINE_ATTRIBUTE = 57876
const SECONDARY_LOAD = 57877
const SECONDARY_UNLOAD = 57878
const SIMPLE = 57879
const SKIP = 57880
const SRID = 57881
const THREAD_PRIORITY = 57882
const TIES = 57883
const UNBOUNDED = 57884
const VCPU = 57885
const VISIBLE = 57886
const RETURNING = 57887
const FORMAT = 57888
const TREE = 57889
const VITESS = 57890
const TRADITIONAL = 57891
const LOCAL = 57892
const LOW_PRIORITY = 57893
const NO_WRITE_TO_BINLOG = 57894
const LOGS = 57895
const ERROR = 57896
const GENERAL = 57897
const HOSTS = 57898
const OPTIMIZER_COSTS = 57899
const USER_RESOURCES = 57900
const SLOW = 57901
const CHANNEL = 57902
const RELAY = 57903
const EXPORT = 57904
const CURRENT = 57905
const ROW = 57906
const ROWS = 57907
const AVG_ROW_LENGTH = 57908
const CONNECTION = 57909
const CHECKSUM = 57910
const DELAY_KEY_WRITE = 57911
const ENCRYPTION = 57912
const ENGINE = 57913
const INSERT_METHOD = 57914
const MAX_ROWS = 57915
const MIN_ROWS = 57916
const PACK_KEYS = 57917
const PASSWORD = 57918
const FIXED = 57919
const DYNAMIC = 57920
const COMPRESSED = 57921
const REDUNDANT = 57922
const COMPACT = 57923
const ROW_FORMAT = 57924
const STATS_AUTO_RECALC = 57925
const STATS_PERSISTENT = 57926
const STATS_SAMPLE_PAGES = 57927
const STORAGE = 57928
const MEMORY = 57929
const DISK = 57930
const PARTITIONS = 57931
const LINEAR = 57932
const RANGE = 57933
const LIST = 57934
const SUBPARTITION = 57935
const SUBPARTITIONS = 57936
const HASH = 57937

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"WINDOW_EXPR",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	613, 145,
	-2, 153,
	-1, 48,
	131, 153,
	172, 153,
	333, 153,
	-2, 492,
	-1, 55,
	35, 728,
	233, 728,
	244, 728,
	279, 742,
	280, 742,
	-2, 730,
	-1, 60,
	235, 755,
	-2, 753,
	-1, 114,
	232, 1339,
	-2, 119,
	-1, 116,
	1, 146,
	613, 146,
	-2, 153,
	-1, 127,
	132, 378,
	238, 378,
	-2, 481,
	-1, 146,
	131, 153,
	172, 153,
	333, 153,
	-2, 501,
	-1, 708,
	217, 1360,
	-2, 1356,
	-1, 709,
	217, 1361,
	-2, 1357,
	-1, 785,
	59, 823,
	-2, 838,
	-1, 822,
	148, 1769,
	-2, 112,
	-1, 823,
	148, 1611,
	-2, 113,
	-1, 829,
	148, 1694,
	-2, 1333,
	-1, 979,
	148, 1538,
	-2, 1330,
	-1, 1020,
	243, 41,
	248, 41,
	-2, 389,
	-1, 1103,
	1, 543,
	613, 543,
	-2, 153,
	-1, 1346,
	59, 824,
	-2, 843,
	-1, 1347,
	59, 825,
	-2, 844,
	-1, 1400,
	131, 153,
	172, 153,
	333, 153,
	-2, 428,
	-1, 1479,
	132, 378,
	238, 378,
	-2, 481,
	-1, 1488,
	243, 42,
	248, 42,
	-2, 390,
	-1, 1802,
	217, 1365,
	-2, 1359,
	-1, 1886,
	131, 153,
	172, 153,
	333, 153,
	-2, 429,
	-1, 1893,
	25, 174,
	-2, 176,
	-1, 2150,
	86, 39,
	-2, 880,
	-1, 2202,
	77, 94,
	86, 94,
	-2, 900,
	-1, 2269,
	588, 655,
	-2, 629,
	-1, 2423,
	49, 1300,
	-2, 1294,
	-1, 2658,
	86, 39,
	-2, 881,
	-1, 2696,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 872,
	-1, 3008,
	588, 655,
	-2, 643,
	-1, 3093,
	22, 1696,
	32, 1696,
	173, 1696,
	255, 1696,
	313, 1696,
	314, 1696,
	315, 1696,
	316, 1696,
	317, 1696,
	318, 1696,
	319, 1696,
	321, 1696,
	322, 1696,
	323, 1696,
	324, 1696,
	325, 1696,
	326, 1696,
	327, 1696,
	328, 1696,
	329, 1696,
	330, 1696,
	331, 1696,
	332, 1696,
	334, 1696,
	336, 1696,
	337, 1696,
	338, 1696,
	339, 1696,
	340, 1696,
	341, 1696,
	342, 1696,
	343, 1696,
	344, 1696,
	347, 1696,
	348, 1696,
	349, 1696,
	350, 1696,
	351, 1696,
	352, 1696,
	353, 1696,
	354, 1696,
	355, 1696,
	468, 1696,
	-2, 587,
}

const yyPrivate = 57344

const yyLast = 45312

var yyAct = [...]int{
	708, 2798, 2799, 717, 2797, 3152, 3161, 3126, 1883, 2989,
	3127, 3091, 3024, 1403, 2637, 710, 2772, 2365, 2570, 3043,
	3066, 1817, 2476, 2483, 2973, 2094, 692, 37, 1166, 3,
	2923, 2524, 2434, 2533, 2538, 1837, 2535, 2534, 2532, 2537,
	2536, 2947, 2759, 2971, 2437, 693, 2826, 2961, 2138, 778,
	1819, 186, 1953, 1361, 186, 2552, 577, 186, 612, 2491,
	2438, 800, 592, 2553, 186, 2435, 2667, 2639, 2831, 2661,
	2327, 2808, 186, 616, 2363, 2364, 2173, 690, 1324, 711,
	638, 2555, 2196, 609, 1856, 2687, 2432, 186, 2424, 1841,
	691, 2165, 2653, 1916, 2648, 2234, 2575, 610, 2310, 1457,
	2266, 1921, 1941, 1115, 782, 2235, 786, 2236, 1872, 592,
	2114, 608, 592, 186, 592, 1984, 2384, 827, 36, 2185,
	155, 38, 2157, 982, 803, 2302, 2140, 1348, 1765, 801,
	1052, 780, 1796, 1144, 1695, 1940, 1962, 824, 1861, 1764,
	1028, 141, 1705, 1860, 1848, 1653, 604, 1998, 1923, 2228,
	1504, 1015, 1010, 1392, 1486, 2204, 621, 91, 1251, 1602,
	1370, 1863, 1328, 1672, 1717, 989, 1187, 95, 1598, 96,
	1938, 986, 1021, 1582, 1493, 990, 1912, 1016, 1017, 1391,
	1375, 1389, 792, 1158, 1799, 1018, 1761, 1164, 1099, 1607,
	1452, 1478, 124, 125, 814, 98, 790, 76, 787, 97,
	599, 788, 1258, 1254, 1809, 2998, 1842, 2259, 89, 3153,
	1955, 1956, 1957, 159, 119, 2760, 2521, 2950, 85, 117,
	118, 1955, 2286, 2285, 1996, 2257, 789, 77, 8, 2752,
	1567, 7, 6, 87, 87, 2716, 581, 87, 3081, 2318,
	126, 90, 2319, 2951, 3022, 808, 1660, 813, 794, 3021,
	1659, 1675, 188, 189, 190, 1814, 1815, 1658, 1657, 1656,
	2802, 120, 548, 983, 2802, 1655, 600, 1057, 1638, 1032,
	1188, 2543, 1647, 3112, 1054, 781, 779, 1008, 602, 2136,
	603, 2420, 2626, 3130, 2167, 2388, 3170, 1069, 1070, 1071,
	821, 1074, 1075, 1076, 1077, 1066, 795, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1031, 828, 802, 999, 994, 3083,
	1355, 102, 3125, 3143, 2643, 2642, 1986, 1007, 2541, 2543,
	120, 1006, 2280, 1058, 1060, 1061, 1005, 1004, 1204, 1188,
	3022, 2974, 2540, 2115, 2801, 3082, 1665, 2919, 2801, 2918,
	2547, 2765, 1056, 1055, 2766, 3169, 3076, 78, 3156, 78,
	80, 2040, 104, 105, 3017, 108, 1072, 3139, 114, 2773,
	87, 183, 78, 3067, 543, 1981, 1198, 3075, 3096, 3016,
	2326, 2608, 1932, 182, 1467, 2294, 2541, 3101, 2472, 2293,
	78, 2473, 2474, 2137, 774, 775, 776, 777, 120, 2213,
	785, 3099, 2212, 1878, 1879, 2214, 1926, 121, 2547, 143,
	3105, 3106, 2317, 2037, 2176, 3003, 1877, 1161, 2493, 2494,
	164, 2844, 1139, 1140, 1816, 2038, 3100, 1134, 816, 817,
	1393, 772, 1394, 771, 87, 1102, 87, 1122, 582, 2177,
	1135, 2260, 1123, 2990, 3131, 1198, 1128, 2225, 1122, 87,
	2572, 153, 1003, 1123, 1108, 1109, 142, 1896, 1895, 581,
	2544, 1121, 581, 1120, 2664, 3132, 590, 87, 2599, 1201,
	1646, 1202, 1203, 2353, 1151, 1194, 1153, 161, 1186, 162,
	2597, 581, 594, 2576, 588, 2303, 1111, 2954, 1557, 2955,
	1588, 1332, 1648, 1649, 1650, 130, 131, 152, 151, 181,
	1073, 1098, 2267, 1963, 2289, 2479, 1155, 1999, 2565, 2016,
	1001, 2017, 3155, 2018, 1150, 1152, 2566, 1141, 2544, 2004,
	1583, 2305, 1143, 1160, 2492, 1136, 1104, 1142, 1137, 1138,
	2003, 1129, 1558, 2754, 1559, 2573, 2495, 2753, 1220, 2019,
	1079, 1078, 2574, 186, 1194, 186, 2001, 1925, 186, 2903,
	2480, 2010, 2007, 2009, 2008, 2011, 2012, 1966, 3113, 1041,
	2928, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1228,
	1230, 1231, 2002, 1011, 2005, 2482, 2750, 1012, 592, 1168,
	592, 592, 2640, 1039, 1857, 1012, 1003, 1097, 998, 2477,
	1050, 1000, 1049, 2387, 1048, 592, 592, 147, 128, 154,
	135, 127, 3137, 148, 149, 1047, 2493, 2494, 1046, 165,
	1045, 1148, 1044, 1043, 2478, 1149, 1038, 1335, 171, 136,
	1471, 1051, 2038, 37, 1232, 1154, 1180, 1232, 1002, 2495,
	2354, 3171, 987, 139, 137, 132, 133, 134, 138, 987,
	1023, 3165, 2309, 987, 1024, 129, 2484, 985, 1023, 1147,
	1492, 1101, 1059, 1118, 140, 1124, 1125, 1126, 1127, 1132,
	1599, 582, 2141, 2143, 582, 1939, 815, 1193, 1190, 1191,
	1192, 1197, 1199, 1196, 2306, 1195, 1990, 1595, 1162, 1163,
	1174, 1062, 1068, 582, 2997, 1189, 2258, 1003, 2749, 995,
	2277, 2514, 1009, 2288, 1985, 1589, 997, 996, 1465, 1590,
	1591, 1030, 1156, 1464, 1042, 1463, 1843, 1844, 2322, 1596,
	2291, 2052, 2492, 1461, 547, 1235, 1236, 1237, 1238, 542,
	2301, 2986, 2261, 2300, 2495, 1243, 2703, 1246, 1040, 720,
	720, 1233, 1234, 720, 1169, 156, 1193, 1190, 1191, 1192,
	1197, 1199, 1196, 2683, 1195, 1001, 1322, 1100, 2209, 2665,
	2172, 1983, 2127, 1884, 1189, 1808, 1491, 1379, 1303, 1030,
	2328, 1113, 1002, 1232, 1231, 116, 2471, 1170, 1171, 188,
	189, 190, 186, 1697, 3015, 1929, 592, 592, 797, 1587,
	1239, 1030, 2312, 1117, 1159, 81, 1145, 2311, 3011, 1053,
	1030, 1317, 186, 1569, 1568, 1570, 1571, 1572, 2714, 2715,
	2800, 1029, 2312, 3104, 2800, 2346, 1338, 2311, 111, 2039,
	1342, 592, 2745, 150, 1930, 186, 782, 2545, 2546, 86,
	592, 86, 1928, 77, 2142, 1183, 592, 2677, 1181, 1182,
	2549, 1339, 1030, 2481, 86, 1119, 1608, 2000, 1323, 1592,
	1336, 1256, 2330, 1257, 1260, 3080, 144, 3103, 824, 145,
	1395, 1718, 86, 1184, 1698, 3163, 1931, 1131, 3164, 1029,
	3162, 1110, 1107, 1002, 1033, 1023, 1927, 2250, 1133, 1035,
	3117, 3079, 2929, 1036, 1034, 2545, 2546, 1203, 157, 112,
	1718, 1029, 2066, 1202, 1203, 169, 1033, 1023, 2549, 1677,
	1029, 1035, 1067, 1030, 1037, 1036, 1034, 1309, 1310, 1311,
	1312, 1313, 1323, 1678, 1679, 1676, 2840, 2721, 2340, 2339,
	2338, 2332, 1340, 2336, 1341, 2331, 95, 2329, 96, 2720,
	1970, 1501, 2334, 1584, 1116, 1585, 1500, 177, 1586, 1490,
	1146, 2333, 1029, 1329, 1980, 1978, 1041, 1039, 1023, 1026,
	1027, 1982, 987, 3172, 98, 3133, 1020, 1024, 2335, 2337,
	1103, 1224, 1225, 1226, 1227, 1229, 1228, 1230, 1231, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	1204, 1326, 1667, 1669, 1670, 176, 178, 179, 180, 2485,
	1609, 779, 186, 2489, 1204, 1975, 1453, 781, 1360, 1204,
	3045, 2488, 1357, 1029, 1975, 1204, 1462, 1668, 1337, 1023,
	1026, 1027, 2704, 987, 1390, 2075, 1380, 1020, 1024, 3167,
	2055, 1385, 1386, 1226, 1227, 1229, 1228, 1230, 1231, 592,
	2911, 1488, 1979, 2979, 2910, 2490, 828, 3173, 1019, 1497,
	2486, 1977, 3046, 1499, 1577, 2487, 1502, 1503, 592, 592,
	2779, 592, 2780, 592, 592, 1220, 592, 592, 592, 592,
	592, 592, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1206,
	1533, 1220, 592, 2321, 1575, 2980, 186, 1538, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1229, 1228, 1230, 1231, 2044,
	2045, 2046, 1564, 186, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1229, 1228, 1230, 1231, 2901, 592, 1576, 186, 2790,
	2789, 1201, 2728, 1202, 1203, 1498, 1343, 2727, 2717, 1597,
	2522, 2348, 592, 819, 186, 1201, 2510, 1202, 1203, 2232,
	1201, 2231, 1202, 1203, 1747, 1204, 1201, 1574, 1202, 1203,
	186, 1935, 1532, 1552, 1534, 1578, 1562, 186, 1468, 1469,
	1470, 1561, 1484, 2605, 1560, 1563, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 592, 1477, 1222, 1223, 1224,
	1225, 1226, 1227, 1229, 1228, 1230, 1231, 1494, 1494, 592,
	592, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1228,
	1230, 1231, 1460, 1496, 1550, 1535, 1544, 186, 1541, 1506,
	1540, 1507, 1539, 1509, 1511, 1513, 1364, 1515, 1517, 1519,
	1521, 1523, 1495, 1542, 1543, 1474, 1475, 1473, 1355, 1548,
	1549, 1487, 1739, 1728, 1729, 1730, 1731, 1741, 1732, 1733,
	1734, 1746, 1742, 1735, 1736, 1743, 1744, 1745, 1737, 1738,
	1740, 1604, 1612, 1696, 723, 724, 725, 1702, 1702, 1616,
	3134, 1618, 1619, 1620, 1621, 1365, 1708, 592, 1625, 1700,
	1700, 1699, 1703, 3006, 1610, 1611, 1201, 3005, 1202, 1203,
	1637, 1673, 592, 592, 1204, 2983, 1220, 1355, 1615, 1536,
	1216, 2982, 1217, 2981, 1722, 1622, 1623, 1624, 1723, 1600,
	188, 189, 190, 2906, 2711, 2891, 1218, 1219, 1215, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1229, 1228, 1230, 1231,
	1792, 1680, 2890, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1681, 120, 1006, 1671,
	1614, 1466, 1204, 1005, 1004, 2839, 2837, 1719, 1204, 2786,
	2725, 186, 1800, 188, 189, 190, 592, 2216, 2083, 1636,
	2710, 2577, 1635, 188, 189, 190, 2939, 1355, 1204, 2396,
	2513, 2512, 1762, 188, 189, 190, 1643, 1644, 2241, 2392,
	186, 2229, 1319, 592, 1994, 188, 189, 190, 1993, 2569,
	718, 1791, 1674, 186, 188, 189, 190, 592, 1951, 1840,
	718, 1822, 186, 1204, 186, 1639, 186, 186, 592, 1605,
	1793, 592, 718, 1573, 1565, 1201, 1555, 1202, 1203, 1551,
	1547, 1827, 592, 1828, 1811, 3135, 1849, 1850, 1800, 1546,
	1762, 1355, 1893, 188, 189, 190, 824, 1204, 1220, 824,
	2051, 1802, 188, 189, 190, 1704, 1949, 1545, 1366, 1157,
	2603, 1355, 1710, 1711, 1173, 2163, 3154, 1355, 1804, 1805,
	1204, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1229, 1228,
	1230, 1231, 95, 1201, 96, 1202, 1203, 592, 1204, 1201,
	2936, 1202, 1203, 1801, 1942, 1943, 1944, 2935, 1859, 1946,
	1948, 1950, 95, 2895, 96, 2894, 1833, 2771, 3122, 1201,
	1204, 1202, 1203, 2174, 592, 1204, 3121, 1355, 1424, 1803,
	592, 1497, 1806, 1807, 1497, 2062, 1497, 1802, 2268, 2122,
	1355, 94, 1974, 2246, 1902, 1903, 1904, 1905, 1897, 1892,
	1898, 1899, 1900, 1901, 1201, 794, 1202, 1203, 1821, 2174,
	1204, 1887, 2103, 1355, 2181, 1888, 1908, 1909, 1910, 1911,
	1832, 2057, 1870, 2163, 3073, 592, 2676, 1696, 2678, 1854,
	2056, 1200, 1835, 1696, 1696, 1918, 2163, 3053, 1201, 1964,
	1202, 1203, 1204, 1891, 2182, 92, 1204, 1852, 1924, 1355,
	1204, 3041, 2095, 100, 1204, 92, 93, 2061, 1875, 1874,
	1204, 1201, 94, 1202, 1203, 1204, 93, 1368, 2182, 1890,
	1889, 186, 188, 189, 190, 3010, 1947, 1204, 186, 1201,
	2676, 1202, 1203, 101, 828, 186, 186, 828, 1204, 186,
	2466, 186, 1934, 2994, 100, 1204, 99, 1961, 186, 2038,
	1204, 1201, 2163, 1202, 1203, 186, 1201, 1204, 1202, 1203,
	1355, 2163, 3049, 1032, 1919, 1914, 1915, 101, 2182, 1412,
	1355, 2053, 1933, 1494, 1937, 1355, 2649, 1945, 100, 2899,
	99, 186, 1367, 3036, 1355, 1969, 592, 2746, 1972, 94,
	1973, 1201, 2698, 1202, 1203, 1968, 2622, 2624, 1987, 1919,
	1967, 2163, 2999, 2763, 2996, 2622, 1355, 1971, 1031, 2620,
	2205, 1989, 1988, 1355, 2914, 1355, 2501, 1991, 1992, 2408,
	2611, 2163, 2902, 1201, 1876, 1202, 1203, 1201, 2233, 1202,
	1203, 1201, 2610, 1202, 1203, 1201, 2053, 1202, 1203, 2120,
	2433, 1201, 2088, 1202, 1203, 1976, 1201, 1355, 1202, 1203,
	2676, 1425, 2763, 1355, 2029, 2030, 2163, 2761, 1201, 2032,
	1202, 1203, 1673, 1975, 1355, 2072, 1997, 2071, 2033, 1201,
	1975, 1202, 1203, 2206, 1204, 1958, 1201, 1354, 1202, 1203,
	1847, 1201, 2208, 1202, 1203, 2681, 1355, 1359, 1201, 1812,
	1202, 1203, 1200, 1355, 2088, 1355, 2503, 2502, 2499, 2500,
	1651, 2048, 1975, 2050, 1594, 2022, 709, 1387, 1204, 1438,
	1441, 1442, 1443, 1444, 1445, 1446, 2049, 1447, 1448, 1449,
	1450, 1451, 1426, 1427, 1428, 1429, 1410, 1411, 1439, 1014,
	1413, 1013, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 2499, 2498, 1423, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 784, 186, 2182, 1355, 2112, 187, 2036, 2205,
	187, 186, 1204, 187, 2053, 1355, 592, 1702, 593, 87,
	187, 3109, 592, 1674, 2038, 2287, 3056, 2133, 187, 1700,
	2047, 2147, 2159, 592, 1456, 2271, 1204, 2264, 2265, 2525,
	2111, 2163, 2162, 187, 1456, 1455, 2925, 94, 1401, 1400,
	1362, 2151, 2892, 1204, 2851, 1201, 186, 1202, 1203, 182,
	186, 2145, 2744, 2741, 2723, 593, 2614, 2613, 593, 187,
	593, 2065, 2206, 37, 2729, 2215, 2178, 1204, 1458, 87,
	2237, 2038, 2198, 121, 1917, 2567, 2527, 2523, 2063, 1201,
	1528, 1202, 1203, 2694, 2110, 2272, 164, 1913, 1907, 1906,
	1204, 1580, 1489, 2081, 2053, 1485, 1454, 1204, 113, 2238,
	1102, 2688, 2689, 2571, 1440, 2926, 1802, 1932, 2109, 1825,
	2164, 3149, 1204, 592, 2730, 2731, 2732, 2238, 2693, 186,
	3147, 3128, 3020, 2944, 2691, 2108, 186, 2519, 2218, 2518,
	1529, 1530, 1531, 1201, 1641, 1202, 1203, 2517, 2433, 2452,
	592, 2160, 2251, 161, 2733, 162, 2023, 592, 1801, 2107,
	2451, 1497, 1497, 2455, 1329, 2135, 592, 1201, 2456, 1202,
	1203, 1525, 2124, 2125, 2197, 181, 3115, 3074, 2226, 2227,
	2156, 2284, 2106, 2161, 1201, 2263, 1202, 1203, 2283, 2105,
	1204, 1839, 186, 186, 186, 186, 186, 2219, 2171, 1363,
	1204, 2734, 2735, 1831, 2104, 2203, 1642, 2453, 1201, 2682,
	1202, 1203, 2454, 186, 186, 1924, 2413, 2207, 1526, 1527,
	2210, 2412, 1353, 1349, 2457, 2978, 2191, 2192, 2217, 186,
	2220, 1201, 2830, 1202, 1203, 2425, 2427, 1350, 1201, 2832,
	1202, 1203, 2669, 2821, 2428, 2820, 2240, 2230, 1696, 798,
	2668, 2243, 2244, 1201, 2672, 1202, 1203, 799, 2422, 1593,
	770, 2239, 1829, 1830, 1352, 2497, 1351, 2242, 2252, 2253,
	2254, 2247, 2098, 2223, 1714, 2248, 1064, 1063, 2585, 2282,
	2237, 2315, 2097, 1172, 92, 165, 2279, 1702, 1715, 1702,
	1477, 94, 1702, 2819, 171, 93, 92, 1702, 2278, 1700,
	121, 1700, 2674, 2345, 1700, 94, 592, 93, 3159, 1700,
	1204, 2393, 2515, 2397, 2281, 2273, 2274, 2341, 592, 2026,
	1204, 1201, 3088, 1202, 1203, 2015, 1204, 1849, 1850, 2995,
	2304, 1201, 2921, 1202, 1203, 592, 2496, 2195, 1836, 2654,
	2324, 2187, 2190, 2191, 2192, 2188, 2402, 2189, 2193, 2014,
	186, 2013, 2313, 2323, 592, 2314, 2042, 2366, 2307, 2366,
	2368, 99, 2366, 592, 2371, 806, 807, 2366, 2966, 2372,
	592, 592, 2965, 186, 186, 186, 186, 186, 2378, 2379,
	2380, 2381, 2342, 2838, 2836, 186, 2325, 2835, 2828, 2411,
	186, 2402, 2096, 186, 1204, 186, 786, 2410, 186, 186,
	186, 2394, 2093, 2398, 2445, 2807, 2742, 2359, 2092, 100,
	1204, 156, 2673, 2439, 2465, 2671, 1342, 2198, 2389, 2390,
	2391, 2528, 1959, 1472, 2415, 2430, 805, 2827, 2395, 2662,
	2174, 2811, 2416, 2511, 2373, 2374, 2375, 2376, 2377, 101,
	2436, 1201, 186, 1202, 1203, 2436, 3150, 101, 1204, 2401,
	100, 1201, 99, 1202, 1203, 592, 2403, 1201, 100, 1202,
	1203, 94, 2159, 592, 1204, 3151, 3150, 3151, 186, 2414,
	101, 2355, 2404, 2405, 2406, 2073, 2091, 2467, 2417, 186,
	2468, 100, 1823, 99, 1381, 2407, 1372, 2984, 787, 106,
	107, 788, 2089, 2709, 796, 103, 88, 186, 2551, 187,
	186, 187, 1, 2458, 187, 2713, 3098, 2469, 2462, 2463,
	2586, 560, 2447, 2448, 1813, 2450, 2446, 1604, 95, 2449,
	96, 2444, 1327, 3129, 3094, 1201, 3095, 1202, 1203, 2475,
	2085, 2530, 2507, 2506, 593, 1566, 593, 593, 1556, 2505,
	2774, 1201, 1763, 1202, 1203, 2922, 2084, 2559, 2531, 1965,
	2740, 593, 593, 1922, 157, 1022, 146, 1885, 2508, 2509,
	2558, 169, 1886, 2550, 1924, 3069, 110, 980, 109, 1025,
	1130, 1960, 2562, 592, 2764, 2224, 1894, 2619, 2529, 1201,
	1407, 1202, 1203, 1405, 1406, 1404, 1409, 1408, 2074, 1353,
	1349, 2578, 2625, 1645, 2581, 1201, 2580, 1202, 1203, 592,
	186, 589, 2194, 177, 1350, 184, 1396, 2583, 2584, 1373,
	2589, 1065, 550, 2504, 1995, 556, 2595, 1244, 2592, 2593,
	1640, 2594, 2409, 2588, 2596, 2211, 2598, 825, 2600, 1346,
	1347, 1352, 818, 1351, 1824, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 2149, 2441, 2666, 2421,
	2423, 176, 178, 179, 180, 2166, 2426, 186, 2187, 2190,
	2191, 2192, 2188, 2419, 2189, 2193, 2977, 2829, 2688, 2689,
	3054, 2221, 1369, 2064, 1716, 2712, 1864, 1666, 614, 613,
	611, 2660, 2650, 2651, 2152, 2641, 186, 2175, 2655, 2656,
	1207, 712, 2139, 1382, 2186, 2184, 2647, 2183, 2024, 1871,
	2690, 2663, 2670, 2695, 2686, 186, 3090, 1866, 186, 186,
	186, 2675, 2685, 1862, 2158, 1356, 1358, 622, 592, 592,
	615, 607, 2706, 2557, 2290, 2692, 2568, 2292, 187, 2222,
	2564, 1185, 593, 593, 2701, 2702, 1345, 601, 993, 2700,
	2699, 1713, 2927, 3001, 2041, 2607, 1344, 2559, 187, 1726,
	2707, 2708, 1727, 2747, 2748, 3008, 2539, 2758, 2520, 2269,
	2558, 1952, 592, 592, 592, 592, 63, 593, 41, 2972,
	3042, 187, 682, 679, 2809, 2810, 593, 2385, 2724, 2386,
	2726, 2948, 593, 678, 3026, 2949, 1754, 596, 3111, 1176,
	812, 32, 31, 30, 29, 28, 23, 22, 21, 20,
	19, 25, 18, 17, 16, 2542, 3124, 2770, 3158, 115,
	2718, 2719, 50, 47, 1702, 45, 1702, 123, 122, 48,
	44, 1105, 42, 27, 26, 15, 1700, 14, 1700, 13,
	2768, 2769, 12, 11, 10, 9, 5, 4, 35, 34,
	33, 1179, 24, 2, 2256, 1954, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2785,
	0, 0, 2751, 0, 2781, 0, 2755, 2756, 2757, 2824,
	0, 0, 592, 2782, 592, 0, 0, 0, 0, 2806,
	0, 0, 0, 0, 2366, 2793, 2366, 2803, 2794, 0,
	0, 0, 1702, 0, 0, 0, 2805, 37, 0, 0,
	2845, 0, 0, 0, 1700, 0, 2853, 2812, 2813, 0,
	0, 0, 0, 0, 2439, 0, 0, 2847, 2439, 0,
	2825, 0, 0, 2834, 2833, 2849, 0, 0, 0, 2843,
	0, 0, 2841, 0, 0, 592, 0, 0, 187, 0,
	2436, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 592, 0, 0, 0, 0, 0, 0, 2857, 0,
	0, 0, 0, 0, 592, 0, 2854, 2855, 0, 0,
	2900, 0, 0, 0, 0, 593, 0, 0, 0, 0,
	2896, 0, 0, 0, 0, 2898, 2904, 2897, 0, 2941,
	2942, 0, 2924, 0, 593, 593, 1702, 593, 2912, 593,
	593, 0, 593, 593, 593, 593, 593, 593, 1700, 592,
	2945, 2916, 0, 592, 592, 0, 0, 2917, 593, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 592, 0, 0, 2946, 0, 0, 0, 0,
	0, 0, 593, 0, 187, 0, 0, 0, 0, 0,
	2967, 2968, 2970, 2969, 0, 0, 0, 0, 593, 0,
	187, 0, 0, 2907, 2908, 2909, 2952, 2988, 0, 2985,
	2439, 0, 0, 592, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 2991, 0, 0, 2976, 186, 0,
	0, 2987, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 593, 0, 0, 0, 2953, 592, 186, 2993, 2956,
	2957, 2958, 0, 2959, 2960, 593, 593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 37, 3000,
	0, 3009, 0, 187, 0, 0, 0, 3007, 3004, 0,
	0, 3012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 592, 3023, 0,
	0, 0, 0, 1720, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 592, 592, 593, 3040, 0, 0, 3047, 0, 0,
	0, 0, 37, 0, 0, 3055, 0, 0, 593, 593,
	3057, 0, 0, 0, 0, 1789, 0, 592, 3078, 2924,
	3070, 3068, 3060, 3065, 3077, 3062, 3061, 3059, 3064, 3063,
	0, 186, 592, 3052, 0, 0, 0, 0, 2436, 0,
	0, 1356, 1810, 0, 3030, 0, 3086, 3031, 3032, 3033,
	3034, 3035, 3089, 0, 0, 0, 3107, 3097, 3102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 592, 0,
	0, 0, 3114, 0, 0, 1834, 0, 187, 0, 182,
	0, 0, 593, 0, 0, 0, 3123, 3118, 0, 0,
	592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 0, 592, 121, 0, 0, 187, 0, 1702, 593,
	3140, 3138, 3144, 3142, 3141, 3148, 164, 3146, 0, 187,
	1700, 0, 3145, 593, 0, 3136, 0, 0, 187, 0,
	187, 0, 187, 187, 593, 3160, 0, 593, 3166, 0,
	3168, 0, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 0, 0, 0, 1702, 0, 3176, 3177, 2942, 3175,
	683, 0, 0, 0, 0, 0, 1700, 0, 3174, 0,
	0, 0, 0, 161, 0, 162, 0, 1936, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2262, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 593, 0, 121, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 591, 0, 0, 0, 0, 0, 0, 0,
	593, 0, 0, 0, 0, 0, 593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 826,
	0, 0, 984, 0, 991, 161, 0, 162, 0, 0,
	0, 593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1480, 1481, 152, 151, 181, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 187, 187, 0, 0, 187, 0, 187, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 593, 0, 0, 147, 1482, 154, 0, 1479,
	0, 148, 149, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 2054, 0, 0, 0, 2058, 0, 2059, 2060,
	0, 156, 0, 0, 0, 0, 0, 2068, 0, 0,
	2069, 2070, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2076, 2077, 2078,
	2079, 2080, 0, 2082, 0, 0, 0, 0, 0, 2086,
	0, 2087, 0, 0, 0, 2090, 0, 0, 0, 0,
	0, 0, 0, 2099, 2100, 2101, 2102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2113, 0, 2116, 2117,
	2118, 2119, 0, 2121, 2123, 0, 0, 0, 0, 0,
	0, 2128, 2129, 2130, 2131, 2132, 0, 1834, 0, 2134,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 2146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 593, 0, 157, 0, 0, 0, 593, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 39, 40, 80, 0, 0, 0, 0, 0,
	0, 150, 187, 0, 0, 0, 187, 0, 0, 0,
	0, 84, 0, 177, 0, 43, 69, 70, 0, 67,
	71, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 144, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 56, 0, 0,
	0, 176, 178, 179, 180, 0, 157, 0, 87, 593,
	0, 0, 0, 169, 0, 187, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 0,
	0, 0, 0, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 826, 0,
	826, 826, 0, 0, 0, 0, 0, 0, 187, 187,
	187, 187, 187, 0, 0, 1175, 1177, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 187,
	187, 0, 0, 176, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 2352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2367, 46, 49, 52, 51, 54, 0, 66,
	0, 0, 75, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2399, 2400, 0, 55, 83, 82, 0, 0,
	64, 65, 53, 0, 0, 0, 0, 0, 73, 74,
	0, 0, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 0, 1320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 0, 0, 0, 0, 0, 2442, 57, 58,
	0, 59, 60, 61, 62, 0, 187, 0, 0, 0,
	593, 0, 0, 0, 2460, 2461, 0, 0, 0, 593,
	0, 0, 0, 0, 0, 0, 593, 593, 0, 187,
	187, 187, 187, 187, 0, 0, 1333, 1334, 0, 0,
	0, 187, 0, 0, 0, 0, 187, 0, 0, 187,
	0, 187, 0, 0, 187, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1377, 0, 0, 0, 0, 0, 0, 0, 0,
	826, 0, 0, 0, 0, 0, 1397, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 0, 1330, 0, 0, 0, 0, 0, 593,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 187, 0, 0, 2587, 0,
	0, 0, 0, 0, 0, 2591, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 187, 0, 0, 2601,
	2602, 2604, 2606, 86, 0, 0, 0, 545, 0, 2612,
	0, 0, 0, 0, 2616, 2617, 2618, 595, 0, 0,
	0, 2621, 0, 0, 0, 773, 0, 2623, 0, 0,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2644, 2645, 2646, 0, 0, 0, 0, 0, 0, 2652,
	0, 0, 0, 0, 0, 2657, 988, 0, 0, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 0, 0, 0, 0, 593, 187, 0, 2679, 2680,
	0, 0, 2684, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 984,
	2696, 2697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1320, 0, 0, 0, 0, 0, 1505, 1505,
	0, 1505, 0, 1505, 1505, 0, 1514, 1505, 1505, 1505,
	1505, 1505, 0, 187, 0, 0, 0, 0, 0, 1320,
	0, 1320, 984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 719, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 1579, 0, 0, 0,
	0, 187, 0, 0, 187, 187, 187, 0, 0, 0,
	2762, 0, 1601, 0, 593, 593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 826, 0, 0, 593, 593,
	593, 593, 0, 0, 783, 0, 79, 0, 0, 826,
	826, 0, 0, 2791, 0, 0, 0, 2792, 0, 0,
	0, 0, 0, 2796, 783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2804, 0, 0, 0, 0,
	992, 0, 0, 0, 0, 0, 2814, 0, 2816, 2817,
	0, 0, 0, 1425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 1320, 0, 0, 0, 0, 0,
	0, 0, 1724, 1725, 0, 0, 0, 0, 593, 0,
	593, 1438, 1441, 1442, 1443, 1444, 1445, 1446, 0, 1447,
	1448, 1449, 1450, 1451, 1426, 1427, 1428, 1429, 1410, 1411,
	1439, 0, 1413, 0, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 0, 826, 1423, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 0, 0, 2913, 0, 0, 0,
	0, 0, 0, 0, 0, 2920, 0, 0, 0, 0,
	0, 593, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 2930, 2931, 2932, 187, 2933, 2934, 593, 0, 0,
	0, 2937, 0, 2938, 0, 2940, 2943, 0, 0, 0,
	593, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2962, 1377, 0, 0,
	826, 0, 0, 0, 0, 0, 0, 0, 826, 0,
	0, 826, 0, 0, 0, 0, 1106, 0, 1112, 0,
	0, 1114, 984, 0, 0, 593, 0, 0, 0, 593,
	593, 0, 0, 0, 2992, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1476, 0,
	0, 0, 0, 0, 0, 0, 0, 991, 0, 0,
	0, 121, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 593,
	0, 0, 0, 0, 984, 3014, 0, 0, 0, 0,
	991, 0, 0, 0, 187, 0, 0, 0, 0, 3019,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	142, 0, 593, 187, 0, 0, 0, 0, 0, 3037,
	0, 0, 0, 0, 0, 3038, 3039, 0, 0, 0,
	0, 161, 0, 162, 0, 984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3050, 0, 1480,
	1481, 152, 151, 181, 0, 0, 0, 0, 0, 0,
	0, 593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3110, 0, 0, 0,
	0, 0, 0, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3116, 0, 187, 593, 0,
	0, 0, 0, 0, 0, 0, 2035, 0, 3120, 0,
	0, 147, 1482, 154, 0, 1479, 0, 148, 149, 0,
	0, 0, 0, 165, 1165, 0, 1165, 1165, 1384, 0,
	0, 0, 171, 0, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 3157,
	0, 0, 0, 0, 0, 0, 593, 0, 593, 0,
	783, 1240, 1241, 1242, 0, 1245, 0, 1247, 1248, 1249,
	1250, 0, 1253, 1255, 1255, 0, 1255, 1259, 1259, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 0, 1304, 1305, 1306, 1307, 1308, 0, 0, 0,
	0, 1259, 1259, 1259, 1259, 1259, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1325, 0, 826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 2153, 0, 0, 1402, 0, 0, 0, 0,
	0, 0, 0, 2168, 0, 0, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	1331, 0, 0, 0, 0, 0, 783, 150, 0, 0,
	783, 0, 0, 0, 0, 0, 783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1537,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 2245, 0, 578, 0, 0, 0, 169,
	0, 0, 810, 0, 0, 0, 0, 0, 0, 0,
	0, 1581, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 2270, 0, 0,
	0, 0, 0, 0, 0, 0, 2275, 0, 0, 0,
	0, 177, 564, 1613, 0, 0, 0, 0, 0, 0,
	1617, 0, 0, 0, 562, 0, 0, 0, 0, 0,
	0, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 0, 0,
	605, 0, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 0, 0, 0, 0, 176,
	178, 179, 180, 0, 559, 0, 0, 0, 0, 0,
	1654, 0, 804, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1320, 582, 1320, 0, 2148, 1320,
	0, 721, 722, 0, 1320, 0, 0, 1701, 0, 0,
	0, 0, 0, 0, 0, 0, 2383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 826, 551,
	565, 0, 584, 0, 583, 555, 0, 553, 557, 566,
	558, 0, 552, 0, 563, 1505, 0, 554, 567, 568,
	571, 574, 575, 576, 572, 570, 0, 561, 585, 0,
	0, 0, 0, 0, 2418, 0, 0, 0, 0, 0,
	0, 0, 0, 826, 0, 0, 0, 1320, 0, 0,
	2443, 1505, 1320, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 1858, 0, 0,
	1654, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1165, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 984, 0, 0, 1320, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2859, 2861, 2860, 2870, 2871,
	2872, 2873, 2874, 2875, 2876, 644, 0, 0, 684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	579, 0, 546, 0, 0, 587, 0, 0, 0, 0,
	0, 0, 546, 0, 0, 580, 0, 0, 0, 0,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2638, 0, 793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 811, 0, 811, 0, 0, 0, 0, 0, 2418,
	0, 546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1654, 0, 0, 0, 0, 0,
	0, 2006, 0, 0, 0, 0, 0, 0, 2020, 2021,
	0, 0, 2025, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 2031, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2865, 2866, 1838, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 992, 0, 0, 0, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2775, 2776, 2777, 2778, 992, 1252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 694, 0, 639,
	698, 641, 695, 696, 0, 637, 640, 697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1320, 0, 1320, 642, 643, 2858, 2862, 2863, 2864,
	2867, 2868, 2869, 2877, 2879, 667, 2878, 2880, 2881, 2882,
	2885, 2886, 2887, 2888, 2883, 2884, 2889, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 699, 0,
	700, 0, 605, 704, 0, 0, 0, 706, 705, 0,
	707, 681, 680, 0, 0, 701, 702, 1320, 703, 0,
	0, 0, 2846, 0, 2848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 1371, 0,
	0, 0, 2043, 0, 0, 0, 0, 0, 0, 0,
	0, 2915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2963,
	0, 0, 0, 2963, 2963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 546, 0, 0, 546, 0, 0, 0,
	0, 0, 1838, 0, 0, 2295, 2296, 2297, 2298, 2299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1654, 2308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2126, 0, 0,
	0, 0, 2316, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 783, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 1459, 0, 0, 0, 0,
	0, 0, 0, 2179, 2180, 0, 0, 0, 0, 0,
	0, 0, 2199, 0, 2200, 2201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3044, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1320, 0, 3048, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 826, 826, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3092, 0, 0, 0, 0, 0, 0, 0,
	1606, 0, 0, 2276, 0, 0, 0, 0, 0, 0,
	546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3044, 0,
	793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2516, 0, 0, 0, 0,
	1838, 0, 0, 546, 0, 0, 0, 0, 0, 0,
	2638, 0, 3092, 0, 0, 0, 0, 0, 0, 0,
	0, 2554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2563, 1661, 1662, 1663, 1664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2579, 0, 0, 2582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 1707, 0, 0, 0, 0,
	0, 0, 1712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2382, 0, 0, 0, 0, 1748, 1749, 1750,
	1751, 1752, 1753, 1755, 1759, 1760, 605, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	0, 1790, 0, 1794, 1795, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2659, 2440, 0, 79, 0, 605, 1865,
	1865, 1865, 1865, 1865, 605, 0, 0, 0, 0, 0,
	546, 0, 0, 0, 0, 0, 2199, 783, 0, 0,
	0, 1865, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2722,
	0, 0, 0, 0, 0, 0, 2548, 1321, 0, 1321,
	0, 0, 0, 0, 546, 0, 2556, 0, 2736, 0,
	0, 2737, 2738, 2739, 0, 0, 0, 0, 0, 0,
	0, 1553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 1920, 0, 0,
	0, 0, 0, 0, 721, 722, 0, 0, 0, 0,
	1701, 0, 1603, 2590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 1626, 1627, 546, 546, 546, 546,
	546, 546, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 811,
	0, 0, 0, 0, 0, 0, 811, 811, 0, 0,
	0, 0, 1321, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 811, 1603, 811, 811, 811, 811, 811, 0, 87,
	0, 0, 0, 0, 0, 713, 721, 722, 723, 724,
	725, 714, 716, 0, 0, 0, 715, 0, 0, 1553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	726, 727, 0, 0, 811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 793, 0,
	0, 2067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 0, 0, 0, 0, 0, 1603, 0,
	546, 0, 546, 0, 546, 1873, 2560, 2561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1252, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	2818, 0, 2822, 2823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2440, 0, 79, 0, 2440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3013, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1371, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	0, 0, 0, 546, 546, 0, 0, 546, 0, 2027,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	694, 2440, 0, 698, 0, 695, 696, 0, 0, 546,
	697, 0, 0, 0, 0, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2320, 0, 0, 0,
	3002, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2343, 2344, 0, 0, 79, 2347,
	0, 0, 811, 0, 2349, 2350, 2351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2356, 2357, 2358, 0,
	0, 1766, 2360, 0, 2361, 2362, 0, 0, 0, 2369,
	2370, 0, 0, 0, 0, 0, 0, 1766, 1766, 1766,
	1766, 1766, 605, 605, 605, 605, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3051, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 811, 811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1603, 0, 0,
	0, 546, 0, 0, 0, 0, 0, 2431, 0, 1553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2464, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 546, 0,
	0, 0, 0, 0, 0, 3119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2526, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 0, 0,
	0, 0, 0, 0, 2255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2609, 0, 0, 0, 0, 0, 0, 2615, 0,
	546, 546, 546, 546, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 605, 0, 0, 0, 0, 0, 0,
	0, 0, 1321, 0, 1321, 0, 0, 1321, 0, 0,
	0, 0, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 0, 0, 0, 0, 2743, 0, 0, 0,
	0, 0, 0, 0, 0, 1321, 0, 0, 0, 0,
	1321, 546, 546, 546, 546, 546, 0, 0, 0, 0,
	0, 0, 0, 2459, 0, 0, 0, 0, 546, 2767,
	0, 1553, 0, 546, 0, 0, 546, 2470, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2783, 0, 2784, 0,
	546, 0, 0, 2787, 2788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1321, 2795, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 0, 0,
	0, 0, 2815, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2850, 0, 0, 2852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2893, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 0, 0, 0,
	2975, 605, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 546, 0, 0, 546, 546, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 605, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3018, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 1321,
	0, 1321, 713, 721, 722, 723, 724, 725, 714, 716,
	0, 0, 0, 715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 605, 718, 726, 727, 0,
	0, 0, 0, 0, 0, 0, 1553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3027, 0,
	0, 0, 0, 0, 0, 1321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2560, 2561, 0, 0, 0, 0, 3108,
	0, 0, 0, 0, 0, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1553, 0, 0, 0,
	3027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 546, 962, 947, 463, 0,
	891, 965, 860, 879, 975, 882, 885, 927, 839, 905,
	379, 876, 831, 864, 834, 871, 835, 862, 893, 251,
	859, 949, 909, 964, 334, 248, 841, 865, 393, 881,
	197, 929, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 971, 338, 915, 0,
	447, 364, 0, 1321, 0, 895, 953, 903, 941, 890,
	928, 849, 914, 966, 877, 924, 967, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 3071, 0, 3072, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 873, 921, 961, 874, 923, 246, 294,
	253, 245, 467, 972, 952, 838, 902, 960, 0, 1553,
	214, 963, 897, 0, 926, 0, 978, 833, 0, 917,
	0, 836, 840, 974, 956, 868, 256, 0, 0, 0,
	0, 0, 0, 0, 894, 904, 938, 888, 0, 0,
	0, 0, 0, 0, 0, 866, 0, 913, 0, 0,
	0, 845, 837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 892, 0, 0, 0, 848,
	0, 867, 939, 0, 830, 277, 842, 365, 238, 0,
	945, 955, 889, 503, 959, 887, 886, 933, 846, 951,
	880, 333, 844, 302, 192, 210, 0, 878, 375, 418,
	424, 950, 863, 872, 236, 870, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 912, 931, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 1167, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 858, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 946,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 936, 977,
	388, 423, 225, 488, 446, 853, 857, 851, 918, 852,
	907, 908, 854, 968, 969, 970, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 940, 847, 0, 855, 856,
	0, 948, 957, 958, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 911, 191, 207, 336, 973,
	411, 269, 519, 497, 493, 832, 850, 243, 861, 869,
	0, 875, 883, 884, 896, 898, 899, 900, 901, 919,
	920, 922, 930, 932, 935, 937, 942, 954, 976, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 910, 916, 347,
	262, 282, 293, 925, 496, 452, 212, 419, 271, 234,
	943, 944, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 906, 934, 343, 464,
	465, 289, 361, 0, 0, 962, 947, 463, 0, 891,
	965, 860, 879, 975, 882, 885, 927, 839, 905, 379,
	876, 831, 864, 834, 871, 835, 862, 893, 251, 859,
	949, 909, 964, 334, 248, 841, 865, 393, 881, 197,
	929, 437, 235, 344, 341, 470, 263, 254, 250, 233,
	290, 351, 391, 457, 385, 971, 338, 915, 0, 447,
	364, 0, 0, 0, 895, 953, 903, 941, 890, 928,
	849, 914, 966, 877, 924, 967, 296, 232, 196, 376,
	448, 267, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 319, 328, 327, 308, 309, 311, 313, 318,
	325, 331, 873, 921, 961, 874, 923, 246, 294, 253,
	245, 467, 972, 952, 838, 902, 960, 0, 0, 214,
	963, 897, 0, 926, 0, 978, 833, 0, 917, 0,
	836, 840, 974, 956, 868, 256, 0, 0, 0, 0,
	0, 0, 0, 894, 904, 938, 888, 0, 0, 0,
	0, 0, 2471, 0, 866, 0, 913, 0, 0, 0,
	845, 837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 892, 0, 0, 0, 848, 0,
	867, 939, 0, 830, 277, 842, 365, 238, 0, 945,
	955, 889, 503, 959, 887, 886, 933, 846, 951, 880,
	333, 844, 302, 192, 210, 0, 878, 375, 418, 424,
	950, 863, 872, 236, 870, 422, 389, 486, 218, 265,
	415, 395, 420, 402, 268, 912, 931, 421, 339, 472,
	409, 483, 504, 505, 244, 369, 494, 461, 500, 518,
	211, 241, 383, 454, 489, 444, 362, 468, 469, 301,
	443, 275, 195, 337, 510, 209, 430, 227, 216, 474,
	492, 270, 413, 202, 456, 481, 224, 434, 0, 0,
	520, 204, 479, 453, 358, 298, 299, 203, 0, 414,
	249, 273, 239, 378, 476, 477, 237, 521, 213, 499,
	206, 1167, 498, 371, 471, 480, 359, 349, 205, 478,
	357, 348, 304, 323, 324, 261, 284, 407, 342, 408,
	285, 367, 366, 368, 198, 490, 0, 199, 0, 449,
	491, 522, 219, 220, 222, 858, 260, 264, 272, 274,
	280, 281, 288, 335, 382, 406, 404, 410, 946, 466,
	484, 495, 502, 508, 509, 511, 512, 513, 514, 515,
	517, 516, 370, 287, 445, 303, 340, 936, 977, 388,
	423, 225, 488, 446, 853, 857, 851, 918, 852, 907,
	908, 854, 968, 969, 970, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 0, 940, 847, 0, 855, 856, 0,
	948, 957, 958, 541, 350, 436, 485, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 911, 191, 207, 336, 973, 411,
	269, 519, 497, 493, 832, 850, 243, 861, 869, 0,
	875, 883, 884, 896, 898, 899, 900, 901, 919, 920,
	922, 930, 932, 935, 937, 942, 954, 976, 193, 194,
	200, 208, 217, 221, 228, 242, 257, 259, 266, 278,
	283, 286, 291, 292, 295, 300, 346, 352, 353, 354,
	355, 372, 373, 374, 377, 380, 381, 384, 386, 387,
	390, 394, 398, 399, 400, 401, 403, 405, 412, 417,
	425, 426, 427, 428, 429, 432, 433, 438, 439, 440,
	441, 442, 450, 451, 455, 473, 475, 487, 501, 506,
	431, 279, 482, 507, 0, 345, 910, 916, 347, 262,
	282, 293, 925, 496, 452, 212, 419, 271, 234, 943,
	944, 201, 231, 215, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 229, 416, 226, 435, 458, 459,
	460, 462, 360, 247, 396, 906, 934, 343, 464, 465,
	289, 361, 0, 0, 962, 947, 463, 0, 891, 965,
	860, 879, 975, 882, 885, 927, 839, 905, 379, 876,
	831, 864, 834, 871, 835, 862, 893, 251, 859, 949,
	909, 964, 334, 248, 841, 865, 393, 881, 197, 929,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 971, 338, 915, 0, 447, 364,
	0, 0, 0, 895, 953, 903, 941, 890, 928, 849,
	914, 966, 877, 924, 967, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 873, 921, 961, 874, 923, 246, 294, 253, 245,
	467, 972, 952, 838, 902, 960, 0, 0, 214, 963,
	897, 0, 926, 0, 978, 833, 0, 917, 0, 836,
	840, 974, 956, 868, 256, 0, 0, 0, 0, 0,
	0, 0, 894, 904, 938, 888, 0, 0, 0, 0,
	0, 2429, 0, 866, 0, 913, 0, 0, 0, 845,
	837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 892, 0, 0, 0, 848, 0, 867,
	939, 0, 830, 277, 842, 365, 238, 0, 945, 955,
	889, 503, 959, 887, 886, 933, 846, 951, 880, 333,
	844, 302, 192, 210, 0, 878, 375, 418, 424, 950,
	863, 872, 236, 870, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 912, 931, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	1167, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 858, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 946, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 936, 977, 388, 423,
	225, 488, 446, 853, 857, 851, 918, 852, 907, 908,
	854, 968, 969, 970, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 940, 847, 0, 855, 856, 0, 948,
	957, 958, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 911, 191, 207, 336, 973, 411, 269,
	519, 497, 493, 832, 850, 243, 861, 869, 0, 875,
	883, 884, 896, 898, 899, 900, 901, 919, 920, 922,
	930, 932, 935, 937, 942, 954, 976, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 910, 916, 347, 262, 282,
	293, 925, 496, 452, 212, 419, 271, 234, 943, 944,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 906, 934, 343, 464, 465, 289,
	361, 0, 0, 962, 947, 463, 0, 891, 965, 860,
	879, 975, 882, 885, 927, 839, 905, 379, 876, 831,
	864, 834, 871, 835, 862, 893, 251, 859, 949, 909,
	964, 334, 248, 841, 865, 393, 881, 197, 929, 437,
	235, 344, 341, 470, 263, 254, 250, 233, 290, 351,
	391, 457, 385, 971, 338, 915, 0, 447, 364, 0,
	0, 0, 895, 953, 903, 941, 890, 928, 849, 914,
	966, 877, 924, 967, 296, 232, 196, 376, 448, 267,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	873, 921, 961, 874, 923, 246, 294, 253, 245, 467,
	972, 952, 838, 902, 960, 0, 0, 214, 963, 897,
	0, 926, 0, 978, 833, 0, 917, 0, 836, 840,
	974, 956, 868, 256, 0, 0, 0, 0, 0, 0,
	0, 894, 904, 938, 888, 0, 0, 0, 0, 0,
	1853, 0, 866, 0, 913, 0, 0, 0, 845, 837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 892, 0, 0, 0, 848, 0, 867, 939,
	0, 830, 277, 842, 365, 238, 0, 945, 955, 889,
	503, 959, 887, 886, 933, 846, 951, 880, 333, 844,
	302, 192, 210, 0, 878, 375, 418, 424, 950, 863,
	872, 236, 870, 422, 389, 486, 218, 265, 415, 395,
	420, 402, 268, 912, 931, 421, 339, 472, 409, 483,
	504, 505, 244, 369, 494, 461, 500, 518, 211, 241,
	383, 454, 489, 444, 362, 468, 469, 301, 443, 275,
	195, 337, 510, 209, 430, 227, 216, 474, 492, 270,
	413, 202, 456, 481, 224, 434, 0, 0, 520, 204,
	479, 453, 358, 298, 299, 203, 0, 414, 249, 273,
	239, 378, 476, 477, 237, 521, 213, 499, 206, 1167,
	498, 371, 471, 480, 359, 349, 205, 478, 357, 348,
	304, 323, 324, 261, 284, 407, 342, 408, 285, 367,
	366, 368, 198, 490, 0, 199, 0, 449, 491, 522,
	219, 220, 222, 858, 260, 264, 272, 274, 280, 281,
	288, 335, 382, 406, 404, 410, 946, 466, 484, 495,
	502, 508, 509, 511, 512, 513, 514, 515, 517, 516,
	370, 287, 445, 303, 340, 936, 977, 388, 423, 225,
	488, 446, 853, 857, 851, 918, 852, 907, 908, 854,
	968, 969, 970, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 0, 940, 847, 0, 855, 856, 0, 948, 957,
	958, 541, 350, 436, 485, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 911, 191, 207, 336, 973, 411, 269, 519,
	497, 493, 832, 850, 243, 861, 869, 0, 875, 883,
	884, 896, 898, 899, 900, 901, 919, 920, 922, 930,
	932, 935, 937, 942, 954, 976, 193, 194, 200, 208,
	217, 221, 228, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 300, 346, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 438, 439, 440, 441, 442,
	450, 451, 455, 473, 475, 487, 501, 506, 431, 279,
	482, 507, 0, 345, 910, 916, 347, 262, 282, 293,
	925, 496, 452, 212, 419, 271, 234, 943, 944, 201,
	231, 215, 240, 255, 258, 297, 356, 363, 392, 397,
	276, 252, 229, 416, 226, 435, 458, 459, 460, 462,
	360, 247, 396, 906, 934, 343, 464, 465, 289, 361,
	0, 0, 962, 947, 463, 0, 891, 965, 860, 879,
	975, 882, 885, 927, 839, 905, 379, 876, 831, 864,
	834, 871, 835, 862, 893, 251, 859, 949, 909, 964,
	334, 248, 841, 865, 393, 881, 197, 929, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 971, 338, 915, 0, 447, 364, 0, 0,
	0, 895, 953, 903, 941, 890, 928, 849, 914, 966,
	877, 924, 967, 296, 232, 196, 376, 448, 267, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 873,
	921, 961, 874, 923, 246, 294, 253, 245, 467, 972,
	952, 838, 902, 960, 0, 0, 214, 963, 897, 0,
	926, 0, 978, 833, 0, 917, 0, 836, 840, 974,
	956, 868, 256, 0, 0, 0, 0, 0, 0, 0,
	894, 904, 938, 888, 0, 0, 0, 0, 0, 0,
	0, 866, 0, 913, 0, 0, 0, 845, 837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 892, 0, 0, 0, 848, 0, 867, 939, 0,
	830, 277, 842, 365, 238, 0, 945, 955, 889, 503,
	959, 887, 886, 933, 846, 951, 880, 333, 844, 302,
	192, 210, 0, 878, 375, 418, 424, 950, 863, 872,
	236, 870, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 912, 931, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 1167, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 858, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 946, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 936, 977, 388, 423, 225, 488,
	446, 853, 857, 851, 918, 852, 907, 908, 854, 968,
	969, 970, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 940, 847, 0, 855, 856, 0, 948, 957, 958,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 911, 191, 207, 336, 973, 411, 269, 519, 497,
	493, 832, 850, 243, 861, 869, 0, 875, 883, 884,
	896, 898, 899, 900, 901, 919, 920, 922, 930, 932,
	935, 937, 942, 954, 976, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 910, 916, 347, 262, 282, 293, 925,
	496, 452, 212, 419, 271, 234, 943, 944, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 906, 934, 343, 464, 465, 289, 361, 0,
	0, 962, 947, 463, 0, 891, 965, 860, 879, 975,
	882, 885, 927, 839, 905, 379, 876, 831, 864, 834,
	871, 835, 862, 893, 251, 859, 949, 909, 964, 334,
	248, 841, 865, 393, 881, 197, 929, 437, 235, 344,
	341, 470, 263, 254, 250, 233, 290, 351, 391, 457,
	385, 971, 338, 915, 0, 447, 364, 0, 0, 0,
	895, 953, 903, 941, 890, 928, 849, 914, 966, 877,
	924, 967, 296, 232, 196, 376, 448, 267, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 873, 921,
	961, 874, 923, 246, 294, 253, 245, 467, 972, 952,
	838, 902, 960, 0, 0, 214, 963, 897, 0, 926,
	0, 978, 833, 0, 917, 0, 836, 840, 974, 956,
	868, 256, 0, 0, 0, 0, 0, 0, 0, 894,
	904, 938, 888, 0, 0, 0, 0, 0, 0, 0,
	866, 0, 913, 0, 0, 0, 845, 837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	892, 0, 0, 0, 848, 0, 867, 939, 0, 830,
	277, 842, 365, 238, 0, 945, 955, 889, 503, 959,
	887, 886, 933, 846, 951, 880, 333, 844, 302, 192,
	210, 0, 878, 375, 418, 424, 950, 863, 872, 236,
	870, 422, 389, 486, 218, 265, 415, 395, 420, 402,
	268, 912, 931, 421, 339, 472, 409, 483, 504, 505,
	244, 369, 494, 461, 500, 518, 211, 241, 383, 454,
	489, 444, 362, 468, 469, 301, 443, 275, 195, 337,
	510, 209, 430, 227, 216, 474, 492, 270, 413, 202,
	456, 481, 224, 434, 0, 0, 520, 204, 479, 453,
	358, 298, 299, 203, 0, 414, 249, 273, 239, 378,
	476, 477, 237, 521, 213, 499, 206, 1167, 498, 371,
	471, 480, 359, 349, 205, 478, 357, 348, 304, 323,
	324, 261, 284, 407, 342, 408, 285, 367, 366, 368,
	198, 490, 0, 199, 0, 449, 491, 522, 219, 220,
	222, 858, 260, 264, 272, 274, 280, 281, 288, 335,
	382, 406, 404, 410, 946, 466, 484, 495, 502, 508,
	509, 511, 512, 513, 514, 515, 517, 516, 370, 287,
	445, 303, 340, 936, 977, 388, 423, 225, 488, 446,
	853, 857, 851, 918, 852, 907, 908, 854, 968, 969,
	970, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 0,
	940, 847, 0, 855, 856, 0, 948, 957, 958, 541,
	350, 436, 485, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	911, 191, 207, 336, 973, 411, 269, 519, 497, 493,
	832, 850, 243, 861, 869, 0, 875, 883, 884, 896,
	898, 899, 900, 901, 919, 920, 922, 930, 932, 935,
	937, 942, 954, 976, 193, 194, 200, 208, 217, 221,
	228, 242, 257, 259, 266, 278, 283, 286, 291, 292,
	295, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 425, 426, 427, 428,
	429, 432, 433, 438, 439, 440, 441, 442, 450, 451,
	455, 473, 475, 487, 501, 506, 431, 279, 482, 507,
	0, 345, 910, 916, 347, 262, 282, 293, 925, 496,
	452, 212, 419, 271, 234, 943, 944, 201, 231, 215,
	240, 255, 258, 297, 356, 363, 392, 397, 276, 252,
	229, 416, 226, 435, 458, 459, 460, 462, 360, 247,
	396, 906, 934, 343, 464, 465, 289, 361, 0, 0,
	962, 947, 463, 0, 891, 965, 860, 879, 975, 882,
	885, 927, 839, 905, 379, 876, 831, 864, 834, 871,
	835, 862, 893, 251, 859, 949, 909, 964, 334, 248,
	841, 865, 393, 881, 197, 929, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	971, 338, 915, 0, 447, 364, 0, 0, 0, 895,
	953, 903, 941, 890, 928, 849, 914, 966, 877, 924,
	967, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 873, 921, 961,
	874, 923, 246, 294, 253, 245, 467, 972, 952, 838,
	902, 960, 0, 0, 979, 963, 897, 0, 926, 0,
	978, 833, 0, 917, 0, 836, 840, 974, 956, 868,
	256, 0, 0, 0, 0, 0, 0, 0, 894, 904,
	938, 888, 0, 0, 0, 0, 0, 0, 0, 866,
	0, 913, 0, 0, 0, 845, 837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 892,
	0, 0, 0, 848, 0, 867, 939, 0, 830, 277,
	842, 365, 238, 0, 945, 955, 889, 503, 959, 887,
	886, 933, 846, 951, 880, 333, 844, 302, 192, 210,
	0, 878, 375, 418, 424, 950, 863, 872, 236, 870,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	912, 931, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 843, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	858, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 946, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 829, 823, 822,
	303, 340, 936, 977, 388, 423, 225, 488, 446, 853,
	857, 851, 918, 852, 907, 908, 854, 968, 969, 970,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 940,
	847, 0, 855, 856, 0, 948, 957, 958, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 911,
	191, 207, 336, 973, 411, 269, 519, 497, 493, 832,
	850, 243, 861, 869, 0, 875, 883, 884, 896, 898,
	899, 900, 901, 919, 920, 922, 930, 932, 935, 937,
	942, 954, 976, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 910, 916, 347, 262, 282, 293, 925, 496, 452,
	212, 419, 271, 234, 943, 944, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	906, 934, 343, 464, 465, 289, 361, 0, 0, 962,
	947, 463, 0, 891, 965, 860, 879, 975, 882, 885,
	927, 839, 905, 379, 876, 831, 864, 834, 871, 835,
	862, 893, 251, 859, 949, 909, 964, 334, 248, 841,
	865, 393, 881, 197, 929, 437, 235, 344, 341, 470,
	263, 254, 250, 233, 290, 351, 391, 457, 385, 971,
	338, 915, 0, 447, 364, 0, 0, 0, 895, 953,
	903, 941, 890, 928, 849, 914, 966, 877, 924, 967,
	296, 232, 196, 376, 448, 267, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 873, 921, 961, 874,
	923, 246, 294, 253, 245, 467, 972, 952, 838, 902,
	960, 0, 0, 979, 963, 897, 0, 926, 0, 978,
	833, 0, 917, 0, 836, 840, 974, 956, 868, 256,
	0, 0, 0, 0, 0, 0, 0, 894, 904, 938,
	888, 0, 0, 0, 0, 0, 0, 0, 866, 0,
	913, 0, 0, 0, 845, 837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 892, 0,
	0, 0, 848, 0, 867, 939, 0, 830, 277, 842,
	365, 238, 0, 945, 955, 889, 503, 959, 887, 886,
	933, 846, 951, 880, 333, 844, 302, 192, 210, 0,
	878, 375, 418, 424, 950, 863, 872, 236, 870, 422,
	389, 486, 218, 265, 415, 395, 420, 402, 268, 912,
	931, 421, 339, 472, 409, 483, 504, 505, 244, 369,
	494, 461, 500, 518, 211, 241, 383, 454, 489, 444,
	362, 468, 469, 301, 443, 275, 195, 337, 510, 209,
	430, 227, 216, 474, 492, 270, 413, 202, 456, 1388,
	224, 434, 0, 0, 520, 204, 479, 453, 358, 298,
	299, 203, 0, 414, 249, 273, 239, 378, 476, 477,
	237, 521, 213, 499, 206, 843, 498, 371, 471, 480,
	359, 349, 205, 478, 357, 348, 304, 323, 324, 261,
	284, 407, 342, 408, 285, 367, 366, 368, 198, 490,
	0, 199, 0, 449, 491, 522, 219, 220, 222, 858,
	260, 264, 272, 274, 280, 281, 288, 335, 382, 406,
	404, 410, 946, 466, 484, 495, 502, 508, 509, 511,
	512, 513, 514, 515, 517, 516, 829, 823, 822, 303,
	340, 936, 977, 388, 423, 225, 488, 446, 853, 857,
	851, 918, 852, 907, 908, 854, 968, 969, 970, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 940, 847,
	0, 855, 856, 0, 948, 957, 958, 541, 350, 436,
	485, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 911, 191,
	207, 336, 973, 411, 269, 519, 497, 493, 832, 850,
	243, 861, 869, 0, 875, 883, 884, 896, 898, 899,
	900, 901, 919, 920, 922, 930, 932, 935, 937, 942,
	954, 976, 193, 194, 200, 208, 217, 221, 228, 242,
	257, 259, 266, 278, 283, 286, 291, 292, 295, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 425, 426, 427, 428, 429, 432,
	433, 438, 439, 440, 441, 442, 450, 451, 455, 473,
	475, 487, 501, 506, 431, 279, 482, 507, 0, 345,
	910, 916, 347, 262, 282, 293, 925, 496, 452, 212,
	419, 271, 234, 943, 944, 201, 231, 215, 240, 255,
	258, 297, 356, 363, 392, 397, 276, 252, 229, 416,
	226, 435, 458, 459, 460, 462, 360, 247, 396, 906,
	934, 343, 464, 465, 289, 361, 0, 0, 962, 947,
	463, 0, 891, 965, 860, 879, 975, 882, 885, 927,
	839, 905, 379, 876, 831, 864, 834, 871, 835, 862,
	893, 251, 859, 949, 909, 964, 334, 248, 841, 865,
	393, 881, 197, 929, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 971, 338,
	915, 0, 447, 364, 0, 0, 0, 895, 953, 903,
	941, 890, 928, 849, 914, 966, 877, 924, 967, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 873, 921, 961, 874, 923,
	246, 294, 253, 245, 467, 972, 952, 838, 902, 960,
	0, 0, 979, 963, 897, 0, 926, 0, 978, 833,
	0, 917, 0, 836, 840, 974, 956, 868, 256, 0,
	0, 0, 0, 0, 0, 0, 894, 904, 938, 888,
	0, 0, 0, 0, 0, 0, 0, 866, 0, 913,
	0, 0, 0, 845, 837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 892, 0, 0,
	0, 848, 0, 867, 939, 0, 830, 277, 842, 365,
	238, 0, 945, 955, 889, 503, 959, 887, 886, 933,
	846, 951, 880, 333, 844, 302, 192, 210, 0, 878,
	375, 418, 424, 950, 863, 872, 236, 870, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 912, 931,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 820, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 843, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 858, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 946, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 829, 823, 822, 303, 340,
	936, 977, 388, 423, 225, 488, 446, 853, 857, 851,
	918, 852, 907, 908, 854, 968, 969, 970, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 940, 847, 0,
	855, 856, 0, 948, 957, 958, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 911, 191, 207,
	336, 973, 411, 269, 519, 497, 493, 832, 850, 243,
	861, 869, 0, 875, 883, 884, 896, 898, 899, 900,
	901, 919, 920, 922, 930, 932, 935, 937, 942, 954,
	976, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 910,
	916, 347, 262, 282, 293, 925, 496, 452, 212, 419,
	271, 234, 943, 944, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 906, 934,
	343, 464, 465, 289, 361, 0, 0, 0, 0, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 1797, 0, 623, 0, 0, 0,
	251, 628, 0, 0, 0, 334, 248, 0, 1798, 393,
	0, 197, 0, 437, 235, 344, 341, 470, 263, 254,
	250, 233, 290, 351, 391, 457, 385, 635, 338, 0,
	0, 447, 364, 0, 0, 0, 0, 0, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 232,
	196, 376, 448, 267, 0, 87, 0, 0, 188, 189,
	190, 713, 721, 722, 723, 724, 725, 714, 716, 0,
	0, 223, 715, 230, 646, 648, 647, 657, 658, 659,
	660, 661, 662, 663, 644, 718, 726, 727, 0, 246,
	294, 253, 245, 467, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 620, 0, 634, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 617, 618, 809, 0, 0, 0, 688, 0,
	619, 0, 0, 627, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 365, 238,
	0, 687, 0, 0, 503, 0, 0, 685, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 424, 0, 0, 0, 236, 0, 422, 389, 486,
	218, 265, 415, 395, 420, 402, 268, 0, 0, 421,
	339, 472, 409, 483, 504, 505, 244, 369, 494, 461,
	500, 518, 211, 241, 383, 454, 489, 444, 362, 468,
	469, 301, 443, 275, 195, 337, 510, 209, 430, 227,
	216, 474, 492, 270, 413, 202, 456, 481, 224, 434,
	0, 0, 520, 204, 479, 453, 358, 298, 299, 203,
	0, 414, 249, 273, 239, 378, 476, 477, 237, 521,
	213, 499, 206, 0, 498, 371, 471, 480, 359, 349,
	205, 478, 357, 348, 304, 652, 653, 261, 284, 407,
	342, 408, 285, 367, 366, 368, 198, 490, 0, 199,
	0, 449, 491, 522, 219, 220, 222, 0, 260, 264,
	272, 274, 280, 281, 288, 335, 382, 406, 404, 410,
	0, 466, 484, 495, 502, 508, 509, 511, 512, 513,
	514, 515, 517, 516, 370, 287, 445, 303, 340, 0,
	0, 388, 423, 225, 488, 446, 694, 686, 639, 698,
	641, 695, 696, 636, 637, 640, 697, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 0, 689, 626, 625, 0,
	632, 633, 0, 642, 643, 645, 649, 650, 651, 654,
	655, 656, 664, 666, 667, 665, 668, 669, 670, 673,
	674, 675, 676, 671, 672, 677, 624, 191, 207, 336,
	0, 411, 269, 519, 497, 493, 0, 699, 243, 700,
	0, 0, 704, 0, 0, 0, 706, 705, 0, 707,
	681, 680, 0, 0, 701, 702, 0, 703, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 242, 257, 259,
	266, 278, 283, 286, 291, 292, 295, 300, 346, 352,
	353, 354, 355, 372, 373, 374, 377, 380, 381, 384,
	386, 387, 390, 394, 398, 399, 400, 401, 403, 405,
	412, 417, 425, 426, 427, 428, 429, 432, 433, 438,
	439, 440, 441, 442, 450, 451, 455, 473, 475, 487,
	501, 506, 431, 279, 482, 507, 0, 345, 0, 0,
	347, 262, 282, 293, 0, 496, 452, 212, 419, 271,
	234, 720, 0, 201, 231, 215, 240, 255, 258, 297,
	356, 363, 392, 397, 276, 252, 229, 416, 226, 435,
	458, 459, 460, 462, 360, 247, 396, 0, 361, 343,
	464, 465, 289, 463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 0,
	623, 0, 0, 0, 251, 628, 0, 0, 0, 334,
	248, 0, 0, 393, 0, 197, 0, 437, 235, 344,
	341, 470, 263, 254, 250, 233, 290, 351, 391, 457,
	385, 635, 338, 0, 0, 447, 364, 0, 0, 0,
	0, 0, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 232, 196, 376, 448, 267, 0, 87,
	0, 0, 188, 189, 190, 713, 721, 722, 723, 724,
	725, 714, 716, 0, 0, 223, 715, 230, 646, 648,
	647, 657, 658, 659, 660, 661, 662, 663, 644, 718,
	726, 727, 0, 246, 294, 253, 245, 467, 0, 0,
	1756, 1757, 1758, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 606, 620, 0, 634, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 617, 618, 0, 0,
	0, 0, 688, 0, 619, 0, 0, 627, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 365, 238, 0, 687, 0, 0, 503, 0,
	0, 685, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 375, 418, 424, 0, 0, 0, 236,
	0, 422, 389, 486, 218, 265, 415, 395, 420, 402,
	268, 0, 0, 421, 339, 472, 409, 483, 504, 505,
	244, 369, 494, 461, 500, 518, 211, 241, 383, 454,
	489, 444, 362, 468, 469, 301, 443, 275, 195, 337,
	510, 209, 430, 227, 216, 474, 492, 270, 413, 202,
	456, 481, 224, 434, 0, 0, 520, 204, 479, 453,
	358, 298, 299, 203, 0, 414, 249, 273, 239, 378,
	476, 477, 237, 521, 213, 499, 206, 0, 498, 371,
	471, 480, 359, 349, 205, 478, 357, 348, 304, 652,
	653, 261, 284, 407, 342, 408, 285, 367, 366, 368,
	198, 490, 0, 199, 0, 449, 491, 522, 219, 220,
	222, 0, 260, 264, 272, 274, 280, 281, 288, 335,
	382, 406, 404, 410, 0, 466, 484, 495, 502, 508,
	509, 511, 512, 513, 514, 515, 517, 516, 370, 287,
	445, 303, 340, 0, 0, 388, 423, 225, 488, 446,
	694, 686, 639, 698, 641, 695, 696, 636, 637, 640,
	697, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 0,
	689, 626, 625, 0, 632, 633, 0, 642, 643, 645,
	649, 650, 651, 654, 655, 656, 664, 666, 667, 665,
	668, 669, 670, 673, 674, 675, 676, 671, 672, 677,
	624, 191, 207, 336, 0, 411, 269, 519, 497, 493,
	0, 699, 243, 700, 0, 0, 704, 0, 0, 0,
	706, 705, 0, 707, 681, 680, 0, 0, 701, 702,
	0, 703, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 242, 257, 259, 266, 278, 283, 286, 291, 292,
	295, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 425, 426, 427, 428,
	429, 432, 433, 438, 439, 440, 441, 442, 450, 451,
	455, 473, 475, 487, 501, 506, 431, 279, 482, 507,
	0, 345, 0, 0, 347, 262, 282, 293, 0, 496,
	452, 212, 419, 271, 234, 720, 0, 201, 231, 215,
	240, 255, 258, 297, 356, 363, 392, 397, 276, 252,
	229, 416, 226, 435, 458, 459, 460, 462, 360, 247,
	396, 0, 361, 343, 464, 465, 289, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 0, 0, 623, 0, 0, 0, 251, 628,
	0, 0, 0, 334, 248, 0, 0, 393, 0, 197,
	0, 437, 235, 344, 341, 470, 263, 254, 250, 233,
	290, 351, 391, 457, 385, 635, 338, 0, 0, 447,
	364, 0, 0, 0, 0, 0, 630, 631, 0, 0,
	0, 0, 0, 0, 1880, 0, 296, 232, 196, 376,
	448, 267, 0, 87, 0, 0, 188, 189, 190, 713,
	721, 722, 723, 724, 725, 714, 716, 0, 0, 223,
	715, 230, 646, 648, 647, 657, 658, 659, 660, 661,
	662, 663, 644, 718, 726, 727, 1881, 246, 294, 253,
	245, 467, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 606, 620,
	0, 634, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	617, 618, 0, 0, 0, 0, 688, 0, 619, 0,
	0, 627, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 365, 238, 0, 687,
	0, 0, 503, 0, 0, 685, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 375, 418, 424,
	0, 0, 0, 236, 0, 422, 389, 486, 218, 265,
	415, 395, 420, 402, 268, 0, 0, 421, 339, 472,
	409, 483, 504, 505, 244, 369, 494, 461, 500, 518,
	211, 241, 383, 454, 489, 444, 362, 468, 469, 301,
	443, 275, 195, 337, 510, 209, 430, 227, 216, 474,
	492, 270, 413, 202, 456, 481, 224, 434, 0, 0,
	520, 204, 479, 453, 358, 298, 299, 203, 0, 414,
	249, 273, 239, 378, 476, 477, 237, 521, 213, 499,
	206, 0, 498, 371, 471, 480, 359, 349, 205, 478,
	357, 348, 304, 652, 653, 261, 284, 407, 342, 408,
	285, 367, 366, 368, 198, 490, 0, 199, 0, 449,
	491, 522, 219, 220, 222, 0, 260, 264, 272, 274,
	280, 281, 288, 335, 382, 406, 404, 410, 0, 466,
	484, 495, 502, 508, 509, 511, 512, 513, 514, 515,
	517, 516, 370, 287, 445, 303, 340, 0, 0, 388,
	423, 225, 488, 446, 694, 686, 639, 698, 641, 695,
	696, 636, 637, 640, 697, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 0, 689, 626, 625, 0, 632, 633,
	0, 642, 643, 645, 649, 650, 651, 654, 655, 656,
	664, 666, 667, 665, 668, 669, 670, 673, 674, 675,
	676, 671, 672, 677, 624, 191, 207, 336, 0, 411,
	269, 519, 497, 493, 0, 699, 243, 700, 0, 0,
	704, 0, 0, 0, 706, 705, 0, 707, 681, 680,
	0, 0, 701, 702, 0, 703, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 242, 257, 259, 266, 278,
	283, 286, 291, 292, 295, 300, 346, 352, 353, 354,
	355, 372, 373, 374, 377, 380, 381, 384, 386, 387,
	390, 394, 398, 399, 400, 401, 403, 405, 412, 417,
	425, 426, 427, 428, 429, 432, 433, 438, 439, 440,
	441, 442, 450, 451, 455, 473, 475, 487, 501, 506,
	431, 279, 482, 507, 0, 345, 0, 0, 347, 262,
	282, 293, 0, 496, 452, 212, 419, 271, 234, 720,
	0, 201, 231, 215, 240, 255, 258, 297, 356, 363,
	392, 397, 276, 252, 229, 416, 226, 435, 458, 459,
	460, 462, 360, 247, 396, 0, 0, 343, 464, 465,
	289, 361, 0, 0, 0, 78, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 623, 0, 0, 0, 251, 628, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 635, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 630, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 87, 0, 0, 188, 189, 190, 713, 721,
	722, 723, 724, 725, 714, 716, 0, 0, 223, 715,
	230, 646, 648, 647, 657, 658, 659, 660, 661, 662,
	663, 644, 718, 726, 727, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 620, 0,
	634, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 617,
	618, 0, 0, 0, 0, 688, 0, 619, 0, 0,
	627, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 687, 0,
	0, 503, 0, 0, 685, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 652, 653, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 694, 686, 639, 698, 641, 695, 696,
	636, 637, 640, 697, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 689, 626, 625, 0, 632, 633, 0,
	642, 643, 645, 649, 650, 651, 654, 655, 656, 664,
	666, 667, 665, 668, 669, 670, 673, 674, 675, 676,
	671, 672, 677, 624, 191, 207, 336, 86, 411, 269,
	519, 497, 493, 0, 699, 243, 700, 0, 0, 704,
	0, 0, 0, 706, 705, 0, 707, 681, 680, 0,
	0, 701, 702, 0, 703, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 720, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 623, 0, 0,
	0, 251, 628, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 635, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 87, 0, 0, 188,
	189, 190, 713, 721, 722, 723, 724, 725, 714, 716,
	0, 0, 223, 715, 230, 646, 648, 647, 657, 658,
	659, 660, 661, 662, 663, 644, 718, 726, 727, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 620, 0, 634, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 617, 618, 0, 0, 0, 0, 688,
	0, 619, 0, 0, 627, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 687, 0, 0, 503, 0, 0, 685, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 3058, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 652, 653, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 694, 686, 639,
	698, 641, 695, 696, 636, 637, 640, 697, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 689, 626, 625,
	0, 632, 633, 0, 642, 643, 645, 649, 650, 651,
	654, 655, 656, 664, 666, 667, 665, 668, 669, 670,
	673, 674, 675, 676, 671, 672, 677, 624, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 699, 243,
	700, 0, 0, 704, 0, 0, 0, 706, 705, 0,
	707, 681, 680, 0, 0, 701, 702, 0, 703, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 720, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 623, 0, 0, 0, 251, 628, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 635, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	87, 0, 0, 188, 189, 190, 713, 721, 722, 723,
	724, 725, 714, 716, 0, 0, 223, 715, 230, 646,
	648, 647, 657, 658, 659, 660, 661, 662, 663, 644,
	718, 726, 727, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 606, 620, 3025, 634, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 617, 618, 0,
	0, 0, 0, 688, 0, 619, 0, 0, 627, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 687, 0, 0, 503,
	0, 0, 685, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	652, 653, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 694, 686, 639, 698, 641, 695, 696, 636, 637,
	640, 697, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 689, 626, 625, 0, 632, 633, 0, 642, 643,
	645, 649, 650, 651, 654, 655, 656, 664, 666, 667,
	665, 668, 669, 670, 673, 674, 675, 676, 671, 672,
	677, 624, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 699, 243, 700, 0, 0, 704, 0, 0,
	0, 706, 705, 0, 707, 681, 680, 0, 0, 701,
	702, 0, 703, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 3029, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 3028, 720, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 623, 0, 0, 0, 251,
	628, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 635, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 630, 631, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 87, 0, 1355, 188, 189, 190,
	713, 721, 722, 723, 724, 725, 714, 716, 0, 0,
	223, 715, 230, 646, 648, 647, 657, 658, 659, 660,
	661, 662, 663, 644, 718, 726, 727, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	620, 0, 634, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 617, 618, 0, 0, 0, 0, 688, 0, 619,
	0, 0, 627, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	687, 0, 0, 503, 0, 0, 685, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 652, 653, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 694, 686, 639, 698, 641,
	695, 696, 636, 637, 640, 697, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 689, 626, 625, 0, 632,
	633, 0, 642, 643, 645, 649, 650, 651, 654, 655,
	656, 664, 666, 667, 665, 668, 669, 670, 673, 674,
	675, 676, 671, 672, 677, 624, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 699, 243, 700, 0,
	0, 704, 0, 0, 0, 706, 705, 0, 707, 681,
	680, 0, 0, 701, 702, 0, 703, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	720, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 623,
	0, 0, 0, 251, 628, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	635, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 630, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 87, 0,
	0, 188, 189, 190, 713, 721, 722, 723, 724, 725,
	714, 716, 0, 0, 223, 715, 230, 646, 648, 647,
	657, 658, 659, 660, 661, 662, 663, 644, 718, 726,
	727, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 620, 0, 634, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 617, 618, 809, 0, 0,
	0, 688, 0, 619, 0, 0, 627, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 687, 0, 0, 503, 0, 0,
	685, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 652, 653,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 694,
	686, 639, 698, 641, 695, 696, 636, 637, 640, 697,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 689,
	626, 625, 0, 632, 633, 0, 642, 643, 645, 649,
	650, 651, 654, 655, 656, 664, 666, 667, 665, 668,
	669, 670, 673, 674, 675, 676, 671, 672, 677, 624,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	699, 243, 700, 0, 0, 704, 0, 0, 0, 706,
	705, 0, 707, 681, 680, 0, 0, 701, 702, 0,
	703, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 720, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 623, 0, 0, 0, 251, 628, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 635, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 630, 631, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 87, 0, 0, 188, 189, 190, 713, 721,
	722, 723, 724, 725, 714, 716, 0, 0, 223, 715,
	230, 646, 648, 647, 657, 658, 659, 660, 661, 662,
	663, 644, 718, 726, 727, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 620, 0,
	634, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 617,
	618, 0, 0, 0, 0, 688, 0, 619, 0, 0,
	627, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 687, 0,
	0, 503, 0, 0, 685, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 652, 653, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 694, 686, 639, 698, 641, 695, 696,
	636, 637, 640, 697, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 689, 626, 625, 0, 632, 633, 0,
	642, 643, 645, 649, 650, 651, 654, 655, 656, 664,
	666, 667, 665, 668, 669, 670, 673, 674, 675, 676,
	671, 672, 677, 624, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 699, 243, 700, 0, 0, 704,
	0, 0, 0, 706, 705, 0, 707, 681, 680, 0,
	0, 701, 702, 0, 703, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 3029, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 3028, 720, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 623, 0, 0,
	0, 251, 628, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 635, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 630,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 87, 0, 0, 188,
	189, 190, 713, 721, 722, 723, 724, 725, 714, 716,
	0, 0, 223, 715, 230, 646, 648, 647, 657, 658,
	659, 660, 661, 662, 663, 644, 718, 726, 727, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 620, 0, 634, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 617, 618, 0, 0, 0, 0, 688,
	0, 619, 0, 0, 627, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 687, 0, 0, 503, 0, 0, 685, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 652, 653, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 694, 686, 639,
	698, 641, 695, 696, 636, 637, 640, 697, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 689, 626, 625,
	0, 632, 633, 0, 642, 643, 645, 649, 650, 651,
	654, 655, 656, 664, 666, 667, 665, 668, 669, 670,
	673, 674, 675, 676, 671, 672, 677, 624, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 699, 243,
	700, 0, 0, 704, 0, 0, 0, 706, 705, 0,
	707, 681, 680, 0, 0, 701, 702, 0, 703, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 720, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 623, 0, 0, 0, 251, 628, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 635, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 630, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	87, 0, 0, 188, 189, 190, 713, 721, 722, 723,
	724, 725, 714, 716, 0, 0, 223, 715, 230, 646,
	648, 647, 657, 658, 659, 660, 661, 662, 663, 644,
	718, 726, 727, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 620, 0, 634, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 617, 618, 0,
	0, 0, 0, 688, 0, 619, 0, 0, 627, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 687, 0, 0, 503,
	0, 0, 685, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	652, 653, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 694, 686, 639, 698, 641, 695, 696, 636, 637,
	640, 697, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 689, 626, 625, 0, 632, 633, 0, 642, 643,
	645, 649, 650, 651, 654, 655, 656, 664, 666, 667,
	665, 668, 669, 670, 673, 674, 675, 676, 671, 672,
	677, 624, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 699, 243, 700, 0, 0, 704, 0, 0,
	0, 706, 705, 0, 707, 681, 680, 0, 0, 701,
	702, 0, 703, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 720, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 721, 722, 0, 0, 0, 0, 1701, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 1030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 1029, 503, 0, 0,
	0, 0, 0, 1026, 1027, 333, 987, 302, 192, 210,
	1020, 1024, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 0, 343, 464, 465, 289, 361, 0, 0, 0,
	78, 463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 334, 248, 0,
	0, 393, 0, 197, 0, 437, 235, 344, 341, 470,
	263, 254, 250, 233, 290, 351, 391, 457, 385, 0,
	338, 0, 0, 447, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 232, 196, 376, 448, 267, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 0, 0, 0, 0,
	0, 246, 294, 253, 245, 467, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	365, 238, 0, 0, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 375, 418, 424, 0, 0, 0, 236, 0, 422,
	389, 486, 218, 265, 415, 395, 420, 402, 268, 0,
	0, 421, 339, 472, 409, 483, 504, 505, 244, 369,
	494, 461, 500, 518, 211, 241, 383, 454, 489, 444,
	362, 468, 469, 301, 443, 275, 195, 337, 510, 209,
	430, 227, 216, 474, 492, 270, 413, 202, 456, 481,
	224, 434, 0, 0, 520, 204, 479, 453, 358, 298,
	299, 203, 0, 414, 249, 273, 239, 378, 476, 477,
	237, 521, 213, 499, 206, 0, 498, 371, 471, 480,
	359, 349, 205, 478, 357, 348, 304, 323, 324, 261,
	284, 407, 342, 408, 285, 367, 366, 368, 198, 490,
	0, 199, 0, 449, 491, 522, 219, 220, 222, 0,
	260, 264, 272, 274, 280, 281, 288, 335, 382, 406,
	404, 410, 0, 466, 484, 495, 502, 508, 509, 511,
	512, 513, 514, 515, 517, 516, 370, 287, 445, 303,
	340, 0, 0, 388, 423, 225, 488, 446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 350, 436,
	485, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 0, 191,
	207, 336, 86, 411, 269, 519, 497, 493, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 242,
	257, 259, 266, 278, 283, 286, 291, 292, 295, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 425, 426, 427, 428, 429, 432,
	433, 438, 439, 440, 441, 442, 450, 451, 455, 473,
	475, 487, 501, 506, 431, 279, 482, 507, 0, 345,
	0, 0, 347, 262, 282, 293, 0, 496, 452, 212,
	419, 271, 234, 0, 0, 201, 231, 215, 240, 255,
	258, 297, 356, 363, 392, 397, 276, 252, 229, 416,
	226, 435, 458, 459, 460, 462, 360, 247, 396, 0,
	1374, 343, 464, 465, 289, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 379, 0, 0,
	0, 1376, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 334, 248, 0, 0, 393, 0, 197, 0, 437,
	235, 344, 341, 470, 263, 254, 250, 233, 290, 351,
	391, 457, 385, 0, 338, 0, 0, 447, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 232, 196, 376, 448, 267,
	0, 0, 0, 0, 188, 189, 190, 0, 1378, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 246, 294, 253, 245, 467,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 1201, 0, 1202, 1203, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 365, 238, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	302, 192, 210, 0, 0, 375, 418, 424, 0, 0,
	0, 236, 0, 422, 389, 486, 218, 265, 415, 395,
	420, 402, 268, 0, 0, 421, 339, 472, 409, 483,
	504, 505, 244, 369, 494, 461, 500, 518, 211, 241,
	383, 454, 489, 444, 362, 468, 469, 301, 443, 275,
	195, 337, 510, 209, 430, 227, 216, 474, 492, 270,
	413, 202, 456, 481, 224, 434, 0, 0, 520, 204,
	479, 453, 358, 298, 299, 203, 0, 414, 249, 273,
	239, 378, 476, 477, 237, 521, 213, 499, 206, 0,
	498, 371, 471, 480, 359, 349, 205, 478, 357, 348,
	304, 323, 324, 261, 284, 407, 342, 408, 285, 367,
	366, 368, 198, 490, 0, 199, 0, 449, 491, 522,
	219, 220, 222, 0, 260, 264, 272, 274, 280, 281,
	288, 335, 382, 406, 404, 410, 0, 466, 484, 495,
	502, 508, 509, 511, 512, 513, 514, 515, 517, 516,
	370, 287, 445, 303, 340, 0, 0, 388, 423, 225,
	488, 446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 350, 436, 485, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 0, 191, 207, 336, 0, 411, 269, 519,
	497, 493, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 242, 257, 259, 266, 278, 283, 286,
	291, 292, 295, 300, 346, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 425, 426,
	427, 428, 429, 432, 433, 438, 439, 440, 441, 442,
	450, 451, 455, 473, 475, 487, 501, 506, 431, 279,
	482, 507, 0, 345, 0, 0, 347, 262, 282, 293,
	0, 496, 452, 212, 419, 271, 234, 0, 0, 201,
	231, 215, 240, 255, 258, 297, 356, 363, 392, 397,
	276, 252, 229, 416, 226, 435, 458, 459, 460, 462,
	360, 247, 396, 0, 361, 343, 464, 465, 289, 463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 334, 248, 0, 0, 393,
	0, 197, 0, 437, 235, 344, 341, 470, 263, 254,
	250, 233, 290, 351, 391, 457, 385, 0, 338, 0,
	0, 447, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 232,
	196, 376, 448, 267, 0, 0, 0, 0, 188, 189,
	190, 1316, 1319, 0, 0, 0, 0, 1315, 1318, 0,
	0, 223, 1314, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 246,
	294, 253, 245, 467, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 365, 238,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 424, 0, 0, 0, 236, 0, 422, 389, 486,
	218, 265, 415, 395, 420, 402, 268, 0, 0, 421,
	339, 472, 409, 483, 504, 505, 244, 369, 494, 461,
	500, 518, 211, 241, 383, 454, 489, 444, 362, 468,
	469, 301, 443, 275, 195, 337, 510, 209, 430, 227,
	216, 474, 492, 270, 413, 202, 456, 481, 224, 434,
	0, 0, 520, 204, 479, 453, 358, 298, 299, 203,
	0, 414, 249, 273, 239, 378, 476, 477, 237, 521,
	213, 499, 206, 0, 498, 371, 471, 480, 359, 349,
	205, 478, 357, 348, 304, 323, 324, 261, 284, 407,
	342, 408, 285, 367, 366, 368, 198, 490, 0, 199,
	0, 449, 491, 522, 219, 220, 222, 0, 260, 264,
	272, 274, 280, 281, 288, 335, 382, 406, 404, 410,
	0, 466, 484, 495, 502, 508, 509, 511, 512, 513,
	514, 515, 517, 516, 370, 287, 445, 303, 340, 0,
	0, 388, 423, 225, 488, 446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 350, 436, 485, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 0, 191, 207, 336,
	0, 411, 269, 519, 497, 493, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 242, 257, 259,
	266, 278, 283, 286, 291, 292, 295, 300, 346, 352,
	353, 354, 355, 372, 373, 374, 377, 380, 381, 384,
	386, 387, 390, 394, 398, 399, 400, 401, 403, 405,
	412, 417, 425, 426, 427, 428, 429, 432, 433, 438,
	439, 440, 441, 442, 450, 451, 455, 473, 475, 487,
	501, 506, 431, 279, 482, 507, 0, 345, 0, 0,
	347, 262, 282, 293, 0, 496, 452, 212, 419, 271,
	234, 0, 0, 201, 231, 215, 240, 255, 258, 297,
	356, 363, 392, 397, 276, 252, 229, 416, 226, 435,
	458, 459, 460, 462, 360, 247, 396, 0, 0, 343,
	464, 465, 289, 361, 0, 0, 0, 78, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 87, 0, 1355, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 86,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 1820, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 1818, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 987, 302, 192, 210, 985, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	1820, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 1355, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 2964, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 2169, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 2154, 0, 0, 0, 2155, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 1399, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 1398, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 2640, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 3085, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 1554, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 2964, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 87, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 1378, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 1652, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 1524, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 1522, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 1520, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 1518, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	1516, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 1512, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 1510, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 1508, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 1483, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 1383, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 1178, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 791, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 597, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 361, 343, 464,
	465, 289, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 334, 248,
	0, 0, 393, 0, 197, 0, 437, 235, 344, 341,
	470, 263, 254, 250, 233, 290, 351, 391, 457, 385,
	0, 338, 0, 0, 447, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 232, 196, 376, 448, 267, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 0, 0, 0,
	0, 0, 246, 294, 253, 245, 467, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 365, 238, 0, 0, 544, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 424, 0, 0, 0, 236, 0,
	422, 389, 486, 218, 265, 415, 395, 420, 402, 268,
	0, 0, 421, 339, 472, 409, 483, 504, 505, 244,
	369, 494, 461, 500, 518, 211, 241, 383, 454, 489,
	444, 362, 468, 469, 301, 443, 275, 195, 337, 510,
	209, 430, 227, 216, 474, 492, 270, 413, 202, 456,
	481, 224, 434, 0, 0, 520, 204, 479, 453, 358,
	298, 299, 203, 0, 414, 249, 273, 239, 378, 476,
	477, 237, 521, 213, 499, 206, 0, 498, 371, 471,
	480, 359, 349, 205, 478, 357, 348, 304, 323, 324,
	261, 284, 407, 342, 408, 285, 367, 366, 368, 198,
	490, 0, 199, 0, 449, 491, 522, 219, 220, 222,
	0, 260, 264, 272, 274, 280, 281, 288, 335, 382,
	406, 404, 410, 0, 466, 484, 495, 502, 508, 509,
	511, 512, 513, 514, 515, 517, 516, 370, 287, 445,
	303, 340, 0, 0, 388, 423, 225, 488, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 350,
	436, 485, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 0,
	191, 207, 336, 0, 411, 269, 519, 497, 493, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	242, 257, 259, 266, 278, 283, 286, 291, 292, 295,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 425, 426, 427, 428, 429,
	432, 433, 438, 439, 440, 441, 442, 450, 451, 455,
	473, 475, 487, 501, 506, 431, 279, 482, 507, 0,
	345, 0, 0, 347, 262, 282, 293, 0, 496, 452,
	212, 419, 271, 234, 0, 0, 201, 231, 215, 240,
	255, 258, 297, 356, 363, 392, 397, 276, 252, 229,
	416, 226, 435, 458, 459, 460, 462, 360, 247, 396,
	0, 361, 343, 464, 465, 289, 463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 0, 0,
	0, 0, 334, 248, 0, 0, 393, 0, 197, 0,
	437, 235, 344, 341, 470, 263, 254, 250, 233, 290,
	351, 391, 457, 385, 0, 338, 0, 0, 447, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 232, 196, 376, 448,
	267, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 0, 0, 0, 0, 0, 246, 294, 253, 245,
	467, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 365, 238, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 424, 0,
	0, 0, 236, 0, 422, 389, 486, 218, 265, 415,
	395, 420, 402, 268, 0, 0, 421, 339, 472, 409,
	483, 504, 505, 244, 369, 494, 461, 500, 518, 211,
	241, 383, 454, 489, 444, 362, 468, 469, 301, 443,
	275, 195, 337, 510, 209, 430, 227, 216, 474, 492,
	270, 413, 202, 456, 481, 224, 434, 0, 0, 520,
	204, 479, 453, 358, 298, 299, 203, 0, 414, 249,
	273, 239, 378, 476, 477, 237, 521, 213, 499, 206,
	0, 498, 371, 471, 480, 359, 349, 205, 478, 357,
	348, 304, 323, 324, 261, 284, 407, 342, 408, 285,
	367, 366, 368, 198, 490, 0, 199, 0, 449, 491,
	522, 219, 220, 222, 0, 260, 264, 272, 274, 280,
	281, 288, 335, 382, 406, 404, 410, 0, 466, 484,
	495, 502, 508, 509, 511, 512, 513, 514, 515, 517,
	516, 370, 287, 445, 303, 340, 0, 0, 388, 423,
	225, 488, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 350, 436, 485, 305, 317, 320, 310,
	329, 0, 330, 306, 307, 312, 314, 315, 316, 321,
	322, 326, 332, 0, 191, 207, 336, 0, 411, 269,
	519, 497, 493, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 242, 257, 259, 266, 278, 283,
	286, 291, 292, 295, 300, 346, 352, 353, 354, 355,
	3093, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 425,
	426, 427, 428, 429, 432, 433, 438, 439, 440, 441,
	442, 450, 451, 455, 473, 475, 487, 501, 506, 431,
	279, 482, 507, 0, 345, 0, 0, 347, 262, 282,
	293, 0, 496, 452, 212, 419, 271, 234, 0, 0,
	201, 231, 215, 240, 255, 258, 297, 356, 363, 392,
	397, 276, 252, 229, 416, 226, 435, 458, 459, 460,
	462, 360, 247, 396, 0, 361, 343, 464, 465, 289,
	463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 0, 0, 0, 0, 334, 248, 0, 0,
	393, 0, 197, 0, 437, 235, 344, 341, 470, 263,
	254, 250, 233, 290, 351, 391, 457, 385, 0, 338,
	0, 0, 447, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	232, 196, 376, 448, 267, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	246, 294, 253, 245, 467, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 365,
	238, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 302, 192, 210, 0, 0,
	375, 418, 424, 0, 0, 0, 236, 0, 422, 389,
	486, 218, 265, 415, 395, 420, 402, 268, 0, 0,
	421, 339, 472, 409, 483, 504, 505, 244, 369, 494,
	461, 500, 518, 211, 241, 383, 454, 489, 444, 362,
	468, 469, 301, 443, 275, 195, 337, 510, 209, 430,
	227, 216, 474, 492, 270, 413, 202, 456, 481, 224,
	434, 0, 0, 520, 204, 479, 453, 358, 298, 299,
	203, 0, 414, 249, 273, 239, 378, 476, 477, 237,
	521, 213, 499, 206, 0, 498, 371, 471, 480, 359,
	349, 205, 478, 357, 348, 304, 323, 324, 261, 284,
	407, 342, 408, 285, 367, 366, 368, 198, 490, 0,
	199, 0, 449, 491, 522, 219, 220, 222, 0, 260,
	264, 272, 274, 280, 281, 288, 335, 382, 406, 404,
	410, 0, 466, 484, 495, 502, 508, 509, 511, 512,
	513, 514, 515, 517, 516, 370, 287, 445, 303, 340,
	0, 0, 388, 423, 225, 488, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 350, 436, 485,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 0, 191, 207,
	336, 0, 411, 269, 519, 497, 493, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 242, 257,
	259, 266, 278, 283, 286, 291, 292, 295, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 425, 426, 427, 428, 429, 432, 433,
	438, 439, 440, 441, 442, 450, 451, 455, 473, 475,
	487, 501, 506, 431, 279, 482, 507, 0, 345, 0,
	0, 347, 262, 282, 293, 0, 496, 452, 212, 419,
	271, 234, 0, 0, 201, 231, 215, 240, 255, 258,
	297, 356, 363, 392, 397, 276, 252, 229, 416, 226,
	435, 458, 459, 460, 462, 360, 247, 396, 0, 361,
	343, 464, 465, 289, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 0, 0, 0, 0,
	334, 248, 0, 0, 393, 0, 197, 0, 437, 235,
	344, 341, 470, 263, 254, 250, 233, 290, 351, 391,
	457, 385, 0, 338, 0, 0, 447, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 232, 196, 376, 448, 267, 0,
	0, 0, 0, 188, 2658, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 246, 294, 253, 245, 467, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 365, 238, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 424, 0, 0, 0,
	236, 0, 422, 389, 486, 218, 265, 415, 395, 420,
	402, 268, 0, 0, 421, 339, 472, 409, 483, 504,
	505, 244, 369, 494, 461, 500, 518, 211, 241, 383,
	454, 489, 444, 362, 468, 469, 301, 443, 275, 195,
	337, 510, 209, 430, 227, 216, 474, 492, 270, 413,
	202, 456, 481, 224, 434, 0, 0, 520, 204, 479,
	453, 358, 298, 299, 203, 0, 414, 249, 273, 239,
	378, 476, 477, 237, 521, 213, 499, 206, 0, 498,
	371, 471, 480, 359, 349, 205, 478, 357, 348, 304,
	323, 324, 261, 284, 407, 342, 408, 285, 367, 366,
	368, 198, 490, 0, 199, 0, 449, 491, 522, 219,
	220, 222, 0, 260, 264, 272, 274, 280, 281, 288,
	335, 382, 406, 404, 410, 0, 466, 484, 495, 502,
	508, 509, 511, 512, 513, 514, 515, 517, 516, 370,
	287, 445, 303, 340, 0, 0, 388, 423, 225, 488,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 350, 436, 485, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 0, 191, 207, 336, 0, 411, 269, 519, 497,
	493, 0, 0, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 242, 257, 259, 266, 278, 283, 286, 291,
	292, 295, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 425, 426, 427,
	428, 429, 432, 433, 438, 439, 440, 441, 442, 450,
	451, 455, 473, 475, 487, 501, 506, 431, 279, 482,
	507, 0, 345, 0, 0, 347, 262, 282, 293, 0,
	496, 452, 212, 419, 271, 234, 0, 0, 201, 231,
	215, 240, 255, 258, 297, 356, 363, 392, 397, 276,
	252, 229, 416, 226, 435, 458, 459, 460, 462, 360,
	247, 396, 0, 361, 343, 464, 465, 289, 463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	0, 0, 0, 0, 334, 248, 0, 0, 393, 0,
	197, 0, 437, 235, 344, 341, 470, 263, 254, 250,
	233, 290, 351, 391, 457, 385, 0, 338, 0, 0,
	447, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 232, 196,
	376, 448, 267, 0, 0, 0, 0, 188, 2150, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 246, 294,
	253, 245, 467, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 365, 238, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	424, 0, 0, 0, 236, 0, 422, 389, 486, 218,
	265, 415, 395, 420, 402, 268, 0, 0, 421, 339,
	472, 409, 483, 504, 505, 244, 369, 494, 461, 500,
	518, 211, 241, 383, 454, 489, 444, 362, 468, 469,
	301, 443, 275, 195, 337, 510, 209, 430, 227, 216,
	474, 492, 270, 413, 202, 456, 481, 224, 434, 0,
	0, 520, 204, 479, 453, 358, 298, 299, 203, 0,
	414, 249, 273, 239, 378, 476, 477, 237, 521, 213,
	499, 206, 0, 498, 371, 471, 480, 359, 349, 205,
	478, 357, 348, 304, 323, 324, 261, 284, 407, 342,
	408, 285, 367, 366, 368, 198, 490, 0, 199, 0,
	449, 491, 522, 219, 220, 222, 0, 260, 264, 272,
	274, 280, 281, 288, 335, 382, 406, 404, 410, 0,
	466, 484, 495, 502, 508, 509, 511, 512, 513, 514,
	515, 517, 516, 370, 287, 445, 303, 340, 0, 0,
	388, 423, 225, 488, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 350, 436, 485, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 0, 191, 207, 336, 0,
	411, 269, 519, 497, 493, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 242, 257, 259, 266,
	278, 283, 286, 291, 292, 295, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 425, 426, 427, 428, 429, 432, 433, 438, 439,
	440, 441, 442, 450, 451, 455, 473, 475, 487, 501,
	506, 431, 279, 482, 507, 0, 345, 0, 0, 347,
	262, 282, 293, 0, 496, 452, 212, 419, 271, 234,
	0, 0, 201, 231, 215, 240, 255, 258, 297, 356,
	363, 392, 397, 276, 252, 229, 416, 226, 435, 458,
	459, 460, 462, 360, 247, 396, 0, 0, 343, 464,
	465, 289,
}

var yyPact = [...]int{
	3613, -1000, -405, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2072, 2242, -1000, -1000,
	-1000, -1000, 2287, -1000, 723, 1833, -1000, 2079, 376, -1000,
	43491, 487, -1000, 42283, 482, 4942, 43491, -1000, 177, -1000,
	154, 43491, 172, 41679, -1000, -1000, -289, 19321, 2026, 52,
	50, 43491, -1000, -1000, -1000, -1000, 2250, 1804, -1000, 351,
	-1000, -1000, -1000, -1000, -1000, -1000, 41075, -1000, -1000, -1000,
	2086, 2084, 2292, 620, 2017, -1000, 2151, 1804, -1000, 19321,
	2217, 2152, 18113, -1000, 18113, 430, -1000, -1000, 13271, -1000,
	-1000, 25371, 43491, 31411, 456, -1000, 2079, -1000, -1000, -1000,
	105, -1000, 309, 1705, -1000, 1703, -1000, 760, 626, 348,
	460, 436, 345, 344, 342, 340, 337, 326, 324, 322,
	358, -1000, 641, 641, -121, -122, 3092, 409, 401, 401,
	446, 2052, 2051, -1000, 657, -1000, 641, 641, 641, 328,
	641, 641, 641, 641, 265, 264, 641, 641, 641, 641,
	641, 641, 641, 641, 641, 641, 641, 641, 641, 641,
	641, 641, 641, 355, 2079, 248, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 43491, 221, 43491, -1000, 544, 43491, 768, 768,
	82, 768, 768, 768, 768, 167, 624, 46, -1000, 161,
	249, 143, 243, 772, 242, -1000, -1000, 226, 772, 1337,
	-1000, 628, 142, -1000, 768, 768, -1000, 10835, 164, 10835,
	10835, -1000, 2061, -1000, -1000, -1000, -1000, 1345, -1000, 445,
	-1000, -1000, -1000, -1000, 43491, 40471, 349, 705, -1000, -1000,
	-1000, 97, -1000, -1000, 1455, 991, 19321, 904, -1000, 1130,
	591, -1000, -1000, -1000, -1000, -1000, 513, 19925, 19925, 19925,
	19925, -1000, -1000, 1744, 1744, 1744, 1744, 19925, 1744, 19925,
	1744, 1744, 1744, 1744, 19321, 1744, 1744, 1744, -1000, 1744,
	1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744,
	1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744,
	1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744,
	1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744,
	1744, 1744, 1744, 1744, 541, 1744, 1744, 1744, 1744, 1744,
	-1000, -1000, -1000, -1000, 1744, 1744, 1744, 1744, 1744, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 22950, -1000, 15697,
	1744, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 43491, -1000, 1744, 195, 43491, 43491, 352, 2151, 1804,
	-1000, 2250, 2273, 351, -1000, 2376, 1620, 1543, 1350, 1804,
	1661, 43491, -1000, 1775, -1000, -1000, -1000, 1948, 1153, 1336,
	-1000, -1000, -1000, -1000, 1556, 19321, -1000, -1000, 2282, -1000,
	22346, 540, 906, 2280, 39867, -1000, 430, 430, 1681, 12662,
	33, -1000, -1000, -1000, 702, 28391, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2061, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1772, 43491, -1000, -1000, 4138, 1325, -1000, 1831, -1000, 1768,
	-1000, 1803, 19321, 1840, 481, 1325, 472, 470, 465, -1000,
	-52, -1000, -1000, -1000, -1000, -1000, -1000, 641, 641, 641,
	-1000, 357, 2214, 376, 4610, -1000, -1000, -1000, 39263, 1830,
	1325, -1000, 1827, -1000, 796, 518, 568, 568, 1325, -1000,
	-1000, 43491, 1325, 793, 788, 1325, 1325, 43491, 43491, -1000,
	38659, -1000, 38055, 37451, 1101, 43491, 36847, 36243, 35639, 35035,
	34431, -1000, 1950, -1000, 1869, -1000, -1000, -1000, 43491, 1325,
	43491, 43491, 331, -1000, -1000, 43491, 1325, -1000, -1000, 1098,
	1096, 1094, 641, 641, 1092, 1335, 1317, 1308, 641, 641,
	1090, 1307, 30203, 1304, 239, 1050, 1047, 1042, 1051, 1302,
	199, 1301, 1033, 1003, 1041, 43491, 1826, 43491, -1000, 237,
	703, 398, 691, 2079, 2025, 1678, 442, 477, 1325, 423,
	423, 43491, -1000, 11444, -1000, -1000, 1297, 19321, -1000, 822,
	772, 772, -1000, -1000, -1000, -1000, -1000, -1000, 768, 43491,
	822, -1000, -1000, -1000, 772, 768, 43491, 768, 768, 768,
	768, 772, 772, 772, 768, 43491, 43491, 43491, 43491, 43491,
	43491, 43491, 43491, 43491, 10835, 628, 768, -302, -1000, 1293,
	-1000, 1940, -1000, -1000, -1000, -1000, -1000, -1000, 10835, 10835,
	-1000, -1000, -1000, -1000, 160, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -72, 1674, 33827, -1000, -305, -311,
	-312, -313, -1000, -1000, -1000, -320, -324, -1000, -1000, -1000,
	19321, 19321, 19321, 19321, -146, -1000, 857, 19925, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 152, 747, 19925, 19925, 19925,
	19925, 19925, 19925, 19925, 19925, 19925, 19925, 19925, 19925, 19925,
	19925, 19925, 681, 6492, 6492, 591, 591, 591, 591, -1000,
	18113, 19321, 19321, 591, -1000, 1325, 33223, 18113, 18113, 19321,
	2060, 707, 991, 43491, -1000, 1350, -1000, -1000, -1000, 1180,
	-1000, 43491, 43491, 795, 19321, 19321, 19321, 19321, 19321, 19321,
	14484, 19321, 19321, 19321, 19321, 19321, 19321, 19321, 19321, 19321,
	19321, 19321, 19321, 19321, 19321, 19321, 19321, 19321, 19321, 19321,
	19321, 19321, 19321, 19321, 19321, 19321, 19321, 1350, 19321, 1277,
	19321, 19321, 13880, 11444, 18113, 18113, 18113, 18113, 18113, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 538, 1586, 1533, 1666, 19321, -1000, 1663, -1000, -144,
	24767, 19321, 1289, 2278, 1852, 43491, -1000, -1000, -1000, 2151,
	-1000, 2151, 1586, 2009, 1954, 18113, -1000, -1000, 2009, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1472, -1000, 43491,
	1661, 2123, 43491, 1939, 1287, 350, -1000, 19321, 19321, 1654,
	-1000, 1379, 43491, -1000, -146, -1000, 32619, -1000, -1000, 10226,
	-1000, 43491, 316, 43491, -1000, 24163, 32015, 12053, 33, -1000,
	12053, 1598, -1000, 18, 3, 15088, 581, -1000, -1000, -1000,
	3092, 21133, 1422, 581, 96, -1000, -1000, -1000, 1803, -1000,
	1803, 1803, 1803, 1803, 350, 350, 350, 350, -1000, -1000,
	-1000, -1000, -1000, 1824, 1823, -1000, 1803, 1803, 1803, 1803,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1822, 1822, 1822,
	1809, 1809, 389, -1000, 19321, 305, 31411, 2110, 1037, 1548,
	237, 428, 1850, 1325, 1325, 1325, 428, -1000, 1494, 1334,
	1286, -1000, -397, 1649, -1000, -1000, 2213, -1000, -1000, 699,
	814, 813, 648, 43491, 210, 289, -1000, 396, -1000, 31411,
	1325, 787, 568, 1325, -1000, 1325, -1000, -1000, -1000, -1000,
	-1000, 1325, -1000, -1000, 1644, -1000, 1676, 908, 812, 899,
	811, 1644, -1000, -1000, -95, 1644, -1000, 1644, -1000, 1644,
	-1000, 1644, -1000, 1644, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 719, 186, 43491, 210, 681, -1000, 441, -1000,
	-1000, -1000, 681, 681, -1000, -1000, -1000, -1000, 1276, 1272,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -379,
	43491, -1000, 222, 689, 272, 298, 287, 43491, 254, 2138,
	2136, 2112, 223, 263, 43491, 43491, 423, 1890, 43491, 2103,
	43491, -1000, -1000, -1000, -1000, -1000, 991, 43491, -1000, -1000,
	768, 768, -1000, -1000, 43491, 768, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 768, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	43491, -1000, -1000, -1000, -1000, 43491, -1000, -1000, -1000, -1000,
	-1000, 166, 14, 339, -1000, -1000, -1000, -1000, -1000, 2144,
	-1000, 991, 746, 739, -1000, 1744, -1000, -1000, 964, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 152, 19925, 19925, 19925,
	1282, 455, 909, 1012, 997, 789, 789, 849, 849, 595,
	595, 595, 595, 595, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1270, -1000, 1738, -1000, 985, 1454, 1350, -1000,
	1738, 1738, 1481, 18113, -1000, -1000, 736, -1000, 19321, 1350,
	-1000, -1000, 1350, 1350, 1641, 1639, 2271, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 980, 1548,
	1548, 1548, 1548, 1548, 19321, 1324, -1000, -1000, -1000, 2270,
	2254, 1350, 1455, 1350, 1616, -1000, 2216, 1548, 2200, 2132,
	2126, 1476, 2116, 2006, 1996, 1548, 1548, 1548, 1436, 1928,
	1913, 1906, 1883, 1859, 1842, 1818, 1764, 1730, 1548, -150,
	1548, 1350, 1350, 1350, 1613, 1413, 1350, 18113, 18113, 1610,
	1744, 535, -1000, 1738, 1350, 1350, 1738, 1738, 11444, 1350,
	-1000, 1666, 43491, -1000, -288, -1000, -7, 588, 1744, -1000,
	30203, 1350, -1000, 5189, -1000, 44699, -1000, -1000, -1000, -1000,
	-1000, 27787, 1828, 2009, -1000, -1000, 1744, 1765, -1000, -1000,
	350, 71, 27183, -1000, -1000, 991, 991, 19321, -1000, -1000,
	-1000, -1000, -1000, -1000, 533, 2225, 382, 1744, -1000, 1492,
	2085, -1000, -1000, -1000, 2122, 21742, -1000, 1744, 1744, 43491,
	1805, 1656, -1000, 531, -1000, 1598, 33, 0, -1000, -1000,
	-1000, -1000, 991, -1000, 1245, 317, 1862, -1000, 400, -1000,
	-1000, -1000, -1000, 2043, 84, -1000, -1000, -1000, 350, 350,
	-1000, -1000, -1000, -1000, -1000, -1000, 1269, 1269, -1000, -1000,
	-1000, -1000, -1000, 1027, -1000, -1000, -1000, 1025, -1000, -1000,
	1601, 1857, 305, -1000, -1000, 641, 1266, -1000, -1000, 2038,
	641, 641, 43491, -1000, -1000, 1416, 2110, 222, 43491, 727,
	1886, -1000, 1850, 1850, 1850, 43491, -1000, -1000, -1000, -1000,
	-1000, -1000, -381, 74, 356, -1000, -1000, -1000, 3194, 43491,
	1761, -1000, 208, -1000, 1411, -1000, 43491, -1000, 1758, 1820,
	1325, 1325, -1000, -1000, -1000, 43491, 1744, -1000, -1000, -1000,
	-1000, 458, 2077, 2065, -1000, -1000, -176, 210, 208, 581,
	1325, -1000, -1000, -1000, -1000, -1000, -382, 1748, 459, 212,
	297, 43491, 43491, 43491, 43491, 43491, 498, -1000, -1000, -1000,
	-1000, 182, -1000, -1000, 182, -1000, -1000, -1000, -1000, 244,
	439, -1000, 43491, 43491, 556, -1000, -1000, -1000, 772, -1000,
	-1000, 772, -1000, -1000, -1000, -1000, -1000, 2058, 43491, 13,
	-340, -1000, -335, 19321, -1000, -1000, -1000, -1000, 925, 452,
	909, 19925, 19925, 18113, -87, 587, 587, 681, -1000, -1000,
	-1000, 19321, 19321, 1545, 658, -1000, 19321, 966, -1000, -1000,
	-1000, 19321, 19321, 19321, 1350, 300, -1000, -1000, -1000, -1000,
	-1000, 2267, -1000, 19321, 19321, 19321, -1000, -1000, 19321, 19321,
	-1000, 19321, 19321, 20529, 1350, 20529, 19321, 19321, 20529, -1000,
	-1000, -1000, -1000, 20529, 19321, 19321, 19321, 19321, 19321, 19321,
	19321, 19321, 19321, -1000, -1000, 31411, 49, -150, -150, -150,
	1265, 49, 1255, -1000, 1738, 1738, 18113, 11444, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 588,
	-1000, 568, 568, 568, 43491, -1000, -1000, -1000, -1000, -1000,
	-1000, 1593, 2185, -1000, 1974, 1969, 2258, 2225, -1000, 24163,
	2009, -1000, -1000, 43491, -282, -1000, 2022, 1998, -1000, -1000,
	-1000, -1000, 9617, 2151, 19321, 1882, 43491, 149, -1000, 23559,
	43491, 43491, 24163, 24163, 24163, 24163, 24163, -1000, 1904, 1893,
	-1000, 1951, 1907, 1968, 43491, -1000, 1728, 1350, 2273, 21742,
	351, 19321, 25975, 1523, 24163, -1000, -1000, 24163, 43491, 9008,
	-1000, -1000, -11, -12, -1000, -1000, -1000, -1000, 3092, -1000,
	-1000, 474, 2121, 2034, -1000, -1000, -1000, -1000, 1715, -1000,
	1672, 1590, 1670, 186, -1000, 1839, 2057, 641, 641, -1000,
	1022, -1000, 1325, 1259, 1258, -1000, -1000, -1000, 457, -1000,
	2096, 43491, 1881, 1873, 1871, -1000, -394, 1016, 1812, 1769,
	19321, 1811, 2212, 1526, 43491, -1000, -1000, 43491, -1000, 285,
	-1000, 305, 43491, -1000, -1000, -1000, 289, 43491, -1000, 8011,
	-1000, 208, -1000, -1000, -1000, -1000, -1000, -1000, 43491, 225,
	-1000, 1810, 1280, -1000, -1000, 1846, -1000, -1000, -1000, -1000,
	176, 268, 179, 1249, 179, -1000, 43491, 536, 1857, 43491,
	-1000, -1000, -1000, 768, 768, -1000, -1000, 2055, -1000, 1325,
	1548, 19925, 19925, -1000, 591, -1000, 1744, 1350, 1803, 1803,
	-1000, 1803, 1809, -1000, 1803, 162, 1803, 150, 1803, -1000,
	-1000, 1350, 1350, 1344, 1121, -61, -1000, 991, 19321, 1606,
	1594, 1548, -1000, 1792, 1791, 19321, 1548, 1548, 1548, -1000,
	991, 1476, 1583, 1579, -1000, -1000, -1000, -1000, 1570, 1548,
	1571, -280, 1350, 1668, 1668, 1668, 1668, 1668, 1666, 1666,
	1666, 1666, 28995, -1000, -150, -1000, -1000, -201, -202, -1000,
	-1000, -1000, 1350, 1350, 1350, -150, 1550, 1550, 1550, -1000,
	-1000, 1350, -1000, -1000, 2127, 2127, 2127, 1637, 44095, 43491,
	-1000, -1000, -1000, -1000, 2225, 2223, 1542, -1000, -1000, 71,
	413, -1000, 2005, 1998, -1000, 2206, 2015, 2203, -1000, -1000,
	-1000, 991, -1000, 2082, 1624, -1000, 679, 1452, -1000, -1000,
	17509, 1659, 1962, 526, 1637, 1504, 2085, 1845, 1868, 2402,
	-1000, -1000, -1000, -1000, 1872, -1000, 1837, -1000, -1000, 1775,
	-1000, -1000, 1533, 1350, 1566, 316, 24163, 1468, 1468, -1000,
	509, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 887, 6704,
	2291, -1000, 1248, -1000, 1192, 204, 1014, -1000, -1000, 641,
	641, -1000, 786, 774, -1000, 43491, 1789, -1000, 350, 1238,
	350, 1013, -1000, 1008, -1000, -1000, -1000, -1000, 1853, 1933,
	-1000, -1000, -1000, -1000, 43491, -1000, -1000, 43491, 43491, 43491,
	1788, 2197, -1000, 19321, 1787, 664, 1560, 43491, 43491, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	418, 641, -359, 261, 257, 641, 641, 641, -395, -1000,
	-1000, 1630, 1626, -1000, -119, -1000, 19321, -1000, -1000, -1000,
	1140, 1140, -1000, 1775, -1000, -1000, -1000, 1390, -1000, -1000,
	-101, 43491, 43491, 43491, 43491, -1000, 946, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 591,
	19925, -1000, -1000, 350, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 19321, -1000, 19321, -1000, 2151, 1237, 991,
	19321, 19321, -1000, 1006, 1005, 1548, -1000, -1000, -1000, 1350,
	20529, -1000, 20529, -1000, 19321, 233, 587, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1350, 314, 2201,
	2196, -1000, -1000, -1000, 2227, 2227, 2227, -1000, 1350, 19321,
	1350, 1350, -1000, 1744, 2037, 1744, 1744, 25975, -1000, -1000,
	2223, 2220, 2179, 1989, 1997, 1997, 2005, -1000, 2178, 2175,
	-1000, 1234, 2174, 1233, 773, -1000, 43491, 19321, 149, -1000,
	364, 43491, 149, 43491, -1000, 2201, -1000, -1000, 19321, 1779,
	-1000, 19321, -1000, -1000, -1000, -1000, -1000, -1000, 6492, 2225,
	1468, -1000, -1000, 602, -1000, 19321, -1000, -1000, -1000, 5361,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1210, 1193,
	-1000, -1000, 1777, 19321, -1000, -1000, -1000, 1388, 1386, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1775, -1000, -1000, -1000,
	-1000, 289, -386, 1552, 43491, 1001, -1000, 1595, 1526, 278,
	149, 1191, 641, 641, 641, 930, 926, 30203, 1588, -1000,
	43491, 379, -1000, 289, -1000, -125, -127, 1548, -1000, -1000,
	2117, -1000, -1000, 11444, -1000, -1000, 1771, 1848, -1000, -1000,
	-1000, 402, -1000, 1548, 1548, 1350, -1000, 1548, 1548, 1380,
	1373, -1000, -1000, 1579, -1000, 1260, -1000, 233, 1350, 1867,
	-1000, -1000, 6492, -1000, -1000, 2201, -365, 19321, 49, -1000,
	-1000, 194, 49, 49, 49, 991, 49, 49, 26579, -1000,
	2163, 2159, 30807, 30807, 588, 2220, -158, 19321, 19321, 1981,
	947, -1000, -1000, -1000, -1000, 1181, 1179, -1000, 1173, -1000,
	2285, -1000, 991, -1000, 149, -1000, 504, 1452, -1000, 2151,
	991, 43491, 991, 77, 2201, -1000, 1548, -1000, 1744, 1744,
	1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744,
	1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744,
	1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744, 1744,
	-1000, -1000, 43491, 1516, -1000, -1000, 2114, 1577, 72, -1000,
	1575, -1000, -1000, 148, -1000, 19321, -1000, 30203, 1165, 1161,
	-1000, -1000, -1000, -1000, -395, -1000, -1000, -1000, -1000, -1000,
	-1000, 351, 1499, -1000, 640, 43491, 43491, 1350, 306, -107,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19321,
	-1000, 1350, 1866, -1000, -231, -1000, -365, -1000, -1000, 16905,
	-1000, -1000, 1455, -150, -1000, -1000, -150, -150, -150, -150,
	-150, 1557, -1000, -1000, -1000, -1000, -1000, 1557, 1557, -1000,
	-158, -1000, 1475, -1000, 43491, 991, 1455, -1000, 914, -1000,
	-1000, -1000, -1000, -1000, 43491, 1452, 43491, -1000, 1535, 1350,
	1744, 2151, -1000, 1460, -1000, 351, -1000, 1751, 1769, -1000,
	-1000, -1000, 16301, -1000, -1000, -1000, -1000, -1000, 227, -97,
	11444, 8399, 1447, -1000, -1000, 1925, -92, -116, 1476, -1000,
	-327, -1000, -1000, -1000, -1000, 18717, -1000, 334, -343, -192,
	-1000, -1000, -1000, -1000, -1000, -1000, 29599, -1000, -1000, -1000,
	-1000, -158, -1000, -1000, 2107, -1000, -1000, 1450, -1000, -1000,
	25975, 42887, -1000, -88, 286, -97, 19321, 1746, 1350, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -9, -1000, -1000,
	-1000, -1000, -1000, 1846, -1000, 1924, -1000, 1350, 732, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 43491, 1744, -1000,
	1400, -1000, 1456, -212, 1865, -1000, -89, -1000, -1000, -1000,
	830, 1148, -1000, -1000, -1000, -1000, -1000, -1000, 1318, 43491,
	-1000, 359, -1000, -1000, -101, -103, -1000, 18717, -1000, 28995,
	-1000, 42887, -207, 581, 6492, -1000, 1864, 1855, 2263, -1000,
	-1000, -1000, -1000, -1000, -1000, -402, 1349, 228, -1000, -113,
	-1000, 1350, -1000, -1000, 2092, 77, -1000, 2265, -1000, 2243,
	609, 609, -1000, 915, -402, -1000, -117, -1000, -248, -1000,
	-1000, -1000, -1000, -1000, 386, 912, -1000, -1000, -1000, -1000,
	6492, -1000, -1000, -1000, 229, 229, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2655, 2654, 31, 5, 40, 39, 2653, 26, 118,
	197, 29, 218, 121, 2652, 2651, 2650, 2649, 2648, 2647,
	2646, 232, 231, 228, 2645, 2644, 2643, 2642, 2639, 2637,
	2635, 2634, 2633, 2632, 226, 182, 196, 2631, 2630, 2629,
	141, 191, 105, 107, 193, 2628, 2627, 95, 2625, 2623,
	2622, 220, 219, 214, 765, 2619, 213, 136, 52, 2618,
	2616, 2615, 2614, 2613, 2612, 2611, 2610, 2609, 2608, 2607,
	2606, 2605, 2604, 2603, 2602, 2601, 321, 2600, 2599, 20,
	2598, 98, 2597, 2596, 2595, 2594, 2593, 12, 2591, 41,
	14, 110, 2589, 2587, 116, 2585, 2584, 71, 2583, 2582,
	19, 2580, 24, 2579, 43, 2578, 2576, 152, 2571, 2569,
	2568, 42, 2567, 2566, 2565, 2562, 2559, 2556, 2555, 166,
	2554, 2553, 2552, 2551, 199, 2548, 2547, 184, 132, 142,
	2546, 2541, 127, 188, 2540, 147, 2539, 2537, 2536, 173,
	2534, 5122, 2533, 81, 90, 2532, 83, 97, 77, 79,
	15, 17, 2531, 2530, 80, 111, 2527, 122, 82, 2524,
	143, 138, 2523, 2517, 11, 9, 2516, 1, 4, 2,
	85, 2514, 2510, 145, 2509, 2508, 2507, 119, 2505, 2504,
	4033, 2503, 108, 161, 126, 92, 2502, 48, 76, 2501,
	2500, 2497, 2494, 2490, 58, 2489, 2488, 2487, 163, 78,
	186, 67, 44, 45, 60, 156, 2486, 73, 100, 2484,
	164, 158, 2483, 94, 69, 46, 49, 2482, 131, 160,
	144, 61, 129, 157, 2481, 2480, 68, 91, 2477, 2476,
	2473, 2466, 2465, 2460, 88, 2459, 66, 2458, 204, 2457,
	35, 2456, 53, 47, 2444, 84, 150, 86, 32, 2442,
	206, 2437, 65, 181, 153, 179, 2435, 2432, 2430, 2427,
	194, 284, 2425, 2424, 103, 183, 168, 170, 115, 2423,
	318, 2422, 2421, 117, 1766, 3180, 28, 180, 2419, 2416,
	5478, 159, 50, 21, 2415, 133, 2412, 2411, 2403, 200,
	187, 134, 1004, 70, 2402, 2398, 13, 2397, 2396, 2395,
	2394, 2393, 2390, 99, 38, 37, 36, 202, 89, 8,
	176, 93, 2386, 2385, 2384, 149, 123, 2381, 178, 177,
	151, 140, 2380, 189, 174, 154, 2379, 130, 34, 2378,
	2377, 2376, 2375, 120, 2372, 2367, 2366, 2365, 175, 165,
	148, 102, 2363, 101, 135, 172, 171, 55, 2360, 63,
	2359, 2358, 33, 192, 30, 2355, 16, 75, 74, 25,
	128, 139, 2352, 0, 2350, 18, 190, 317, 185, 2348,
	2345, 6, 7, 10, 2336, 2334, 2333, 2332, 162, 2324,
	2321, 2316, 2315, 23, 59, 22, 3, 125, 96, 2312,
	2306, 4266, 1737, 155, 2305, 203,
}

//line sql.y:7384
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 389, 390, 390, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 363, 363,
	363, 366, 366, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 105, 105, 22, 23, 23, 23, 23,
	393, 393, 175, 175, 173, 173, 174, 174, 245, 245,
	24, 25, 25, 255, 255, 254, 254, 254, 256, 256,
	256, 256, 292, 292, 26, 26, 26, 26, 26, 125,
	125, 365, 365, 364, 356, 356, 355, 355, 354, 362,
	362, 361, 361, 360, 38, 39, 48, 48, 48, 48,
	49, 50, 367, 367, 329, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 331, 331, 317, 317, 330, 330, 330, 330, 330,
	330, 330, 316, 316, 136, 136, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 382, 382, 382, 381, 381, 225, 225,
	225, 225, 225, 225, 225, 225, 145, 145, 154, 154,
	154, 154, 154, 143, 143, 144, 142, 142, 142, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 153, 153, 149, 149, 149, 150, 150,
	150, 151, 151, 383, 383, 383, 383, 296, 296, 296,
	296, 299, 299, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 298, 298, 298, 298, 298, 300, 300, 300,
	300, 300, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 302, 302, 302,
	302, 302, 302, 302, 302, 315, 315, 303, 303, 310,
	310, 311, 311, 311, 312, 312, 312, 313, 313, 308,
	308, 308, 308, 308, 308, 309, 309, 309, 318, 343,
	343, 342, 342, 340, 340, 340, 340, 340, 340, 340,
	340, 327, 327, 337, 337, 337, 337, 337, 326, 326,
	322, 322, 322, 323, 323, 324, 324, 321, 321, 325,
	325, 339, 339, 338, 338, 319, 319, 320, 320, 345,
	384, 384, 384, 384, 384, 385, 385, 346, 374, 376,
	376, 376, 375, 375, 372, 373, 371, 371, 371, 371,
	371, 81, 81, 81, 268, 268, 269, 269, 335, 335,
	334, 334, 334, 336, 336, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 263, 263, 263, 370,
	370, 370, 370, 370, 370, 369, 369, 369, 332, 332,
	332, 368, 368, 57, 57, 208, 208, 387, 387, 388,
	388, 388, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 107, 107, 108, 108, 108, 108, 110, 110,
	110, 348, 348, 58, 58, 3, 3, 163, 165, 166,
	166, 164, 164, 164, 164, 164, 164, 60, 60, 59,
	59, 168, 167, 169, 169, 169, 1, 1, 2, 2,
	4, 4, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 314, 314, 314, 347, 347, 349,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	113, 112, 112, 111, 114, 114, 114, 114, 114, 114,
	114, 114, 351, 351, 351, 61, 61, 352, 304, 305,
	306, 5, 6, 328, 350, 121, 121, 28, 37, 37,
	29, 29, 29, 29, 30, 30, 62, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 262, 262,
	271, 271, 261, 261, 285, 285, 285, 264, 264, 264,
	265, 265, 380, 380, 380, 258, 258, 64, 64, 64,
	66, 66, 67, 68, 68, 287, 287, 288, 288, 69,
	70, 82, 82, 82, 82, 82, 82, 106, 106, 106,
	15, 15, 15, 15, 78, 78, 78, 14, 14, 65,
	65, 72, 377, 377, 378, 379, 379, 379, 379, 73,
	75, 31, 31, 31, 31, 31, 31, 131, 131, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 126, 126, 126, 120, 120, 394, 76, 77, 77,
	124, 124, 124, 117, 117, 117, 123, 123, 123, 16,
	16, 17, 244, 244, 18, 18, 128, 128, 130, 130,
	130, 130, 130, 132, 132, 132, 132, 132, 132, 132,
	127, 127, 129, 129, 129, 129, 278, 278, 278, 277,
	277, 157, 157, 159, 158, 158, 160, 160, 161, 161,
	161, 161, 206, 206, 183, 183, 242, 242, 240, 240,
	241, 241, 243, 243, 243, 243, 246, 246, 162, 162,
	162, 162, 170, 170, 171, 171, 172, 172, 286, 286,
	283, 283, 283, 282, 282, 176, 176, 176, 178, 177,
	177, 177, 177, 179, 179, 181, 181, 180, 180, 182,
	187, 187, 186, 186, 184, 184, 184, 184, 185, 185,
	185, 185, 188, 188, 141, 141, 141, 141, 141, 141,
	141, 152, 152, 152, 152, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 83, 83, 83, 84, 84, 85, 85, 85,
	86, 86, 86, 86, 86, 87, 87, 87, 89, 89,
	88, 88, 201, 201, 90, 90, 91, 91, 94, 94,
	93, 92, 92, 98, 98, 95, 95, 97, 97, 96,
	99, 99, 100, 101, 101, 259, 259, 189, 189, 197,
	197, 197, 197, 190, 190, 190, 190, 190, 190, 190,
	198, 198, 198, 205, 199, 199, 195, 195, 195, 195,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	213, 213, 294, 294, 359, 359, 358, 358, 357, 357,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 395, 395, 307, 307, 307, 307, 196, 196, 196,
	196, 196, 122, 122, 122, 122, 122, 291, 291, 291,
	295, 295, 295, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 211, 211,
	118, 118, 209, 209, 210, 212, 212, 207, 207, 207,
	192, 192, 192, 214, 214, 215, 215, 102, 103, 103,
	104, 104, 216, 216, 218, 217, 217, 219, 220, 220,
	220, 221, 221, 222, 222, 222, 47, 47, 47, 47,
	47, 42, 42, 42, 42, 43, 43, 43, 133, 133,
	133, 133, 135, 135, 134, 134, 79, 79, 80, 80,
	80, 139, 139, 140, 140, 140, 137, 137, 138, 138,
	238, 238, 223, 223, 223, 230, 230, 230, 226, 226,
	228, 228, 228, 229, 229, 229, 227, 235, 235, 237,
	237, 236, 236, 232, 232, 233, 233, 234, 234, 234,
	231, 231, 191, 191, 191, 191, 191, 239, 239, 239,
	239, 247, 247, 202, 202, 204, 204, 203, 203, 156,
	248, 248, 252, 249, 249, 253, 253, 253, 253, 253,
	250, 250, 251, 251, 279, 279, 279, 257, 257, 270,
	270, 266, 266, 267, 267, 260, 260, 272, 272, 272,
	74, 200, 200, 344, 344, 341, 275, 275, 276, 276,
	280, 280, 284, 284, 281, 281, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 391, 392, 289, 290,
	290, 290,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	2, 2, 2, 1, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 7, 7,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 3, 3, 0, 2, 2, 2, 2, 2,
	2, 2, 4, 4, 3, 0, 1, 4, 3, 4,
	4, 3, 3, 3, 2, 1, 3, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 1, 1, 2, 1, 3,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 3, 4, 3, 7, 0, 3, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	6, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 9, 6, 6, 6, 2, 2, 3,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 1,
	2, 5, 0, 3, 4, 3, 4, 2, 0, 1,
	1, 2, 2, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 5, 1, 3, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 5, 5, 6,
	4, 4, 8, 6, 8, 6, 8, 5, 4, 2,
	2, 1, 2, 2, 2, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 6, 6, 6, 4,
	4, 4, 7, 8, 6, 5, 6, 8, 11, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 4, 6,
	5, 5, 5, 9, 9, 9, 6, 9, 9, 9,
	0, 2, 0, 2, 0, 2, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 2, 2, 0, 3, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 4, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -389, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -105, -33, 32, -38, -48, 220, -49, -39, 221,
	-50, 223, 222, 259, 224, 252, 74, 305, 306, 308,
	309, 310, 311, -106, 257, 258, 226, 36, 45, 33,
	34, 37, 230, 265, 266, 229, -10, -34, 8, -391,
	11, 436, 254, 253, 28, -12, 470, 85, -390, 613,
	-238, -223, 22, 33, 29, -222, -218, -124, -223, 20,
	18, 7, -76, -394, -76, -76, 12, 13, -76, -329,
	-331, 85, 156, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -353, -44, -41, 225, 222, 269,
	119, 120, 259, 260, 261, 224, 243, 258, 262, 257,
	278, -40, 80, 33, 470, 473, -336, 221, 227, 228,
	437, 122, 121, 75, 223, -333, 359, 502, 583, -56,
	585, 101, 103, 584, 44, 233, 586, 587, 588, 509,
	589, 242, 590, 591, 592, 593, 599, 551, 600, 601,
	602, 123, 7, -76, -284, -280, -363, -274, 88, 89,
	90, 467, 245, 500, 501, 294, 80, 41, 356, 359,
	502, 583, 305, 319, 313, 340, 332, 468, 503, 297,
	246, 282, 577, 330, 131, 585, 300, 504, 260, 364,
	365, 505, 366, 101, 308, 403, 598, 299, 506, 596,
	103, 584, 79, 51, 580, 44, 255, 328, 229, 324,
	586, 283, 507, 478, 276, 122, 119, 605, 36, 322,
	50, 30, 595, 121, 49, 587, 147, 508, 588, 509,
	368, 347, 571, 48, 369, 261, 510, 83, 266, 472,
	303, 579, 370, 323, 371, 293, 594, 226, 511, 563,
	372, 373, 572, 512, 348, 352, 513, 395, 374, 612,
	52, 514, 515, 573, 120, 516, 78, 589, 317, 318,
	517, 291, 244, 397, 344, 449, 456, 457, 107, 108,
	452, 109, 458, 110, 459, 460, 461, 450, 111, 104,
	451, 462, 463, 345, 346, 112, 464, 106, 105, 453,
	455, 113, 465, 242, 35, 375, 469, 295, 58, 270,
	398, 46, 350, 609, 45, 567, 518, 570, 343, 339,
	446, 53, 519, 520, 521, 522, 590, 342, 316, 338,
	604, 4, 288, 591, 62, 228, 354, 353, 355, 277,
	394, 335, 523, 524, 525, 249, 81, 526, 325, 21,
	527, 528, 376, 284, 529, 56, 530, 531, 401, 258,
	532, 54, 592, 39, 533, 263, 606, 593, 534, 535,
	536, 537, 265, 538, 378, 539, 377, 349, 351, 272,
	379, 471, 540, 304, 321, 262, 597, 541, 250, 578,
	264, 269, 257, 402, 251, 542, 543, 544, 545, 546,
	298, 562, 547, 548, 309, 599, 447, 43, 549, 550,
	551, 552, 553, 292, 287, 396, 405, 61, 82, 361,
	554, 555, 576, 315, 285, 556, 306, 55, 600, 601,
	602, 279, 603, 9, 610, 611, 381, 123, 289, 290,
	47, 336, 271, 557, 301, 558, 326, 327, 341, 314,
	337, 307, 564, 273, 382, 448, 259, 559, 404, 286,
	357, 362, 302, 475, 278, 383, 575, 474, 334, 331,
	280, 560, 384, 234, 274, 275, 561, 565, 385, 386,
	296, 387, 388, 389, 390, 391, 393, 392, 281, 473,
	312, 329, 363, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 430, 431, 432, 433,
	434, 445, 232, -76, 232, -180, -280, 232, -250, 365,
	-271, 367, 380, 375, 385, 373, -262, 376, 378, 272,
	-380, 395, 232, 382, 220, 368, 377, 386, 387, 296,
	393, 388, 392, 281, 389, 390, 391, -363, 173, 588,
	603, 131, 333, 372, 370, 396, 567, -280, 307, -287,
	312, -275, -363, -274, 310, -180, -82, 563, 224, -289,
	-289, -126, 567, 569, -199, -141, 140, -152, -155, -146,
	-147, -193, -194, -195, -196, -153, -207, 162, 163, 170,
	141, -205, -156, 26, 466, 438, 437, 173, 31, 216,
	68, 69, 440, 441, 143, 57, 413, 414, -154, 408,
	415, 410, 443, 444, 114, 445, 104, 106, 105, 446,
	447, 448, 345, 346, 449, 450, 451, 107, 108, 109,
	110, 111, 112, 113, 452, 455, 453, 454, 456, 457,
	458, 463, 464, 459, 460, 461, 462, 465, -86, -98,
	491, 490, -99, -275, -280, 237, 407, 231, 168, 436,
	-148, -144, -8, -203, 406, 411, 412, 416, 409, 477,
	479, 494, 495, 497, 482, 487, 486, 489, -363, -274,
	-150, -149, -189, 91, 97, 102, 98, -386, 115, -391,
	581, 92, 93, 94, 95, 96, 116, 117, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	44, 381, 381, -180, -76, -76, -76, -76, -216, -124,
	-218, -10, -8, -391, 8, -76, -8, -9, -13, -34,
	-36, 496, -35, -280, -223, -238, 12, 158, 42, 50,
	-221, -222, -12, -8, -141, 19, 23, 24, -129, 164,
	-141, -280, -77, -129, -260, 236, -76, -76, -249, -292,
	307, -253, 396, 395, -276, -251, -275, -273, -250, 394,
	225, 23, 476, 138, 25, 27, 142, 173, 126, 19,
	143, 37, 227, 333, 243, 172, 239, 437, 220, 72,
	477, 408, 410, 406, 413, 439, 440, 407, 367, 31,
	13, 479, 28, 253, 24, 38, 166, 222, 146, 480,
	256, 26, 254, 114, 117, 482, 22, 75, 248, 14,
	241, 40, 16, 483, 484, 17, 237, 236, 158, 233,
	70, 11, 216, 29, 155, 66, 485, 133, 486, 487,
	488, 489, 127, 68, 156, 20, 607, 411, 412, 33,
	568, 466, 267, 168, 73, 59, 569, 140, 409, 490,
	491, 115, 492, 118, 76, 574, 135, 18, 71, 42,
	493, 268, 494, 238, 608, 495, 399, 496, 157, 223,
	436, 69, 497, 581, 582, 231, 380, 8, 442, 32,
	252, 240, 125, 67, 498, 232, 145, 443, 444, 235,
	128, 116, 7, 132, 34, 12, 74, 77, 414, 415,
	416, 57, 124, 470, 144, 15, 499, 400, 137, 131,
	-330, 156, -316, -320, -275, 247, -346, 243, -180, -339,
	-338, -275, -391, -125, -270, 233, 241, 240, 132, -367,
	135, 289, 407, 231, -51, -52, -53, -250, 172, 587,
	-107, 264, 268, 86, 86, -320, -319, -318, -368, 268,
	247, -345, -337, 239, 248, -326, 240, 241, -321, 233,
	133, -368, -321, 238, 248, 243, 247, 268, 268, 123,
	268, 123, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 263, -327, 148, -327, 474, 474, -333, -368, 243,
	-368, -368, 235, 35, 35, -272, -321, 235, 25, -327,
	-327, -327, -250, 172, -327, -327, -327, -327, 276, 276,
	-327, -327, -327, -327, -327, -327, -327, -327, -327, -327,
	-327, -327, -327, -327, -327, -327, -327, 232, -367, -133,
	392, 296, 80, -54, 278, -37, -180, -270, 233, 234,
	-367, 265, -180, 217, -180, -264, 156, 15, -264, -261,
	381, 379, 366, 371, -264, -264, -264, -264, 279, 364,
	-322, 233, 35, 244, 381, 279, 364, 279, 280, 279,
	280, 374, 384, 279, -285, 14, 158, 407, 369, 373,
	272, 232, 273, 234, 383, 280, -285, 92, -265, 156,
	381, 275, -264, -264, -290, -391, -276, 333, -363, 570,
	-290, -290, 32, 89, 235, -275, -78, -275, 92, -15,
	-11, -22, -21, -23, 148, -131, 381, -119, 173, 588,
	571, 572, 573, 570, 378, 578, 576, 574, 279, 575,
	86, 135, 137, 138, 4, -141, 155, -190, 148, 149,
	150, 151, 152, 153, 154, 158, 140, 142, 156, 157,
	136, 159, 160, 161, 162, 163, 164, 165, 167, 166,
	168, 169, 172, 218, 219, -147, -147, -147, -147, -205,
	-391, -391, -391, -147, -259, -391, -147, -391, -391, -391,
	-391, -211, -141, -391, -395, -391, -395, -395, -307, -391,
	-307, -391, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, 217, -391, -391, -391, -391, -391, -307,
	-307, -307, -307, -307, 102, 97, 91, -207, 98, 92,
	-275, -280, -8, -9, -199, -391, -289, -377, -378, -183,
	-180, -391, 296, -275, -275, 265, -221, -12, -8, -216,
	-222, -218, -8, -76, -117, -130, 63, 64, -132, 24,
	38, 67, 65, 23, -392, 87, -392, -238, -392, 86,
	-36, -242, 85, 61, 43, 92, 92, 86, 21, -217,
	-219, -141, 14, -278, 4, -277, 25, -275, 92, 217,
	100, 14, -181, 29, -180, -260, -260, 86, 307, -253,
	-292, -255, -254, 397, 399, 148, -279, -275, 92, 31,
	87, 86, -180, -296, -299, -301, -300, -302, -297, -298,
	330, 331, 173, 334, 336, 337, 338, 339, 340, 341,
	342, 343, 344, 347, 32, 255, 326, 327, 328, 329,
	348, 349, 350, 351, 352, 353, 354, 355, 313, 332,
	468, 314, 315, 316, 317, 318, 319, 321, 322, 323,
	324, 325, -366, -363, 85, 87, 86, -303, 85, -141,
	-133, 232, -363, 233, 233, 233, -76, 436, -327, -327,
	-327, 263, 19, -44, -41, -353, 18, -40, -41, 225,
	119, 120, 222, 85, -316, 85, -325, -366, -363, 85,
	133, 238, 132, -324, -321, -324, -325, -363, -207, -363,
	133, 133, -363, -363, -246, -275, -246, -246, 23, -246,
	23, -246, 23, 94, -275, -246, 23, -246, 23, -246,
	23, -246, 23, -246, 23, 31, 78, 79, 31, 81,
	82, 83, -207, -363, -207, -316, -250, -180, -363, 94,
	94, 94, -327, -327, 94, 92, 92, 92, -327, -327,
	94, 92, -282, -280, 92, 92, -369, 249, 293, 295,
	94, 94, 94, 94, 31, 92, -370, 31, 595, 594,
	596, 597, 598, 92, 94, 31, 94, 31, 94, -275,
	85, -180, -139, 283, 220, 222, 225, 76, 92, 297,
	301, 302, 148, 44, 86, 235, 232, -363, -266, 237,
	-266, -275, -281, -280, -273, 92, -141, -323, 14, 158,
	-285, -285, -264, -180, -323, -285, -264, -180, -264, -264,
	-264, -264, -285, -285, -285, -264, -280, -280, -180, -180,
	-180, -180, -180, -180, -180, -290, -265, -264, 570, 92,
	-258, 14, 76, -290, -290, -288, 310, 344, 564, 565,
	566, 86, 470, -173, -180, 570, 570, 570, 570, 570,
	570, -141, -141, -141, -141, 492, -197, 115, 140, 116,
	117, -155, -198, -203, -205, 99, 158, 142, 156, 157,
	-146, -147, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -291, -363, 92, 173, -151,
	-150, 98, -386, -151, -127, -129, -141, -141, -363, -275,
	-127, -127, -141, -123, 24, 38, -209, -210, 144, -207,
	-392, -392, 94, 98, -275, -275, -116, -115, 418, 419,
	420, 421, 423, 424, 425, 428, 429, 433, 434, 417,
	435, 422, 427, 430, 431, 432, 426, 329, -141, -141,
	-141, -141, -141, -141, -83, -141, 126, 127, 128, -141,
	-141, -200, -199, -362, -361, -360, -141, -141, -141, -141,
	-141, -141, -141, -141, -141, -141, -141, -141, -141, -141,
	-141, -141, -141, -141, -141, -141, -141, -141, -141, -392,
	-141, 94, -363, -144, -141, -141, -128, 24, 38, -127,
	-276, -281, -273, -127, -128, -128, -127, -127, 217, -238,
	-392, -199, 86, -379, 399, 400, 568, -283, 268, -282,
	25, -200, 92, 14, -244, 77, -275, -221, -221, 63,
	64, 59, -127, -132, -392, -35, 25, -240, -275, 62,
	92, -308, -250, 356, 357, -141, -141, 86, -220, 27,
	28, -180, -277, 164, -281, -180, -245, 268, -180, -158,
	-160, -161, -162, -183, -206, -391, -163, 488, 485, 14,
	-173, -174, -182, -280, -253, -255, 86, 398, 400, 401,
	76, 118, -141, -309, 172, -335, -334, -333, -316, -318,
	-319, -320, 87, -309, -312, 362, 361, -303, -303, -303,
	-303, -303, -308, -308, -308, -308, 85, 85, -303, -303,
	-303, -303, -310, 85, -310, -310, -311, 85, -311, -346,
	-141, -343, -342, -340, -341, 242, 101, 561, 517, 470,
	509, 551, 77, -338, -220, 94, -392, -139, -267, 237,
	-344, -341, -363, -363, -363, -267, -363, 92, -363, 92,
	-363, 92, -108, -58, -1, 607, 608, 609, 86, 19,
	-317, -316, -57, 293, -349, -350, 268, -345, -339, -325,
	133, -324, -325, -325, -363, 86, 29, 123, 123, 123,
	123, 470, 222, 32, -268, 508, 140, -316, -57, -291,
	235, -291, -291, 92, 92, -263, 603, -173, -135, 285,
	148, 274, 274, 232, 232, 287, -180, 298, 300, 299,
	297, 301, 302, 23, 23, 23, 286, 288, 290, 276,
	-180, -180, -266, 76, -175, -180, 26, -280, -180, -264,
	-264, -180, -264, -264, -180, -275, -119, 399, 86, 470,
	22, -120, 22, -391, 115, 116, 117, -198, -146, -147,
	-146, 138, 256, 86, -392, 25, 86, 77, -392, -392,
	-392, 86, 14, -127, -212, -210, 146, -141, -392, -392,
	-392, 86, 86, 14, -295, 25, -392, -392, -392, -392,
	-392, -211, -392, 14, 86, 86, -392, -392, 86, 86,
	-392, 86, 86, 86, -359, 86, 86, 86, 86, -392,
	-392, -392, -392, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, -392, -91, 493, -392, -392, -392, -392,
	86, -392, 86, -392, -127, -127, -391, 217, -392, -392,
	-392, -392, -392, -276, -392, -378, 567, 400, -187, -186,
	-184, 74, 236, 75, -391, -282, -392, -151, 89, -241,
	89, -240, -192, -275, 94, 98, -223, -157, -159, 14,
	-132, -205, 87, 86, -308, -227, -232, -261, -275, 92,
	173, -219, 217, -188, 15, -191, 32, 57, -11, -391,
	-391, 32, 86, -176, -178, -177, -179, 66, 70, 72,
	67, 68, 69, 73, -286, 25, -158, -9, -8, -391,
	-391, -391, -180, -173, -393, 14, 77, -393, 86, 217,
	-254, -256, 402, 399, 405, -363, 92, -107, 86, -333,
	-320, -224, -136, 40, -313, 363, -308, -308, -315, 92,
	-315, 94, 94, 87, -47, -42, -43, 33, 80, -340,
	-327, 92, 39, -327, -327, -275, 87, -220, -135, -180,
	140, 76, -344, -344, -344, -280, -2, 606, 612, 133,
	85, 366, 18, -240, 86, 87, -208, 294, 87, -109,
	-275, 87, 85, -325, -325, -275, -391, 232, 31, 31,
	508, -57, -208, -309, -363, 605, 604, 87, 234, 292,
	-140, 413, -137, 92, 88, -180, -180, -180, -180, -180,
	225, 222, -387, 303, -387, 277, 235, -173, -180, 86,
	-81, 251, 246, -285, -285, 33, -180, 399, 579, 577,
	-141, 138, 256, -155, -147, -129, 467, -293, 173, 330,
	255, 328, 324, 344, 335, 361, 326, 362, 323, 322,
	321, -293, -291, -141, -141, -216, 147, -141, 145, -141,
	-141, -141, -392, 173, 330, 14, -141, -141, -141, -360,
	-141, -141, -141, -358, -357, -151, -207, -392, -358, -141,
	-141, -357, -357, -361, -361, -361, -361, -361, -199, -199,
	-199, -199, -391, -275, -94, -93, -92, 544, 236, -91,
	-91, -91, 94, -363, -144, -94, 94, -363, -144, -392,
	-392, -128, -276, -184, -321, -321, -321, -246, 86, -257,
	22, 14, 57, 57, -157, -188, -158, -132, -275, -230,
	563, -235, 46, -233, -234, 47, -231, 48, 56, 164,
	-221, -141, -247, 76, -248, -252, -207, -202, -204, -203,
	-391, -239, -392, -275, -246, -248, -160, -161, -161, -160,
	-161, 66, 66, 66, 71, 66, 71, 66, -177, -280,
	-392, -392, -9, -9, -141, -283, 77, -158, -158, -182,
	-280, 164, 399, 403, 404, -333, -385, 115, 140, 31,
	76, 359, 101, -383, 172, 505, 556, 561, 517, 509,
	551, -384, 238, 132, 133, 250, 25, 41, 87, 86,
	87, 86, 87, 86, -269, -268, -43, -42, -327, -327,
	94, -363, 92, 92, 234, 26, -180, 76, 76, 76,
	-110, 610, 94, 85, -3, 80, -141, 85, 19, -316,
	-207, -351, -304, -352, -305, -306, -5, -6, -328, -113,
	57, 101, -61, 44, 233, 590, 591, 123, -391, 603,
	-343, -240, -347, -349, -180, -143, -391, -142, -144, -148,
	162, 163, -208, -180, -134, 283, 291, 85, -138, 89,
	-365, 77, 274, 359, 274, -388, 304, 92, -388, -180,
	-81, -47, -180, -264, -264, 33, -363, -392, -155, -147,
	-391, -392, -303, -303, -303, -311, -303, 318, -303, 318,
	-303, -392, -392, 86, -392, 22, -392, -118, 442, -141,
	86, 86, -392, 85, 85, -141, -392, -392, -392, -359,
	86, -392, 86, -392, 86, -294, 562, -392, -392, -392,
	-392, -392, -392, -392, -392, -392, -392, -90, -275, -201,
	268, -91, 526, 526, -392, -392, -392, -91, -213, 86,
	-213, -213, -392, -185, 22, -185, -185, -392, 89, -180,
	-188, -214, 16, -227, 51, 336, -237, -236, 55, 47,
	-234, 19, 49, 19, 30, -247, 86, 148, 86, -392,
	-392, 86, 57, 217, -392, -188, -171, -170, 76, 77,
	-172, 76, -170, 66, 66, -242, -392, -392, 86, -245,
	-158, -188, -188, 217, 115, -391, -145, -154, -143, 12,
	92, 92, -363, -382, 594, 595, 31, 94, -327, -327,
	133, 133, -180, 85, -308, 92, -308, 94, 94, 31,
	81, 82, 83, 31, 78, 79, -180, -180, -180, -180,
	-348, 85, 19, -141, 85, 148, 87, -240, -240, 270,
	158, -327, 588, 276, 276, -327, -327, -327, -112, -111,
	610, 87, -392, 86, -314, 470, 473, -141, -149, -149,
	-242, 87, -356, 470, -364, -275, -275, -275, -275, 94,
	96, -146, -308, -141, -141, -221, 92, -141, -141, 94,
	94, -392, -392, -358, -357, -141, -392, -168, -167, -169,
	571, 115, 31, -293, -392, -201, -216, 19, -97, -96,
	-95, 14, -97, -97, -392, -141, -392, -392, -391, 66,
	18, 16, -391, -391, -283, -214, -215, 17, 19, -228,
	53, -226, 52, -226, -236, 19, 19, 92, 19, 92,
	133, -252, -141, -204, 57, -11, -275, -202, -275, -216,
	-141, 85, -141, -151, -188, -188, -141, -194, 445, 104,
	106, 105, 446, 447, 448, 345, 346, 449, 450, 451,
	107, 108, 109, 110, 111, 112, 113, 452, 455, 453,
	456, 457, 458, 463, 464, 459, 460, 461, 462, 465,
	92, 92, 85, -141, 87, 87, -242, -347, -58, 87,
	-240, 94, 87, 271, -203, -391, 92, -327, -327, -327,
	94, 94, -282, -392, 86, -275, -384, -349, 474, 474,
	-392, 25, -355, -354, -276, 85, 77, -122, 158, 470,
	-392, -392, -392, -392, -392, 87, 87, -392, -392, 86,
	-392, -167, -169, -392, 76, -151, -216, -89, -88, -84,
	582, 608, -199, -94, 293, 295, -94, -94, -94, -94,
	-94, -243, -392, -275, 238, 19, 19, -243, -243, -187,
	-215, -104, -103, -102, 499, -141, -199, -229, 54, 76,
	118, 92, 92, 92, 12, -202, 217, -221, -240, -165,
	366, -216, -392, -240, 87, 25, 87, 612, 133, 87,
	-203, -121, -391, 267, -282, 92, 92, -111, -114, -11,
	86, 148, -240, -180, -392, 468, 73, 471, -141, -392,
	76, 480, 571, -89, -87, 142, -85, -141, 580, 559,
	-91, -91, -91, -91, -91, -91, 86, -392, -392, -392,
	-104, 86, -101, -100, -275, 76, 118, -248, -275, 87,
	-392, -391, -221, 87, -225, -11, 85, -3, 267, -304,
	-352, -305, -306, -5, -6, -328, -79, 470, -354, -332,
	-276, 92, 94, 87, 62, 469, 472, -359, -87, 537,
	511, 581, 537, 511, -275, 238, -102, 86, 25, -283,
	-166, -164, -275, 523, -375, -374, 466, -385, -381, 115,
	140, 101, -383, 561, 517, 124, 125, -79, -141, 85,
	-392, -80, 282, 567, -365, 62, -392, 138, -100, -391,
	-392, 86, 22, -296, -60, 534, -372, -373, 76, -376,
	372, 533, 554, 115, 92, 87, -240, 243, -356, 470,
	-87, -90, -164, 530, -309, -151, -373, 76, -372, 76,
	13, 12, -4, 611, 87, 284, 471, -392, -59, 26,
	-165, -371, 251, 246, 249, 32, -371, 94, -4, 472,
	534, 245, 31, 115, -151, -168, -167, -167,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 816,
	816, 816, 0, 816, 0, 0, 816, -2, -2, 816,
	1362, 0, 816, 0, 0, -2, 748, 750, 0, 752,
	-2, 0, 0, 761, 1868, 1868, 811, 0, 0, 0,
	0, 0, 816, 816, 816, 816, 1222, 48, 816, 0,
	83, 84, 767, 768, 769, 63, 0, 1866, 1, 3,
	69, 73, 0, 0, 0, 56, 1231, 0, 76, 0,
	0, 820, 0, 818, 0, 1345, 816, 816, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 562, 495, 541, 493, 527, -2, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 371, 371, 0, 0, -2, 481, 481, 481,
	0, 0, 0, 524, 1347, 433, 371, 371, 371, 0,
	371, 371, 371, 371, 0, 0, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 1248, 153, 1363, 1360, 1361, 38, 39,
	40, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 0, 1339, 0, 675, 917, 0, 737, 737,
	0, 737, 737, 737, 737, 0, 0, 0, 687, 0,
	0, 0, 0, 734, 0, 703, 704, 0, 734, 0,
	710, 740, 0, 715, 737, 737, 718, 1869, 0, 1869,
	1869, 1330, 0, 731, 729, 743, 744, 747, 751, 0,
	756, 759, 1356, 1357, 0, 774, 47, 1603, 766, 779,
	780, 0, 812, 813, 43, 1054, 0, 939, 944, 955,
	968, 969, 970, 971, 972, 974, 975, 0, 0, 0,
	0, 980, 981, 0, 0, 0, 0, 0, 1035, 0,
	0, 0, 0, 0, 1198, 0, 1161, 1161, 1071, 1161,
	1163, 1163, 0, 0, 0, 1865, 1643, 1651, 1652, 1674,
	1760, 1809, 1647, 1648, 1629, 1641, 1644, 1632, 1633, 1635,
	1637, 1642, 1649, 1655, 1634, 1654, 1653, 0, 1630, 1631,
	1636, 1646, 1650, 1638, 1639, 1640, 1645, 1656, 0, 0,
	0, 0, 0, 1207, 0, 0, 0, 0, 0, 0,
	273, 274, 1053, 1319, 1163, 1163, 1163, 1163, 1163, 1000,
	1001, 1002, 1003, 1004, 1023, 1024, 1030, 1031, -2, -2,
	219, 220, 221, 222, 223, 224, 225, 0, 215, 0,
	0, 278, 279, 275, 276, 277, 1037, 1038, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 259, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 270, 271, 272,
	1868, 0, 789, 0, 0, 0, 0, 0, 1231, 0,
	1223, 1222, 61, 0, 816, -2, 0, 0, 0, 0,
	45, 0, 50, 876, 75, 74, 1270, 0, 0, 0,
	57, 1232, 65, 67, 1233, 0, 821, 822, 0, 852,
	856, 0, 817, 0, 0, 1346, 1345, 1345, 100, 0,
	1805, 1323, -2, -2, 0, 0, 1358, 1359, 1332, -2,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, -2,
	0, 0, 165, 166, 0, 41, 398, 0, 161, 0,
	391, 337, 0, 1248, 0, 0, 0, 0, 0, 816,
	0, 1340, 142, 143, 150, 151, 152, 371, 371, 371,
	538, 0, 0, 153, 153, 502, 503, 504, 0, 0,
	-2, 396, 0, 482, 0, 0, 385, 385, 389, 387,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 623, 0, 372, 0, 536, 537, 434, 0, 0,
	0, 0, 0, 514, 515, 0, 0, 1348, 1349, 0,
	0, 0, 371, 371, 0, 0, 0, 0, 371, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 141, 1261,
	0, 0, 0, -2, 0, 667, 0, 0, 0, 1341,
	1341, 0, 674, 0, 676, 677, 0, 0, 678, 0,
	734, 734, 732, 733, 680, 681, 682, 683, 737, 0,
	0, 380, 381, 382, 734, 737, 0, 737, 737, 737,
	737, 734, 734, 734, 737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 740, 737, 0, 711, 0,
	712, 713, 716, 717, 719, 1870, 1871, 1379, 1869, 1869,
	723, 727, 1331, 749, 757, 760, 777, 775, 776, 778,
	770, 771, 772, 773, 0, 791, 792, 797, 0, 0,
	0, 0, 803, 804, 805, 0, 0, 808, 809, 810,
	0, 0, 0, 0, 0, 937, 0, 0, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 976, 977, 978, 979, 982,
	0, 0, 0, 987, 988, 0, 0, 0, 0, 0,
	826, 0, 1199, 0, 1069, 0, 1070, 1072, 1073, 0,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 836, 0, 0, 836, 836, 0, 0, 208,
	209, 210, 211, 212, 226, 227, 228, 229, 230, 280,
	1207, 0, 1053, 0, 0, 0, 44, 781, 782, 0,
	900, 1351, 0, 0, 832, 0, 55, 64, 66, 1231,
	59, 1231, 0, 838, 0, 0, -2, -2, 839, 845,
	846, 847, 848, 849, 52, 1867, 53, 0, 72, 0,
	46, 0, 0, 0, 0, 349, 1273, 0, 0, 1224,
	1225, 1228, 0, 853, 1685, 857, 0, 859, 860, 0,
	819, 0, 98, 0, 916, 0, 0, 0, 1805, 1329,
	0, 102, 103, 0, 0, 0, 355, 1334, 1335, 1336,
	-2, 378, 0, 355, 344, 288, 289, 290, 337, 292,
	337, 337, 337, 337, 349, 349, 349, 349, 320, 321,
	322, 323, 324, 0, 0, 307, 337, 337, 337, 337,
	327, 328, 329, 330, 331, 332, 333, 334, 293, 294,
	295, 296, 297, 298, 299, 300, 301, 339, 339, 339,
	341, 341, 0, 42, 0, 359, 0, 1228, 0, 0,
	1261, 1343, 1353, 0, 0, 0, 1343, 120, 0, 0,
	0, 539, 573, 496, 528, 540, 0, 499, 500, -2,
	0, 0, 481, 0, 483, 0, 379, 0, -2, 0,
	389, 0, 385, 389, 386, 389, 377, 390, 518, 519,
	520, 0, 522, 523, 603, 886, 0, 0, 0, 0,
	0, 609, 610, 611, 0, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 529, 530, 531, 532, 533,
	534, 535, 0, 0, 0, 483, 0, 525, 0, 435,
	436, 437, 0, 0, 440, 441, 442, 443, 0, 0,
	446, 447, 448, 903, 904, 449, 450, 475, 476, 477,
	451, 452, 453, 454, 455, 456, 457, 469, 470, 471,
	472, 473, 474, 458, 459, 460, 461, 462, 463, 466,
	0, 135, 1252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1341, 0, 0, 0,
	0, 835, 918, 1364, 1365, 738, 739, 0, 383, 384,
	737, 737, 684, 724, 0, 737, 688, 725, 689, 691,
	690, 692, 705, 706, 737, 695, 735, 736, 696, 697,
	698, 699, 700, 701, 702, 720, 707, 708, 709, 741,
	0, 745, 746, 721, 722, 0, 758, 762, 763, 764,
	765, 0, 0, 794, 94, 799, 800, 801, 802, 814,
	807, 1055, 934, 935, 936, 0, 938, 941, 0, 1039,
	1041, 943, 945, 1050, 1051, 1052, 0, 0, 0, 0,
	0, 949, 953, 956, 957, 958, 959, 960, 961, 962,
	963, 964, 965, 966, 967, 973, 1177, 1178, 1179, 990,
	281, 282, 0, 991, 0, 850, 0, 0, 0, 989,
	0, 0, 0, 0, 827, 828, 1205, 1202, 0, 0,
	1162, 1164, 0, 0, 0, 0, 0, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1180, 0,
	0, 0, 0, 0, 1198, 0, 992, 993, 994, 0,
	0, 0, 1352, 0, 130, 131, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 837,
	1208, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	1317, 0, 0, 784, 785, 787, 0, 920, 0, 901,
	0, 0, 790, 0, 831, 0, 834, 58, 60, 843,
	844, 0, 861, 840, 54, 49, 0, 0, 878, 1271,
	349, 1293, 0, 353, 354, 1234, 1235, 0, 1227, 1229,
	1230, 77, 858, 854, 0, 932, 0, 0, 915, 0,
	864, 866, 867, 868, 898, 0, 871, 0, 0, 0,
	0, 0, 96, 917, 1324, 101, 0, 0, 106, 107,
	1325, 1326, 1327, 1328, 0, 562, -2, 430, 167, 169,
	170, 171, 162, -2, 347, 345, 346, 291, 349, 349,
	314, 315, 316, 317, 318, 319, 0, 0, 308, 309,
	310, 311, 302, 0, 303, 304, 305, 0, 306, 397,
	0, 1236, 360, 361, 363, 371, 0, 366, 367, 0,
	371, 371, 0, 392, 393, 0, 1228, 1252, 0, 0,
	0, 1354, 1353, 1353, 1353, 0, 155, 156, 157, 158,
	159, 160, 598, 0, 0, 574, 596, 597, 153, 0,
	0, 163, 485, 484, 0, 630, 0, 395, 0, 0,
	389, 389, 374, 375, 521, 0, 0, 605, 606, 607,
	608, 0, 0, 0, 510, 424, 0, 483, 485, 355,
	0, 438, 439, 444, 445, 464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 554, 555,
	556, 487, 560, 557, 487, 561, 1249, 1250, 1251, 0,
	0, 668, 0, 0, 421, 92, 1342, 673, 734, 694,
	726, 734, 686, 693, 714, 754, 798, 0, 0, 0,
	0, 806, 0, 0, 942, 1040, 1042, 946, 0, 950,
	954, 0, 0, 0, 0, 0, 0, 0, 1036, 1060,
	1061, 0, 0, 1222, 0, 1203, 0, 0, 1068, 1165,
	1166, 0, 0, 0, 0, 0, 1079, 1080, 1081, 1082,
	1083, 0, 1085, 0, 0, 0, 1089, 1090, 0, 0,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 1103,
	1104, 1105, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 1118, 0, 1018, 0, 0, 0,
	0, 1018, 0, 1056, 0, 0, 836, 0, 1167, 1168,
	1169, 1170, 1171, 1208, 1318, 783, 786, 788, 874, 921,
	922, 0, 0, 0, 0, 902, 1350, 829, 830, 833,
	-2, 0, 0, 1210, 0, 0, 861, 932, 862, 0,
	841, 51, 877, 0, 1275, 1274, 1287, 1300, 350, 351,
	352, 1226, 0, 1231, 0, 1311, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 905, 0, 0,
	908, 0, 0, 0, 0, 899, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 90, 91, 0, 0, 0,
	104, 105, 0, 0, 111, 356, 357, 144, 153, 432,
	168, 405, 0, 0, 287, 348, 312, 313, 0, 335,
	0, 0, 0, 426, 116, 1240, 1239, 371, 371, 362,
	0, 365, 0, 0, 0, 1355, 338, 394, 0, 134,
	0, 0, 0, 0, 0, 140, 568, 0, 0, 575,
	0, 0, 0, 494, 0, 505, 506, 0, 602, -2,
	664, 359, 0, 373, 376, 887, 0, 0, 507, 0,
	425, 485, 512, 513, 526, 467, 468, 465, 0, 0,
	1262, 1263, 1268, 1266, 1267, 121, 546, 548, 547, 551,
	0, 0, 489, 0, 489, 544, 0, 421, 1236, 0,
	672, 422, 423, 737, 737, 793, 95, 0, 796, 0,
	0, 0, 0, 947, 951, 851, 0, 0, 337, 337,
	1185, 337, 341, 1188, 337, 1190, 337, 1193, 337, 1196,
	1197, 0, 0, 0, 0, 1200, 1067, 1206, 0, 0,
	0, 0, 1078, 0, 0, 0, 0, 0, 0, 132,
	133, 1134, 0, 0, 1136, 1138, 1139, 1095, 1135, 0,
	0, 1132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1012, 1017, 0, 1019, 1020, 0, 0, 1120,
	1121, 1122, 0, 0, 0, 0, 1130, 1130, 1130, 1057,
	1058, 0, 1209, 923, 928, 928, 928, 0, 0, 0,
	1337, 1338, 1211, 1212, 932, 1213, 863, 842, 879, 1293,
	0, 1286, 0, -2, 1295, 0, 0, 0, 1301, 855,
	78, 933, 81, 0, 1311, 1320, 0, 1302, 1313, 1315,
	0, 0, 0, 1307, 0, 932, 865, 894, 896, 0,
	891, 906, 907, 909, 0, 911, 0, 913, 914, 876,
	870, 872, 0, 0, 0, 98, 0, 932, 932, 97,
	0, 919, 108, 109, 110, 431, 172, 177, 0, 0,
	0, 182, 0, 184, 0, 0, 0, 189, 190, 371,
	371, 406, 0, 284, 286, 0, 0, 175, 349, 0,
	349, 0, 342, 0, 407, 427, 1237, 1238, 0, 0,
	364, 368, 369, 370, 0, 1344, 136, 0, 0, 0,
	571, 0, 599, 0, 0, 0, 0, 0, 0, 164,
	486, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	0, 371, 0, 0, 0, 371, 371, 371, 0, 656,
	358, 0, 0, 627, 624, 508, 0, 213, 214, 216,
	0, 0, 511, 876, 1253, 1254, 1255, 0, 1265, 1269,
	124, 0, 0, 0, 0, 558, 0, 488, 559, 669,
	670, 671, 93, 679, 685, 795, 815, 940, 948, 952,
	0, 984, 1183, 349, 1186, 1187, 1189, 1191, 1192, 1194,
	1195, 985, 986, 0, 1063, 0, 1065, 1231, 0, 1204,
	0, 0, 1077, 0, 0, 0, 1086, 1087, 1088, 0,
	0, 1094, 0, 1096, 0, 0, 0, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 0, 1012, 1222,
	0, 1119, 1021, 1022, 1027, 1027, 1027, 1126, 0, 0,
	0, 0, 1059, 0, 0, 0, 0, 900, -2, 62,
	1213, 1215, 0, 1280, 1278, 1278, 1288, 1289, 0, 0,
	1296, 0, 0, 0, 0, 82, 0, 0, 0, 1316,
	0, 0, 0, 0, 99, 1222, 888, 895, 0, 0,
	889, 0, 890, 910, 912, 869, -2, 873, 0, 932,
	932, 88, 89, 0, 178, 0, 180, 206, 207, 0,
	183, 185, 186, 187, 193, 194, 195, 188, 0, 0,
	283, 285, 0, 0, 325, 336, 326, 0, 0, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 876, 137, 138, 139,
	563, 0, 573, 0, 0, 0, 566, 0, 497, 0,
	0, 0, 371, 371, 371, 0, 0, 0, 0, 641,
	0, 0, 604, 0, 612, 0, 0, 0, 217, 218,
	0, 1264, 545, 0, 122, 123, 0, 0, 550, 490,
	491, 1172, 1184, 0, 0, 0, 1201, 0, 0, 0,
	0, 1084, 1092, 0, 1137, 0, 1099, 0, 0, 0,
	593, 594, 0, 1133, 1016, 1222, 1008, 0, 1018, 1028,
	1029, 0, 1018, 1018, 1018, 1131, 1018, 1018, 0, 929,
	0, 0, 0, 0, 920, 1215, 1220, 0, 0, 1283,
	0, 1276, 1279, 1277, 1290, 0, 0, 1297, 0, 1299,
	0, 1321, 1322, 1314, 0, 1306, 1309, 1305, 1308, 1231,
	892, 0, 897, 0, 1222, 87, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 192, 0, 0, 340, 343, 0, 0, 0, 564,
	0, 576, 567, 0, 654, 0, 658, 0, 0, 0,
	661, 662, 663, 640, 0, 644, 399, 628, 625, 626,
	509, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	1062, 1064, 1066, 1075, 1076, 1181, 1182, 1093, 1097, 0,
	1100, 0, 0, 1101, 0, 595, 1008, 1015, 1009, 0,
	995, 996, 1013, 0, 1025, 1026, 0, 0, 0, 0,
	0, 0, 925, 882, 883, 930, 931, 0, 0, 875,
	1220, 80, 1221, 1218, 0, 1216, 1214, 1272, 0, 1281,
	1282, 1291, 1292, 1298, 0, 1304, 0, 85, 0, 0,
	0, 1231, 179, 0, 198, 0, 572, 0, 575, 565,
	652, 653, 0, 665, 657, 659, 660, 642, -2, 1256,
	0, 0, 0, 552, 983, 0, 0, 0, 1134, 1102,
	0, 591, 592, 1014, 1010, 0, 1005, 0, 1558, 1811,
	1123, 1124, 1125, 1127, 1128, 1129, 0, 924, 926, 927,
	79, 0, 1217, 1033, 0, 1284, 1285, 1312, 1310, 893,
	900, 0, 86, 412, 405, 1256, 0, 0, 0, 645,
	646, 647, 648, 649, 650, 651, 542, 1258, 127, 128,
	478, 479, 480, 121, 1173, 0, 1176, 0, 0, 1006,
	1007, 997, 998, 999, 884, 885, 1219, 0, 0, 577,
	0, 579, 0, -2, 400, 413, 0, 173, 199, 200,
	0, 0, 203, 204, 205, 196, 197, 117, 0, 0,
	666, 0, 1259, 1260, 124, 1174, 1098, 0, 1034, 1012,
	578, 0, 0, 355, 0, 588, 401, 402, 0, 408,
	409, 410, 411, 201, 202, 600, 0, 0, 549, 0,
	1011, 0, 580, 581, 589, 0, 403, 0, 404, 0,
	0, 0, 569, 0, 600, 1257, 0, 1032, 0, 590,
	586, 414, 416, 417, 0, 0, 415, 601, 570, 1175,
	0, 418, 419, 420, 582, 583, 584, 585,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 167, 159, 3,
	85, 87, 164, 162, 86, 163, 217, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 613,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 169, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 170,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 160,
	161, 166, 168, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:567
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:572
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:577
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:613
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:619
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:623
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:632
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:642
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:648
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:654
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:658
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:667
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:673
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:677
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:683
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:720
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:750
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:757
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:798
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:836
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:842
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:874
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:886
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:890
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:896
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:902
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:906
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:910
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:914
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:919
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:924
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:928
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:934
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:938
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:944
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:948
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:953
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:957
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:963
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:969
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:979
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:983
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:989
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:993
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:997
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1003
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1007
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1011
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1015
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1021
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1025
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1031
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1037
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1044
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1053
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1057
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1064
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1068
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1073
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1077
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1083
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1088
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1093
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1099
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1104
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1110
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1115
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1119
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1125
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1129
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1141
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1148
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1155
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1160
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1165
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1170
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1177
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1184
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1195
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1206
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1212
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1216
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1220
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1224
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1228
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1238
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1242
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1248
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1252
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1258
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1262
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1268
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1272
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1278
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1282
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1288
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1298
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1303
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1308
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1312
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1317
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1321
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1325
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1336
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1345
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1354
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1367
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1371
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1377
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1383
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1388
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1398
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1403
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1408
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1417
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1426
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1431
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1437
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1443
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1447
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1453
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1457
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1461
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1467
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1471
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1476
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1491
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1497
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1502
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1507
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1521
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1528
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1532
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1536
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1540
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1544
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1555
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1562
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1566
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1572
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1584
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1588
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1592
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1596
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1601
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1605
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1609
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1798
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1802
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1806
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1812
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1816
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1820
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1826
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1830
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1837
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1841
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1845
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1849
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1866
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2071
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2080
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2085
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2089
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2101
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2107
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2115
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2119
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2123
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2128
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2132
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2137
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2149
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2172
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2179
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2184
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2188
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2194
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2198
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2204
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2208
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2213
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2217
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2221
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2225
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2229
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2233
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2239
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2249
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2253
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2257
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2261
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2265
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.str = yyDollar[2].str
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2284
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2288
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2304
		{
			yyVAL.str = "key"
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			yyVAL.str = yyDollar[1].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2323
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2327
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2333
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2337
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2343
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2347
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2353
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2357
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2363
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2367
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2373
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2379
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2383
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2387
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2391
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2395
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2404
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2410
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2416
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2422
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2426
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2430
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2435
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2439
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2445
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2451
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2457
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2461
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2465
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2469
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2473
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2492
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2496
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2501
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2505
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2510
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2514
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2520
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2528
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2534
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2544
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2548
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2552
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2556
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2560
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2564
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2568
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2572
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2576
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2580
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2584
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2588
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2592
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2604
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2608
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2612
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2616
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2620
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2624
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2628
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2632
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2636
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2640
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2644
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2648
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2652
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2656
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2660
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2664
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2677
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2704
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2709
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2715
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2724
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2728
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2733
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2737
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2742
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2746
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2750
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2755
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2759
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2763
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2767
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2771
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 497:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2775
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2781
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2785
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2789
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2795
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2799
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2803
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2807
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2811
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2815
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2819
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2823
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2827
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2831
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2835
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2839
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2843
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2847
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2851
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2855
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2859
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2863
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2867
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2871
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2875
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2879
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2883
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2887
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2891
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2895
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2901
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2905
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2911
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2915
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2919
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2923
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2927
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2931
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2935
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2939
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2943
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2949
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2956
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2963
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2970
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2976
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2986
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2993
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3000
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3012
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3022
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3026
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3030
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3043
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3053
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3057
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3068
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3082
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3089
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3096
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3102
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3119
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3126
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3137
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3146
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3154
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3163
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3170
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3182
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3191
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3206
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3211
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3215
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3220
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3224
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3230
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3236
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3242
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3246
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3252
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3256
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3262
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3268
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3274
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3280
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3294
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3298
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3304
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3310
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3316
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3320
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3324
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3330
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3334
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3339
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3343
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3348
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3352
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3358
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3362
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3366
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3370
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3374
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3378
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3382
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3386
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3390
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3394
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3398
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3402
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3406
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3410
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3414
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3418
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3422
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3426
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3430
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3434
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3438
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3442
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3447
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3451
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3455
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3462
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3472
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3477
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3481
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3486
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3491
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3496
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3501
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3506
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3512
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3518
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3523
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3529
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3535
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3545
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3550
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3554
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3559
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3564
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3569
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3574
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3580
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3586
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3593
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3600
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3607
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3615
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3619
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3625
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3631
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3637
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3643
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3649
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3655
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3661
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3667
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = ""
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3677
		{
			yyVAL.str = ""
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3683
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3689
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3693
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3699
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3712
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3716
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3722
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3726
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3731
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3745
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3749
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3753
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3757
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3829
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3833
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3837
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3841
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3845
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3857
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3861
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3865
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3869
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3873
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3877
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3881
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3885
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3889
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3893
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3897
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3946
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.str = "extended "
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3956
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3960
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3966
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3970
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3976
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3980
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3994
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3998
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4008
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4014
		{
			yyVAL.empty = struct{}{}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			yyVAL.empty = struct{}{}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.empty = struct{}{}
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4028
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4032
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4038
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4042
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4046
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4062
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4077
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4079
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4082
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4084
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4100
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4104
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4108
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4112
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4116
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4120
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.str = yyDollar[1].str
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4130
		{
			yyVAL.str = yyDollar[1].str
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			yyVAL.str = yyDollar[1].str
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4157
		{
			yyVAL.str = ""
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4161
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4181
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4185
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4191
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4197
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4201
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4207
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4213
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4217
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4221
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4225
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4243
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4247
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4251
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4255
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4259
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4263
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4269
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4273
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4279
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4283
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4287
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4311
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4328
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4332
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4336
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = ""
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4345
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4350
		{
			setAllowComments(yylex, true)
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4354
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4360
		{
			yyVAL.strs = nil
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4364
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4370
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4374
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4378
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = ""
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4391
		{
			yyVAL.str = SQLCacheStr
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4396
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4400
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4404
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4410
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4414
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4426
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4431
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4435
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4441
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4445
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4450
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4454
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4459
		{
			yyVAL.strs = nil
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4467
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4471
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4475
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.str = SQLCacheStr
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4489
		{
			yyVAL.str = DistinctStr
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4493
		{
			yyVAL.str = DistinctStr
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.str = StraightJoinHint
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4511
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4515
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4521
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4525
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4529
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4533
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4538
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4546
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4558
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4562
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4568
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4574
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4588
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4592
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4596
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4600
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4606
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4610
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4616
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4620
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4629
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4635
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4639
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4645
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4649
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4655
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4659
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4663
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4667
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4673
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4677
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4690
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4694
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4698
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4702
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4708
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4710
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4714
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4720
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4722
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4725
		{
			yyVAL.empty = struct{}{}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.empty = struct{}{}
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4730
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4738
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4745
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4751
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4755
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4759
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4765
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4771
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4775
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4779
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4783
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4789
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4793
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4803
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4813
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4817
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4823
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4832
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4838
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4842
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4848
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4852
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4856
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4860
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4865
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4869
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4873
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4877
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4887
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4894
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4898
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4902
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4906
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4910
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4914
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4918
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4924
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4928
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4932
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4936
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4942
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4946
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4950
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4958
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4962
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4970
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4974
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4978
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4988
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4992
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4996
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5004
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5008
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5012
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5020
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5024
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5028
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5032
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5036
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5144
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5148
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5152
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5158
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5162
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:5168
		{
			yyLOCAL = CurrentRowType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:5172
		{
			yyLOCAL = UnboundedPrecedingType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FramePointType
//line sql.y:5176
		{
			yyLOCAL = UnboundedFollowingType
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5182
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5186
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5190
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5194
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5198
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5204
		{
			yyLOCAL = &FramePoint{Type: yyDollar[1].framePointTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5208
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5212
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5221
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5227
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5231
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion(), IsBetween: true}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5240
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5246
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent.String(), PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5251
		{
			yyLOCAL = &WindowSpecification{PartitionClause: yyDollar[1].exprsUnion(), OrderClause: yyDollar[2].orderByUnion(), FrameClause: yyDollar[3].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5257
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5261
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5266
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5273
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5279
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5283
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5289
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5293
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5299
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5303
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5308
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5315
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5321
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5325
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5331
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5337
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5341
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5347
		{
			yyVAL.str = ""
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5351
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5357
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5361
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5368
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5372
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5376
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5380
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5386
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5390
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5394
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5398
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5402
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5406
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5410
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5416
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5420
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5424
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5431
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5437
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5441
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5459
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5463
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5497
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5501
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5505
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5524
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5530
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5534
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5543
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5555
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5579
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5583
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5587
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5591
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5595
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5599
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5603
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5607
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5611
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5615
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5619
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5623
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5627
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5631
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5635
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5639
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5643
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5647
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5651
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5655
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5659
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5663
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5667
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5671
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5675
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5679
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5683
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5687
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5691
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5695
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5699
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5703
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5707
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5711
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5715
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5719
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5723
		{
			val := convertStringToInt(yyDollar[3].str)
			yyLOCAL = &NtileExpr{IntValue: &val, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5729
		{
			yyLOCAL = &NtileExpr{VarValue: yyDollar[3].colIdent, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5733
		{
			yyLOCAL = &NtileExpr{IsNull: true, OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5737
		{
			val := convertStringToInt(yyDollar[5].str)
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), IntValue: &val, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5743
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), VarValue: yyDollar[5].colIdent, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5747
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), IsNull: true, FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5751
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5755
		{
			val := convertStringToInt(yyDollar[5].str)
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), IntValue: &val, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5761
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), VarValue: yyDollar[5].colIdent, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5765
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), IsNull: true, Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5783
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5788
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5792
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5798
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5802
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5808
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5812
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5818
		{
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5820
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5824
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5828
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5832
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5836
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5840
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5844
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5848
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5852
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5856
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5860
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5866
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5870
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5874
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5878
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5882
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5886
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5890
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5894
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5898
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5953
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5957
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5961
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5965
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5969
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5975
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5979
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5983
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5989
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5993
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5997
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6003
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6007
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6011
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6015
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6019
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6025
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6029
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6033
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6037
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6041
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6045
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6049
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6053
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6057
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6061
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6071
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6076
		{
			yyVAL.str = string("")
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6080
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6086
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6090
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6096
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6111
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6115
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6119
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6148
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6163
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6169
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6173
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6178
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6182
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6191
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6197
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6203
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6207
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6213
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6218
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6222
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6226
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6231
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6235
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6241
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6245
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6249
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6254
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6258
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6262
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6266
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6270
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6277
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6281
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6285
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6289
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6295
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6299
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6303
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6308
		{
			yyVAL.str = ""
		}
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6312
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6316
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6320
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6325
		{
			yyVAL.str = ""
		}
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6329
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6335
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6339
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6344
		{
			yyVAL.str = ""
		}
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6348
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6353
		{
			yyVAL.str = "cascaded"
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6357
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6361
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6370
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6376
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6382
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6388
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6397
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6401
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6406
		{
			yyVAL.str = ""
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6410
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6416
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6420
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6426
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6430
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6434
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6439
		{
			yyVAL.str = ""
		}
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6443
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6447
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6452
		{
			yyVAL.str = ""
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6456
		{
			yyVAL.str = " header"
		}
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6461
		{
			yyVAL.str = ""
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6465
		{
			yyVAL.str = " manifest on"
		}
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6469
		{
			yyVAL.str = " manifest off"
		}
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6474
		{
			yyVAL.str = ""
		}
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6478
		{
			yyVAL.str = " overwrite on"
		}
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6482
		{
			yyVAL.str = " overwrite off"
		}
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6488
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6493
		{
			yyVAL.str = ""
		}
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6497
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6503
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6507
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6513
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6517
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6522
		{
			yyVAL.str = ""
		}
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6526
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6532
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6536
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6542
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6546
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6550
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6555
		{
			yyVAL.str = ""
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6559
		{
			yyVAL.str = " optionally"
		}
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6572
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6576
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6580
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6584
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6588
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6594
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6598
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6602
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6606
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6615
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6621
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6625
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6631
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6635
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6641
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6645
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6660
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6664
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6670
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6676
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6680
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6686
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6690
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6694
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6698
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6702
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6710
		{
			yyVAL.str = "charset"
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6737
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6739
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6742
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6744
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6747
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6749
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6754
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6757
		{
			yyVAL.empty = struct{}{}
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6759
		{
			yyVAL.empty = struct{}{}
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6761
		{
			yyVAL.empty = struct{}{}
		}
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6765
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6770
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6774
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6781
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6785
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6791
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6795
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6802
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6808
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6812
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6818
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6822
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6829
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7354
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7363
		{
			decNesting(yylex)
		}
	case 1868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7368
		{
			skipToEnd(yylex)
		}
	case 1869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7373
		{
			skipToEnd(yylex)
		}
	case 1870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7377
		{
			skipToEnd(yylex)
		}
	case 1871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7381
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
