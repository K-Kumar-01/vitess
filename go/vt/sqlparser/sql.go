// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const RLIKE = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const ID = 57429
const AT_ID = 57430
const AT_AT_ID = 57431
const HEX = 57432
const STRING = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const VALUE_ARG = 57439
const LIST_ARG = 57440
const COMMENT = 57441
const COMMENT_KEYWORD = 57442
const BIT_LITERAL = 57443
const COMPRESSION = 57444
const JSON_PRETTY = 57445
const JSON_STORAGE_SIZE = 57446
const JSON_STORAGE_FREE = 57447
const JSON_CONTAINS = 57448
const JSON_CONTAINS_PATH = 57449
const JSON_EXTRACT = 57450
const JSON_KEYS = 57451
const JSON_OVERLAPS = 57452
const JSON_SEARCH = 57453
const JSON_VALUE = 57454
const EXTRACT = 57455
const NULL = 57456
const TRUE = 57457
const FALSE = 57458
const OFF = 57459
const DISCARD = 57460
const IMPORT = 57461
const ENABLE = 57462
const DISABLE = 57463
const TABLESPACE = 57464
const VIRTUAL = 57465
const STORED = 57466
const BOTH = 57467
const LEADING = 57468
const TRAILING = 57469
const EMPTY_FROM_CLAUSE = 57470
const LOWER_THAN_CHARSET = 57471
const CHARSET = 57472
const UNIQUE = 57473
const KEY = 57474
const EXPRESSION_PREC_SETTER = 57475
const OR = 57476
const XOR = 57477
const AND = 57478
const NOT = 57479
const BETWEEN = 57480
const CASE = 57481
const WHEN = 57482
const THEN = 57483
const ELSE = 57484
const END = 57485
const LE = 57486
const GE = 57487
const NE = 57488
const NULL_SAFE_EQUAL = 57489
const IS = 57490
const LIKE = 57491
const REGEXP = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const JSON_EXTRACT_OP = 57544
const JSON_UNQUOTE_EXTRACT_OP = 57545
const CREATE = 57546
const ALTER = 57547
const DROP = 57548
const RENAME = 57549
const ANALYZE = 57550
const ADD = 57551
const FLUSH = 57552
const CHANGE = 57553
const MODIFY = 57554
const DEALLOCATE = 57555
const REVERT = 57556
const SCHEMA = 57557
const TABLE = 57558
const INDEX = 57559
const VIEW = 57560
const TO = 57561
const IGNORE = 57562
const IF = 57563
const PRIMARY = 57564
const COLUMN = 57565
const SPATIAL = 57566
const FULLTEXT = 57567
const KEY_BLOCK_SIZE = 57568
const CHECK = 57569
const INDEXES = 57570
const ACTION = 57571
const CASCADE = 57572
const CONSTRAINT = 57573
const FOREIGN = 57574
const NO = 57575
const REFERENCES = 57576
const RESTRICT = 57577
const SHOW = 57578
const DESCRIBE = 57579
const EXPLAIN = 57580
const DATE = 57581
const ESCAPE = 57582
const REPAIR = 57583
const OPTIMIZE = 57584
const TRUNCATE = 57585
const COALESCE = 57586
const EXCHANGE = 57587
const REBUILD = 57588
const PARTITIONING = 57589
const REMOVE = 57590
const PREPARE = 57591
const EXECUTE = 57592
const MAXVALUE = 57593
const PARTITION = 57594
const REORGANIZE = 57595
const LESS = 57596
const THAN = 57597
const PROCEDURE = 57598
const TRIGGER = 57599
const VINDEX = 57600
const VINDEXES = 57601
const DIRECTORY = 57602
const NAME = 57603
const UPGRADE = 57604
const STATUS = 57605
const VARIABLES = 57606
const WARNINGS = 57607
const CASCADED = 57608
const DEFINER = 57609
const OPTION = 57610
const SQL = 57611
const UNDEFINED = 57612
const SEQUENCE = 57613
const MERGE = 57614
const TEMPORARY = 57615
const TEMPTABLE = 57616
const INVOKER = 57617
const SECURITY = 57618
const FIRST = 57619
const AFTER = 57620
const LAST = 57621
const VITESS_MIGRATION = 57622
const CANCEL = 57623
const RETRY = 57624
const COMPLETE = 57625
const CLEANUP = 57626
const THROTTLE = 57627
const UNTHROTTLE = 57628
const EXPIRE = 57629
const RATIO = 57630
const BEGIN = 57631
const START = 57632
const TRANSACTION = 57633
const COMMIT = 57634
const ROLLBACK = 57635
const SAVEPOINT = 57636
const RELEASE = 57637
const WORK = 57638
const BIT = 57639
const TINYINT = 57640
const SMALLINT = 57641
const MEDIUMINT = 57642
const INT = 57643
const INTEGER = 57644
const BIGINT = 57645
const INTNUM = 57646
const REAL = 57647
const DOUBLE = 57648
const FLOAT_TYPE = 57649
const DECIMAL_TYPE = 57650
const NUMERIC = 57651
const TIME = 57652
const TIMESTAMP = 57653
const DATETIME = 57654
const YEAR = 57655
const CHAR = 57656
const VARCHAR = 57657
const BOOL = 57658
const CHARACTER = 57659
const VARBINARY = 57660
const NCHAR = 57661
const TEXT = 57662
const TINYTEXT = 57663
const MEDIUMTEXT = 57664
const LONGTEXT = 57665
const BLOB = 57666
const TINYBLOB = 57667
const MEDIUMBLOB = 57668
const LONGBLOB = 57669
const JSON = 57670
const JSON_SCHEMA_VALID = 57671
const JSON_SCHEMA_VALIDATION_REPORT = 57672
const ENUM = 57673
const GEOMETRY = 57674
const POINT = 57675
const LINESTRING = 57676
const POLYGON = 57677
const GEOMETRYCOLLECTION = 57678
const MULTIPOINT = 57679
const MULTILINESTRING = 57680
const MULTIPOLYGON = 57681
const ASCII = 57682
const UNICODE = 57683
const NULLX = 57684
const AUTO_INCREMENT = 57685
const APPROXNUM = 57686
const SIGNED = 57687
const UNSIGNED = 57688
const ZEROFILL = 57689
const CODE = 57690
const COLLATION = 57691
const COLUMNS = 57692
const DATABASES = 57693
const ENGINES = 57694
const EVENT = 57695
const EXTENDED = 57696
const FIELDS = 57697
const FULL = 57698
const FUNCTION = 57699
const GTID_EXECUTED = 57700
const KEYSPACES = 57701
const OPEN = 57702
const PLUGINS = 57703
const PRIVILEGES = 57704
const PROCESSLIST = 57705
const SCHEMAS = 57706
const TABLES = 57707
const TRIGGERS = 57708
const USER = 57709
const VGTID_EXECUTED = 57710
const VITESS_KEYSPACES = 57711
const VITESS_METADATA = 57712
const VITESS_MIGRATIONS = 57713
const VITESS_REPLICATION_STATUS = 57714
const VITESS_SHARDS = 57715
const VITESS_TABLETS = 57716
const VITESS_TARGET = 57717
const VSCHEMA = 57718
const VITESS_THROTTLED_APPS = 57719
const NAMES = 57720
const GLOBAL = 57721
const SESSION = 57722
const ISOLATION = 57723
const LEVEL = 57724
const READ = 57725
const WRITE = 57726
const ONLY = 57727
const REPEATABLE = 57728
const COMMITTED = 57729
const UNCOMMITTED = 57730
const SERIALIZABLE = 57731
const CURRENT_TIMESTAMP = 57732
const DATABASE = 57733
const CURRENT_DATE = 57734
const NOW = 57735
const CURRENT_TIME = 57736
const LOCALTIME = 57737
const LOCALTIMESTAMP = 57738
const CURRENT_USER = 57739
const UTC_DATE = 57740
const UTC_TIME = 57741
const UTC_TIMESTAMP = 57742
const DAY = 57743
const DAY_HOUR = 57744
const DAY_MICROSECOND = 57745
const DAY_MINUTE = 57746
const DAY_SECOND = 57747
const HOUR = 57748
const HOUR_MICROSECOND = 57749
const HOUR_MINUTE = 57750
const HOUR_SECOND = 57751
const MICROSECOND = 57752
const MINUTE = 57753
const MINUTE_MICROSECOND = 57754
const MINUTE_SECOND = 57755
const MONTH = 57756
const QUARTER = 57757
const SECOND = 57758
const SECOND_MICROSECOND = 57759
const YEAR_MONTH = 57760
const WEEK = 57761
const REPLACE = 57762
const CONVERT = 57763
const CAST = 57764
const SUBSTR = 57765
const SUBSTRING = 57766
const GROUP_CONCAT = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const REGEXP_INSTR = 57792
const REGEXP_LIKE = 57793
const REGEXP_REPLACE = 57794
const REGEXP_SUBSTR = 57795
const MATCH = 57796
const AGAINST = 57797
const BOOLEAN = 57798
const LANGUAGE = 57799
const WITH = 57800
const QUERY = 57801
const EXPANSION = 57802
const WITHOUT = 57803
const VALIDATION = 57804
const UNUSED = 57805
const ARRAY = 57806
const CUME_DIST = 57807
const DESCRIPTION = 57808
const DENSE_RANK = 57809
const EMPTY = 57810
const EXCEPT = 57811
const FIRST_VALUE = 57812
const GROUPING = 57813
const GROUPS = 57814
const JSON_TABLE = 57815
const LAG = 57816
const LAST_VALUE = 57817
const LATERAL = 57818
const LEAD = 57819
const NTH_VALUE = 57820
const NTILE = 57821
const OF = 57822
const OVER = 57823
const PERCENT_RANK = 57824
const RANK = 57825
const RECURSIVE = 57826
const ROW_NUMBER = 57827
const SYSTEM = 57828
const WINDOW = 57829
const ACTIVE = 57830
const ADMIN = 57831
const AUTOEXTEND_SIZE = 57832
const BUCKETS = 57833
const CLONE = 57834
const COLUMN_FORMAT = 57835
const COMPONENT = 57836
const DEFINITION = 57837
const ENFORCED = 57838
const ENGINE_ATTRIBUTE = 57839
const EXCLUDE = 57840
const FOLLOWING = 57841
const GEOMCOLLECTION = 57842
const GET_MASTER_PUBLIC_KEY = 57843
const HISTOGRAM = 57844
const HISTORY = 57845
const INACTIVE = 57846
const INVISIBLE = 57847
const LOCKED = 57848
const MASTER_COMPRESSION_ALGORITHMS = 57849
const MASTER_PUBLIC_KEY_PATH = 57850
const MASTER_TLS_CIPHERSUITES = 57851
const MASTER_ZSTD_COMPRESSION_LEVEL = 57852
const NESTED = 57853
const NETWORK_NAMESPACE = 57854
const NOWAIT = 57855
const NULLS = 57856
const OJ = 57857
const OLD = 57858
const OPTIONAL = 57859
const ORDINALITY = 57860
const ORGANIZATION = 57861
const OTHERS = 57862
const PARTIAL = 57863
const PATH = 57864
const PERSIST = 57865
const PERSIST_ONLY = 57866
const PRECEDING = 57867
const PRIVILEGE_CHECKS_USER = 57868
const PROCESS = 57869
const RANDOM = 57870
const REFERENCE = 57871
const REQUIRE_ROW_FORMAT = 57872
const RESOURCE = 57873
const RESPECT = 57874
const RESTART = 57875
const RETAIN = 57876
const REUSE = 57877
const ROLE = 57878
const SECONDARY = 57879
const SECONDARY_ENGINE = 57880
const SECONDARY_ENGINE_ATTRIBUTE = 57881
const SECONDARY_LOAD = 57882
const SECONDARY_UNLOAD = 57883
const SIMPLE = 57884
const SKIP = 57885
const SRID = 57886
const THREAD_PRIORITY = 57887
const TIES = 57888
const UNBOUNDED = 57889
const VCPU = 57890
const VISIBLE = 57891
const RETURNING = 57892
const FORMAT = 57893
const TREE = 57894
const VITESS = 57895
const TRADITIONAL = 57896
const LOCAL = 57897
const LOW_PRIORITY = 57898
const NO_WRITE_TO_BINLOG = 57899
const LOGS = 57900
const ERROR = 57901
const GENERAL = 57902
const HOSTS = 57903
const OPTIMIZER_COSTS = 57904
const USER_RESOURCES = 57905
const SLOW = 57906
const CHANNEL = 57907
const RELAY = 57908
const EXPORT = 57909
const AVG_ROW_LENGTH = 57910
const CONNECTION = 57911
const CHECKSUM = 57912
const DELAY_KEY_WRITE = 57913
const ENCRYPTION = 57914
const ENGINE = 57915
const INSERT_METHOD = 57916
const MAX_ROWS = 57917
const MIN_ROWS = 57918
const PACK_KEYS = 57919
const PASSWORD = 57920
const FIXED = 57921
const DYNAMIC = 57922
const COMPRESSED = 57923
const REDUNDANT = 57924
const COMPACT = 57925
const ROW_FORMAT = 57926
const STATS_AUTO_RECALC = 57927
const STATS_PERSISTENT = 57928
const STATS_SAMPLE_PAGES = 57929
const STORAGE = 57930
const MEMORY = 57931
const DISK = 57932
const PARTITIONS = 57933
const LINEAR = 57934
const RANGE = 57935
const LIST = 57936
const SUBPARTITION = 57937
const SUBPARTITIONS = 57938
const HASH = 57939

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"RLIKE",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	13, 47,
	14, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	615, 145,
	-2, 153,
	-1, 48,
	133, 153,
	173, 153,
	334, 153,
	-2, 492,
	-1, 55,
	36, 733,
	234, 733,
	245, 733,
	280, 747,
	281, 747,
	-2, 735,
	-1, 60,
	236, 760,
	-2, 758,
	-1, 114,
	233, 1302,
	-2, 119,
	-1, 116,
	1, 146,
	615, 146,
	-2, 153,
	-1, 127,
	134, 378,
	239, 378,
	-2, 481,
	-1, 146,
	133, 153,
	173, 153,
	334, 153,
	-2, 501,
	-1, 703,
	218, 1323,
	-2, 1319,
	-1, 704,
	218, 1324,
	-2, 1320,
	-1, 779,
	60, 828,
	-2, 843,
	-1, 816,
	149, 1735,
	-2, 112,
	-1, 817,
	149, 1572,
	-2, 113,
	-1, 823,
	149, 1656,
	-2, 1296,
	-1, 972,
	149, 1500,
	-2, 1293,
	-1, 1013,
	244, 41,
	249, 41,
	-2, 389,
	-1, 1097,
	1, 548,
	615, 548,
	-2, 153,
	-1, 1339,
	60, 829,
	-2, 848,
	-1, 1340,
	60, 830,
	-2, 849,
	-1, 1393,
	133, 153,
	173, 153,
	334, 153,
	-2, 428,
	-1, 1472,
	134, 378,
	239, 378,
	-2, 481,
	-1, 1481,
	244, 42,
	249, 42,
	-2, 390,
	-1, 1661,
	4, 0,
	5, 0,
	-2, 946,
	-1, 1791,
	218, 1328,
	-2, 1322,
	-1, 1878,
	133, 153,
	173, 153,
	334, 153,
	-2, 429,
	-1, 1885,
	26, 174,
	-2, 176,
	-1, 2138,
	88, 39,
	-2, 885,
	-1, 2190,
	78, 94,
	88, 94,
	-2, 905,
	-1, 2257,
	590, 660,
	-2, 634,
	-1, 2400,
	50, 1264,
	-2, 1258,
	-1, 2627,
	88, 39,
	-2, 886,
	-1, 2665,
	8, 53,
	19, 53,
	21, 53,
	89, 53,
	-2, 877,
	-1, 2960,
	590, 660,
	-2, 648,
	-1, 3027,
	23, 1658,
	33, 1658,
	174, 1658,
	256, 1658,
	314, 1658,
	315, 1658,
	316, 1658,
	317, 1658,
	318, 1658,
	319, 1658,
	320, 1658,
	322, 1658,
	323, 1658,
	324, 1658,
	325, 1658,
	326, 1658,
	327, 1658,
	328, 1658,
	329, 1658,
	330, 1658,
	331, 1658,
	332, 1658,
	333, 1658,
	335, 1658,
	337, 1658,
	338, 1658,
	339, 1658,
	340, 1658,
	341, 1658,
	342, 1658,
	343, 1658,
	344, 1658,
	345, 1658,
	348, 1658,
	349, 1658,
	350, 1658,
	351, 1658,
	352, 1658,
	353, 1658,
	354, 1658,
	355, 1658,
	356, 1658,
	473, 1658,
	-2, 592,
}

const yyPrivate = 57344

const yyLast = 44419

var yyAct = [...]int{
	703, 2768, 2769, 712, 2767, 3089, 3061, 3099, 2941, 2355,
	3060, 1875, 2742, 1396, 3025, 2547, 3003, 705, 2453, 2460,
	1829, 1160, 2088, 2887, 2501, 1809, 692, 37, 2729, 2510,
	2515, 2512, 3, 2511, 2509, 2514, 2513, 2414, 693, 794,
	2411, 2786, 2917, 1811, 2126, 2468, 96, 2530, 772, 1945,
	616, 186, 2529, 1354, 186, 2636, 581, 186, 1318, 2415,
	2412, 2791, 596, 2161, 186, 2630, 2317, 2353, 613, 1848,
	706, 690, 186, 2656, 2401, 691, 2409, 642, 1908, 2153,
	2532, 2622, 614, 2354, 1109, 2222, 2552, 186, 2254, 1913,
	2223, 1933, 2300, 2224, 612, 975, 1450, 821, 1976, 155,
	2184, 1833, 620, 36, 776, 1864, 780, 795, 2173, 596,
	38, 1853, 596, 186, 596, 2145, 2128, 1785, 1760, 1341,
	1761, 2292, 1701, 774, 797, 1691, 608, 1852, 141, 1954,
	818, 1479, 1932, 1840, 1992, 1915, 2216, 1003, 1008, 1385,
	2192, 1648, 1497, 1363, 625, 95, 91, 1597, 1855, 1321,
	1246, 1713, 1181, 1788, 1668, 1593, 1486, 982, 979, 1011,
	1577, 1930, 1014, 1904, 1009, 1010, 983, 1382, 1834, 1384,
	1158, 1368, 786, 1602, 119, 1152, 1445, 117, 118, 1757,
	159, 1471, 124, 781, 98, 1138, 125, 808, 1093, 1802,
	782, 1021, 784, 76, 102, 85, 603, 1253, 97, 2950,
	1045, 2247, 1249, 89, 3090, 1947, 1948, 1949, 188, 189,
	190, 2730, 2498, 1947, 2276, 2275, 1990, 2245, 783, 77,
	8, 585, 2722, 2685, 552, 802, 90, 807, 120, 1562,
	126, 7, 2520, 6, 2308, 104, 105, 788, 108, 2309,
	2772, 114, 2973, 2974, 183, 2517, 1050, 547, 1655, 1654,
	976, 585, 188, 189, 190, 1653, 1652, 2772, 1806, 1807,
	1651, 1001, 604, 1650, 1633, 3046, 2124, 768, 769, 770,
	771, 775, 2397, 779, 87, 773, 815, 822, 606, 2267,
	607, 789, 2603, 2155, 3064, 1980, 3110, 3059, 1024, 1000,
	2518, 999, 582, 796, 998, 997, 3080, 120, 1978, 992,
	1642, 810, 811, 987, 2270, 1660, 2883, 1051, 1054, 1055,
	2882, 1049, 2524, 2735, 1348, 1048, 2736, 78, 3107, 3013,
	1025, 3093, 2969, 1182, 3073, 2771, 2743, 2520, 1066, 1979,
	3004, 1973, 2968, 2974, 3012, 2316, 3030, 2585, 1460, 568,
	2125, 1182, 2771, 2449, 1047, 78, 1060, 2034, 80, 2284,
	1386, 566, 1387, 2283, 2450, 2451, 2307, 1063, 1064, 1065,
	182, 1068, 1069, 1070, 1071, 120, 2804, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 121, 2518, 143, 3035, 78, 1096,
	2201, 563, 1924, 2200, 2031, 87, 2202, 164, 1870, 1871,
	577, 3033, 78, 1869, 1128, 766, 765, 2524, 1116, 2248,
	3039, 3040, 2032, 1117, 1215, 573, 2942, 1918, 2470, 2471,
	2213, 2521, 586, 87, 182, 3034, 2164, 1155, 153, 1192,
	2343, 1808, 1129, 1122, 142, 2892, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1224, 1223, 1225, 1226, 1192, 121, 3065,
	585, 2165, 586, 1133, 1134, 161, 2576, 162, 1888, 1887,
	2574, 164, 592, 594, 991, 2549, 87, 993, 585, 996,
	3066, 1102, 1103, 130, 131, 152, 151, 181, 2633, 1641,
	87, 598, 2553, 1092, 553, 2293, 555, 569, 1583, 588,
	585, 587, 559, 1325, 557, 561, 570, 562, 1552, 556,
	2255, 567, 2279, 1105, 558, 571, 572, 575, 578, 579,
	580, 576, 574, 1955, 565, 589, 2521, 1130, 1123, 161,
	1145, 162, 1147, 2469, 1643, 1644, 1645, 994, 1188, 2542,
	1067, 1180, 1993, 1154, 3092, 2472, 1578, 2543, 1116, 996,
	1091, 181, 1553, 1117, 1554, 2456, 1188, 186, 1135, 186,
	2550, 1115, 186, 1114, 3047, 1131, 1132, 1917, 1136, 1149,
	1144, 1146, 996, 1137, 988, 2004, 2001, 2003, 2002, 2005,
	2006, 990, 989, 1998, 147, 128, 154, 135, 127, 1098,
	148, 149, 596, 1162, 596, 596, 165, 2344, 2295, 2010,
	2457, 2011, 2724, 2012, 1997, 171, 136, 2723, 2013, 596,
	596, 2867, 1073, 1072, 1095, 2720, 2551, 1995, 1958, 1034,
	139, 137, 132, 133, 134, 138, 2459, 1032, 1849, 1004,
	994, 87, 129, 1005, 1005, 1043, 1464, 37, 1999, 1042,
	2454, 140, 1041, 1174, 1040, 1039, 1996, 1038, 1112, 1037,
	1118, 1119, 1120, 1121, 1036, 995, 1031, 2470, 2471, 1328,
	165, 586, 1044, 2472, 2455, 980, 1227, 1142, 980, 171,
	1017, 1143, 978, 1156, 1157, 3111, 3071, 2032, 980, 586,
	1977, 1148, 1227, 2281, 1835, 1836, 1485, 1002, 2949, 1016,
	2246, 2299, 1594, 1931, 809, 2296, 2461, 1984, 1053, 2249,
	590, 586, 1584, 1126, 1016, 1141, 1585, 1586, 1052, 3103,
	1094, 2129, 2131, 1590, 1230, 1231, 1232, 1233, 583, 1168,
	1056, 2491, 156, 2278, 1238, 995, 1241, 2719, 1023, 1458,
	1457, 1456, 2265, 584, 1187, 1184, 1185, 1186, 1191, 1193,
	1190, 2967, 1189, 1591, 1454, 551, 546, 1163, 995, 1183,
	2312, 1316, 1187, 1184, 1185, 1186, 1191, 1193, 1190, 2938,
	1189, 2893, 2469, 1035, 1164, 1165, 2046, 1183, 1150, 2291,
	1062, 1033, 2290, 2634, 2472, 2672, 186, 1228, 1229, 2269,
	596, 596, 1234, 81, 1975, 1582, 156, 2652, 2197, 2522,
	2523, 1484, 2160, 86, 2770, 2112, 186, 2683, 2684, 1921,
	150, 1801, 2526, 1564, 1563, 1565, 1566, 1567, 1023, 2033,
	1331, 2770, 2955, 1372, 1335, 596, 3038, 1293, 1107, 186,
	776, 86, 1329, 2268, 596, 1311, 1876, 1022, 1317, 77,
	596, 1177, 774, 1334, 1332, 1227, 2302, 144, 1922, 1226,
	145, 2301, 1175, 2448, 1176, 818, 1920, 1139, 1113, 116,
	2302, 1603, 1673, 1255, 1251, 2301, 1252, 1104, 791, 1153,
	3037, 1101, 111, 1023, 86, 2963, 1674, 1675, 1672, 157,
	1046, 2715, 2646, 2130, 1994, 1587, 169, 2336, 86, 1023,
	1923, 1388, 1111, 2458, 2522, 2523, 1178, 1714, 1714, 2060,
	1919, 1317, 1197, 1195, 1333, 1196, 1197, 2526, 95, 2238,
	2800, 1125, 1299, 1300, 1301, 1302, 1303, 1022, 1196, 1197,
	3067, 2690, 1127, 1016, 1019, 1020, 2689, 980, 177, 1962,
	1494, 1013, 1017, 3101, 1322, 1493, 3102, 1483, 3100, 1579,
	1972, 1580, 112, 157, 1581, 1970, 1967, 98, 1967, 1034,
	169, 1032, 1012, 2673, 2318, 1373, 3112, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 2038, 2039,
	2040, 1572, 1022, 176, 178, 179, 180, 1026, 1016, 1023,
	3105, 1319, 1028, 1971, 1974, 1969, 1029, 1027, 1022, 1330,
	1061, 1350, 177, 1336, 773, 186, 3068, 775, 1353, 1446,
	2875, 1140, 822, 2874, 1383, 1604, 87, 1030, 2865, 1455,
	1219, 1220, 1221, 1222, 1224, 1223, 1225, 1226, 1378, 1379,
	1671, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 596, 1110, 1481, 1571, 2320, 176, 178, 179,
	180, 3113, 1490, 2462, 1097, 2760, 1492, 2466, 2982, 1495,
	1496, 596, 596, 2931, 596, 2465, 596, 596, 2759, 596,
	596, 596, 596, 596, 596, 1221, 1222, 1224, 1223, 1225,
	1226, 2697, 2958, 1527, 1528, 2696, 596, 1023, 1022, 2686,
	186, 1533, 1198, 1199, 1016, 1019, 1020, 2499, 980, 2467,
	2487, 2983, 1013, 1017, 2463, 2220, 2932, 186, 2749, 2464,
	2750, 2219, 2330, 2329, 2328, 2322, 1570, 2326, 1559, 2321,
	596, 2319, 186, 813, 1198, 1199, 2324, 1663, 1665, 1666,
	1927, 1198, 1199, 1592, 1573, 2323, 596, 1477, 186, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1224, 1223, 1225, 1226,
	1547, 1664, 2325, 2327, 186, 1841, 1842, 1491, 1198, 1199,
	1557, 186, 717, 718, 719, 1556, 1470, 1555, 1545, 2077,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 596,
	1569, 1530, 1558, 1489, 1526, 1539, 1022, 1529, 1348, 1536,
	1535, 1026, 1016, 596, 596, 1718, 1028, 1534, 1506, 1719,
	1029, 1027, 2957, 2935, 1499, 1453, 1500, 1488, 1502, 1504,
	2934, 186, 1508, 1510, 1512, 1514, 1516, 1459, 1467, 1468,
	1480, 2546, 2933, 1466, 1357, 1195, 2870, 1196, 1197, 2855,
	2854, 1461, 1462, 1463, 2338, 1599, 2799, 1607, 2797, 2756,
	2694, 1487, 1487, 1348, 1611, 2679, 1613, 1614, 1615, 1616,
	188, 189, 190, 1620, 2680, 1531, 2554, 1195, 596, 1196,
	1197, 2490, 1698, 1698, 1195, 1632, 1196, 1197, 1695, 1699,
	2489, 1704, 596, 2229, 1358, 2217, 1696, 1696, 1313, 1669,
	1988, 1987, 1198, 1199, 188, 189, 190, 596, 596, 1832,
	1595, 1195, 1814, 1196, 1197, 1198, 1199, 1537, 1538, 1634,
	1600, 1568, 999, 1543, 1544, 998, 997, 1560, 120, 1550,
	1215, 1676, 2311, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1677, 1667, 1609, 1546,
	1605, 1606, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224,
	1223, 1225, 1226, 1542, 1610, 1789, 1215, 1541, 2045, 1630,
	1540, 1617, 1618, 1619, 186, 1631, 1359, 1758, 1151, 596,
	1167, 2151, 3091, 1638, 1639, 1348, 3077, 1348, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1224, 1223, 1225, 1226, 3075,
	1348, 1715, 2900, 186, 2899, 1670, 596, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1201, 101, 186, 188, 189, 190,
	596, 2204, 1819, 2859, 1820, 186, 100, 186, 99, 186,
	186, 596, 2858, 1758, 596, 1195, 2741, 1196, 1197, 1700,
	2256, 1791, 3055, 1348, 1789, 596, 1706, 1707, 1195, 101,
	1196, 1197, 818, 2151, 3010, 818, 1215, 2410, 1885, 1211,
	100, 1212, 99, 1793, 1794, 188, 189, 190, 2645, 1943,
	2234, 94, 1198, 1199, 95, 1213, 1214, 1210, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1224, 1223, 1225, 1226, 2151,
	2990, 1790, 92, 95, 1198, 1199, 1348, 1968, 1792, 94,
	596, 1795, 1796, 93, 2151, 2986, 94, 1934, 1935, 1936,
	1884, 1825, 1938, 1940, 1942, 92, 1198, 1199, 2978, 1348,
	1791, 188, 189, 190, 2645, 1941, 93, 596, 100, 1851,
	1348, 2151, 2951, 596, 1490, 2733, 2948, 1490, 2069, 1490,
	1880, 2647, 1824, 1879, 1194, 1966, 2962, 788, 1889, 704,
	1890, 1891, 1892, 1893, 1813, 1967, 3020, 1348, 1348, 1894,
	1895, 1896, 1897, 2599, 1348, 1348, 1900, 1901, 1902, 1903,
	1846, 1862, 2193, 1910, 2151, 1827, 1956, 2170, 3018, 1348,
	596, 1348, 596, 1883, 2878, 1348, 2151, 2866, 596, 596,
	1916, 1844, 188, 189, 190, 2162, 1939, 2047, 1866, 822,
	187, 1867, 822, 187, 2169, 1195, 187, 1196, 1197, 1882,
	1881, 597, 2599, 187, 2733, 1348, 2151, 2731, 1967, 1348,
	2478, 187, 1953, 2385, 1198, 1199, 186, 1195, 1868, 1196,
	1197, 2650, 1348, 186, 1926, 2194, 187, 1194, 1348, 2047,
	186, 186, 2082, 1348, 186, 2196, 186, 2480, 2479, 1195,
	2082, 1196, 1197, 186, 1911, 1906, 1907, 2066, 597, 2170,
	186, 597, 187, 597, 1929, 1961, 1925, 2170, 1964, 2147,
	1965, 1937, 1215, 2476, 2477, 1981, 2476, 2475, 1198, 1199,
	1743, 2162, 1198, 1199, 94, 1024, 186, 2170, 1348, 1911,
	1960, 596, 1963, 1959, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1224, 1223, 1225, 1226, 2047, 1348, 1983, 3016, 1348,
	1982, 1198, 1199, 1985, 1986, 1198, 1199, 1025, 2032, 2277,
	2065, 1198, 1199, 1449, 2259, 1198, 1199, 1487, 1217, 1218,
	1219, 1220, 1221, 1222, 1224, 1223, 1225, 1226, 2252, 2253,
	2023, 2024, 2047, 1198, 1199, 2026, 2151, 2150, 2443, 2193,
	1967, 1198, 1199, 2645, 2027, 1950, 2051, 1195, 2032, 1196,
	1197, 1669, 2916, 1348, 1449, 1448, 2050, 1991, 1735, 1724,
	1725, 1726, 1727, 1737, 1728, 1729, 1730, 1742, 1738, 1731,
	1732, 1739, 1740, 1741, 1733, 1734, 1736, 1198, 1199, 1394,
	1393, 1839, 2042, 1352, 2044, 2914, 1348, 2016, 1804, 2911,
	1348, 182, 1198, 1199, 1646, 2903, 1348, 2043, 1589, 2621,
	1348, 1195, 2194, 1196, 1197, 1195, 1380, 1196, 1197, 778,
	1198, 1199, 2032, 1007, 2049, 121, 1006, 2618, 1348, 3043,
	2993, 1198, 1199, 87, 2502, 2616, 1348, 2889, 164, 2582,
	2698, 1198, 1199, 1355, 1195, 2856, 1196, 1197, 1195, 2030,
	1196, 1197, 2811, 2714, 1195, 186, 1196, 1197, 1195, 2711,
	1196, 1197, 2692, 186, 2591, 1198, 1199, 1670, 596, 1698,
	2226, 2580, 1348, 2122, 596, 2135, 1195, 2041, 1196, 1197,
	1347, 2206, 2590, 1696, 1195, 596, 1196, 1197, 2139, 1451,
	1909, 2699, 2700, 2701, 2544, 2702, 161, 87, 162, 2504,
	2500, 2260, 1905, 1096, 1899, 1348, 2133, 1898, 186, 1575,
	1522, 1482, 186, 2057, 2059, 2097, 1348, 1478, 181, 1447,
	1195, 113, 1196, 1197, 2225, 37, 1348, 2203, 1198, 1199,
	2548, 2166, 2657, 2658, 2186, 1195, 2890, 1196, 1197, 2056,
	1198, 1199, 2703, 2704, 2705, 1198, 1199, 1924, 1817, 1791,
	3069, 2075, 3086, 1195, 1636, 1196, 1197, 3084, 1361, 1198,
	1199, 1523, 1524, 1525, 1195, 3062, 1196, 1197, 2972, 2908,
	1198, 1199, 2226, 2660, 1195, 596, 1196, 1197, 2496, 2495,
	2494, 186, 2410, 1518, 2152, 2239, 2017, 2663, 186, 2432,
	2109, 2110, 1198, 1199, 2433, 2148, 2662, 2429, 1195, 1790,
	1196, 1197, 596, 1322, 2123, 2430, 3049, 2428, 3011, 596,
	2431, 2185, 2055, 1490, 1490, 1831, 1637, 2434, 596, 2179,
	2180, 2144, 2251, 2149, 1360, 1356, 2651, 165, 2207, 2089,
	1519, 1520, 1521, 2159, 1823, 2274, 171, 2781, 2390, 2780,
	2389, 2930, 2214, 2215, 2946, 2273, 186, 186, 186, 186,
	186, 2402, 2404, 2191, 2195, 2863, 1916, 2792, 2198, 2790,
	2405, 1195, 2638, 1196, 1197, 2205, 792, 186, 186, 2208,
	2637, 2641, 2399, 1195, 793, 1196, 1197, 2716, 1195, 1588,
	1196, 1197, 764, 186, 2474, 2211, 2218, 2779, 2230, 1058,
	1710, 1057, 1195, 2562, 1196, 1197, 187, 92, 187, 1166,
	2227, 187, 596, 1195, 1711, 1196, 1197, 2225, 93, 92,
	2305, 2266, 2235, 101, 2236, 121, 94, 2240, 2241, 2242,
	93, 2272, 2643, 94, 100, 1195, 99, 1196, 1197, 1470,
	3097, 597, 2947, 597, 597, 94, 1841, 1842, 2492, 2020,
	2885, 1698, 2473, 1698, 2261, 2262, 1698, 2183, 597, 597,
	1828, 1698, 2009, 156, 774, 1696, 2335, 1696, 800, 801,
	1696, 2271, 2388, 596, 2008, 1696, 2007, 2331, 2228, 2623,
	2387, 2036, 99, 2231, 2232, 101, 2922, 2921, 2798, 2314,
	2294, 2796, 2795, 596, 2375, 2788, 100, 100, 99, 2712,
	2313, 1198, 1199, 2175, 2178, 2179, 2180, 2176, 186, 2177,
	2181, 2642, 596, 2657, 2658, 2640, 2505, 2358, 2297, 1951,
	1465, 596, 2368, 2369, 2370, 2371, 799, 101, 596, 596,
	2315, 186, 186, 186, 186, 186, 2361, 2332, 100, 2787,
	2631, 2362, 2375, 186, 2162, 3088, 3087, 3087, 186, 2147,
	2356, 186, 2356, 186, 780, 2356, 186, 186, 186, 2345,
	2356, 2407, 2067, 2349, 2416, 1815, 1374, 1365, 2303, 2392,
	2422, 2304, 106, 107, 1335, 2186, 2442, 2363, 2364, 2365,
	2366, 2367, 3088, 2936, 2678, 2667, 790, 103, 88, 2374,
	1, 2488, 1198, 1199, 2682, 3032, 564, 1805, 1320, 3063,
	186, 3028, 1198, 1199, 2380, 3029, 1561, 1551, 2393, 2744,
	157, 1759, 2886, 596, 2508, 1957, 2710, 169, 1198, 1199,
	2391, 596, 1914, 1015, 146, 187, 186, 2413, 2394, 597,
	597, 781, 2413, 1877, 1195, 2384, 1196, 1197, 782, 186,
	1878, 2528, 3006, 2424, 2425, 187, 2427, 110, 973, 109,
	2435, 2439, 2440, 2444, 95, 1599, 2445, 186, 2423, 177,
	186, 2426, 2446, 1018, 597, 1124, 2452, 1952, 187, 2734,
	2563, 2421, 2212, 597, 1886, 2484, 2619, 2483, 1400, 597,
	2482, 2381, 2382, 2383, 1198, 1199, 2601, 1398, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 2536,
	1399, 1397, 2597, 2535, 176, 178, 179, 180, 2506, 2527,
	1402, 1916, 1401, 2068, 2602, 1640, 593, 2182, 2507, 184,
	2539, 1389, 1366, 1059, 554, 1195, 2481, 1196, 1197, 1989,
	1346, 1342, 560, 1239, 2596, 1195, 1635, 1196, 1197, 2386,
	2199, 2555, 1198, 1199, 2558, 1343, 596, 186, 2560, 2561,
	2557, 1195, 819, 1196, 1197, 2566, 2175, 2178, 2179, 2180,
	2176, 2572, 2177, 2181, 812, 1816, 2565, 2137, 2588, 2418,
	1821, 1822, 1345, 2635, 1344, 2569, 2570, 2398, 2571, 2400,
	2154, 2573, 2403, 2575, 2396, 2577, 2485, 2486, 1198, 1199,
	2929, 2789, 1198, 1199, 2991, 2209, 1198, 1199, 1346, 1342,
	1362, 2058, 1712, 1856, 186, 1198, 1199, 1662, 618, 617,
	615, 2140, 2163, 1343, 1202, 2629, 707, 1195, 2127, 1196,
	1197, 1375, 2681, 2174, 2624, 2625, 2587, 2172, 2171, 2018,
	1863, 2659, 2655, 186, 187, 2639, 2632, 3024, 1339, 1340,
	1345, 1858, 1344, 1854, 2146, 682, 2654, 626, 2644, 619,
	2664, 611, 186, 2675, 2534, 186, 186, 186, 2280, 2545,
	2661, 2282, 1198, 1199, 2210, 596, 596, 2541, 2670, 2671,
	1179, 597, 2668, 2221, 1338, 1195, 2121, 1196, 1197, 605,
	2120, 986, 1198, 1199, 1709, 2717, 2718, 2891, 2536, 2119,
	597, 597, 2535, 597, 2676, 597, 597, 2677, 597, 597,
	597, 597, 597, 597, 2669, 2953, 2035, 2584, 1337, 596,
	596, 596, 596, 1722, 1723, 597, 2960, 2516, 2728, 187,
	2497, 1195, 2257, 1196, 1197, 1195, 804, 1196, 1197, 1195,
	1944, 1196, 1197, 63, 41, 1750, 187, 2693, 1195, 2695,
	1196, 1197, 600, 3045, 1170, 806, 2118, 32, 31, 597,
	30, 187, 29, 28, 2740, 23, 22, 21, 20, 19,
	25, 1698, 18, 1698, 17, 597, 2106, 187, 2738, 2739,
	1198, 1199, 1349, 1351, 16, 1696, 2519, 1696, 3058, 3096,
	115, 50, 47, 187, 2755, 45, 123, 186, 122, 48,
	187, 44, 1099, 42, 609, 1195, 2751, 1196, 1197, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 597, 27,
	26, 596, 2784, 596, 15, 1195, 14, 1196, 1197, 13,
	12, 11, 597, 597, 10, 2763, 798, 2687, 2688, 9,
	2773, 1698, 2752, 5, 1198, 1199, 37, 2813, 4, 35,
	187, 34, 2805, 2764, 33, 1696, 2416, 1173, 24, 2807,
	2416, 2794, 2, 2244, 2105, 2785, 2793, 1946, 0, 0,
	2356, 774, 2356, 2809, 1198, 1199, 2801, 2803, 0, 0,
	0, 0, 0, 0, 0, 596, 0, 0, 0, 2721,
	0, 0, 0, 2725, 2726, 2727, 0, 597, 186, 2817,
	0, 596, 2814, 2815, 0, 2864, 0, 0, 0, 0,
	0, 597, 0, 1195, 596, 1196, 1197, 0, 2413, 1198,
	1199, 0, 0, 0, 0, 0, 597, 597, 2104, 2868,
	2860, 0, 2862, 0, 2861, 2888, 0, 0, 0, 2905,
	2906, 2876, 0, 0, 0, 0, 1698, 2880, 0, 596,
	0, 2881, 2909, 596, 596, 0, 1198, 1199, 2103, 0,
	1696, 0, 0, 0, 0, 0, 0, 1198, 1199, 0,
	0, 0, 1198, 1199, 0, 0, 0, 1195, 0, 1196,
	1197, 0, 596, 0, 0, 1198, 1199, 0, 0, 1198,
	1199, 0, 0, 187, 0, 2923, 2924, 2926, 597, 2925,
	0, 0, 2940, 2102, 0, 0, 0, 1195, 0, 1196,
	1197, 0, 2937, 2416, 0, 0, 0, 2928, 0, 2939,
	0, 0, 187, 0, 0, 597, 0, 596, 0, 0,
	0, 774, 0, 2943, 0, 187, 0, 0, 0, 597,
	2101, 0, 186, 0, 187, 0, 187, 2945, 187, 187,
	597, 2100, 1195, 597, 1196, 1197, 2099, 1198, 1199, 0,
	596, 186, 3056, 0, 597, 0, 0, 1198, 1199, 2098,
	0, 0, 1417, 2092, 0, 0, 2952, 2959, 0, 0,
	2964, 0, 37, 0, 0, 2956, 0, 0, 2961, 1195,
	0, 1196, 1197, 2871, 2872, 2873, 0, 0, 0, 0,
	1195, 0, 1196, 1197, 0, 1195, 0, 1196, 1197, 596,
	0, 0, 0, 0, 1198, 1199, 0, 0, 1195, 597,
	1196, 1197, 1195, 0, 1196, 1197, 0, 0, 0, 0,
	0, 0, 0, 596, 596, 0, 0, 0, 0, 0,
	0, 2091, 0, 0, 37, 2994, 597, 2984, 0, 596,
	2992, 2090, 597, 2989, 2888, 3007, 3005, 0, 186, 596,
	2997, 3002, 2999, 3014, 2998, 2996, 3001, 3000, 0, 0,
	0, 0, 0, 1198, 1199, 0, 0, 0, 0, 3041,
	3031, 3036, 0, 3023, 0, 0, 0, 1198, 1199, 0,
	1195, 0, 1196, 1197, 1198, 1199, 3048, 0, 2087, 597,
	1195, 597, 1196, 1197, 0, 0, 0, 597, 597, 2413,
	3057, 0, 0, 1405, 596, 2819, 2821, 2820, 2830, 2831,
	2832, 2833, 2834, 2835, 2836, 648, 596, 0, 0, 0,
	0, 3072, 1698, 0, 3070, 0, 0, 3083, 3082, 3081,
	3079, 0, 3085, 0, 0, 187, 1696, 1195, 0, 1196,
	1197, 1716, 187, 0, 0, 1717, 0, 2086, 0, 187,
	187, 3098, 0, 187, 0, 187, 3104, 3106, 1198, 1199,
	0, 2085, 187, 0, 0, 0, 1198, 1199, 2083, 187,
	0, 0, 0, 0, 1698, 0, 3116, 3117, 2906, 3115,
	3114, 0, 0, 0, 0, 1418, 0, 0, 1696, 0,
	0, 0, 0, 0, 0, 187, 1195, 0, 1196, 1197,
	597, 0, 0, 0, 0, 0, 0, 0, 1349, 1803,
	1195, 0, 1196, 1197, 0, 0, 0, 1195, 0, 1196,
	1197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1200, 0, 0,
	0, 1826, 2079, 1431, 1434, 1435, 1436, 1437, 1438, 1439,
	2078, 1440, 1441, 1442, 1443, 1444, 1419, 1420, 1421, 1422,
	1403, 1404, 1432, 0, 1406, 1247, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 0, 0, 1416, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 0, 78, 39, 40,
	80, 1195, 0, 1196, 1197, 0, 0, 0, 0, 1195,
	0, 1196, 1197, 0, 0, 0, 0, 84, 0, 0,
	0, 43, 69, 70, 0, 67, 71, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 609, 0, 1928, 0, 2825, 2826, 0, 0, 0,
	0, 0, 0, 56, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 87, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 597, 0, 0,
	0, 0, 0, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 0, 0, 0, 0, 0,
	0, 0, 1433, 0, 0, 0, 694, 0, 643, 698,
	645, 695, 696, 0, 641, 644, 697, 187, 0, 0,
	0, 187, 0, 0, 0, 0, 1364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 646, 647, 2818, 2822, 2823, 2824, 2827,
	2828, 2829, 2837, 2839, 671, 2838, 2840, 2841, 2842, 2845,
	2846, 2847, 2848, 2843, 2844, 2849, 2850, 2851, 2852, 2853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 1417, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 187, 0, 46,
	49, 52, 51, 54, 0, 66, 0, 0, 75, 72,
	0, 597, 0, 0, 0, 0, 0, 0, 597, 0,
	0, 0, 0, 0, 0, 0, 0, 597, 0, 0,
	0, 55, 83, 82, 0, 0, 64, 65, 53, 0,
	0, 0, 0, 0, 73, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 187, 187, 187, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 187, 0, 0,
	0, 0, 0, 0, 57, 58, 0, 59, 60, 61,
	62, 2048, 187, 0, 0, 2052, 0, 2053, 2054, 0,
	0, 0, 0, 0, 0, 0, 2062, 0, 0, 2063,
	2064, 597, 1452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2070, 2071, 2072, 2073,
	2074, 0, 2076, 0, 0, 0, 0, 0, 2080, 0,
	2081, 0, 0, 0, 2084, 0, 0, 0, 0, 0,
	0, 0, 2093, 2094, 2095, 2096, 0, 0, 0, 0,
	0, 0, 597, 0, 0, 2107, 2108, 0, 0, 0,
	0, 0, 0, 2113, 2114, 2115, 2116, 2117, 0, 0,
	0, 0, 597, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2134, 0, 0, 187, 1418, 0,
	0, 597, 0, 0, 0, 81, 0, 0, 0, 0,
	597, 0, 0, 0, 0, 0, 0, 597, 597, 0,
	187, 187, 187, 187, 187, 0, 0, 0, 1601, 0,
	0, 0, 187, 0, 0, 0, 0, 187, 0, 0,
	187, 0, 187, 86, 0, 187, 187, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 1431, 1434, 1435, 1436,
	1437, 1438, 1439, 0, 1440, 1441, 1442, 1443, 1444, 1419,
	1420, 1421, 1422, 1403, 1404, 1432, 0, 1406, 0, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 0, 187,
	1416, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 0,
	0, 0, 597, 0, 0, 0, 0, 0, 0, 0,
	597, 1656, 1657, 1658, 1659, 187, 1661, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 187,
	0, 0, 0, 1702, 1703, 0, 0, 0, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1744, 1745, 1746, 1747,
	1748, 1749, 1751, 1755, 1756, 609, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 0,
	0, 0, 0, 0, 0, 1433, 0, 0, 0, 0,
	0, 1797, 1798, 1799, 1800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 597, 187, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 0, 0, 0, 2342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2357,
	0, 0, 0, 683, 0, 0, 0, 1837, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2372, 2373, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 0, 0, 0, 0,
	0, 187, 0, 0, 187, 187, 187, 2136, 2419, 0,
	715, 716, 0, 0, 597, 597, 1697, 0, 0, 0,
	0, 0, 0, 0, 1912, 2437, 2438, 0, 185, 0,
	0, 550, 0, 0, 591, 0, 0, 0, 0, 0,
	0, 550, 820, 0, 0, 977, 0, 984, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 597,
	597, 597, 0, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	805, 0, 805, 0, 0, 0, 0, 0, 0, 0,
	550, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2564, 0, 0, 0, 0, 0, 0, 2568, 0,
	597, 0, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2578, 2579, 2581, 2583, 0, 0, 0, 0,
	0, 0, 2589, 0, 0, 0, 0, 2593, 2594, 2595,
	0, 0, 0, 0, 2598, 0, 0, 0, 0, 0,
	2600, 0, 0, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 0, 0, 2614, 0, 2615, 2617, 0,
	2620, 0, 0, 0, 597, 2626, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 597, 0, 0, 0, 0, 2648, 2649,
	0, 0, 2653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2665, 2666, 0, 0, 0, 0, 0, 0, 597, 0,
	0, 2061, 597, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 597, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 0, 0, 0,
	2732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 597,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2761, 0, 0, 0, 2762, 0, 0,
	0, 0, 0, 2766, 0, 0, 0, 0, 597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 820, 0, 820, 820, 0,
	0, 0, 0, 0, 550, 0, 550, 0, 0, 550,
	0, 0, 1169, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 597, 0, 0, 0, 2877,
	0, 0, 0, 0, 0, 0, 0, 0, 2884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2894, 2895, 2896, 0, 2897, 2898,
	0, 0, 0, 0, 2901, 0, 2902, 0, 2904, 2907,
	0, 0, 0, 0, 2310, 2910, 2912, 2913, 2915, 2918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2333, 2334, 0, 0, 0, 2337, 0, 0,
	0, 0, 2339, 2340, 2341, 0, 1314, 0, 0, 0,
	0, 0, 0, 0, 2346, 2347, 2348, 2944, 0, 1762,
	2350, 0, 2351, 2352, 0, 0, 0, 2359, 2360, 0,
	0, 0, 0, 0, 0, 1762, 1762, 1762, 1762, 1762,
	609, 609, 609, 609, 0, 0, 0, 0, 0, 0,
	1315, 0, 0, 0, 0, 2376, 2377, 2378, 2379, 0,
	0, 0, 0, 1326, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2966, 0, 0, 0, 0, 0, 1370, 2408,
	0, 0, 0, 550, 0, 0, 2971, 820, 0, 0,
	0, 0, 0, 1390, 0, 0, 0, 0, 2979, 0,
	0, 0, 0, 787, 2980, 2981, 2441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2987, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3015, 3017, 3019, 0,
	0, 0, 0, 0, 0, 2503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3050, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3074, 3076, 3078, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2586, 0, 0, 0, 0,
	0, 0, 2592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3108, 3109, 0, 0, 0,
	0, 0, 0, 0, 0, 977, 0, 0, 0, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 1314, 0,
	0, 0, 0, 0, 1498, 1498, 0, 1498, 0, 1498,
	1498, 0, 1507, 1498, 1498, 1498, 1498, 1498, 0, 0,
	0, 0, 0, 0, 0, 1314, 0, 0, 1314, 977,
	0, 0, 0, 0, 609, 0, 0, 0, 0, 0,
	0, 0, 1315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1574, 0, 0, 0, 0, 0, 1315,
	0, 0, 1315, 0, 0, 0, 0, 550, 0, 1596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 2713, 0, 1323,
	0, 0, 820, 0, 0, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 820, 820, 0, 0,
	0, 550, 0, 0, 0, 0, 0, 0, 550, 0,
	2737, 0, 0, 0, 0, 0, 0, 1621, 1622, 550,
	550, 550, 550, 550, 550, 550, 0, 0, 0, 0,
	0, 0, 0, 549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 0, 0, 0, 0, 2753, 550, 2754,
	0, 1692, 0, 0, 2757, 2758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 2765, 0,
	0, 0, 1314, 0, 0, 0, 0, 0, 0, 0,
	1720, 1721, 981, 2774, 0, 2775, 2776, 0, 2777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 805, 0, 0, 0, 0, 0, 0,
	805, 805, 0, 2802, 0, 0, 1315, 820, 0, 0,
	0, 0, 0, 0, 2810, 0, 0, 2812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 2857,
	805, 1598, 805, 805, 805, 805, 805, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 2250, 0, 0, 0,
	0, 1548, 0, 1370, 0, 0, 820, 0, 0, 121,
	0, 143, 0, 0, 820, 0, 805, 820, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 977, 0,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 550, 0, 0, 0, 0, 0, 0,
	1598, 0, 550, 153, 550, 0, 550, 1865, 0, 142,
	0, 0, 0, 0, 2927, 609, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 162, 984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1473, 1474,
	152, 151, 181, 0, 0, 0, 0, 0, 0, 0,
	977, 0, 0, 0, 0, 0, 984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 977, 0, 1692, 0, 0, 0, 0,
	0, 1692, 1692, 0, 0, 0, 0, 0, 0, 0,
	2970, 0, 0, 0, 0, 0, 0, 0, 2975, 0,
	0, 2976, 0, 2977, 0, 0, 0, 0, 0, 147,
	1475, 154, 0, 1472, 0, 148, 149, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 550, 0, 0, 0, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 550, 550, 0,
	3042, 550, 0, 2021, 2029, 0, 0, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 550, 0, 0,
	0, 0, 0, 3051, 0, 3052, 0, 3053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 0, 1106, 0,
	0, 1108, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3094, 0, 3095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 805, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	714, 79, 0, 0, 0, 820, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 144, 0, 0, 145, 0, 2141, 0, 0,
	0, 0, 0, 0, 805, 805, 0, 0, 2156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 550, 0, 157, 0, 0, 0, 0, 0,
	1548, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 777, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 777, 0,
	0, 0, 0, 177, 0, 550, 0, 0, 0, 550,
	0, 0, 0, 87, 985, 0, 0, 0, 0, 708,
	715, 716, 717, 718, 719, 709, 711, 0, 2233, 0,
	710, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 713, 720, 721, 0, 0, 176, 178,
	179, 180, 0, 0, 0, 1830, 0, 0, 1377, 0,
	0, 0, 2258, 0, 0, 0, 0, 0, 0, 0,
	0, 2263, 0, 0, 0, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 0, 2243, 0, 0, 0, 2537,
	2538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 550, 550, 550, 550, 550, 0, 0,
	0, 0, 0, 0, 0, 1692, 0, 0, 0, 0,
	0, 0, 0, 0, 550, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1314, 0, 1314, 0, 805, 1314, 0, 0, 0,
	0, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 820, 0, 0, 0,
	0, 0, 0, 0, 1395, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1315, 1498, 1315, 0, 0,
	1315, 0, 0, 0, 0, 1315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2395, 0, 0, 0, 805,
	0, 0, 0, 0, 820, 0, 0, 0, 1314, 0,
	0, 2420, 1498, 1314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 1315, 0, 0, 0, 0, 1315, 550, 550,
	550, 550, 550, 0, 0, 0, 0, 0, 0, 0,
	2436, 0, 0, 0, 0, 550, 0, 0, 1548, 0,
	550, 1576, 0, 550, 2447, 1598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 977, 0, 0, 1314,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 1608, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 550, 0, 0,
	0, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 0, 0,
	0, 0, 0, 1315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 550, 0, 0, 0,
	1649, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 550, 0, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1159, 0, 1159, 1159, 0, 0, 0, 2395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 777, 1235,
	1236, 1237, 0, 1240, 550, 1242, 1243, 1244, 1245, 0,
	1248, 1250, 1250, 0, 1250, 1254, 1254, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 0, 1292, 0, 1294, 1295, 1296, 1297,
	1298, 550, 0, 0, 0, 1254, 1254, 1254, 1254, 1254,
	1304, 1305, 1306, 1307, 0, 0, 0, 0, 1830, 1830,
	0, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	550, 0, 0, 0, 1847, 0, 1850, 0, 0, 1649,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 550,
	0, 0, 550, 550, 550, 0, 182, 0, 0, 0,
	0, 0, 2745, 2746, 2747, 2748, 0, 1469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1324, 0,
	121, 0, 143, 0, 777, 0, 0, 0, 777, 0,
	0, 0, 0, 164, 777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1314, 0, 1314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 162, 0, 1315, 0, 1315, 0, 1314,
	0, 0, 0, 0, 2806, 0, 2808, 0, 0, 1473,
	1474, 152, 151, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	0, 0, 0, 0, 0, 1649, 0, 0, 0, 0,
	0, 0, 2000, 0, 2879, 715, 716, 0, 0, 2014,
	2015, 1697, 0, 2019, 0, 0, 0, 820, 0, 0,
	0, 0, 2022, 0, 0, 0, 0, 0, 0, 2025,
	147, 1475, 154, 0, 1472, 0, 148, 149, 0, 0,
	0, 0, 165, 0, 0, 1548, 0, 0, 0, 0,
	0, 171, 2919, 0, 0, 2028, 2919, 2919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 0,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 550, 0,
	1314, 0, 2985, 0, 0, 0, 0, 0, 0, 1159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1159, 1159, 0, 820, 820, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 3021, 0, 1315, 0, 0, 0, 0, 0,
	0, 0, 3026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2190, 0, 144, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1548, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 1830, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 3026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	708, 715, 716, 717, 718, 719, 709, 711, 0, 0,
	0, 710, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 713, 720, 721, 0, 0, 176,
	178, 179, 180, 0, 0, 2285, 2286, 2287, 2288, 2289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1649, 2298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	2537, 2538, 2306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2531, 0, 0, 0, 0,
	0, 0, 0, 0, 694, 0, 0, 698, 2540, 695,
	696, 0, 0, 0, 697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2556, 0, 0, 2559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2691, 0, 0, 0, 0, 0, 0, 777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2706, 0, 0, 2707, 2708, 2709, 0, 0, 2167,
	2168, 0, 0, 0, 0, 0, 0, 0, 2187, 0,
	2188, 2189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2417, 0, 79, 0,
	0, 1857, 1857, 1857, 1857, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2187, 777,
	0, 0, 0, 1857, 0, 0, 1857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2778, 0, 2782, 2783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2417, 0,
	79, 0, 2417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1304, 1305, 1306, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 936, 2988, 0, 955, 940, 467, 79, 885,
	958, 854, 873, 968, 876, 879, 921, 833, 899, 379,
	870, 825, 858, 828, 865, 829, 856, 887, 250, 853,
	942, 903, 957, 334, 247, 835, 859, 393, 875, 197,
	923, 441, 234, 344, 341, 474, 262, 253, 249, 233,
	289, 351, 391, 461, 385, 964, 338, 909, 0, 451,
	364, 0, 0, 0, 889, 946, 897, 935, 884, 922,
	843, 908, 959, 871, 918, 960, 295, 232, 297, 196,
	376, 452, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 3008, 0, 3009, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 867, 915, 954, 868, 917, 245, 293,
	252, 244, 471, 965, 945, 832, 896, 953, 0, 0,
	214, 956, 891, 0, 920, 0, 971, 827, 911, 0,
	830, 834, 967, 949, 862, 255, 0, 0, 0, 0,
	0, 0, 0, 888, 898, 932, 882, 0, 0, 0,
	0, 0, 0, 0, 860, 0, 907, 0, 0, 0,
	839, 831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 886, 0, 0, 0, 842, 0,
	861, 933, 0, 824, 276, 836, 365, 237, 0, 938,
	948, 883, 507, 952, 881, 880, 927, 840, 944, 874,
	333, 838, 302, 192, 210, 0, 872, 375, 418, 428,
	943, 857, 866, 235, 864, 426, 389, 490, 218, 264,
	415, 395, 424, 402, 267, 906, 925, 425, 339, 476,
	409, 487, 508, 509, 243, 369, 498, 465, 504, 522,
	211, 240, 383, 458, 493, 448, 362, 472, 473, 301,
	447, 274, 195, 337, 514, 209, 434, 227, 216, 478,
	496, 269, 413, 202, 460, 485, 224, 438, 0, 0,
	524, 204, 483, 457, 358, 298, 299, 203, 0, 414,
	248, 272, 238, 378, 480, 481, 236, 525, 213, 503,
	206, 1161, 502, 371, 475, 484, 359, 349, 205, 482,
	357, 348, 304, 323, 324, 260, 283, 407, 342, 408,
	284, 367, 366, 368, 198, 494, 0, 199, 0, 453,
	495, 526, 219, 220, 222, 852, 259, 263, 271, 273,
	279, 280, 287, 335, 382, 406, 404, 410, 939, 470,
	488, 499, 506, 512, 513, 515, 516, 517, 518, 519,
	521, 520, 370, 286, 449, 303, 340, 930, 970, 388,
	427, 225, 492, 450, 847, 851, 845, 912, 846, 901,
	902, 848, 961, 962, 963, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 0, 934, 841, 0, 849, 850, 0,
	941, 950, 951, 545, 350, 440, 489, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 419, 420, 421, 422, 905, 191,
	207, 336, 966, 411, 268, 523, 501, 497, 826, 844,
	242, 855, 863, 0, 869, 877, 878, 890, 892, 893,
	894, 895, 913, 914, 916, 924, 926, 929, 931, 937,
	947, 969, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 429, 430, 431, 432, 433, 436,
	437, 442, 443, 444, 445, 446, 454, 455, 459, 477,
	479, 491, 505, 510, 435, 278, 486, 511, 0, 345,
	904, 910, 347, 261, 281, 292, 919, 500, 456, 212,
	423, 270, 201, 231, 215, 239, 254, 257, 296, 356,
	363, 392, 397, 275, 251, 229, 416, 226, 439, 462,
	463, 464, 466, 360, 246, 396, 900, 928, 343, 468,
	469, 288, 361, 936, 0, 0, 955, 940, 467, 0,
	885, 958, 854, 873, 968, 876, 879, 921, 833, 899,
	379, 870, 825, 858, 828, 865, 829, 856, 887, 250,
	853, 942, 903, 957, 334, 247, 835, 859, 393, 875,
	197, 923, 441, 234, 344, 341, 474, 262, 253, 249,
	233, 289, 351, 391, 461, 385, 964, 338, 909, 0,
	451, 364, 0, 0, 0, 889, 946, 897, 935, 884,
	922, 843, 908, 959, 871, 918, 960, 295, 232, 297,
	196, 376, 452, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 867, 915, 954, 868, 917, 245,
	293, 252, 244, 471, 965, 945, 832, 896, 953, 0,
	0, 214, 956, 891, 0, 920, 0, 971, 827, 911,
	0, 830, 834, 967, 949, 862, 255, 0, 0, 0,
	0, 0, 0, 0, 888, 898, 932, 882, 0, 0,
	0, 0, 0, 2448, 0, 860, 0, 907, 0, 0,
	0, 839, 831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 0, 842,
	0, 861, 933, 0, 824, 276, 836, 365, 237, 0,
	938, 948, 883, 507, 952, 881, 880, 927, 840, 944,
	874, 333, 838, 302, 192, 210, 0, 872, 375, 418,
	428, 943, 857, 866, 235, 864, 426, 389, 490, 218,
	264, 415, 395, 424, 402, 267, 906, 925, 425, 339,
	476, 409, 487, 508, 509, 243, 369, 498, 465, 504,
	522, 211, 240, 383, 458, 493, 448, 362, 472, 473,
	301, 447, 274, 195, 337, 514, 209, 434, 227, 216,
	478, 496, 269, 413, 202, 460, 485, 224, 438, 0,
	0, 524, 204, 483, 457, 358, 298, 299, 203, 0,
	414, 248, 272, 238, 378, 480, 481, 236, 525, 213,
	503, 206, 1161, 502, 371, 475, 484, 359, 349, 205,
	482, 357, 348, 304, 323, 324, 260, 283, 407, 342,
	408, 284, 367, 366, 368, 198, 494, 0, 199, 0,
	453, 495, 526, 219, 220, 222, 852, 259, 263, 271,
	273, 279, 280, 287, 335, 382, 406, 404, 410, 939,
	470, 488, 499, 506, 512, 513, 515, 516, 517, 518,
	519, 521, 520, 370, 286, 449, 303, 340, 930, 970,
	388, 427, 225, 492, 450, 847, 851, 845, 912, 846,
	901, 902, 848, 961, 962, 963, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 0, 934, 841, 0, 849, 850,
	0, 941, 950, 951, 545, 350, 440, 489, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 419, 420, 421, 422, 905,
	191, 207, 336, 966, 411, 268, 523, 501, 497, 826,
	844, 242, 855, 863, 0, 869, 877, 878, 890, 892,
	893, 894, 895, 913, 914, 916, 924, 926, 929, 931,
	937, 947, 969, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 429, 430, 431, 432, 433,
	436, 437, 442, 443, 444, 445, 446, 454, 455, 459,
	477, 479, 491, 505, 510, 435, 278, 486, 511, 0,
	345, 904, 910, 347, 261, 281, 292, 919, 500, 456,
	212, 423, 270, 201, 231, 215, 239, 254, 257, 296,
	356, 363, 392, 397, 275, 251, 229, 416, 226, 439,
	462, 463, 464, 466, 360, 246, 396, 900, 928, 343,
	468, 469, 288, 361, 936, 0, 0, 955, 940, 467,
	0, 885, 958, 854, 873, 968, 876, 879, 921, 833,
	899, 379, 870, 825, 858, 828, 865, 829, 856, 887,
	250, 853, 942, 903, 957, 334, 247, 835, 859, 393,
	875, 197, 923, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 964, 338, 909,
	0, 451, 364, 0, 0, 0, 889, 946, 897, 935,
	884, 922, 843, 908, 959, 871, 918, 960, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 867, 915, 954, 868, 917,
	245, 293, 252, 244, 471, 965, 945, 832, 896, 953,
	0, 0, 214, 956, 891, 0, 920, 0, 971, 827,
	911, 0, 830, 834, 967, 949, 862, 255, 0, 0,
	0, 0, 0, 0, 0, 888, 898, 932, 882, 0,
	0, 0, 0, 0, 2406, 0, 860, 0, 907, 0,
	0, 0, 839, 831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 886, 0, 0, 0,
	842, 0, 861, 933, 0, 824, 276, 836, 365, 237,
	0, 938, 948, 883, 507, 952, 881, 880, 927, 840,
	944, 874, 333, 838, 302, 192, 210, 0, 872, 375,
	418, 428, 943, 857, 866, 235, 864, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 906, 925, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 1161, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 852, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	939, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 930,
	970, 388, 427, 225, 492, 450, 847, 851, 845, 912,
	846, 901, 902, 848, 961, 962, 963, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 934, 841, 0, 849,
	850, 0, 941, 950, 951, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	905, 191, 207, 336, 966, 411, 268, 523, 501, 497,
	826, 844, 242, 855, 863, 0, 869, 877, 878, 890,
	892, 893, 894, 895, 913, 914, 916, 924, 926, 929,
	931, 937, 947, 969, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 904, 910, 347, 261, 281, 292, 919, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 900, 928,
	343, 468, 469, 288, 361, 936, 0, 0, 955, 940,
	467, 0, 885, 958, 854, 873, 968, 876, 879, 921,
	833, 899, 379, 870, 825, 858, 828, 865, 829, 856,
	887, 250, 853, 942, 903, 957, 334, 247, 835, 859,
	393, 875, 197, 923, 441, 234, 344, 341, 474, 262,
	253, 249, 233, 289, 351, 391, 461, 385, 964, 338,
	909, 0, 451, 364, 0, 0, 0, 889, 946, 897,
	935, 884, 922, 843, 908, 959, 871, 918, 960, 295,
	232, 297, 196, 376, 452, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 319, 328, 327, 308,
	309, 311, 313, 318, 325, 331, 867, 915, 954, 868,
	917, 245, 293, 252, 244, 471, 965, 945, 832, 896,
	953, 0, 0, 214, 956, 891, 0, 920, 0, 971,
	827, 911, 0, 830, 834, 967, 949, 862, 255, 0,
	0, 0, 0, 0, 0, 0, 888, 898, 932, 882,
	0, 0, 0, 0, 0, 1845, 0, 860, 0, 907,
	0, 0, 0, 839, 831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 886, 0, 0,
	0, 842, 0, 861, 933, 0, 824, 276, 836, 365,
	237, 0, 938, 948, 883, 507, 952, 881, 880, 927,
	840, 944, 874, 333, 838, 302, 192, 210, 0, 872,
	375, 418, 428, 943, 857, 866, 235, 864, 426, 389,
	490, 218, 264, 415, 395, 424, 402, 267, 906, 925,
	425, 339, 476, 409, 487, 508, 509, 243, 369, 498,
	465, 504, 522, 211, 240, 383, 458, 493, 448, 362,
	472, 473, 301, 447, 274, 195, 337, 514, 209, 434,
	227, 216, 478, 496, 269, 413, 202, 460, 485, 224,
	438, 0, 0, 524, 204, 483, 457, 358, 298, 299,
	203, 0, 414, 248, 272, 238, 378, 480, 481, 236,
	525, 213, 503, 206, 1161, 502, 371, 475, 484, 359,
	349, 205, 482, 357, 348, 304, 323, 324, 260, 283,
	407, 342, 408, 284, 367, 366, 368, 198, 494, 0,
	199, 0, 453, 495, 526, 219, 220, 222, 852, 259,
	263, 271, 273, 279, 280, 287, 335, 382, 406, 404,
	410, 939, 470, 488, 499, 506, 512, 513, 515, 516,
	517, 518, 519, 521, 520, 370, 286, 449, 303, 340,
	930, 970, 388, 427, 225, 492, 450, 847, 851, 845,
	912, 846, 901, 902, 848, 961, 962, 963, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 0, 934, 841, 0,
	849, 850, 0, 941, 950, 951, 545, 350, 440, 489,
	305, 317, 320, 310, 329, 0, 330, 306, 307, 312,
	314, 315, 316, 321, 322, 326, 332, 419, 420, 421,
	422, 905, 191, 207, 336, 966, 411, 268, 523, 501,
	497, 826, 844, 242, 855, 863, 0, 869, 877, 878,
	890, 892, 893, 894, 895, 913, 914, 916, 924, 926,
	929, 931, 937, 947, 969, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 277, 282, 285, 290,
	291, 294, 300, 346, 352, 353, 354, 355, 372, 373,
	374, 377, 380, 381, 384, 386, 387, 390, 394, 398,
	399, 400, 401, 403, 405, 412, 417, 429, 430, 431,
	432, 433, 436, 437, 442, 443, 444, 445, 446, 454,
	455, 459, 477, 479, 491, 505, 510, 435, 278, 486,
	511, 0, 345, 904, 910, 347, 261, 281, 292, 919,
	500, 456, 212, 423, 270, 201, 231, 215, 239, 254,
	257, 296, 356, 363, 392, 397, 275, 251, 229, 416,
	226, 439, 462, 463, 464, 466, 360, 246, 396, 900,
	928, 343, 468, 469, 288, 361, 936, 0, 0, 955,
	940, 467, 0, 885, 958, 854, 873, 968, 876, 879,
	921, 833, 899, 379, 870, 825, 858, 828, 865, 829,
	856, 887, 250, 853, 942, 903, 957, 334, 247, 835,
	859, 393, 875, 197, 923, 441, 234, 344, 341, 474,
	262, 253, 249, 233, 289, 351, 391, 461, 385, 964,
	338, 909, 0, 451, 364, 0, 0, 0, 889, 946,
	897, 935, 884, 922, 843, 908, 959, 871, 918, 960,
	295, 232, 297, 196, 376, 452, 266, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 319, 328, 327,
	308, 309, 311, 313, 318, 325, 331, 867, 915, 954,
	868, 917, 245, 293, 252, 244, 471, 965, 945, 832,
	896, 953, 0, 0, 214, 956, 891, 0, 920, 0,
	971, 827, 911, 0, 830, 834, 967, 949, 862, 255,
	0, 0, 0, 0, 0, 0, 0, 888, 898, 932,
	882, 0, 0, 0, 0, 0, 0, 0, 860, 0,
	907, 0, 0, 0, 839, 831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 886, 0,
	0, 0, 842, 0, 861, 933, 0, 824, 276, 836,
	365, 237, 0, 938, 948, 883, 507, 952, 881, 880,
	927, 840, 944, 874, 333, 838, 302, 192, 210, 0,
	872, 375, 418, 428, 943, 857, 866, 235, 864, 426,
	389, 490, 218, 264, 415, 395, 424, 402, 267, 906,
	925, 425, 339, 476, 409, 487, 508, 509, 243, 369,
	498, 465, 504, 522, 211, 240, 383, 458, 493, 448,
	362, 472, 473, 301, 447, 274, 195, 337, 514, 209,
	434, 227, 216, 478, 496, 269, 413, 202, 460, 485,
	224, 438, 0, 0, 524, 204, 483, 457, 358, 298,
	299, 203, 0, 414, 248, 272, 238, 378, 480, 481,
	236, 525, 213, 503, 206, 1161, 502, 371, 475, 484,
	359, 349, 205, 482, 357, 348, 304, 323, 324, 260,
	283, 407, 342, 408, 284, 367, 366, 368, 198, 494,
	0, 199, 0, 453, 495, 526, 219, 220, 222, 852,
	259, 263, 271, 273, 279, 280, 287, 335, 382, 406,
	404, 410, 939, 470, 488, 499, 506, 512, 513, 515,
	516, 517, 518, 519, 521, 520, 370, 286, 449, 303,
	340, 930, 970, 388, 427, 225, 492, 450, 847, 851,
	845, 912, 846, 901, 902, 848, 961, 962, 963, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 0, 934, 841,
	0, 849, 850, 0, 941, 950, 951, 545, 350, 440,
	489, 305, 317, 320, 310, 329, 0, 330, 306, 307,
	312, 314, 315, 316, 321, 322, 326, 332, 419, 420,
	421, 422, 905, 191, 207, 336, 966, 411, 268, 523,
	501, 497, 826, 844, 242, 855, 863, 0, 869, 877,
	878, 890, 892, 893, 894, 895, 913, 914, 916, 924,
	926, 929, 931, 937, 947, 969, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 429, 430,
	431, 432, 433, 436, 437, 442, 443, 444, 445, 446,
	454, 455, 459, 477, 479, 491, 505, 510, 435, 278,
	486, 511, 0, 345, 904, 910, 347, 261, 281, 292,
	919, 500, 456, 212, 423, 270, 201, 231, 215, 239,
	254, 257, 296, 356, 363, 392, 397, 275, 251, 229,
	416, 226, 439, 462, 463, 464, 466, 360, 246, 396,
	900, 928, 343, 468, 469, 288, 361, 936, 0, 0,
	955, 940, 467, 0, 885, 958, 854, 873, 968, 876,
	879, 921, 833, 899, 379, 870, 825, 858, 828, 865,
	829, 856, 887, 250, 853, 942, 903, 957, 334, 247,
	835, 859, 393, 875, 197, 923, 441, 234, 344, 341,
	474, 262, 253, 249, 233, 289, 351, 391, 461, 385,
	964, 338, 909, 0, 451, 364, 0, 0, 0, 889,
	946, 897, 935, 884, 922, 843, 908, 959, 871, 918,
	960, 295, 232, 297, 196, 376, 452, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 867, 915,
	954, 868, 917, 245, 293, 252, 244, 471, 965, 945,
	832, 896, 953, 0, 0, 214, 956, 891, 0, 920,
	0, 971, 827, 911, 0, 830, 834, 967, 949, 862,
	255, 0, 0, 0, 0, 0, 0, 0, 888, 898,
	932, 882, 0, 0, 0, 0, 0, 0, 0, 860,
	0, 907, 0, 0, 0, 839, 831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 886,
	0, 0, 0, 842, 0, 861, 933, 0, 824, 276,
	836, 365, 237, 0, 938, 948, 883, 507, 952, 881,
	880, 927, 840, 944, 874, 333, 838, 302, 192, 210,
	0, 872, 375, 418, 428, 943, 857, 866, 235, 864,
	426, 389, 490, 218, 264, 415, 395, 424, 402, 267,
	906, 925, 425, 339, 476, 409, 487, 508, 509, 243,
	369, 498, 465, 504, 522, 211, 240, 383, 458, 493,
	448, 362, 472, 473, 301, 447, 274, 195, 337, 514,
	209, 434, 227, 216, 478, 496, 269, 413, 202, 460,
	485, 224, 438, 0, 0, 524, 204, 483, 457, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 480,
	481, 236, 525, 213, 503, 206, 1161, 502, 371, 475,
	484, 359, 349, 205, 482, 357, 348, 304, 323, 324,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	494, 0, 199, 0, 453, 495, 526, 219, 220, 222,
	852, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 939, 470, 488, 499, 506, 512, 513,
	515, 516, 517, 518, 519, 521, 520, 370, 286, 449,
	303, 340, 930, 970, 388, 427, 225, 492, 450, 847,
	851, 845, 912, 846, 901, 902, 848, 961, 962, 963,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 0, 934,
	841, 0, 849, 850, 0, 941, 950, 951, 545, 350,
	440, 489, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 419,
	420, 421, 422, 905, 191, 207, 336, 966, 411, 268,
	523, 501, 497, 826, 844, 242, 855, 863, 0, 869,
	877, 878, 890, 892, 893, 894, 895, 913, 914, 916,
	924, 926, 929, 931, 937, 947, 969, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 429,
	430, 431, 432, 433, 436, 437, 442, 443, 444, 445,
	446, 454, 455, 459, 477, 479, 491, 505, 510, 435,
	278, 486, 511, 0, 345, 904, 910, 347, 261, 281,
	292, 919, 500, 456, 212, 423, 270, 201, 231, 215,
	239, 254, 257, 296, 356, 363, 392, 397, 275, 251,
	229, 416, 226, 439, 462, 463, 464, 466, 360, 246,
	396, 900, 928, 343, 468, 469, 288, 361, 936, 0,
	0, 955, 940, 467, 0, 885, 958, 854, 873, 968,
	876, 879, 921, 833, 899, 379, 870, 825, 858, 828,
	865, 829, 856, 887, 250, 853, 942, 903, 957, 334,
	247, 835, 859, 393, 875, 197, 923, 441, 234, 344,
	341, 474, 262, 253, 249, 233, 289, 351, 391, 461,
	385, 964, 338, 909, 0, 451, 364, 0, 0, 0,
	889, 946, 897, 935, 884, 922, 843, 908, 959, 871,
	918, 960, 295, 232, 297, 196, 376, 452, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 867,
	915, 954, 868, 917, 245, 293, 252, 244, 471, 965,
	945, 832, 896, 953, 0, 0, 972, 956, 891, 0,
	920, 0, 971, 827, 911, 0, 830, 834, 967, 949,
	862, 255, 0, 0, 0, 0, 0, 0, 0, 888,
	898, 932, 882, 0, 0, 0, 0, 0, 0, 0,
	860, 0, 907, 0, 0, 0, 839, 831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	886, 0, 0, 0, 842, 0, 861, 933, 0, 824,
	276, 836, 365, 237, 0, 938, 948, 883, 507, 952,
	881, 880, 927, 840, 944, 874, 333, 838, 302, 192,
	210, 0, 872, 375, 418, 428, 943, 857, 866, 235,
	864, 426, 389, 490, 218, 264, 415, 395, 424, 402,
	267, 906, 925, 425, 339, 476, 409, 487, 508, 509,
	243, 369, 498, 465, 504, 522, 211, 240, 383, 458,
	493, 448, 362, 472, 473, 301, 447, 274, 195, 337,
	514, 209, 434, 227, 216, 478, 496, 269, 413, 202,
	460, 485, 224, 438, 0, 0, 524, 204, 483, 457,
	358, 298, 299, 203, 0, 414, 248, 272, 238, 378,
	480, 481, 236, 525, 213, 503, 206, 837, 502, 371,
	475, 484, 359, 349, 205, 482, 357, 348, 304, 323,
	324, 260, 283, 407, 342, 408, 284, 367, 366, 368,
	198, 494, 0, 199, 0, 453, 495, 526, 219, 220,
	222, 852, 259, 263, 271, 273, 279, 280, 287, 335,
	382, 406, 404, 410, 939, 470, 488, 499, 506, 512,
	513, 515, 516, 517, 518, 519, 521, 520, 823, 817,
	816, 303, 340, 930, 970, 388, 427, 225, 492, 450,
	847, 851, 845, 912, 846, 901, 902, 848, 961, 962,
	963, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 0,
	934, 841, 0, 849, 850, 0, 941, 950, 951, 545,
	350, 440, 489, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	419, 420, 421, 422, 905, 191, 207, 336, 966, 411,
	268, 523, 501, 497, 826, 844, 242, 855, 863, 0,
	869, 877, 878, 890, 892, 893, 894, 895, 913, 914,
	916, 924, 926, 929, 931, 937, 947, 969, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 352, 353, 354,
	355, 372, 373, 374, 377, 380, 381, 384, 386, 387,
	390, 394, 398, 399, 400, 401, 403, 405, 412, 417,
	429, 430, 431, 432, 433, 436, 437, 442, 443, 444,
	445, 446, 454, 455, 459, 477, 479, 491, 505, 510,
	435, 278, 486, 511, 0, 345, 904, 910, 347, 261,
	281, 292, 919, 500, 456, 212, 423, 270, 201, 231,
	215, 239, 254, 257, 296, 356, 363, 392, 397, 275,
	251, 229, 416, 226, 439, 462, 463, 464, 466, 360,
	246, 396, 900, 928, 343, 468, 469, 288, 361, 936,
	0, 0, 955, 940, 467, 0, 885, 958, 854, 873,
	968, 876, 879, 921, 833, 899, 379, 870, 825, 858,
	828, 865, 829, 856, 887, 250, 853, 942, 903, 957,
	334, 247, 835, 859, 393, 875, 197, 923, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 964, 338, 909, 0, 451, 364, 0, 0,
	0, 889, 946, 897, 935, 884, 922, 843, 908, 959,
	871, 918, 960, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	867, 915, 954, 868, 917, 245, 293, 252, 244, 471,
	965, 945, 832, 896, 953, 0, 0, 972, 956, 891,
	0, 920, 0, 971, 827, 911, 0, 830, 834, 967,
	949, 862, 255, 0, 0, 0, 0, 0, 0, 0,
	888, 898, 932, 882, 0, 0, 0, 0, 0, 0,
	0, 860, 0, 907, 0, 0, 0, 839, 831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 886, 0, 0, 0, 842, 0, 861, 933, 0,
	824, 276, 836, 365, 237, 0, 938, 948, 883, 507,
	952, 881, 880, 927, 840, 944, 874, 333, 838, 302,
	192, 210, 0, 872, 375, 418, 428, 943, 857, 866,
	235, 864, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 906, 925, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 1381, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 837, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 852, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 939, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 823,
	817, 816, 303, 340, 930, 970, 388, 427, 225, 492,
	450, 847, 851, 845, 912, 846, 901, 902, 848, 961,
	962, 963, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 934, 841, 0, 849, 850, 0, 941, 950, 951,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 905, 191, 207, 336, 966,
	411, 268, 523, 501, 497, 826, 844, 242, 855, 863,
	0, 869, 877, 878, 890, 892, 893, 894, 895, 913,
	914, 916, 924, 926, 929, 931, 937, 947, 969, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 904, 910, 347,
	261, 281, 292, 919, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 900, 928, 343, 468, 469, 288, 361,
	936, 0, 0, 955, 940, 467, 0, 885, 958, 854,
	873, 968, 876, 879, 921, 833, 899, 379, 870, 825,
	858, 828, 865, 829, 856, 887, 250, 853, 942, 903,
	957, 334, 247, 835, 859, 393, 875, 197, 923, 441,
	234, 344, 341, 474, 262, 253, 249, 233, 289, 351,
	391, 461, 385, 964, 338, 909, 0, 451, 364, 0,
	0, 0, 889, 946, 897, 935, 884, 922, 843, 908,
	959, 871, 918, 960, 295, 232, 297, 196, 376, 452,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 319, 328, 327, 308, 309, 311, 313, 318, 325,
	331, 867, 915, 954, 868, 917, 245, 293, 252, 244,
	471, 965, 945, 832, 896, 953, 0, 0, 972, 956,
	891, 0, 920, 0, 971, 827, 911, 0, 830, 834,
	967, 949, 862, 255, 0, 0, 0, 0, 0, 0,
	0, 888, 898, 932, 882, 0, 0, 0, 0, 0,
	0, 0, 860, 0, 907, 0, 0, 0, 839, 831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 886, 0, 0, 0, 842, 0, 861, 933,
	0, 824, 276, 836, 365, 237, 0, 938, 948, 883,
	507, 952, 881, 880, 927, 840, 944, 874, 333, 838,
	302, 192, 210, 0, 872, 375, 418, 428, 943, 857,
	866, 235, 864, 426, 389, 490, 218, 264, 415, 395,
	424, 402, 267, 906, 925, 425, 339, 476, 409, 487,
	508, 509, 243, 369, 498, 465, 504, 522, 211, 240,
	383, 458, 493, 448, 362, 472, 473, 301, 447, 274,
	195, 337, 514, 209, 434, 227, 216, 478, 496, 269,
	413, 202, 460, 814, 224, 438, 0, 0, 524, 204,
	483, 457, 358, 298, 299, 203, 0, 414, 248, 272,
	238, 378, 480, 481, 236, 525, 213, 503, 206, 837,
	502, 371, 475, 484, 359, 349, 205, 482, 357, 348,
	304, 323, 324, 260, 283, 407, 342, 408, 284, 367,
	366, 368, 198, 494, 0, 199, 0, 453, 495, 526,
	219, 220, 222, 852, 259, 263, 271, 273, 279, 280,
	287, 335, 382, 406, 404, 410, 939, 470, 488, 499,
	506, 512, 513, 515, 516, 517, 518, 519, 521, 520,
	823, 817, 816, 303, 340, 930, 970, 388, 427, 225,
	492, 450, 847, 851, 845, 912, 846, 901, 902, 848,
	961, 962, 963, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 0, 934, 841, 0, 849, 850, 0, 941, 950,
	951, 545, 350, 440, 489, 305, 317, 320, 310, 329,
	0, 330, 306, 307, 312, 314, 315, 316, 321, 322,
	326, 332, 419, 420, 421, 422, 905, 191, 207, 336,
	966, 411, 268, 523, 501, 497, 826, 844, 242, 855,
	863, 0, 869, 877, 878, 890, 892, 893, 894, 895,
	913, 914, 916, 924, 926, 929, 931, 937, 947, 969,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 277, 282, 285, 290, 291, 294, 300, 346, 352,
	353, 354, 355, 372, 373, 374, 377, 380, 381, 384,
	386, 387, 390, 394, 398, 399, 400, 401, 403, 405,
	412, 417, 429, 430, 431, 432, 433, 436, 437, 442,
	443, 444, 445, 446, 454, 455, 459, 477, 479, 491,
	505, 510, 435, 278, 486, 511, 0, 345, 904, 910,
	347, 261, 281, 292, 919, 500, 456, 212, 423, 270,
	201, 231, 215, 239, 254, 257, 296, 356, 363, 392,
	397, 275, 251, 229, 416, 226, 439, 462, 463, 464,
	466, 360, 246, 396, 900, 928, 343, 468, 469, 288,
	361, 0, 0, 0, 0, 0, 467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 1786, 0, 627, 0, 0, 0, 250, 632, 0,
	0, 0, 334, 247, 0, 1787, 393, 0, 197, 0,
	441, 234, 344, 341, 474, 262, 253, 249, 233, 289,
	351, 391, 461, 385, 639, 338, 0, 0, 451, 364,
	0, 0, 0, 0, 0, 634, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 295, 232, 297, 196, 376,
	452, 266, 0, 87, 0, 0, 188, 189, 190, 708,
	715, 716, 717, 718, 719, 709, 711, 0, 0, 223,
	710, 230, 650, 652, 651, 661, 662, 663, 664, 665,
	666, 667, 648, 713, 720, 721, 0, 245, 293, 252,
	244, 471, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 610, 624, 0,
	638, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 621,
	622, 803, 0, 0, 0, 688, 0, 623, 0, 0,
	631, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 365, 237, 0, 687, 0,
	0, 507, 0, 0, 685, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 428, 0,
	0, 0, 235, 0, 426, 389, 490, 218, 264, 415,
	395, 424, 402, 267, 0, 0, 425, 339, 476, 409,
	487, 508, 509, 243, 369, 498, 465, 504, 522, 211,
	240, 383, 458, 493, 448, 362, 472, 473, 301, 447,
	274, 195, 337, 514, 209, 434, 227, 216, 478, 496,
	269, 413, 202, 460, 485, 224, 438, 0, 0, 524,
	204, 483, 457, 358, 298, 299, 203, 0, 414, 248,
	272, 238, 378, 480, 481, 236, 525, 213, 503, 206,
	0, 502, 371, 475, 484, 359, 349, 205, 482, 357,
	348, 304, 656, 657, 260, 283, 407, 342, 408, 284,
	367, 366, 368, 198, 494, 0, 199, 0, 453, 495,
	526, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 335, 382, 406, 404, 410, 0, 470, 488,
	499, 506, 512, 513, 515, 516, 517, 518, 519, 521,
	520, 370, 286, 449, 303, 340, 0, 0, 388, 427,
	225, 492, 450, 694, 686, 643, 698, 645, 695, 696,
	640, 641, 644, 697, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 0, 689, 630, 629, 0, 636, 637, 0,
	646, 647, 649, 653, 654, 655, 658, 659, 660, 668,
	670, 671, 669, 672, 673, 674, 677, 678, 679, 680,
	675, 676, 681, 699, 700, 701, 702, 628, 191, 207,
	336, 0, 411, 268, 523, 501, 497, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 429, 430, 431, 432, 433, 436, 437,
	442, 443, 444, 445, 446, 454, 455, 459, 477, 479,
	491, 505, 510, 435, 278, 486, 511, 0, 345, 0,
	0, 347, 261, 281, 292, 0, 500, 456, 212, 423,
	270, 201, 231, 215, 239, 254, 257, 296, 356, 363,
	392, 397, 275, 251, 229, 416, 226, 439, 462, 463,
	464, 466, 360, 246, 396, 361, 0, 343, 468, 469,
	288, 467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 627, 0,
	0, 0, 250, 632, 0, 0, 0, 334, 247, 0,
	0, 393, 0, 197, 0, 441, 234, 344, 341, 474,
	262, 253, 249, 233, 289, 351, 391, 461, 385, 639,
	338, 0, 0, 451, 364, 0, 0, 0, 0, 0,
	634, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 232, 297, 196, 376, 452, 266, 0, 87, 0,
	0, 188, 189, 190, 708, 715, 716, 717, 718, 719,
	709, 711, 0, 0, 223, 710, 230, 650, 652, 651,
	661, 662, 663, 664, 665, 666, 667, 648, 713, 720,
	721, 0, 245, 293, 252, 244, 471, 0, 0, 1752,
	1753, 1754, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 610, 624, 0, 638, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 621, 622, 0, 0, 0, 0,
	688, 0, 623, 0, 0, 631, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	365, 237, 0, 687, 0, 0, 507, 0, 0, 685,
	0, 0, 0, 0, 333, 0, 302, 192, 210, 0,
	0, 375, 418, 428, 0, 0, 0, 235, 0, 426,
	389, 490, 218, 264, 415, 395, 424, 402, 267, 0,
	0, 425, 339, 476, 409, 487, 508, 509, 243, 369,
	498, 465, 504, 522, 211, 240, 383, 458, 493, 448,
	362, 472, 473, 301, 447, 274, 195, 337, 514, 209,
	434, 227, 216, 478, 496, 269, 413, 202, 460, 485,
	224, 438, 0, 0, 524, 204, 483, 457, 358, 298,
	299, 203, 0, 414, 248, 272, 238, 378, 480, 481,
	236, 525, 213, 503, 206, 0, 502, 371, 475, 484,
	359, 349, 205, 482, 357, 348, 304, 656, 657, 260,
	283, 407, 342, 408, 284, 367, 366, 368, 198, 494,
	0, 199, 0, 453, 495, 526, 219, 220, 222, 0,
	259, 263, 271, 273, 279, 280, 287, 335, 382, 406,
	404, 410, 0, 470, 488, 499, 506, 512, 513, 515,
	516, 517, 518, 519, 521, 520, 370, 286, 449, 303,
	340, 0, 0, 388, 427, 225, 492, 450, 694, 686,
	643, 698, 645, 695, 696, 640, 641, 644, 697, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 0, 689, 630,
	629, 0, 636, 637, 0, 646, 647, 649, 653, 654,
	655, 658, 659, 660, 668, 670, 671, 669, 672, 673,
	674, 677, 678, 679, 680, 675, 676, 681, 699, 700,
	701, 702, 628, 191, 207, 336, 0, 411, 268, 523,
	501, 497, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 277, 282, 285,
	290, 291, 294, 300, 346, 352, 353, 354, 355, 372,
	373, 374, 377, 380, 381, 384, 386, 387, 390, 394,
	398, 399, 400, 401, 403, 405, 412, 417, 429, 430,
	431, 432, 433, 436, 437, 442, 443, 444, 445, 446,
	454, 455, 459, 477, 479, 491, 505, 510, 435, 278,
	486, 511, 0, 345, 0, 0, 347, 261, 281, 292,
	0, 500, 456, 212, 423, 270, 201, 231, 215, 239,
	254, 257, 296, 356, 363, 392, 397, 275, 251, 229,
	416, 226, 439, 462, 463, 464, 466, 360, 246, 396,
	361, 0, 343, 468, 469, 288, 467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 0, 0, 627, 0, 0, 0, 250, 632, 0,
	0, 0, 334, 247, 0, 0, 393, 0, 197, 0,
	441, 234, 344, 341, 474, 262, 253, 249, 233, 289,
	351, 391, 461, 385, 639, 338, 0, 0, 451, 364,
	0, 0, 0, 0, 0, 634, 635, 0, 0, 0,
	0, 0, 0, 1872, 0, 295, 232, 297, 196, 376,
	452, 266, 0, 87, 0, 0, 188, 189, 190, 708,
	715, 716, 717, 718, 719, 709, 711, 0, 0, 223,
	710, 230, 650, 652, 651, 661, 662, 663, 664, 665,
	666, 667, 648, 713, 720, 721, 1873, 245, 293, 252,
	244, 471, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 610, 624, 0,
	638, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 621,
	622, 0, 0, 0, 0, 688, 0, 623, 0, 0,
	631, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 365, 237, 0, 687, 0,
	0, 507, 0, 0, 685, 0, 0, 0, 0, 333,
	0, 302, 192, 210, 0, 0, 375, 418, 428, 0,
	0, 0, 235, 0, 426, 389, 490, 218, 264, 415,
	395, 424, 402, 267, 0, 0, 425, 339, 476, 409,
	487, 508, 509, 243, 369, 498, 465, 504, 522, 211,
	240, 383, 458, 493, 448, 362, 472, 473, 301, 447,
	274, 195, 337, 514, 209, 434, 227, 216, 478, 496,
	269, 413, 202, 460, 485, 224, 438, 0, 0, 524,
	204, 483, 457, 358, 298, 299, 203, 0, 414, 248,
	272, 238, 378, 480, 481, 236, 525, 213, 503, 206,
	0, 502, 371, 475, 484, 359, 349, 205, 482, 357,
	348, 304, 656, 657, 260, 283, 407, 342, 408, 284,
	367, 366, 368, 198, 494, 0, 199, 0, 453, 495,
	526, 219, 220, 222, 0, 259, 263, 271, 273, 279,
	280, 287, 335, 382, 406, 404, 410, 0, 470, 488,
	499, 506, 512, 513, 515, 516, 517, 518, 519, 521,
	520, 370, 286, 449, 303, 340, 0, 0, 388, 427,
	225, 492, 450, 694, 686, 643, 698, 645, 695, 696,
	640, 641, 644, 697, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 0, 689, 630, 629, 0, 636, 637, 0,
	646, 647, 649, 653, 654, 655, 658, 659, 660, 668,
	670, 671, 669, 672, 673, 674, 677, 678, 679, 680,
	675, 676, 681, 699, 700, 701, 702, 628, 191, 207,
	336, 0, 411, 268, 523, 501, 497, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 277, 282, 285, 290, 291, 294, 300, 346,
	352, 353, 354, 355, 372, 373, 374, 377, 380, 381,
	384, 386, 387, 390, 394, 398, 399, 400, 401, 403,
	405, 412, 417, 429, 430, 431, 432, 433, 436, 437,
	442, 443, 444, 445, 446, 454, 455, 459, 477, 479,
	491, 505, 510, 435, 278, 486, 511, 0, 345, 0,
	0, 347, 261, 281, 292, 0, 500, 456, 212, 423,
	270, 201, 231, 215, 239, 254, 257, 296, 356, 363,
	392, 397, 275, 251, 229, 416, 226, 439, 462, 463,
	464, 466, 360, 246, 396, 0, 361, 343, 468, 469,
	288, 78, 467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 627,
	0, 0, 0, 250, 632, 0, 0, 0, 334, 247,
	0, 0, 393, 0, 197, 0, 441, 234, 344, 341,
	474, 262, 253, 249, 233, 289, 351, 391, 461, 385,
	639, 338, 0, 0, 451, 364, 0, 0, 0, 0,
	0, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 376, 452, 266, 0, 87,
	0, 0, 188, 189, 190, 708, 715, 716, 717, 718,
	719, 709, 711, 0, 0, 223, 710, 230, 650, 652,
	651, 661, 662, 663, 664, 665, 666, 667, 648, 713,
	720, 721, 0, 245, 293, 252, 244, 471, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 610, 624, 0, 638, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 622, 0, 0, 0,
	0, 688, 0, 623, 0, 0, 631, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 365, 237, 0, 687, 0, 0, 507, 0, 0,
	685, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 428, 0, 0, 0, 235, 0,
	426, 389, 490, 218, 264, 415, 395, 424, 402, 267,
	0, 0, 425, 339, 476, 409, 487, 508, 509, 243,
	369, 498, 465, 504, 522, 211, 240, 383, 458, 493,
	448, 362, 472, 473, 301, 447, 274, 195, 337, 514,
	209, 434, 227, 216, 478, 496, 269, 413, 202, 460,
	485, 224, 438, 0, 0, 524, 204, 483, 457, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 480,
	481, 236, 525, 213, 503, 206, 0, 502, 371, 475,
	484, 359, 349, 205, 482, 357, 348, 304, 656, 657,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	494, 0, 199, 0, 453, 495, 526, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 0, 470, 488, 499, 506, 512, 513,
	515, 516, 517, 518, 519, 521, 520, 370, 286, 449,
	303, 340, 0, 0, 388, 427, 225, 492, 450, 694,
	686, 643, 698, 645, 695, 696, 640, 641, 644, 697,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 0, 689,
	630, 629, 0, 636, 637, 0, 646, 647, 649, 653,
	654, 655, 658, 659, 660, 668, 670, 671, 669, 672,
	673, 674, 677, 678, 679, 680, 675, 676, 681, 699,
	700, 701, 702, 628, 191, 207, 336, 86, 411, 268,
	523, 501, 497, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 429,
	430, 431, 432, 433, 436, 437, 442, 443, 444, 445,
	446, 454, 455, 459, 477, 479, 491, 505, 510, 435,
	278, 486, 511, 0, 345, 0, 0, 347, 261, 281,
	292, 0, 500, 456, 212, 423, 270, 201, 231, 215,
	239, 254, 257, 296, 356, 363, 392, 397, 275, 251,
	229, 416, 226, 439, 462, 463, 464, 466, 360, 246,
	396, 361, 0, 343, 468, 469, 288, 467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 0, 0, 627, 0, 0, 0, 250, 632,
	0, 0, 0, 334, 247, 0, 0, 393, 0, 197,
	0, 441, 234, 344, 341, 474, 262, 253, 249, 233,
	289, 351, 391, 461, 385, 639, 338, 0, 0, 451,
	364, 0, 0, 0, 0, 0, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 297, 196,
	376, 452, 266, 0, 87, 0, 0, 188, 189, 190,
	708, 715, 716, 717, 718, 719, 709, 711, 0, 0,
	223, 710, 230, 650, 652, 651, 661, 662, 663, 664,
	665, 666, 667, 648, 713, 720, 721, 0, 245, 293,
	252, 244, 471, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 610, 624,
	0, 638, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	621, 622, 0, 0, 0, 0, 688, 0, 623, 0,
	0, 631, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 365, 237, 0, 687,
	0, 0, 507, 0, 0, 685, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 375, 418, 428,
	0, 0, 0, 235, 0, 426, 389, 490, 218, 264,
	415, 395, 424, 402, 267, 2995, 0, 425, 339, 476,
	409, 487, 508, 509, 243, 369, 498, 465, 504, 522,
	211, 240, 383, 458, 493, 448, 362, 472, 473, 301,
	447, 274, 195, 337, 514, 209, 434, 227, 216, 478,
	496, 269, 413, 202, 460, 485, 224, 438, 0, 0,
	524, 204, 483, 457, 358, 298, 299, 203, 0, 414,
	248, 272, 238, 378, 480, 481, 236, 525, 213, 503,
	206, 0, 502, 371, 475, 484, 359, 349, 205, 482,
	357, 348, 304, 656, 657, 260, 283, 407, 342, 408,
	284, 367, 366, 368, 198, 494, 0, 199, 0, 453,
	495, 526, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 382, 406, 404, 410, 0, 470,
	488, 499, 506, 512, 513, 515, 516, 517, 518, 519,
	521, 520, 370, 286, 449, 303, 340, 0, 0, 388,
	427, 225, 492, 450, 694, 686, 643, 698, 645, 695,
	696, 640, 641, 644, 697, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 0, 689, 630, 629, 0, 636, 637,
	0, 646, 647, 649, 653, 654, 655, 658, 659, 660,
	668, 670, 671, 669, 672, 673, 674, 677, 678, 679,
	680, 675, 676, 681, 699, 700, 701, 702, 628, 191,
	207, 336, 0, 411, 268, 523, 501, 497, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 429, 430, 431, 432, 433, 436,
	437, 442, 443, 444, 445, 446, 454, 455, 459, 477,
	479, 491, 505, 510, 435, 278, 486, 511, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 500, 456, 212,
	423, 270, 201, 231, 215, 239, 254, 257, 296, 356,
	363, 392, 397, 275, 251, 229, 416, 226, 439, 462,
	463, 464, 466, 360, 246, 396, 361, 0, 343, 468,
	469, 288, 467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 627,
	0, 0, 0, 250, 632, 0, 0, 0, 334, 247,
	0, 0, 393, 0, 197, 0, 441, 234, 344, 341,
	474, 262, 253, 249, 233, 289, 351, 391, 461, 385,
	639, 338, 0, 0, 451, 364, 0, 0, 0, 0,
	0, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 376, 452, 266, 0, 87,
	0, 1348, 188, 189, 190, 708, 715, 716, 717, 718,
	719, 709, 711, 0, 0, 223, 710, 230, 650, 652,
	651, 661, 662, 663, 664, 665, 666, 667, 648, 713,
	720, 721, 0, 245, 293, 252, 244, 471, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 610, 624, 0, 638, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 622, 0, 0, 0,
	0, 688, 0, 623, 0, 0, 631, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 365, 237, 0, 687, 0, 0, 507, 0, 0,
	685, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 428, 0, 0, 0, 235, 0,
	426, 389, 490, 218, 264, 415, 395, 424, 402, 267,
	0, 0, 425, 339, 476, 409, 487, 508, 509, 243,
	369, 498, 465, 504, 522, 211, 240, 383, 458, 493,
	448, 362, 472, 473, 301, 447, 274, 195, 337, 514,
	209, 434, 227, 216, 478, 496, 269, 413, 202, 460,
	485, 224, 438, 0, 0, 524, 204, 483, 457, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 480,
	481, 236, 525, 213, 503, 206, 0, 502, 371, 475,
	484, 359, 349, 205, 482, 357, 348, 304, 656, 657,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	494, 0, 199, 0, 453, 495, 526, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 0, 470, 488, 499, 506, 512, 513,
	515, 516, 517, 518, 519, 521, 520, 370, 286, 449,
	303, 340, 0, 0, 388, 427, 225, 492, 450, 694,
	686, 643, 698, 645, 695, 696, 640, 641, 644, 697,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 0, 689,
	630, 629, 0, 636, 637, 0, 646, 647, 649, 653,
	654, 655, 658, 659, 660, 668, 670, 671, 669, 672,
	673, 674, 677, 678, 679, 680, 675, 676, 681, 699,
	700, 701, 702, 628, 191, 207, 336, 0, 411, 268,
	523, 501, 497, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 429,
	430, 431, 432, 433, 436, 437, 442, 443, 444, 445,
	446, 454, 455, 459, 477, 479, 491, 505, 510, 435,
	278, 486, 511, 0, 345, 0, 0, 347, 261, 281,
	292, 0, 500, 456, 212, 423, 270, 201, 231, 215,
	239, 254, 257, 296, 356, 363, 392, 397, 275, 251,
	229, 416, 226, 439, 462, 463, 464, 466, 360, 246,
	396, 361, 0, 343, 468, 469, 288, 467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 0, 0, 627, 0, 0, 0, 250, 632,
	0, 0, 0, 334, 247, 0, 0, 393, 0, 197,
	0, 441, 234, 344, 341, 474, 262, 253, 249, 233,
	289, 351, 391, 461, 385, 639, 338, 0, 0, 451,
	364, 0, 0, 0, 0, 0, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 297, 196,
	376, 452, 266, 0, 87, 0, 0, 188, 189, 190,
	708, 715, 716, 717, 718, 719, 709, 711, 0, 0,
	223, 710, 230, 650, 652, 651, 661, 662, 663, 664,
	665, 666, 667, 648, 713, 720, 721, 0, 245, 293,
	252, 244, 471, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 610, 624,
	0, 638, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	621, 622, 803, 0, 0, 0, 688, 0, 623, 0,
	0, 631, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 365, 237, 0, 687,
	0, 0, 507, 0, 0, 685, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 375, 418, 428,
	0, 0, 0, 235, 0, 426, 389, 490, 218, 264,
	415, 395, 424, 402, 267, 0, 0, 425, 339, 476,
	409, 487, 508, 509, 243, 369, 498, 465, 504, 522,
	211, 240, 383, 458, 493, 448, 362, 472, 473, 301,
	447, 274, 195, 337, 514, 209, 434, 227, 216, 478,
	496, 269, 413, 202, 460, 485, 224, 438, 0, 0,
	524, 204, 483, 457, 358, 298, 299, 203, 0, 414,
	248, 272, 238, 378, 480, 481, 236, 525, 213, 503,
	206, 0, 502, 371, 475, 484, 359, 349, 205, 482,
	357, 348, 304, 656, 657, 260, 283, 407, 342, 408,
	284, 367, 366, 368, 198, 494, 0, 199, 0, 453,
	495, 526, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 382, 406, 404, 410, 0, 470,
	488, 499, 506, 512, 513, 515, 516, 517, 518, 519,
	521, 520, 370, 286, 449, 303, 340, 0, 0, 388,
	427, 225, 492, 450, 694, 686, 643, 698, 645, 695,
	696, 640, 641, 644, 697, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 0, 689, 630, 629, 0, 636, 637,
	0, 646, 647, 649, 653, 654, 655, 658, 659, 660,
	668, 670, 671, 669, 672, 673, 674, 677, 678, 679,
	680, 675, 676, 681, 699, 700, 701, 702, 628, 191,
	207, 336, 0, 411, 268, 523, 501, 497, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 429, 430, 431, 432, 433, 436,
	437, 442, 443, 444, 445, 446, 454, 455, 459, 477,
	479, 491, 505, 510, 435, 278, 486, 511, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 500, 456, 212,
	423, 270, 201, 231, 215, 239, 254, 257, 296, 356,
	363, 392, 397, 275, 251, 229, 416, 226, 439, 462,
	463, 464, 466, 360, 246, 396, 361, 0, 343, 468,
	469, 288, 467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 627,
	0, 0, 0, 250, 632, 0, 0, 0, 334, 247,
	0, 0, 393, 0, 197, 0, 441, 234, 344, 341,
	474, 262, 253, 249, 233, 289, 351, 391, 461, 385,
	639, 338, 0, 0, 451, 364, 0, 0, 0, 0,
	0, 634, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 376, 452, 266, 0, 87,
	0, 0, 188, 189, 190, 708, 715, 716, 717, 718,
	719, 709, 711, 0, 0, 223, 710, 230, 650, 652,
	651, 661, 662, 663, 664, 665, 666, 667, 648, 713,
	720, 721, 0, 245, 293, 252, 244, 471, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 610, 624, 0, 638, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 622, 0, 0, 0,
	0, 688, 0, 623, 0, 0, 631, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 365, 237, 0, 687, 0, 0, 507, 0, 0,
	685, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 428, 0, 0, 0, 235, 0,
	426, 389, 490, 218, 264, 415, 395, 424, 402, 267,
	0, 0, 425, 339, 476, 409, 487, 508, 509, 243,
	369, 498, 465, 504, 522, 211, 240, 383, 458, 493,
	448, 362, 472, 473, 301, 447, 274, 195, 337, 514,
	209, 434, 227, 216, 478, 496, 269, 413, 202, 460,
	485, 224, 438, 0, 0, 524, 204, 483, 457, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 480,
	481, 236, 525, 213, 503, 206, 0, 502, 371, 475,
	484, 359, 349, 205, 482, 357, 348, 304, 656, 657,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	494, 0, 199, 0, 453, 495, 526, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 0, 470, 488, 499, 506, 512, 513,
	515, 516, 517, 518, 519, 521, 520, 370, 286, 449,
	303, 340, 0, 0, 388, 427, 225, 492, 450, 694,
	686, 643, 698, 645, 695, 696, 640, 641, 644, 697,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 0, 689,
	630, 629, 0, 636, 637, 0, 646, 647, 649, 653,
	654, 655, 658, 659, 660, 668, 670, 671, 669, 672,
	673, 674, 677, 678, 679, 680, 675, 676, 681, 699,
	700, 701, 702, 628, 191, 207, 336, 0, 411, 268,
	523, 501, 497, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 429,
	430, 431, 432, 433, 436, 437, 442, 443, 444, 445,
	446, 454, 455, 459, 477, 479, 491, 505, 510, 435,
	278, 486, 511, 0, 345, 0, 0, 347, 261, 281,
	292, 0, 500, 456, 212, 423, 270, 201, 231, 215,
	239, 254, 257, 296, 356, 363, 392, 397, 275, 251,
	229, 416, 226, 439, 462, 463, 464, 466, 360, 246,
	396, 361, 0, 343, 468, 469, 288, 467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 0, 0, 627, 0, 0, 0, 250, 632,
	0, 0, 0, 334, 247, 0, 0, 393, 0, 197,
	0, 441, 234, 344, 341, 474, 262, 253, 249, 233,
	289, 351, 391, 461, 385, 639, 338, 0, 0, 451,
	364, 0, 0, 0, 0, 0, 634, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 297, 196,
	376, 452, 266, 0, 87, 0, 0, 188, 189, 190,
	708, 715, 716, 717, 718, 719, 709, 711, 0, 0,
	223, 710, 230, 650, 652, 651, 661, 662, 663, 664,
	665, 666, 667, 648, 713, 720, 721, 0, 245, 293,
	252, 244, 471, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 624,
	0, 638, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	621, 622, 0, 0, 0, 0, 688, 0, 623, 0,
	0, 631, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 365, 237, 0, 687,
	0, 0, 507, 0, 0, 685, 0, 0, 0, 0,
	333, 0, 302, 192, 210, 0, 0, 375, 418, 428,
	0, 0, 0, 235, 0, 426, 389, 490, 218, 264,
	415, 395, 424, 402, 267, 0, 0, 425, 339, 476,
	409, 487, 508, 509, 243, 369, 498, 465, 504, 522,
	211, 240, 383, 458, 493, 448, 362, 472, 473, 301,
	447, 274, 195, 337, 514, 209, 434, 227, 216, 478,
	496, 269, 413, 202, 460, 485, 224, 438, 0, 0,
	524, 204, 483, 457, 358, 298, 299, 203, 0, 414,
	248, 272, 238, 378, 480, 481, 236, 525, 213, 503,
	206, 0, 502, 371, 475, 484, 359, 349, 205, 482,
	357, 348, 304, 656, 657, 260, 283, 407, 342, 408,
	284, 367, 366, 368, 198, 494, 0, 199, 0, 453,
	495, 526, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 382, 406, 404, 410, 0, 470,
	488, 499, 506, 512, 513, 515, 516, 517, 518, 519,
	521, 520, 370, 286, 449, 303, 340, 0, 0, 388,
	427, 225, 492, 450, 694, 686, 643, 698, 645, 695,
	696, 640, 641, 644, 697, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 0, 689, 630, 629, 0, 636, 637,
	0, 646, 647, 649, 653, 654, 655, 658, 659, 660,
	668, 670, 671, 669, 672, 673, 674, 677, 678, 679,
	680, 675, 676, 681, 699, 700, 701, 702, 628, 191,
	207, 336, 0, 411, 268, 523, 501, 497, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 429, 430, 431, 432, 433, 436,
	437, 442, 443, 444, 445, 446, 454, 455, 459, 477,
	479, 491, 505, 510, 435, 278, 486, 511, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 500, 456, 212,
	423, 270, 201, 231, 215, 239, 254, 257, 296, 356,
	363, 392, 397, 275, 251, 229, 416, 226, 439, 462,
	463, 464, 466, 360, 246, 396, 361, 0, 343, 468,
	469, 288, 467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 393, 0, 197, 0, 441, 234, 344, 341,
	474, 262, 253, 249, 233, 289, 351, 391, 461, 385,
	0, 338, 0, 0, 451, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 376, 452, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 715, 716, 0, 0,
	0, 0, 1697, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 471, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 365, 237, 0, 0, 0, 0, 507, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 428, 0, 0, 0, 235, 0,
	426, 389, 490, 218, 264, 415, 395, 424, 402, 267,
	0, 0, 425, 339, 476, 409, 487, 508, 509, 243,
	369, 498, 465, 504, 522, 211, 240, 383, 458, 493,
	448, 362, 472, 473, 301, 447, 274, 195, 337, 514,
	209, 434, 227, 216, 478, 496, 269, 413, 202, 460,
	485, 224, 438, 0, 0, 524, 204, 483, 457, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 480,
	481, 236, 525, 213, 503, 206, 0, 502, 371, 475,
	484, 359, 349, 205, 482, 357, 348, 304, 323, 324,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	494, 0, 199, 0, 453, 495, 526, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 0, 470, 488, 499, 506, 512, 513,
	515, 516, 517, 518, 519, 521, 520, 370, 286, 449,
	303, 340, 0, 0, 388, 427, 225, 492, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 545, 350,
	440, 489, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 419,
	420, 421, 422, 0, 191, 207, 336, 0, 411, 268,
	523, 501, 497, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 429,
	430, 431, 432, 433, 436, 437, 442, 443, 444, 445,
	446, 454, 455, 459, 477, 479, 491, 505, 510, 435,
	278, 486, 511, 0, 345, 0, 0, 347, 261, 281,
	292, 0, 500, 456, 212, 423, 270, 201, 231, 215,
	239, 254, 257, 296, 356, 363, 392, 397, 275, 251,
	229, 416, 226, 439, 462, 463, 464, 466, 360, 246,
	396, 361, 0, 343, 468, 469, 288, 467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 334, 247, 0, 0, 393, 0, 197,
	0, 441, 234, 344, 341, 474, 262, 253, 249, 233,
	289, 351, 391, 461, 385, 0, 338, 0, 0, 451,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 232, 297, 196,
	376, 452, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 319, 328, 327, 308, 309, 311, 313,
	318, 325, 331, 0, 0, 0, 0, 0, 245, 293,
	252, 244, 471, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 1023, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 365, 237, 0, 0,
	0, 1022, 507, 0, 0, 0, 0, 0, 1019, 1020,
	333, 980, 302, 192, 210, 1013, 1017, 375, 418, 428,
	0, 0, 0, 235, 0, 426, 389, 490, 218, 264,
	415, 395, 424, 402, 267, 0, 0, 425, 339, 476,
	409, 487, 508, 509, 243, 369, 498, 465, 504, 522,
	211, 240, 383, 458, 493, 448, 362, 472, 473, 301,
	447, 274, 195, 337, 514, 209, 434, 227, 216, 478,
	496, 269, 413, 202, 460, 485, 224, 438, 0, 0,
	524, 204, 483, 457, 358, 298, 299, 203, 0, 414,
	248, 272, 238, 378, 480, 481, 236, 525, 213, 503,
	206, 0, 502, 371, 475, 484, 359, 349, 205, 482,
	357, 348, 304, 323, 324, 260, 283, 407, 342, 408,
	284, 367, 366, 368, 198, 494, 0, 199, 0, 453,
	495, 526, 219, 220, 222, 0, 259, 263, 271, 273,
	279, 280, 287, 335, 382, 406, 404, 410, 0, 470,
	488, 499, 506, 512, 513, 515, 516, 517, 518, 519,
	521, 520, 370, 286, 449, 303, 340, 0, 0, 388,
	427, 225, 492, 450, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 350, 440, 489, 305, 317, 320,
	310, 329, 0, 330, 306, 307, 312, 314, 315, 316,
	321, 322, 326, 332, 419, 420, 421, 422, 0, 191,
	207, 336, 0, 411, 268, 523, 501, 497, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 277, 282, 285, 290, 291, 294, 300,
	346, 352, 353, 354, 355, 372, 373, 374, 377, 380,
	381, 384, 386, 387, 390, 394, 398, 399, 400, 401,
	403, 405, 412, 417, 429, 430, 431, 432, 433, 436,
	437, 442, 443, 444, 445, 446, 454, 455, 459, 477,
	479, 491, 505, 510, 435, 278, 486, 511, 0, 345,
	0, 0, 347, 261, 281, 292, 0, 500, 456, 212,
	423, 270, 201, 231, 215, 239, 254, 257, 296, 356,
	363, 392, 397, 275, 251, 229, 416, 226, 439, 462,
	463, 464, 466, 360, 246, 396, 1367, 1199, 343, 468,
	469, 288, 467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 379, 0, 0, 0, 1369, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 334, 247,
	0, 0, 393, 0, 197, 0, 441, 234, 344, 341,
	474, 262, 253, 249, 233, 289, 351, 391, 461, 385,
	0, 338, 0, 0, 451, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 295, 232, 297, 196, 376, 452, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 1371, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 319, 328,
	327, 308, 309, 311, 313, 318, 325, 331, 0, 0,
	0, 0, 0, 245, 293, 252, 244, 471, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 1195,
	0, 1196, 1197, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 365, 237, 0, 0, 0, 0, 507, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 302, 192, 210,
	0, 0, 375, 418, 428, 0, 0, 0, 235, 0,
	426, 389, 490, 218, 264, 415, 395, 424, 402, 267,
	0, 0, 425, 339, 476, 409, 487, 508, 509, 243,
	369, 498, 465, 504, 522, 211, 240, 383, 458, 493,
	448, 362, 472, 473, 301, 447, 274, 195, 337, 514,
	209, 434, 227, 216, 478, 496, 269, 413, 202, 460,
	485, 224, 438, 0, 0, 524, 204, 483, 457, 358,
	298, 299, 203, 0, 414, 248, 272, 238, 378, 480,
	481, 236, 525, 213, 503, 206, 0, 502, 371, 475,
	484, 359, 349, 205, 482, 357, 348, 304, 323, 324,
	260, 283, 407, 342, 408, 284, 367, 366, 368, 198,
	494, 0, 199, 0, 453, 495, 526, 219, 220, 222,
	0, 259, 263, 271, 273, 279, 280, 287, 335, 382,
	406, 404, 410, 0, 470, 488, 499, 506, 512, 513,
	515, 516, 517, 518, 519, 521, 520, 370, 286, 449,
	303, 340, 0, 0, 388, 427, 225, 492, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 545, 350,
	440, 489, 305, 317, 320, 310, 329, 0, 330, 306,
	307, 312, 314, 315, 316, 321, 322, 326, 332, 419,
	420, 421, 422, 0, 191, 207, 336, 0, 411, 268,
	523, 501, 497, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 277, 282,
	285, 290, 291, 294, 300, 346, 352, 353, 354, 355,
	372, 373, 374, 377, 380, 381, 384, 386, 387, 390,
	394, 398, 399, 400, 401, 403, 405, 412, 417, 429,
	430, 431, 432, 433, 436, 437, 442, 443, 444, 445,
	446, 454, 455, 459, 477, 479, 491, 505, 510, 435,
	278, 486, 511, 0, 345, 0, 0, 347, 261, 281,
	292, 0, 500, 456, 212, 423, 270, 201, 231, 215,
	239, 254, 257, 296, 356, 363, 392, 397, 275, 251,
	229, 416, 226, 439, 462, 463, 464, 466, 360, 246,
	396, 0, 361, 343, 468, 469, 288, 78, 467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 334, 247, 0, 0, 393, 0,
	197, 0, 441, 234, 344, 341, 474, 262, 253, 249,
	233, 289, 351, 391, 461, 385, 0, 338, 0, 0,
	451, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 295, 232, 297,
	196, 376, 452, 266, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 319, 328, 327, 308, 309, 311,
	313, 318, 325, 331, 0, 0, 0, 0, 0, 245,
	293, 252, 244, 471, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 365, 237, 0,
	0, 0, 0, 507, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 302, 192, 210, 0, 0, 375, 418,
	428, 0, 0, 0, 235, 0, 426, 389, 490, 218,
	264, 415, 395, 424, 402, 267, 0, 0, 425, 339,
	476, 409, 487, 508, 509, 243, 369, 498, 465, 504,
	522, 211, 240, 383, 458, 493, 448, 362, 472, 473,
	301, 447, 274, 195, 337, 514, 209, 434, 227, 216,
	478, 496, 269, 413, 202, 460, 485, 224, 438, 0,
	0, 524, 204, 483, 457, 358, 298, 299, 203, 0,
	414, 248, 272, 238, 378, 480, 481, 236, 525, 213,
	503, 206, 0, 502, 371, 475, 484, 359, 349, 205,
	482, 357, 348, 304, 323, 324, 260, 283, 407, 342,
	408, 284, 367, 366, 368, 198, 494, 0, 199, 0,
	453, 495, 526, 219, 220, 222, 0, 259, 263, 271,
	273, 279, 280, 287, 335, 382, 406, 404, 410, 0,
	470, 488, 499, 506, 512, 513, 515, 516, 517, 518,
	519, 521, 520, 370, 286, 449, 303, 340, 0, 0,
	388, 427, 225, 492, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 545, 350, 440, 489, 305, 317,
	320, 310, 329, 0, 330, 306, 307, 312, 314, 315,
	316, 321, 322, 326, 332, 419, 420, 421, 422, 0,
	191, 207, 336, 86, 411, 268, 523, 501, 497, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 1859, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 277, 282, 285, 290, 291, 294,
	300, 346, 352, 353, 354, 355, 372, 373, 374, 377,
	380, 381, 384, 386, 387, 390, 394, 398, 399, 400,
	401, 403, 405, 412, 417, 429, 430, 431, 432, 433,
	436, 437, 442, 443, 444, 445, 446, 454, 455, 459,
	477, 479, 491, 505, 510, 435, 278, 486, 511, 0,
	345, 0, 0, 347, 261, 281, 292, 0, 500, 456,
	212, 423, 270, 201, 231, 215, 239, 254, 257, 296,
	356, 363, 392, 397, 275, 251, 229, 416, 226, 439,
	462, 463, 464, 466, 360, 246, 396, 361, 0, 343,
	468, 469, 288, 467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 334,
	247, 0, 0, 393, 0, 197, 0, 441, 234, 344,
	341, 474, 262, 253, 249, 233, 289, 351, 391, 461,
	385, 0, 338, 0, 0, 451, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 232, 297, 196, 376, 452, 266, 0,
	0, 0, 0, 188, 189, 190, 1310, 1313, 0, 0,
	0, 0, 1309, 1312, 0, 0, 223, 1308, 230, 319,
	328, 327, 308, 309, 311, 313, 318, 325, 331, 0,
	0, 0, 0, 0, 245, 293, 252, 244, 471, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 365, 237, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 302, 192,
	210, 0, 0, 375, 418, 428, 0, 0, 0, 235,
	0, 426, 389, 490, 218, 264, 415, 395, 424, 402,
	267, 0, 0, 425, 339, 476, 409, 487, 508, 509,
	243, 369, 498, 465, 504, 522, 211, 240, 383, 458,
	493, 448, 362, 472, 473, 301, 447, 274, 195, 337,
	514, 209, 434, 227, 216, 478, 496, 269, 413, 202,
	460, 485, 224, 438, 0, 0, 524, 204, 483, 457,
	358, 298, 299, 203, 0, 414, 248, 272, 238, 378,
	480, 481, 236, 525, 213, 503, 206, 0, 502, 371,
	475, 484, 359, 349, 205, 482, 357, 348, 304, 323,
	324, 260, 283, 407, 342, 408, 284, 367, 366, 368,
	198, 494, 0, 199, 0, 453, 495, 526, 219, 220,
	222, 0, 259, 263, 271, 273, 279, 280, 287, 335,
	382, 406, 404, 410, 0, 470, 488, 499, 506, 512,
	513, 515, 516, 517, 518, 519, 521, 520, 370, 286,
	449, 303, 340, 0, 0, 388, 427, 225, 492, 450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	350, 440, 489, 305, 317, 320, 310, 329, 0, 330,
	306, 307, 312, 314, 315, 316, 321, 322, 326, 332,
	419, 420, 421, 422, 0, 191, 207, 336, 0, 411,
	268, 523, 501, 497, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 277,
	282, 285, 290, 291, 294, 300, 346, 352, 353, 354,
	355, 372, 373, 374, 377, 380, 381, 384, 386, 387,
	390, 394, 398, 399, 400, 401, 403, 405, 412, 417,
	429, 430, 431, 432, 433, 436, 437, 442, 443, 444,
	445, 446, 454, 455, 459, 477, 479, 491, 505, 510,
	435, 278, 486, 511, 0, 345, 0, 0, 347, 261,
	281, 292, 0, 500, 456, 212, 423, 270, 201, 231,
	215, 239, 254, 257, 296, 356, 363, 392, 397, 275,
	251, 229, 416, 226, 439, 462, 463, 464, 466, 360,
	246, 396, 0, 361, 343, 468, 469, 288, 78, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 87, 0, 1348, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 86, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 1859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 1812, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 1549, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 1810, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 980, 302,
	192, 210, 978, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 1812, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 1549, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 1348, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 2920, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 1693, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 2157, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 2142, 0, 0, 0, 2143,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 1392, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 1391, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 3022, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 2920, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 1861, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 1371, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 1647,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 1517, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 1515, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 1513, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 1511, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 1509, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 1505, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 1503, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 1501, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 1476, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 1376, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 1172, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 785, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 602, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 601, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 548, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 3027, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 361, 0, 343, 468, 469, 288, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 0, 0, 0, 334, 247, 0, 0, 393,
	0, 197, 0, 441, 234, 344, 341, 474, 262, 253,
	249, 233, 289, 351, 391, 461, 385, 0, 338, 0,
	0, 451, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 295, 232,
	297, 196, 376, 452, 266, 0, 0, 0, 0, 188,
	2627, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 319, 328, 327, 308, 309,
	311, 313, 318, 325, 331, 0, 0, 0, 0, 0,
	245, 293, 252, 244, 471, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 365, 237,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 302, 192, 210, 0, 0, 375,
	418, 428, 0, 0, 0, 235, 0, 426, 389, 490,
	218, 264, 415, 395, 424, 402, 267, 0, 0, 425,
	339, 476, 409, 487, 508, 509, 243, 369, 498, 465,
	504, 522, 211, 240, 383, 458, 493, 448, 362, 472,
	473, 301, 447, 274, 195, 337, 514, 209, 434, 227,
	216, 478, 496, 269, 413, 202, 460, 485, 224, 438,
	0, 0, 524, 204, 483, 457, 358, 298, 299, 203,
	0, 414, 248, 272, 238, 378, 480, 481, 236, 525,
	213, 503, 206, 0, 502, 371, 475, 484, 359, 349,
	205, 482, 357, 348, 304, 323, 324, 260, 283, 407,
	342, 408, 284, 367, 366, 368, 198, 494, 0, 199,
	0, 453, 495, 526, 219, 220, 222, 0, 259, 263,
	271, 273, 279, 280, 287, 335, 382, 406, 404, 410,
	0, 470, 488, 499, 506, 512, 513, 515, 516, 517,
	518, 519, 521, 520, 370, 286, 449, 303, 340, 0,
	0, 388, 427, 225, 492, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 350, 440, 489, 305,
	317, 320, 310, 329, 0, 330, 306, 307, 312, 314,
	315, 316, 321, 322, 326, 332, 419, 420, 421, 422,
	0, 191, 207, 336, 0, 411, 268, 523, 501, 497,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 277, 282, 285, 290, 291,
	294, 300, 346, 352, 353, 354, 355, 372, 373, 374,
	377, 380, 381, 384, 386, 387, 390, 394, 398, 399,
	400, 401, 403, 405, 412, 417, 429, 430, 431, 432,
	433, 436, 437, 442, 443, 444, 445, 446, 454, 455,
	459, 477, 479, 491, 505, 510, 435, 278, 486, 511,
	0, 345, 0, 0, 347, 261, 281, 292, 0, 500,
	456, 212, 423, 270, 201, 231, 215, 239, 254, 257,
	296, 356, 363, 392, 397, 275, 251, 229, 416, 226,
	439, 462, 463, 464, 466, 360, 246, 396, 361, 0,
	343, 468, 469, 288, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	334, 247, 0, 0, 393, 0, 197, 0, 441, 234,
	344, 341, 474, 262, 253, 249, 233, 289, 351, 391,
	461, 385, 0, 338, 0, 0, 451, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 295, 232, 297, 196, 376, 452, 266,
	0, 0, 0, 0, 188, 2138, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	319, 328, 327, 308, 309, 311, 313, 318, 325, 331,
	0, 0, 0, 0, 0, 245, 293, 252, 244, 471,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 365, 237, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 302,
	192, 210, 0, 0, 375, 418, 428, 0, 0, 0,
	235, 0, 426, 389, 490, 218, 264, 415, 395, 424,
	402, 267, 0, 0, 425, 339, 476, 409, 487, 508,
	509, 243, 369, 498, 465, 504, 522, 211, 240, 383,
	458, 493, 448, 362, 472, 473, 301, 447, 274, 195,
	337, 514, 209, 434, 227, 216, 478, 496, 269, 413,
	202, 460, 485, 224, 438, 0, 0, 524, 204, 483,
	457, 358, 298, 299, 203, 0, 414, 248, 272, 238,
	378, 480, 481, 236, 525, 213, 503, 206, 0, 502,
	371, 475, 484, 359, 349, 205, 482, 357, 348, 304,
	323, 324, 260, 283, 407, 342, 408, 284, 367, 366,
	368, 198, 494, 0, 199, 0, 453, 495, 526, 219,
	220, 222, 0, 259, 263, 271, 273, 279, 280, 287,
	335, 382, 406, 404, 410, 0, 470, 488, 499, 506,
	512, 513, 515, 516, 517, 518, 519, 521, 520, 370,
	286, 449, 303, 340, 0, 0, 388, 427, 225, 492,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	545, 350, 440, 489, 305, 317, 320, 310, 329, 0,
	330, 306, 307, 312, 314, 315, 316, 321, 322, 326,
	332, 419, 420, 421, 422, 0, 191, 207, 336, 0,
	411, 268, 523, 501, 497, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	277, 282, 285, 290, 291, 294, 300, 346, 352, 353,
	354, 355, 372, 373, 374, 377, 380, 381, 384, 386,
	387, 390, 394, 398, 399, 400, 401, 403, 405, 412,
	417, 429, 430, 431, 432, 433, 436, 437, 442, 443,
	444, 445, 446, 454, 455, 459, 477, 479, 491, 505,
	510, 435, 278, 486, 511, 0, 345, 0, 0, 347,
	261, 281, 292, 0, 500, 456, 212, 423, 270, 201,
	231, 215, 239, 254, 257, 296, 356, 363, 392, 397,
	275, 251, 229, 416, 226, 439, 462, 463, 464, 466,
	360, 246, 396, 0, 0, 343, 468, 469, 288,
}

var yyPact = [...]int{
	3218, -1000, -412, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2036, 2055, -1000, -1000,
	-1000, -1000, 2199, -1000, 765, 1784, -1000, 2033, 352, -1000,
	42594, 503, -1000, 41384, 502, 118, 42594, -1000, 154, -1000,
	150, 42594, 170, 40779, -1000, -1000, -294, 18392, 1987, 24,
	23, 42594, -1000, -1000, -1000, -1000, 2159, 1760, -1000, 379,
	-1000, -1000, -1000, -1000, -1000, -1000, 40174, -1000, -1000, -1000,
	2043, 2024, 2213, 689, 1973, -1000, 2101, 1760, -1000, 18392,
	2146, 2084, 17787, -1000, 17787, 447, -1000, -1000, 13545, -1000,
	-1000, 24444, 42594, 30494, 330, -1000, 2033, -1000, -1000, -1000,
	88, -1000, 354, 1688, -1000, 1685, -1000, 663, 718, 377,
	492, 484, 375, 370, 368, 366, 365, 363, 360, 356,
	388, -1000, 711, 711, -164, -168, 416, 454, 439, 439,
	474, 2005, 2003, -1000, 734, -1000, 711, 711, 711, 357,
	711, 711, 711, 711, 326, 325, 711, 711, 711, 711,
	711, 711, 711, 711, 711, 711, 711, 711, 711, 711,
	711, 711, 711, 307, 2033, 300, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 42594, 237, 42594, -1000,
	590, 42594, 856, 856, 171, 856, 856, 856, 856, 153,
	657, 22, -1000, 152, 275, 173, 283, 822, 287, -1000,
	-1000, 278, 822, 1234, -1000, 692, 151, -1000, 856, 856,
	-1000, 11101, 162, 11101, 11101, -1000, 2016, -1000, -1000, -1000,
	-1000, 1239, -1000, 473, -1000, -1000, -1000, -1000, 42594, 39569,
	336, 727, -1000, -1000, -1000, 149, -1000, -1000, 1406, 1090,
	18392, 1208, -1000, 1268, 652, -1000, -1000, -1000, -1000, -1000,
	548, 18997, 18997, 18997, 18997, -1000, -1000, 1696, 1696, 1696,
	1696, 18997, 1696, 18997, 1696, 1696, 1696, 1696, 18392, 1696,
	1696, 1696, -1000, 1696, 1696, 1696, 1696, 1696, 1696, 1696,
	1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696,
	1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696,
	1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696,
	1696, 1696, -1000, 1696, 589, 1696, 1696, 1696, 1696, 1696,
	-1000, -1000, -1000, -1000, 1696, 1696, 1696, 1696, 1696, 1696,
	1696, 1696, 1696, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22023, -1000, 15972, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 42594, -1000, 1696, 196, 42594,
	42594, 383, 2101, 1760, -1000, 2159, 2117, 379, -1000, 2414,
	1391, 1419, 1246, 1760, 1655, 42594, -1000, 1706, -1000, -1000,
	-1000, 1913, 1150, 1232, -1000, -1000, -1000, -1000, 1886, 18392,
	-1000, -1000, 2192, -1000, 20812, 585, 833, 2191, 38964, -1000,
	447, 447, 1678, 12934, -48, -1000, -1000, -1000, 722, 28074,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2016, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1651, 42594, -1000, -1000, 3392, 1164, -1000,
	1782, -1000, 1626, -1000, 1752, 18392, 1771, 501, 1164, 487,
	486, 485, -1000, -99, -1000, -1000, -1000, -1000, -1000, -1000,
	711, 711, 711, -1000, 362, 2140, 352, 6458, -1000, -1000,
	-1000, 38359, 1780, 1164, -1000, 1774, -1000, 782, 542, 583,
	583, 1164, -1000, -1000, 42594, 1164, 780, 775, 1164, 1164,
	42594, 42594, -1000, 37754, -1000, 37149, 36544, 1072, 42594, 35939,
	35334, 34729, 34124, 33519, -1000, 1901, -1000, 1828, -1000, -1000,
	-1000, 42594, 1164, 1164, 42594, 42594, 335, -1000, -1000, 42594,
	1164, -1000, -1000, 1071, 1064, 1063, 711, 711, 1059, 1226,
	1223, 1219, 711, 711, 1042, 1205, 29284, 1185, 248, 1041,
	1039, 1034, 1056, 1183, 197, 1177, 1054, 919, 1008, 42594,
	1772, 42594, -1000, 252, 698, 394, 716, 2033, 1984, 1670,
	467, 500, 1164, 444, 444, 42594, -1000, 11712, -1000, -1000,
	1176, 18392, -1000, 826, 822, 822, -1000, -1000, -1000, -1000,
	-1000, -1000, 856, 42594, 826, -1000, -1000, -1000, 822, 856,
	42594, 856, 856, 856, 856, 822, 822, 822, 856, 42594,
	42594, 42594, 42594, 42594, 42594, 42594, 42594, 42594, 11101, 692,
	856, -311, -1000, 1175, -1000, 1889, -1000, -1000, -1000, -1000,
	-1000, -1000, 11101, 11101, -1000, -1000, -1000, -1000, 168, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -45, 1666,
	32914, -1000, -312, -315, -319, -320, -1000, -1000, -1000, -326,
	-327, -1000, -1000, -1000, 18392, 18392, 18392, 18392, -192, 18392,
	-1000, 980, 18997, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	899, 699, 18997, 18997, 18997, 18997, 18997, 18997, 18997, 18997,
	18997, 18997, 18997, 18997, 18997, 18997, 18997, 26259, 6561, 6561,
	652, 652, 652, 652, -1000, 17787, 18392, 18392, 652, -1000,
	1164, 32309, 17787, 17787, 18392, 2015, 733, 1090, 42594, -1000,
	1246, -1000, -1000, -1000, 1069, -1000, 42594, 42594, 1300, 18392,
	18392, 18392, 18392, 18392, 18392, 14761, 18392, 18392, 18392, 18392,
	18392, 18392, 18392, 18392, 18392, 18392, 18392, 18392, 18392, 18392,
	18392, 18392, 18392, 18392, 18392, 18392, 18392, 18392, 18392, 18392,
	18392, 18392, 14156, 11712, 17787, 17787, 17787, 17787, 17787, -1000,
	-1000, -1000, -1000, -1000, 18392, 18392, 18392, 18392, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 573, 1357, 1442, 1499, -1000,
	1660, -1000, -142, 23839, 18392, 1168, 2190, 1820, 42594, -1000,
	-1000, -1000, 2101, -1000, 2101, 1357, 2346, 1924, 17787, -1000,
	-1000, 2346, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1426, -1000, 42594, 1655, 2074, 42594, 1902, 1165, 317, -1000,
	18392, 18392, 1653, -1000, 1097, 42594, -1000, -192, -1000, 31704,
	-1000, -1000, 10490, -1000, 42594, 349, 42594, -1000, 23234, 31099,
	12323, -48, -1000, 12323, 1490, -1000, 4, -3, 15366, 643,
	-1000, -1000, -1000, 416, 20207, 1371, 643, 96, -1000, -1000,
	-1000, 1752, -1000, 1752, 1752, 1752, 1752, 317, 317, 317,
	317, -1000, -1000, -1000, -1000, -1000, 1770, 1767, -1000, 1752,
	1752, 1752, 1752, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1765, 1765, 1765, 1753, 1753, 424, -1000, 18392, 314, 30494,
	2058, 1004, 1787, 252, 445, 1819, 1164, 1164, 1164, 445,
	-1000, 1452, 1381, 1325, -1000, -404, 1617, -1000, -1000, 2139,
	-1000, -1000, 824, 806, 804, 922, 42594, 219, 339, -1000,
	411, -1000, 30494, 1164, 774, 583, 1164, -1000, 1164, -1000,
	-1000, -1000, -1000, -1000, 1164, -1000, -1000, 1612, -1000, 1417,
	840, 800, 838, 795, 1612, -1000, -1000, -144, 1612, -1000,
	1612, -1000, 1612, -1000, 1612, -1000, 1612, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 741, 157, -237, 42594,
	219, 26259, -1000, 451, -1000, -1000, -1000, 26259, 26259, -1000,
	-1000, -1000, -1000, 1157, 1156, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -389, 42594, -1000, 246, 715, 332,
	361, 340, 42594, 267, 2092, 2090, 2078, 302, 321, 42594,
	42594, 444, 1859, 42594, 2062, 42594, -1000, -1000, -1000, -1000,
	-1000, 1090, 42594, -1000, -1000, 856, 856, -1000, -1000, 42594,
	856, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 856,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 42594, -1000, -1000, -1000, -1000,
	42594, -1000, -1000, -1000, -1000, -1000, 167, -6, 324, -1000,
	-1000, -1000, -1000, -1000, 2098, -1000, 1090, 759, 742, -1000,
	1696, 746, -1000, -1000, 831, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 899, 18997, 18997, 18997, 1178, 499, 1484, 949,
	1517, 827, 827, 880, 880, 659, 659, 659, 659, 659,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1154, -1000,
	1567, -1000, 1748, 1628, 1246, -1000, 1567, 1567, 1874, 17787,
	-1000, -1000, 732, -1000, 18392, 1246, -1000, -1000, 1246, 1246,
	1582, 1519, 2187, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1462, 1787, 1787, 1787, 1787, 1787,
	18392, 1124, -1000, -1000, -1000, 3102, 3094, 1246, 1406, 1246,
	1512, -1000, 3020, 1787, 3013, 2999, 2940, 1891, 2893, 2883,
	2815, 1787, 1787, 1787, 1777, 2811, 2798, 2793, 2782, 2745,
	2700, 2670, 2606, 2518, 1787, 1246, 17787, 17787, 1501, 1696,
	567, -1000, 1567, 1246, 1246, 1567, 1567, 2498, 2441, 2432,
	2428, 11712, 1246, -1000, 42594, -1000, -306, -1000, -61, 626,
	1696, -1000, 29284, 1246, -1000, 3906, -1000, 43804, -1000, -1000,
	-1000, -1000, -1000, 27469, 1604, 2346, -1000, -1000, 1696, 1608,
	-1000, -1000, 317, 41, 26864, -1000, -1000, 1090, 1090, 18392,
	-1000, -1000, -1000, -1000, -1000, -1000, 564, 2168, 393, 1696,
	-1000, 1521, 2329, -1000, -1000, -1000, 2071, 21418, -1000, 1696,
	1696, 42594, 1684, 1507, -1000, 560, -1000, 1490, -48, -10,
	-1000, -1000, -1000, -1000, 1090, -1000, 1277, 355, 1743, -1000,
	414, -1000, -1000, -1000, -1000, 1994, 56, -1000, -1000, -1000,
	317, 317, -1000, -1000, -1000, -1000, -1000, -1000, 1151, 1151,
	-1000, -1000, -1000, -1000, -1000, 985, -1000, -1000, -1000, 979,
	-1000, -1000, 2424, 1840, 314, -1000, -1000, 711, 1149, -1000,
	-1000, 1998, 711, 711, 42594, -1000, -1000, 1331, 2058, 246,
	42594, 748, 1858, -1000, 1819, 1819, 1819, 42594, -1000, -1000,
	-1000, -1000, -1000, -1000, -391, 66, 322, -1000, -1000, -1000,
	5267, 42594, 1600, -1000, 205, -1000, 1301, -1000, 42594, -1000,
	1585, 1764, 1164, 1164, -1000, -1000, -1000, 42594, 1696, -1000,
	-1000, -1000, -1000, 489, 2029, 247, -1000, -1000, -209, -1000,
	-1000, 219, 205, 643, 1164, -1000, -1000, -1000, -1000, -1000,
	-392, 1580, 478, 209, 259, 42594, 42594, 42594, 42594, 42594,
	536, -1000, -1000, -1000, -1000, 181, -1000, -1000, 181, -1000,
	-1000, -1000, -1000, 310, 449, -1000, 42594, 42594, 593, -1000,
	-1000, -1000, 822, -1000, -1000, 822, -1000, -1000, -1000, -1000,
	-1000, 2026, 42594, -44, -350, -1000, -343, 18392, -1000, -1000,
	-1000, -1000, 1142, 483, 1484, 18997, 18997, 17787, -137, 760,
	760, 26259, -1000, -1000, -1000, 18392, 18392, 1459, 719, -1000,
	18392, 1058, -1000, -1000, -1000, 18392, 18392, 18392, 1246, 256,
	-1000, -1000, -1000, -1000, -1000, 2184, -1000, 18392, 18392, 18392,
	-1000, -1000, 18392, 18392, -1000, 18392, 18392, 19602, 1246, 19602,
	18392, 18392, 19602, -1000, -1000, -1000, -1000, 19602, 18392, 18392,
	18392, 18392, 18392, 18392, 18392, 18392, 18392, -1000, -1000, 1567,
	1567, 17787, 11712, -1000, -1000, -1000, -1000, -1000, 18392, 18392,
	18392, 18392, -1000, -1000, -1000, -1000, -1000, 626, -1000, 583,
	583, 583, 42594, -1000, -1000, -1000, -1000, -1000, -1000, 1485,
	2097, -1000, 1932, 1930, 2174, 2168, -1000, 23234, 2346, -1000,
	-1000, 42594, -296, -1000, 1975, 1953, -1000, -1000, -1000, -1000,
	9879, 2101, 18392, 1855, 42594, 1696, -1000, 22629, 42594, 42594,
	23234, 23234, 23234, 23234, 23234, -1000, 1890, 1880, -1000, 1888,
	1872, 1900, 42594, -1000, 1549, 1246, 2117, 21418, 379, 18392,
	25049, 1620, 23234, -1000, -1000, 23234, 42594, 9268, -1000, -1000,
	-57, -50, -1000, -1000, -1000, -1000, 416, -1000, -1000, 513,
	2066, 1992, -1000, -1000, -1000, -1000, 1538, -1000, 1535, 1482,
	1509, 157, -1000, 1738, 2023, 711, 711, -1000, 974, -1000,
	1164, 1146, 1137, -1000, -1000, -1000, 476, -1000, 2061, 42594,
	1853, 1852, 1851, -1000, -400, 971, 1763, 1702, 18392, 1762,
	2136, 1436, 42594, -1000, -1000, 42594, -1000, 187, -1000, 314,
	42594, -1000, -1000, -1000, 339, 42594, -1000, 5746, -1000, -1000,
	-1000, 205, -1000, -1000, -1000, -1000, -1000, -1000, 42594, 245,
	-1000, 1757, 1100, -1000, -1000, 1802, -1000, -1000, -1000, -1000,
	190, 331, 177, 1132, 177, -1000, 42594, 579, 1840, 42594,
	-1000, -1000, -1000, 856, 856, -1000, -1000, 2009, -1000, 1164,
	1787, 18997, 18997, -1000, 652, -1000, 1696, 1246, 1752, 1752,
	-1000, 1752, 1753, -1000, 1752, 141, 1752, 137, 1752, -1000,
	-1000, 1246, 1246, 1733, 1766, -106, -1000, 1090, 18392, 2378,
	2320, 1787, -1000, 1745, 1727, 18392, 1787, 1787, 1787, -1000,
	1090, 1891, 2254, 1425, -1000, -1000, -1000, -1000, 1474, 1787,
	2238, -285, 1246, 1504, 1504, 1504, 1504, 1504, 1499, 1499,
	1499, 1499, -1000, -1000, 1246, -1000, 1697, 1689, 2228, 1671,
	-1000, 2096, 2096, 2096, 1480, 43199, 42594, -1000, -1000, -1000,
	-1000, 2168, 2163, 1439, -1000, -1000, 41, 426, -1000, 1964,
	1953, -1000, 2135, 1971, 2131, -1000, -1000, -1000, 1090, -1000,
	2041, 1330, -1000, 713, 1403, -1000, -1000, 17182, 1493, 1918,
	559, 1480, 1615, 2329, 1805, 1846, 2076, -1000, -1000, -1000,
	-1000, 1879, -1000, 1870, -1000, -1000, 1706, -1000, -1000, 1442,
	1246, 2137, 349, 23234, 1529, 1529, -1000, 547, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 816, 6937, 2211, -1000, 1121,
	-1000, 1130, 191, 963, -1000, -1000, 711, 711, -1000, 771,
	766, -1000, 42594, 1725, -1000, 317, 1116, 317, 959, -1000,
	955, -1000, -1000, -1000, -1000, 1758, 1813, -1000, -1000, -1000,
	-1000, 42594, -1000, -1000, 42594, 42594, 42594, 1722, 2119, -1000,
	18392, 1716, 712, 1938, 42594, 42594, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 446, 711, -368,
	320, 315, 711, 711, 711, -401, -1000, -1000, 1478, 1476,
	-1000, -162, -1000, 18392, -1000, -1000, -1000, 1036, 1036, -1000,
	1706, -1000, -1000, -1000, 1297, -1000, -1000, -149, 42594, 42594,
	42594, 42594, -1000, 982, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 652, 18997, -1000, -1000,
	317, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	18392, -1000, 18392, -1000, 2101, 1115, 1090, 18392, 18392, -1000,
	942, 929, 1787, -1000, -1000, -1000, 1246, 19602, -1000, 19602,
	-1000, 18392, 225, 760, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18392, -1000, 18392, 18392,
	-1000, 18392, 1696, 1970, 1696, 1696, 25049, -1000, -1000, 2163,
	2161, 2115, 1955, 1954, 1954, 1964, -1000, 2112, 2111, -1000,
	1114, 2108, 1112, 755, -1000, 42594, 18392, 1696, -1000, 308,
	42594, 1696, 42594, -1000, 2118, -1000, -1000, 18392, 1715, -1000,
	18392, -1000, -1000, -1000, -1000, -1000, -1000, 6561, 2168, 1529,
	-1000, -1000, 668, -1000, 18392, -1000, -1000, -1000, 2939, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1106, 1105, -1000,
	-1000, 1708, 18392, -1000, -1000, -1000, 1293, 1284, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1706, -1000, -1000, -1000,
	-1000, 339, -396, 1916, 42594, 892, -1000, 1448, 1436, 329,
	1696, 1102, 711, 711, 711, 887, 884, 29284, 1446, -1000,
	42594, 402, -1000, 339, -1000, -169, -173, 1787, -1000, -1000,
	2064, -1000, -1000, 11712, -1000, -1000, 1700, 1808, -1000, -1000,
	-1000, 276, -1000, 1787, 1787, 1246, -1000, 1787, 1787, 1265,
	1263, -1000, -1000, 1425, -1000, 1667, -1000, 225, 1246, 1842,
	-1000, -1000, 6561, -1000, 1661, 1787, 1657, 1624, 25654, -1000,
	2107, 2106, 29889, 29889, 626, 2161, -1000, 18392, 18392, 1936,
	956, -1000, -1000, -1000, -1000, 1098, 1086, -1000, 1079, -1000,
	2210, -1000, 1090, -1000, 1696, -1000, 531, 1403, -1000, 2101,
	1090, 42594, 1090, 49, 2118, -1000, 1787, -1000, 1696, 1696,
	1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696,
	1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696,
	1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696, 1696,
	1696, 1696, 1696, 1696, -1000, -1000, 42594, 1905, -1000, -1000,
	2056, 1397, 64, -1000, 1393, -1000, -1000, 534, -1000, 18392,
	-1000, 29284, 1078, 958, -1000, -1000, -1000, -1000, -401, -1000,
	-1000, -1000, -1000, -1000, -1000, 379, 1408, -1000, 706, 42594,
	42594, 1246, 258, -154, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 18392, -1000, 1246, 1841, -1000, -243, -1000,
	-1000, 18392, -1000, -1000, 18392, -1000, 18392, 1380, -1000, -1000,
	-1000, -1000, -1000, 1380, 1380, -1000, -1000, 1090, 1406, -1000,
	951, -1000, -1000, -1000, -1000, -1000, 42594, 1403, 42594, -1000,
	1366, 1246, 1696, 2101, -1000, 1351, -1000, 379, -1000, 1693,
	1702, -1000, -1000, -1000, 16577, -1000, -1000, -1000, -1000, -1000,
	282, -145, 11712, 8657, 1315, -1000, -1000, 1895, -140, -158,
	1891, -1000, -333, -1000, -1000, 1570, 1440, 1418, 28679, -1000,
	-1000, -1000, -1000, -1000, 1386, -1000, -1000, 25049, 41989, -1000,
	-135, 284, -145, 18392, 1692, 1246, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -18, -1000, -1000, -1000, -1000, -1000,
	1802, -1000, 1893, -1000, 1246, -1000, 18392, -1000, 18392, -1000,
	18392, -1000, -1000, -1000, 1304, -1000, 2869, -252, 1838, -1000,
	-89, -1000, -1000, -1000, 783, 882, -1000, -1000, -1000, -1000,
	-1000, -1000, 1811, 42594, -1000, 422, -1000, -1000, -149, -151,
	-1000, 1261, 1248, 1787, -1000, 41989, -239, 643, 6561, -1000,
	1830, 1825, 2172, -1000, -1000, -1000, -1000, -1000, -1000, -409,
	1243, 249, -1000, -155, -1000, 18392, -1000, 18392, -1000, -1000,
	-1000, 2053, 49, -1000, 2209, -1000, 2173, 666, 666, -1000,
	864, -409, -1000, -159, 1787, 1787, -253, -1000, -1000, -1000,
	-1000, -1000, 419, 904, -1000, -1000, -1000, -1000, -1000, -1000,
	6561, -1000, -1000, -1000, 208, 208, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2697, 2693, 24, 5, 36, 35, 2692, 26, 103,
	193, 32, 195, 110, 2688, 2687, 2684, 2681, 2679, 2678,
	2673, 233, 231, 220, 2669, 2664, 2661, 2660, 2659, 2656,
	2654, 2650, 2649, 2633, 218, 172, 192, 2632, 2631, 2629,
	128, 181, 90, 93, 186, 2628, 2626, 85, 2625, 2622,
	2621, 178, 177, 174, 839, 2620, 180, 129, 49, 2619,
	2618, 2616, 2614, 2604, 2602, 2600, 2599, 2598, 2597, 2596,
	2595, 2593, 2592, 2590, 2588, 2587, 194, 2585, 2584, 16,
	2583, 92, 2582, 2575, 2574, 2573, 137, 2570, 2562, 2560,
	28, 2558, 2557, 2556, 2554, 2553, 2548, 2547, 152, 2546,
	2545, 2527, 2524, 198, 2521, 2519, 153, 117, 122, 2514,
	2510, 119, 188, 2507, 134, 2504, 2501, 2499, 160, 2498,
	2566, 2494, 80, 75, 2493, 68, 82, 71, 70, 17,
	9, 2491, 2489, 77, 94, 2487, 2485, 115, 100, 2484,
	127, 111, 2483, 2481, 14, 8, 2477, 1, 4, 2,
	73, 2472, 2471, 141, 2470, 2469, 2468, 108, 2467, 2463,
	5069, 2461, 105, 148, 116, 81, 2458, 44, 63, 2456,
	2454, 2452, 2451, 2450, 50, 2449, 2448, 2447, 154, 58,
	179, 37, 38, 59, 144, 2443, 102, 88, 2442, 151,
	150, 2441, 65, 41, 48, 2440, 46, 143, 133, 39,
	107, 146, 2435, 2434, 61, 79, 2431, 2430, 2424, 2422,
	2420, 2419, 74, 2417, 55, 2413, 189, 2409, 20, 2407,
	53, 42, 2405, 69, 142, 76, 40, 2404, 168, 2392,
	60, 167, 139, 169, 2380, 2379, 2376, 2373, 187, 283,
	2372, 2369, 84, 175, 155, 161, 98, 2366, 303, 2364,
	2363, 97, 1499, 3923, 21, 171, 2362, 2361, 3967, 147,
	43, 25, 2359, 185, 2357, 2356, 2355, 196, 170, 125,
	984, 66, 2354, 2353, 13, 2352, 2350, 2341, 2340, 2327,
	2318, 96, 34, 33, 31, 197, 101, 11, 163, 78,
	2314, 2312, 2309, 136, 95, 2307, 165, 164, 138, 191,
	2305, 173, 156, 131, 2303, 200, 30, 2289, 2288, 2287,
	2282, 99, 2280, 2273, 2264, 2263, 166, 157, 135, 91,
	2262, 89, 132, 162, 158, 52, 2256, 47, 2255, 2254,
	29, 182, 23, 2252, 12, 83, 67, 22, 120, 118,
	2251, 0, 2249, 15, 176, 299, 159, 2247, 2246, 7,
	10, 6, 2245, 2241, 2239, 2238, 149, 2237, 2236, 2235,
	2234, 19, 45, 18, 3, 121, 86, 2230, 2228, 5720,
	1830, 140, 2227, 202,
}

//line sql.y:7165
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 367, 368, 368, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 341, 341,
	341, 344, 344, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	371, 371, 155, 155, 153, 153, 154, 154, 223, 223,
	24, 25, 25, 233, 233, 232, 232, 232, 234, 234,
	234, 234, 270, 270, 26, 26, 26, 26, 26, 104,
	104, 343, 343, 342, 334, 334, 333, 333, 332, 340,
	340, 339, 339, 338, 38, 39, 48, 48, 48, 48,
	49, 50, 345, 345, 307, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 309, 309, 295, 295, 308, 308, 308, 308, 308,
	308, 308, 294, 294, 115, 115, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 360, 360, 360, 359, 359, 203, 203,
	203, 203, 203, 203, 203, 203, 124, 124, 133, 133,
	133, 133, 133, 122, 122, 123, 121, 121, 121, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 132, 132, 128, 128, 128, 129, 129,
	129, 130, 130, 361, 361, 361, 361, 274, 274, 274,
	274, 277, 277, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 276, 276, 276, 276, 276, 278, 278, 278,
	278, 278, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 280, 280, 280,
	280, 280, 280, 280, 280, 293, 293, 281, 281, 288,
	288, 289, 289, 289, 290, 290, 290, 291, 291, 286,
	286, 286, 286, 286, 286, 287, 287, 287, 296, 321,
	321, 320, 320, 318, 318, 318, 318, 318, 318, 318,
	318, 305, 305, 315, 315, 315, 315, 315, 304, 304,
	300, 300, 300, 301, 301, 302, 302, 299, 299, 303,
	303, 317, 317, 316, 316, 297, 297, 298, 298, 323,
	362, 362, 362, 362, 362, 363, 363, 324, 352, 354,
	354, 354, 353, 353, 350, 351, 349, 349, 349, 349,
	349, 81, 81, 81, 246, 246, 247, 247, 313, 313,
	312, 312, 312, 314, 314, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 241, 241, 241, 348,
	348, 348, 348, 348, 348, 347, 347, 347, 310, 310,
	310, 346, 346, 57, 57, 187, 187, 365, 365, 366,
	366, 366, 45, 45, 45, 45, 45, 45, 44, 44,
	44, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 46, 46, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 86, 86, 87,
	87, 87, 87, 89, 89, 89, 326, 326, 58, 58,
	3, 3, 143, 145, 146, 146, 144, 144, 144, 144,
	144, 144, 60, 60, 59, 59, 148, 147, 149, 149,
	149, 1, 1, 2, 2, 4, 4, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 292,
	292, 292, 325, 325, 327, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 92, 91, 91, 90, 93,
	93, 93, 93, 93, 93, 93, 93, 329, 329, 329,
	61, 61, 330, 282, 283, 284, 5, 6, 306, 328,
	100, 100, 28, 37, 37, 29, 29, 29, 29, 30,
	30, 62, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 240, 240, 249, 249, 239, 239, 263,
	263, 263, 242, 242, 242, 243, 243, 358, 358, 358,
	236, 236, 64, 64, 64, 66, 66, 67, 68, 68,
	265, 265, 266, 266, 69, 70, 82, 82, 82, 82,
	82, 82, 85, 85, 85, 15, 15, 15, 15, 78,
	78, 78, 14, 14, 65, 65, 72, 355, 355, 356,
	357, 357, 357, 357, 73, 75, 31, 31, 31, 31,
	31, 31, 110, 110, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 105, 105, 105, 99,
	99, 372, 76, 77, 77, 103, 103, 103, 96, 96,
	96, 102, 102, 102, 16, 16, 17, 222, 222, 18,
	18, 107, 107, 109, 109, 109, 109, 109, 111, 111,
	111, 111, 111, 111, 111, 106, 106, 108, 108, 108,
	108, 256, 256, 256, 255, 255, 137, 137, 139, 138,
	138, 140, 140, 141, 141, 141, 141, 185, 185, 163,
	163, 220, 220, 218, 218, 219, 219, 221, 221, 221,
	221, 224, 224, 142, 142, 142, 142, 150, 150, 151,
	151, 152, 152, 264, 264, 261, 261, 261, 260, 260,
	156, 156, 156, 158, 157, 157, 157, 157, 159, 159,
	161, 161, 160, 160, 162, 167, 167, 166, 166, 164,
	164, 164, 164, 165, 165, 165, 165, 168, 168, 120,
	120, 120, 120, 120, 120, 120, 120, 131, 131, 131,
	131, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 83, 83,
	83, 237, 237, 169, 169, 177, 177, 177, 177, 170,
	170, 170, 170, 170, 170, 170, 178, 178, 178, 184,
	179, 179, 175, 175, 175, 175, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	272, 272, 337, 337, 336, 336, 335, 335, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 373,
	373, 285, 285, 285, 285, 176, 176, 176, 176, 176,
	101, 101, 101, 101, 101, 269, 269, 269, 273, 273,
	273, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 190, 190, 97, 97,
	188, 188, 189, 191, 191, 186, 186, 186, 172, 172,
	172, 192, 192, 193, 193, 194, 194, 196, 195, 195,
	197, 198, 198, 198, 199, 199, 200, 200, 200, 47,
	47, 47, 47, 47, 42, 42, 42, 42, 43, 43,
	43, 43, 112, 112, 112, 112, 114, 114, 113, 113,
	79, 79, 80, 80, 80, 118, 118, 119, 119, 119,
	116, 116, 117, 117, 216, 216, 201, 201, 201, 208,
	208, 208, 204, 204, 206, 206, 206, 207, 207, 207,
	205, 213, 213, 215, 215, 214, 214, 210, 210, 211,
	211, 212, 212, 212, 209, 209, 171, 171, 171, 171,
	171, 217, 217, 217, 217, 225, 225, 181, 181, 183,
	183, 182, 135, 226, 226, 230, 227, 227, 231, 231,
	231, 231, 231, 228, 228, 229, 229, 257, 257, 257,
	235, 235, 248, 248, 244, 244, 245, 245, 238, 238,
	250, 250, 250, 74, 180, 180, 322, 322, 319, 253,
	253, 254, 254, 258, 258, 262, 262, 259, 259, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 369, 370, 267, 268, 268, 268,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	2, 2, 2, 1, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 3, 3, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 4, 4, 2, 11, 3, 6,
	8, 6, 6, 6, 13, 8, 6, 10, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 2,
	4, 4, 4, 4, 4, 2, 3, 3, 3, 5,
	2, 3, 3, 2, 3, 4, 4, 4, 3, 4,
	4, 5, 3, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	1, 1, 2, 1, 3, 1, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 3, 3, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 5, 5, 4, 0, 2, 4,
	4, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 3, 4, 3,
	7, 0, 3, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 6, 3, 3, 4, 3,
	1, 3, 4, 5, 6, 3, 4, 5, 6, 3,
	4, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 9,
	6, 6, 6, 2, 2, 3, 3, 3, 1, 1,
	1, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 5, 5, 6, 4, 4, 8, 6,
	8, 6, 8, 5, 4, 2, 2, 1, 2, 2,
	2, 8, 8, 6, 5, 4, 4, 4, 4, 4,
	7, 4, 6, 6, 6, 4, 4, 4, 7, 8,
	6, 5, 6, 8, 11, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 1, 6, 8, 10, 12, 14,
	6, 8, 8, 10, 12, 14, 6, 8, 10, 12,
	0, 2, 0, 2, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 2,
	2, 0, 3, 0, 2, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -367, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 10,
	11, -84, -33, 33, -38, -48, 221, -49, -39, 222,
	-50, 224, 223, 260, 225, 253, 75, 306, 307, 309,
	310, 311, 312, -85, 258, 259, 227, 37, 46, 34,
	35, 38, 231, 266, 267, 230, -10, -34, 9, -369,
	12, 437, 255, 254, 29, -12, 475, 87, -368, 615,
	-216, -201, 23, 34, 30, -200, -196, -103, -201, 21,
	19, 8, -76, -372, -76, -76, 13, 14, -76, -307,
	-309, 87, 157, 87, -76, -55, -54, -52, -51, -53,
	-56, 32, -45, -46, -331, -44, -41, 226, 223, 270,
	121, 122, 260, 261, 262, 225, 244, 259, 263, 258,
	279, -40, 82, 34, 475, 478, -314, 222, 228, 229,
	438, 124, 123, 76, 224, -311, 360, 507, 585, -56,
	587, 103, 105, 586, 45, 234, 588, 589, 590, 514,
	591, 243, 592, 593, 594, 595, 601, 556, 602, 603,
	604, 125, 8, -76, -262, -258, -341, -252, 90, 91,
	92, 472, 246, 505, 506, 295, 82, 42, 357, 360,
	507, 585, 306, 320, 314, 341, 333, 473, 508, 298,
	247, 283, 582, 331, 133, 587, 301, 509, 261, 365,
	366, 510, 367, 103, 309, 404, 600, 300, 511, 598,
	105, 586, 80, 52, 45, 256, 329, 230, 325, 588,
	284, 512, 483, 277, 124, 121, 607, 37, 323, 51,
	31, 597, 123, 50, 589, 148, 513, 590, 514, 369,
	348, 576, 49, 370, 262, 515, 85, 267, 477, 304,
	584, 371, 324, 372, 294, 596, 227, 516, 568, 373,
	374, 577, 517, 349, 353, 518, 396, 375, 614, 53,
	519, 520, 578, 122, 521, 79, 591, 81, 318, 319,
	522, 292, 245, 398, 345, 450, 457, 458, 109, 110,
	453, 111, 459, 112, 460, 461, 462, 451, 113, 106,
	452, 463, 464, 346, 347, 114, 465, 108, 107, 454,
	456, 115, 466, 243, 36, 376, 474, 296, 59, 271,
	399, 47, 351, 611, 46, 572, 523, 575, 344, 340,
	447, 54, 524, 525, 526, 527, 592, 343, 317, 339,
	606, 4, 289, 593, 63, 229, 355, 354, 356, 278,
	395, 336, 528, 529, 530, 250, 83, 531, 326, 22,
	532, 533, 377, 285, 534, 57, 535, 536, 402, 259,
	537, 55, 594, 40, 538, 264, 608, 595, 539, 540,
	541, 542, 266, 543, 379, 544, 378, 350, 352, 273,
	380, 476, 545, 305, 322, 263, 599, 546, 251, 467,
	468, 469, 470, 583, 265, 270, 258, 403, 252, 547,
	548, 549, 550, 551, 299, 567, 552, 553, 310, 601,
	448, 44, 554, 555, 556, 557, 558, 293, 288, 397,
	406, 62, 84, 362, 559, 560, 581, 316, 286, 561,
	307, 56, 602, 603, 604, 280, 605, 10, 612, 613,
	382, 125, 290, 291, 48, 337, 272, 562, 302, 563,
	327, 328, 342, 315, 338, 308, 569, 274, 383, 449,
	260, 564, 405, 287, 358, 363, 303, 480, 279, 384,
	580, 479, 335, 332, 281, 565, 385, 235, 275, 276,
	566, 570, 386, 387, 297, 388, 389, 390, 391, 392,
	394, 393, 282, 478, 313, 330, 364, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 446, 233, -76, 233, -160,
	-258, 233, -228, 366, -249, 368, 381, 376, 386, 374,
	-240, 377, 379, 273, -358, 396, 233, 383, 221, 369,
	378, 387, 388, 297, 394, 389, 393, 282, 390, 391,
	392, -341, 174, 590, 605, 133, 334, 373, 371, 397,
	572, -258, 308, -265, 313, -253, -341, -252, 311, -160,
	-82, 568, 225, -267, -267, -105, 572, 574, -179, -120,
	141, -131, -134, -125, -126, -173, -174, -175, -176, -132,
	-186, 163, 164, 171, 142, -184, -135, 27, 471, 439,
	438, 174, 32, 217, 69, 70, 441, 442, 144, 58,
	414, 415, -133, 409, 416, 411, 444, 445, 116, 446,
	106, 108, 107, 447, 448, 449, 346, 347, 450, 451,
	452, 109, 110, 111, 112, 113, 114, 115, 453, 456,
	454, 455, 457, 458, 459, 464, 465, 460, 461, 462,
	463, 466, -136, -253, -258, 238, 408, 232, 169, 437,
	-127, -123, -8, -182, 407, 412, 413, 417, 410, 467,
	468, 469, 470, -341, -252, -129, -128, -169, 93, 99,
	104, 100, -364, 117, -369, 94, 95, 96, 97, 98,
	118, 119, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 45, 382, 382, -160, -76, -76,
	-76, -76, -194, -103, -196, -10, -8, -369, 9, -76,
	-8, -9, -13, -34, -36, 501, -35, -258, -201, -216,
	13, 159, 43, 51, -199, -200, -12, -8, -120, 20,
	24, 25, -108, 165, -120, -258, -77, -108, -238, 237,
	-76, -76, -227, -270, 308, -231, 397, 396, -254, -229,
	-253, -251, -228, 395, 226, 24, 481, 140, 26, 28,
	143, 174, 128, 20, 144, 38, 228, 334, 244, 173,
	240, 438, 221, 73, 482, 409, 411, 407, 414, 440,
	441, 408, 368, 32, 14, 484, 29, 254, 25, 39,
	167, 223, 147, 485, 257, 27, 255, 116, 119, 487,
	23, 76, 249, 15, 242, 41, 17, 488, 489, 18,
	238, 237, 159, 234, 71, 12, 217, 30, 156, 67,
	490, 135, 491, 492, 493, 494, 129, 69, 157, 21,
	609, 412, 413, 34, 573, 471, 268, 169, 74, 60,
	574, 141, 410, 495, 496, 117, 497, 120, 77, 579,
	137, 19, 72, 43, 498, 269, 499, 239, 610, 500,
	400, 501, 158, 224, 437, 70, 5, 502, 232, 381,
	9, 443, 33, 253, 241, 127, 68, 503, 233, 146,
	444, 445, 236, 130, 118, 8, 134, 35, 13, 75,
	78, 415, 416, 417, 58, 126, 475, 145, 16, 504,
	401, 139, 133, -308, 157, -294, -298, -253, 248, -324,
	244, -160, -317, -316, -253, -369, -104, -248, 234, 242,
	241, 134, -345, 137, 290, 408, 232, -51, -52, -53,
	-228, 173, 589, -86, 265, 269, 88, 88, -298, -297,
	-296, -346, 269, 248, -323, -315, 240, 249, -304, 241,
	242, -299, 234, 135, -346, -299, 239, 249, 244, 248,
	269, 269, 125, 269, 125, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 264, -305, 149, -305, 479, 479,
	-311, -346, 244, 234, -346, -346, 236, 36, 36, -250,
	-299, 236, 26, -305, -305, -305, -228, 173, -305, -305,
	-305, -305, 277, 277, -305, -305, -305, -305, -305, -305,
	-305, -305, -305, -305, -305, -305, -305, -305, -305, -305,
	-305, 233, -345, -112, 393, 297, 82, -54, 279, -37,
	-160, -248, 234, 235, -345, 266, -160, 218, -160, -242,
	157, 16, -242, -239, 382, 380, 367, 372, -242, -242,
	-242, -242, 280, 365, -300, 234, 36, 245, 382, 280,
	365, 280, 281, 280, 281, 375, 385, 280, -263, 15,
	159, 408, 370, 374, 273, 233, 274, 235, 384, 281,
	-263, 94, -243, 157, 382, 276, -242, -242, -268, -369,
	-254, 334, -341, 575, -268, -268, 33, 91, 236, -253,
	-78, -253, 94, -15, -11, -22, -21, -23, 149, -110,
	382, -98, 174, 590, 576, 577, 578, 575, 379, 583,
	581, 579, 280, 580, 88, 137, 139, 140, 4, 5,
	-120, 156, -170, 149, 150, 151, 152, 153, 154, 155,
	159, 141, 143, 157, 158, 138, 160, 161, 162, 163,
	164, 165, 166, 168, 167, 169, 170, 173, 219, 220,
	-126, -126, -126, -126, -184, -369, -369, -369, -126, -237,
	-369, -126, -369, -369, -369, -369, -190, -120, -369, -373,
	-369, -373, -373, -285, -369, -285, -369, -369, -369, -369,
	-369, -369, -369, -369, -369, -369, -369, -369, -369, -369,
	-369, -369, -369, -369, -369, -369, -369, -369, -369, -369,
	-369, -369, -369, -369, -369, -369, -369, -369, -369, -369,
	-369, -369, -369, 218, -369, -369, -369, -369, -369, -285,
	-285, -285, -285, -285, -369, -369, -369, -369, 104, 99,
	93, -186, 100, 94, -253, -258, -8, -9, -179, -267,
	-355, -356, -163, -160, -369, 297, -253, -253, 266, -199,
	-12, -8, -194, -200, -196, -8, -76, -96, -109, 64,
	65, -111, 25, 39, 68, 66, 24, -370, 89, -370,
	-216, -370, 88, -36, -220, 87, 62, 44, 94, 94,
	88, 22, -195, -197, -120, 15, -256, 4, -255, 26,
	-253, 94, 218, 102, 15, -161, 30, -160, -238, -238,
	88, 308, -231, -270, -233, -232, 398, 400, 149, -257,
	-253, 94, 32, 89, 88, -160, -274, -277, -279, -278,
	-280, -275, -276, 331, 332, 174, 335, 337, 338, 339,
	340, 341, 342, 343, 344, 345, 348, 33, 256, 327,
	328, 329, 330, 349, 350, 351, 352, 353, 354, 355,
	356, 314, 333, 473, 315, 316, 317, 318, 319, 320,
	322, 323, 324, 325, 326, -344, -341, 87, 89, 88,
	-281, 87, -120, -112, 233, -341, 234, 234, 234, -76,
	437, -305, -305, -305, 264, 20, -44, -41, -331, 19,
	-40, -41, 226, 121, 122, 223, 87, -294, 87, -303,
	-344, -341, 87, 135, 239, 134, -302, -299, -302, -303,
	-341, -186, -341, 135, 135, -341, -341, -224, -253, -224,
	-224, 24, -224, 24, -224, 24, 96, -253, -224, 24,
	-224, 24, -224, 24, -224, 24, -224, 24, 32, 79,
	80, 81, 32, 83, 84, 85, -186, -341, -341, -186,
	-294, -228, -160, -341, 96, 96, 96, -305, -305, 96,
	94, 94, 94, -305, -305, 96, 94, -260, -258, 94,
	94, -347, 250, 294, 296, 96, 96, 96, 96, 32,
	94, -348, 32, 597, 596, 598, 599, 600, 94, 96,
	32, 96, 32, 96, -253, 87, -160, -118, 284, 221,
	223, 226, 77, 94, 298, 302, 303, 149, 45, 88,
	236, 233, -341, -244, 238, -244, -253, -259, -258, -251,
	94, -120, -301, 15, 159, -263, -263, -242, -160, -301,
	-263, -242, -160, -242, -242, -242, -242, -263, -263, -263,
	-242, -258, -258, -160, -160, -160, -160, -160, -160, -160,
	-268, -243, -242, 575, 94, -236, 15, 77, -268, -268,
	-266, 311, 345, 569, 570, 571, 88, 475, -153, -160,
	575, 575, 575, 575, 575, 575, -120, -120, -120, -120,
	497, -120, -177, 117, 141, 118, 119, -134, -178, -182,
	-184, 101, 159, 143, 157, 158, -125, -126, -125, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -269, -253, 94, 174, -130, -129, 100, -364, -130,
	-106, -108, -120, -120, -341, -253, -106, -106, -120, -102,
	25, 39, -188, -189, 145, -186, -370, -370, 96, 100,
	-253, -253, -95, -94, 419, 420, 421, 422, 424, 425,
	426, 429, 430, 434, 435, 418, 436, 423, 428, 431,
	432, 433, 427, 330, -120, -120, -120, -120, -120, -120,
	-83, -120, 128, 129, 130, -120, -120, -180, -179, -340,
	-339, -338, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -107, 25, 39, -106, -254,
	-259, -251, -106, -107, -107, -106, -106, -120, -120, -120,
	-120, 218, -216, -370, 88, -357, 400, 401, 573, -261,
	269, -260, 26, -180, 94, 15, -222, 78, -253, -199,
	-199, 64, 65, 60, -106, -111, -370, -35, 26, -218,
	-253, 63, 94, -286, -228, 357, 358, -120, -120, 88,
	-198, 28, 29, -160, -255, 165, -259, -160, -223, 269,
	-160, -138, -140, -141, -142, -163, -185, -369, -143, 493,
	490, 15, -153, -154, -162, -258, -231, -233, 88, 399,
	401, 402, 77, 120, -120, -287, 173, -313, -312, -311,
	-294, -296, -297, -298, 89, -287, -290, 363, 362, -281,
	-281, -281, -281, -281, -286, -286, -286, -286, 87, 87,
	-281, -281, -281, -281, -288, 87, -288, -288, -289, 87,
	-289, -324, -120, -321, -320, -318, -319, 243, 103, 566,
	522, 475, 514, 556, 78, -316, -198, 96, -370, -118,
	-245, 238, -322, -319, -341, -341, -341, -245, -341, 94,
	-341, 94, -341, 94, -87, -58, -1, 609, 610, 611,
	88, 20, -295, -294, -57, 294, -327, -328, 269, -323,
	-317, -303, 135, -302, -303, -303, -341, 88, 30, 125,
	125, 125, 125, 475, 223, 33, -246, 513, 141, 566,
	522, -294, -57, -269, 236, -269, -269, 94, 94, -241,
	605, -153, -114, 286, 149, 275, 275, 233, 233, 288,
	-160, 299, 301, 300, 298, 302, 303, 24, 24, 24,
	287, 289, 291, 277, -160, -160, -244, 77, -155, -160,
	27, -258, -160, -242, -242, -160, -242, -242, -160, -253,
	-98, 400, 88, 475, 23, -99, 23, -369, 117, 118,
	119, -178, -125, -126, -125, 140, 257, 88, -370, 26,
	88, 78, -370, -370, -370, 88, 15, -106, -191, -189,
	147, -120, -370, -370, -370, 88, 88, 15, -273, 26,
	-370, -370, -370, -370, -370, -190, -370, 15, 88, 88,
	-370, -370, 88, 88, -370, 88, 88, 88, -337, 88,
	88, 88, 88, -370, -370, -370, -370, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, -370, -370, -106,
	-106, -369, 218, -370, -370, -370, -370, -370, 88, 88,
	88, 88, -254, -356, 572, 401, -167, -166, -164, 75,
	237, 76, -369, -260, -370, -130, 91, -219, 91, -218,
	-172, -253, 96, 100, -201, -137, -139, 15, -111, -184,
	89, 88, -286, -205, -210, -239, -253, 94, 174, -197,
	218, -168, 16, -171, 33, 58, -11, -369, -369, 33,
	88, -156, -158, -157, -159, 67, 71, 73, 68, 69,
	70, 74, -264, 26, -138, -9, -8, -369, -369, -369,
	-160, -153, -371, 15, 78, -371, 88, 218, -232, -234,
	403, 400, 406, -341, 94, -86, 88, -311, -298, -202,
	-115, 41, -291, 364, -286, -286, -293, 94, -293, 96,
	96, 89, -47, -42, -43, 34, 82, -318, -305, 94,
	40, -305, -305, -253, 89, -198, -114, -160, 141, 77,
	-322, -322, -322, -258, -2, 608, 614, 135, 87, 367,
	19, -218, 88, 89, -187, 295, 89, -88, -253, 89,
	87, -303, -303, -253, -369, 233, 32, 32, 566, 522,
	513, -57, -187, -287, -341, 607, 606, 89, 235, 293,
	-119, 414, -116, 94, 90, -160, -160, -160, -160, -160,
	226, 223, -365, 304, -365, 278, 236, -153, -160, 88,
	-81, 252, 247, -263, -263, 34, -160, 400, 584, 582,
	-120, 140, 257, -134, -126, -108, 472, -271, 174, 331,
	256, 329, 325, 345, 336, 362, 327, 363, 324, 323,
	322, -271, -269, -120, -120, -194, 148, -120, 146, -120,
	-120, -120, -370, 174, 331, 15, -120, -120, -120, -338,
	-120, -120, -120, -336, -335, -130, -186, -370, -336, -120,
	-120, -335, -335, -339, -339, -339, -339, -339, -179, -179,
	-179, -179, -370, -370, -107, -254, -120, -120, -120, -120,
	-164, -299, -299, -299, -224, 88, -235, 23, 15, 58,
	58, -137, -168, -138, -111, -253, -208, 568, -213, 47,
	-211, -212, 48, -209, 49, 57, 165, -199, -120, -225,
	77, -226, -230, -186, -181, -183, -182, -369, -217, -370,
	-253, -224, -226, -140, -141, -141, -140, -141, 67, 67,
	67, 72, 67, 72, 67, -157, -258, -370, -370, -9,
	-9, -120, -261, 78, -138, -138, -162, -258, 165, 400,
	404, 405, -311, -363, 117, 141, 32, 77, 360, 103,
	-361, 173, 510, 561, 566, 522, 514, 556, -362, 239,
	134, 135, 251, 26, 42, 89, 88, 89, 88, 89,
	88, -247, -246, -43, -42, -305, -305, 96, -341, 94,
	94, 235, 27, -160, 77, 77, 77, -89, 612, 96,
	87, -3, 82, -120, 87, 20, -294, -186, -329, -282,
	-330, -283, -284, -5, -6, -306, -92, 58, 103, -61,
	45, 234, 592, 593, 125, -369, 605, -321, -218, -325,
	-327, -160, -122, -369, -121, -123, -127, 163, 164, -187,
	-160, -113, 284, 292, 87, -117, 91, -343, 78, 275,
	360, 275, -366, 305, 94, -366, -160, -81, -47, -160,
	-242, -242, 34, -341, -370, -134, -126, -369, -370, -281,
	-281, -281, -289, -281, 319, -281, 319, -281, -370, -370,
	88, -370, 23, -370, -97, 443, -120, 88, 88, -370,
	87, 87, -120, -370, -370, -370, -337, 88, -370, 88,
	-370, 88, -272, 567, -370, -370, -370, -370, -370, -370,
	-370, -370, -370, -370, -370, -370, 88, -370, 88, 88,
	-370, 88, -165, 23, -165, -165, -370, 91, -160, -168,
	-192, 17, -205, 52, 337, -215, -214, 56, 48, -212,
	20, 50, 20, 31, -225, 88, 149, 88, -370, -370,
	88, 58, 218, -370, -168, -151, -150, 77, 78, -152,
	77, -150, 67, 67, -220, -370, -370, 88, -223, -138,
	-168, -168, 218, 117, -369, -124, -133, -122, 13, 94,
	94, -341, -360, 596, 597, 32, 96, -305, -305, 135,
	135, -160, 87, -286, 94, -286, 96, 96, 32, 83,
	84, 85, 32, 79, 80, 81, -160, -160, -160, -160,
	-326, 87, 20, -120, 87, 149, 89, -218, -218, 271,
	159, -305, 590, 277, 277, -305, -305, -305, -91, -90,
	612, 89, -370, 88, -292, 475, 478, -120, -128, -128,
	-220, 89, -334, 475, -342, -253, -253, -253, -253, 96,
	98, -125, -286, -120, -120, -199, 94, -120, -120, 96,
	96, -370, -370, -336, -335, -120, -370, -148, -147, -149,
	576, 117, 32, -271, -120, -120, -120, -120, -369, 67,
	19, 17, -369, -369, -261, -192, -193, 18, 20, -206,
	54, -204, 53, -204, -214, 20, 20, 94, 20, 94,
	135, -230, -120, -183, 58, -11, -253, -181, -253, -194,
	-120, 87, -120, -130, -168, -168, -120, -174, 446, 106,
	108, 107, 447, 448, 449, 346, 347, 450, 451, 452,
	109, 110, 111, 112, 113, 114, 115, 453, 456, 454,
	457, 458, 459, 464, 465, 460, 461, 462, 463, 466,
	467, 468, 469, 470, 94, 94, 87, -120, 89, 89,
	-220, -325, -58, 89, -218, 96, 89, 272, -182, -369,
	94, -305, -305, -305, 96, 96, -260, -370, 88, -253,
	-362, -327, 479, 479, -370, 26, -333, -332, -254, 87,
	78, -101, 159, 475, -370, -370, -370, -370, -370, 89,
	89, -370, -370, 88, -370, -147, -149, -370, 77, -130,
	-370, 88, -370, -370, 88, -370, 88, -221, -370, -253,
	239, 20, 20, -221, -221, -167, -193, -120, -179, -207,
	55, 77, 120, 94, 94, 94, 13, -181, 218, -199,
	-218, -145, 367, -194, -370, -218, 89, 26, 89, 614,
	135, 89, -182, -100, -369, 268, -260, 94, 94, -90,
	-93, -11, 88, 149, -218, -160, -370, 473, 74, 476,
	-120, -370, 77, 485, 576, -120, -120, -120, 88, -370,
	-370, -370, 77, 120, -226, -253, 89, -370, -369, -199,
	89, -203, -11, 87, -3, 268, -282, -330, -283, -284,
	-5, -6, -306, -79, 475, -332, -310, -254, 94, 96,
	89, 63, 474, 477, -337, -370, 88, -370, 88, -370,
	88, -253, 239, -261, -146, -144, -253, 528, -353, -352,
	471, -363, -359, 117, 141, 103, -361, 566, 522, 126,
	127, -79, -120, 87, -370, -80, 283, 572, -343, 63,
	-370, -120, -120, -120, -370, 88, 23, -274, -60, 539,
	-350, -351, 77, -354, 373, 538, 559, 117, 94, 89,
	-218, 244, -334, 475, -370, 88, -370, 88, -370, -144,
	535, -287, -130, -351, 77, -350, 77, 14, 13, -4,
	613, 89, 285, 476, -120, -120, -59, 27, -145, -349,
	252, 247, 250, 33, -349, 96, -4, 477, -370, -370,
	539, 246, 32, 117, -130, -148, -147, -147,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 821,
	821, 821, 0, 821, 0, 0, 821, -2, -2, 821,
	1325, 0, 821, 0, 0, -2, 753, 755, 0, 757,
	-2, 0, 0, 766, 1834, 1834, 816, 0, 0, 0,
	0, 0, 821, 821, 821, 821, 1185, 48, 821, 0,
	83, 84, 772, 773, 774, 63, 0, 1832, 1, 3,
	69, 73, 0, 0, 0, 56, 1194, 0, 76, 0,
	0, 825, 0, 823, 0, 1308, 821, 821, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 567, 495, 546, 493, 531, -2, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 371, 371, 0, 0, -2, 481, 481, 481,
	0, 0, 0, 528, 1310, 433, 371, 371, 371, 0,
	371, 371, 371, 371, 0, 0, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 1212, 153, 1326, 1323, 1324, 38, 39,
	40, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 0, 1302, 0, 680,
	922, 0, 742, 742, 0, 742, 742, 742, 742, 0,
	0, 0, 692, 0, 0, 0, 0, 739, 0, 708,
	709, 0, 739, 0, 715, 745, 0, 720, 742, 742,
	723, 1835, 0, 1835, 1835, 1293, 0, 736, 734, 748,
	749, 752, 756, 0, 761, 764, 1319, 1320, 0, 779,
	47, 1564, 771, 784, 785, 0, 817, 818, 43, 1020,
	0, 944, 950, 961, 974, 975, 976, 977, 978, 980,
	981, 0, 0, 0, 0, 986, 987, 0, 0, 0,
	0, 0, 1001, 0, 0, 0, 0, 0, 1166, 0,
	1129, 1129, 1037, 1129, 1131, 1131, 0, 0, 0, 1831,
	1605, 1613, 1614, 1636, 1726, 1775, 1609, 1610, 1591, 1603,
	1606, 1594, 1595, 1597, 1599, 1604, 1611, 1617, 1596, 1616,
	1615, 0, 1592, 1593, 1598, 1608, 1612, 1600, 1601, 1602,
	1607, 1618, 1084, 1175, 0, 0, 0, 0, 0, 0,
	273, 274, 1019, 1282, 1131, 1131, 1131, 1131, 1131, 1705,
	1706, 1707, 1708, -2, -2, 219, 220, 221, 222, 223,
	224, 225, 0, 215, 0, 278, 279, 275, 276, 277,
	1003, 1004, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 1834, 0, 794, 0, 0, 0,
	0, 0, 1194, 0, 1186, 1185, 61, 0, 821, -2,
	0, 0, 0, 0, 45, 0, 50, 881, 75, 74,
	1234, 0, 0, 0, 57, 1195, 65, 67, 1196, 0,
	826, 827, 0, 857, 861, 0, 822, 0, 0, 1309,
	1308, 1308, 100, 0, 1771, 1286, -2, -2, 0, 0,
	1321, 1322, 1295, -2, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, -2, 0, 0, 165, 166, 0, 41, 398,
	0, 161, 0, 391, 337, 0, 1212, 0, 0, 0,
	0, 0, 821, 0, 1303, 142, 143, 150, 151, 152,
	371, 371, 371, 543, 0, 0, 153, 153, 502, 503,
	504, 0, 0, -2, 396, 0, 482, 0, 0, 385,
	385, 389, 387, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 520, 0, 521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 0, 372, 0, 541, 542,
	434, 0, 0, 0, 0, 0, 0, 518, 519, 0,
	0, 1311, 1312, 0, 0, 0, 371, 371, 0, 0,
	0, 0, 371, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 141, 1225, 0, 0, 0, -2, 0, 672,
	0, 0, 0, 1304, 1304, 0, 679, 0, 681, 682,
	0, 0, 683, 0, 739, 739, 737, 738, 685, 686,
	687, 688, 742, 0, 0, 380, 381, 382, 739, 742,
	0, 742, 742, 742, 742, 739, 739, 739, 742, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 745,
	742, 0, 716, 0, 717, 718, 721, 722, 724, 1836,
	1837, 1342, 1835, 1835, 728, 732, 1294, 754, 762, 765,
	782, 780, 781, 783, 775, 776, 777, 778, 0, 796,
	797, 802, 0, 0, 0, 0, 808, 809, 810, 0,
	0, 813, 814, 815, 0, 0, 0, 0, 0, 0,
	942, 0, 0, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	982, 983, 984, 985, 988, 0, 0, 0, 993, 994,
	0, 0, 0, 0, 0, 831, 0, 1167, 0, 1035,
	0, 1036, 1038, 1039, 0, 1040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1314, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 841, 0, 0, 841, 841, 0, 0, 208,
	209, 210, 211, 212, 0, 0, 0, 0, 226, 227,
	228, 229, 230, 280, 1175, 0, 1019, 0, 0, 44,
	786, 787, 0, 905, 1314, 0, 0, 837, 0, 55,
	64, 66, 1194, 59, 1194, 0, 843, 0, 0, -2,
	-2, 844, 850, 851, 852, 853, 854, 52, 1833, 53,
	0, 72, 0, 46, 0, 0, 0, 0, 349, 1237,
	0, 0, 1187, 1188, 1191, 0, 858, 1647, 862, 0,
	864, 865, 0, 824, 0, 98, 0, 921, 0, 0,
	0, 1771, 1292, 0, 102, 103, 0, 0, 0, 355,
	1297, 1298, 1299, -2, 378, 0, 355, 344, 288, 289,
	290, 337, 292, 337, 337, 337, 337, 349, 349, 349,
	349, 320, 321, 322, 323, 324, 0, 0, 307, 337,
	337, 337, 337, 327, 328, 329, 330, 331, 332, 333,
	334, 293, 294, 295, 296, 297, 298, 299, 300, 301,
	339, 339, 339, 341, 341, 0, 42, 0, 359, 0,
	1191, 0, 0, 1225, 1306, 1316, 0, 0, 0, 1306,
	120, 0, 0, 0, 544, 578, 496, 532, 545, 0,
	499, 500, -2, 0, 0, 481, 0, 483, 0, 379,
	0, -2, 0, 389, 0, 385, 389, 386, 389, 377,
	390, 522, 523, 524, 0, 526, 527, 608, 891, 0,
	0, 0, 0, 0, 614, 615, 616, 0, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 533, 534,
	535, 536, 537, 538, 539, 540, 0, 0, 0, 0,
	483, 0, 529, 0, 435, 436, 437, 0, 0, 440,
	441, 442, 443, 0, 0, 446, 447, 448, 908, 909,
	449, 450, 475, 476, 477, 451, 452, 453, 454, 455,
	456, 457, 469, 470, 471, 472, 473, 474, 458, 459,
	460, 461, 462, 463, 466, 0, 135, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1304, 0, 0, 0, 0, 840, 923, 1327, 1328,
	743, 744, 0, 383, 384, 742, 742, 689, 729, 0,
	742, 693, 730, 694, 696, 695, 697, 710, 711, 742,
	700, 740, 741, 701, 702, 703, 704, 705, 706, 707,
	725, 712, 713, 714, 746, 0, 750, 751, 726, 727,
	0, 763, 767, 768, 769, 770, 0, 0, 799, 94,
	804, 805, 806, 807, 819, 812, 1021, 939, 940, 941,
	0, -2, 943, 947, 0, 1005, 1007, 949, 951, 1016,
	1017, 1018, 0, 0, 0, 0, 0, 955, 959, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 979, 1145, 1146, 1147, 996, 281, 282, 0, 997,
	0, 855, 0, 0, 0, 995, 0, 0, 0, 0,
	832, 833, 1173, 1170, 0, 0, 1130, 1132, 0, 0,
	0, 0, 0, 1108, 1109, 1110, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1148, 0, 0, 0, 0, 0,
	1166, 0, 998, 999, 1000, 0, 0, 0, 1315, 0,
	130, 131, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 842, 1176,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1281, 0, 789, 790, 792, 0, 925,
	0, 906, 0, 0, 795, 0, 836, 0, 839, 58,
	60, 848, 849, 0, 866, 845, 54, 49, 0, 0,
	883, 1235, 349, 1257, 0, 353, 354, 1197, 1198, 0,
	1190, 1192, 1193, 77, 863, 859, 0, 937, 0, 0,
	920, 0, 869, 871, 872, 873, 903, 0, 876, 0,
	0, 0, 0, 0, 96, 922, 1287, 101, 0, 0,
	106, 107, 1288, 1289, 1290, 1291, 0, 567, -2, 430,
	167, 169, 170, 171, 162, -2, 347, 345, 346, 291,
	349, 349, 314, 315, 316, 317, 318, 319, 0, 0,
	308, 309, 310, 311, 302, 0, 303, 304, 305, 0,
	306, 397, 0, 1199, 360, 361, 363, 371, 0, 366,
	367, 0, 371, 371, 0, 392, 393, 0, 1191, 1216,
	0, 0, 0, 1317, 1316, 1316, 1316, 0, 155, 156,
	157, 158, 159, 160, 603, 0, 0, 579, 601, 602,
	153, 0, 0, 163, 485, 484, 0, 635, 0, 395,
	0, 0, 389, 389, 374, 375, 525, 0, 0, 610,
	611, 612, 613, 0, 0, 0, 512, 424, 0, 513,
	514, 483, 485, 355, 0, 438, 439, 444, 445, 464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 558, 559, 560, 561, 487, 565, 562, 487, 566,
	1213, 1214, 1215, 0, 0, 673, 0, 0, 421, 92,
	1305, 678, 739, 699, 731, 739, 691, 698, 719, 759,
	803, 0, 0, 0, 0, 811, 0, 0, 948, 1006,
	1008, 952, 0, 956, 960, 0, 0, 0, 0, 0,
	0, 0, 1002, 1026, 1027, 0, 0, 1185, 0, 1171,
	0, 0, 1034, 1133, 1134, 0, 0, 0, 0, 0,
	1045, 1046, 1047, 1048, 1049, 0, 1051, 0, 0, 0,
	1055, 1056, 0, 0, 1057, 0, 0, 0, 0, 0,
	0, 0, 0, 1069, 1070, 1071, 1072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1083, 1022, 0,
	0, 841, 0, 1135, 1136, 1137, 1138, 1139, 0, 0,
	0, 0, 1176, 788, 791, 793, 879, 926, 927, 0,
	0, 0, 0, 907, 1313, 834, 835, 838, -2, 0,
	0, 1178, 0, 0, 866, 937, 867, 0, 846, 51,
	882, 0, 1239, 1238, 1251, 1264, 350, 351, 352, 1189,
	0, 1194, 0, 1275, 0, 0, 1267, 0, 0, 0,
	0, 0, 0, 0, 0, 910, 0, 0, 913, 0,
	0, 0, 0, 904, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 90, 91, 0, 0, 0, 104, 105,
	0, 0, 111, 356, 357, 144, 153, 432, 168, 405,
	0, 0, 287, 348, 312, 313, 0, 335, 0, 0,
	0, 426, 116, 1203, 1202, 371, 371, 362, 0, 365,
	0, 0, 0, 1318, 338, 394, 0, 134, 0, 0,
	0, 0, 0, 140, 573, 0, 0, 580, 0, 0,
	0, 494, 0, 505, 506, 0, 607, -2, 669, 359,
	0, 373, 376, 892, 0, 0, 507, 0, 510, 511,
	425, 485, 516, 517, 530, 467, 468, 465, 0, 0,
	1226, 1227, 1232, 1230, 1231, 121, 551, 553, 552, 556,
	0, 0, 489, 0, 489, 549, 0, 421, 1199, 0,
	677, 422, 423, 742, 742, 798, 95, 0, 801, 0,
	0, 0, 0, 953, 957, 856, 0, 0, 337, 337,
	1153, 337, 341, 1156, 337, 1158, 337, 1161, 337, 1164,
	1165, 0, 0, 0, 0, 1168, 1033, 1174, 0, 0,
	0, 0, 1044, 0, 0, 0, 0, 0, 0, 132,
	133, 1102, 0, 0, 1104, 1106, 1107, 1061, 1103, 0,
	0, 1100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1023, 1024, 0, 1177, 0, 0, 0, 0,
	928, 933, 933, 933, 0, 0, 0, 1300, 1301, 1179,
	1180, 937, 1181, 868, 847, 884, 1257, 0, 1250, 0,
	-2, 1259, 0, 0, 0, 1265, 860, 78, 938, 81,
	0, 1275, 1283, 0, 1266, 1277, 1279, 0, 0, 0,
	1271, 0, 937, 870, 899, 901, 0, 896, 911, 912,
	914, 0, 916, 0, 918, 919, 881, 875, 877, 0,
	0, 0, 98, 0, 937, 937, 97, 0, 924, 108,
	109, 110, 431, 172, 177, 0, 0, 0, 182, 0,
	184, 0, 0, 0, 189, 190, 371, 371, 406, 0,
	284, 286, 0, 0, 175, 349, 0, 349, 0, 342,
	0, 407, 427, 1200, 1201, 0, 0, 364, 368, 369,
	370, 0, 1307, 136, 0, 0, 0, 576, 0, 604,
	0, 0, 0, 0, 0, 0, 164, 486, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 0, 371, 0,
	0, 0, 371, 371, 371, 0, 661, 358, 0, 0,
	632, 629, 508, 0, 213, 214, 216, 0, 0, 515,
	881, 1217, 1218, 1219, 0, 1229, 1233, 124, 0, 0,
	0, 0, 563, 0, 488, 564, 674, 675, 676, 93,
	684, 690, 800, 820, 945, 954, 958, 0, 990, 1151,
	349, 1154, 1155, 1157, 1159, 1160, 1162, 1163, 991, 992,
	0, 1029, 0, 1031, 1194, 0, 1172, 0, 0, 1043,
	0, 0, 0, 1052, 1053, 1054, 0, 0, 1060, 0,
	1062, 0, 0, 0, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1025, 1085, 0, 1090, 0, 0,
	1096, 0, 0, 0, 0, 0, 905, -2, 62, 1181,
	1183, 0, 1244, 1242, 1242, 1252, 1253, 0, 0, 1260,
	0, 0, 0, 0, 82, 0, 0, 0, 1280, 0,
	0, 0, 0, 99, 1185, 893, 900, 0, 0, 894,
	0, 895, 915, 917, 874, -2, 878, 0, 937, 937,
	88, 89, 0, 178, 0, 180, 206, 207, 0, 183,
	185, 186, 187, 193, 194, 195, 188, 0, 0, 283,
	285, 0, 0, 325, 336, 326, 0, 0, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 881, 137, 138, 139,
	568, 0, 578, 0, 0, 0, 571, 0, 497, 0,
	0, 0, 371, 371, 371, 0, 0, 0, 0, 646,
	0, 0, 609, 0, 617, 0, 0, 0, 217, 218,
	0, 1228, 550, 0, 122, 123, 0, 0, 555, 490,
	491, 1140, 1152, 0, 0, 0, 1169, 0, 0, 0,
	0, 1050, 1058, 0, 1105, 0, 1065, 0, 0, 0,
	598, 599, 0, 1101, 0, 0, 0, 0, 0, 934,
	0, 0, 0, 0, 925, 1183, 80, 0, 0, 1247,
	0, 1240, 1243, 1241, 1254, 0, 0, 1261, 0, 1263,
	0, 1284, 1285, 1278, 0, 1270, 1273, 1269, 1272, 1194,
	897, 0, 902, 0, 1185, 87, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 192, 0, 0, 340, 343,
	0, 0, 0, 569, 0, 581, 572, 0, 659, 0,
	663, 0, 0, 0, 666, 667, 668, 645, 0, 649,
	399, 633, 630, 631, 509, 0, 125, 126, 0, 0,
	0, 0, 0, 0, 1028, 1030, 1032, 1041, 1042, 1149,
	1150, 1059, 1063, 0, 1066, 0, 0, 1067, 0, 600,
	1086, 0, 1091, 1092, 0, 1097, 0, 0, 930, 887,
	888, 935, 936, 0, 0, 880, 79, 1184, 1182, 1236,
	0, 1245, 1246, 1255, 1256, 1262, 0, 1268, 0, 85,
	0, 0, 0, 1194, 179, 0, 198, 0, 577, 0,
	580, 570, 657, 658, 0, 670, 662, 664, 665, 647,
	-2, 1220, 0, 0, 0, 557, 989, 0, 0, 0,
	1102, 1068, 0, 596, 597, 0, 0, 0, 0, 929,
	931, 932, 1248, 1249, 1276, 1274, 898, 905, 0, 86,
	412, 405, 1220, 0, 0, 0, 650, 651, 652, 653,
	654, 655, 656, 547, 1222, 127, 128, 478, 479, 480,
	121, 1141, 0, 1144, 0, 1087, 0, 1093, 0, 1098,
	0, 889, 890, 582, 0, 584, 0, -2, 400, 413,
	0, 173, 199, 200, 0, 0, 203, 204, 205, 196,
	197, 117, 0, 0, 671, 0, 1223, 1224, 124, 1142,
	1064, 0, 0, 0, 583, 0, 0, 355, 0, 593,
	401, 402, 0, 408, 409, 410, 411, 201, 202, 605,
	0, 0, 554, 0, 1088, 0, 1094, 0, 1099, 585,
	586, 594, 0, 403, 0, 404, 0, 0, 0, 574,
	0, 605, 1221, 0, 0, 0, 0, 595, 591, 414,
	416, 417, 0, 0, 415, 606, 575, 1143, 1089, 1095,
	0, 418, 419, 420, 587, 588, 589, 590,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 142, 3, 3, 3, 168, 160, 3,
	87, 89, 165, 163, 88, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 615,
	150, 149, 151, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 138, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 139, 140, 141, 143, 144, 145, 146,
	147, 148, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:530
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:535
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:536
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:540
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:576
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:582
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:595
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:599
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:605
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:611
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:617
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:621
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:626
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:630
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:636
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:640
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:646
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:652
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:656
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:660
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:720
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:724
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:765
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:792
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:799
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:805
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:825
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:837
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:849
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:853
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:859
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:865
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:869
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:873
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:877
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:882
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:883
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:887
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:897
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:901
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:907
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:911
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:920
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:926
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:942
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:946
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:952
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:956
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:960
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:966
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:970
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:974
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:978
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:984
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:988
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:994
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1000
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1016
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1020
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1027
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1031
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1036
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1046
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1051
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1056
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1062
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1067
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1073
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1078
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1082
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1088
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1092
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1098
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1104
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1111
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1118
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1123
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1128
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1133
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1140
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1147
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1158
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1169
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1175
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1179
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1183
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1205
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1211
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1215
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1221
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1225
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1231
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1235
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1241
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1245
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1251
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1261
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1266
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1275
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1299
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1308
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1317
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1330
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1334
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1340
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1346
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1351
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1356
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1361
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1366
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1371
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1380
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1385
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1394
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1400
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1406
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1410
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1416
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1420
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1424
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1430
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1434
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1439
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1443
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1448
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1454
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1460
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1465
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1470
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1476
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1484
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1499
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1503
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1507
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1518
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1525
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1529
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1535
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1539
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1543
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1547
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1551
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1555
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1559
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1564
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1568
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1572
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1761
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1765
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1769
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1775
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1779
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1783
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1789
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1793
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1800
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1804
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1808
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1812
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2034
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2039
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2043
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2048
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2052
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2060
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2064
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2070
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2078
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2082
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2086
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2091
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2095
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2116
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2142
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2151
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2157
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2161
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2167
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2171
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2176
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2180
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2184
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2188
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2192
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2196
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2212
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2216
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2220
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2224
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2228
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2233
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2237
		{
			yyVAL.str = yyDollar[2].str
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2247
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2267
		{
			yyVAL.str = "key"
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.str = yyDollar[1].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2286
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2296
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2300
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2306
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2310
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2316
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2320
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2326
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2330
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2336
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2342
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2346
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2350
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2354
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2358
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2367
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2373
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2379
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2385
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2389
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2393
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2398
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2402
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2408
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2414
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2420
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2424
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2428
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2432
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2436
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2455
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2459
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2464
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2468
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2473
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2477
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2483
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2487
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2491
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2497
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2501
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2507
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2511
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2515
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2519
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2523
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2527
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2531
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2535
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2539
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2543
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2547
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2551
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2555
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2559
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2563
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2567
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2571
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2575
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2579
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2583
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2587
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2591
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2595
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2599
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2603
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2607
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2611
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2615
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2619
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2623
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2627
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2632
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2636
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2672
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2691
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = ""
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2700
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2709
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2713
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2718
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2722
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2726
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2730
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2734
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 497:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2738
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2744
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2748
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2752
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2758
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2762
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2766
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2770
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2774
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2778
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2782
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2786
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2790
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2794
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2799
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2804
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2808
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2812
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2816
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2820
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2824
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2828
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2832
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2836
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2840
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2844
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2848
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2852
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2856
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2860
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2864
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2868
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2872
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2876
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2882
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2886
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2892
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2896
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2900
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2904
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2908
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2912
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2916
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2920
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2924
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2928
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2934
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2941
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2948
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2955
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2961
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2971
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2978
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2985
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2997
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3007
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3011
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3015
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3028
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3038
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3042
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3053
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3060
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3067
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3074
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3081
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3096
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3104
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3122
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3131
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3139
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3148
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3155
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3167
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3176
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3191
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3196
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3200
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3205
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3209
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3215
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3221
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3227
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3231
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3237
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3241
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3247
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3253
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3259
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3265
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3271
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3275
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3279
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3283
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3289
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3295
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3301
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3305
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3309
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3315
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3319
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3324
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3328
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3333
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3337
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3343
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3347
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3351
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3355
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3359
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3363
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3367
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3371
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3375
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3379
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3383
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3387
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3391
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3395
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3399
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3403
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3407
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3411
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3415
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3419
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3423
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3427
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3432
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3447
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3451
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3457
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3462
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3466
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3471
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3476
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3481
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3486
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3491
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3497
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3503
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3508
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3514
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3520
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3524
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3530
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3535
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3539
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3544
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3549
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3554
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3559
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3565
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3571
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3578
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3585
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3592
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3600
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3604
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3610
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3616
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3622
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3628
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3634
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3640
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3646
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3652
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3658
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3662
		{
			yyVAL.str = ""
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3668
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3674
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3678
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 675:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3684
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3688
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3697
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3701
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3707
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3711
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3716
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3722
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3726
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3734
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3742
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3750
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3754
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3762
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3766
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3770
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3774
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3778
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3782
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3786
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3790
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3798
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3802
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3810
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3814
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3818
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3822
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3826
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3830
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3834
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3838
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3842
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3846
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3850
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3854
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3858
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3862
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3866
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3870
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3874
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3878
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3882
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3886
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3893
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3897
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3913
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3931
		{
			yyVAL.str = ""
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3935
		{
			yyVAL.str = "extended "
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3941
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3945
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3951
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3955
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3961
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3965
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3969
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3979
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3983
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3989
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3993
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3999
		{
			yyVAL.empty = struct{}{}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.empty = struct{}{}
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.empty = struct{}{}
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4017
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4062
		{
			yyVAL.empty = struct{}{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4064
		{
			yyVAL.empty = struct{}{}
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4067
		{
			yyVAL.empty = struct{}{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4069
		{
			yyVAL.empty = struct{}{}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4074
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4085
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4089
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4093
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4097
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4101
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4105
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.str = yyDollar[1].str
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.str = yyDollar[1].str
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4119
		{
			yyVAL.str = yyDollar[1].str
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4142
		{
			yyVAL.str = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4166
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4170
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4182
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4186
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4192
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4198
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4202
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4206
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4210
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4216
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4222
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4232
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4236
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4240
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4244
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4248
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4254
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4258
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4264
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4272
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4288
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4296
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4313
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4317
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4321
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4326
		{
			yyVAL.str = ""
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4330
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4335
		{
			setAllowComments(yylex, true)
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4339
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4345
		{
			yyVAL.strs = nil
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4349
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4355
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4359
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4363
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4368
		{
			yyVAL.str = ""
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4372
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = SQLCacheStr
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4381
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4385
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4389
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4395
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4399
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4411
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4420
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4426
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4430
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4439
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4444
		{
			yyVAL.strs = nil
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4452
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4460
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.str = SQLCacheStr
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.str = DistinctStr
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.str = DistinctStr
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.str = StraightJoinHint
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4490
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4496
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4500
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4506
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4510
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4514
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4518
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4523
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4527
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4531
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4538
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4543
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4547
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4553
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4559
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4563
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4573
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4577
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4581
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4585
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4591
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4595
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4601
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4605
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4614
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4620
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4624
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4630
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4634
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4640
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4644
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4648
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4652
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4658
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4662
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4675
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4679
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4683
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4687
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4693
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4695
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4699
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4701
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4705
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4707
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4710
		{
			yyVAL.empty = struct{}{}
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.empty = struct{}{}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4715
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4719
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4723
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4736
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4740
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4744
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4750
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4756
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4760
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4764
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4768
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4774
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4778
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4788
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4792
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4798
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4802
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4808
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4817
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4823
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4827
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 929:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4833
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4837
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4841
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4845
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4850
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4854
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4858
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4862
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4872
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4879
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4883
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4887
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4891
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4895
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4899
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4903
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4907
		{
			yyLOCAL = &RLikeExpr{Expr: yyDollar[1].exprUnion(), Pattern: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4931
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4935
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4939
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4977
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5017
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5025
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5031
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5035
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5039
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5043
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5047
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5051
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5055
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5059
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5063
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5067
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5075
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5079
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5083
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5087
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5091
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5095
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5099
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5103
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5111
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5133
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5137
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5141
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5147
		{
			yyVAL.str = ""
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5151
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5157
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5161
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5168
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5172
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5176
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5180
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5186
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5190
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5194
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5198
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5202
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5206
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5210
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5216
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5220
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5224
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5231
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5237
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5241
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5330
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5334
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5447
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5451
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5455
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5459
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5463
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5467
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5471
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5475
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5479
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5491
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5499
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5503
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5507
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5511
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5526
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5530
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5534
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5543
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5555
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5564
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5568
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5572
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5576
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5582
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5586
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5591
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5595
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5601
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5605
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5611
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5615
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5621
		{
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5623
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5627
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5631
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5635
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5639
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5643
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5647
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5651
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5655
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5659
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5663
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5669
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5673
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5677
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5681
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5685
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5689
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5693
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5697
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5701
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5711
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5715
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5719
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5723
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5742
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5756
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5760
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5764
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5768
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5772
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5782
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5786
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5792
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5796
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5800
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5806
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5810
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5814
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5818
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5822
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5828
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5832
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5836
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5840
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5844
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5848
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5852
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5856
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5860
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5864
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5879
		{
			yyVAL.str = string("")
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5883
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5889
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5893
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5899
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5914
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5918
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5922
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5951
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5969
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5975
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5981
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5985
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5991
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5996
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6000
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6004
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6013
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6019
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6023
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6027
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6032
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6036
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6040
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6044
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6048
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6055
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6059
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6063
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6067
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6073
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6077
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6081
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6085
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6090
		{
			yyVAL.str = ""
		}
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6094
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6098
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6102
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6107
		{
			yyVAL.str = ""
		}
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6111
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6117
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6121
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6126
		{
			yyVAL.str = ""
		}
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6130
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6135
		{
			yyVAL.str = "cascaded"
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6139
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6143
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6152
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6158
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6164
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6170
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6179
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6183
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6188
		{
			yyVAL.str = ""
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6192
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6198
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6202
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6208
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6212
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6216
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6221
		{
			yyVAL.str = ""
		}
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6225
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6229
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6234
		{
			yyVAL.str = ""
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6238
		{
			yyVAL.str = " header"
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6243
		{
			yyVAL.str = ""
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6247
		{
			yyVAL.str = " manifest on"
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6251
		{
			yyVAL.str = " manifest off"
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6256
		{
			yyVAL.str = ""
		}
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6260
		{
			yyVAL.str = " overwrite on"
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6264
		{
			yyVAL.str = " overwrite off"
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6270
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6275
		{
			yyVAL.str = ""
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6279
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6285
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6289
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6295
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6299
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6304
		{
			yyVAL.str = ""
		}
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6308
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6314
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6318
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6324
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6328
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6332
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6337
		{
			yyVAL.str = ""
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6341
		{
			yyVAL.str = " optionally"
		}
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6354
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6358
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6362
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6366
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6370
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6376
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6380
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6384
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6388
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6397
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6403
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6407
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6413
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6417
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6423
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6438
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6442
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6448
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6454
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6458
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6464
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6468
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6472
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6476
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6480
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6488
		{
			yyVAL.str = "charset"
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6515
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6517
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6520
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6525
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6527
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6530
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6532
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6535
		{
			yyVAL.empty = struct{}{}
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6537
		{
			yyVAL.empty = struct{}{}
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6539
		{
			yyVAL.empty = struct{}{}
		}
	case 1313:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6543
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6552
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6557
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6559
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6563
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6569
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6573
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6580
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6586
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6590
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6596
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6600
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6607
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7135
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7144
		{
			decNesting(yylex)
		}
	case 1834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7149
		{
			skipToEnd(yylex)
		}
	case 1835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7154
		{
			skipToEnd(yylex)
		}
	case 1836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7158
		{
			skipToEnd(yylex)
		}
	case 1837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7162
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
